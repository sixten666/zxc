//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
	#emit stack 0x7FFFFFFF
	#emit inc.s cellmax
	static const ___[][] = {"AntiDeAMX"};
	#emit retn
	#emit load.s.pri ___
	#emit proc
	#emit proc
	#emit fill cellmax
	#emit proc
	#emit stor.alt ___
	#emit strb.i 2
	#emit switch 4
	#emit retn
	L1:
	#emit jump L1
	#emit zero cellmin
}

AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};

	new b;
	#emit load.pri b
	#emit stor.pri b

 	#pragma unused a
  	#pragma dynamic 400000
   	#pragma disablerecursion
}
//~~~~~~~~~~~~~~~~~~~~~~~~~[ Инклуды ]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
#include <a_samp>
#include <a_http>
#undef MAX_PLAYERS
#define MAX_PLAYERS (1000)
#include 	<streamer>
#include 	<Pawn.CMD>
#include 	<a_mysql>
#include 	<sscanf2>
#include 	<foreach>
#include 	<MD5>
#include 	<crashdetect>
//#include 	<Pawn.Raknet>
#include 	<mxdate>
#include 	<mxINI>
#include 	<fixobject>
#include 	<sampvoice>
#include 	<LauncherAddon>
#include    <TOTP>
#include 	<gvar>
#include 	<fly>
//#include 	<nex-ac>
#include 	<weapon-config>
/*============================================================================*/
//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define 	FullServName 		"Aurora Role Play by danil dolmatov"
#define 	GameModeName 		"Aurora RP Russian"
#define 	NameServer 			"Aurora-Rp"
#define 	BotName 			"Aurora Bot"
#define 	MicroName 			"Aurora"
#define 	NameSite 			"Aurora-Rp.Com"
#define 	DialSite 			"Aurora-rp.com"
#define 	DonateSite 			"Aurora-rp.com/donate"
#define 	GroupVK 			"vk.com/Aurora_state"
#define 	MusicReg 			"d.zaix.ru/3uZN.mp3"
#define 	RadioSite 			"Aurora RADIO"
#define 	RadioState 			"Aurora FM"
#define 	HostName 			"Aurora Role Play | Server: 01 | Client: 0.3.7-R3"
#define 	HostNameActions 	"Aurora RP | Server: 01 | Акция для новичков"
#define 	HostNameX2 			"Aurora RP | Server: 01 | X2-Server"
#define 	HostNameRestart 	"Aurora RP | Server: 01 | Перезагрузка сервера"
#define 	HostNameTest 		"Aurora RP | Server: 01 | Тестовый сервер"

#define 	LogoNameOne 		"usebox"
#define 	LogoNameTwo 		"Aurora roleplay"
#define 	LogoNameThree 		"please wait, loading"
#define 	LogoNameFour 		"usebox"
//=============================[ Настройка ФД ]================================//
#define FD1 				"NoName"//Создатель проекта
#define FD2 				"NoName"//Заместитель проекта
#define FD3					"NoName"//Член главной администрации
#define FD4					"Martys_Mcfly"//ГЛ.Разработчик мода Андрей Сотов
#define FD5 				"Andrey_Sotov"//Тест.Разработчик мода Андрей Сотов
#define FD6 				"Kate_Req"//Тест.Разработчик мода Андрей Сотов 2(Основа игрока)
/*============================================================================*/
//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define 	TABLE_ACCOUNTS  	"accounts"
#define 	TABLE_ADMIN 		"admin"
#define 	TABLE_OTHERS 		"others"
#define 	TABLE_BANIP     	"banip"
#define 	TABLE_BIZZ      	"bizz"
#define 	TABLE_HOUSE     	"house"
#define 	TABLE_ATM       	"atm"
#define 	TABLE_BAN       	"ban"
#define 	TABLE_GANGZONE  	"gangzone"
#define 	TABLE_CARS      	"cars"
#define 	TABLE_GREENZONE     "greenzone"
#define 	TABLE_TICKETS     	"tickets"
#define 	TABLE_FULLACCESS    "fullaccess"
#define 	T_PROMOCODE         "promocode"
#define 	T_PROMOCODE_USED    "promocode_used"
//~~~~~~~~~~~~~~~~~~~~~~~~~[ Технические настройки проекта ]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
#define DEVELNAME    		"й Сотов"			//ФИО глав.разработчика. Не трогать!!!
#define DEVELNICK     		""			//Ник глав.разработчика. Не трогать!!!
#define DEVELVKURL     		""	//Страница глав.разработчика. Не трогать!!!
#define DEVELYEAR     		"2022"					//Год последней реконструкции

#define CONTYPE_SERVER     	1						//Тип сервера: 1 - ОСНОВНОЙ, 2 - ТЕСТОВЫЙ, 3 - ЛОКАЛЬНЫЙ
/*============================================================================*/
//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define 	CADMIN_INFO 0xAFAFAFAA
native 		IsValidVehicle(vehicleid);

#define cInfo 	"{FFFF00}| {ffffff}" //Цвет подсказки
#define cError 	"{AA3333}| {ffffff}" //Цвет ошибки
#define cMain 	"{DC143C}"
#define cServer "{DC143C}"
#define cDonate "{73B461}"

#define 	D_NULL      0
#define 	D_ALLFULLACCESS 19000
#define 	D_LAUNCHER_ADDON 20000

#define 	GetFullName(%0) 						FCI[%0][fullaccess_player]
#define 	GetName(%0) 							player_name[%0]

#define 	HOLDING(%0) 							((newkeys & (%0)) == (%0))
#define 	PRESSED(%0) 							(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define 	RELEASED(%0) 							(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

#define 	armylv_mats_pos 						0.0 0.0 0.0
#define 	yakuza_mats_pos 						0.0 0.0 0.0
						
////////////////////////////////////////////////////////////////////////////////
#define cSV              d99c31 //???????? ???? ???????(04c77f) 009999
#define cER             "{FF0000}|{FFFFFF} " //???? ??????
#define cPS             "{FFFF00}|{FFFFFF} " //???? ?????????
#define cDA             "{63BD4E}|{FFFFFF} " //???? ?????
#define aAC             "{0000CC}|{FFFFFF} " //???? ???????
#define cAD             "{ff0033}" //???? ?????????

#define DELLWORLD 1000000 //Нужен для того чтобы скрыть данный пикап чтобы его не видели игроки

#define 	KEY_NUM4								(8192)
#define 	KEY_NUM6 								(16384)

#define		MAX_TELEPORTS                       	57
#define 	MAX_ACTORSS 							37
#define 	MAX_ADVERT_COUNT 						35
#define 	RES_CAR_TIME    						1800

#define 	MAX_HOUSE_COUNT 						3000 //кол-во домов
#define 	FAMILY_COUNT 							500	//кол-во семей
#define 	HOTEL_COUNT 							4	//кол-во отелей
#define 	AIR_COUNT 								3	//кол-во аэроп
#define 	SHOP_OBJECTS 							11	//кол-во предметов в 24/7
#define 	BINT_COUNT 								100	//кол-во интерьеров бизнесов
#define 	MAX_BUSINESS_COUNT 						1000	//кол-во бизнесов
#define 	BUSINESS_TYPE_COUNT 					18	//кол-во типов бизнесов
#define 	SHOP_COUNT 								8	//кол-во 24-7
#define 	MAX_OST 								500 //кол-во остановок
#define 	AUTO_CP_COUNT 							29	//кол-во чекпоинтов АШ
#define	 	MAX_OBJECT_MOVED 						54	//кол-во MOVED
#define 	TP_COUNT 								144	//кол-во пикапов входы/выходы
#define 	PICKUPS_COUNT 							98	//кол-во пикапов
#define 	MAX_FUNCBIZZ							1000	//кол-во функци. бизнесов
#define 	MAX_CARSBIZZ							3000 //кол-во транспортов. бизнесов
#define 	MAX_ATM 								16 //кол-во ATM
#define 	MAX_ENTER_PICKUPS 						200 //кол-во пикапов
#define 	MOROZ_BALLAS 							0	//ballas
#define 	MOROZ_VAGOS 							1	//vagos
#define 	MOROZ_GROVE 							2	//grove
#define 	MOROZ_RIFA 								3	//rifa
#define 	MOROZ_AZTECAS 							4	//aztec
#define 	MAX_ATTEMPT_GANG 						5	//кол-во раз для капта
#define 	MAX_BILLBORDS 							50	//кол-во билбордов
#define 	MAX_OGRAD 								500
#define 	MAX_CROBJECTS 							100000 //кол-во статик объектов
#define 	MAX_CRDYNOBJECTS 						100000 //кол-во динам объектов
#define 	MAX_AREAS 								100000 //кол-во арей сервера
/*============================================================================*/
//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#define VEHICLE_STATE_CAR   0
#define VEHICLE_STATE_BIKE  1
#define VEHICLE_STATE_VELIK 2
#define VEHICLE_STATE_PLANE 3
#define VEHICLE_STATE_BOAT  4

#define VEHICLE_TYPE_NONE 0
#define VEHICLE_TYPE_PLAYER 1
#define VEHICLE_TYPE_FRACTION 2
#define VEHICLE_TYPE_BIZZ 3
#define VEHICLE_TYPE_JOB 4
#define VEHICLE_TYPE_RENT 5
#define VEHICLE_TYPE_ADMIN 6
#define VEHICLE_TYPE_TRAILER 7
#define VEHICLE_TYPE_BUY 8
#define VEHICLE_TYPE_AIR 9
#define VEHICLE_TYPE_AUTOSCHOOL 10
#define VEHICLE_TYPE_SPAWN 11
#define VEHICLE_TYPE_RACE 12
#define VEHICLE_TYPE_INVENT 13
#define VEHICLE_TYPE_AUTOSALON 14
#define VEHICLE_TYPE_ALCATRAZ 15

#define CONVERT_TIME_TO_SECONDS 	1
#define CONVERT_TIME_TO_MINUTES 	2
#define CONVERT_TIME_TO_HOURS 		3
#define CONVERT_TIME_TO_DAYS 		4
#define CONVERT_TIME_TO_MONTHS 		5
#define CONVERT_TIME_TO_YEARS 		6

#define JOB_NONE 0
#define JOB_BUS 1
#define JOB_MECH 2
#define JOB_RAZV 3
#define JOB_REAT 4
#define JOB_CLEAN 5
#define JOB_CLEAR 6
#define JOB_NEFT 50
#define JOB_FISH 70

#define CAR_ALCATRASS 71

#define VIP_NONE 0
#define VIP_BAZE 1
#define VIP_SILVER 2
#define VIP_GOLD 3
#define VIP_PLATINA 4
#define VIP_ECSCLUSIVE 5
#define VIP_FOREVER 6
#define VIP_KING 7

#define MINISTRE_NEWS 6
#define MINISTRE_MEDICS 7
#define MINISTRE_ARMY 8
#define MINISTRE_PD 9
#define MINISTRE_YUST 10
/*============================================================================*/
#define 	CB:%0(%1)					forward %0(%1); public %0(%1)
#define 	format:%0(		    		%0[0] = EOS,format(%0,sizeof(%0),
#define 	GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))

#if !defined FALSE
new stock
bool:FALSE = false;
#endif

#define SendMes(%1,%2,%3,%4) do{new _s[128]; format(_s,128,%3,%4); SendClientMessage(%1,%2,_s); }while(FALSE)

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
/*============================================================================*/
#define  	DSM 			DIALOG_STYLE_MSGBOX
#define 	DSI				DIALOG_STYLE_INPUT
#define 	DSL				DIALOG_STYLE_LIST
#define 	DSP				DIALOG_STYLE_PASSWORD
#define 	DST				DIALOG_STYLE_TABLIST
#define 	DSTH			DIALOG_STYLE_TABLIST_HEADERS
/*============================================================================*/
#define dip_status_neutral 0
#define dip_status_war 1
#define dip_status_alliance 2
#define dip_status_alliance_invite 3
#define dip_status_alliance_get_invite 4
/*============================================================================*/

// ------------------------------------------
#define GetPlayerGPSInfo(%0,%1) 	g_player_gps[%0][%1]
#define SetPlayerGPSInfo(%0,%1,%2) 	g_player_gps[%0][%1] = %2
// ------------------------------------------

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ Переменные ]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
new SV_GSTREAM:gstream;
new SV_LSTREAM:lstream[MAX_PLAYERS] = { SV_NULL, ... };

/*====[Переменные]====*/
new PlayerVehicle[MAX_PLAYERS];
new Interface[10];
new InterfaceSelect[MAX_PLAYERS];

new PlayerTrailer[MAX_PLAYERS];
new TK_Trailer[MAX_PLAYERS];
new STRING_GLOBAL[2048];
new dialog_string[1024];

new 		MySQL:connects;
new 		SELECT_SERVER = 1;

new object_park_ls[404];

new timer_job_mower[MAX_PLAYERS];
//количество убранных чекпоинтов по зонам
new check_taxi_park;
new check_verona_beach;
new check_white_house;
new check_medic_ls;
new check_mayor_ls;
new check_glenpark_1;
new check_glenpark_2;

//~~~~~~~~~~~~~~~~~~~~[ Носитель стандартных значений ]~~~~~~~~~~~~~~~~~~~~~~~~~//
new ADD_VEHICLES_LASTS = 0;
new ADD_VEHICLES_ORGS = 0;
new ADD_VEHICLES_BIZES = 0;
new ADD_VEHICLES_JOBS = 0;
new ADD_VEHICLES_SPAWNS = 0;
new ADD_VEHICLES_BUS = 0;
new ADD_VEHICLES_SALONS = 0;
new ADD_VEHICLES_STATICS = 0;
new ADD_ALL_VEHICLES = 0;

new TotalGZ[5],
    TotalFamily = 0,
	TOTALGZ = 0,
	TOTALSTYLELIST = 0,
	TotalObject=0,
	TotalDynObject=0,
	TotalArea=0,
	TotalActor=0,
	Text3D:black_market,
	black_prods[10];

new bool: status_check_job_mower[404] = { false, ... };
new bool: status_restore_check_job_mower[404] = { false, ... };

new Float:dice_area_pos[3][3]=
{
	{559.0563,-697.5030,1126.6760},
	{562.5164,-697.3690,1126.6760},
	{566.0385,-697.3423,1126.6760}
},
casino_formatted_string[1024];
	
new Float:check_job_mower[404][8]=
{
	{1890.8467, -2417.8303, 5.7189, 0.000000, 0.000000, 85.465836 },//Участок №1 Таксопарк LS -- 1 начало кол-во 33
	{1891.6643, -2412.1272, 5.7155, 0.000000, 0.000000, 89.665298},
	{1897.0765, -2411.9209, 5.7271, 0.000000, 0.000000, 90.542618},
	{1897.5266, -2405.0471, 5.9293, 0.000000, 0.000000, 90.835068},
	{1903.8541, -2404.7991, 5.5129, 0.000000, 0.000000, 92.004852},
	{1904.4078, -2398.0635, 7.3418, 0.000000, 0.000000, 92.589752},
	{1911.4448, -2397.1616, 7.9144, 0.000000, 0.000000, 92.589752},
	{1911.2300, -2390.8362, 8.3429, 0.000000, 0.000000, 92.589752},
	{1905.4097, -2389.0413, 8.1057, 0.000000, 0.000000, 92.589752},
	{1901.2498, -2383.8455, 7.3018, 0.000000, 0.000000, 92.589752},
	{1907.4818, -2377.3999, 7.9173, 0.000000, 0.000000, 183.248245},
	{1902.9357, -2370.9153, 7.6529, 0.000000, 0.000000, 183.248245},
	{1909.7927, -2363.7849, 7.3729, 0.000000, 0.000000, 193.191528},
	{1917.7062, -2366.5056, 7.6028, 0.000000, 0.000000, 350.820526},
	{1924.5452, -2361.9363, 8.2164, 0.000000, 0.000000, 357.254486},
	{1928.2855, -2368.1770, 8.0127, 0.000000, 0.000000, 2.225895},
	{1932.1127, -2371.3088, 7.6348, 0.000000, 0.000000, 308.123230},
	{1939.6857, -2367.9463, 7.3320, 0.000000, 0.000000, 273.614532},
	{1946.2362, -2363.9912, 6.9581, 0.000000, 0.000000, 270.984955},
	{1947.3042, -2370.1021, 6.7658, 0.000000, 0.000000, 276.833954},
	{1954.9301, -2365.7805, 6.7588, 0.000000, 0.000000, 265.428497},
	{1964.0759, -2367.4797, 6.9752, 0.000000, 0.000000, 269.230377},
	{1971.3459, -2362.9463, 6.6328, 0.000000, 0.000000, 265.136047},
	{1975.0833, -2369.3806, 7.1963, 0.000000, 0.000000, 266.013336},
	{1972.8917, -2375.9817, 7.2836, 0.000000, 0.000000, 269.522675},
	{1965.0327, -2383.1423, 6.6505, 0.000000, 0.000000, 87.620552},
	{1973.4644, -2377.7231, 7.2715, 0.000000, 0.000000, 101.658020},
	{1974.7007, -2368.4890, 7.1450, 0.000000, 0.000000, 101.658020},
	{1961.2668, -2354.5190, 6.2189, 0.000000, 0.000000, 101.658020},
	{1949.9036, -2353.4314, 6.1165, 0.000000, 0.000000, 101.658020},
	{1941.3040, -2352.1602, 6.2657, 0.000000, 0.000000, 8.077275},
	{1935.9451, -2357.0432, 7.5132, 0.000000, 0.000000, 280.927979},
	{1929.6163, -2357.9426, 8.0891, 0.000000, 0.000000, 276.396271},
	{1159.3556, -1960.6532, 1.0284, 0.000000, 0.000000, 191.964981},//Участок №2 Verona Beach -- 34 начало кол-во 47
	{1159.5636, -1967.7441, 0.5677, 0.000000, 0.000000, 195.474335},
	{1154.3976, -1967.1614, 1.6904, 0.000000, 0.000000, 165.644714},
	{1164.1901, -1966.1316, 0.8142, 0.000000, 0.000000, 170.031387},
	{1171.8339, -1960.4858, 0.9055, 0.000000, 0.000000, 170.031387},
	{1178.3575, -1961.7108, 0.4281, 0.000000, 0.000000, 266.538940},
	{1179.3859, -1966.8549, 0.3979, 0.000000, 0.000000, 278.529266},
	{1176.5858, -1971.3977, 0.5067, 0.000000, 0.000000, 269.170959},
	{1178.6984, -1977.0121, 0.3243, 0.000000, 0.000000, 269.170959},
	{1163.8141, -1977.2521, 0.6201, 0.000000, 0.000000, 276.189667},
	{1157.1931, -1975.5641, 0.9304, 0.000000, 0.000000, 90.195747},
	{1148.2800, -1974.2330, 3.1878, 0.000000, 0.000000, 89.903297},
	{1148.0066, -1968.4794, 3.3357, 0.000000, 0.000000, 89.903297},
	{1141.3479, -1973.7197, 5.0761, 0.000000, 0.000000, 89.903297},
	{1137.5619, -1967.1603, 6.0803, 0.000000, 0.000000, 89.903297},
	{1132.8760, -1971.7893, 6.9595, 0.000000, 0.000000, 265.663971},
	{1134.7759, -1980.0394, 6.4430, 0.000000, 0.000000, 143.713577},
	{1131.3931, -1985.5385, 6.8687, 0.000000, 0.000000, 272.097870},
	{1133.4242, -1991.8142, 6.3512, 0.000000, 0.000000, 282.623566},
	{1127.3812, -1998.0480, 6.9115, 0.000000, 0.000000, 270.340820},
	{1129.8856, -2004.7930, 5.6022, 0.000000, 0.000000, 241.096100},
	{1128.1017, -2011.9032, 5.3327, 0.000000, 0.000000, 262.737183},
	{1132.4667, -2016.5541, 3.5318, 0.000000, 0.000000, 272.680359},
	{1138.1229, -2009.7899, 2.8650, 0.000000, 0.000000, 253.963760},
	{1144.0231, -2004.7480, 2.2683, 0.000000, 0.000000, 263.029633},
	{1150.1270, -1994.8757, 2.2846, 0.000000, 0.000000, 262.152283},
	{1158.2448, -1992.4928, 0.4102, 0.000000, 0.000000, 3.923810},
	{1164.0193, -1990.0870, 0.3138, 0.000000, 0.000000, 84.931755},
	{1167.9412, -1994.0673, 0.8170, 0.000000, 0.000000, 82.299736},
	{1174.5721, -1991.6376, 0.3239, 0.000000, 0.000000, 82.592186},
	{1167.7396, -2004.0348, 0.6615, 0.000000, 0.000000, 82.592186},
	{1170.3795, -2008.6962, 0.3919, 0.000000, 0.000000, 49.545647},
	{1162.8536, -2010.4761, 0.8433, 0.000000, 0.000000, 277.651978},
	{1167.8807, -2016.7936, 0.3251, 0.000000, 0.000000, 249.284592},
	{1162.9084, -2021.8888, 0.3407, 0.000000, 0.000000, 275.604797},
	{1157.4172, -2019.4351, 0.3212, 0.000000, 0.000000, 248.992126},
	{1155.4100, -2013.5255, 0.9706, 0.000000, 0.000000, 260.397644},
	{1148.5646, -2013.8657, 0.7019, 0.000000, 0.000000, 254.548706},
	{1146.3998, -2007.3615, 1.3239, 0.000000, 0.000000, 155.994034},
	{1139.1113, -2009.1633, 2.6942, 0.000000, 0.000000, 268.001343},
	{1134.6656, -2005.0841, 4.7327, 0.000000, 0.000000, 313.986755},
	{1130.0806, -2010.3384, 4.9977, 0.000000, 0.000000, 339.867279},
	{1125.6064, -2017.3508, 5.6054, 0.000000, 0.000000, 266.244324},
	{1121.7975, -2023.4340, 6.4815, 0.000000, 0.000000, 306.309540},
	{1121.1060, -2030.1947, 6.3363, 0.000000, 0.000000, 51.516762},
	{1124.6266, -2034.0789, 5.1060, 0.000000, 0.000000, 278.234528},
	{1130.4415, -2033.4509, 3.1533, 0.000000, 0.000000, 258.932953},
	{-776.4783, -2464.3901, 23.2452, 0.000000, 0.000000, 274.744751},//Участок №3 Белый Дом -- 82 начало кол-во 59
	{-779.4479, -2469.7727, 23.4645, 0.000000, 0.000000, 274.744751},
	{-783.5554, -2479.2654, 23.9281, 0.000000, 0.000000, 274.744751},
	{-778.3809, -2485.8347, 24.0444, 0.000000, 0.000000, 275.037201},
	{-776.0146, -2494.5049, 23.9911, 0.000000, 0.000000, 275.037201},
	{-785.6347, -2499.0142, 24.0897, 0.000000, 0.000000, 275.037201},
	{-791.2399, -2493.3743, 24.1091, 0.000000, 0.000000, 275.037201},
	{-798.9406, -2493.2810, 23.8926, 0.000000, 0.000000, 93.429955},
	{-798.1504, -2485.2815, 23.8005, 0.000000, 0.000000, 93.429955},
	{-800.9386, -2479.4412, 23.5547, 0.000000, 0.000000, 63.015461},
	{-797.0385, -2474.1611, 23.5142, 0.000000, 0.000000, 107.762276},
	{-796.3496, -2506.5083, 24.1772, 0.000000, 0.000000, 273.869812},
	{-803.6612, -2509.1331, 24.3046, 0.000000, 0.000000, 273.869812},
	{-807.6151, -2515.1663, 24.6983, 0.000000, 0.000000, 273.869812},
	{-813.4542, -2509.3296, 24.2803, 0.000000, 0.000000, 273.869812},
	{-820.4036, -2516.5142, 24.5756, 0.000000, 0.000000, 87.875862},
	{-818.8893, -2522.5313, 24.9649, 0.000000, 0.000000, 195.203979},
	{-811.8632, -2527.3330, 25.4725, 0.000000, 0.000000, 246.674683},
	{-805.7046, -2531.1963, 25.5722, 0.000000, 0.000000, 138.469223},
	{-814.8822, -2537.4946, 25.6061, 0.000000, 0.000000, 279.133911},
	{-822.2100, -2537.8281, 25.1310, 0.000000, 0.000000, 273.869812},
	{-795.8381, -2537.1394, 25.3333, 0.000000, 0.000000, 279.426270},
	{-789.0084, -2534.1577, 24.6573, 0.000000, 0.000000, 351.368286},
	{-783.0089, -2538.3000, 24.2513, 0.000000, 0.000000, 6.867984},
	{-787.1119, -2542.8489, 24.7205, 0.000000, 0.000000, 87.583389},
	{-791.3771, -2547.1116, 25.0760, 0.000000, 0.000000, 86.706039},
	{-797.9705, -2550.4744, 25.5311, 0.000000, 0.000000, 169.468613},
	{-802.3976, -2557.3147, 25.4644, 0.000000, 0.000000, 265.098755},
	{-811.4656, -2557.9280, 25.3263, 0.000000, 0.000000, 349.908356},
	{-809.8254, -2567.1155, 25.0636, 0.000000, 0.000000, 349.908356},
	{-815.5001, -2574.7744, 24.8573, 0.000000, 0.000000, 265.391174},
	{-818.9475, -2563.6392, 24.7767, 0.000000, 0.000000, 181.166168},
	{-826.6953, -2564.9885, 24.3799, 0.000000, 0.000000, 181.166168},
	{-835.8345, -2570.5225, 24.3195, 0.000000, 0.000000, 181.166168},
	{-846.5738, -2562.9448, 23.6927, 0.000000, 0.000000, 283.011688},
	{-857.0828, -2567.8442, 23.8036, 0.000000, 0.000000, 283.011688},
	{-863.9605, -2565.4434, 23.6608, 0.000000, 0.000000, 283.011688},
	{-874.2700, -2570.4194, 23.6018, 0.000000, 0.000000, 182.338501},
	{-882.7439, -2563.3215, 23.2813, 0.000000, 0.000000, 175.319931},
	{-892.3577, -2564.3975, 22.9104, 0.000000, 0.000000, 272.704773},
	{-894.8873, -2555.7280, 22.2104, 0.000000, 0.000000, 271.535004},
	{-906.5123, -2547.7710, 20.6416, 0.000000, 0.000000, 291.713806},
	{-903.0585, -2537.8213, 21.7501, 0.000000, 0.000000, 351.373016},
	{-913.2758, -2533.5933, 22.0390, 0.000000, 0.000000, 356.929474},
	{-912.4408, -2528.0129, 22.7739, 0.000000, 0.000000, 17.400789},
	{-918.5028, -2528.4863, 22.7084, 0.000000, 0.000000, 94.899277},
	{-923.2740, -2525.2305, 23.0391, 0.000000, 0.000000, 94.899277},
	{-925.8444, -2529.7839, 22.9910, 0.000000, 0.000000, 94.899277},
	{-929.8962, -2522.0881, 23.1844, 0.000000, 0.000000, 175.907089},
	{-932.8644, -2514.9302, 23.1857, 0.000000, 0.000000, 267.443115},
	{-937.7484, -2523.2097, 23.1766, 0.000000, 0.000000, 317.744019},
	{-944.2294, -2522.2258, 23.1766, 0.000000, 0.000000, 196.014725},
	{-948.6064, -2526.4666, 23.1964, 0.000000, 0.000000, 93.439453},
	{-946.6694, -2531.4968, 23.2467, 0.000000, 0.000000, 86.713173},
	{-943.0208, -2539.5901, 23.3902, 0.000000, 0.000000, 84.666039},
	{-949.1838, -2540.1289, 23.5608, 0.000000, 0.000000, 89.637634},
	{-951.0508, -2535.5161, 23.3820, 0.000000, 0.000000, 93.439468},
	{-952.4733, -2529.8757, 23.2917, 0.000000, 0.000000, 82.326462},
	{-960.9209, -2529.2683, 23.2641, 0.000000, 0.000000, 135.551834},
	{-1342.8241, -974.6783, 47.5818, 0.000000, 0.000000, 202.588028},//Участок №4 Больница ЛС -- 142 начало кол-во 38
	{-1351.5629, -985.6893, 47.5824, 0.000000, 0.000000, 178.607315},
	{-1359.6940, -979.4043, 47.5587, 0.000000, 0.000000, 180.946472},
	{-1369.6135, -985.1692, 47.5356, 0.000000, 0.000000, 180.654312},
	{-1376.0457, -977.0294, 47.5068, 0.000000, 0.000000, 185.333450},
	{-1374.5887, -966.7259, 47.4893, 0.000000, 0.000000, 177.144867},
	{-1385.1627, -963.3544, 47.4444, 0.000000, 0.000000, 177.144867},
	{-1382.9906, -952.4218, 47.2203, 0.000000, 0.000000, 177.144867},
	{-1392.9589, -951.3771, 47.0749, 0.000000, 0.000000, 182.993820},
	{-1397.7107, -941.4318, 47.0235, 0.000000, 0.000000, 182.993820},
	{-1406.5424, -946.3961, 45.9967, 0.000000, 0.000000, 182.993698},
	{-1412.8861, -947.4155, 45.9723, 0.000000, 0.000000, 182.993698},
	{-1412.2339, -939.6901, 45.9529, 0.000000, 0.000000, 267.218567},
	{-1419.9995, -943.0654, 45.9248, 0.000000, 0.000000, 267.218567},
	{-1424.4293, -936.1922, 45.8792, 0.000000, 0.000000, 4.603386},
	{-1432.9109, -942.5488, 45.8596, 0.000000, 0.000000, 68.356842},
	{-1435.1766, -933.0349, 45.8050, 0.000000, 0.000000, 39.112122},
	{-1446.3751, -934.8894, 45.7523, 0.000000, 0.000000, 1.386210},
	{-1447.7031, -928.2433, 45.7190, 0.000000, 0.000000, 355.537537},
	{-1456.7483, -930.8973, 45.6743, 0.000000, 0.000000, 3.433477},
	{-1458.3158, -922.1545, 45.6337, 0.000000, 0.000000, 358.754486},
	{-1466.7650, -926.0242, 45.5953, 0.000000, 0.000000, 358.754486},
	{-1472.5698, -915.9989, 45.5232, 0.000000, 0.000000, 354.660126},
	{-1475.1477, -906.4493, 45.4658, 0.000000, 0.000000, 9.282518},
	{-1469.7795, -903.8026, 45.4876, 0.000000, 0.000000, 28.293932},
	{-1458.0699, -913.2336, 45.6005, 0.000000, 0.000000, 335.365875},
	{-1459.0483, -921.4210, 45.6262, 0.000000, 0.000000, 182.123581},
	{-1465.7067, -931.0034, 45.6199, 0.000000, 0.000000, 169.840775},
	{-1479.4106, -933.5772, 45.5403, 0.000000, 0.000000, 251.433502},
	{-1478.5667, -945.6631, 45.5777, 0.000000, 0.000000, 171.157913},
	{-1473.8910, -952.2091, 45.6326, 0.000000, 0.000000, 187.097488},
	{-1481.9011, -960.4679, 45.5745, 0.000000, 0.000000, 187.097488},
	{-1478.0151, -970.6288, 45.6413, 0.000000, 0.000000, 183.880508},
	{-1486.1422, -977.6748, 45.5777, 0.000000, 0.000000, 170.720444},
	{-1487.4957, -992.2599, 45.5980, 0.000000, 0.000000, 170.720444},
	{-1498.6511, -996.2110, 45.5103, 0.000000, 0.000000, 170.720444},
	{-1505.0265, -987.0029, 45.1972, 0.000000, 0.000000, 170.135544},
	{-1514.4762, -990.5783, 44.9612, 0.000000, 0.000000, 101.702904},
	{-1725.7041, -1463.8871, 46.0058, 0.000000, 0.000000, 342.674561},//Участок №5 Мэрия -- 181 начало кол-во 50
	{-1718.1086, -1462.7271, 46.0842, 0.000000, 0.000000, 354.957367},
	{-1717.8221, -1468.3315, 45.4162, 0.000000, 0.000000, 265.760956},
	{-1710.7119, -1462.8181, 46.0434, 0.000000, 0.000000, 286.524658},
	{-1707.0798, -1471.6936, 44.9070, 0.000000, 0.000000, 240.025543},
	{-1707.8070, -1477.7635, 44.0694, 0.000000, 0.000000, 0.513200},
	{-1699.1143, -1476.9059, 44.4865, 0.000000, 0.000000, 3.730666},
	{-1697.5551, -1483.5435, 43.7958, 0.000000, 0.000000, 354.080048},
	{-1688.8004, -1487.1813, 44.1512, 0.000000, 0.000000, 0.513200},
	{-1679.3364, -1482.1295, 45.5382, 0.000000, 0.000000, 0.513200},
	{-1680.8170, -1475.9805, 46.0256, 0.000000, 0.000000, 2.560938},
	{-1675.4003, -1489.9869, 45.7083, 0.000000, 0.000000, 2.560938},
	{-1680.1245, -1497.6617, 44.9041, 0.000000, 0.000000, 2.560938},
	{-1687.5511, -1500.7456, 44.0801, 0.000000, 0.000000, 92.561005},
	{-1693.2861, -1508.9320, 43.7881, 0.000000, 0.000000, 109.889061},
	{-1703.9901, -1507.4734, 43.1378, 0.000000, 0.000000, 93.219574},
	{-1707.9115, -1498.0485, 42.7568, 0.000000, 0.000000, 253.480637},
	{-1702.7346, -1489.1235, 43.1870, 0.000000, 0.000000, 267.810577},
	{-1692.2369, -1489.7546, 43.5930, 0.000000, 0.000000, 189.142334},
	{-1686.1238, -1501.8047, 44.2927, 0.000000, 0.000000, 189.142334},
	{-1689.1481, -1511.9376, 44.5932, 0.000000, 0.000000, 189.142334},
	{-1699.4231, -1511.8055, 43.6788, 0.000000, 0.000000, 189.142334},
	{-1704.4076, -1509.2719, 43.2596, 0.000000, 0.000000, 189.142334},
	{-1712.9308, -1515.2633, 43.4692, 0.000000, 0.000000, 189.142334},
	{-1723.6144, -1516.9666, 43.4252, 0.000000, 0.000000, 99.068604},
	{-1735.3196, -1518.2811, 43.3298, 0.000000, 0.000000, 173.350189},
	{-1740.1165, -1509.8628, 43.2813, 0.000000, 0.000000, 78.304871},
	{-1741.5098, -1500.4191, 43.5362, 0.000000, 0.000000, 15.428750},
	{-1736.9780, -1493.2949, 43.8713, 0.000000, 0.000000, 112.228752},
	{-1733.3872, -1483.9207, 44.1872, 0.000000, 0.000000, 26.541758},
	{-1724.9303, -1485.5303, 43.7642, 0.000000, 0.000000, 333.608795},
	{-1717.7852, -1490.0824, 43.2057, 0.000000, 0.000000, 354.372559},
	{-1707.5845, -1482.3837, 43.5621, 0.000000, 0.000000, 354.372559},
	{-1697.5002, -1475.7775, 44.6936, 0.000000, 0.000000, 354.372559},
	{-1692.6598, -1484.0571, 43.9686, 0.000000, 0.000000, 354.372559},
	{-1680.3781, -1483.7443, 45.3217, 0.000000, 0.000000, 354.372559},
	{-1670.3656, -1476.6544, 47.2714, 0.000000, 0.000000, 354.372559},
	{-1669.2611, -1489.2096, 46.7425, 0.000000, 0.000000, 354.372559},
	{-1675.5294, -1500.1174, 45.7011, 0.000000, 0.000000, 281.260742},
	{-1672.3782, -1496.8484, 46.1371, 0.000000, 0.000000, 281.260742},
	{-1681.7806, -1500.5410, 44.7904, 0.000000, 0.000000, 305.826324},
	{-1692.0193, -1495.6394, 43.3766, 0.000000, 0.000000, 61.342930},
	{-1691.1261, -1504.7180, 43.7658, 0.000000, 0.000000, 96.144135},
	{-1687.6757, -1510.0647, 44.5872, 0.000000, 0.000000, 96.144135},
	{-1680.5808, -1516.8744, 46.0513, 0.000000, 0.000000, 177.736877},
	{-1675.1731, -1519.2261, 46.9779, 0.000000, 0.000000, 177.151932},
	{-1669.7765, -1523.3190, 48.1408, 0.000000, 0.000000, 177.151932},
	{-1674.8917, -1525.2686, 47.6145, 0.000000, 0.000000, 177.151932},
	{-1680.3221, -1521.7218, 46.5571, 0.000000, 0.000000, 178.614212},
	{-1688.5372, -1519.8667, 45.4272, 0.000000, 0.000000, 178.614212},
	{-2447.5164, -556.9722, 27.5425, 0.000000, 0.000000, 271.902435},//Участок № 6 Глен Парк сторона 1 -- 232 начало кол-во 96
	{-2451.7944, -548.2481, 27.2383, 0.000000, 0.000000, 270.437866},
	{-2446.7837, -550.2020, 27.6900, 0.000000, 0.000000, 270.437866},
	{-2440.9087, -552.7661, 29.0879, 0.000000, 0.000000, 270.437866},
	{-2438.8623, -556.5518, 29.1639, 0.000000, 0.000000, 270.437866},
	{-2440.5923, -563.0818, 28.9707, 0.000000, 0.000000, 270.437866},
	{-2440.7896, -571.9385, 28.8063, 0.000000, 0.000000, 270.437866},
	{-2441.0596, -578.9620, 28.7439, 0.000000, 0.000000, 270.437866},
	{-2441.7852, -585.7979, 28.6125, 0.000000, 0.000000, 270.437866},
	{-2438.7991, -591.7909, 28.7507, 0.000000, 0.000000, 270.437866},
	{-2434.8633, -591.0318, 29.0253, 0.000000, 0.000000, 134.086182},
	{-2432.0725, -586.5955, 29.2181, 0.000000, 0.000000, 81.519363},
	{-2431.7986, -575.9991, 29.3451, 0.000000, 0.000000, 104.915138},
	{-2430.9199, -562.5784, 29.5220, 0.000000, 0.000000, 32.388256},
	{-2425.9526, -553.2115, 30.1746, 0.000000, 0.000000, 58.416039},
	{-2419.2344, -554.9968, 30.6076, 0.000000, 0.000000, 53.444431},
	{-2417.2546, -559.8275, 30.5949, 0.000000, 0.000000, 139.423889},
	{-2415.4827, -565.9505, 30.5459, 0.000000, 0.000000, 196.743561},
	{-2412.0796, -571.6240, 30.7728, 0.000000, 0.000000, 217.799789},
	{-2405.7734, -569.1243, 31.3652, 0.000000, 0.000000, 275.704315},
	{-2405.1106, -562.4593, 31.6383, 0.000000, 0.000000, 105.790092},
	{-2406.3679, -552.1598, 31.9350, 0.000000, 0.000000, 72.158646},
	{-2403.0315, -548.4464, 32.4640, 0.000000, 0.000000, 51.979790},
	{-2405.0076, -543.5737, 32.4710, 0.000000, 0.000000, 48.177982},
	{-2397.3977, -541.8188, 33.5632, 0.000000, 0.000000, 10.452292},
	{-2391.9641, -545.4638, 34.1999, 0.000000, 0.000000, 347.641449},
	{-2384.9368, -541.5323, 35.3797, 0.000000, 0.000000, 343.547119},
	{-2382.6631, -550.1005, 35.4075, 0.000000, 0.000000, 343.547119},
	{-2376.8025, -555.1165, 36.1045, 0.000000, 0.000000, 344.132050},
	{-2381.6865, -561.9200, 34.9561, 0.000000, 0.000000, 344.132050},
	{-2378.6194, -569.7449, 34.8936, 0.000000, 0.000000, 295.293335},
	{-2379.8108, -579.4586, 34.1132, 0.000000, 0.000000, 291.491516},
	{-2385.5955, -584.0087, 33.2833, 0.000000, 0.000000, 287.689758},
	{-2387.5750, -591.8337, 32.8501, 0.000000, 0.000000, 277.161713},
	{-2394.2222, -592.9528, 32.2591, 0.000000, 0.000000, 272.482574},
	{-2399.7756, -597.6332, 31.8252, 0.000000, 0.000000, 266.633636},
	{-2406.1641, -605.5649, 31.3089, 0.000000, 0.000000, 268.973175},
	{-2414.7166, -605.0410, 30.5034, 0.000000, 0.000000, 180.361542},
	{-2421.0754, -599.7656, 29.9752, 0.000000, 0.000000, 150.532074},
	{-2430.8494, -597.4478, 29.2641, 0.000000, 0.000000, 103.740524},
	{-2433.8674, -604.6132, 29.0664, 0.000000, 0.000000, 108.712120},
	{-2435.8530, -616.0560, 28.9612, 0.000000, 0.000000, 81.806984},
	{-2437.6091, -622.1284, 28.8824, 0.000000, 0.000000, 68.061974},
	{-2437.4817, -627.0818, 28.9303, 0.000000, 0.000000, 120.117508},
	{-2437.2236, -633.3789, 29.0193, 0.000000, 0.000000, 119.825035},
	{-2432.6016, -634.1786, 29.3387, 0.000000, 0.000000, 152.286575},
	{-2430.1372, -631.0145, 29.4877, 0.000000, 0.000000, 160.475082},
	{-2424.6689, -622.8990, 29.7972, 0.000000, 0.000000, 178.314362},
	{-2417.7078, -617.5325, 30.2627, 0.000000, 0.000000, 170.420761},
	{-2417.0166, -625.6298, 30.3651, 0.000000, 0.000000, 227.155411},
	{-2411.0059, -630.7412, 30.9758, 0.000000, 0.000000, 245.869537},
	{-2405.4995, -626.0000, 31.4775, 0.000000, 0.000000, 251.426010},
	{-2396.6025, -619.2390, 32.2772, 0.000000, 0.000000, 318.688782},
	{-2392.5383, -628.7543, 32.7147, 0.000000, 0.000000, 323.075439},
	{-2392.5579, -639.7793, 32.7270, 0.000000, 0.000000, 321.905670},
	{-2387.0281, -647.0288, 33.1332, 0.000000, 0.000000, 31.800503},
	{-2390.5625, -654.8797, 32.7982, 0.000000, 0.000000, 116.317719},
	{-2388.6145, -661.8883, 32.8478, 0.000000, 0.000000, 254.935303},
	{-2389.8557, -671.5263, 32.6189, 0.000000, 0.000000, 248.209015},
	{-2385.3999, -678.7818, 32.8517, 0.000000, 0.000000, 269.265198},
	{-2379.4268, -683.7354, 33.2240, 0.000000, 0.000000, 342.082092},
	{-2381.6511, -690.6888, 33.1130, 0.000000, 0.000000, 57.533447},
	{-2375.3645, -695.4893, 33.5118, 0.000000, 0.000000, 98.183594},
	{-2382.0635, -700.2999, 33.1685, 0.000000, 0.000000, 71.278450},
	{-2382.5752, -708.6954, 33.2120, 0.000000, 0.000000, 89.995071},
	{-2391.0962, -713.1725, 32.6794, 0.000000, 0.000000, 89.995071},
	{-2387.2939, -722.7294, 32.9858, 0.000000, 0.000000, 89.995071},
	{-2394.0698, -729.3000, 32.3712, 0.000000, 0.000000, 89.995071},
	{-2392.0396, -735.5020, 32.5731, 0.000000, 0.000000, 89.995071},
	{-2393.0039, -743.2102, 32.4396, 0.000000, 0.000000, 89.995071},
	{-2398.8350, -748.1622, 31.8607, 0.000000, 0.000000, 89.995071},
	{-2396.0032, -756.2298, 32.2465, 0.000000, 0.000000, 268.899017},
	{-2404.0474, -761.1132, 31.4636, 0.000000, 0.000000, 139.713486},
	{-2401.1924, -769.7870, 31.8304, 0.000000, 0.000000, 121.581818},
	{-2410.1892, -774.9449, 30.9152, 0.000000, 0.000000, 121.289360},
	{-2421.1582, -778.9267, 29.8067, 0.000000, 0.000000, 239.730469},
	{-2429.4377, -773.9785, 28.8368, 0.000000, 0.000000, 171.005417},
	{-2433.3347, -781.1323, 28.7019, 0.000000, 0.000000, 58.413280},
	{-2438.0889, -784.5437, 28.4727, 0.000000, 0.000000, 58.120831},
	{-2437.8430, -792.2192, 28.6349, 0.000000, 0.000000, 109.006630},
	{-2446.3516, -798.5945, 28.2283, 0.000000, 0.000000, 180.656113},
	{-2447.0474, -806.6545, 28.5349, 0.000000, 0.000000, 250.258621},
	{-2455.5269, -810.9558, 28.4189, 0.000000, 0.000000, 245.579498},
	{-2453.9763, -819.5977, 28.8148, 0.000000, 0.000000, 161.647156},
	{-2449.6318, -828.9312, 29.3076, 0.000000, 0.000000, 83.271309},
	{-2457.2932, -833.7640, 29.1187, 0.000000, 0.000000, 83.271301},
	{-2457.5928, -839.6970, 29.2401, 0.000000, 0.000000, 179.194000},
	{-2462.4250, -842.3010, 29.1266, 0.000000, 0.000000, 191.476654},
	{-2469.0125, -848.0148, 29.0097, 0.000000, 0.000000, 346.473633},
	{-2473.8684, -855.5676, 28.8127, 0.000000, 0.000000, 212.825302},
	{-2470.1082, -861.2989, 28.8095, 0.000000, 0.000000, 135.619263},
	{-2463.7534, -863.6431, 28.7913, 0.000000, 0.000000, 323.077942},
	{-2455.8242, -866.0374, 28.7195, 0.000000, 0.000000, 268.682739},
	{-2447.9011, -864.6339, 28.1319, 0.000000, 0.000000, 268.682739},
	{-2441.9895, -859.2194, 28.7938, 0.000000, 0.000000, 268.682739},
	{-2434.8525, -861.1954, 28.9810, 0.000000, 0.000000, 33.850128},
	{-2067.2419, 2060.4060, 56.7007, 0.000000, 0.000000, 85.138367},//Участок № 7 Глен Парк сторона 2 -- 329 начало кол-во 81
	{-2066.7544, 2054.1292, 56.4587, 0.000000, 0.000000, 359.743591},
	{-2063.4409, 2060.8567, 57.0411, 0.000000, 0.000000, 359.743591},
	{-2062.8474, 2052.8784, 56.7259, 0.000000, 0.000000, 359.743591},
	{-2062.3000, 2045.5106, 56.1244, 0.000000, 0.000000, 3.545526},
	{-2066.8882, 2039.6791, 55.0359, 0.000000, 0.000000, 93.545670},
	{-2061.3997, 2034.5289, 54.7390, 0.000000, 0.000000, 3.545526},
	{-2067.1646, 2026.0386, 52.9859, 0.000000, 0.000000, 3.545526},
	{-2059.0454, 2019.6730, 52.2510, 0.000000, 0.000000, 3.545526},
	{-2067.0449, 2007.4215, 47.9469, 0.000000, 0.000000, 3.545526},
	{-2060.1929, 1997.9323, 46.3277, 0.000000, 0.000000, 3.545526},
	{-2067.8767, 1985.7341, 42.2000, 0.000000, 0.000000, 85.723320},
	{-2061.0784, 1978.3776, 39.9988, 0.000000, 0.000000, 121.986778},
	{-2066.4963, 1968.6348, 38.0458, 0.000000, 0.000000, 56.186131},
	{-2061.0098, 1960.3423, 35.0245, 0.000000, 0.000000, 83.676140},
	{-2068.0017, 1948.5990, 31.8168, 0.000000, 0.000000, 83.678513},
	{-2061.6311, 1939.8137, 30.5729, 0.000000, 0.000000, 75.489990},
	{-2067.8025, 1928.6495, 28.9210, 0.000000, 0.000000, 153.280945},
	{-2060.8972, 1915.1606, 28.9110, 0.000000, 0.000000, 277.278442},
	{-2067.7009, 1902.3947, 27.8919, 0.000000, 0.000000, 277.278442},
	{-2061.0039, 1890.2351, 28.6233, 0.000000, 0.000000, 176.676620},
	{-2067.7175, 1879.8075, 27.8228, 0.000000, 0.000000, 72.275475},
	{-2060.9761, 1869.0277, 29.0550, 0.000000, 0.000000, 274.063965},
	{-2067.9290, 1858.9869, 28.2202, 0.000000, 0.000000, 274.063965},
	{-2060.8342, 1849.0767, 28.9958, 0.000000, 0.000000, 274.063965},
	{-2067.5259, 1837.6947, 28.8138, 0.000000, 0.000000, 274.063965},
	{-2060.9905, 1826.7206, 30.5309, 0.000000, 0.000000, 274.063965},
	{-2067.1245, 1816.2262, 30.4408, 0.000000, 0.000000, 274.063965},
	{-2060.6523, 1808.4156, 32.5801, 0.000000, 0.000000, 215.867081},
	{-2066.8318, 1797.4365, 34.1486, 0.000000, 0.000000, 84.265892},
	{-2060.7434, 1789.7422, 36.3392, 0.000000, 0.000000, 313.030792},
	{-2067.7871, 1781.9004, 38.5409, 0.000000, 0.000000, 80.756500},
	{-2061.3513, 1773.3105, 41.0079, 0.000000, 0.000000, 86.897896},
	{-2067.5483, 1764.8058, 42.5820, 0.000000, 0.000000, 50.342007},
	{-2061.4458, 1756.9299, 44.1199, 0.000000, 0.000000, 17.587986},
	{-2067.3213, 1747.1636, 45.2222, 0.000000, 0.000000, 86.897957},
	{-2061.1689, 1734.2791, 46.0789, 0.000000, 0.000000, 113.803101},
	{-2066.6777, 1720.5267, 46.1800, 0.000000, 0.000000, 87.775314},
	{-2061.0215, 1702.7720, 46.1800, 0.000000, 0.000000, 236.046021},
	{-2066.7766, 1690.3149, 46.1800, 0.000000, 0.000000, 257.102173},
	{-2060.5928, 1681.1945, 46.1800, 0.000000, 0.000000, 209.433350},
	{-2066.8804, 1672.1992, 46.1800, 0.000000, 0.000000, 210.895584},
	{-2061.5339, 1662.0873, 46.1847, 0.000000, 0.000000, 196.273224},
	{-2067.7131, 1651.8846, 46.1847, 0.000000, 0.000000, 159.424866},
	{-2061.1423, 1637.4714, 46.1847, 0.000000, 0.000000, 159.132416},
	{-2067.1328, 1625.4054, 46.1847, 0.000000, 0.000000, 115.265366},
	{-2060.8206, 1612.3119, 46.1847, 0.000000, 0.000000, 112.633369},
	{-2067.0388, 1601.9414, 46.1847, 0.000000, 0.000000, 110.586235},
	{-2061.4819, 1588.1279, 46.1847, 0.000000, 0.000000, 151.236389},
	{-2066.3071, 1576.5609, 46.1847, 0.000000, 0.000000, 279.620697},
	{-2060.6223, 1562.3246, 46.1847, 0.000000, 0.000000, 278.450897},
	{-2066.6199, 1554.8988, 46.1847, 0.000000, 0.000000, 278.450897},
	{-2060.6587, 1544.9038, 46.1847, 0.000000, 0.000000, 274.649109},
	{-2066.8975, 1536.3320, 46.1847, 0.000000, 0.000000, 274.649109},
	{-2061.4958, 1527.9508, 46.1847, 0.000000, 0.000000, 356.824371},
	{-2066.8237, 1516.8453, 46.1847, 0.000000, 0.000000, 253.590469},
	{-2061.2510, 1504.5406, 46.1847, 0.000000, 0.000000, 345.711273},
	{-2066.6152, 1494.0098, 46.1847, 0.000000, 0.000000, 345.711273},
	{-2061.3435, 1485.9928, 46.1847, 0.000000, 0.000000, 40.691353},
	{-2067.3757, 1476.4198, 46.1847, 0.000000, 0.000000, 118.774757},
	{-2061.1731, 1465.3984, 46.1847, 0.000000, 0.000000, 141.878082},
	{-2066.6780, 1457.0718, 46.1847, 0.000000, 0.000000, 187.497345},
	{-2061.9133, 1447.3109, 46.1847, 0.000000, 0.000000, 72.858070},
	{-2066.2537, 1438.0757, 46.1847, 0.000000, 0.000000, 86.895531},
	{-2060.6304, 1427.8190, 46.1847, 0.000000, 0.000000, 86.895531},
	{-2066.4719, 1419.3048, 46.1847, 0.000000, 0.000000, 86.895531},
	{-2061.6143, 1410.5376, 46.1847, 0.000000, 0.000000, 87.480438},
	{-2067.2197, 1403.6449, 46.1847, 0.000000, 0.000000, 85.725746},
	{-2060.9314, 1394.1812, 46.1847, 0.000000, 0.000000, 85.725746},
	{-2066.6167, 1385.4635, 46.1847, 0.000000, 0.000000, 18.755314},
	{-2060.2686, 1376.7277, 46.1847, 0.000000, 0.000000, 264.116058},
	{-2066.7717, 1370.6906, 46.1847, 0.000000, 0.000000, 262.653809},
	{-2060.8823, 1361.7089, 46.1847, 0.000000, 0.000000, 283.709991},
	{-2066.5771, 1353.5061, 46.1847, 0.000000, 0.000000, 224.635666},
	{-2061.2432, 1344.1182, 46.1847, 0.000000, 0.000000, 298.332336},
	{-2068.4958, 1334.3119, 46.1847, 0.000000, 0.000000, 234.871353},
	{-2061.4143, 1323.1909, 46.1847, 0.000000, 0.000000, 279.028473},
	{-2067.1692, 1313.9797, 46.1847, 0.000000, 0.000000, 271.717316},
	{-2061.7021, 1304.4984, 46.1847, 0.000000, 0.000000, 325.235107},
	{-2068.0657, 1295.4507, 46.1847, 0.000000, 0.000000, 287.801849},
	{-2060.8181, 1284.5825, 46.1847, 0.000000, 0.000000, 188.369812}
};

new Float:gClearCPs[3][32][4] = {
	{//маршрут №1
		{0.0,1955.7698,-2606.8054,10.522},//1
		{0.0,1934.8317,-2582.7241,10.5315},//2
		{0.0,1896.4415,-2489.1155,10.5293},//3
		{0.0,1859.7959,-2397.7456,10.5311},//4
		{0.0,1822.7733,-2305.6042,10.5313},//5
		{0.0,1906.5858,-2257.9368,10.5369},//6
		{0.0,2063.7478,-2257.7461,15.3187},//7
		{0.0,2231.3291,-2232.3916,21.4746},//8
		{0.0,2416.4436,-2162.2573,21.5214},//9
		{0.0,2573.9507,-2162.0090,21.5324},//10
		{0.0,2696.0054,-2161.3926,21.5062},//11
		{0.0,2735.8367,-2161.5967,21.2151},//12
		{0.0,2786.6184,-2182.5840,18.5171},//13
		{0.0,2786.6389,-2471.6221,21.3801},//14
		{0.0,2767.9270,-2534.6187,21.3788},//15
		{0.0,2697.1604,-2677.1682,24.5346},//16
		{0.0,2560.9705,-2677.7356,24.9353},//17
		{0.0,2415.7400,-2677.1855,24.9119},//18
		{0.0,2367.0210,-2678.1470,24.9417},//19
		{0.0,2302.3552,-2678.1963,24.9721},//20
		{0.0,2204.6338,-2679.2104,24.7680},//21
		{0.0,2138.9575,-2682.6560,16.2382},//22
		{0.0,2084.1355,-2682.5723,10.8440},//23
		{0.0,2035.4414,-2683.7554,10.8657},//24
		{0.0,1995.4575,-2682.9722,10.8254},//25
		{0.0,1961.5530,-2682.7627,10.8495},//26
		{0.0,1942.8271,-2676.0051,10.9736},//27
		{0.0,1942.6486,-2648.0469,10.9138},//28
		{0.0,1943.7646,-2608.5615,10.5246},//29
		{0.0,1934.5525,-2582.0510,10.5341},//30
		{1.0,1926.6833,-2563.0803,10.5261},//31
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1890.2473,2062.2454,15.5903}, // LS1
		{0.0,1890.0065,2087.2932,15.6119}, // LS2
		{0.0,1889.8927,2117.8459,15.6134}, // LS3
		{0.0,1890.1365,2161.7000,15.6180}, // LS4
		{0.0,1890.5420,2221.4148,15.6641}, // LS5
		{0.0,1890.1646,2254.2434,15.6605}, // LS6
		{0.0,1888.6923,2298.1675,15.6605}, // LS7
		{0.0,1874.6686,2329.7485,15.6610}, // LS8
		{0.0,1844.0337,2375.0667,15.6610}, // LS9
		{0.0,1827.8506,2400.2065,15.6525}, // LS10
		{0.0,1805.9661,2431.5217,15.6610}, // LS11
		{0.0,1784.2496,2464.3679,15.6687}, // LS12
		{0.0,1773.1954,2481.3110,15.6688}, // LS13
		{0.0,1752.5073,2513.0176,15.6688}, // LS14
		{0.0,1760.5537,2543.4358,14.9531}, // LS15
		{0.0,1808.3412,2573.0525,14.9596}, // LS16
		{0.0,1813.9569,2534.9688,15.3718}, // LS17
		{0.0,1821.5200,2513.6106,15.3719}, // LS18
		{0.0,1800.6121,2476.1431,15.4060}, // LS19
		{0.0,1782.7825,2464.4714,15.6706}, // LS20
		{0.0,1810.7021,2423.2468,15.6610}, // LS21
		{0.0,1834.5255,2388.0137,15.6033}, // LS22
		{0.0,1861.3807,2346.4292,15.6633}, // LS23
		{0.0,1887.4309,2302.6301,15.6643}, // LS24
		{0.0,1889.2909,2273.6990,15.6606}, // LS25
		{0.0,1888.9647,2234.9817,15.6605}, // LS26
		{0.0,1889.0170,2203.1040,15.6037}, // LS27
		{0.0,1890.1931,2161.7656,15.6186}, // LS28
		{0.0,1889.9510,2134.5178,15.6155}, // LS29
		{0.0,1888.4739,2103.8862,15.5987}, // LS30
		{1.0,1888.9014,2066.4348,15.5983}, // LS 31
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,207.7992,809.6805,11.7090}, // Ghetto1
		{0.0,171.1165,823.8353,11.7090}, // Ghetto2
		{0.0,118.8687,843.4078,11.7090}, // Ghetto3
		{0.0,68.9641,861.7820,11.7090}, // Ghetto4
		{0.0,41.5946,872.7724,11.7090},// Ghetto5
		{0.0,-70.3434,915.1702,11.7090}, // Ghetto6
		{0.0,-131.2103,938.5658,11.7090}, // Ghetto7
		{0.0,-214.6095,968.5567,11.7090}, // Ghetto8
		{0.0,-298.1529,977.8123,11.7090}, // Ghetto9
		{0.0,-361.4119,978.3608,11.7089}, // Ghetto10
		{0.0,-371.8260,951.5950,11.7090}, // Ghetto11
		{0.0,-371.5772,919.2123,11.7090}, // Ghetto12
		{0.0,-371.9016,780.1355,11.7090}, // Ghetto13
		{0.0,-372.4456,735.0350,11.7090}, // Ghetto14
		{0.0,-371.5217,627.8134,11.7090}, // Ghetto15
		{0.0,-352.1259,614.2460,11.7090}, // Ghetto16
		{0.0,-276.9635,604.4481,11.7090}, // Ghetto17
		{0.0,-237.2759,599.2142,11.7090}, // Ghetto18
		{0.0,-203.2386,594.7255,11.7090}, // Ghetto19
		{0.0,-145.5268,587.1183,11.7090}, // Ghetto20
		{0.0,-54.1470,575.0738,11.7090}, // Ghetto21
		{0.0,22.6415,564.9564,11.7090}, // Ghetto22
		{0.0,117.8136,547.1033,11.7090}, // Ghetto23
		{0.0,144.4989,612.9124,11.7090}, // Ghetto24
		{0.0,159.1460,650.3393,11.7090}, // Ghetto25
		{0.0,171.7438,682.5292,11.7090}, // Ghetto26
		{0.0,183.0503,712.4310,11.7090}, // Ghetto27
		{0.0,190.5302,731.5323,11.7090}, // Ghetto28
		{0.0,201.2298,758.8567,11.7090}, // Ghetto29
		{0.0,206.3152,773.4494,11.7090}, // Ghetto30
		{1.0,207.3182,809.4182,11.7090}, // Ghetto 31
		{0.0,0.0,0.0,0.0}
	}
};
new condition_of_roads[][]  = {
	{"На дорогах чисто"},
	{"На дорогах пыль"},
	{"На дорогах грязь"}
};
new condition_of_roads_price[][] = {
	{3500,4500,6000},
	{3500,4500,6000},
	{4500,5500,7000}
};
new condition_of_roads_;//тут рандомное число от 0 до 2, в зп и ongamemodeinit, будет отвечать за состояние дорог
new Float:race_checkpoint[][] = {
	{2749.2263,-1426.7224,23.3758}, // Порт ЛС
	{1898.7758,1722.9060,15.4300},// Въезд Аэро ЛС
	{1965.3439,1721.6447,15.5381}, // Аэро ЛС
	{318.2551,-940.9234,37.7733}, // VineWood
	{292.0925,1162.5327,11.5484}, // Гора Ghetto
	{-372.0558,1158.4196,12.0490}, // Ghetto
	{2291.5188,-1677.3678,21.4420} // Дуэли
};

new rob_veh[MAX_PLAYERS];

new BuySalonStatus[MAX_PLAYERS];
new BuySalonType[MAX_PLAYERS];
new BuySalonWorld[MAX_PLAYERS];
new CarSalonID[MAX_PLAYERS];
new ShowCar[MAX_PLAYERS][78];

new start_invent;
new invent_object[13];
new invent_area;
new invent_pickup;
new invent_car[3];
new invent_mats;
new Text3D:invent_text;
new invent_time;
new invent_time_car;
new invent_zone;
new invent_zone_id = -1;
new invent_place[5][4] = {
	{1997, -178, 2152, -44},
	{ 333, 261, 545, 408},
	{-665, 1249, -530, 1381},
	{-2166, 1404, -1992, 1508},
	{-1267, -2197, -1110, -2026}
};

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ Объявление келбеков ]~~~~~~~~~~~~~~~~~~~~~~~~~//

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[ Трехмерные массивы ]~~~~~~~~~~~~~~~~~~~~~~~~~//

enum MYSQL_SETTINGS
{
	MYSQL_HOST,
	MYSQL_BIND,
	MYSQL_USERNAME,
	MYSQL_PASSWORD,
	MYSQL_DATABASE
}
new MySQLSettings[MYSQL_SETTINGS][30];

stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[MYSQL_HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"bind",MySQLSettings[MYSQL_BIND]);
	if(errCode < 0) printf("Error while reading MySQL settings file (bind). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[MYSQL_USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[MYSQL_PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[MYSQL_DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}

enum E_OBJECT_STRUCT
{
    MODEL,
	Float: POS_X,
	Float: POS_Y,
	Float: POS_Z,
	Float: ROT_X,
	Float: ROT_Y,
	Float: ROT_Z
};
new ObjectInfo[MAX_CROBJECTS][E_OBJECT_STRUCT];

enum E_ACTOR_STRUCT
{
    MODEL,
	Float: POS_X,
	Float: POS_Y,
	Float: POS_Z,
	Float: ROT,
	WORLD
};
new ActorInfo[MAX_ACTORS][E_ACTOR_STRUCT];

enum E_DYNOBJECT_STRUCT
{
    MODEL,
	Float: POS_X,
	Float: POS_Y,
	Float: POS_Z,
	Float: ROT_X,
	Float: ROT_Y,
	Float: ROT_Z,
	INTERIOR,
	WORLD
};
new ObjectDynInfo[MAX_CRDYNOBJECTS][E_DYNOBJECT_STRUCT];

enum E_AREA_STRUCT
{
	Float: POS_X,
	Float: POS_Y,
	Float: POS_Z,
	INTERIOR,
	WORLD
};
new AreaInfo[MAX_AREAS][E_AREA_STRUCT];

enum fullInfo {
	fullaccess_id,
	fullaccess_player[MAX_PLAYER_NAME]
}
new FCI[MAX_PLAYERS][fullInfo], gFullAccessCount;

enum E_PLAYER_GPS_STRUCT
{
	bool: G_ENABLED,
	Float: G_POS_X,
	Float: G_POS_Y,
	Float: G_POS_Z,
	G_INTERIOR,
	G_WORLD
};
new g_player_gps[MAX_PLAYERS][E_PLAYER_GPS_STRUCT];

enum vip_info {
	vip_payday,
	vip_afk,
	vip_carlic,
	vip_lvl,
	vip_healtime,
	vip_arrest,
	vip_mute,
	vip_admins,
	vip_mask_time,
	vip_armmats,
	vip_search,
	vip_heal,
	vip_mask,
	vip_fuel,
	vip_jimmy,
	vip_mats,
	vip_drugs,
	Float:vip_satiety,
	vip_fam_point,
	vip_transfer_bank,
	vip_percent_job,
	vip_percent_pension,
	vip_percent_startjob,
	vip_flylic,
	vip_fixcar,
	vip_fine,
	vip_hotel,
	vip_chose,
	vip_buycar,
	vip_rentcar,
	vip_houseupdate,
	vip_changesex,
	vip_number,
	vip_perfonans,
	vip_tune,
	vip_rulet,
	vip_hp,
	vip_useheal,
	vip_changename,
	vip_gunlic,
	vip_radar,
	vip_report,
	vip_ad,
	vip_enterbizz,
	vip_vad,
	vip_sms,
	vip_disease,
	vip_pay,
	vip_chat,
	vip_percent_bank,
	vip_percent_atm,
	vip_call,
	vip_report_color
};
new vip_status[9][vip_info];

enum ROB_PL {
	AttachObj,
	RobArea,
	RobPickup,
	RobRand,
	Text3D:RobText
};
new RobPlayer[MAX_PLAYERS][ROB_PL];

enum GRF {
	gId,
	gObject,
	gFrak,
	Float: gr_x[7],
}
new GrafInfo[121][GRF],CountGraffity;
new graf_timer[MAX_PLAYERS];

enum frac_veh {
    fvehID,
	fvehFrac,
	fvehFracRang,
	fvehModel,
	fvehModelNew,
	fvehTime,
	Float:fvehcCoords[4],
	fvehColor[2],
	fvehCar
}
new FracVehicle[50][frac_veh],
	gFracVehicleCount;

new gang_car[7][2] = {
	{422,1500},
	{560,2000},
	{559,1800},
	{562,1800},
	{579,1800},
	{413,2000},
	{461,800}
};

new dice_random[11] = {2,4,6,8,10,12,3,5,7,9,11};

//youtube
enum e_tube {
	you_uid,
	you_id,
	you_name[18],
	you_date,	
	you_subsctiptions,		
	you_datasub[17],				
	you_timestream		
}
new const youtube[100][e_tube];
new youtube_player[MAX_PLAYERS];
new youtube_time[MAX_PLAYERS];

//угон
new theftarea[MAX_PLAYERS][2];
new theftIDveh[MAX_PLAYERS][3];
new theftCheck[MAX_PLAYERS][2];
new theftplayer[1011][2];
new const PlayerText:theft_PTD[MAX_PLAYERS][2];
new thefttime[MAX_PLAYERS];
new theftveh[MAX_PLAYERS][3]; // ид и время //угон
new	TheftSkillMax[26] = {3,7,11,15,19,23,27,31,35,39,43,47,51,55,59,63,67,71,75,79,83,87,91,95,100,100};

//тир
new BottleObject[MAX_PLAYERS][2],
	ShootingStart[MAX_PLAYERS],
	ShootingCount[MAX_PLAYERS],
	ShootingArea[MAX_PLAYERS],
	BoxObject[13][8],
	BoxStatus[13][8],
	BoxPlayerID[13][8];

new GUARD_TICK_C_BUG[MAX_PLAYERS];

new player_gm[MAX_PLAYERS char];

new salary_pd[11] = {3400,5400,7000,8400,10000,11000,13000,15000,17200,18000,19000};
new salary_fbi[11] = {6800,8000,9000,10000,11000,12400,15000,15000,18000,21000,26000};
new salary_medics[7] = {8000,10000,12000,14000,16000,18000,22000};
new salary_news[10] = {5000,8000,9000,9400,9800,10000,11000,13800,16200,19000};
new salary_wh[12] = {5400,7800,8400,9800,11000,24000,24000,24000,24000,24000,27000,33000};
new salary_army[15] = {3000,4000,5000,6000,7000,8200,9000,9400,11000,12200,14000,15400,17400,18800,20200};

new UseSound[MAX_PLAYERS];
new Sounds;
new Float:rads;
new Float:streampos[3];
new stream[256];
new Float:setX[MAX_PLAYERS];
new Float:setY[MAX_PLAYERS];
new Float:setZ[MAX_PLAYERS];

new anti_dm[MAX_PLAYERS char] ;

new objgolod[21] = -1;

new object[MAX_OGRAD] ={-1,...};
new objectrot[MAX_OGRAD] ={-1,...};

new PlayerText:p_mh[MAX_PLAYERS] = {PlayerText:-1,...};

new engine_name[5][44] = {
	"Нагнетатель воздуха",
	"Кованые поршни двигателя",
	"Дроссельная заслонка увеличенного диаметра", 
	"Воздушный фильтр нулевого сопротивления",
	"Спортивный распредвал"};
new engine_name_price[5] = {30000, 50000, 90000, 120000, 150000};
new Float:engine_name_boost[5] = {0.3, 0.5, 0.7, 1.0, 1.5};

new brake_name[5][44] = {
	"Тормозной шланг",
	"Спортивные тормозные диски",
	"Модифицированные тормозные колодки",
	"Тормозной цилиндр",
	"Вакуумный усилитель"};
new brake_name_price[5] = {30000, 50000, 50000, 60000, 80000};
new Float:brake_name_boost[5] = {1.0, 2.0, 2.0, 3.0, 4.0};
/*============================================================================*/
enum e_HOUSE_INTERIOR {
	h_id,
	h_type,
	Float:h_pos_exit[4],
	Float:h_pos_spawn[4],	
	h_int_name[24],			// Наименование интерьера
	h_evict,				// Количество возможно-подселяемых людей
	h_interior				// интерьер
}
new const hinterior_info[][ e_HOUSE_INTERIOR ] =
{
	/*0*/	{ 0, 0, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №1", 0, 0 }, 		// 1
	/*1*/	{ 0, 1, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №1", 0, 5 }, 		// 1
	/*2*/	{ 0, 2, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №1", 0, 0 }, 		// 1
	/*3*/	{ 0, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №1", 0, 0}, 		// 1
	
	/*0 - 485.1493,1374.6331,1115.0200,267.8221 pos_exit, 463.9989,1355.6779,1118.5900,268.7621 - spawn house*/
	/*1 - 304.5930,2048.8918,5002.4502,94.2103 pos_exit, 298.4768,2062.2209,5002.4502,94.2103 - spawn house*/
	/*2 - 2162.9353,2821.6614,1716.2400,85.7737 pos_exit, 2194.2751,2828.0649,1719.5100,85.7737 - spawn house*/
	/*3 - -376.1542,1026.8556,1712.9200,267.4854 pos_exit, -396.3038,1028.0878,1712.9200,267.4854 - spawn house*/
	
	/*4*/	{ 1, 0, { -2572.5671,413.7538,1.8041,359.8056 }, { -2572.4995,412.3483,1.8041,181.2269 }, "Интерьер дома №2", 0, 0 }, 		// 1
	/*5*/	{ 1, 1, { -2572.5671,413.7538,1.8041,359.8056 }, { -2572.4995,412.3483,1.8041,181.2269 }, "Интерьер дома №2", 0, 0 }, 		// 1
	/*6*/	{ 1, 2, { -2572.5671,413.7538,1.8041,359.8056 }, { -2572.4995,412.3483,1.8041,181.2269 }, "Интерьер дома №2", 0, 0 }, 		// 1
	/*7*/	{ 1, 3, { -2572.5671,413.7538,1.8041,359.8056 }, { -2572.4995,412.3483,1.8041,181.2269 }, "Интерьер дома №2", 0, 0}, 		// 1
	
	/*8*/	{ 2, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №3", 0, 10 }, 		// 1
	/*9*/	{ 2, 1, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №3", 0, 5 }, 		// 1
	/*10*/	{ 2, 2, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №3", 0, 0 }, 		// 1
	/*11*/	{ 2, 3, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №3", 0, 0}, 		// 1

	/*12*/	{ 3, 0, { 479.7093,2297.6814,1601.7969,187.1496 }, { 480.8386,2297.3813,1601.7969,178.8400 }, "Интерьер дома №4", 0, 10 }, 		// 1
	/*13*/	{ 3, 1, { 479.7093,2297.6814,1601.7969,187.1496 }, { 480.8386,2297.3813,1601.7969,178.8400 }, "Интерьер дома №4", 0, 5 }, 		// 1
	/*14*/	{ 3, 2, { 479.7093,2297.6814,1601.7969,187.1496 }, { 480.8386,2297.3813,1601.7969,178.8400 }, "Интерьер дома №4", 0, 0 }, 		// 1
	/*15*/	{ 3, 3, { 479.7093,2297.6814,1601.7969,187.1496 }, { 480.8386,2297.3813,1601.7969,178.8400 }, "Интерьер дома №4", 0, 0}, 		// 1

	/*16*/	{ 4, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №5", 0, 10 }, 		// 1
	/*17*/	{ 4, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №5", 0, 5 }, 		// 1
	/*18*/	{ 4, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №5", 0, 0 }, 		// 1
	/*19*/	{ 4, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №5", 0, 0}, 		// 1

	/*20*/	{ 5, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №6", 0, 10 }, 		// 1
	/*21*/	{ 5, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №6", 0, 5 }, 		// 1
	/*22*/	{ 5, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №6", 0, 0 }, 		// 1
	/*23*/	{ 5, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №6", 0, 0}, 		// 1

	/*24*/	{ 6, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №7", 0, 0 }, 		// 1
	/*25*/	{ 6, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №7", 0, 0 }, 		// 1
	/*26*/	{ 6, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №7", 0, 0 }, 		// 1
	/*27*/	{ 6, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №7", 0, 0}, 		// 1

	/*28*/	{ 7, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №8", 0, 0 }, 		// 1
	/*29*/	{ 7, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №8", 0, 5 }, 		// 1
	/*30*/	{ 7, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №8", 0, 0 }, 		// 1
	/*31*/	{ 7, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №8", 0, 0}, 		// 1

	/*32*/	{ 8, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №9", 0, 0 }, 		// 1
	/*33*/	{ 8, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №9", 0, 0 }, 		// 1
	/*34*/	{ 8, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №9", 0, 0 }, 		// 1
	/*35*/	{ 8, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №9", 0, 0}, 		// 1

	/*36*/	{ 9, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №10", 0, 0 }, 		// 1
	/*37*/	{ 9, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №10", 0, 0 }, 		// 1
	/*38*/	{ 9, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №10", 0, 0 }, 		// 1
	/*39*/	{ 9, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №10", 0, 0}, 		// 1

	/*40*/	{ 10, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №11", 0, 0 }, 		// 1
	/*41*/	{ 10, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №11", 0, 0 }, 		// 1
	/*42*/	{ 10, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №11", 0, 0 }, 		// 1
	/*43*/	{ 10, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №11", 0, 0}, 		// 1

	/*44*/	{ 11, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №12", 0, 0 }, 		// 1
	/*45*/	{ 11, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №12", 0, 0 }, 		// 1
	/*46*/	{ 11, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №12", 0, 0 }, 		// 1
	/*47*/	{ 11, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №12", 0, 0}, 		// 1

	/*48*/	{ 12, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №13", 0, 0 }, 		// 1
	/*49*/	{ 12, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №13", 0, 0 }, 		// 1
	/*50*/	{ 12, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №13", 0, 0 }, 		// 1
	/*51*/	{ 12, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №13", 0, 0}, 		// 1

	/*52*/	{ 13, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №14", 0, 10 }, 		// 1
	/*53*/	{ 13, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №14", 0, 5 }, 		// 1
	/*54*/	{ 13, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №14", 0, 0 }, 		// 1
	/*55*/	{ 13, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №14", 0, 0}, 		// 1

	/*56*/	{ 14, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №15", 0, 10 }, 		// 1
	/*57*/	{ 14, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №15", 0, 5 }, 		// 1
	/*58*/	{ 14, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №15", 0, 0 }, 		// 1
	/*59*/	{ 14, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №15", 0, 0}, 		// 1

	/*60*/	{ 15, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №16", 0, 10 }, 		// 1
	/*61*/	{ 15, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №16", 0, 5 }, 		// 1
	/*62*/	{ 15, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №16", 0, 0 }, 		// 1
	/*63*/	{ 15, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №16", 0, 0}, 		// 1

	/*64*/	{ 16, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №17", 0, 0 }, 		// 1
	/*65*/	{ 16, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №17", 0, 0 }, 		// 1
	/*66*/	{ 16, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №17", 0, 0 }, 		// 1
	/*67*/	{ 16, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №17", 0, 0}, 		// 1

	/*68*/	{ 17, 0, { -1138.0172,-1097.2102,1231.2622,225.9132 }, { -1138.2100,-1096.0784,1231.2622,318.2195 }, "Интерьер дома №18", 0, 0 }, 		// 1
	/*69*/	{ 17, 1, { 173.4575,361.7896,1137.4869,176.3044 },{ 176.8956,358.0527,1137.4869,271.8486 }, "Интерьер дома №18", 0, 0 }, 		// 1
	/*70*/	{ 17, 2, { -2587.2444,2018.4880,2078.6201,269.0286 }, { -2597.9614,2038.6996,2082.0200,91.3670 }, "Интерьер дома №18", 0, 0 }, 		// 1
	/*71*/	{ 17, 3, { 1428.4377,-1880.5291,1117.8101,357.0919 }, { 1428.6062,-1880.1533,1117.8101,276.2287 }, "Интерьер дома №18", 0, 0} 		// 1
};
#include "sourse/other/colors"
#include "sourse/other/economy"
#include "sourse/other/dialogs"
#include "sourse/other/fractions"
/*============================================================================*/
#define ClearAnimationsEX(%0) ApplyAnimation(%0,"CARRY","null",1.0,0,0,0,0,0,0),SetTimerEx("ClearAnim", 400, 0, "d", %0)
#define PlayerToPoint(%0,%1,%2,%3,%4) IsPlayerInRangeOfPoint(%1,%0,%2,%3,%4)
#define PointToPoint(%0,%1,%2,%3,%4,%5) floatsqroot(floatpower(floatabs(floatsub(%3,%0)),2)+floatpower(floatabs(floatsub(%4,%1)),2)+floatpower(floatabs(floatsub(%5,%2)),2))
new const not_id[] = "Неверный ID игрока";
/*============================================================================*/

new VehTrailer[MAX_PLAYERS] = {INVALID_VEHICLE_ID,...};
new LastVeh[MAX_PLAYERS] = {INVALID_VEHICLE_ID,...};

#define MAX_REPORTS (50)

new TextReport[MAX_REPORTS][151];
new TextReportAdmin[MAX_REPORTS][131];
new PlayerReport[MAX_REPORTS] = {-1,...};
new ReportID[MAX_PLAYERS] = {-1,...};
new ReportSlot[MAX_REPORTS] = {-1,...};
new ReportAdmin[MAX_PLAYERS];

#define MAX_ASK (50)

new TextAsk[MAX_ASK][151];
new PlayerReportAsk[MAX_ASK] = {-1,...};
new ReportIDAsk[MAX_PLAYERS] = {-1,...};
new ReportSlotAsk[MAX_ASK] = {-1,...};

new SlotCObject[499];

new SlotObject[99];
new Army;
new SFa;

new bool:ac_1[MAX_PLAYERS char];

enum MAKEGUN_DATA {
	mgunname[24],
	mgunamount,
	mgunid
}
new stock MakeGunData[7][MAKEGUN_DATA] = {
	{"SD Pistol", 		35, 	23},
	{"Desert Eagle", 	90, 	24},
	{"MP5", 			100, 	29},
	{"Shotgun", 		140, 	25},
	{"M4", 				150, 	31},
	{"AK-47", 			190, 	30},
	{"Rifle", 			175, 	33}
};
/*============================================================================*/
#define 	Ammo_SDPISTOL           20
#define 	Ammo_DEAGLE             14
#define 	Ammo_SHOTGUN            10
#define 	Ammo_MP5				25
#define 	Ammo_AK47				35
#define 	Ammo_M4A1				35
/*============================================================================*/
/*new MaxSpeedCar[212] = { 160,160,200,120,150,165,110,170,110,180,160,240,160,160,140,230,155,200,150,160,180,180,
	165,145,170,200,200,170,170,200,190,130,80,180,200,120,160,160,160,160,160,75,150,150,110,
	165,280,200,190,150,120,240,190,190,190,140,160,160,165,160,200,190,190,190,75,75,160,160,
	190,200,170,160,190,190,160,160,200,200,150,165,200,120,150,120,190,160,100,200,200,170,170,
	160,160,190,220,170,200,200,140,140,160,75,220,220,160,170,230,165,140,120,140,200,200,200,120,
	120,165,165,160,330,330,190,190,190,110,160,160,160,170,160,60,70,140,200,160,160,160,110,110,150,
	160,230,160,165,170,160,160,160,200,160,160,165,160,200,170,180,110,110,200,200,200,200,200,200,75,
	200,160,160,170,110,110,90,60,110,60,160,160,200,110,160,165,190,160,170,120,165,190,200,140,200,110,
	120,200,200,60,190,200,200,200,160,165,110,200,200,160,165,160,160,160,140,160,160 } ; */

new MaxSpeedCar[212] =
{
	111,103,131,77,93,115,77,104,70,111,91,155,118,77,74,135,108,80,81,105,102,
	108,98,69,95,135,122,116,110,141,128,91,66,77,117,0,105,111,100,118,95,53,
	98,89,77,115,162,80,77,0,0,136,118,44,91,110,74,67,110,95,92,113,78,100,0,0,
	103,98,100,78,110,77,88,75,105,121,141,131,82,98,129,68,110,86,46,70,45,116,
	104,98,110,105,99,125,151,124,114,114,76,86,98,0,151,151,121,98,126,116,76,
	73,91,87,90,111,84,100,110,110,115,190,189,112,123,106,91,113,111,105,124,
	105,42,49,77,117,118,111,121,0,0,70,105,142,115,106,104,103,105,100,86,108,
	102,110,85,95,101,111,77,77,110,125,119,108,125,85,0,116,112,121,102,0,0,65,
	42,77,42,111,111,190,91,111,107,106,95,60,0,107,100,116,76,114,0,0,190,100,0,
	77,123,123,123,111,106,77,119,120,103,106,0,0,0,76,0,0
};

CB: Random(min, max)
{
	new a = random(max - min) + min;
	return a;
}

stock J_CreateObject(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0)
{
	TotalObject++;
	
	if(DrawDistance < 100.0) DrawDistance = 100.0;
	else if(DrawDistance > 600.0) DrawDistance = 600.0;

	new objectid = CreateObject(modelid, X,  Y,  Z,  rX, rY,  rZ, DrawDistance);

	if(TotalObject >= MAX_CROBJECTS) printf("Кол-во статических объектов TotalObject не может быть больше %d: %d до %d", MAX_CROBJECTS, TotalObject, MAX_CROBJECTS);
	else
	{
	    ObjectInfo[objectid][MODEL] = modelid;

		ObjectInfo[objectid][POS_X] = X;
	    ObjectInfo[objectid][POS_Y] = Y;
	    ObjectInfo[objectid][POS_Z] = Z;

	    ObjectInfo[objectid][ROT_X] = rX;
	    ObjectInfo[objectid][ROT_Y] = rY;
	    ObjectInfo[objectid][ROT_Z] = rZ;
	}

	return objectid;
}
#if defined _ALS_CreateObject
        #undef CreateObject
#else
        #define _ALS_CreateObject
#endif
#define CreateObject J_CreateObject

stock J_CreateActor(modelid, Float:X, Float:Y, Float:Z, Float:Rotation)
{
    TotalActor++;

	/*
    if(TotalActor >= MAX_ACTORS)
	{
		printf("Кол-во актеров(npc ботов) TotalActor не может быть больше %d: %d до %d", MAX_ACTORS, TotalActor, MAX_ACTORS);
	}
	else
	{
	*/
 	ActorInfo[TotalActor][MODEL] = modelid;

	ActorInfo[TotalActor][POS_X] = X;
 	ActorInfo[TotalActor][POS_Y] = Y;
  	ActorInfo[TotalActor][POS_Z] = Z;

	ActorInfo[TotalActor][ROT] = Rotation;

	ActorInfo[TotalActor][WORLD] = GetActorVirtualWorld(TotalActor);
	//}
    return CreateActor(modelid, X, Y, Z, Rotation);
}
#if defined _ALS_CreateActor
	#undef CreateActor
#else
	#define _ALS_CreateActor
#endif
#define CreateActor J_CreateActor

stock J_CreateDynamicObject(modelid,Float:x,Float:y,Float:z,Float:rx,Float:ry,Float:rz,worldid=-1,interiorid=-1,playerid=-1,Float:streamdistance=300.0,Float:drawdistance=300.0,
areaid=-1,priority=0)
{
    TotalDynObject++;

    if(streamdistance < 100.0) streamdistance = 100.0;
	else if(streamdistance > 600.0) streamdistance = 600.0;

    new objectid = CreateDynamicObject(modelid, x, y, z, rx, ry, rz, worldid, interiorid, playerid, streamdistance, drawdistance, areaid, priority);

    if(TotalDynObject >= MAX_CRDYNOBJECTS)
	{
		printf("Кол-во динамических объектов TotalDynObject не может быть больше %d: %d до %d", MAX_CRDYNOBJECTS, TotalDynObject, MAX_CRDYNOBJECTS);
	}
	else
	{
	    ObjectDynInfo[objectid][MODEL] = modelid;

		ObjectDynInfo[objectid][POS_X] = x;
	    ObjectDynInfo[objectid][POS_Y] = y;
	    ObjectDynInfo[objectid][POS_Z] = z;

	    ObjectDynInfo[objectid][ROT_X] = rx;
	    ObjectDynInfo[objectid][ROT_Y] = ry;
	    ObjectDynInfo[objectid][ROT_Z] = rz;

	    ObjectDynInfo[objectid][INTERIOR] = interiorid;
	    ObjectDynInfo[objectid][WORLD] = worldid;
	}

    return objectid;
}
#if defined _ALS_CreateDynamicObject
	#undef CreateDynamicObject
#else
	#define _ALS_CreateDynamicObject
#endif
#define CreateDynamicObject J_CreateDynamicObject

stock CreateDynamicSphereExEx(Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1, priority = 0)
{
    TotalArea++;

	AreaInfo[TotalArea][POS_X] = x;
    AreaInfo[TotalArea][POS_Y] = y;
    AreaInfo[TotalArea][POS_Z] = z;

	if(interiorid == -1)
	{
    	AreaInfo[TotalArea][INTERIOR] = 0;
    }
	else
	{
	    AreaInfo[TotalArea][INTERIOR] = interiorid;
	}
	
	if(worldid == -1)
	{
    	AreaInfo[TotalArea][WORLD] = 0;
    }
	else
	{
	    AreaInfo[TotalArea][WORLD] = worldid;
	}

	return CreateDynamicSphere(x, y, z, Float:size, worldid, interiorid, playerid, priority);
}
#if defined _ALS_CreateDynamicSphere
	#undef CreateDynamicSphere
#else
	#define _ALS_CreateDynamicSphere
#endif
#define CreateDynamicSphere CreateDynamicSphereExEx

new gCurHour,
	gCurDay,
	timers_unix = -1,
	tmphour,
	tmpminute,
	tmpsecond,
	unix,
	unix_hour,
	unix_sec,
	unix_heal,
	unix_min,
	unix_three_sec;

new time_grandtimer,
	time_grandtimer_max,
	time_newkeys,
	time_newkeys_max,
	time_update,
	time_update_max,
	time_second,
	time_second_max;

new OldDialogID[MAX_PLAYERS];
#define INVALID_DIALOG_ID   (1234)

//new RecoveryTime = 0;

new Text3D:gPlayerProdText[MAX_PLAYERS] = {Text3D:-1, ...},
	gPlayerProdCP[MAX_PLAYERS];

new Text3D:ShipText[MAX_PLAYERS],
	ObjectShip[MAX_PLAYERS] = {0x7F800000,...};

new Text:AnimDraw;

new Text3D:med_turn_text[4];

new Text3D:PlayerMehText[MAX_PLAYERS] = {Text3D:-1, ...};

new Text3D:PlayerEatText[MAX_PLAYERS] = {Text3D:-1, ...};

new ABC[20][2] 	= { "E", "R", "T", "Y", "U", "O", "A", "S", "D", "F", "G", "H", "K", "Z", "X", "C", "V", "B", "N", "M" };

enum _spectator {
	sID
}
new SERIU[MAX_PLAYERS][_spectator];
new avir[MAX_PLAYERS];
new aint[MAX_PLAYERS];
new Lastspec[MAX_PLAYERS];

new take_items[MAX_PLAYERS][2];

enum _bl {
	bool:bl_is_killed,
	bl_finder,
	bl_observe,
	bool:bl_fraction[MAX_FRACTIONS + 1],
	bl_reason[42]
}
new bl_info[MAX_PLAYERS][_bl];
new bl_name[MAX_PLAYER_NAME + 1];

new Teleport_Players[2] = 0,
	bool:Teleport,
	Teleport_text[36] = {"None"},
	Float:TeleportFloat[3],
	TeleportInfo[2];

enum aInfo {
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//Цена
	Float:aPos_X,	//Кордината X
	Float:aPos_Y,	//Кордината Y
	Float:aPos_Z,	//Кордината Z
	Float:aPos_A,	//Угол поворота
	aColor_1,		//Цвет 1
	aColor_2,		//Цвет 2
	aBizz			//Автосалон
};

new ArendInfo[][aInfo] =
{//ID, Цена, Координаты X, Y, Z, Цвет 1, Цвет 2

	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 419, 1800 ,2470.7102,-759.6642,11.6998,360.0000,-1,-1,68 }, // Авторынок эконом 1
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 404, 2100 ,2474.1604,-759.5030,11.6999,360.0000,-1,-1,68 }, // Авторынок эконом 2
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 401, 1000 ,2477.6409,-759.6442,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 3
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 410, 3100 ,2480.9836,-759.3605,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 4
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 412, 9100 ,2484.2686,-759.6833,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 5
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 413, 4200 ,2487.6558,-759.5302,11.6999,0.6209,-1,-1,68 }, // Авторынок эконом 6
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 422, 5200 ,2491.2380,-760.0537,11.6998,0.4195,-1,-1,68 }, // Авторынок эконом 7
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 439, 7100 ,2494.7439,-759.7857,11.7000,0.9275,-1,-1,68 }, // Авторынок эконом 8
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 467, 4900 ,2498.1951,-759.8011,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 9
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 466, 8200 ,2501.7571,-759.7576,11.6998,360.0000,-1,-1,68 }, // Авторынок эконом 10
///	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 474, 7600 ,2505.0686,-759.6941,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 11
///	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 479, 17300 ,2508.6194,-760.0206,11.6998,360.0000,-1,-1,68 }, // Авторынок эконом 12
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 492, 22000 ,2512.0173,-759.6190,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 13
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 491, 35000 ,2515.3174,-759.9071,11.7001,0.9113,-1,-1,68 }, // Авторынок эконом 14
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 517, 18800 ,2518.4985,-759.6619,11.7000,360.0000,-1,-1,68 }, // Авторынок эконом 15
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 518, 8000 ,2521.7397,-759.6248,11.6999,360.0000,-1,-1,68 }, // Авторынок эконом 16
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 542, 4900 ,2521.4219,-717.0931,11.9218,90.1051,-1,-1,68 }, // Авторынок эконом 9
///	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 543, 8200 ,2521.1526,-713.2828,12.0440,89.7690,-1,-1,68 }, // Авторынок эконом 10
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 545, 7600 ,2521.3430,-709.1899,12.0469,88.6620,-1,-1,68 }, // Авторынок эконом 11
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 549, 17300 ,2521.0562,-705.6161,11.8710,90.0850,-1,-1,68 }, // Авторынок эконом 12
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 575, 22000 ,2520.6731,-701.5975,11.9507,89.6950,-1,-1,68 }, // Авторынок эконом 13
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 576, 35000 ,2520.6819,-697.7253,12.0887,89.0454,-1,-1,68 }, // Авторынок эконом 14
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 585, 18800 ,2520.3694,-693.8644,11.6544,90.4046,-1,-1,68 }, // Авторынок эконом 15
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 600, 8000 ,2519.3306,-690.0860,11.8406,90.9149,-1,-1,68 }, // Авторынок эконом 16

	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 1800 ,2302.8386,-1793.4912,22.0677,271.7653,-1,-1,69 }, // Авторынок средний 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 579, 2100 ,2303.7815,-1797.5736,22.0572,270.7416,-1,-1,69 }, // Авторынок средний 2
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 589, 1000 ,2303.8162,-1801.8000,22.0571,269.1101,-1,-1,69 }, // Авторынок средний 3
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 580, 3100 ,2303.6663,-1805.7317,22.0570,268.8849,-1,-1,69 }, // Авторынок средний 4
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 566, 9100 ,2303.8933,-1810.1404,22.0571,269.2624,-1,-1,69 }, // Авторынок средний 5
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 561, 4200 ,2303.9734,-1814.3387,22.0570,270.1105,-1,-1,69 }, // Авторынок средний 6
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 5200 ,2304.1055,-1818.6251,22.0572,270.5951,-1,-1,69 }, // Авторынок средний 7
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 555, 7100 ,2303.7048,-1822.8209,22.0570,270.2623,-1,-1,69 }, // Авторынок средний 8
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 554, 4900 ,2303.6575,-1827.1007,22.0571,269.3799,-1,-1,69 }, // Авторынок средний 9
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 551, 8200 ,2303.8687,-1830.9503,22.0571,271.5467,-1,-1,69 }, // Авторынок средний 10
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 534, 7600 ,2303.7119,-1835.6143,22.0569,269.4278,-1,-1,69 }, // Авторынок средний 11
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 527, 1800 ,2334.1885,-1844.8013,27.3014,271.2656,-1,-1,69 }, // Авторынок средний 12
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 535, 2100 ,2334.4536,-1840.3416,27.3463,270.7847,-1,-1,69 }, // Авторынок средний 13
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 507, 1000 ,2335.3054,-1835.8296,27.5232,270.9082,-1,-1,69 }, // Авторынок средний 14
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 505, 3100 ,2335.6926,-1831.2612,27.6788,270.0494,-1,-1,69 }, // Авторынок средний 15
///	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 526, 9100 ,2334.6238,-1826.8933,27.3486,270.5981,-1,-1,69 }, // Авторынок средний 17
///	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 533, 4200 ,2334.7717,-1822.5575,27.2892,269.2429,-1,-1,69 }, // Авторынок средний 18
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 500, 5200 ,2335.2993,-1818.0697,27.6841,271.2646,-1,-1,69 }, // Авторынок средний 19
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 475, 7100 ,2335.3398,-1813.3236,27.5068,269.6324,-1,-1,69 }, // Авторынок средний 20
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 445, 4900 ,2335.3499,-1808.9241,27.4451,269.6952,-1,-1,69 }, // Авторынок средний 21
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 426, 8200 ,2335.3650,-1804.3213,27.6247,269.9398,-1,-1,69 }, // Авторынок средний 22
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 421, 7600 ,2335.1917,-1800.0844,27.4559,269.2066,-1,-1,69 }, // Авторынок средний 23

	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 405, 1800 ,384.5484,784.4224,11.9591,159.4413,-1,-1,69 }, // Авторынок элитный 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 400, 2100 ,380.8744,785.4438,12.1159,160.0921,-1,-1,69 }, // Авторынок элитный 2
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 1000 ,376.7885,786.8915,11.9032,158.9203,-1,-1,69 }, // Авторынок элитный 3
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 3100 ,372.3493,788.3484,11.8240,161.2356,-1,-1,69 }, // Авторынок элитный 4
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 559, 9100 ,368.1155,789.7064,11.7437,157.3790,-1,-1,69 }, // Авторынок элитный 5
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 4200 ,363.3485,791.9184,11.7999,159.8908,-1,-1,69 }, // Авторынок элитный 6
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 5200 ,359.0910,793.5182,11.7557,158.6422,-1,-1,69 }, // Авторынок элитный 7
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 7100 ,352.6487,778.5635,11.7231,337.9859,-1,-1,69 }, // Авторынок элитный 8
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 4900 ,356.0771,777.2773,11.8026,340.5921,-1,-1,69 }, // Авторынок элитный 9
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 8200 ,360.2888,775.9492,11.8730,339.5475,-1,-1,69 }, // Авторынок элитный 10
///	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 434, 7600 ,364.2209,774.6302,12.0473,338.2309,-1,-1,69 }, // Авторынок элитный 11
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 1800 ,368.7809,773.6016,11.8522,340.8008,-1,-1,69 }, // Авторынок элитный 12
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 2100 ,373.7594,771.3928,11.8712,338.5384,-1,-1,69 }, // Авторынок элитный 13
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 1000 ,377.5640,770.2571,12.0911,338.0584,-1,-1,69 }, // Авторынок элитный 14
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 3100 ,402.7748,759.8882,11.9490,341.0505,-1,-1,69 }, // Авторынок элитный 15
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 9100 ,406.2913,758.7831,11.8079,339.6649,-1,-1,69 }, // Авторынок элитный 17
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 4200 ,409.7498,757.0999,11.9587,340.0958,-1,-1,69 }, // Авторынок элитный 18
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 495, 5200 ,416.8418,755.1154,12.4170,338.2773,-1,-1,69 }, // Авторынок элитный 19
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 494, 5200 ,421.4915,753.3068,11.9965,338.1679,-1,-1,69 }, // Авторынок элитный 20
	
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 481, 1800 ,2165.0286,-1810.8597,18.4278,360.0000,-1,-1,71 }, // Моторынок 1
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 509, 5500 ,2161.5171,-1811.0791,18.5256,2.0576,-1,-1,71 }, // Моторынок 2
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 510, 220 ,2157.9575,-1811.0933,18.5256,360.0000,-1,-1,71 }, // Моторынок 3
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 130 ,2154.3828,-1811.4626,18.5259,360.0000,-1,-1,71 }, // Моторынок 4
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 1500 ,2151.3826,-1810.9330,18.5263,360.0000,-1,-1,71 }, // Моторынок 5
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 1600 ,2147.6533,-1811.3439,18.5255,360.0000,-1,-1,71 }, // Моторынок 6
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 463, 1200 ,2144.1982,-1811.4623,18.5234,360.0000,-1,-1,71 }, // Моторынок 7
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 1600 ,2141.5056,-1811.5537,18.6442,0.4480,-1,-1,71 }, // Моторынок 8/
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 1200 ,2139.1321,-1811.9911,18.6808,1.7498,-1,-1,71 }, // Моторынок 9
//	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 1600 ,2136.5144,-1811.7732,18.5212,357.8351,-1,-1,71 }, // Моторынок 10
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 1200 ,2133.6711,-1812.0687,18.4389,2.6997,-1,-1,71 } // Моторынок 11
};

new drieltorka[MAX_PLAYERS];

new election;
new Text3D:election3D;

new ATMNames[15][24] =  {
	"ЖД Вокзал г. ЛВ", // 0
	{"ЖД Вокзал г. ЛС (1)"}, // 1
	{"ЖД Вокзал г. ЛС (2)"}, // 2
	{"ЖД Вокзал г. СФ"}, // 3
	{"Мэрия"}, // 4
	{"Автошкола"}, // 5
	{"Казино"}, // 6
	{"АЗС Гетто"}, // 7
	{"Отели"}, // 8
	{"Автосалон г. ЛС"}, // 9
	{"Автосалон г. СФ"}, // 10
	{"Автосалон г. ЛВ"}, // 11
	{"Мотосалон"}, // 12
	{"Военкомат"}, // 13
	{"Яблочный сад"} // 14
};
new WeaponNames[48][40] = {
	"Unarmed (Fist)", // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Pistols"}, // 22
	{"Desert Eagle (Silencer)"}, // 23
	{"Desert Eagle"}, // 24
	{"Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Auto Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};
#define MAX_DUELS 100
enum duel_data {
	duel_type,
	duel_raund,
	duel_map,
	duel_health,
	duel_armour,
	duel_password,
	duel_owner_id,
	duel_id[6],
	duel_gun,
	duel_gun_2,
	duel_money,
	duel_cash,
	bool:duel_start,
	bool:duel_create,
	duel_point_1,
	duel_point_2,
	duel_leave[6],
	duel_vw
}
new DI[MAX_DUELS][duel_data];
new duel_id_gun[5] = {24,25,29,30,31};

#define STANDART_GUN_TEXT ""W"%s\n"G"ALT"
#define MAX_DROP_GUNS 250
new GPDIO[47]={0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,363,364,365,366,367,368,368,371};
enum drop_gun_data {
	dg_gun,
	dg_ammo,
	dg_object,
	Text3D:dg_text,
	dg_time
}
new drop_gun[MAX_DROP_GUNS][drop_gun_data];

new Text:HungerFon[2];
new PlayerText:HungerProgres[MAX_PLAYERS];

new Text:LoadTextures[4];
new PlayerText:LoadTexturess[MAX_PLAYERS];

new Text:skill_td[4];
new PlayerText:skill_player_td[MAX_PLAYERS][2] = {PlayerText:-1,...};

new Text:buy_skins[9];
new PlayerText:buy_player_skins[MAX_PLAYERS] = {PlayerText:-1,...};

enum rgInfo {
	Float:rgPos1[3],
	Float:rgPos2[3],
	rgPlayer[2],
	rgTime,
	rgState,
	rgPrice
}

new RingInfo[5][rgInfo];
new RingCP[2];

enum admCMD {
	cmdName[32],
	cmdInfo[64],
	cmdLVL
};
#define MAX_ADM_CMDS 118
new AdminCommand[MAX_ADM_CMDS][admCMD] = {
	{"/alogin", "авторизоваться в админ панели", 1},
	{"/a", "чат администрации", 1},
	{"/kick", "кикнуть игрока", 1},
	{"/pm", "ответить в репорт", 1},
	{"/mute", "заблокировать чат", 1},
	{"/offmute", "заблокировать чат в оффлайн", 1},
	{"/offunmute", "разблокировать чат в оффлайн", 1},
	{"/unmute", "разблокировать чат", 1},
	{"/weap", "посмотреть оружие игрока", 1},
	{"/admins", "админы онлайн", 1},
	{"/jail", "посадить в тюрьму", 1},
	{"/offjail", "посадить в тюрьму оффлайн", 1},
	{"/offunjail", "вытащить из тюрьмы оффлайн", 1},
	{"/unjail", "выпустить из тюрьмы", 1},
	{"/prisoners", "посмотреть игроков в тюрьме", 1},
	{"/alock", "открыть/закрыть транспорт", 1},
	{"/ram", "войти в закрытый дом", 1},
	{"/tp", "телепорт", 1},
	{"/re", "следить за игроком", 1},
	{"/getskills", "узнать навыки владения оружия игрока", 1},
	{"/skin", "сменить скин", 1},
	{"/gm", "включить/отключить ГМ", 1},
	{"/spawn [/sp]", "телепортироватся на свой спавн", 1},
	{"/m", "мегафон", 1},
	{"/gg", "пожелать приятной игры", 1},
	{"/ainfo", "узнать свою статистику", 1},
	{"/afklist", "игроки в АФК", 1},
	{"/hp", "выдать себе 100 хп", 1},

	{"/aad", "отправить сообщение в общий чат (видно всем игрокам)", 2},
	{"/spcar", "заспавнить автомобиль (в котором сидишь)", 2},
	{"/goto [/g]", "телепортироватся к игроку", 2},
	{"/fv", "починка авто", 2},
	{"/atipster", "прослушка рации организации", 2},
	{"/astats", "посмотреть статистику игрока", 2},
	{"/warn", "выдать предупреждение", 2},
	{"/aimcheck", "проверить на AIM", 2},
	{"/cweap", "забрать оружие у игрока", 2},
	{"/getip", "узнать IP адреса игрока", 2},
	{"/agetip", "узнать IP адреса игрока в оффлайн", 2},
	{"/gettime", "узнать время игрока", 2},
	{"/delfences", "удалить ограждение", 2},
	{"/uncuff", "снять наручники", 2},

	{"/tskin", "выдать временный скин игроку", 3},
	{"/ban", "заблокировать аккаунт", 3},
	{"/hid", "телепорт к дому", 3},
	{"/bizz", "телепорт к бизнесу", 3},
	{"/int", "телепорт в интерьер", 3},
	{"/gethere", "телепортировать игрока к себе", 3},
	{"/setnick", "одобрить смену ника", 3},
	{"/freeze", "заморозить игрока", 3},
	{"/unfreeze", "разморозить игрока", 3},
	{"/offstats", "статистика игрока в оффлайн", 3},
	{"/getid", "узнать ник по ID игрока", 3},
	{"/slap", "подкинуть игрока", 3},
	{"/mark", "поставить метку для телепорта где стоишь", 3},
	{"/gotomark", "телепортироваться к метке", 3},
	{"/sethp", "выдать ХП игроку", 3},
	{"/setarm", "выдать броню игроку", 3},
	{"/gspawn", "отправить игрока на спавн", 3},
	{"/last", "узнать последний вход игрока", 3},
	{"/awarehouse", "состояние складов организаций", 3},
	{"/respv", "спавн авто в радиусе", 3},
	{"/gotocar", "телепортироваться к авто", 3},
	{"/getherecar", "телепортировать авто к себе", 3},
	{"/gsinfo", "узнать информацию Game Sapport'a", 3},
	{"/delveh", "удалить админ авто", 3},
	{"/offgettime", "просмотр статистики в оффлайне", 3},

	{"/skick", "тихий кик", 4},
	{"/rban", "блокировка IP адреса", 4},
	{"/unrban", "разблокировка IP адреса", 4},
	{"/iban", "заблокировать до 2038 года", 4},
	{"/ioffban", "заблокировать до 2038 года в оффлайн", 4},
	{"/offban", "блокировка аккаунта оффлайн", 4},
	{"/offwarn", "выдать предупреждение в оффлайн", 4},
	{"/unban", "разблокировать аккаунт", 4},
	{"/setfuel", "установить количество бензина в машине", 4},
	{"/fin", "посмотреть прибыль бизнеса", 4},
	{"/veh", "cоздать транспорт", 4},
	{"/alldelveh", "удалить все админ авто", 4},
	{"/unwarn", "снять предупреждение игроку", 4},
	{"/offunwarn", "снять предупреждение игроку в оффлайн", 4},
	{"/weather", "установить погоду", 4},
	{"/uval", "уволить игрока", 4},
	{"/ears", "прослушка SMS", 4},
	{"/hpall", "выдать хп всем в радиусе", 4},
	{"/spall", "заспавнить всех в радиусе", 4},
	{"/gettax", "балланс казны", 4},
	{"/sban", "тихая блокировка аккаунта", 4},
	{"/settime", "установить игровое время", 4},
	{"/givegun", "выдать оружие", 4},
	{"/infoips", "пробить твинков по IP", 4},
	{"/gomp", "провести мероприятие", 4},
	{"/amusic", "онлайн радио", 4},
	{"/captfreeze", "заморозить стрелы/капты", 4},
	{"/spcars", "заспавнить весь не занятый транспорт", 4},
	{"/paint", "запустить сумасшедшие войны", 4},
	{"/race", "запустить безумные гонки", 4},
	{"/golod", "запустить голодные игры", 4},

	{"/tempzone", "перекрасить ганг-зону", 5},
	{"/setbizmafia", "передать бизнес др. мафии", 5},
	{"/getdonate", "узнать пополнения(донат) игрока", 5},
	{"/setmats", "изменить маты организациям", 5},
	{"/obj", "создать объект", 5},
	{"/eobject", "редактировать объект", 5},
	{"/dobject", "удалить объект", 5},
	{"/hbject", "создать объект на игрока", 5},
	{"/hbedit", "редактировать объект на игроке", 5},
	{"/admstats", "узнать статистику админа", 5},
	{"/givelic", "выдать все лицензии", 5},
	{"/makegs", "добавить Game Sapport'a", 5},
	{"/makedj", "добавить DJ", 5},

	{"/reloadbans", "перезагрузить блокировки аккаунтов", 6},
	{"/restartservera", "произвести рестарт сервера", 6},
	{"/delacc", "удалить аккаунт игрока", 6},
	{"/asettax", "добавить денег в казну", 6},
	{"/addzone", "управление ЗЗ зонами", 6},
	{"/makeadmin", "добавить модератора", 6},
	{"/setacc", "изменить аккаунт", 6}
};

new Float:med_heal[12][4]=
{
	{402.2206,1495.8298,1113.4723,177.6751}, // кровать 1
	{399.1494,1495.8364,1113.4723,180.8783}, // кровать 2
	{396.0970,1496.4222,1113.4723,174.5418}, // кровать 3
	{396.2024,1498.6829,1113.4723,358.4468}, // кровать 4
	
	{399.2026,1499.2633,1113.4723,359.7001}, // кровать 5
	{402.2095,1499.2626,1113.8922,5.6535}, // кровать 6
	{402.2476,1488.6857,1113.4723,354.9767}, // кровать 7
	{399.2141,1488.6685,1113.4723,353.7159}, // кровать 8
	
	{396.2079,1488.1049,1113.4723,351.2168}, // кровать 9
	{396.1921,1486.0703,1113.4723,170.7350}, // кровать 10
	{399.2430,1485.4954,1113.4723,176.3750}, // кровать 11
	{402.3520,1485.4945,1113.4723,168.8550} // кровать 12
};

new Float:HospitalSpawns[8][4] =
{
	{400.8244,1494.3871,1113.4723,357.5817},
	{397.8929,1494.5132,1113.4723,358.5217},
	{397.8569,1500.3811,1113.4723,179.6067},
	{400.6233,1500.8157,1113.4723,178.3533},
	{400.8087,1489.9912,1113.4723,174.8833},
	{397.5572,1489.8439,1113.4723,180.8367},
	{397.8508,1484.4290,1113.4723,357.2450},
	{400.7686,1484.3151,1113.4723,357.5583}
};

new Float:HospitalArmSpawns[5][4] =
{
	{5468.4609,-1552.2889,109.3159,273.0830},
	{5468.4624,-1549.8176,109.3159,269.3230},
	{5471.5894,-1549.8452,109.3159,90.4080},
	{5471.8052,-1551.7897,109.3159,88.8413},
	{5471.8853,-1554.2983,109.3059,94.7947}
};

new Float:PoliceSpawn[3][4] = {
	{784.6339,162.3082,1012.0163,87.8520},
	{784.8270,165.2261,1012.0163,90.0220},
	{784.8364,168.2595,1012.0163,93.7820}
};

new Text3D:Horses3D,
	Text:Horse[4],
	Text:BG[2],
	Text:Start,
	Text:Finish,
	Text:Start2,
	Text:Finish2,
	HorseCD,
	Text:HorseNum[4],
	HorseAnimCount,
	Float:HorsePosX[4],
	HorseStop,
	RaceStarted;

enum ticlist {
	tID,
	tName[MAX_PLAYER_NAME],
	tPrice,
	tDate[32],
	tReason[30],
}
new TL[MAX_PLAYERS][15][ticlist], TOTALTICKETS[MAX_PLAYERS];
new SALLROWS[MAX_PLAYERS];

#define WD::                    WoodsInfo
#define MAX_WOODS               5
enum woodsInfo {
	woodObject,
	woodZone,
	bool:woodUse
};
new WD::[MAX_WOODS][woodsInfo];

enum woodsObjInfo
{
	woodObjectModel,
	Float: woodObjectPosX,
	Float: woodObjectPosY,
	Float: woodObjectPosZ,
	Float: woodObjectRotX,
	Float: woodObjectRotY,
	Float: woodObjectRotZ
};
new Woods[MAX_WOODS][woodsObjInfo] =
{
	{630, 1809.20, 1448.91, 8.51, 356.86, 0.00, -2.60},
	{8582, 1795.79, 1423.86, 8.52, 0.00, 0.00, 0.00},
	{8582, 1798.46, 1404.44, 8.52, 0.00, 0.00, 0.00},
	{8582, 1786.84, 1371.86, 8.52, 0.00, 0.00, 0.00},
	{8582, 1772.72, 1400.91, 8.52, 0.00, 0.00, -82.86}
};

new Text3D:wood_3dtext;
new woodsklad;
new casino;
new rep_system;
new duels;
new anti_tk;
new tk_unloading[4];

new invite_frac[8];

enum fraction_weapon_data {
	fwID,
	fwName[32],
	fwGunID,
	fwGunAmmo,
	fwArmor,
	fwRank
}
new FW[9][MAX_FRACTIONS + 1][fraction_weapon_data];
new GunTickGet[MAX_PLAYERS][9];

new bool:zahvat = false;
new CaptureAttempt[6]={0,...};
new CountOnZone[23];
new capture_kd[23];
new Text:Capture[10];
new Text:inFigh;
new bool:infight[MAX_PLAYERS];

new fracmoroz [8]={0,...};
new const stock fracmorozName [8][32]={"The Ballas","The Vagos","The Grove","The Rifa","The Aztecas", "La Cosa Nostra", "Yakuza","Русской мафии"};

new BizWarTime[2] = 0,
	BizHourTime = 0,
	Text:Bizwar[3],
	biz_war_gangzone = - 1,
	war_gangzone = - 1;

#define MOROZ_LCN 5
#define MOROZ_YAKUZA 6
#define MOROZ_RM 7
new gBankMafia[3][MAX_BUSINESS_COUNT];

enum MzoneInfo {
	bFrakVlad,
	bNapad,
	bBiz,
	bCountDead[18]
}
new Float:mafia_zone[7][4] = {
	{2107.326660, -2070.414550, 2211.326660, -1894.414550},//Метеостанция 0
	{785.970642, 1813.329589, 945.970642, 1989.329589},//СВ-ВВС 1
	{1633.282714, 2180.452148, 1833.282714, 2332.452148},//Каменная деревня 2
	{1626.604858, 3396.271240, 1834.604858, 3564.271240},//Порт СФ 3
	{1848.764770, 1089.233276, 1984.764770, 1297.233276},//Вестоун 4
	{2596.032226, -2222.973632, 2796.032226, -2046.973632},//Угольная шахта 5
	{1743.265380, 2390.522460, 1887.265380, 2622.522460}//Каменная деревня 6
};
new MZInfo[MzoneInfo];

new IDGZ[MAX_PLAYERS] = {-1,...};
enum GzoneInfo {
	gID,
	gZone,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	gTime,
	ZoneOnBattle,
	gzTimer
}
new GZInfo[125][GzoneInfo];
new VladGzone[MAX_FRACTIONS]={0,...};
new gz_area;
//------------------------------------------------------------------------------
main()
{
	print("_____________________________________________________________________");
	print(" Загрузка игрового мода произошла успешно ");
	print(" Реконструкция специально для "FullServName" © "DEVELYEAR" года выпуска ");
	print(" Разработчик: "DEVELNICK" ("DEVELNAME": "DEVELVKURL"). ");
	print("_____________________________________________________________________");
}
//------------------------------------------------------------------------------

stock Osnovat(const name[])
{
	if(GetString(name, FD1) || GetString(name, FD2) || GetString(name, FD3) || GetString(name, FD4) || GetString(name, FD5) || GetString(name, FD6)) return 1;
	return 0;
}
stock GetIDGZ(playerid) {
	for(new i = 0; i < TOTALGZ; i++)
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) return i;
	return -1;
}
stock GetGangZoneColor(fractionid) return (GZInfo[fractionid][gFrakVlad] == fBALLAS) ? (0xCC00FFAA) : (GZInfo[fractionid][gFrakVlad] == fRIFA) ? (0x6666FFAA) : (GZInfo[fractionid][gFrakVlad] == fVAGOS) ? (0xffff00AA) : (GZInfo[fractionid][gFrakVlad] == fGROVE) ? (0x009900AA) : (0x00CCFFAA);
stock GetGangColor(g) {
	new zx;
	switch(g) {
		case fGROVE: zx = 0x009900AA;
		case fBALLAS: zx = 0xCC00FFAA;
		case fRIFA: zx = 0x6666FFAA;
		case fAZTEC: zx = 0x00CCFFAA;
		case fVAGOS: zx = 0xffff00AA;
		default: zx = 0xC0C0C0AA;
	}
	return zx;
}
stock gang_name(frac) {
	new namegang[20];
	switch(frac) {
		case fGROVE: namegang = "Grove";
		case fAZTEC: namegang = "Aztecas";
		case fBALLAS: namegang = "Ballas";
		case fRIFA: namegang = "Rifa";
		case fVAGOS: namegang = "Vagos";
	}
	return namegang;
}
stock gang_color(frac) {
	new namegang;
	switch(frac) {
		case fGROVE: namegang = 1017789500;
		case fAZTEC: namegang = 531556863;
		case fBALLAS: namegang = -16711681;
		case fRIFA: namegang = -1378294017;
		case fVAGOS: namegang = -5963521;
	}
	return namegang;
}
stock GFrac(frac) {
	new namegang[20];
	switch(frac) {
		case fGROVE: namegang = "Grove Street";
		case fAZTEC: namegang = "Varrios Los Aztecas";
		case fBALLAS: namegang = "East Side Ballas";
		case fRIFA: namegang = "Rifa";
		case fVAGOS: namegang = "Los Santos Vagos";
	}
	return namegang;
}

enum _ATMData {
	Float:ATM_Pos[6],
	atm_VW,
	atm_INT,
	Text3D:atm_Label,
	atm_Object,
	atm_Taken,
	atm_Bank,
	atm_BankTime
}
new ATMData[MAX_ATM + 1][_ATMData], gATMCount;
new EdittingATM[MAX_PLAYERS];

new PlayerText:Captcha[29],
	TextArray[11] = "1234567890";
new Text:func_bcolor[22];
new med_mskin[] = {50,15,35},
	med_gskin[] = {55,90,192};

new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];
new LightsObject[MAX_VEHICLES][2];
//new perf_object_engine[MAX_VEHICLES];

new Float:LightsPos[212][6] =
{
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};
new g_sign_up_timer,
	g_game_status = 0,
	g_default_colors[4] = {0xFFE61400,0xFF0066CC,0xFF319A31,0xFFFF7F00};
	
new p_has_color[MAX_PLAYERS],
	g_start_pos[4] = {0, 7, 56, 63};
	
new b_gobjectid[4],
	b_button[64],
	b_pickupid[64],
	b_objectid[64],
	b_has_color[64],
	b_unique_id[64],
	g_arena_created = false;

new Float:DmArenaSpawns[13][3] = {
	{-15.2709,2522.6272,16.4844},//3
	{0.8387,2480.1719,16.4844},//4
	{10.4950,2515.0256,16.4844},//5
	{8.7762,2528.0828,16.4922},//6
	{34.5469,2523.9570,16.4844},//7
	{48.4432,2478.2725,16.4844},//8
	{54.4565,2481.7009,16.4844},//9
	{52.2536,2509.2185,16.4844},//10
	{56.1235,2517.0713,16.4844},//11
	{89.3234,2481.9392,16.4844},//14
	{107.6609,2493.5183,16.4844},//15
	{92.4067,2522.1169,16.5540},//16
	{112.5036,2519.1624,16.6917}//17
};
new Text3D:DMSTATUS[MAX_PLAYERS];
new PlayerText:DmArenaTextDraw[MAX_PLAYERS];
new PaintGun[] = {24,31,25,30};
new ArenaGun[] = {23,24,25,29,30,31};

new Float:DMPositions[16][3] = {
	{-15.2709,2522.6272,16.4844},//3
	{0.8387,2480.1719,16.4844},//4
	{10.4950,2515.0256,16.4844},//5
	{8.7762,2528.0828,16.4922},//6
	{34.5469,2523.9570,16.4844},//7
	{48.4432,2478.2725,16.4844},//8
	{54.4565,2481.7009,16.4844},//9
	{52.2536,2509.2185,16.4844},//10
	{56.1235,2517.0713,16.4844},//11
	{89.3234,2481.9392,16.4844},//14
	{107.6609,2493.5183,16.4844},//15
	{92.4067,2522.1169,16.5540},//16
	{112.5036,2519.1624,16.6917},//17
	{112.5036,2519.1624,16.6917},//18
	{112.5036,2519.1624,16.6917},//19
	{112.5036,2519.1624,16.6917}//20
};
/*============== [ Кости ] ===============*/
#define MIN_IGROKOV (2)
#define MIN_STAVKA 1000
#define MAX_STAVKA 5000000
#define MAX_TABLES_DICE 3
enum Casino_TD_Data {
	Text:Casino_TD_Set_Bet,
	Text:Casino_TD_Dice,
	Text:Casino_TD_Exit,
	Text:Casino_TD_TableNicks[MAX_TABLES_DICE],
	Text:Casino_TD_TableScore[MAX_TABLES_DICE],
	Text:Casino_TD_TableName[MAX_TABLES_DICE],
	Text:Casino_TD_Box,
	Text:Casino_TD_Enum,
	Text:Casino_TD_Lines[5],
	Text:Casino_TD_Modeled[2]
}
new Casino_TD[Casino_TD_Data],
	PlayerText:PTD_DiceStat[MAX_PLAYERS] = {PlayerText:-1,...};

#define CASINO_TEXT_STRING ""ORANGE"Стол №%d\n\n"W"Крупье: "P"   %s\n\n"W"Игрок 1:"G"   %s\n"W"Игрок 2:"G"   %s\n"W"Игрок 3:"G"   %s\n"W"Игрок 4:"G"   %s\n"W"Игрок 5:"G"   %s\n\n"W"Ставка: "ORANGE"$%d\n"W"Банк: "ORANGE"$%d\n\n"W"Статус: {EB3F36}%s\n"G"Для начала игры нажмите "W"'F'\n"
enum InfoDice_ {
	dice_gamer[5],
	dice_score[5],
	dice_stavka,
	dice_bank,
	dice_crup,
	bool:dice_game_start,
	dice_area,
	Text3D:dice_text,
	dice_game_start_time,
	dice_game_start_timer
}
new InfoDice[MAX_TABLES_DICE][InfoDice_];
new Casino_Flag[MAX_PLAYERS][6];

#define show_casino_td 0
#define select_casino_table 1
#define casino_crup 2
#define casino_bet_cash 3

//////////////////////////////////////////////////////////////////
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

/*
new Float:spawn_sf[][] = {
	{-1977.4750,123.1160,27.7047,270.2929}, // ЖД СФ 1
	{-1977.4535,137.6149,27.7047,270.2929}, // ЖД СФ 2
	{-1977.4214,152.9397,27.7047,270.2928}, // ЖД СФ 3
	{-1977.4877,164.1166,27.7047,269.0396}, // ЖД СФ 4
	{-1963.0514,164.0291,27.7087,89.4980}, // ЖД СФ 5
	{-1963.0869,145.2251,27.7087,88.5580}, // ЖД СФ 6
	{-1963.0641,134.3678,27.7087,90.4380}, // ЖД СФ 7
	{-1963.0579,123.5178,27.7087,91.0647} // ЖД СФ 8
};
new Float:spawn_lv[][] = {
	{2856.6641,1302.9756,11.3937,359.4539}, // spawn LV 1
	{2856.6882,1300.3547,11.3937,179.2388}, // spawn LV 2
	{2856.5376,1284.9554,11.3937,359.6737}, // spawn LV 3
	{2856.6653,1282.2377,11.3937,179.1685}, // spawn LV 4
	{2856.5779,1268.9857,11.3937,359.9402}, // spawn LV 5
	{2856.6326,1266.2780,11.3937,179.7486}, // spawn LV 6
	{2856.5842,1251.0560,11.3937,0.2069}, // spawn LV 7
	{2856.6763,1248.3767,11.3937,179.1219} // spawn LV 8
};
*/

new actorereg[MAX_PLAYERS][2];
new Talk[][] = {
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};

new PlayerTrailerTime[MAX_PLAYERS];

new Float:car_fuels[4][3] =
{
	{2063.8589,-2614.4792,10.8149},
	{2062.8655,-2617.9150,10.8149},
	{2064.0579,-2621.9053,10.8149},
	{2064.5244,-2625.8816,10.8149}
};

enum fracspawn {
	fracInt,
	fracWorld,
	fracColor,
	Float:fracCoordsX,
	Float:fracCoordsY,
	Float:fracCoordsZ,
	Float:fracCoordsA
}
new Float:gFractionSpawn[MAX_FRACTIONS][fracspawn] =
{
	//saneka
	{0,0,TEAM_HIT_COLOR,0.0,0.0,0.0,0.0},
	{99,40,0x110CE7FF,703.3784,911.7471,1112.9851,1.6379}, //LSPD + - 766.8434,159.7164,1012.0163,90.3590
	{99,41,0x110CE7FF,784.4442, 154.5575, 1502.3182,90.00}, //SFPD +
	
	{99,42,0x110CE7FF,1329.2845,886.7735,1115.4399,181.1844}, //LVPD - 766.8434,159.7164,1012.0163,90.3590
	
	{75,43,0x313131AA,-79.3983,1790.1919,2022.6899,87.4154}, //FBI + - 1736.9701,412.9683,1003.9044,218.0
	{77,44,0x114D71FF,1137.6653,2549.3228,1115.5601,177.6125}, //mayor + - -2082.7222,1126.6173,1010.4327,270.0
	
	{87,59,0x5aa652FF,1054.5026,2970.1165,1112.8678,273.0552}, //ArmySf + - -328.8514,326.8230,2213.0000,260.9382
	
	{87,60,0x5aa652FF,250.4903,108.3510,1024.3394,200.4394}, //ArmyLV - DELETE
	
	{93,20,0xA52A2AFF,2102.1121,1504.1903,1006.7396,236.6010}, //Medics Ls +
	
	{93,21,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Sf - DELETE
	{93,22,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Lv - DELETE
	
	{74,10,0x40848BAA,1261.8911,1481.3394,1114.8402,269.0277}, // LSn + - 1905.6018,-2262.3198,1001.0859,15.0987
	
	{74,11,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667},//SFn - DELETE
	{74,12,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667},//LVn - DELETE
	
	{76,45,0x139BECFF,2261.8291,2710.5320,1122.4604,325.2291},//Instructors + - -632.2750,2196.0964,1003.5532,270.3437
	
	{73,49,0xDDA701FF,2569.4800,-1845.5707,2522.8401,252.8985},//LCN
	{73,50,COLOR_REDD,-1786.3325,-642.9802,1001.0900,115.2369},//Yakuza - DELETE
	{73,51,COLOR_GRAD1,2569.7114,-1845.6210,2522.8401,180.8666},//RM +
	
	{95,52,0xB313E7FF,-1147.0446,2551.6362,1141.5186,264.7298},//Ballas + - 2569.0618,-1844.7719,2522.8401,244.4333
	{98,53,0xDBD604AA,-1513.1685,-622.5582,1001.0062,270.0},//Vagos +
	{94,54,0x009F00AA,-1147.0446,2551.6362,1141.5186,264.7298},//Grove + - 2569.0618,-1844.7719,2522.8401,244.4333
	{96,55,TEAM_AZTECAS_COLOR,-2625.4299,2914.8960,2738.6201,277.8666},//Aztec +
	
	{97,56,0x2A9170FF,-1513.1685,-622.5582,1001.0062,270.0},//Rifa
	{83,57,0x3B9619FA,1138.1381,2549.4524,1115.5601,267.5013}//WhiteHouse
};

new gpss[MAX_PLAYERS];

enum suspect_data {
	suspect_name_folder[31],
	suspect_name_reason[90],
	suspect_level[4]
}
static const stock suspect_player[13][suspect_data] = {
	{"Нападение",							"Нападение на гражданина\nНападение на сотр. гос.организации", 												{2,4,-1,-1}},
	{"Нападение с применением оружия",		"Нападение на гражданина\nНападение на сотр. гос.организации",												{3,3,-1,-1}},
	{"Хулиганство",							"Ограбление\nМелкое хулиганство\nУгон",																		{2,1,3,-1}},
	{"Оружие",								"Хранение без лицензии\nКража металла\nХранение металла\nТорговля оружием",									{1,2,3,3}},
	{"Взятка",								"Попытка дачи взятки",																						{2,-1,-1,-1}},
	{"Наркотические вещества",				"Использование наркотических веществ\nРеклама/Продажа/Хранение наркотиков",									{2,3,-1,-1}},
	{"Транспортные средства",				"Порча т/с или гос. имущества\nНарушение ПДД\nУгон частного т/с\nПопытка угона т/с",						{2,1,2,2}},
	{"Неподчинение",						"Неподчинение сотруднику ПД/ФБР\nНеподченение сотруднику гос. структур",									{1,2,-1,-1}},
	{"Соучастие",							"Соучастие в преступлении",																					{1,-1,-1,-1}},
	{"Проникновение",						"На объекты част. собственности\nНа охран. территорию\nВ хранилище банка",									{1,2,3,-1}},
	{"Похищение",							"Попытка похищения\nПохищение\nПохищение гос.сотрудника",													{2,3,4,-1}},
	{"Терракт",								"Планирование/Исполнение терракта",																			{6,-1,-1,-1}},
	{"Митинг",								"Организация нелегального митинга\nОрганизация революции\nВовлечение в терр.организацию",					{2,4,4,-1}}
};
new Float:camExit[5][4] = {
	{-583.4092,492.2425,10.9161,275.8354},
	{2748.2109,-2444.3838,21.6890,84.0736},
	{2579.7571,-2416.1526,21.9888,271.5937},
	{2748.2109,-2444.3838,21.6890,84.0736},
	{2748.2109,-2444.3838,21.6890,84.0736}
};
    
enum autosalon {
	autoCars,
	autoClass,
	autoWorld
}
new autosaloncar[78][autosalon] =
{
	{419,0,1},//1
	{404,0,1},//2
	{401,0,1},//3
	{410,0,1},//4
	{412,0,1},//5
	{413,0,1},//6
	{422,0,1},//7
	{439,0,1},//8
	{467,0,1},//9
	{466,0,1},//10
	{474,0,1},//11
	{479,0,1},//12
	///////////////////////////////////////
	{492,1,2},//13
	{491,1,2},//14
	{517,1,2},//15
	{518,1,2},//16
	{542,1,2},//17
	{543,1,2},//18
	{545,1,2},//19
	{549,1,2},//20
	{575,1,2},//21
	{576,1,2},//22
	{600,1,2},//23
	{585,1,2},//24
	///////////////////////////////////////
	{603,2,3},//25
	{579,2,3},//26
	{589,2,3},//27
	{580,2,3},//28
	{567,2,3},//29
	{566,2,3},//30
	{561,2,3},//31
	{558,2,3},//32
	{555,2,3},//33
	{554,2,3},//34
	{551,2,3},//35
	{534,2,3},//36
	///////////////////////////////////////
	{527,2,4},//37
	{535,2,4},//38
	{507,2,4},//39
	{505,2,4},//40
	{526,2,4},//41
	{533,2,4},//42
	{500,2,4},//43
	{496,2,4},//44
	{475,2,4},//45
	{445,2,4},//46
	{426,2,4},//47
	{421,2,4},//48
	///////////////////////////////////////
	{405,3,5},//49
	{400,3,5},//50
	{602,3,5},//51
	{587,3,5},//52
	{559,3,5},//53
	{560,3,5},//54
	{562,3,5},//55
	{541,3,5},//56
	{506,3,5},//57
	{480,3,5},//58
	{434,3,5},//59
	{477,3,5},//60
	{415,3,5},//61
	{429,3,5},//62
	{402,3,5},//63
	{451,3,5},//64
	{411,3,5},//65
	{495,3,5},//66
	{494,3,5},//67
	///////////////////////////////////////
	{481,3,6},//68
	{509,3,6},//69
	{510,3,6},//70
	{462,3,6},//71
	{461,3,6},//72
	{521,3,6},//73
	{463,3,6},//74
	{586,3,6},//75
	{471,3,6},//76
	{468,3,6},//77
	{522,3,6}//78
};
/*
enum autosalon {
	autoCars,
	autoClass,
	autoWorld,
	Float:autoPosX,
	Float:autoPosY,
	Float:autoPosZ
}
new autosaloncar[78][autosalon] =
{
	{419,0,1,1445.2085,705.7338,1087.9011},//1
	{404,0,1,1445.2091,710.9103,1087.9011},//1
	{401,0,1,1445.2209,716.5020,1087.9011},//3
	{410,0,1,1445.2075,721.8635,1087.9011},//4
	{412,0,1,1445.2218,727.5889,1087.9011},//5
	{413,0,1,1445.2330,733.3967,1087.9011},//6
	{422,0,1,1440.6002,735.0201,1087.9011},//7
	{439,0,1,1429.7894,740.1119,1087.9241},//8
	{467,0,1,1429.7721,735.5907,1087.9241},//9
	{466,0,1,1429.7736,731.3618,1087.9241},//10
	{474,0,1,1429.8004,726.9999,1087.9241},//11
	{479,0,1,1429.8016,723.1078,1087.9241},//12
	{492,0,1,1429.7720,718.8213,1087.9241},//13
	{491,0,1,1429.7936,714.4084,1087.9241},//14
	{517,0,1,1429.7799,709.7604,1087.9241},//15
	{518,0,1,1429.7854,705.0353,1087.9241},//16
	{542,0,1,1429.7755,699.8195,1087.9241},//17
	{543,0,1,1441.5001,712.2757,1087.9011},//18
	{545,0,1,1441.5013,725.3693,1087.9011},//19

	{549,0,2,1445.2085,705.7338,1087.9011},//1
	{575,0,2,1445.2091,710.9103,1087.9011},//1
	{576,0,2,1445.2209,716.5020,1087.9011},//3
	{600,0,2,1445.2075,721.8635,1087.9011},//4
	{585,0,2,1445.2218,727.5889,1087.9011},//5
	///////////////////////////////////////
	{603,1,3,1445.2085,705.7338,1087.9011},//1
	{579,1,3,1445.2091,710.9103,1087.9011},//1
	{589,1,3,1445.2209,716.5020,1087.9011},//3
	{580,1,3,1445.2075,721.8635,1087.9011},//4
	{567,1,3,1445.2218,727.5889,1087.9011},//5
	{566,1,3,1445.2330,733.3967,1087.9011},//6
	{561,1,3,1440.6002,735.0201,1087.9011},//7
	{558,1,3,1429.7894,740.1119,1087.9241},//8
	{555,1,3,1429.7721,735.5907,1087.9241},//9
	{554,1,3,1429.7736,731.3618,1087.9241},//10
	{551,1,3,1429.8004,726.9999,1087.9241},//11
	{534,1,3,1429.8016,723.1078,1087.9241},//12
	{527,1,3,1429.7720,718.8213,1087.9241},//13
	{535,1,3,1429.7936,714.4084,1087.9241},//14
	{507,1,3,1429.7799,709.7604,1087.9241},//15
	{505,1,3,1429.7854,705.0353,1087.9241},//16
	{526,1,3,1429.7755,699.8195,1087.9241},//17
	{533,1,3,1441.5001,712.2757,1087.9011},//18
	{500,1,3,1441.5013,725.3693,1087.9011},//19

	{496,1,4,1445.2085,705.7338,1087.9011},//1
	{475,1,4,1445.2091,710.9103,1087.9011},//1
	{445,1,4,1445.2209,716.5020,1087.9011},//3
	{426,1,4,1445.2075,721.8635,1087.9011},//4
	{421,1,4,1445.2218,727.5889,1087.9011},//5
	{405,1,4,1445.2330,733.3967,1087.9011},//6
	{400,1,4,1440.6002,735.0201,1087.9011},//7
	//////////////////////////////////////
	{602,2,5,1445.2085,705.7338,1087.9011},//1
	{587,2,5,1445.2091,710.9103,1087.9011},//1
	{559,2,5,1445.2209,716.5020,1087.9011},//3
	{560,2,5,1445.2075,721.8635,1087.9011},//4
	{562,2,5,1445.2218,727.5889,1087.9011},//5
	{541,2,5,1445.2330,733.3967,1087.9011},//6
	{506,2,5,1440.6002,735.0201,1087.9011},//7
	{480,2,5,1429.7894,740.1119,1087.9241},//8
	{434,2,5,1429.7721,735.5907,1087.9241},//9
	{477,2,5,1429.7736,731.3618,1087.9241},//10
	{415,2,5,1429.8004,726.9999,1087.9241},//11
	{429,2,5,1429.8016,723.1078,1087.9241},//12
	{402,2,5,1429.7720,718.8213,1087.9241},//13
	{451,2,5,1429.7936,714.4084,1087.9241},//14
	{411,2,5,1429.7799,709.7604,1087.9241},//15
	{495,2,5,1429.7854,705.0353,1087.9241},//15
	{494,2,5,1429.7755,699.8195,1087.9241},//15
	///////////////////////////////////////
	{481,3,6,1445.2085,705.7338,1087.9011},//1
	{509,3,6,1445.2091,710.9103,1087.9011},//1
	{510,3,6,1445.2209,716.5020,1087.9011},//3
	{462,3,6,1445.2075,721.8635,1087.9011},//4
	{461,3,6,1445.2218,727.5889,1087.9011},//5
	{521,3,6,1445.2330,733.3967,1087.9011},//6
	{463,3,6,1440.6002,735.0201,1087.9011},//7
	{586,3,6,1429.7894,740.1119,1087.9241},//8
	{471,3,6,1429.7721,735.5907,1087.9241},//9
	{468,3,6,1429.7736,731.3618,1087.9241},//10
	{522,3,6,1429.8004,726.9999,1087.9241}//11
};
*/
new aSellCar[78],
	car_pickup[78],
	table_car_obj[78];

new donate_car[22][2] = {
	{409,200},//0
	{424,400},//1
	{444,1000},//2
	{459,200},//3
	{470,600},//4
	{478,250},//5
	{482,180},//6
	{490,600},//7
	{502,1000},//8
	{503,1000},//9
	{504,1000},//10
	{528,600},//11
	{531,300},//12
	{539,1200},//13
	{556,1000},//14
	{557,1000},//15
	{568,800},//16
	{571,700},//17
	{573,900},//18
	{578,900},//19
	{599,600},//20
	{601,1200}//21
};

/*
new Float:hotel_spawncar[34][4] = {
	//ЛВ
	{1900.8213, 1988.9442, 7.2995, 180.0000},
	{1897.3031, 1988.9442, 7.2995, 180.0000},
	{1893.6305, 1988.9442, 7.2995, 180.0000},
	{1890.0723, 1988.9442, 7.2995, 180.0000},
	{1886.3447, 1988.9442, 7.2995, 180.0000},
	{1882.7974, 1988.9442, 7.2995, 180.0000},
	{1879.2885, 1988.9442, 7.2995, 180.0000},
	{1875.6777, 1988.9442, 7.2995, 180.0000},
	{1871.9949, 1988.9442, 7.2995, 180.0000},
	{1868.5052, 1988.9442, 7.2995, 180.0000},
	//ЛС
	{279.2335, -1536.3569, 24.2992, 234.8225},
	{282.6563, -1532.0404, 24.2992, 234.8225},
	{286.0143, -1527.7018, 24.2992, 234.8225},
	{289.2401, -1523.2544, 24.2992, 234.8225},
	{292.5214, -1518.8168, 24.2992, 234.8225},
	{295.7639, -1514.4993, 24.2992, 234.8225},
	{298.8854, -1509.8937, 24.2992, 234.8225},
	{302.0367, -1505.2727, 24.2992, 234.8225},
	{304.5532, -1501.3510, 24.2992, 234.8225},
	//LV ROCK
	{2610.9695, 2279.4922, 10.5251, 90.0000},
	{2610.9695, 2275.3081, 10.5251, 90.0000},
	{2610.9695, 2271.1663, 10.5251, 90.0000},
	{2610.9695, 2266.9214, 10.5251, 90.0000},
	{2610.9695, 2262.7231, 10.5251, 90.0000},
	//СФ
	{-2493.8018, 284.6566, 34.8714, 162.6043},
	{-2490.5122, 283.7906, 34.8714, 162.6043},
	{-2487.1584, 282.7819, 34.8714, 162.6043},
	{-2484.0061, 281.8705, 34.8714, 162.6043},
	{-2480.6489, 280.8499, 34.8714, 162.6043},
	{-2477.3955, 279.9110, 34.8714, 162.6043},
	{-2474.2861, 278.9149, 34.8714, 162.6043},
	{-2470.8843, 278.0006, 34.8714, 162.6043},
	{-2467.7415, 276.9304, 34.8714, 162.6043},
	{-2464.1814, 275.9180, 34.8714, 162.6043}
};
new Float:hotel_spawnscar[60][4] =
{
	{1639.2523, 681.8748, 589.2706, 270.0000},
	{1639.2523, 685.3676, 589.2634, 270.0000},
	{1639.2523, 689.1181, 589.2706, 270.0000},
	{1639.2523, 692.9104, 589.2707, 270.0000},
	{1639.2523, 696.7643, 589.2707, 270.0000},
	{1639.2523, 700.5690, 589.2707, 270.0000},
	{1639.2523, 704.2307, 589.2706, 270.0000},
	{1639.2523, 707.8220, 589.2714, 270.0000},
	{1639.2523, 711.6429, 589.2697, 270.0000},
	{1661.5199, 708.4477, 589.2723, 0.0000},
	{1665.6879, 708.4477, 589.2725, 0.0000},
	{1669.7159, 708.4477, 589.2707, 0.0000},
	{1690.4121, 708.4477, 589.2707, 0.0000},
	{1694.5243, 708.4477, 589.2725, 0.0000},
	{1698.7091, 708.4477, 589.2682, 0.0000},
	{1698.7136, 692.3749, 589.2707, 180.0000},
	{1694.6134, 692.3749, 589.2707, 180.0000},
	{1690.3038, 692.3749, 589.2707, 180.0000},
	{1686.2885, 692.3749, 589.2706, 180.0000},
	{1673.9747, 692.3749, 589.2707, 180.0000},
	{1669.7694, 692.3749, 589.2725, 180.0000},
	{1665.6481, 692.3749, 589.2722, 180.0000},
	{1661.4946, 692.3749, 589.2725, 180.0000},
	{1645.2010, 675.7460, 589.2640, 0.0000},
	{1649.1854, 675.7460, 589.2623, 0.0000},
	{1653.5624, 675.7460, 589.2503, 0.0000},
	{1657.5077, 675.7460, 589.2647, 0.0000},
	{1661.5767, 675.7460, 589.2480, 0.0000},
	{1665.5404, 675.7460, 589.2515, 0.0000},
	{1669.8055, 675.7460, 589.2491, 0.0000},
	{1673.8234, 675.7460, 589.2576, 0.0000},
	{1678.0140, 675.7460, 589.2639, 0.0000},
	{1682.2246, 675.7460, 589.2675, 0.0000},
	{1686.1377, 675.7460, 589.2593, 0.0000},
	{1690.4374, 675.7460, 589.2601, 0.0000},
	{1694.4039, 675.7460, 589.2617, 0.0000},
	{1698.6069, 675.7460, 589.2545, 0.0000},
	{1702.7660, 675.7460, 589.2673, 0.0000},
	{1706.8040, 675.7460, 589.2642, 0.0000},
	{1710.9709, 675.7460, 589.2601, 0.0000},
	{1715.1213, 675.7460, 589.2668, 0.0000},
	{1721.3688, 682.6960, 589.2549, 90.0000},
	{1721.3688, 688.2509, 589.2630, 90.0000},
	{1721.3688, 693.4296, 589.2612, 90.0000},
	{1721.3688, 698.6730, 589.2632, 90.0000},
	{1721.3688, 702.4772, 589.2640, 90.0000},
	{1723.1814, 724.6450, 589.2619, 180.0000},
	{1719.1642, 724.6450, 589.2607, 180.0000},
	{1714.9835, 724.6450, 589.2621, 180.0000},
	{1710.7709, 724.6450, 589.2488, 180.0000},
	{1706.9706, 724.6450, 589.2467, 180.0000},
	{1702.7843, 724.6450, 589.2603, 180.5041},
	{1698.5903, 724.6450, 589.2646, 180.0000},
	{1694.5520, 724.6450, 589.2487, 180.0000},
	{1690.4575, 724.6450, 589.2648, 180.0000},
	{1686.3148, 724.6450, 589.2678, 180.0000},
	{1682.1447, 724.6450, 589.2514, 180.0000},
	{1678.0258, 724.6450, 589.2576, 180.0000},
	{1673.8429, 724.6450, 589.2629, 180.0000},
	{1669.6791, 724.6450, 589.2625, 180.0000}
};
*/

new Float:hotel_spawnscar[13][4] =
{
	{162.5070,-522.4277,-75.4269,272.2905},
	{163.0466,-518.4737,-75.4271,272.1077},
	{162.4978,-515.0549,-75.4270,268.0024},
	{162.7312,-511.3097,-75.4268,270.0597},
	{162.3963,-507.9203,-75.4270,268.3597},
	{163.6619,-504.5297,-75.4271,270.2256},
	{163.9703,-501.0208,-75.4269,269.9605},
	{163.6117,-497.4827,-75.4268,269.7734},
	{163.4236,-494.2056,-75.4270,271.7692},
	{163.7478,-491.1666,-75.4270,272.1105},
	{163.7663,-487.4784,-75.4269,268.8136},
	{182.4991,-489.0731,-74.2951,179.9488},
	{177.6237,-488.3008,-74.2949,179.8530}
};

new Float:exitgarage[4][4] =
{
	{2571.3704,2498.9829,1112.4916,267.9586},//N
	{-873.2665,2697.5222,1144.9087,0.3695},//D
	{1981.1202,2083.4971,1101.1250,355.6017},//B
	{2201.3887,2834.7783,1117.7094,3.6261}//A
};
new Float:cargarage[8][4] =
{
	{2574.7544,2499.8926,1112.1124,269.8675},//N
	{2574.6855,2503.3179,1112.0974,270.1603},//N
	{-875.2031,2702.2732,1144.5363,359.5857},//D
	{-880.5219,2702.1223,1144.5364,1.0471},//D
	{1976.7610,2093.7087,1100.7283,90.3764},//B
	{1976.8516,2086.4961,1100.7280,93.4691},//B
	{2189.2673,2849.7095,1117.3439,270.9428},//A
	{2200.5605,2850.0056,1117.3440,90.7061}//A
};

enum TRANSPORT_DATA {
	trID,
	trModel,
	trName[35],
	trPrice,
	trTank,
	trConsumption,
	trClass,
	trFuelable,
	trSellable,
	trProds
}
new gTransport[220][TRANSPORT_DATA];

#define BUS_PRICE_CHECKPOINT 50
#define BUS_PRICE_RENT 500

new Text3D:gPlayerBusText[MAX_PLAYERS] = {Text3D:INVALID_3DTEXT_ID,...},
	gRouteName[7][32];
	
new Float:gBusCPs[7][111][4] =
{
	{
		{0.0,2107.6523,-1878.3065,19.1905}, // Автобус ЛС - Яблочный сад 1
		{0.0,2176.4150,-1757.4803,19.8586}, // Автобус ЛС - Яблочный сад 2
		{0.0,2287.4375,-1721.5022,22.1856}, // Автобус ЛС - Яблочный сад 3
		{0.0,2403.2354,-1525.4205,24.1943}, // Автобус ЛС - Яблочный сад 4
		{0.0,2608.6448,-1524.3752,24.2200}, // Автобус ЛС - Яблочный сад 5
		{0.0,2750.0383,-1395.3458,24.2063}, // Автобус ЛС - Яблочный сад 6
		{1.0,2755.8589,-972.1929,24.1498}, // Автобус ЛС - Яблочный сад 7 ОСТ

		{0.0,2755.3374,-570.3798,24.1032}, // Автобус ЛС - Яблочный сад 8
		{0.0,2894.1890,-249.6561,24.3003}, // Автобус ЛС - Яблочный сад 9
		{0.0,2910.3552,-87.9105,25.9696}, // Автобус ЛС - Яблочный сад 10
		{0.0,2910.3430,91.9880,17.6708}, // Автобус ЛС - Яблочный сад 11
		{0.0,2909.9443,357.5655,18.7582}, // Автобус ЛС - Яблочный сад 12
		{1.0,2909.8005,517.9205,26.5757}, // Автобус ЛС - Яблочный сад 13 ОСТ
		
		{0.0,2857.6411,754.0831,32.1044}, // Автобус ЛС - Яблочный сад 14
		{0.0,2747.7468,958.7206,26.1311}, // Автобус ЛС - Яблочный сад 15
		{0.0,2671.1709,1182.2889,22.3871}, // Автобус ЛС - Яблочный сад 16
		{0.0,2638.1401,1234.7260,22.5515}, // Автобус ЛС - Яблочный сад 17
		{0.0,2649.8335,1575.5234,16.6381}, // Автобус ЛС - Яблочный сад 18
		{0.0,2749.8613,1870.4579,16.5319}, // Автобус ЛС - Яблочный сад 19
		{1.0,2761.1233,2061.3438,18.3325}, // Автобус ЛС - Яблочный сад 20 ОСТ
		
		{0.0,2751.0757,2363.7202,16.3410}, // Автобус ЛС - Яблочный сад 21
		{0.0,2716.1914,2569.8088,16.2771}, // Автобус ЛС - Яблочный сад 22
		{0.0,2683.8335,2737.9565,18.2341}, // Автобус ЛС - Яблочный сад 23
		{0.0,2526.0400,2922.6228,24.7770}, // Автобус ЛС - Яблочный сад 24
		{0.0,2266.3501,2965.6514,14.9129}, // Автобус ЛС - Яблочный сад 25
		{0.0,2072.7686,2927.3101,12.7162}, // Автобус ЛС - Яблочный сад 26
		{0.0,2004.5461,2798.5042,14.9540}, // Автобус ЛС - Яблочный сад 27
		{1.0,1882.6650,2641.0974,15.5989}, // Автобус ЛС - Яблочный сад 28 ОСТ

		{0.0,1761.6755,2544.2737,15.6149}, // Автобус ЛС - Яблочный сад 29
		{0.0,1804.7205,2436.8647,16.3334}, // Автобус ЛС - Яблочный сад 30
		{0.0,1870.6244,2336.3542,16.3330}, // Автобус ЛС - Яблочный сад 31
		{0.0,1889.0074,2215.7827,16.3069}, // Автобус ЛС - Яблочный сад 32
		{1.0,1888.6443,2114.9663,16.2713}, // Автобус ЛС - Яблочный сад 33 ОСТ
		
		{0.0,1854.1160,2055.3423,16.2566}, // Автобус ЛС - Яблочный сад 34
		{0.0,1771.9424,2098.0552,16.4057}, // Автобус ЛС - Яблочный сад 35
		{1.0,1771.6752,2157.3894,16.4034}, // Автобус ЛС - Яблочный сад 36 ОСТ
		
		{0.0,1782.7642,2225.2729,16.2023}, // Автобус ЛС - Яблочный сад 37
		{0.0,1864.4573,2226.0981,16.1926}, // Автобус ЛС - Яблочный сад 38
		{0.0,1888.8641,2279.5247,16.3326}, // Автобус ЛС - Яблочный сад 39
		{0.0,1848.2242,2368.6411,16.3333}, // Автобус ЛС - Яблочный сад 40
		{0.0,1779.9049,2469.5044,16.3430}, // Автобус ЛС - Яблочный сад 41
		{0.0,1789.6945,2560.8457,15.6184}, // Автобус ЛС - Яблочный сад 42
		{0.0,1913.8917,2679.3005,15.6193}, // Автобус ЛС - Яблочный сад 43
		{0.0,1999.6638,2790.7913,15.2690}, // Автобус ЛС - Яблочный сад 44
		{0.0,2069.4536,2917.5095,13.1907}, // Автобус ЛС - Яблочный сад 45
		{0.0,2160.8406,2953.1682,11.4796}, // Автобус ЛС - Яблочный сад 46
		{0.0,2327.2864,2951.8267,18.5189}, // Автобус ЛС - Яблочный сад 47
		{0.0,2531.6196,2907.2009,24.6005}, // Автобус ЛС - Яблочный сад 48
		{1.0,2644.5005,2801.6438,20.4717}, // Автобус ЛС - Яблочный сад 49 ОСТ

		{0.0,2698.3784,2617.6326,16.6700}, // Автобус ЛС - Яблочный сад 50
		{0.0,2732.6824,2416.0425,15.9863}, // Автобус ЛС - Яблочный сад 51
		{0.0,2753.9189,2225.9189,17.7178}, // Автобус ЛС - Яблочный сад 52
		{0.0,2747.9275,2037.7928,18.2016}, // Автобус ЛС - Яблочный сад 53
		{0.0,2741.7119,1892.1075,16.7221}, // Автобус ЛС - Яблочный сад 54
		{0.0,2695.4917,1649.6254,17.2458}, // Автобус ЛС - Яблочный сад 55
		{0.0,2583.8232,1539.6914,14.3595}, // Автобус ЛС - Яблочный сад 56
		{0.0,2596.4043,1282.3323,20.3921}, // Автобус ЛС - Яблочный сад 57
		{0.0,2649.3291,1198.1688,22.8163}, // Автобус ЛС - Яблочный сад 58
		{0.0,2725.9341,984.0398,23.6993}, // Автобус ЛС - Яблочный сад 59
		{0.0,2818.6892,792.8928,31.4356}, // Автобус ЛС - Яблочный сад 60
		{0.0,2897.3416,550.3638,28.7828}, // Автобус ЛС - Яблочный сад 61
		{0.0,2900.4573,298.7348,15.9926}, // Автобус ЛС - Яблочный сад 62
		{0.0,2901.9651,86.3529,17.7020}, // Автобус ЛС - Яблочный сад 63
		{0.0,2900.3335,-60.3884,25.4232}, // Автобус ЛС - Яблочный сад 64
		{0.0,2899.1597,-159.8835,25.0319}, // Автобус ЛС - Яблочный сад 65
		{0.0,2829.7637,-346.5728,27.2199}, // Автобус ЛС - Яблочный сад 66
		{1.0,2747.9045,-513.7966,24.2805}, // Автобус ЛС - Яблочный сад 67 ОСТ

		{0.0,2742.2517,-656.9021,24.2695}, // Автобус ЛС - Яблочный сад 68
		{0.0,2741.2998,-801.0778,24.2421}, // Автобус ЛС - Яблочный сад 69
		{0.0,2740.5095,-1011.8728,24.1759}, // Автобус ЛС - Яблочный сад 70
		{0.0,2739.5610,-1103.9957,23.9363}, // Автобус ЛС - Яблочный сад 71
		{0.0,2739.1694,-1248.9102,23.9312}, // Автобус ЛС - Яблочный сад 72
		{0.0,2733.4602,-1448.1063,23.9753}, // Автобус ЛС - Яблочный сад 73
		{0.0,2585.4678,-1513.6908,24.0314}, // Автобус ЛС - Яблочный сад 74
		{0.0,2464.6260,-1514.2004,24.0689}, // Автобус ЛС - Яблочный сад 75
		{0.0,2392.1677,-1517.8660,24.2036}, // Автобус ЛС - Яблочный сад 76
		{0.0,2279.7607,-1698.5986,22.1938}, // Автобус ЛС - Яблочный сад 77
		{0.0,2240.3215,-1749.1917,22.1937}, // Автобус ЛС - Яблочный сад 78
		{0.0,2124.3259,-1748.9202,19.2212}, // Автобус ЛС - Яблочный сад 79
		{0.0,2099.6499,-1823.0977,19.1938}, // Автобус ЛС - Яблочный сад 80
		{0.0,2099.6084,-1875.3308,19.1839}, // Автобус ЛС - Яблочный сад 81
		{0.0,2096.0110,-1925.2543,19.1930}, // Автобус ЛС - Яблочный сад 82
		{0.0,2095.9077,-1997.1908,19.1921}, // Автобус ЛС - Яблочный сад 83
		{0.0,2139.0210,-2017.8843,19.1912}, // Автобус ЛС - Яблочный сад 84
		{0.0,2171.7405,-1972.2919,19.1928}, // Автобус ЛС - Яблочный сад 85
		{1.0,2139.6882,-1922.1080,19.1938}, // Автобус ЛС - Яблочный сад 86 ОСТ конечная
		
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{//оружейка
		{0.0,2109.9468,-1877.8254,19.1941}, // Автобус ЛС - Оружейка 1
		{0.0,2142.0491,-1758.9835,19.1765}, // Автобус ЛС - Оружейка 2
		{0.0,2287.2747,-1724.8535,22.1835}, // Автобус ЛС - Оружейка 3
		{0.0,2325.0627,-1550.6483,24.0895}, // Автобус ЛС - Оружейка 4
		{0.0,2507.3621,-1527.7457,24.1874}, // Автобус ЛС - Оружейка 5
		{0.0,2666.7839,-1525.9966,24.0953}, // Автобус ЛС - Оружейка 6
		{1.0,2750.7961,-1392.0132,24.1755}, // Автобус ЛС - Оружейка 7 ОСТ
		
		{0.0,2754.8848,-938.8199,24.1914}, // Автобус ЛС - Оружейка 8
		{0.0,2710.9763,-917.5261,22.8178}, // Автобус ЛС - Оружейка 9
		{0.0,2632.2910,-766.8449,13.0895}, // Автобус ЛС - Оружейка 10
		{0.0,2620.9133,-687.3539,14.2321}, // Автобус ЛС - Оружейка 11
		{0.0,2739.5940,-737.5149,24.1808}, // Автобус ЛС - Оружейка 12
		{1.0,2739.1228,-925.5858,24.1646}, // Автобус ЛС - Оружейка 13 ОСТ
		
		{0.0,2738.5286,-1115.2118,23.9364}, // Автобус ЛС - Оружейка 14
		{0.0,2630.3413,-1512.1633,23.9169}, // Автобус ЛС - Оружейка 15
		{0.0,2420.9192,-1512.9846,23.9935}, // Автобус ЛС - Оружейка 16
		{0.0,2277.5403,-1693.0591,22.1842}, // Автобус ЛС - Оружейка 17
		{0.0,2216.5369,-1747.0360,22.1939}, // Автобус ЛС - Оружейка 18
		{0.0,2097.5337,-1803.4832,19.1935}, // Автобус ЛС - Оружейка 19
		{1.0,2094.1978,-1927.4573,19.1927}, // Автобус ЛС - Оружейка 20 ОСТ
		
		{0.0,2112.7903,-2003.5017,19.1926}, // Автобус ЛС - Оружейка 21
		{0.0,2162.8289,-1991.6750,19.1922}, // Автобус ЛС - Оружейка 22
		{0.0,2158.6104,-1942.4518,19.1935}, // Автобус ЛС - Оружейка 23
		{0.0,2122.9807,-1913.8945,19.1928}, // Автобус ЛС - Оружейка 24
		{1.0,2112.5266,-1872.4659,19.1915}, // Автобус ЛС - Оружейка 25 ОСТ конечная
		
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,2112.1479,-1876.7378,19.1968}, // Автобус ЛС - Нефтезавод 1
		{0.0,2140.8599,-1761.0592,19.1752}, // Автобус ЛС - Нефтезавод 2
		{0.0,2254.0330,-1760.9285,22.1922}, // Автобус ЛС - Нефтезавод 3
		{0.0,2277.8220,-1840.0996,22.1940}, // Автобус ЛС - Нефтезавод 4
		{0.0,2440.1978,-1881.4734,22.1919}, // Автобус ЛС - Нефтезавод 5
		{0.0,2458.4338,-1971.2000,22.1938}, // Автобус ЛС - Нефтезавод 6
		{1.0,2457.4429,-2126.3743,22.1864}, // Автобус ЛС - Нефтезавод 7 ОСТ

		{0.0,2555.4199,-2162.4856,22.2016}, // Автобус ЛС - Нефтезавод 8
		{0.0,2692.1951,-2161.8174,22.1719}, // Автобус ЛС - Нефтезавод 9
		{0.0,2787.0967,-2342.5059,21.1857}, // Автобус ЛС - Нефтезавод 10
		{0.0,2787.3630,-2479.7241,22.0515}, // Автобус ЛС - Нефтезавод 11
		{0.0,2731.6951,-2560.5764,21.9456}, // Автобус ЛС - Нефтезавод 12
		{0.0,2707.7869,-2651.6125,24.3208}, // Автобус ЛС - Нефтезавод 13
		{0.0,2642.8567,-2678.1860,25.6437}, // Автобус ЛС - Нефтезавод 14
		{1.0,2422.8621,-2678.0691,25.6065,}, // Автобус ЛС - Нефтезавод 15 ОСТ
		
		{0.0,2255.1594,-2677.4819,25.6318}, // АвтобусЛС - Нефтезавод 16
		{0.0,2017.9796,-2683.0708,11.5442}, // АвтобусЛС - Нефтезавод 17
		{1.0,1943.9703,-2611.1450,11.2010}, // АвтобусЛС - Нефтезавод 18 ОСТ
		
		{0.0,1897.1539,-2490.2393,11.1941}, // АвтобусЛС - Нефтезавод 19
		{0.0,1827.1140,-2317.3894,11.2003}, // АвтобусЛС - Нефтезавод 20
		{1.0,1909.5079,-2257.9038,11.2009}, // АвтобусЛС - Нефтезавод 21 ОСТ
		
		{0.0,2108.3613,-2257.7644,18.0771}, // АвтобусЛС - Нефтезавод 22
		{0.0,2186.0093,-2258.1868,21.5380}, // АвтобусЛС - Нефтезавод 23
		{0.0,2238.3811,-2181.4824,22.1541}, // АвтобусЛС - Нефтезавод 24
		{0.0,2278.6938,-2017.1555,22.2754}, // АвтобусЛС - Нефтезавод 25
		{0.0,2287.3828,-1923.3523,22.2095}, // АвтобусЛС - Нефтезавод 26
		{0.0,2286.8508,-1785.1563,22.1883}, // АвтобусЛС - Нефтезавод 27
		{0.0,2253.4900,-1750.8754,22.1932}, // АвтобусЛС - Нефтезавод 28
		{0.0,2134.7690,-1751.4589,19.2162}, // АвтобусЛС - Нефтезавод 29
		{0.0,2103.1956,-1836.8185,19.1938}, // АвтобусЛС - Нефтезавод 30
		{0.0,2093.2346,-1941.9535,19.1931}, // АвтобусЛС - Нефтезавод 31
		{0.0,2127.6650,-2010.2610,19.1934}, // АвтобусЛС - Нефтезавод 32
		{0.0,2169.1414,-1979.5868,19.1904}, // АвтобусЛС - Нефтезавод 33
		{0.0,2157.0933,-1942.0308,19.1993}, // АвтобусЛС - Нефтезавод 34
		{0.0,2127.6084,-1915.1904,19.1926}, // АвтобусЛС - Нефтезавод 35
		{1.0,2112.6699,-1876.1177,19.1916}, // АвтобусЛС - Нефтезавод 36 ОСТ конечная
		
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
	    {0.0,2107.6523,-1878.3065,19.1905}, // АВЛС - ЖДСФ 1
		{0.0,2176.4150,-1757.4803,19.8586}, // АВЛС - ЖДСФ 2
		{0.0,2287.4375,-1721.5022,22.1856}, // АВЛС - ЖДСФ 3
		{0.0,2403.2354,-1525.4205,24.1943}, // АВЛС - ЖДСФ 4
		{0.0,2608.6448,-1524.3752,24.2200}, // АВЛС - ЖДСФ 5
		{0.0,2750.0383,-1395.3458,24.2063}, // АВЛС - ЖДСФ 6
		{1.0,2755.8589,-972.1929,24.1498}, // АВЛС - ЖДСФ 7 ОСТ

		{0.0,2755.3374,-570.3798,24.1032}, // АВЛС - ЖДСФ 8
		{0.0,2894.1890,-249.6561,24.3003}, // АВЛС - ЖДСФ 9
		{0.0,2910.3552,-87.9105,25.9696}, // АВЛС - ЖДСФ 10
		{0.0,2910.3430,91.9880,17.6708}, // АВЛС - ЖДСФ 11
		{0.0,2909.9443,357.5655,18.7582}, // АВЛС - ЖДСФ 12
		{1.0,2909.8005,517.9205,26.5757}, // АВЛС - ЖДСФ 13 ОСТ

		{0.0,2857.6411,754.0831,32.1044}, // АВЛС - ЖДСФ 14
		{0.0,2747.7468,958.7206,26.1311}, // АВЛС - ЖДСФ 15
		{0.0,2671.1709,1182.2889,22.3871}, // АВЛС - ЖДСФ 16
		{0.0,2638.1401,1234.7260,22.5515}, // АВЛС - ЖДСФ 17
		{0.0,2649.8335,1575.5234,16.6381}, // АВЛС - ЖДСФ 18
		{0.0,2749.8613,1870.4579,16.5319}, // АВЛС - ЖДСФ 19
		{1.0,2761.1233,2061.3438,18.3325}, // АВЛС - ЖДСФ 20 ОСТ

		{0.0,2751.0757,2363.7202,16.3410}, // АВЛС - ЖДСФ 21
		{0.0,2716.1914,2569.8088,16.2771}, // АВЛС - ЖДСФ 22
		{0.0,2683.8335,2737.9565,18.2341}, // АВЛС - ЖДСФ 23
		{0.0,2526.0400,2922.6228,24.7770}, // АВЛС - ЖДСФ 24
		{0.0,2266.3501,2965.6514,14.9129}, // АВЛС - ЖДСФ 25
		{0.0,2072.7686,2927.3101,12.7162}, // АВЛС - ЖДСФ 26
		{0.0,2004.5461,2798.5042,14.9540}, // АВЛС - ЖДСФ 27
		{1.0,1882.6650,2641.0974,15.5989}, // АВЛС - ЖДСФ 28 ОСТ

		{0.0,1761.6755,2544.2737,15.6149}, // АВЛС - ЖДСФ 29
		{0.0,1804.7205,2436.8647,16.3334}, // АВЛС - ЖДСФ 30
		{0.0,1870.6244,2336.3542,16.3330}, // АВЛС - ЖДСФ 31
		{0.0,1889.0074,2215.7827,16.3069}, // АВЛС - ЖДСФ 32
		{1.0,1888.6443,2114.9663,16.2713}, // АВЛС - ЖДСФ 33 ОСТ

		{0.0,1854.1160,2055.3423,16.2566}, // АВЛС - ЖДСФ 34
		{0.0,1771.9424,2098.0552,16.4057}, // АВЛС - ЖДСФ 35
		{1.0,1771.6752,2157.3894,16.4034}, // АВЛС - ЖДСФ 36 ОСТ

		{0.0,1782.7642,2225.2729,16.2023}, // АВЛС - ЖДСФ 37
		{0.0,1864.4573,2226.0981,16.1926}, // АВЛС - ЖДСФ 38
		{0.0,1888.8641,2279.5247,16.3326}, // АВЛС - ЖДСФ 39
		{0.0,1848.2242,2368.6411,16.3333}, // АВЛС - ЖДСФ 40
		{0.0,1779.9049,2469.5044,16.3430}, // АВЛС - ЖДСФ 41
		{0.0,1789.6945,2560.8457,15.6184}, // АВЛС - ЖДСФ 42
		{0.0,1913.8917,2679.3005,15.6193}, // АВЛС - ЖДСФ 43
		{0.0,1999.6638,2790.7913,15.2690}, // АВЛС - ЖДСФ 44
		{0.0,2069.4536,2917.5095,13.1907}, // АВЛС - ЖДСФ 45
		{0.0,2160.8406,2953.1682,11.4796}, // АВЛС - ЖДСФ 46
		{0.0,2327.2864,2951.8267,18.5189}, // АВЛС - ЖДСФ 47
		{0.0,2531.6196,2907.2009,24.6005}, // АВЛС - ЖДСФ 48
		{1.0,2644.5005,2801.6438,20.4717}, // АВЛС - ЖДСФ 49 ОСТ

		{0.0,2698.3784,2617.6326,16.6700}, // АВЛС - ЖДСФ 50
		{0.0,2732.6824,2416.0425,15.9863}, // АВЛС - ЖДСФ 51
		{0.0,2753.9189,2225.9189,17.7178}, // АВЛС - ЖДСФ 52
		{0.0,2747.9275,2037.7928,18.2016}, // АВЛС - ЖДСФ 53
		{0.0,2741.7119,1892.1075,16.7221}, // АВЛС - ЖДСФ 54
		{0.0,2695.4917,1649.6254,17.2458}, // АВЛС - ЖДСФ 55
		{0.0,2583.8232,1539.6914,14.3595}, // АВЛС - ЖДСФ 56
		{0.0,2596.4043,1282.3323,20.3921}, // АВЛС - ЖДСФ 57
		{0.0,2649.3291,1198.1688,22.8163}, // АВЛС - ЖДСФ 58
		{0.0,2725.9341,984.0398,23.6993}, // АВЛС - ЖДСФ 59
		{0.0,2818.6892,792.8928,31.4356}, // АВЛС - ЖДСФ 60
		{0.0,2897.3416,550.3638,28.7828}, // АВЛС - ЖДСФ 61
		{0.0,2900.4573,298.7348,15.9926}, // АВЛС - ЖДСФ 62
		{0.0,2901.9651,86.3529,17.7020}, // АВЛС - ЖДСФ 63
		{0.0,2900.3335,-60.3884,25.4232}, // АВЛС - ЖДСФ 64
		{0.0,2899.1597,-159.8835,25.0319}, // АВЛС - ЖДСФ 65
		{0.0,2829.7637,-346.5728,27.2199}, // АВЛС - ЖДСФ 66
		{1.0,2747.9045,-513.7966,24.2805}, // АВЛС - ЖДСФ 67 ОСТ

		{0.0,2742.2517,-656.9021,24.2695}, // АВЛС - ЖДСФ 68
		{0.0,2741.2998,-801.0778,24.2421}, // АВЛС - ЖДСФ 69
		{0.0,2740.5095,-1011.8728,24.1759}, // АВЛС - ЖДСФ 70
		{0.0,2739.5610,-1103.9957,23.9363}, // АВЛС - ЖДСФ 71
		{0.0,2739.1694,-1248.9102,23.9312}, // АВЛС - ЖДСФ 72
		{0.0,2733.4602,-1448.1063,23.9753}, // АВЛС - ЖДСФ 73
		{0.0,2585.4678,-1513.6908,24.0314}, // АВЛС - ЖДСФ 74
		{0.0,2464.6260,-1514.2004,24.0689}, // АВЛС - ЖДСФ 75
		{0.0,2392.1677,-1517.8660,24.2036}, // АВЛС - ЖДСФ 76
		{0.0,2279.7607,-1698.5986,22.1938}, // АВЛС - ЖДСФ 77
		{0.0,2240.3215,-1749.1917,22.1937}, // АВЛС - ЖДСФ 78
		{0.0,2124.3259,-1748.9202,19.2212}, // АВЛС - ЖДСФ 79
		{0.0,2099.6499,-1823.0977,19.1938}, // АВЛС - ЖДСФ 80
		{0.0,2099.6084,-1875.3308,19.1839}, // АВЛС - ЖДСФ 81
		{0.0,2096.0110,-1925.2543,19.1930}, // АВЛС - ЖДСФ 82
		{0.0,2095.9077,-1997.1908,19.1921}, // АВЛС - ЖДСФ 83
		{0.0,2139.0210,-2017.8843,19.1912}, // АВЛС - ЖДСФ 84
		{0.0,2171.7405,-1972.2919,19.1928}, // АВЛС - ЖДСФ 85
		{1.0,2139.6882,-1922.1080,19.1938}, // АВЛС - ЖДСФ 86 ОСТ конечная

		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,2112.5313,-1878.4060,19.1970}, // АВЛС - ЖДЛВ 1
		{0.0,2143.0452,-1760.3583,19.1998}, // АВЛС - ЖДЛВ 2
		{0.0,2255.7012,-1761.4736,22.1901}, // АВЛС - ЖДЛВ 3
		{0.0,2291.9763,-1717.8274,22.1915}, // АВЛС - ЖДЛВ 4
		{0.0,2295.7993,-1631.2581,23.1727}, // АВЛС - ЖДЛВ 5
		{0.0,2401.5171,-1529.3325,24.0192}, // АВЛС - ЖДЛВ 6
		{0.0,2729.9741,-1482.0693,24.2079}, // АВЛС - ЖДЛВ 7
		{0.0,2750.4905,-1391.8774,24.1597}, // АВЛС - ЖДЛВ 8
		{1.0,2755.0525,-926.0647,24.1808}, // АВЛС - ЖДЛВ 9 ОСТ
		
		{0.0,2755.9763,-550.6389,24.1847}, // АВЛС - ЖДЛВ 10
		{0.0,2911.8179,-187.4276,24.4838}, // АВЛС - ЖДЛВ 11
		{0.0,2913.7122,285.5167,15.2036}, // АВЛС - ЖДЛВ 12
		{0.0,2911.9192,585.0468,31.1936}, // АВЛС - ЖДЛВ 13
		{0.0,2782.1804,874.8570,29.8960}, // АВЛС - ЖДЛВ 14
		{0.0,2723.0469,1053.7588,19.2482}, // АВЛС - ЖДЛВ 15
		{0.0,2663.3430,1587.9608,17.1037}, // АВЛС - ЖДЛВ 16
		{0.0,2749.5266,1825.6595,16.2221}, // АВЛС - ЖДЛВ 17
		{0.0,2756.6638,2000.5018,17.9192}, // АВЛС - ЖДЛВ 18
		{0.0,2743.2156,2429.2773,15.9611}, // АВЛС - ЖДЛВ 19
		{0.0,2677.7227,2751.2893,18.6444}, // АВЛС - ЖДЛВ 20
		{0.0,2337.5088,2961.1194,19.0450}, // АВЛС - ЖДЛВ 21
		{0.0,1947.4717,2963.9856,12.3712}, // АВЛС - ЖДЛВ 22
		{0.0,1799.9628,2966.4475,12.3802}, // АВЛС - ЖДЛВ 23 ОСТ
		
		{0.0,1458.1876,2964.7827,12.3803}, // АВЛС - ЖДЛВ 24
		{0.0,1309.2781,2843.6357,12.3804}, // АВЛС - ЖДЛВ 25
		{0.0,1125.5654,2743.8328,12.3802}, // АВЛС - ЖДЛВ 26
		{1.0,756.6709,2526.4531,12.3691}, // АВЛС - ЖДЛВ 27 ОСТ

		{0.0,500.4688,2151.5427,12.3804}, // АВЛС - ЖДЛВ 28
		{0.0,415.9481,1916.0458,8.9284}, // АВЛС - ЖДЛВ 29
		{1.0,320.1772,1538.4028,12.3767}, // АВЛС - ЖДЛВ 30 ОСТ

		{0.0,295.7136,1255.5884,14.3452}, // АВЛС - ЖДЛВ 31
		{0.0,267.2611,1010.0533,12.5332}, // АВЛС - ЖДЛВ 32
		{0.0,226.3468,836.4141,12.3811}, // АВЛС - ЖДЛВ 33
		{0.0,178.2284,817.8365,12.3812}, // АВЛС - ЖДЛВ 34
		{0.0,36.1239,871.3857,12.3813}, // АВЛС - ЖДЛВ 35
		{0.0,-147.1985,940.0442,12.3813}, // АВЛС - ЖДЛВ 36
		{0.0,-358.5319,977.1996,12.3812}, // АВЛС - ЖДЛВ 37
		{0.0,-385.3884,885.5521,12.3812}, // АВЛС - ЖДЛВ 38
		{0.0,-380.7988,686.0553,12.3812}, // АВЛС - ЖДЛВ 39
		{1.0,-282.7607,596.0303,12.3922}, // АВЛС - ЖДЛВ 40 ОСТ
		
		{0.0,-177.0826,582.0348,12.3813}, // АВЛС - ЖДЛВ 41
		{0.0,-28.7526,563.2370,12.3813}, // АВЛС - ЖДЛВ 42
		{0.0,157.6806,636.6031,12.3780}, // АВЛС - ЖДЛВ 43
		{0.0,212.3025,773.9947,12.3814}, // АВЛС - ЖДЛВ 44
		{0.0,234.3793,831.8428,12.3805}, // АВЛС - ЖДЛВ 45
		{0.0,271.4098,983.3032,12.6783}, // АВЛС - ЖДЛВ 46
		{0.0,287.1061,1115.3439,12.3803}, // АВЛС - ЖДЛВ 47
		{1.0,326.1956,1527.4529,12.3681}, // АВЛС - ЖДЛВ 48 ОСТ
		
		{0.0,360.7409,1737.5717,12.3820}, // АВЛС - ЖДЛВ 49
		{0.0,420.7476,1902.5160,9.3207}, // АВЛС - ЖДЛВ 50
		{0.0,465.4710,2064.4260,10.5438}, // АВЛС - ЖДЛВ 51
		{0.0,627.5340,2369.1912,12.3802}, // АВЛС - ЖДЛВ 52
		{0.0,822.7388,2550.8906,12.3801}, // АВЛС - ЖДЛВ 53
		{0.0,1019.3560,2667.8979,12.3802}, // АВЛС - ЖДЛВ 54
		{0.0,1137.3060,2737.3650,12.3804}, // АВЛС - ЖДЛВ 55
		{0.0,1288.5768,2814.5610,12.3749}, // АВЛС - ЖДЛВ 56
		{0.0,1477.6799,2951.5068,12.3801}, // АВЛС - ЖДЛВ 57
		{0.0,1668.5321,2952.2903,12.3801}, // АВЛС - ЖДЛВ 58
		{1.0,1797.0262,2953.3972,12.3823}, // АВЛС - ЖДЛВ 59 ОСТ
		
		{0.0,1954.3126,2955.3325,12.3804}, // АВЛС - ЖДЛВ 60
		{0.0,2079.9724,2954.5251,12.5367}, // АВЛС - ЖДЛВ 61
		{0.0,2442.9097,2937.0342,23.6563}, // АВЛС - ЖДЛВ 62
		{0.0,2698.5552,2616.8250,16.6625}, // АВЛС - ЖДЛВ 63
		{0.0,2730.3650,2438.2517,15.9729}, // АВЛС - ЖДЛВ 64
		{0.0,2743.9368,2332.6509,16.4602}, // АВЛС - ЖДЛВ 65
		{0.0,2751.5894,2112.0073,18.4412}, // АВЛС - ЖДЛВ 66
		{0.0,2741.4868,1939.8301,17.1288}, // АВЛС - ЖДЛВ 67
		{0.0,2733.3279,1780.1730,16.2489}, // АВЛС - ЖДЛВ 68
		{0.0,2631.1296,1576.0544,16.4226}, // АВЛС - ЖДЛВ 69
		{0.0,2558.5059,1344.1580,16.0242}, // АВЛС - ЖДЛВ 70
		{1.0,2624.5862,1231.2761,22.4974}, // АВЛС - ЖДЛВ 71 ОСТ
		
		{0.0,2720.4097,1009.4958,21.6453}, // АВЛС - ЖДЛВ 72
		{0.0,2749.7788,922.5651,28.3998}, // АВЛС - ЖДЛВ 73
		{0.0,2844.4258,748.8898,32.0680}, // АВЛС - ЖДЛВ 74
		{0.0,2899.8879,537.4098,27.9288}, // АВЛС - ЖДЛВ 75
		{0.0,2899.9775,170.8681,15.0554}, // АВЛС - ЖДЛВ 76
		{0.0,2899.6780,-51.5102,25.1977}, // АВЛС - ЖДЛВ 77
		{0.0,2884.9131,-241.7444,24.1945}, // АВЛС - ЖДЛВ 78
		{0.0,2781.0520,-429.1884,24.7179}, // АВЛС - ЖДЛВ 79
		{0.0,2742.3582,-608.7842,24.2682}, // АВЛС - ЖДЛВ 80
		{0.0,2741.6787,-844.3198,24.2539}, // АВЛС - ЖДЛВ 81
		{0.0,2738.9614,-1073.1829,23.9343}, // АВЛС - ЖДЛВ 82
		{0.0,2739.8896,-1275.8090,23.9357}, // АВЛС - ЖДЛВ 83
		{0.0,2739.6001,-1423.8186,24.0617}, // АВЛС - ЖДЛВ 84
		{0.0,2614.2356,-1512.6233,23.9677}, // АВЛС - ЖДЛВ 85
		{0.0,2480.9114,-1515.4968,24.2285}, // АВЛС - ЖДЛВ 86
		{0.0,2281.5024,-1683.4633,22.1853}, // АВЛС - ЖДЛВ 87
		{0.0,2259.9873,-1747.6410,22.1930}, // АВЛС - ЖДЛВ 88
		{0.0,2167.0000,-1749.2754,19.2195}, // АВЛС - ЖДЛВ 89
		{0.0,2102.3342,-1833.4608,19.1938}, // АВЛС - ЖДЛВ 90
		{0.0,2096.9321,-1919.6273,19.1926}, // АВЛС - ЖДЛВ 91
		{0.0,2093.5205,-1988.9243,19.1798}, // АВЛС - ЖДЛВ 92
		{0.0,2128.9038,-2013.0753,19.1874}, // АВЛС - ЖДЛВ 93
		{0.0,2164.4502,-1992.5940,19.1950}, // АВЛС - ЖДЛВ 94
		{0.0,2165.5813,-1949.1742,19.1926}, // АВЛС - ЖДЛВ 95
		{0.0,2131.3484,-1916.0143,19.1928}, // АВЛС - ЖДЛВ 96
		{1.0,2112.3948,-1876.1279,19.1919}, // АВЛС - ЖДЛВ 97 ОСТ конечная
		
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,423.6464,736.9165,12.2052}, // ЖДЛВ - АВЛС 1
		{0.0,399.1068,733.2747,12.2093}, // ЖДЛВ - АВЛС 2
		{0.0,285.5563,775.6628,12.2088}, // ЖДЛВ - АВЛС 3
		{0.0,243.6798,846.9352,12.2088}, // ЖДЛВ - АВЛС 4
		{0.0,281.7447,1034.0056,12.2068}, // ЖДЛВ - АВЛС 5
		{0.0,299.5561,1216.3116,13.0596}, // ЖДЛВ - АВЛС 6
		{1.0,330.0907,1530.0873,12.2077}, // ЖДЛВ - АВЛС 7 ОСТ

		{0.0,398.0400,1835.6934,12.1152}, // ЖДЛВ - АВЛС 8
		{0.0,465.1987,2058.6125,9.8030}, // ЖДЛВ - АВЛС 9
		{0.0,553.8143,2232.6277,12.2078}, // ЖДЛВ - АВЛС 10
		{0.0,760.2628,2514.6431,12.2078}, // ЖДЛВ - АВЛС 11
		{0.0,1084.5348,2705.0498,12.2078}, // ЖДЛВ - АВЛС 12
		{0.0,1357.9883,2889.4624,12.2077}, // ЖДЛВ - АВЛС 13
		{0.0,1501.9794,2952.3359,12.2078}, // ЖДЛВ - АВЛС 14
		{0.0,1642.1639,2951.9795,12.2078}, // ЖДЛВ - АВЛС 15
		{0.0,1799.0994,2952.3828,12.2053}, // ЖДЛВ - АВЛС 16
		{0.0,1980.9796,2953.4810,12.3655}, // ЖДЛВ - АВЛС 17
		{0.0,2296.3435,2952.2429,16.5460}, // ЖДЛВ - АВЛС 18
		{0.0,2465.9070,2933.0874,24.1481}, // ЖДЛВ - АВЛС 19
		{0.0,2708.9814,2548.2742,15.8794}, // ЖДЛВ - АВЛС 20
		{0.0,2747.0571,2296.9397,16.6125}, // ЖДЛВ - АВЛС 21
		{0.0,2742.7266,1960.9922,17.2230}, // ЖДЛВ - АВЛС 22
		{0.0,2716.6418,1705.9258,16.3672}, // ЖДЛВ - АВЛС 23
		{0.0,2654.9509,1600.0930,17.0372}, // ЖДЛВ - АВЛС 24
		{0.0,2544.9973,1395.7780,13.0378}, // ЖДЛВ - АВЛС 25
		{1.0,2624.3516,1230.7446,22.3093}, // ЖДЛВ - АВЛС 26 ОСТ
		
		{0.0,2719.7856,1009.0211,21.4721}, // ЖДЛВ - АВЛС 27
		{0.0,2830.3831,779.6428,31.4799}, // ЖДЛВ - АВЛС 28
		{0.0,2901.4160,527.7181,27.1118}, // ЖДЛВ - АВЛС 29
		{0.0,2900.2788,178.5417,14.5132}, // ЖДЛВ - АВЛС 30
		{0.0,2900.6204,-89.2748,25.7355}, // ЖДЛВ - АВЛС 31
		{0.0,2835.1299,-336.3255,26.8311}, // ЖДЛВ - АВЛС 32
		{0.0,2742.5425,-629.8257,24.1059}, // ЖДЛВ - АВЛС 33
		{0.0,2742.1838,-935.5626,24.0954}, // ЖДЛВ - АВЛС 34
		{0.0,2739.7246,-1154.5502,23.7588}, // ЖДЛВ - АВЛС 35
		{0.0,2742.5562,-1321.2438,23.7637}, // ЖДЛВ - АВЛС 36
		{0.0,2682.8440,-1506.0931,23.8873}, // ЖДЛВ - АВЛС 37
		{0.0,2510.8655,-1514.1565,23.9931}, // ЖДЛВ - АВЛС 38
		{0.0,2380.7773,-1515.0614,23.9319}, // ЖДЛВ - АВЛС 39
		{0.0,2283.0259,-1649.0248,22.6133}, // ЖДЛВ - АВЛС 40
		{0.0,2241.2979,-1746.4171,22.0211}, // ЖДЛВ - АВЛС 41
		{0.0,2098.1973,-1809.0880,19.0212}, // ЖДЛВ - АВЛС 42
		{0.0,2096.2566,-1911.3043,19.0192}, // ЖДЛВ - АВЛС 43
		{0.0,2117.2920,-2012.2692,19.0204}, // ЖДЛВ - АВЛС 44
		{0.0,2169.1780,-1978.1700,19.0221}, // ЖДЛВ - АВЛС 45
		{0.0,2146.8674,-1933.1560,19.0184}, // ЖДЛВ - АВЛС 46
		{0.0,2120.7100,-1907.2119,19.0202}, // ЖДЛВ - АВЛС 47
		{1.0,2112.8877,-1875.0654,19.0267}, // ЖДЛВ - АВЛС 48 ОСТ

		{0.0,2177.5850,-1761.4371,19.8120}, // ЖДЛВ - АВЛС 49
		{0.0,2259.1189,-1761.0249,22.0242}, // ЖДЛВ - АВЛС 50
		{0.0,2294.1445,-1639.4482,22.8015}, // ЖДЛВ - АВЛС 51
		{0.0,2402.6333,-1529.3307,23.8468}, // ЖДЛВ - АВЛС 52
		{0.0,2561.1130,-1527.4736,23.9567}, // ЖДЛВ - АВЛС 53
		{0.0,2737.1311,-1471.5121,24.0260},// ЖДЛВ - АВЛС 54
		{0.0,2750.9851,-1253.0833,23.7580}, // ЖДЛВ - АВЛС 55
		{1.0,2754.8010,-933.3121,24.0192}, // ЖДЛВ - АВЛС 56 ОСТ

		{0.0,2754.8818,-748.7632,24.0187}, // ЖДЛВ - АВЛС 57
		{0.0,2852.6353,-333.5273,26.5248}, // ЖДЛВ - АВЛС 58
		{0.0,2910.3066,-105.0252,25.8775}, // ЖДЛВ - АВЛС 59
		{0.0,2909.9517,138.0446,16.2722}, // ЖДЛВ - АВЛС 60
		{0.0,2910.3235,413.2154,21.0818}, // ЖДЛВ - АВЛС 61
		{0.0,2816.3994,810.0930,31.1830}, // ЖДЛВ - АВЛС 62
		{0.0,2734.2246,1003.2483,22.2198}, // ЖДЛВ - АВЛС 63
		{0.0,2639.5356,1232.8590,22.4222}, // ЖДЛВ - АВЛС 64
		{0.0,2561.8835,1485.7910,12.2194}, // ЖДЛВ - АВЛС 65
		{0.0,2702.7813,1644.9880,17.1233}, // ЖДЛВ - АВЛС 66
		{0.0,2746.6516,1852.9351,16.3094}, // ЖДЛВ - АВЛС 67
		{0.0,2756.5437,2046.4833,18.1667}, // ЖДЛВ - АВЛС 68
		{0.0,2749.3750,2369.0613,16.1529}, // ЖДЛВ - АВЛС 69
		{0.0,2712.0376,2591.2480,16.2763}, // ЖДЛВ - АВЛС 70
		{0.0,2676.6052,2757.0183,18.5907}, // ЖДЛВ - АВЛС 71
		{0.0,2576.5945,2892.5979,23.7207}, // ЖДЛВ - АВЛС 72
		{0.0,2352.3413,2958.7932,19.6535}, // ЖДЛВ - АВЛС 73
		{0.0,1966.5889,2963.1885,12.1852}, // ЖДЛВ - АВЛС 74
		{1.0,1800.7924,2966.4731,12.2066}, // ЖДЛВ - АВЛС 75 ОСТ
		
		{0.0,1558.6390,2962.7346,12.2078}, // ЖДЛВ - АВЛС 76
		{0.0,1338.0129,2877.9868,12.2077}, // ЖДЛВ - АВЛС 77
		{0.0,1238.3800,2800.7170,12.2076}, // ЖДЛВ - АВЛС 78
		{0.0,1087.7487,2723.6650,12.2076}, // ЖДЛВ - АВЛС 79
		{0.0,746.0151,2519.7783,12.2078}, // ЖДЛВ - АВЛС 80
		{0.0,633.7003,2403.4158,12.2077}, // ЖДЛВ - АВЛС 81
		{0.0,501.8659,2155.8372,12.2077}, // ЖДЛВ - АВЛС 82
		{0.0,421.4996,1924.2830,8.4575}, // ЖДЛВ - АВЛС 83
		{0.0,376.4510,1804.0892,12.2080}, // ЖДЛВ - АВЛС 84
		{0.0,331.4380,1650.4913,12.2062}, // ЖДЛВ - АВЛС 85
		{1.0,321.5035,1537.1185,12.2104}, // ЖДЛВ - АВЛС 86 ОСТ
		
		{0.0,284.2385,1142.9816,12.2114}, // ЖДЛВ - АВЛС 87
		{0.0,233.9525,848.5017,12.2088}, // ЖДЛВ - АВЛС 88
		{0.0,252.7152,782.0778,12.2087}, // ЖДЛВ - АВЛС 89
		{0.0,368.8359,739.3958,12.2077}, // ЖДЛВ - АВЛС 90
		{0.0,426.4839,741.6710,12.2101}, // ЖДЛВ - АВЛС 91
		{0.0,437.3605,768.0759,12.2044}, // ЖДЛВ - АВЛС 92
		{0.0,413.2003,772.6819,12.2018}, // ЖДЛВ - АВЛС 93
		{0.0,413.2690,791.9460,12.2088}, // ЖДЛВ - АВЛС 94
		{0.0,455.2301,792.6981,12.2076}, // ЖДЛВ - АВЛС 95
		{0.0,497.7977,777.2905,12.2077}, // ЖДЛВ - АВЛС 96
		{0.0,541.0234,728.2758,12.2096}, // ЖДЛВ - АВЛС 97
		{0.0,507.7878,693.8439,12.2122}, // ЖДЛВ - АВЛС 98
		{0.0,445.3531,715.3209,12.2080}, // ЖДЛВ - АВЛС 99
		{1.0,410.6621,728.6721,12.2102}, // ЖДЛВ - АВЛС 100 ОСТ конечная
		
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1887.3116,2242.8147,16.3376}, // ЖДСФ - АВЛС 1
		{0.0,1887.7068,2204.9209,16.2533}, // ЖДСФ - АВЛС 2
		{0.0,1888.2346,2168.1406,16.2572}, // ЖДСФ - АВЛС 3
		{0.0,1887.2578,2086.3442,16.2604}, // ЖДСФ - АВЛС 4
		{1.0,1831.9896,2056.3164,16.2556}, // ЖДСФ - АВЛС 5 ОСТ
		
		{0.0,1771.7480,2164.0996,16.4093}, // ЖДСФ - АВЛС 6
		{0.0,1813.6174,2225.3140,16.2000}, // ЖДСФ - АВЛС 7
		{0.0,1888.5851,2243.8298,16.3237}, // ЖДСФ - АВЛС 8
		{1.0,1776.2438,2476.0557,16.3365}, // ЖДСФ - АВЛС 9 ОСТ
		
		{0.0,1862.7098,2612.5300,15.6193}, // ЖДСФ - АВЛС 10
		{0.0,2003.3383,2797.6064,14.9584}, // ЖДСФ - АВЛС 11
		{0.0,2072.4937,2936.0034,12.3407}, // ЖДСФ - АВЛС 12
		{0.0,2135.1362,2953.1113,11.7214}, // ЖДСФ - АВЛС 13
		{0.0,2565.3359,2892.4333,24.1202}, // ЖДСФ - АВЛС 14
		{0.0,2688.2163,2663.7891,17.0628}, // ЖДСФ - АВЛС 15
		{0.0,2747.1196,2308.8474,16.7118}, // ЖДСФ - АВЛС 16
		{0.0,2749.3167,2082.4277,18.3815}, // ЖДСФ - АВЛС 17
		{0.0,2700.5710,1662.3204,16.9955}, // ЖДСФ - АВЛС 18
		{0.0,2572.2656,1316.6326,17.9461}, // ЖДСФ - АВЛС 19
		{1.0,2625.2456,1228.5254,22.4999}, // ЖДСФ - АВЛС 20 ОСТ
		
		{0.0,2712.5098,1038.7507,19.7181}, // ЖДСФ - АВЛС 21
		{0.0,2821.6025,793.2960,31.5174}, // ЖДСФ - АВЛС 22
		{0.0,2899.3208,567.0541,30.0627}, // ЖДСФ - АВЛС 23
		{0.0,2899.9155,280.9250,15.0304}, // ЖДСФ - АВЛС 24
		{0.0,2898.5405,128.9017,16.5901}, // ЖДСФ - АВЛС 25
		{0.0,2855.8103,-306.3765,25.8385}, // ЖДСФ - АВЛС 26
		{0.0,2743.6462,-578.5721,24.3045}, // ЖДСФ - АВЛС 27
		{0.0,2743.4441,-855.8958,24.3015}, // ЖДСФ - АВЛС 28
		{0.0,2740.8994,-1149.4521,23.9302}, // ЖДСФ - АВЛС 29
		{0.0,2741.1890,-1286.9564,23.9362}, // ЖДСФ - АВЛС 30
		{0.0,2653.2949,-1513.1830,24.0146}, // ЖДСФ - АВЛС 31
		{0.0,2528.9070,-1514.9894,24.1119}, // ЖДСФ - АВЛС 32
		{0.0,2394.7876,-1517.1096,24.1929}, // ЖДСФ - АВЛС 33
		{0.0,2284.2576,-1639.5028,22.9852}, // ЖДСФ - АВЛС 34
		{0.0,2278.2351,-1723.4023,22.1841}, // ЖДСФ - АВЛС 35
		{0.0,2213.0491,-1746.5040,22.1939}, // ЖДСФ - АВЛС 36
		{0.0,2102.0129,-1790.9758,19.1936}, // ЖДСФ - АВЛС 37
		{0.0,2097.4084,-1909.5347,19.1943}, // ЖДСФ - АВЛС 38
		{0.0,2102.3518,-1999.6261,19.1970}, // ЖДСФ - АВЛС 39
		{0.0,2154.2620,-2003.0944,19.1927}, // ЖДСФ - АВЛС 40
		{0.0,2165.0044,-1952.8944,19.1942}, // ЖДСФ - АВЛС 41
		{0.0,2134.7446,-1920.7003,19.1928}, // ЖДСФ - АВЛС 42
		{1.0,2113.3748,-1873.8615,19.1954}, // ЖДСФ - АВЛС 43 ОСТ

		{0.0,2178.3389,-1760.2446,20.1451}, // ЖДСФ - АВЛС 44
		{0.0,2249.3411,-1761.2222,22.1858}, // ЖДСФ - АВЛС 45
		{0.0,2288.8181,-1660.6106,22.5545}, // ЖДСФ - АВЛС 46
		{0.0,2455.5674,-1529.4414,24.0138}, // ЖДСФ - АВЛС 47
		{0.0,2625.1453,-1527.3198,24.1351}, // ЖДСФ - АВЛС 48
		{0.0,2750.4695,-1398.3243,24.2057}, // ЖДСФ - АВЛС 49
		{0.0,2750.8037,-1135.4487,23.9372}, // ЖДСФ - АВЛС 50
		{1.0,2755.2314,-945.4817,24.1702}, // ЖДСФ - АВЛС 51 ОСТ
		
		{0.0,2754.4558,-655.2692,24.2076}, // ЖДСФ - АВЛС 52
		{0.0,2827.7876,-371.2927,27.1931}, // ЖДСФ - АВЛС 53
		{0.0,2910.0054,-48.8601,25.2700}, // ЖДСФ - АВЛС 54
		{0.0,2909.0376,250.2341,13.6414}, // ЖДСФ - АВЛС 55
		{0.0,2908.7993,609.5812,32.7021}, // ЖДСФ - АВЛС 56
		{0.0,2789.2029,857.7574,30.3774}, // ЖДСФ - АВЛС 57
		{0.0,2688.6306,1145.1479,20.8910}, // ЖДСФ - АВЛС 58
		{1.0,2635.3062,1238.7200,22.4789}, // ЖДСФ - АВЛС 59 ОСТ
		
		{0.0,2561.5730,1473.8285,12.0287}, // ЖДСФ - АВЛС 60
		{0.0,2682.9446,1614.2866,17.6058}, // ЖДСФ - АВЛС 61
		{0.0,2749.7681,1906.6453,16.8858}, // ЖДСФ - АВЛС 62
		{0.0,2758.1995,2067.3560,18.4429}, // ЖДСФ - АВЛС 63
		{0.0,2749.4104,2373.9829,16.2781}, // ЖДСФ - АВЛС 64
		{0.0,2652.2063,2808.7468,20.4514}, // ЖДСФ - АВЛС 65
		{0.0,2344.1499,2960.2957,19.3887}, // ЖДСФ - АВЛС 66
		{0.0,2140.4114,2964.1565,11.7463}, // ЖДСФ - АВЛС 67
		{0.0,2051.7075,2862.2212,14.2493}, // ЖДСФ - АВЛС 68
		{0.0,1808.1628,2574.5950,15.6125}, // ЖДСФ - АВЛС 69
		{1.0,1792.6622,2452.7715,16.3258}, // ЖДСФ - АВЛС 70 ОСТ
		
		{0.0,1825.6583,2402.9155,16.3324}, // ЖДСФ - АВЛС 71
		{0.0,1887.2933,2262.3254,16.3348}, // ЖДСФ - АВЛС 72 ОСТ конечная
		
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	}
};

#define SP_TYPE_NONE 0
#define SP_TYPE_PLAYER 1
#define SP_TYPE_VEHICLE 2

new PlayerText:RECON[MAX_PLAYERS];
new Menu:specmenu;

new gAdmin[MAX_PLAYERS][9],
	gAdminTime[MAX_PLAYERS];
	
new gDaysOfWeek[][10] = {
	"thursday",
	"friday",
	"saturday",
	"sunday",
	"monday",
	"tuesday",
	"wednesday"
};
#define ADMIN_KICK 0
#define ADMIN_BAN 1
#define ADMIN_MUTE 2
#define ADMIN_PM 3
#define ADMIN_WARN 4
#define ADMIN_JAIL 5

#define LOG_MUTE 0
#define LOG_KICK 1
#define LOG_WARN 2
#define LOG_BAN 3
#define LOG_JAIL 4
#define LOG_CHANGENAME 5
#define LOG_UNBAN 6
#define LOG_BANIP 7
#define LOG_UNBANIP 8
#define LOG_SKICK 9
#define LOG_SBAN 10
#define LOG_UNMUTE 11
#define LOG_UNJAIL 12
#define LOG_UVAL 12
#define LOG_DELACC 13
#define LOG_GUN 14

#define LOGS_INVITE 0
#define LOGS_UNINVITE 1
#define LOGS_RANK 2
#define LOGS_LEAVE 3
#define LOGS_FWARN 4
#define LOGS_FUNWARN 5

#define MAX_VOTES 7

new vote_name[MAX_VOTES][MAX_PLAYER_NAME + 1];
new vote_count[MAX_VOTES]={0,...};

enum sInfo {
	bankID,
	bankNumber,
	bankBalance,
	bankPassword,
	bankOwner[MAX_PLAYER_NAME],
	bankTowner[MAX_PLAYER_NAME]
};
new gBanks[MAX_PLAYERS][sInfo][3],
	score_number[MAX_PLAYERS],
	score_name[MAX_PLAYERS][3][12];

enum dInfo {
    dDialog,
	dQuestion[500],
	dAnswers[300],
	dSuccesQwe
}
new QueInfo[7][dInfo] = {
		{2,"Что делать при возниконовении ДТП?",										"Скрыться с места ДТП\nНемедленно остановиться и вызвать полицию\nВызвать сотрудников скорой помощи\nВызвать такси",1},
		{2,"Максимальная скорость в городе?",											"60 км/ч\n90 км/ч\n100 км/ч\n120 км/ч",0},
		{2,"Максимальная скорость за городом?",											"90 км/ч\n100 км/ч\n110 км/ч\n120 км/ч",2},
		{2,"Со скольки лет можно получить вод.удостоверение?",							"14 лет\n16 лет\n18 лет\n20 лет",2},
		{2,"Когда следует включать ближний свет фар?",		 							"В светлое время суток\nВ тёмное время суток\nНе нужно включать\nНужно включать в любое время суток",3},
		{2,"В каком случае разрешена остановка на автомагистрали?",		 				"В любых местах за пределами проезжей части\nПравее линии разметки, обозначающей край проезжей части\nТолько на спец. площадках для стоянки\nЗапрещается",2},
		{2,"Должны ли быть видны гос. номера автомобиля?",		 						"Не должны\nДолжны только спереди\nДолжны только сзади\nДолжны спереди и сзади",3}
	},
	TestASKMassive[MAX_PLAYERS][7],

	Float:AutoCP[AUTO_CP_COUNT][6] =
	{
		{2186.4055,-2204.6431,21.8597,2178.2908,-2223.9785,21.8321},
		{2178.2908,-2223.9785,21.8321,2156.0969,-2252.5251,19.7375},
		{2156.0969,-2252.5251,19.7375,2062.1104,-2253.3916,15.3524},
		{2062.1104,-2253.3916,15.3524,1899.4532,-2253.0232,10.6415},
		{1899.4532,-2253.0232,10.6415,1811.8468,-2293.6741,10.6256},
		{1811.8468,-2293.6741,10.6256,1858.7028,-2408.8457,10.6359},
		{1858.7028,-2408.8457,10.6359,1925.2860,-2573.0427,10.6342},
		{1925.2860,-2573.0427,10.6342,1938.8488,-2669.7693,11.0594},
		{1938.8488,-2669.7693,11.0594,1962.6517,-2688.5308,10.9511},
		{1962.6517,-2688.5308,10.9511,2334.9719,-2687.3459,25.1137},
		{2334.9719,-2687.3459,25.1137,2434.1711,-2687.0884,25.1124},
		{2434.1711,-2687.0884,25.1124,2467.5979,-2627.4102,23.7297},
		{2467.5979,-2627.4102,23.7297,2472.3545,-2473.5425,21.5843},
		{2472.3545,-2473.5425,21.5843,2472.1003,-2255.7676,21.6012},
		{2472.1003,-2255.7676,21.6012,2472.5149,-2101.1023,21.6284},
		{2472.5149,-2101.1023,21.6284,2472.7466,-1929.9185,21.5901},
		{2472.7466,-1929.9185,21.5901,2472.6167,-1747.2184,21.6283},
		{2472.6167,-1747.2184,21.6283,2371.3796,-1687.6896,21.6282},
		{2371.3796,-1687.6896,21.6282,2282.0435,-1723.5614,21.6283},
		{2282.0435,-1723.5614,21.6283,2282.1084,-1804.9001,21.6282},
		{2282.1084,-1804.9001,21.6282,2320.4116,-1878.0645,21.6284},
		{2320.4116,-1878.0645,21.6284,2432.1733,-1877.9895,21.6283},
		{2432.1733,-1877.9895,21.6283,2418.1001,-1867.2769,21.6281},
		{2418.1001,-1867.2769,21.6281,2358.1289,-1872.0527,21.6281},
		{2358.1289,-1872.0527,21.6281,2313.4387,-1871.9900,21.6282},
		{2313.4387,-1871.9900,21.6282,2283.0195,-1904.6265,21.6439},
		{2283.0195,-1904.6265,21.6439,2233.2263,-2130.2554,21.6283},
		{2233.2263,-2130.2554,21.6283,2176.2986,-2235.2822,21.7770},
		{2176.2986,-2235.2822,21.7770,0.0,0.0,0.0}
	},
	Float:AutoCPMav[13][6] =
	{
		{689.1038,443.8523,110.6208,695.3602,453.0860,110.6213},
		{695.3602,453.0860,110.6213,694.3532,461.6593,110.6215},
		{694.3532,461.6593,110.6215,696.4544,470.4240,110.6209},
		{696.4544,470.4240,110.6209,681.1007,461.3087,110.6201},
		{681.1007,461.3087,110.6201,686.2193,472.4972,110.6234},
		{686.2193,472.4972,110.6234,678.2515,456.7473,120.2940},
		{678.2515,456.7473,120.2940,674.7188,475.5619,110.6217},
		{674.7188,475.5619,110.6217,656.2324,454.7915,110.6217},
		{656.2324,454.7915,110.6217,680.9903,430.6278,110.6226},
		{680.9903,430.6278,110.6226,649.3519,402.4631,110.8151},
		{649.3519,402.4631,110.8151,603.5487,408.5907,110.8139},
		{603.5487,408.5907,110.8139,653.3482,452.5595,12.0000},
		{653.3482,452.5595,12.0000,0.0,0.0,0.0}
	},
	Float:AutoCPBoat[14][6] =
	{
		{-319.9310,1118.4384,-0.5542,-446.2031,1126.5291,-0.5364},
		{-446.2031,1126.5291,-0.5364,-550.6663,1129.5288,-0.5253},
		{-550.6663,1129.5288,-0.5253,-681.6774,1120.2677,-0.4831},
		{-681.6774,1120.2677,-0.4831,-785.7746,1098.9353,-0.5207},
		{-785.7746,1098.9353,-0.5207,-852.6362,1091.9144,-0.5193},
		{-852.6362,1091.9144,-0.5193,-904.4830,1078.5370,-0.4908},
		{-904.4830,1078.5370,-0.4908,-921.5145,1031.2369,-0.5278},
		{-921.5145,1031.2369,-0.5278,-850.0370,1039.6714,-0.4904},
		{-850.0370,1039.6714,-0.4904,-733.8455,1072.5927,-0.5193},
		{-733.8455,1072.5927,-0.5193,-630.7943,1094.0684,-0.5039},
		{-630.7943,1094.0684,-0.5039,-505.5291,1104.7987,-0.5659},
		{-505.5291,1104.7987,-0.5659,-416.2155,1108.5116,-0.5171},
		{-416.2155,1108.5116,-0.5171,-299.4394,1112.1766,-0.5509},
		{-299.4394,1112.1766,-0.5509,0.0,0.0,0.0}
	},
	Float:auto_exam[6][3] =
	{
		{2275.9602,2700.9551,1122.4604},
		{2275.9600,2703.2546,1122.4604},
		{2275.9705,2705.5647,1122.4604},
		{2279.7292,2705.5667,1122.4604},
		{2279.6968,2703.2568,1122.4604},
		{2279.7200,2700.9551,1122.4604}
	},
	Float:test_air[3][4] =
	{
		{2113.5669,-2201.5996,21.5266,180.8961},
		{2104.3145,-2201.7021,21.4907,172.2917},
		{2087.3530,-2200.8398,21.4918,177.0115}
	},
	Float:test_car[23][4] =
	{
		{2191.6106,-2186.8486,22.0405,180.9655},
		{2207.9658,-2187.1235,21.9618,90.8931},
		{2202.9758,-2219.3999,21.9545,359.3989},
		{2109.5789,-2186.5491,21.2118,358.9172},
		{2104.8074,-2185.8093,21.2118,356.4106},
		{2100.3840,-2185.2065,21.2118,358.6039},
		{2095.9463,-2184.5740,21.2118,358.2906},
		{2090.8176,-2183.5371,21.2118,0.7973},
		{2085.5969,-2183.8257,21.2118,356.7239},
		{2080.1584,-2182.9946,21.2118,358.6039},
		{2074.1968,-2181.9346,21.2118,357.3506},
		{2069.6172,-2181.2068,21.2118,356.0739},
		{2065.0439,-2180.8010,21.2118,1.0873},
		{2060.7605,-2179.9714,21.2118,359.8339},
		{2056.1917,-2179.3862,21.2118,0.7739},
		{2051.6724,-2178.9556,21.2118,359.2072},
		{2047.2318,-2177.9524,21.2118,0.7739},
		{2042.5785,-2177.3108,21.2118,0.1473},
		{2038.2161,-2176.8030,21.2118,0.4606},
		{2033.2719,-2176.1870,21.2118,359.8339},
		{2027.6682,-2176.6426,21.2118,1.7139},
		{2022.7399,-2176.7063,21.2118,4.2206},
		{2015.9470,-2176.3315,21.2118,0.7739}
	},
	Float:auto_page_exam[6][3] =
	{
		{2274.8635,2700.9551,1122.4604},
		{2274.8840,2703.2563,1122.4604},
		{2274.8547,2705.5623,1122.4604},
		{2278.6055,2705.5627,1122.4604},
		{2278.6350,2703.2556,1122.4604},
		{2278.6145,2700.9551,1122.4604}
	};
	
enum SADinfo {
	sad_object[9],
	Text3D:sad_3dtext,
	sad_fermer[24],
	sad_temp,
	sad_time,
	bool:sad_use
};
new sad_area[175],
	SI[175][SADinfo],
	Float:sad_objects[175][6] =
	{
		{ 1643.7520,2316.1260,11.4300, -0.000006, 0.000013, -19.899990 }, // 1
		{ 1643.6158,2317.8687,11.4300, -0.000006, 0.000013, -19.899990 }, // 2
		{ 1643.7061,2319.6794,11.4300, -0.000006, 0.000013, -19.899990 }, // 3
		{ 1643.7644,2321.2778,11.4300, -0.000006, 0.000013, -19.899990 }, // 4
		{ 1643.6761,2322.9038,11.4300, -0.000006, 0.000013, -19.899990 }, // 5
		{ 1643.5839,2324.7234,11.4300, -0.000006, 0.000013, -19.899990 }, // 6
		{ 1643.7377,2326.2256,11.4300, -0.000006, 0.000013, -19.899990 }, // 7
		{ 1643.7297,2328.1284,11.4300, -0.000006, 0.000013, -19.899990 }, // 8
		{ 1643.7642,2329.7690,11.4300, -0.000006, 0.000013, -19.899990 }, // 9
		{ 1643.7925,2331.4492,11.4300, -0.000006, 0.000013, -19.899990 }, // 10
		{ 1643.8370,2333.2537,11.4300, -0.000006, 0.000013, -19.899990 }, // 11
		{ 1643.6125,2334.7722,11.4300, -0.000006, 0.000013, -19.899990 }, // 12
		{ 1643.5454,2336.5981,11.4300, -0.000006, 0.000013, -19.899990 }, // 13
		{ 1643.7803,2338.1838,11.4300, -0.000006, 0.000013, -19.899990 }, // 14
		{ 1643.5316,2339.9758,11.4300, -0.000006, 0.000013, -19.899990 }, // 15
		{ 1643.5361,2341.6350,11.4300, -0.000006, 0.000013, -19.899990 }, // 16
		{ 1643.6696,2343.3486,11.4300, -0.000006, 0.000013, -19.899990 }, // 17
		{ 1643.6289,2345.1814,11.4300, -0.000006, 0.000013, -19.899990 }, // 18
		{ 1643.7870,2346.8755,11.4300, -0.000006, 0.000013, -19.899990 }, // 19
		{ 1643.7053,2348.5667,11.4300, -0.000006, 0.000013, -19.899990 }, // 20
		{ 1643.7261,2350.2075,11.4300, -0.000006, 0.000013, -19.899990 }, // 21
		{ 1641.8557,2351.0869,11.4300, -0.000006, 0.000013, -19.899990 }, // 22
		{ 1641.8329,2349.4365,11.4300, -0.000006, 0.000013, -19.899990 }, // 23
		{ 1641.9200,2347.7493,11.4300, -0.000006, 0.000013, -19.899990 }, // 24
		{ 1641.4684,2345.7944,11.4300, -0.000006, 0.000013, -19.899990 }, // 25
		{ 1641.6154,2344.2437,11.4300, -0.000006, 0.000013, -19.899990 }, // 26
		{ 1641.7773,2342.4680,11.4300, -0.000006, 0.000013, -19.899990 }, // 27
		{ 1641.5889,2340.8542,11.4300, -0.000006, 0.000013, -19.899990 }, // 28
		{ 1641.7990,2339.1772,11.4300, -0.000006, 0.000013, -19.899990 }, // 29
		{ 1641.4330,2337.4067,11.4300, -0.000006, 0.000013, -19.899990 }, // 30
		{ 1641.4764,2335.7041,11.4300, -0.000006, 0.000013, -19.899990 }, // 31
		{ 1641.4832,2334.0454,11.4300, -0.000006, 0.000013, -19.899990 }, // 32
		{ 1641.6169,2332.2708,11.4300, -0.000006, 0.000013, -19.899990 }, // 33
		{ 1641.4606,2330.6353,11.4300, -0.000006, 0.000013, -19.899990 }, // 34
		{ 1641.9628,2329.0305,11.43007, -0.000006, 0.000013, -19.899990 }, // 35
		{ 1641.5142,2327.3462,11.4300, -0.000006, 0.000013, -19.899990 }, // 36
		{ 1641.8816,2325.6028,11.4300, -0.000006, 0.000013, -19.899990 }, // 37
		{ 1641.5658,2323.7258,11.4300, -0.000006, 0.000013, -19.899990 }, // 38
		{ 1641.5470,2322.1702,11.4300, -0.000006, 0.000013, -19.899990 }, // 39
		{ 1641.5085,2320.3774,11.4300, -0.000006, 0.000013, -19.899990 }, // 40
		{ 1641.5665,2318.6951,11.4300, -0.000006, 0.000013, -19.899990 }, // 41
		{ 1641.6726,2317.1536,11.4300, -0.000006, 0.000013, -19.899990 }, // 42
		{ 1641.5281,2315.3792,11.4300, -0.000006, 0.000013, -19.899990 }, // 43
		{ 1639.6665,2315.2700,11.4300, -0.000006, 0.000013, -19.899990 }, // 44
		{ 1639.5626,2316.9832,11.4300, -0.000006, 0.000013, -19.899990 }, // 45
		{ 1639.6162,2318.7954,11.4300, -0.000006, 0.000013, -19.899990 }, // 46
		{ 1639.5148,2320.4194,11.4300, -0.000006, 0.000013, -19.899990 }, // 47
		{ 1639.6337,2322.0486,11.4300, -0.000006, 0.000013, -19.899990 }, // 48
		{ 1639.5421,2323.9998,11.4300, -0.000006, 0.000013, -19.899990 }, // 49
		{ 1639.5668,2325.4622,11.4300, -0.000006, 0.000013, -19.899990 }, // 50
		{ 1639.3745,2327.2249,11.4300, -0.000006, 0.000013, -19.899990 }, // 51
		{ 1639.6525,2328.9788,11.4300, -0.000006, 0.000013, -19.899990 }, // 52
		{ 1639.5193,2330.5308,11.4300, -0.000006, 0.000013, -19.899990 }, // 53
		{ 1639.6730,2332.5168,11.4300, -0.000006, 0.000013, -19.899990 }, // 54
		{ 1639.4471,2333.8743,11.4300, -0.000006, 0.000013, -19.899990 }, // 55
		{ 1639.4812,2335.5457,11.4300, -0.000006, 0.000013, -19.899990 }, // 56
		{ 1639.5912,2337.4690,11.4300, -0.000006, 0.000013, -19.899990 }, // 57
		{ 1639.6274,2339.1289,11.4300, -0.000006, 0.000013, -19.899990 }, // 58
		{ 1639.4788,2340.8037,11.4300, -0.000006, 0.000013, -19.899990 }, // 59
		{ 1639.6996,2342.4944,11.4300, -0.000006, 0.000013, -19.899990 }, // 60
		{ 1639.5784,2344.2668,11.4300, -0.000006, 0.000013, -19.899990 }, // 61
		{ 1639.7147,2345.9722,11.4300, -0.000006, 0.000013, -19.899990 }, // 62
		{ 1639.5685,2347.7268,11.4300, -0.000006, 0.000013, -19.899990 }, // 63
		{ 1639.5720,2349.3403,11.4300, -0.000006, 0.000013, -19.899990 }, // 64
		{ 1639.5969,2351.0771,11.4300, -0.000006, 0.000013, -19.899990 }, // 65
		{ 1637.5691,2351.0654,11.4300, -0.000006, 0.000013, -19.899990 }, // 66
		{ 1637.5883,2349.2705,11.4300, -0.000006, 0.000013, -19.899990 }, // 67
		{ 1637.4615,2347.6277,11.4300, -0.000006, 0.000013, -19.899990 }, // 68
		{ 1637.6417,2346.0039,11.4300, -0.000006, 0.000013, -19.899990 }, // 69
		{ 1637.5533,2344.2104,11.4300, -0.000006, 0.000013, -19.899990 }, // 70
		{ 1637.5021,2342.5591,11.4300, -0.000006, 0.000013, -19.899990 }, // 71
		{ 1637.4756,2340.7944,11.4300, -0.000006, 0.000013, -19.899990 }, // 72
		{ 1637.7598,2339.2561,11.4300, -0.000006, 0.000013, -19.899990 }, // 73
		{ 1637.6621,2337.3157,11.4300, -0.000006, 0.000013, -19.899990 }, // 74
		{ 1637.6788,2335.5503,11.4300, -0.000006, 0.000013, -19.899990 }, // 75
		{ 1637.6908,2333.9663,11.4300, -0.000006, 0.000013, -19.899990 }, // 76
		{ 1637.7655,2332.2024,11.4300, -0.000006, 0.000013, -19.899990 }, // 77
		{ 1637.6396,2330.4922,11.4300, -0.000006, 0.000013, -19.899990 }, // 78
		{ 1637.7201,2328.9451,11.4300, -0.000006, 0.000013, -19.899990 }, // 79
		{ 1637.6066,2327.1694,11.4300, -0.000006, 0.000013, -19.899990 }, // 80
		{ 1637.6193,2325.4656,11.4300, -0.000006, 0.000013, -19.899990 }, // 81
		{ 1637.6782,2323.8789,11.4300, -0.000006, 0.000013, -19.899990 }, // 82
		{ 1637.5405,2322.0464,11.4300, -0.000006, 0.000013, -19.899990 }, // 83
		{ 1637.5109,2320.3972,11.4300, -0.000006, 0.000013, -19.899990 }, // 84
		{ 1637.4958,2318.7915,11.4300, -0.000006, 0.000013, -19.899990 }, // 85
		{ 1637.7299,2316.9753,11.4300, -0.000006, 0.000013, -19.899990 }, // 86
		{ 1637.6182,2315.3003,11.4300, -0.000006, 0.000013, -19.899990 }, // 87
		{ 1635.5757,2315.2634,11.4300, -0.000006, 0.000013, -19.899990 }, // 88
		{ 1635.5530,2317.1975,11.4300, -0.000006, 0.000013, -19.899990 }, // 89
		{ 1635.2999,2318.7427,11.4300, -0.000006, 0.000013, -19.899990 }, // 90
		{ 1635.5966,2320.4443,11.4300, -0.000006, 0.000013, -19.899990 }, // 91
		{ 1635.3971,2322.0894,11.4300, -0.000006, 0.000013, -19.899990 }, // 92
		{ 1635.4324,2323.7522,11.4300, -0.000006, 0.000013, -19.899990 }, // 93
		{ 1635.4481,2325.5000,11.4300, -0.000006, 0.000013, -19.899990 }, // 94
		{ 1635.3109,2327.2644,11.4300, -0.000006, 0.000013, -19.899990 }, // 95
		{ 1635.6085,2328.8528,11.4300, -0.000006, 0.000013, -19.899990 }, // 96
		{ 1635.4923,2330.7397,11.4300, -0.000006, 0.000013, -19.899990 }, // 97
		{ 1635.6267,2332.1733,11.4300, -0.000006, 0.000013, -19.899990 }, // 98
		{ 1635.4819,2334.0898,11.4300, -0.000006, 0.000013, -19.899990 }, // 99
		{ 1635.3738,2335.6553,11.4300, -0.000006, 0.000013, -19.899990 }, // 100
		{ 1635.5055,2337.2944,11.4300, -0.000006, 0.000013, -19.899990 }, // 101
		{ 1635.3496,2339.1997,11.4300, -0.000006, 0.000013, -19.899990 }, // 102
		{ 1635.5934,2340.6821,11.4300, -0.000006, 0.000013, -19.899990 }, // 103
		{ 1635.5715,2342.5786,11.4300, -0.000006, 0.000013, -19.899990 }, // 104
		{ 1635.4550,2344.0945,11.4300, -0.000006, 0.000013, -19.899990 }, // 105
		{ 1635.3446,2345.8276,11.4300, -0.000006, 0.000013, -19.899990 }, // 106
		{ 1635.5802,2347.6572,11.4300, -0.000006, 0.000013, -19.899990 }, // 107
		{ 1635.7084,2349.2126,11.4300, -0.000006, 0.000013, -19.899990 }, // 108
		{ 1635.5955,2351.1313,11.4300, -0.000006, 0.000013, -19.899990 }, // 109
		{ 1633.5066,2350.9817,11.4300, -0.000006, 0.000013, -19.899990 }, // 110
		{ 1633.4756,2349.1233,11.4300, -0.000006, 0.000013, -19.899990 }, // 111
		{ 1633.5022,2347.6970,11.4300, -0.000006, 0.000013, -19.899990 }, // 112
		{ 1633.5651,2345.9663,11.4300, -0.000006, 0.000013, -19.899990 }, // 113
		{ 1633.5215,2344.3269,11.4300, -0.000006, 0.000013, -19.899990 }, // 114
		{ 1633.5505,2342.6394,11.4300, -0.000006, 0.000013, -19.899990 }, // 115
		{ 1633.4457,2340.9106,11.4300, -0.000006, 0.000013, -19.899990 }, // 116
		{ 1633.6320,2339.1089,11.4300, -0.000006, 0.000013, -19.899990 }, // 117
		{ 1633.4990,2337.2190,11.4300, -0.000006, 0.000013, -19.899990 }, // 118
		{ 1633.4565,2335.5813,11.4300, -0.000006, 0.000013, -19.899990 }, // 119
		{ 1633.5074,2333.9314,11.4300, -0.000006, 0.000013, -19.899990 }, // 120
		{ 1633.4753,2332.4221,11.4300, -0.000006, 0.000013, -19.899990 }, // 121
		{ 1633.5497,2330.7153,11.4300, -0.000006, 0.000013, -19.899990 }, // 122
		{ 1633.4614,2328.9946,11.4300, -0.000006, 0.000013, -19.899990 }, // 123
		{ 1633.6107,2327.2224,11.4300, -0.000006, 0.000013, -19.899990 }, // 124
		{ 1633.4979,2325.5093,11.4300, -0.000006, 0.000013, -19.899990 }, // 125
		{ 1633.3624,2323.7109,11.4300, -0.000006, 0.000013, -19.899990 }, // 126
		{ 1633.2910,2322.2031,11.4300, -0.000006, 0.000013, -19.899990 }, // 127
		{ 1633.5466,2320.3311,11.4300, -0.000006, 0.000013, -19.899990 }, // 128
		{ 1633.5101,2318.5996,11.4300, -0.000006, 0.000013, -19.899990 }, // 129
		{ 1633.3690,2316.9565,11.4300, -0.000006, 0.000013, -19.899990 }, // 130
		{ 1633.5627,2315.2170,11.4300, -0.000006, 0.000013, -19.899990 }, // 131
		{ 1631.3842,2315.4026,11.4300, -0.000006, 0.000013, -19.899990 }, // 132
		{ 1631.3578,2316.9277,11.4300, -0.000006, 0.000013, -19.899990 }, // 133
		{ 1631.3473,2318.5859,11.4300, -0.000006, 0.000013, -19.899990 }, // 134
		{ 1631.2233,2320.3999,11.4300, -0.000006, 0.000013, -19.899990 }, // 135
		{ 1631.4884,2321.9509,11.4300, -0.000006, 0.000013, -19.899990 }, // 136
		{ 1631.2931,2323.8247,11.4300, -0.000006, 0.000013, -19.899990 }, // 137
		{ 1631.4478,2325.6270,11.4300, -0.000006, 0.000013, -19.899990 }, // 138
		{ 1631.3429,2327.2368,11.4300, -0.000006, 0.000013, -19.899990 }, // 139
		{ 1631.5341,2328.8271,11.4300, -0.000006, 0.000013, -19.899990 }, // 140
		{ 1631.3070,2330.6838,11.4300, -0.000006, 0.000013, -19.899990 }, // 141
		{ 1631.2694,2332.2727,11.4300, -0.000006, 0.000013, -19.899990 }, // 142
		{ 1631.3278,2333.9187,11.4300, -0.000006, 0.000013, -19.899990 }, // 143
		{ 1631.2291,2335.5613,11.4300, -0.000006, 0.000013, -19.899990 }, // 144
		{ 1631.4238,2337.5049,11.4300, -0.000006, 0.000013, -19.899990 }, // 145
		{ 1631.3723,2338.9658,11.4300, -0.000006, 0.000013, -19.899990 }, // 146
		{ 1631.4060,2340.8081,11.4300, -0.000006, 0.000013, -19.899990 }, // 147
		{ 1631.4316,2342.3848,11.4300, -0.000006, 0.000013, -19.899990 }, // 148
		{ 1631.3918,2344.2419,11.4300, -0.000006, 0.000013, -19.899990 }, // 149
		{ 1631.2585,2345.8948,11.4300, -0.000006, 0.000013, -19.899990 }, // 150
		{ 1631.4404,2347.6572,11.4300, -0.000006, 0.000013, -19.899990 }, // 151
		{ 1631.4457,2349.4631,11.4300, -0.000006, 0.000013, -19.899990 }, // 152
		{ 1631.3169,2351.1062,11.4300, -0.000006, 0.000013, -19.899990 }, // 153
		{ 1629.5219,2350.9333,11.4300, -0.000006, 0.000013, -19.899990 }, // 154
		{ 1629.1539,2349.2383,11.4300, -0.000006, 0.000013, -19.899990 }, // 155
		{ 1629.2836,2347.5171,11.4300, -0.000006, 0.000013, -19.899990 }, // 156
		{ 1629.3524,2345.9187,11.4300, -0.000006, 0.000013, -19.899990 }, // 157
		{ 1629.6057,2344.2581,11.4300, -0.000006, 0.000013, -19.899990 }, // 158
		{ 1629.5590,2342.3938,11.4300, -0.000006, 0.000013, -19.899990 }, // 159
		{ 1629.4528,2340.6951,11.4300, -0.000006, 0.000013, -19.899990 }, // 160
		{ 1629.5292,2339.2202,11.4300, -0.000006, 0.000013, -19.899990 }, // 161
		{ 1629.5748,2337.2415,11.4300, -0.000006, 0.000013, -19.899990 }, // 162
		{ 1629.4119,2335.7339,11.4300, -0.000006, 0.000013, -19.899990 }, // 163
		{ 1629.5037,2334.1167,11.4300, -0.000006, 0.000013, -19.899990 }, // 164
		{ 1629.4799,2332.5242,11.4300, -0.000006, 0.000013, -19.899990 }, // 165
		{ 1629.4034,2330.4160,11.4300, -0.000006, 0.000013, -19.899990 }, // 166
		{ 1629.1888,2328.7683,11.4300, -0.000006, 0.000013, -19.899990 }, // 167
		{ 1629.2018,2327.1824,11.4300, -0.000006, 0.000013, -19.899990 }, // 168
		{ 1629.6713,2325.5981,11.4300, -0.000006, 0.000013, -19.899990 }, // 169
		{ 1629.4639,2323.8345,11.4300, -0.000006, 0.000013, -19.899990 }, // 170
		{ 1629.2012,2322.0999,11.4300, -0.000006, 0.000013, -19.899990 }, // 171
		{ 1629.5740,2320.3835,11.4300, -0.000006, 0.000013, -19.899990 }, // 172
		{ 1629.5077,2318.8779,11.4300, -0.000006, 0.000013, -19.899990 }, // 173
		{ 1629.5101,2317.1382,11.4300, -0.000006, 0.000013, -19.899990 }, // 174
		{ 1629.2946,2315.1975,11.4300, -0.000006, 0.000013, -19.899990 } // 175
	},
	Float:sad_stairs[119][6] = {
		{ -226.001708, 93.735031, 2.619222, 0.000007, 0.000001, 84.199958 },
		{ -215.802612, 89.539550, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -205.848312, 85.524879, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -195.649230, 81.329399, 2.619222, 0.000022, 0.000004, 84.199913 },
		{ -185.238677, 78.003570, 2.619222, 0.000022, 0.000004, 84.199913 },
		{ -175.039596, 73.808090, 2.619222, 0.000030, 0.000005, 84.199890 },
		{ -164.171188, 70.900276, 2.619222, 0.000030, 0.000005, 84.199890 },
		{ -153.972106, 66.704788, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -143.028671, 62.990413, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -132.829589, 58.794933, 2.619222, 0.000045, 0.000008, 84.199844 },
		{ -229.061645, 80.295066, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -218.862548, 76.099586, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -208.908248, 72.084915, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -198.709167, 67.889434, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -188.298614, 64.563606, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -178.099533, 60.368125, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -167.231124, 57.460311, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -157.032043, 53.264823, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -146.088607, 49.550449, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -135.889526, 45.354969, 2.619222, 0.000052, 0.000009, 84.199821 },
		{ -232.781723, 66.545028, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -222.582626, 62.349544, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -212.628326, 58.334873, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -202.429244, 54.139392, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -192.018692, 50.813564, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -181.819610, 46.618083, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -170.951202, 43.710269, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -160.752120, 39.514781, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -149.808685, 35.800407, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -139.609603, 31.604927, 2.619222, 0.000052, 0.000009, 84.199821 },
		{ -235.841659, 53.105060, 2.619222, 0.000022, 0.000002, 84.199913 },
		{ -225.642562, 48.909580, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -215.688262, 44.894908, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -205.489181, 40.699428, 2.619222, 0.000037, 0.000005, 84.199867 },
		{ -195.078628, 37.373600, 2.619222, 0.000037, 0.000005, 84.199867 },
		{ -184.879547, 33.178119, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -174.011138, 30.270305, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -163.812057, 26.074817, 2.619222, 0.000052, 0.000008, 84.199821 },
		{ -152.868621, 22.360443, 2.619222, 0.000052, 0.000008, 84.199821 },
		{ -142.669540, 18.164962, 2.619222, 0.000060, 0.000009, 84.199798 },
		{ -241.863632, 43.139434, 2.619222, 0.000030, 0.000003, 80.499885 },
		{ -231.956542, 38.294525, 2.619222, 0.000037, 0.000005, 80.499855 },
		{ -222.282073, 33.645843, 2.619222, 0.000037, 0.000005, 80.499855 },
		{ -212.374984, 28.800935, 2.619222, 0.000045, 0.000006, 80.499839 },
		{ -202.200759, 24.810218, 2.619222, 0.000045, 0.000006, 80.499839 },
		{ -192.293685, 19.965311, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -181.635574, 16.362194, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -171.728500, 11.517277, 2.619222, 0.000060, 0.000009, 80.499786 },
		{ -161.047561, 7.104437, 2.619222, 0.000060, 0.000009, 80.499786 },
		{ -151.140487, 2.259530, 2.619222, 0.000067, 0.000010, 80.499763 },
		{ -245.784515, 29.924945, 2.619222, 0.000037, 0.000004, 80.499855 },
		{ -235.877410, 25.080036, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -226.202941, 20.431358, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -216.295852, 15.586450, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -206.121627, 11.595735, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -196.214569, 6.750826, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -185.556442, 3.147708, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -175.649368, -1.697207, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -164.968444, -6.110047, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -155.061355, -10.954955, 2.619222, 0.000075, 0.000011, 80.499748 },
		{ -250.384155, 16.443634, 2.619222, 0.000037, 0.000004, 80.499855 },
		{ -240.477066, 11.598720, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -230.802597, 6.950041, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -220.895507, 2.105134, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -210.721282, -1.885581, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -200.814193, -6.730488, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -190.156097, -10.333607, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -180.249023, -15.178524, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -169.568084, -19.591361, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -159.661010, -24.436271, 2.619222, 0.000075, 0.000011, 80.499748 },
		{ -254.305038, 3.229145, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -244.397933, -1.615763, 2.619222, 0.000052, 0.000006, 80.499816 },
		{ -234.723464, -6.264442, 2.619222, 0.000052, 0.000006, 80.499816 },
		{ -224.816375, -11.109350, 2.619222, 0.000060, 0.000007, 80.499786 },
		{ -214.642150, -15.100067, 2.619222, 0.000060, 0.000007, 80.499786 },
		{ -204.735076, -19.944974, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -194.076965, -23.548091, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -184.169891, -28.393007, 2.619222, 0.000075, 0.000010, 80.499748 },
		{ -173.488967, -32.805850, 2.619222, 0.000075, 0.000010, 80.499748 },
		{ -163.581878, -37.650753, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -258.263671, -6.910583, 2.619222, 0.000037, 0.000004, 80.499862 },
		{ -248.356597, -11.755493, 2.619222, 0.000045, 0.000006, 80.499832 },
		{ -238.682128, -16.404174, 2.619222, 0.000045, 0.000006, 80.499832 },
		{ -228.775039, -21.249082, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -218.600814, -25.239799, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -208.693740, -30.084707, 2.619222, 0.000060, 0.000009, 80.499794 },
		{ -198.035629, -33.687824, 2.619222, 0.000060, 0.000009, 80.499794 },
		{ -188.128555, -38.532741, 2.619222, 0.000067, 0.000010, 80.499763 },
		{ -177.447616, -42.945579, 2.619222, 0.000067, 0.000010, 80.499763 },
		{ -167.540542, -47.790489, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -262.184570, -20.125072, 2.619222, 0.000045, 0.000005, 80.499832 },
		{ -252.277465, -24.969982, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -242.602996, -29.618659, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -232.695907, -34.463569, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -222.521682, -38.454284, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -212.614624, -43.299190, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -201.956497, -46.902309, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -192.049423, -51.747226, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -181.368499, -56.160064, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -171.461410, -61.004974, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -266.784210, -33.606384, 2.619222, 0.000045, 0.000005, 80.499832 },
		{ -256.877136, -38.451297, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -247.202651, -43.099975, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -237.295562, -47.944885, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -227.121337, -51.935600, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -217.214248, -56.780506, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -206.556152, -60.383625, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -196.649078, -65.228546, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -185.968139, -69.641380, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -176.061065, -74.486289, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -270.705078, -46.820873, 2.619222, 0.000052, 0.000006, 80.499816 },
		{ -260.797973, -51.665782, 2.619222, 0.000060, 0.000007, 80.499794 },
		{ -251.123519, -56.314460, 2.619222, 0.000060, 0.000007, 80.499794 },
		{ -241.216430, -61.159370, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -231.042205, -65.150085, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -221.135131, -69.994995, 2.619222, 0.000075, 0.000010, 80.499740 },
		{ -210.477020, -73.598114, 2.619222, 0.000075, 0.000010, 80.499740 },
		{ -200.569946, -78.443023, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -189.889022, -82.855865, 2.619222, 0.000082, 0.000012, 80.499725 }
	};
	
enum s_apple {
	a_ID,
	Float:a_coordsX,
	Float:a_coordsY,
	Float:a_coordsZ,
	Float:a_coordsAX,
	Float:a_coordsAY,
	Float:a_coordsAZ
}
new sad_apple[833][s_apple] = {
	{ 0, -225.258819, 92.767127, 5.712926, 0.000000, 0.000007, 4.599997 },
	{ 0, -226.205520, 91.567390, 7.042929, 0.000000, 0.000007, 4.599997 },
	{ 0, -227.997024, 92.771568, 5.900618, 0.000000, 0.000007, 4.599997 },
	{ 0, -228.189788, 94.717208, 6.156506, 0.000000, 0.000007, 4.599997 },
	{ 0, -225.719497, 91.557861, 7.075955, 0.000000, 0.000007, 4.599997 },
	{ 0, -225.961410, 96.371261, 7.306849, 0.000000, 0.000007, 4.599997 },
	{ 0, -227.136718, 94.948760, 5.651482, 0.000000, 0.000007, 4.599997 },
	{ 1,  -215.059738, 88.571647, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 1,  -216.006439, 87.371910, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 1,  -217.797943, 88.576080, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 1,  -217.990692, 90.521728, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 1,  -215.520401, 87.362380, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 1,  -215.762329, 92.175781, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 1,  -216.937637, 90.753280, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.105422, 84.556983, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 2,  -206.052108, 83.357238, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 2,  -207.843627, 84.561416, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 2,  -208.036392, 86.507064, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.566085, 83.347724, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.808013, 88.161117, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 2,  -206.983322, 86.738624, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 3,  -194.906341, 80.361503, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.853027, 79.161758, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 3,  -197.644546, 80.365936, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 3,  -197.837310, 82.311584, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.367004, 79.152236, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.608932, 83.965629, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 3,  -196.784240, 82.543136, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 4,  -184.495788, 77.035675, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 4,  -185.442504, 75.835937, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 4,  -187.234008, 77.040107, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 4,  -187.426757, 78.985763, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 4,  -184.956466, 75.826416, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 4,  -185.198394, 80.639808, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 4,  -186.373703, 79.217315, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 5,  -174.296707, 72.840194, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 5,  -175.243423, 71.640457, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 5,  -177.034927, 72.844627, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 5,  -177.227676, 74.790275, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 5,  -174.757385, 71.630935, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 5,  -174.999298, 76.444328, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 5,  -176.174606, 75.021835, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 6,  -163.428298, 69.932373, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 6,  -164.375000, 68.732635, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 6,  -166.166503, 69.936805, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 6,  -166.359268, 71.882461, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 6,  -163.888961, 68.723114, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 6,  -164.130889, 73.536506, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 6,  -165.306198, 72.114013, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 7,  -153.229217, 65.736885, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 7,  -154.175903, 64.537147, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 7,  -155.967422, 65.741325, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 7,  -156.160186, 67.686981, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 7,  -153.689880, 64.527633, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 7,  -153.931808, 69.341026, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 7,  -155.107116, 67.918533, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.285766, 62.022514, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 8,  -143.232482, 60.822776, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 8,  -145.023986, 62.026950, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 8,  -145.216751, 63.972595, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.746444, 60.813255, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.988388, 65.626647, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 8,  -144.163681, 64.204154, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 9,  -132.086685, 57.827033, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 9,  -133.033401, 56.627296, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 9,  -134.824905, 57.831470, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 9,  -135.017669, 59.777114, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 9,  -132.547363, 56.617767, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 9,  -132.789291, 61.431163, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 9,  -133.964599, 60.008666, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 10,  -228.318756, 79.327163, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 10,  -229.265457, 78.127426, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 10,  -231.056961, 79.331604, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 10,  -231.249725, 81.277244, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 10,  -228.779434, 78.117897, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 10,  -229.021347, 82.931297, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 10,  -230.196655, 81.508796, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 11,  -218.119674, 75.131683, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 11,  -219.066375, 73.931945, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 11,  -220.857879, 75.136116, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 11,  -221.050628, 77.081764, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 11,  -218.580337, 73.922416, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 11,  -218.822265, 78.735816, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 11,  -219.997573, 77.313316, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.165359, 71.117019, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 12,  -209.112045, 69.917274, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 12,  -210.903564, 71.121452, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 12,  -211.096328, 73.067100, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.626022, 69.907760, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.867950, 74.721153, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 12,  -210.043258, 73.298660, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 13,  -197.966278, 66.921539, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.912963, 65.721794, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 13,  -200.704483, 66.925971, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 13,  -200.897247, 68.871620, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.426940, 65.712272, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.668869, 70.525665, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 13,  -199.844177, 69.103172, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 14,  -187.555725, 63.595710, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.502441, 62.395973, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 14,  -190.293945, 63.600143, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 14,  -190.486694, 65.545799, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.016403, 62.386451, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.258331, 67.199844, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 14,  -189.433639, 65.777351, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 15,  -177.356643, 59.400230, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 15,  -178.303359, 58.200492, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 15,  -180.094863, 59.404663, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 15,  -180.287612, 61.350311, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 15,  -177.817321, 58.190971, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 15,  -178.059234, 63.004364, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 15,  -179.234542, 61.581871, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 16,  -166.488235, 56.492408, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 16,  -167.434936, 55.292671, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 16,  -169.226440, 56.496841, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 16,  -169.419204, 58.442497, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 16,  -166.948898, 55.283149, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 16,  -167.190826, 60.096542, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 16,  -168.366134, 58.674049, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 17,  -156.289154, 52.296920, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 17,  -157.235839, 51.097183, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 17,  -159.027359, 52.301361, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 17,  -159.220123, 54.247016, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 17,  -156.749816, 51.087669, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 17,  -156.991744, 55.901062, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 17,  -158.167053, 54.478569, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 18,  -145.345703, 48.582550, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 18,  -146.292419, 47.382812, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 18,  -148.083923, 48.586986, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 18,  -148.276687, 50.532630, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 18,  -145.806381, 47.373291, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 18,  -146.048324, 52.186683, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 18,  -147.223617, 50.764190, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 19,  -135.146621, 44.387069, 5.712926, 0.000000, 0.000053, 4.599997 },
	{ 19,  -136.093338, 43.187332, 7.042929, 0.000000, 0.000053, 4.599997 },
	{ 19,  -137.884841, 44.391506, 5.900618, 0.000000, 0.000053, 4.599997 },
	{ 19,  -138.077606, 46.337150, 6.156506, 0.000000, 0.000053, 4.599997 },
	{ 19,  -135.607299, 43.177803, 7.075955, 0.000000, 0.000053, 4.599997 },
	{ 19,  -135.849227, 47.991199, 7.306849, 0.000000, 0.000053, 4.599997 },
	{ 19,  -137.024536, 46.568702, 5.651482, 0.000000, 0.000053, 4.599997 },
	{ 20,  -232.038833, 65.577117, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.985534, 64.377380, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 20,  -234.777038, 65.581558, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 20,  -234.969802, 67.527206, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.499511, 64.367858, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.741424, 69.181259, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 20,  -233.916732, 67.758758, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 21,  -221.839752, 61.381641, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.786453, 60.181903, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 21,  -224.577957, 61.386074, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 21,  -224.770706, 63.331722, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.300415, 60.172374, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.542343, 64.985778, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 21,  -223.717651, 63.563274, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 22,  -211.885437, 57.366977, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.832122, 56.167232, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 22,  -214.623641, 57.371410, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 22,  -214.816406, 59.317058, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.346099, 56.157718, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.588027, 60.971111, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 22,  -213.763336, 59.548618, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 23,  -201.686355, 53.171497, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.633041, 51.971752, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 23,  -204.424560, 53.175930, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 23,  -204.617324, 55.121578, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.147018, 51.962230, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.388946, 56.775623, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 23,  -203.564254, 55.353130, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.275802, 49.845668, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 24,  -192.222518, 48.645931, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 24,  -194.014022, 49.850101, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 24,  -194.206771, 51.795757, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.736480, 48.636409, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.978408, 53.449802, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 24,  -193.153717, 52.027309, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 25,  -181.076721, 45.650188, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 25,  -182.023437, 44.450450, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 25,  -183.814941, 45.654621, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 25,  -184.007690, 47.600269, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 25,  -181.537399, 44.440929, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 25,  -181.779312, 49.254322, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 25,  -182.954620, 47.831829, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.208312, 42.742366, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 26,  -171.155014, 41.542629, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 26,  -172.946517, 42.746799, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 26,  -173.139282, 44.692455, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.668975, 41.533107, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.910903, 46.346500, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 26,  -172.086212, 44.924007, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 27,  -160.009231, 38.546878, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.955917, 37.347141, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 27,  -162.747436, 38.551319, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 27,  -162.940200, 40.496974, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.469894, 37.337627, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.711822, 42.151020, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 27,  -161.887130, 40.728527, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.065780, 34.832508, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 28,  -150.012496, 33.632770, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 28,  -151.804000, 34.836944, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 28,  -151.996765, 36.782588, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.526458, 33.623249, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.768402, 38.436641, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 28,  -150.943695, 37.014148, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 29,  -138.866699, 30.637027, 5.712926, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.813415, 29.437290, 7.042929, 0.000000, 0.000053, 4.599997 },
	{ 29,  -141.604919, 30.641464, 5.900618, 0.000000, 0.000053, 4.599997 },
	{ 29,  -141.797683, 32.587108, 6.156506, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.327377, 29.427761, 7.075955, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.569305, 34.241157, 7.306849, 0.000000, 0.000053, 4.599997 },
	{ 29,  -140.744613, 32.818660, 5.651482, 0.000000, 0.000053, 4.599997 },
	{ 30,  -235.098770, 52.137157, 5.712926, 0.000001, 0.000022, 4.599997 },
	{ 30,  -236.045471, 50.937419, 7.042929, 0.000001, 0.000022, 4.599997 },
	{ 30,  -237.836975, 52.141597, 5.900618, 0.000001, 0.000022, 4.599997 },
	{ 30,  -238.029739, 54.087238, 6.156506, 0.000001, 0.000022, 4.599997 },
	{ 30,  -235.559448, 50.927890, 7.075955, 0.000001, 0.000022, 4.599997 },
	{ 30,  -235.801361, 55.741291, 7.306849, 0.000001, 0.000022, 4.599997 },
	{ 30,  -236.976669, 54.318790, 5.651482, 0.000001, 0.000022, 4.599997 },
	{ 31,  -224.899688, 47.941677, 5.712926, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.846389, 46.741939, 7.042929, 0.000001, 0.000030, 4.599997 },
	{ 31,  -227.637893, 47.946109, 5.900618, 0.000001, 0.000030, 4.599997 },
	{ 31,  -227.830642, 49.891757, 6.156506, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.360351, 46.732410, 7.075955, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.602279, 51.545810, 7.306849, 0.000001, 0.000030, 4.599997 },
	{ 31,  -226.777587, 50.123310, 5.651482, 0.000001, 0.000030, 4.599997 },
	{ 32,  -214.945373, 43.927013, 5.712926, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.892059, 42.727268, 7.042929, 0.000001, 0.000030, 4.599997 },
	{ 32,  -217.683578, 43.931446, 5.900618, 0.000001, 0.000030, 4.599997 },
	{ 32,  -217.876342, 45.877094, 6.156506, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.406036, 42.717754, 7.075955, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.647964, 47.531147, 7.306849, 0.000001, 0.000030, 4.599997 },
	{ 32,  -216.823272, 46.108654, 5.651482, 0.000001, 0.000030, 4.599997 },
	{ 33,  -204.746292, 39.731533, 5.712926, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.692977, 38.531787, 7.042929, 0.000001, 0.000038, 4.599997 },
	{ 33,  -207.484497, 39.735965, 5.900618, 0.000001, 0.000038, 4.599997 },
	{ 33,  -207.677261, 41.681613, 6.156506, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.206954, 38.522266, 7.075955, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.448883, 43.335659, 7.306849, 0.000001, 0.000038, 4.599997 },
	{ 33,  -206.624191, 41.913166, 5.651482, 0.000001, 0.000038, 4.599997 },
	{ 34,  -194.335739, 36.405704, 5.712926, 0.000001, 0.000038, 4.599997 },
	{ 34,  -195.282455, 35.205966, 7.042929, 0.000001, 0.000038, 4.599997 },
	{ 34,  -197.073959, 36.410137, 5.900618, 0.000001, 0.000038, 4.599997 },
	{ 34,  -197.266708, 38.355792, 6.156506, 0.000001, 0.000038, 4.599997 },
	{ 34,  -194.796417, 35.196445, 7.075955, 0.000001, 0.000038, 4.599997 },
	{ 34,  -195.038345, 40.009838, 7.306849, 0.000001, 0.000038, 4.599997 },
	{ 34,  -196.213653, 38.587345, 5.651482, 0.000001, 0.000038, 4.599997 },
	{ 35,  -184.136657, 32.210224, 5.712926, 0.000001, 0.000045, 4.599997 },
	{ 35,  -185.083374, 31.010486, 7.042929, 0.000001, 0.000045, 4.599997 },
	{ 35,  -186.874877, 32.214656, 5.900618, 0.000001, 0.000045, 4.599997 },
	{ 35,  -187.067626, 34.160305, 6.156506, 0.000001, 0.000045, 4.599997 },
	{ 35,  -184.597335, 31.000965, 7.075955, 0.000001, 0.000045, 4.599997 },
	{ 35,  -184.839248, 35.814357, 7.306849, 0.000001, 0.000045, 4.599997 },
	{ 35,  -186.014556, 34.391864, 5.651482, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.268249, 29.302402, 5.712926, 0.000001, 0.000045, 4.599997 },
	{ 36,  -174.214950, 28.102664, 7.042929, 0.000001, 0.000045, 4.599997 },
	{ 36,  -176.006454, 29.306835, 5.900618, 0.000001, 0.000045, 4.599997 },
	{ 36,  -176.199218, 31.252490, 6.156506, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.728912, 28.093143, 7.075955, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.970840, 32.906536, 7.306849, 0.000001, 0.000045, 4.599997 },
	{ 36,  -175.146148, 31.484043, 5.651482, 0.000001, 0.000045, 4.599997 },
	{ 37,  -163.069168, 25.106914, 5.712926, 0.000001, 0.000053, 4.599997 },
	{ 37,  -164.015853, 23.907176, 7.042929, 0.000001, 0.000053, 4.599997 },
	{ 37,  -165.807373, 25.111354, 5.900618, 0.000001, 0.000053, 4.599997 },
	{ 37,  -166.000137, 27.057010, 6.156506, 0.000001, 0.000053, 4.599997 },
	{ 37,  -163.529830, 23.897663, 7.075955, 0.000001, 0.000053, 4.599997 },
	{ 37,  -163.771759, 28.711055, 7.306849, 0.000001, 0.000053, 4.599997 },
	{ 37,  -164.947067, 27.288562, 5.651482, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.125717, 21.392543, 5.712926, 0.000001, 0.000053, 4.599997 },
	{ 38,  -153.072433, 20.192806, 7.042929, 0.000001, 0.000053, 4.599997 },
	{ 38,  -154.863937, 21.396980, 5.900618, 0.000001, 0.000053, 4.599997 },
	{ 38,  -155.056701, 23.342624, 6.156506, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.586395, 20.183284, 7.075955, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.828338, 24.996677, 7.306849, 0.000001, 0.000053, 4.599997 },
	{ 38,  -154.003631, 23.574184, 5.651482, 0.000001, 0.000053, 4.599997 },
	{ 39,  -141.926635, 17.197063, 5.712926, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.873352, 15.997325, 7.042929, 0.000001, 0.000060, 4.599997 },
	{ 39,  -144.664855, 17.201499, 5.900618, 0.000001, 0.000060, 4.599997 },
	{ 39,  -144.857620, 19.147144, 6.156506, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.387313, 15.987796, 7.075955, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.629241, 20.801193, 7.306849, 0.000001, 0.000060, 4.599997 },
	{ 39,  -143.804550, 19.378696, 5.651482, 0.000001, 0.000060, 4.599997 },
	{ 40,  -241.184753, 42.125606, 5.712926, 0.000001, 0.000030, 0.899986 },
	{ 40,  -242.206909, 40.989463, 7.042929, 0.000001, 0.000030, 0.899986 },
	{ 40,  -243.916976, 42.306743, 5.900618, 0.000001, 0.000030, 0.899986 },
	{ 40,  -243.983764, 44.260768, 6.156506, 0.000001, 0.000030, 0.899986 },
	{ 40,  -241.722503, 40.948593, 7.075955, 0.000001, 0.000030, 0.899986 },
	{ 40,  -241.653305, 45.767570, 7.306849, 0.000001, 0.000030, 0.899986 },
	{ 40,  -242.917953, 44.423877, 5.651482, 0.000001, 0.000030, 0.899986 },
	{ 41,  -231.277679, 37.280700, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 41,  -232.299819, 36.144554, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 41,  -234.009887, 37.461826, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 41,  -234.076675, 39.415859, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 41,  -231.815414, 36.103679, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 41,  -231.746231, 40.922660, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 41,  -233.010879, 39.578971, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 42,  -221.603179, 32.632026, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.625320, 31.495872, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 42,  -224.335403, 32.813152, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 42,  -224.402206, 34.767185, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.140930, 31.455013, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.071731, 36.273986, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 42,  -223.336380, 34.930305, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 43,  -211.696121, 27.787117, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.718231, 26.650964, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 43,  -214.428329, 27.968242, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 43,  -214.495117, 29.922275, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.233856, 26.610097, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.164657, 31.429069, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 43,  -213.429306, 30.085388, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 44,  -201.521881, 23.796400, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 44,  -202.544052, 22.660257, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 44,  -204.254104, 23.977527, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 44,  -204.320892, 25.931568, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 44,  -202.059631, 22.619392, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 44,  -201.990447, 27.438364, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 44,  -203.255096, 26.094680, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 45,  -191.614807, 18.951492, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.636978, 17.815349, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 45,  -194.347030, 19.132621, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 45,  -194.413818, 21.086652, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.152557, 17.774482, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.083343, 22.593454, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 45,  -193.347991, 21.249773, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 46,  -180.956695, 15.348366, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.978836, 14.212223, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 46,  -183.688919, 15.529493, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 46,  -183.755706, 17.483533, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.494445, 14.171356, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.425247, 18.990327, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 46,  -182.689895, 17.646644, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 47,  -171.049621, 10.503451, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 47,  -172.071762, 9.367306, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 47,  -173.781829, 10.684586, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 47,  -173.848648, 12.638626, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 47,  -171.587356, 9.326448, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 47,  -171.518157, 14.145420, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 47,  -172.782806, 12.801737, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.368682, 6.090614, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 48,  -161.390853, 4.954471, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 48,  -163.100906, 6.271745, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 48,  -163.167724, 8.225774, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.906433, 4.913604, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.837249, 9.732577, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 48,  -162.101882, 8.388894, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 49,  -150.461593, 1.245706, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 49,  -151.483764, 0.109563, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 49,  -153.193832, 1.426838, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 49,  -153.260635, 3.380866, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 49,  -150.999359, 0.068689, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 49,  -150.930160, 4.887664, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 49,  -152.194824, 3.543978, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 50,  -245.105621, 28.911119, 5.712926, 0.000002, 0.000038, 0.899986 },
	{ 50,  -246.127777, 27.774974, 7.042929, 0.000002, 0.000038, 0.899986 },
	{ 50,  -247.837844, 29.092254, 5.900618, 0.000002, 0.000038, 0.899986 },
	{ 50,  -247.904647, 31.046279, 6.156506, 0.000002, 0.000038, 0.899986 },
	{ 50,  -245.643371, 27.734100, 7.075955, 0.000002, 0.000038, 0.899986 },
	{ 50,  -245.574172, 32.553081, 7.306849, 0.000002, 0.000038, 0.899986 },
	{ 50,  -246.838821, 31.209392, 5.651482, 0.000002, 0.000038, 0.899986 },
	{ 51,  -235.198547, 24.066211, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 51,  -236.220687, 22.930068, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 51,  -237.930770, 24.247339, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 51,  -237.997558, 26.201370, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 51,  -235.736297, 22.889192, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 51,  -235.667098, 27.708171, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 51,  -236.931747, 26.364482, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 52,  -225.524047, 19.417539, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 52,  -226.546188, 18.281387, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 52,  -228.256286, 19.598667, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 52,  -228.323074, 21.552698, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 52,  -226.061813, 18.240528, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 52,  -225.992614, 23.059499, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 52,  -227.257263, 21.715818, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 53,  -215.616989, 14.572631, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.639114, 13.436479, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 53,  -218.349197, 14.753757, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 53,  -218.416000, 16.707790, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.154724, 13.395612, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.085525, 18.214586, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 53,  -217.350173, 16.870903, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.442749, 10.581915, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 54,  -206.464920, 9.445772, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 54,  -208.174987, 10.763043, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 54,  -208.241760, 12.717082, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.980514, 9.404906, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.911315, 14.223878, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 54,  -207.175964, 12.880195, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 55,  -195.535675, 5.737008, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.557846, 4.600865, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 55,  -198.267898, 5.918136, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 55,  -198.334701, 7.872166, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.073425, 4.559998, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.004211, 9.378969, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 55,  -197.268875, 8.035286, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 56,  -184.877578, 2.133882, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.899719, 0.997738, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 56,  -187.609786, 2.315008, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 56,  -187.676574, 4.269048, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.415313, 0.956871, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.346115, 5.775843, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 56,  -186.610763, 4.432160, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 57,  -174.970489, -2.711033, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.992630, -3.847178, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 57,  -177.702713, -2.529899, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 57,  -177.769515, -0.575859, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.508239, -3.888036, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.439041, 0.930935, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 57,  -176.703689, -0.412747, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.289550, -7.123870, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 58,  -165.311721, -8.260013, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 58,  -167.021774, -6.942739, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 58,  -167.088592, -4.988710, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.827301, -8.300880, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.758132, -3.481907, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 58,  -166.022766, -4.825590, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 59,  -154.382476, -11.968778, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 59,  -155.404647, -13.104921, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 59,  -157.114700, -11.787647, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 59,  -157.181503, -9.833618, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 59,  -154.920227, -13.145795, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 59,  -154.851028, -8.326819, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 59,  -156.115692, -9.670505, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 60,  -249.705276, 15.429800, 5.712926, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.727432, 14.293657, 7.042929, 0.000002, 0.000038, 0.899986 },
	{ 60,  -252.437484, 15.610935, 5.900618, 0.000002, 0.000038, 0.899986 },
	{ 60,  -252.504287, 17.564966, 6.156506, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.243041, 14.252790, 7.075955, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.173812, 19.071769, 7.306849, 0.000002, 0.000038, 0.899986 },
	{ 60,  -251.438476, 17.728078, 5.651482, 0.000002, 0.000038, 0.899986 },
	{ 61,  -239.798202, 10.584896, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.820343, 9.448752, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 61,  -242.530395, 10.766022, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 61,  -242.597198, 12.720054, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.335937, 9.407877, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.266738, 14.226861, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 61,  -241.531402, 12.883167, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.123703, 5.936223, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 62,  -231.145843, 4.800071, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 62,  -232.855911, 6.117350, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 62,  -232.922729, 8.071382, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.661437, 4.759212, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.592239, 9.578185, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 62,  -231.856903, 8.234502, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 63,  -220.216644, 1.091315, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 63,  -221.238769, -0.044836, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 63,  -222.948837, 1.272442, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 63,  -223.015640, 3.226475, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 63,  -220.754379, -0.085702, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 63,  -220.685180, 4.733269, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 63,  -221.949829, 3.389587, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.042404, -2.899399, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 64,  -211.064559, -4.035542, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 64,  -212.774627, -2.718271, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 64,  -212.841415, -0.764232, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.580154, -4.076409, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.510971, 0.742562, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 64,  -211.775619, -0.601119, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 65,  -200.135330, -7.744307, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 65,  -201.157501, -8.880450, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 65,  -202.867553, -7.563179, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 65,  -202.934341, -5.609148, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 65,  -200.673080, -8.921317, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 65,  -200.603866, -4.102346, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 65,  -201.868515, -5.446028, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 66,  -189.477203, -11.347433, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 66,  -190.499359, -12.483577, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 66,  -192.209442, -11.166307, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 66,  -192.276229, -9.212267, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 66,  -190.014968, -12.524444, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 66,  -189.945770, -7.705472, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 66,  -191.210418, -9.049155, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 67,  -179.570144, -16.192350, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.592269, -17.328495, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 67,  -182.302352, -16.011215, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 67,  -182.369155, -14.057174, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.107879, -17.369352, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.038681, -12.550380, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 67,  -181.303329, -13.894062, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 68,  -168.889205, -20.605186, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.911361, -21.741329, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 68,  -171.621429, -20.424055, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 68,  -171.688232, -18.470026, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.426956, -21.782196, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.357772, -16.963222, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 68,  -170.622406, -18.306907, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 69,  -158.982116, -25.450094, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 69,  -160.004272, -26.586236, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 69,  -161.714355, -25.268962, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 69,  -161.781143, -23.314933, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 69,  -159.519882, -26.627111, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 69,  -159.450683, -21.808134, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 69,  -160.715332, -23.151821, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 70,  -253.626159, 2.215319, 5.712926, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.648300, 1.079175, 7.042929, 0.000003, 0.000045, 0.899986 },
	{ 70,  -256.358367, 2.396453, 5.900618, 0.000003, 0.000045, 0.899986 },
	{ 70,  -256.425170, 4.350479, 6.156506, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.163909, 1.038301, 7.075955, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.094680, 5.857280, 7.306849, 0.000003, 0.000045, 0.899986 },
	{ 70,  -255.359344, 4.513590, 5.651482, 0.000003, 0.000045, 0.899986 },
	{ 71,  -243.719085, -2.629588, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.741210, -3.765732, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 71,  -246.451278, -2.448462, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 71,  -246.518066, -0.494431, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.256820, -3.806606, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.187606, 1.012372, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 71,  -245.452270, -0.331317, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.044570, -7.278261, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 72,  -235.066711, -8.414413, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 72,  -236.776794, -7.097134, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 72,  -236.843597, -5.143102, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.582321, -8.455272, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.513122, -3.636300, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 72,  -235.777786, -4.979982, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 73,  -224.137512, -12.123167, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 73,  -225.159637, -13.259321, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 73,  -226.869705, -11.942041, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 73,  -226.936523, -9.988010, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 73,  -224.675247, -13.300188, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 73,  -224.606048, -8.481215, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 73,  -225.870697, -9.824897, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 74,  -213.963287, -16.113883, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.985427, -17.250026, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 74,  -216.695510, -15.932757, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 74,  -216.762283, -13.978717, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.501037, -17.290893, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.431838, -12.471922, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 74,  -215.696487, -13.815605, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 75,  -204.056198, -20.958791, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 75,  -205.078369, -22.094934, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 75,  -206.788421, -20.777664, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 75,  -206.855224, -18.823633, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 75,  -204.593948, -22.135803, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 75,  -204.524734, -17.316831, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 75,  -205.789382, -18.660512, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.398086, -24.561918, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 76,  -194.420242, -25.698062, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 76,  -196.130310, -24.380790, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 76,  -196.197113, -22.426752, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.935836, -25.738929, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.866638, -20.919958, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 76,  -195.131286, -22.263639, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 77,  -183.491012, -29.406833, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 77,  -184.513137, -30.542982, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 77,  -186.223236, -29.225698, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 77,  -186.290023, -27.271659, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 77,  -184.028762, -30.583841, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 77,  -183.959564, -25.764865, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 77,  -185.224212, -27.108549, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 78,  -172.810073, -33.819675, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.832229, -34.955814, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 78,  -175.542297, -33.638545, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 78,  -175.609100, -31.684516, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.347824, -34.996681, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.278656, -30.177707, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 78,  -174.543289, -31.521394, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 79,  -162.902999, -38.664581, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.925155, -39.800720, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 79,  -165.635223, -38.483444, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 79,  -165.702011, -36.529418, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.440750, -39.841594, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.371551, -35.022621, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 79,  -164.636199, -36.366306, 5.651482, 0.000003, 0.000083, 0.899986 },
	{ 80,  -257.584808, -7.924411, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.606964, -9.060554, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 80,  -260.317016, -7.743274, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 80,  -260.383819, -5.789249, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.122558, -9.101425, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.053344, -4.282447, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 80,  -259.317993, -5.626140, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 81,  -247.677734, -12.769317, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.699874, -13.905464, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 81,  -250.409942, -12.588191, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 81,  -250.476730, -10.634159, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.215469, -13.946338, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.146286, -9.127357, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 81,  -249.410934, -10.471046, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.003234, -17.417991, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 82,  -239.025375, -18.554145, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 82,  -240.735458, -17.236865, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 82,  -240.802261, -15.282833, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.540985, -18.595005, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.471786, -13.776031, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 82,  -239.736434, -15.119712, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 83,  -228.096176, -22.262901, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 83,  -229.118286, -23.399053, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 83,  -230.828384, -22.081775, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 83,  -230.895172, -20.127742, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 83,  -228.633911, -23.439920, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 83,  -228.564712, -18.620948, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 83,  -229.829360, -19.964630, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 84,  -217.921936, -26.253618, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.944107, -27.389760, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 84,  -220.654159, -26.072490, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 84,  -220.720947, -24.118450, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.459686, -27.430625, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.390502, -22.611654, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 84,  -219.655151, -23.955337, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 85,  -208.014862, -31.098526, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 85,  -209.037033, -32.234668, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 85,  -210.747085, -30.917396, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 85,  -210.813873, -28.963365, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 85,  -208.552612, -32.275535, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 85,  -208.483398, -27.456563, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 85,  -209.748046, -28.800245, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.356750, -34.701652, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 86,  -198.378890, -35.837795, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 86,  -200.088973, -34.520523, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 86,  -200.155761, -32.566482, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.894500, -35.878662, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.825302, -31.059690, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 86,  -199.089950, -32.403373, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 87,  -187.449676, -39.546566, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 87,  -188.471817, -40.682712, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 87,  -190.181884, -39.365432, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 87,  -190.248703, -37.411392, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 87,  -187.987411, -40.723571, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 87,  -187.918212, -35.904598, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 87,  -189.182861, -37.248279, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 88,  -176.768737, -43.959403, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.790908, -45.095546, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 88,  -179.500961, -43.778274, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 88,  -179.567779, -41.824241, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.306488, -45.136413, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.237304, -40.317440, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 88,  -178.501937, -41.661125, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 89,  -166.861648, -48.804309, 5.712926, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.883819, -49.940456, 7.042929, 0.000001, 0.000076, 0.899986 },
	{ 89,  -169.593887, -48.623180, 5.900618, 0.000001, 0.000076, 0.899986 },
	{ 89,  -169.660690, -46.669151, 6.156506, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.399414, -49.981330, 7.075955, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.330215, -45.162353, 7.306849, 0.000001, 0.000076, 0.899986 },
	{ 89,  -168.594879, -46.506038, 5.651482, 0.000001, 0.000076, 0.899986 },
	{ 90,  -261.505676, -21.138898, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 90,  -262.527832, -22.275043, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 90,  -264.237915, -20.957763, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 90,  -264.304687, -19.003738, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 90,  -262.043426, -22.315917, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 90,  -261.974243, -17.496936, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 90,  -263.238891, -18.840625, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 91,  -251.598602, -25.983806, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.620742, -27.119949, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 91,  -254.330825, -25.802679, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 91,  -254.397613, -23.848648, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.136352, -27.160825, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.067153, -22.341846, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 91,  -253.331802, -23.685535, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 92,  -241.924102, -30.632478, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.946243, -31.768630, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 92,  -244.656341, -30.451351, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 92,  -244.723129, -28.497320, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.461868, -31.809490, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.392669, -26.990518, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 92,  -243.657318, -28.334199, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 93,  -232.017044, -35.477386, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 93,  -233.039169, -36.613540, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 93,  -234.749252, -35.296260, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 93,  -234.816055, -33.342227, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 93,  -232.554779, -36.654403, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 93,  -232.485580, -31.835432, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 93,  -233.750228, -33.179115, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 94,  -221.842803, -39.468101, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.864974, -40.604248, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 94,  -224.575042, -39.286975, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 94,  -224.641815, -37.332935, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.380569, -40.645111, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.311370, -35.826141, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 94,  -223.576019, -37.169822, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 95,  -211.935729, -44.313011, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.957901, -45.449153, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 95,  -214.667953, -44.131881, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 95,  -214.734756, -42.177852, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.473480, -45.490020, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.404266, -40.671051, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 95,  -213.668930, -42.014732, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.277633, -47.916137, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 96,  -202.299774, -49.052280, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 96,  -204.009841, -47.735008, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 96,  -204.076629, -45.780967, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.815368, -49.093147, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.746170, -44.274173, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 96,  -203.010818, -45.617858, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 97,  -191.370544, -52.761051, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 97,  -192.392684, -53.897197, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 97,  -194.102767, -52.579917, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 97,  -194.169570, -50.625877, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 97,  -191.908294, -53.938053, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 97,  -191.839096, -49.119083, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 97,  -193.103744, -50.462764, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 98,  -180.689605, -57.173889, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.711776, -58.310031, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 98,  -183.421829, -56.992755, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 98,  -183.488647, -55.038726, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.227355, -58.350898, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.158187, -53.531925, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 98,  -182.422821, -54.875610, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 99,  -170.782531, -62.018798, 5.712926, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.804702, -63.154937, 7.042929, 0.000002, 0.000083, 0.899986 },
	{ 99,  -173.514755, -61.837665, 5.900618, 0.000002, 0.000083, 0.899986 },
	{ 99,  -173.581558, -59.883636, 6.156506, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.320281, -63.195816, 7.075955, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.251083, -58.376838, 7.306849, 0.000002, 0.000083, 0.899986 },
	{ 99,  -172.515747, -59.720523, 5.651482, 0.000002, 0.000083, 0.899986 },
	{ 100,  -266.105346, -34.620216, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 100,  -267.127502, -35.756362, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 100,  -268.837524, -34.439083, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 100,  -268.904357, -32.485054, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 100,  -266.643096, -35.797225, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 100,  -266.573852, -30.978248, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 100,  -267.838531, -32.321937, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 101,  -256.198242, -39.465122, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 101,  -257.220397, -40.601264, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 101,  -258.930450, -39.283996, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 101,  -258.997253, -37.329963, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 101,  -256.735992, -40.642139, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 101,  -256.666809, -35.823158, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 101,  -257.931457, -37.166851, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 102,  -246.523757, -44.113796, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 102,  -247.545898, -45.249946, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 102,  -249.255966, -43.932666, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 102,  -249.322784, -41.978637, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 102,  -247.061492, -45.290805, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 102,  -246.992294, -40.471832, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 102,  -248.256958, -41.815513, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 103,  -236.616699, -48.958702, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.638824, -50.094856, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 103,  -239.348892, -48.777576, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 103,  -239.415695, -46.823543, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.154434, -50.135719, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.085235, -45.316749, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 103,  -238.349884, -46.660430, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.442459, -52.949417, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 104,  -227.464614, -54.085559, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 104,  -229.174682, -52.768291, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 104,  -229.241470, -50.814250, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.980209, -54.126426, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.911026, -49.307456, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 104,  -228.175674, -50.651138, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 105,  -216.535385, -57.794326, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.557556, -58.930469, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 105,  -219.267608, -57.613197, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 105,  -219.334396, -55.659168, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.073135, -58.971336, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.003921, -54.152366, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 105,  -218.268569, -55.496047, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 106,  -205.877258, -61.397453, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.899414, -62.533596, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 106,  -208.609497, -61.216323, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 106,  -208.676284, -59.262287, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.415023, -62.574462, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.345825, -57.755493, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 106,  -207.610473, -59.099174, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 107,  -195.970199, -66.242370, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.992324, -67.378509, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 107,  -198.702407, -66.061233, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 107,  -198.769210, -64.107192, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.507934, -67.419372, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.438735, -62.600399, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 107,  -197.703384, -63.944080, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.289260, -70.655204, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 108,  -186.311416, -71.791351, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 108,  -188.021484, -70.474075, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 108,  -188.088287, -68.520042, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.827011, -71.832214, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.757827, -67.013244, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 108,  -187.022460, -68.356925, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 109,  -175.382171, -75.500114, 5.712926, 0.000002, 0.000083, 0.899986 },
	{ 109,  -176.404327, -76.636253, 7.042929, 0.000002, 0.000083, 0.899986 },
	{ 109,  -178.114410, -75.318984, 5.900618, 0.000002, 0.000083, 0.899986 },
	{ 109,  -178.181198, -73.364952, 6.156506, 0.000002, 0.000083, 0.899986 },
	{ 109,  -175.919937, -76.677131, 7.075955, 0.000002, 0.000083, 0.899986 },
	{ 109,  -175.850738, -71.858154, 7.306849, 0.000002, 0.000083, 0.899986 },
	{ 109,  -177.115386, -73.201843, 5.651482, 0.000002, 0.000083, 0.899986 },
	{ 110,  -270.026214, -47.834697, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 110,  -271.048339, -48.970844, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 110,  -272.758422, -47.653564, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 110,  -272.825225, -45.699539, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 110,  -270.563964, -49.011718, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 110,  -270.494750, -44.192737, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 110,  -271.759399, -45.536426, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 111,  -260.119140, -52.679607, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 111,  -261.141265, -53.815750, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 111,  -262.851318, -52.498481, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 111,  -262.918121, -50.544448, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 111,  -260.656860, -53.856624, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 111,  -260.587646, -49.037647, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 111,  -261.852325, -50.381336, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.444625, -57.328281, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 112,  -251.466766, -58.464431, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 112,  -253.176849, -57.147151, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 112,  -253.243652, -55.193122, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.982376, -58.505290, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.913177, -53.686317, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 112,  -252.177841, -55.029998, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 113,  -240.537567, -62.173187, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.559692, -63.309341, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 113,  -243.269760, -61.992057, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 113,  -243.336578, -60.038028, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.075302, -63.350204, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.006103, -58.531234, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 113,  -242.270751, -59.874916, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.363342, -66.163902, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 114,  -231.385482, -67.300048, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 114,  -233.095565, -65.982772, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 114,  -233.162338, -64.028732, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.901092, -67.340911, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.831893, -62.521942, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 114,  -232.096542, -63.865623, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 115,  -220.456253, -71.008811, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 115,  -221.478424, -72.144950, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 115,  -223.188476, -70.827682, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 115,  -223.255279, -68.873649, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 115,  -220.994003, -72.185821, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 115,  -220.924789, -67.366851, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 115,  -222.189437, -68.710533, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 116,  -209.798141, -74.611938, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.820297, -75.748077, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 116,  -212.530364, -74.430809, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 116,  -212.597167, -72.476768, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.335891, -75.788948, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.266693, -70.969978, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 116,  -211.531341, -72.313659, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 117,  -199.891067, -79.456848, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.913192, -80.593002, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 117,  -202.623291, -79.275718, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 117,  -202.690078, -77.321678, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.428817, -80.633857, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.359619, -75.814880, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 117,  -201.624267, -77.158569, 5.651482, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.210128, -83.869689, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 118,  -190.232284, -85.005828, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 118,  -191.942352, -83.688568, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 118,  -192.009155, -81.734535, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.747879, -85.046699, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.678710, -80.227722, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 118,  -190.943344, -81.571411, 5.651482, 0.000003, 0.000083, 0.899986 }
};

new PlayerText:YandNsysTDPlayer[MAX_PLAYERS][2];
new Text:YandNsysTD[3];
new JobTempProcess[MAX_PLAYERS];

new PlayerText:work_td[MAX_PLAYERS][4];

new second_timerlog;

new patrul_id[MAX_PLAYERS],
	tick_wanted[MAX_PLAYERS char],
	time_wanted[MAX_PLAYERS];

new spaned[MAX_PLAYERS];

enum TPList
{
	tName[46],
	Float:tPos[3],
	tList
}
new TPLIST[MAX_TELEPORTS][TPList] =
{
 	{""P"[POLICE]"W" Полиция LS", 				{-583.4092,492.2425,10.9161},0},
	{""P"[POLICE]"W" Полиция SF", 				{2748.2109,-2444.3838,21.6890},0},
	{""P"[POLICE]"W" Полиция LV", 				{2583.0894,-2415.6411,21.9876},0},
	{""P"[POLICE]"W" ФБР",						{2412.4600,-1849.2751,21.8503},0},
	{""P"[ARMY]"W" Армия ЛВ", 					{0.0,0.0,0.0},0},
	{""P"[ARMY]"W" Армия СФ", 					{781.3303,-410.1868,4.0000},0},
	{""P"[MAYOR]"W" Мэрия ЛС",					{1908.5549,-2243.0327,11.0945},0},
	{""P"[MAYOR]"W" Белый дом",					{-318.7470,722.0333,12.0010},0},
	{""P"[AUTOSCHOOL]"W" Автошкола",			{2174.3533,-2197.7297,23.1784},0},
	{""P"[MEDICS]"W" Больница ЛС", 				{2113.7253,-2383.5383,21.5531},0},
	{""P"[MEDICS]"W" Больница СФ", 				{0.0,0.0,0.0},0},
	{""P"[MEDICS]"W" Больница ЛВ", 				{0.0,0.0,0.0},0},
	{""P"[СМИ]"W" Радиоцентр ЛС", 				{1976.8444,-2700.7385,10.9778},0},
	{""P"[СМИ]"W" Радиоцентр СФ", 				{0.0,0.0,0.0},0},
	{""P"[СМИ]"W" Радиоцентр ЛВ", 				{0.0,0.0,0.0},0},
	{""P"[MAFIA]"W" Итальянская мафия", 		{482.1486,742.1371,12.0000},0},
	{""P"[MAFIA]"W" Японская мафия",			{0.0,0.0,0.0},0},
	{""P"[MAFIA]"W" Русская мафия",				{379.6704,1550.9363,12.0004},0},
	{""P"[GANG]"W" Ballas Gang",				{-287.8625,1040.1838,12.0802},0},
	{""P"[GANG]"W" Vagos Gang",					{163.5456,1034.5892,13.7109},0},
	{""P"[GANG]"W" Grove Street Gang",			{-671.0748,870.4196,12.0000},0},
	{""P"[GANG]"W" Aztecas Gang",				{317.6296,1866.1141,11.9870},0},
	{""P"[GANG]"W" Rifa Gang",					{785.9185,2455.3586,12.0000},0},
	{"Оружейный завод",							{2894.0498,-1361.3005,1.3278},1},
	{"Нефтезавод",								{2738.1997,-2276.4375,17.9269},1},
	{"Яблочный сад",							{1654.6044,2226.4363,15.1801},1},
	{"Рыбалка",									{1987.4982,991.9432,15.4402},1},
	{"Лесопилка",								{1831.2653,1459.9362,9.9700},1},
	{"Развозчики продуктов",					{2017.2015,-2587.9453,10.8226},1},
	{"Развозчики топлива",						{2055.0291,-2586.6394,10.8149},1},
	{"ЖД Los Santos", 							{2494.9819,-1805.0677,22.2100},2},
	{"ЖД San Fierro", 							{1890.2421,2038.2003,17.2723},2},
	{"ЖД Las-Venturas", 						{197.2227,838.5482,12.3272},2},
	{"Банк ЛС",									{2378.1497,-1882.5656,21.8135},3},
	{"Банк СФ",									{1853.3074,2042.9536,15.8850},3},
	{"Банк ЛВ",									{116.1415,573.8644,12.1562},3},
	{"Транспортная компания 1",					{2139.9026,-1846.4564,18.8213},4},
	{"Транспортная компания 2",					{1821.5725,2252.1409,15.2729},4},
	{"Транспортная компания 3",					{781.8545,806.7900,12.0735},4},
	{"Загрузка Оружейный завод",				{2902.6968,-1288.8588,1.3119},4},
	{"Загрузка Нефтезавод",						{2738.4099,-2272.0891,17.9269},4},
	{"Разгрузка Порт СФ",						{1713.8218,3504.8047,2.6100},4},
	{"Разгрузка Порт ЛС",						{2943.0398,-1286.9751,1.3162},4},
	{"Разгрузка Оружейный завод",				{1771.4325,3453.3499,2.1509},4},
	{"Таксопарк ЛС",							{2305.1702,-1911.9916,21.8747},5},
	{"Таксопарк СФ",							{1803.4796,2505.9810,15.8725},5},
	{"Таксопарк ЛВ",							{446.5588,1045.8375,12.0000},5},
	{"Гетто", 									{0.0,0.0,0.0},6},
	{"Форт карсон", 							{0.0,0.0,0.0},6},
	{"ЛС-СФ Шоссе",								{0.0,0.0,0.0},6},
	{"Казино",									{-192.7492,630.5344,12.0010},6},
	{"Компьютерный клуб",						{2198.1533,-2275.1707,21.9430},6},
	{"Дуэли",									{2302.4607,-1712.4628,21.9609},6},
	{"Центр Развлечений",						{2454.2534,-1903.3557,21.9619},6},
	{"Черный рынок",							{-2295.6011,-134.7951,25.4431},6},
	{"Военкомат",								{1916.9022,2302.0308,15.5697},6},
	{""P"[POLICE]"W" Тюрьма",						{-1808.3132,-2878.7231,22.6285},0}
};
enum INTlist {
	iID,
	iName[70],
	Float:iEnterx,
	Float:iEntery,
	Float:iEnterz,
	Float:iEntera,
	Float:iExitx,
	Float:iExity,
	Float:iExitz
};
new edit_int[MAX_PLAYERS];
new bool:Fishing[MAX_PLAYERS],
	fish_zone[3],
	Float:fish_place[3][4] = {
		{2048.938720, 1050.329101, 2168.938720, 1162.329101},
		{2047.706054, 974.713073, 2135.706054, 1070.713134},
		{2040.054687, 880.763305, 2112.054687, 968.763305}
	},
	FishName[8][22] = {
		"Карп",
		"Карась",
		"Щука",
		"Красноперка",
		"Окунь",
		"Тунец",
		"Лещ",
		"Язь"
	},
	Float:fish_sklad,
	Text3D:fish_text;

new FirstFire[MAX_PLAYERS],
	SecondFire[MAX_PLAYERS];

enum chetinfo {
	cheatid1
}
new Float:ChetInfo[10][chetinfo],
	Cheat1,
	Text:CheatText[10],
	Text:CheatPanel[3];

new Text:reg_td[19],
	PlayerText:reg_tds[MAX_PLAYERS][3],
	Text:select_skins[21];

new actor[MAX_ACTORSS];
new Text3D:tActor[MAX_ACTORSS];
new actortime[MAX_ACTORSS];

enum ADVERT_DATA {
	adID,
	adSender[24],
	adCheker[24],
	adNews[3],
	adPhone,
	adText[100],
	adTime,
	adVIP,
	adMoney,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA],
	gAdvertCount,
	gAdvertTime;

new calls_news[3],
	calls_ether[3],
	Text3D:advert_turn_text[3], EdittingMoved[MAX_PLAYERS],
	EdittingMovedModel[MAX_PLAYERS], Text3D:moved_text[MAX_OBJECT_MOVED];

enum object_moved_data {
	moved_id,
	moved_vw,
	moved_modelid,
	Float:movedPosX,
	Float:movedPosY,
	Float:movedPosZ,
	Float:movedPosRotationX,
	Float:movedPosRotationY,
	Float:movedPosRotationZ,
	bool:status_moved
}
new moved_info[MAX_OBJECT_MOVED][object_moved_data] =
{
	{-1,-1,986,785.40, -427.70, 4.70, 0.000000, 0.000000, 0.000000,false},//блок пост Army SF 0
	{-1,-1,1495,779.27, -435.46, 3.00, 0.000000, 0.000000, 0.000000,false},//ворота к респе Army SF 1
	{-1,-1,1495,770.01, -435.42, 3.00, 0.000000, 0.000000, 0.000000,false},//ворота 2 к респе Army SF 2
	{-1,-1,2949,761.46, -434.31, 3.00, 0.000000, 0.000000, -90.100000,false},//блок пост 2 Army SF 3
	
	{-1,DELLWORLD,989,120.33, 2070.34, 17.93, 0.000000, 0.000000, 176.820000,false},//блок пост Army LV 4 - DELETE

	{-1,-1,15005,2751.47, -1023.65, -23.26, 360.000000, 270.000000, -180.000000,false},//блок пост ЛС 5
	{-1,-1,15005,2743.26, -1023.65, -23.26, 0.000000, 270.000000, 0.000000,false},//блок пост ЛС 6
	{-1,-1,15005,2747.09, -1381.82, -23.26, -10.000000, 270.000000, 0.000000,false},//блок пост ЛС 7
	
	{-1,DELLWORLD,15005,2747.09, -1381.82, -23.26, 0.000000, 10.000000, 0.000000,false},//блок пост ЛС 8 - DELETE

	{-1,-1,15005,2800.28, -410.25,  -25.30, 360.000000, -91.200000, 148.400000,false},//блок пост СФ 9
	{-1,-1,15005,2794.79, -406.37,  -25.30, 0.000000, -91.500000, -32.400000,false},//блок пост СФ 10
	{-1,-1,15005,2867.68, -309.12,  -25.30, -3.000000, -90.400000, -31.800000,false},//блок пост СФ 11
	{-1,-1,15005,2858.88, -303.67,  -25.30, -3.000000, -90.400000, -31.800000,false},//блок пост СФ 12

	{-1,-1,15005,1784.35, 2971.58,  -11.99, 0.000000, 270.000000, 0.000000,false},//блок пост ЛВ 13
	{-1,-1,15005,1764.43, 3450.21,  -2.61, 0.000000, -89.700000, -180.000000,false},//блок пост ЛВ 14
	{-1,-1,15005,1784.43, 3450.21,  -2.61, 0.000000, 270.000000, 0.000000,false},//блок пост ЛВ 15
	{-1,-1,15005,1763.35, 2971.58,  -11.99, 0.000000, -90.000000, -180.000000,false},//блок пост ЛВ 16

	{-1,-1,2990,-586.75, 477.00,  14.49,  0.000000, 0.000000, 180.000000,false},//[LSPD] Ворота в гараж 17
	{-1,-1,15005,-588.04, 463.25,  -11.49,   0.000000, 90.000000, 90.000000,false},//[LSPD] шлагбаум в гараж 18
	{-1,-1,1495,-589.42, 445.60,  11.72,   0.000000, 0.000000, 0.000000,false},//[LSPD] дверь в гараж 19
    
	{-1,-1,15005,1649.60, 2233.84, -14.71, 0.000000, -90.000000, 90.000000,false},//шлагбаум ябл.сада 20

	{-1,DELLWORLD,1500,764.73, 6.47, 1150.96, 0.000000, 0.000000, 0.000000,false},//[LVa] штаб дверь собеседований 21 - DELETE

	{-1,-1,15005,2311.78, -1901.12, -21.84, 0.000000, 90.000000, 90.000000,false},//[TAXI] шлагбаум LS 22
	{-1,-1,15005,1787.41, 2473.61, -16.30, -180.000000, -90.000000, 125.300000,false},//[TAXI] шлагбаум SF 1 23
	{-1,-1,15005,1766.32, 2505.55, -16.34, 0.200000, 90.000000, 122.900000,false},//[TAXI] шлагбаум SF 2 24
	{-1,-1,15005,438.74, 1075.16, -12.00, 0.000000, -90.600000, -95.400000,false},//[TAXI] шлагбаум LV 25

	{-1,DELLWORLD,19859,500.87, 2041.30, 1015.15, 0.000000, 0.000000, -90.000000,false},//[ARMY] военкомат 26 - DELETE

	{-1,-1,976,-735.26, 2034.44, 44.95, 0.000000, 0.000000, -90.000000,false}, //[особняк] 27
	
	{-1,-1,10000,1649.60, 2219.10, -24.80, 0.000000, -90.600000, -90.000000,false}, //шлагбаум ябл.сада 2 28
	
	{-1,-1,10000,2312.40, -1945.40, -21.84, 0.000000, 90.000000, -90.000000,false}, //[TAXI] шлагбаум LS 2 29
	
	{-1,-1,10000,0.0, -0.23, -18.96, 0.000000, -0.200000, 180.000000,false}, //[ТК] ворота СТО 1 30
	{-1,-1,10000,0.0, -0.34, -19.08, 0.000000, 0.000000, -180.000000,false}, //[ТК] ворота СТО 2 31
	
	{-1,DELLWORLD,1569,1796.29, 816.50, 11.20, 0.000000, 0.000000, 0.000000,false}, //[блок пост] ЛВ дверь 32 - DELETE

	{-1,-1,2949,773.70, -403.88, 3.00, 0.000000, 0.000000, 90.000000,false}, //[SFa] дверь в армию 33

	{-1,-1,988,784.86, 805.58, 12.16, 0.000000, 0.000000, -110.900000,false}, //[ТК] ворота 34

	{-1,-1,10000,0.0, -0.23, -18.96, 0.000000, -0.200000, 180.000000,false}, //[FBI] ворота с улицы 35

	{-1,-1,10000,2120.25, -1835.67, -18.81, 0.000000, -90.000000, -90.000000,false}, //[ТК] у СТО 36
	{-1,-1,10000,1884.62, 2251.93, -25.93, 0.000000, -90.000000, -90.000000,false}, //[ТК] у фермы 37

	{-1,DELLWORLD,10000,2238.18, 2450.43, -10.64,   0.00000, 90.00000, 90.00000,false}, //[LVPD] шлагбаум 38 - DELETE
	{-1,DELLWORLD,10000,-1572.20, 658.79, -56.79,   0.00000, 90.00000, 90.00000,false}, //[SFPD] шлагбаум 39 - DELETE
	{-1,DELLWORLD,10000,-1701.42, 687.80, -24.53,   0.00000, 90.00000, 269.86310,false}, //[SFPD] шлагбаум 40 - DELETE

	{-1,DELLWORLD,1495,2732.89, -2461.23, 23.56, 0.000022, 0.000000, 90.000000,false},//[ПД] дверь блок поста к помещению копов 41 - DELETE

	{-1,-1,10000,0.0, -0.23, -18.96, 0.000000, -0.200000, 180.000000,false},//[Perfomanse] ворота №1 | 42
	{-1,-1,10000,0.0, -0.23, -18.96, 0.000000, -0.200000, 180.000000,false},//[Perfomanse] ворота №2 | 43

	{-1,-1,10000,2579.84, -2438.99, -22.14, 0.500000, 90.100000, 90.000000,false},//[LVPD] шлагбаум автопарка | 44
	
	{-1,40,1495,786.51, 148.73, 1010.98, -0.700000, 0.300000, 90.000000,false},//[LSPD] дверь к помещению копов 1 45
	{-1,40,1495,761.66, 165.22, 1010.95, 0.000000, 0.000000, -0.500000,false},//[LSPD] дверь к помещению копов 2 46

	{-1,41,1495,792.52, 149.72, 1500.95, 0.000000, 0.000000, 0.000000,false},//[SFPD] дверь к помещению копов 1 47
	{-1,41,1495,794.93, 157.00, 1500.97, 0.000000, 0.000000, 90.000000,false},//[SFPD] дверь к помещению копов 2 48
	
    {-1,-1,10000,2740.02, -2466.27, -21.89, 0.000000, 90.000000, -90.000000,false},//[SFPD] шлагбаум автопарка | 49
    
	{-1,-1,1495,2732.15, -2461.34, 22.43, 0.000000, 0.000000, -0.000000,false},//[SFPD] дверь к блок пост с автопарка 50

	{-1,42,1495,786.51, 148.73, 1010.98, -0.700000, 0.300000, 90.000000,false},//[LVPD] дверь к помещению копов 1 51
    {-1,42,1495,761.66, 165.22, 1010.95, 0.000000, 0.000000, -0.500000,false},//[LVPD] дверь к помещению копов 2 52

	{-1,DELLWORLD,1495,1369.07, 1064.57, 1625.48, 0.000000, 0.000000, 0.000000,false}//[ПД] дверь к камерам 53 - DELETE
},
Float:moved_pos_object[MAX_OBJECT_MOVED][6]=
{
	{785.40, -427.70,  -7.00, 0.00, 0.00, 0.00},//блок пост Army SF 0
	{779.27, -435.46,  4.00, 0.00, 0.00, 120.00},//ворота к респе Army SF 1
	{770.01, -435.42,  4.00, 0.00, 0.00, 120.00},//ворота 2 к респе Army SF 2
	{761.46, -434.31,  4.00, 0.00, 0.00, 170.10},//блок пост 2 Army SF 3
	
	{122.17, 2075.64, 18.05, -3.90, 0.0, 176.81},//блок пост Army LV 4 - DELETE

	{2751.47, -1023.65, 23.26, 0.00, -25.00, -180.00},//блок пост ЛС 5
	{2743.26, -1023.65, 23.26, 0.00, -25.00, 0.00},//блок пост ЛС 6
	{2747.09, -1381.82, 23.26, 0.00, -10.00, 0.00},//блок пост ЛС 7
	{2747.09, -1381.82, 23.26, 0.00, 10.00, 0.0},//блок пост ЛС 8

	{2800.28, -410.25,  25.30, 360.00, 0.20, 148.40},//блок пост СФ 9
	{2794.79, -406.37,  25.30, 0.00, -1.40, -32.40},//блок пост СФ 10
	{2867.67, -309.11,  25.30, -0.40, 0.20, -29.60},//блок пост СФ 11
	{2858.87, -303.67,  25.30, -3.00, -0.40, -33.70},//блок пост СФ 12

	{1784.34, 2971.58,  11.94, 0.00, -1.50, 0.00},//блок пост ЛВ 13
	{1764.43, 3450.21,  2.61, 0.00, -1.50, -180.00},//блок пост ЛВ 14
	{1784.43, 3450.21,  2.61, 0.00, 0.00, 0.00},//блок пост ЛВ 15
	{1763.34, 2971.58,  11.94, 0.00, -0.60, -180.00},//блок пост ЛВ 16

	{-586.75, 477.00, 6.62, 0.00, 0.00, 180.00},//[LSPD] Ворота в гараж 17
	{-588.04, 463.25, 11.49, 0.00, 4.30, 90.00},//[LSPD] шлагбаум в гараж 18
	{-589.42, 445.60,  11.72, 0.00, 0.00, -90.00},//[LSPD] дверь в гараж 19
	
	{1649.60, 2233.84, 14.71, 0.00, -2.20, 90.00},//шлагбаум ябл.сада 20

	{764.73, 6.47, 1150.96, 0.00, 0.00, -80.00},//[LVa] штаб дверь собеседований 21 - DELETE

	{2311.78, -1901.12, 21.84, 0.00, 0.10, 90.00},//[TAXI] шлагбаум LS 22
	{1787.41, 2473.61, 16.30, -180.00, 180.00, 125.30},//[TAXI] шлагбаум SF 1 23
	{1766.32, 2505.55, 16.34, 0.20, 0.50, 122.90},//[TAXI] шлагбаум SF 2 24
	{438.74, 1075.16, 12.00, 0.00, -1.20, -95.40},//[TAXI] шлагбаум LV 25
	
	{500.86, 2041.30, 1015.14, 0.00, 0.00, -143.50},//[ARMY] военкомат 26 - DELETE
	
	{-735.26, 2026.21, 44.95, 0.00, 0.00, -90.00}, //[особняк] 27
	
	{1649.60, 2219.10, 14.80, 0.00, -0.90, -90.00}, //шлагбаум ябл.сада 2 28
	
	{2312.40, -1945.40, 21.84, 0.00, -0.20, -90.00}, //[TAXI] шлагбаум LS 2 29

	{2145.87, -1852.23, 18.96, 0.00, -0.20, 180.00}, //[ТК] ворота СТО 1 30
	{2145.90, -1847.34, 22.46, 0.00, 0.00, -180.00}, //[ТК] ворота СТО 2 31
	
	{1796.28, 816.50, 11.20, 0.00, 0.00, 90.00}, //[блок пост] ЛВ дверь 32 - DELETE

	{773.70, -403.88, 3.00, 0.00, 0.00, 4.20}, //[SFa] дверь в армию 33

	{784.86, 805.58, 6.92, 0.00, 0.00, -110.90}, //[ТК] ворота 34

	{2445.69, -1795.03, 26.02,0.00, 0.00, 0.00}, //[FBI] ворота с улицы 35

	{2120.25, -1835.67, 18.81, 0.00, -0.10, -90.00}, //[ТК] у СТО 36
	{1884.62, 2251.93, 15.93, 0.00, -0.30, -90.00}, //[ТК] у фермы 37

	{ 2238.17, 2450.42, 10.63,   0.00, 0.00, 90.00}, //[LVPD] шлагбаум 38 - DELETE
	{-1572.19, 658.78, 6.78,   0.00, 0.00, 90.00}, //[SFPD] шлагбаум 39 - DELETE
	{-1701.42, 687.80, 24.53,   0.00, 0.00, 269.86}, //[SFPD] шлагбаум 40 - DELETE
	
	{117.70, 2059.83, 18.00,  2.00, 0.00, 200.24},//[ПД] дверь блок поста к помещению копов 41 - DELETE

	{2165.43, -1852.38, 22.48, -0.30, 0.00, -0.20},//[Perfomanse] ворота №1 | 42
	{2165.42, -1847.27, 22.49, 0.00, 0.00, 0.00},//[Perfomanse] ворота №2 | 43
	
	{2579.84, -2438.99, 22.14, 0.50, 1.00, 90.00},//[LVPD] шлагбаум автопарка | 44

	{786.51, 148.73, 1010.98, -0.70, 0.30, 0.60},//[LSPD] дверь к помещению копов 1 45
	{761.65, 165.22, 1010.95, 0.00, 0.00, -90.00},//[LSPD] дверь к помещению копов 2 46
	
	{792.52, 149.72, 1500.95, 0.00, 0.00, -90.00},//[SFPD] дверь к помещению копов 1 47
	{794.93, 157.00, 1500.97, 0.00, 0.00, 180.00},//[SFPD] дверь к помещению копов 2 48
	
	{2740.02, -2466.27, 21.89, 0.00, -0.80, -90.00},//[SFPD] шлагбаум автопарка | 49
	{2732.15, -2461.34, 22.43, 0.00, 0.00, -90.00},//[SFPD] дверь к блок пост с автопарка 50
    
	{786.51, 148.73, 1010.98, -0.70, 0.30, 0.60},//[LVPD] дверь к помещению копов 1 51
	{761.65, 165.22, 1010.95, 0.00, 0.00, -90.00},//[LVPD] дверь к помещению копов 2 52

	{1369.07, 1064.58, 1625.48, 0.00, 0.00, -80.00}//[ПД] дверь к камерам 53 - DELETE
};

/*
enum alcatraz_object {
	alc_id,
	Float:alc_posX,
	Float:alc_posY,
	Float:alc_posZ,
	Float:alc_posRX,
	Float:alc_posRY,
	Float:alc_posRZ
}
new alcatraz[18][alcatraz_object] = {
	{-1,757.297851, 586.495361, 1063.594970, 0.000000, 0.000000, 180.000000},
	{-1,755.526367, 586.515380, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,762.678710, 586.495361, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,773.070312, 586.495361, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,774.821289, 586.495361, 1063.594970, 0.000000, 0.000000, 180.000000},
	{-1,778.353271, 586.495361, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,757.297851, 586.495361, 1067.225708, 0.000000, -0.000014, 180.000000},
	{-1,755.526367, 586.515380, 1067.225708, 0.000000, 0.000014, 0.000000},
	{-1,762.678710, 586.495361, 1067.225708, 0.000000, 0.000014, 0.000000},
	{-1,773.070312, 586.495361, 1067.225708, 0.000000, 0.000014, 0.000000},
	{-1,774.821289, 586.495361, 1067.225708, 0.000000, -0.000014, 180.000000},
	{-1,778.363281, 586.495361, 1067.225708, 0.000000, -0.000014, 180.000000},
	{-1,757.297851, 586.495361, 1070.856689, 0.000000, -0.000029, 180.000000},
	{-1,755.526367, 586.515380, 1070.856689, 0.000000, 0.000029, 0.000000},
	{-1,762.678710, 586.495361, 1070.856689, 0.000000, 0.000029, 0.000000},
	{-1,773.070312, 586.495361, 1070.856689, 0.000000, 0.000029, 0.000000},
	{-1,774.821289, 586.495361, 1070.856689, 0.000000, -0.000029, 180.000000},
	{-1,778.363281, 586.495361, 1070.856689, 0.000000, -0.000029, 180.000000}
};
*/

new speed_timer[MAX_PLAYERS]={-1,...},
	PlayerText:speedometr[MAX_PLAYERS][16];

new addchet[MAX_PLAYERS];

new FirstBL[MAX_PLAYERS],
	UnbanName[MAX_PLAYERS][24];

new FirstReferal[MAX_PLAYERS];
new FirstFamily[MAX_PLAYERS];

new prod_id[MAX_PLAYERS];

new idaofcar[MAX_PLAYERS],
	nedded[MAX_PLAYERS];

new shotTime[MAX_PLAYERS],
    pPressed[MAX_PLAYERS],
	shot[MAX_PLAYERS];

new Text3D:gMenu[5],
	Text3D:mMenu[3],
	Text3D:gHealth[5];

new engine,
	lights,
	alarm,
	doors,
	bonnet,
	boot,
	objective;

new gPlaneCount;

new Float:PickupX[MAX_PLAYERS],
	Float:PickupY[MAX_PLAYERS],
	oldpickup[MAX_PLAYERS],
	timepickup[MAX_PLAYERS];

enum grzone {
	grid,
	Float:grX,
	Float:grY,
	Float:grZ,
	Float:grD,
	grName[50],
	grVirt
};
new GREENZONE[100][grzone], 
	TOTALZONE = 0;

new CountFloodForPlayer[MAX_PLAYERS];

new advertise_price,
	action_server[3];

new car_spawn[MAX_PLAYERS];

new house_car[MAX_PLAYERS][2],
	car_autoschool[MAX_PLAYERS],
	air_autoschool[MAX_PLAYERS],
	boat_autoschool[MAX_PLAYERS];

new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];

new Text:LOGO[4];

new HealOffer[MAX_PLAYERS],
	HealPrice[MAX_PLAYERS];

new dostup[MAX_PLAYERS];

enum enter_info {
	tpName[50],
Float:tpEnterPos_X,
Float:tpEnterPos_Y,
Float:tpEnterPos_Z,
	tpEnterInt,
	tpEnterWorld,
Float:tpExitPos_X,
Float:tpExitPos_Y,
Float:tpExitPos_Z,
Float:tpExitPos_A,
	tpExitInt,
	tpExitWorld
}

//34 35 36 37 66 67 88 89 92 93 94 95 98 99 128 129 - 16 17 78 79 80 81 118 119

new gTeleportsToD[TP_COUNT][enter_info] =
{ //saneka
	/*0*/{"Оружейный завод",2908.0093,-1361.0217,1.9857,0,0,316.8731,-204.5686,1006.5694,89.8283,0,0},//оружейный завод
	/*1*/{"Выход на улицу",318.1118,-204.5303,1006.5694,0,0,2905.7271,-1361.3341,1.3437,96.1380,0,0},//оружейный завод
	
	/*2*/{"Больница г.ЛС",2114.56, -2392.85, 23.088,0,0,410.6630,1504.7671,1113.4723,177.2403,93,20},//МЧС ЛС - 2102.8906,1489.4111,1003.5300,90.9979
	/*3*/{"Выход на улицу",410.6976,1506.5028,1113.4723,93,20,2114.6201,-2390.8040,23.0883,359.5971,0,0},//МЧС ЛС
	
	/*4*/{"Больница г.СФ",-2655.1638,639.8657,14.4545,0,DELLWORLD,2187.5295,586.6940,1080.4542,177.1751,93,21},//МЧС СФ - DELETE 0 ВИРТ МИР
	/*5*/{"Выход на улицу",2187.6035,588.1922,1080.4542,93,DELLWORLD,-2655.1638,638.3657,14.4531,180.0000,0,0},//МЧС СФ - DELETE 21 ВИРТ МИР
	
	/*6*/{"Больница г.ЛВ",1607.3760,1815.9340,10.8203,0,DELLWORLD,2187.5295,586.6940,1080.4542,177.1751,93,22},//МЧС ЛВ - DELETE 0 ВИРТ МИР
	/*7*/{"Выход на улицу",2187.6035,588.1922,1080.4542,93,DELLWORLD,1607.3848,1817.4340,10.8203,359.6633,0,0},//МЧС ЛВ - DELETE 21 ВИРТ МИР

    /*8*/{"Лифт",2396.2290,-1834.2666,22.9522,0,0,2398.1345,-1834.2012,19.0850,273.9191,0,0},//ФБР лифт и крыша
	/*9*/{"Выход в офис",2396.2300,-1834.2566,19.0850,0,0,2397.6062,-1834.2168,22.9522,273.0516,0,0},//ФБР гараж и офис 3

	/*10*/{"Вход на крышу",412.4397,1506.4974,1113.4723,93,20,2123.5361,-2400.4619,32.7785,94.6181,0,0},//МЧС ЛС крыша
	/*11*/{"Спуск с крыши",2126.5781,-2399.8650,32.7785,0,0,412.4747,1504.4358,1113.4723,181.0003,93,20},//МЧС ЛС крыша
	
	/*12*/{"Вход на крышу",1556.2736,489.0876,1070.4316,92,DELLWORLD,-2714.2036,629.6984,34.4028,180.1581,0,0},//МЧС СФ крыша - DELETE 21 ВИРТ МИР
	/*13*/{"Спуск с крыши",-2714.2078,631.1984,34.4028,0,DELLWORLD,1556.3342,490.5883,1070.4316,359.5603,92,21},//МЧС СФ крыша - DELETE 0 ВИРТ МИР
	
	/*14*/{"Вход на крышу",1556.2736,489.0876,1070.4316,92,DELLWORLD,1608.4158,1787.6586,30.4688,1.2818,0,0},//МЧС ЛВ крыша - DELETE 22 ВИРТ МИР
	/*15*/{"Спуск с крыши",1608.4493,1786.1589,30.4688,0,DELLWORLD,1556.3342,490.5883,1070.4316,359.5603,92,22},//МЧС ЛВ крыша - DELETE 0 ВИРТ МИР
	
	/*16*/{"Склад армии",273.9112,1817.0668,17.6709,0,DELLWORLD,316.4524,-168.3621,999.5938,2.1932,6,30},//ЛВА склад - DELETE 0 ВИРТ МИР
	/*17*/{"Выход на улицу",316.3708,-169.8620,999.6010,6,DELLWORLD,273.6051,1818.5159,17.6709,4.8765,0,0},//ЛВА склад - DELETE 30 ВИРТ МИР

	/*18*/{"Радиоцентр г.ЛС",1976.8517,-2706.9468,10.8439,0,0,1253.1238,1481.4171,1114.8402,182.7853,74,10},//LS News
	/*19*/{"Выход на улицу",1252.9397,1483.7493,1114.8402,74,10,1976.9827,-2703.4329,10.9229,359.6984,0,0},//LS News
    
	/*20*/{"Радиоцентр г.СФ",-2521.1753,-624.5951,132.7827,0,DELLWORLD,715.5413,-1522.5265,1415.4099,269.5203,74,11},//SF News - DELETE 0 ВИРТ МИР
	/*21*/{"Выход на улицу",714.0413,-1522.5139,1415.4099,74,DELLWORLD,-2521.1445,-623.0954,132.7646,358.8209,0,0},//SF News - DELETE 11 ВИРТ МИР
	
	/*22*/{"Радиоцентр г.ЛВ",2645.2136,1185.2959,10.8203,0,DELLWORLD,715.5413,-1522.5265,1415.4099,269.5203,74,12},//LV News - DELETE 0 ВИРТ МИР
	/*23*/{"Выход на улицу",714.0413,-1522.5139,1415.4099,74,DELLWORLD,2645.1785,1183.7963,10.8203,178.6527,0,0},//LV News - DELETE 12 ВИРТ МИР
	
	/*24*/{"Вход в офис",1965.1943,-2707.0479,10.8416,0,0,1253.7025,1458.3466,1114.8402,0.7135,74,10},//LS News крыша
	/*25*/{"Выход на крышу",1253.6925,1456.2933,1114.8402,74,10,1968.0143,-2704.0117,10.9099,317.0847,0,0},//LS News крыша

	/*26*/{"Полицейский участок г.ЛС",-586.5479,484.0522,11.2824,0,0,706.8856,925.7914,1112.9851,180.6979,99,40},//LSPD 1
	/*27*/{"Выход на улицу",707.1379,927.7794,1112.9851,99,40,-586.8282,478.8704,11.4341,178.6285,0,0},//LSPD 1
	
	/*28*/{"Полицейский участок г.ЛС",-560.6673,481.5855,11.6488,0,0,708.9561,925.0043,1112.9851,181.6379,99,40},//LSPD 2
	/*29*/{"Выход на парковку",708.8046,927.7754,1112.9851,99,40,-560.1832,474.6740,11.9337,183.4734,0,0},//LSPD 2

	/*30*/{"Полицейский участок г.СФ",2740.9348,-2443.9119,21.8921,0,0,799.3511,143.0242,1502.0000,358.3831,99,41},//SFPD 1
	/*31*/{"Выход на улицу",799.3479,141.4272,1502.0000,99,41,2743.1572,-2444.1406,21.8905,267.2022,0,0},//SFPD 1
	/*32*/{"Полицейский участок г.СФ",2732.8904,-2455.8879,23.5688,0,0,780.3950,160.9019,1502.0000,181.0113,99,41},//SFPD 2
	/*33*/{"Выход на парковку",780.4797,162.0618,1502.0000,99,41,2732.6208,-2457.1167,23.5688,179.9310,0,0},//SFPD 2
	
	/*34*/{"Полицейский участок г.ЛВ",2576.0024,-2415.9509,21.9888,0,0,1323.9753,900.6077,1115.4399,182.7511,99,42},//LVPD 1
	/*35*/{"Выход на улицу",1323.9091,902.5562,1115.4399,99,42,2578.0308,-2415.9548,21.9888,268.7689,0,0},//LVPD 1

	/*36*/{"Выход на парковку",1333.8079,901.3029,1115.4399,99,42,2573.9089,-2430.7390,21.9997,178.5281,0,0},//LVPD 2
	/*37*/{"Полицейский участок г.ЛВ",2574.2000,-2427.9692,21.9956,0,0,1331.4401,901.2968,1115.4399,88.4369,99,42},//LVPD 2

	/*38*/{"FBI",2405.1001,-1827.7070,22.9522,0,0,-96.8880,1785.9362,2022.6899,1.5378,75,43},//FBI
	/*39*/{"Выход на улицу",-96.9527,1783.8071,2022.6899,75,43,2405.0820,-1828.8707,22.9522,181.4846,0,0},//FBI

	/*40*/{"Лифт",2396.32,-1830.13,22.952,0,0,2437.5911,-1802.5978,40.7679,7.2933,0,0},//FBI гараж/крыша 1
	/*41*/{"Лифт",2437.8447,-1804.5188,40.7679,0,0,2398.0266,-1830.2239,22.9522,257.2398,0,0},//FBI лифт 2

	/*42*/{"Мэрия",1906.7616,-2230.0454,12.7274,0,0,1158.9523,2575.0134,1112.4800,179.6144,77,44},//МЭРИЯ
	/*43*/{"Выход на улицу",1158.8209,2576.4773,1112.4800,77,44,1906.4508,-2232.0159,12.7274,175.4941,0,0},//МЭРИЯ
	
	/*44*/{"Автошкола",2172.1421,-2197.9473,23.1784,0,0,2260.1091,2719.6392,1122.4604,175.9360,76,45},//АШ
	/*45*/{"Выход на улицу",2260.4058,2721.4360,1122.4604,76,45,2174.3533,-2197.7297,23.1784,270.7554,0,0},//АШ
	
	/*46*/{"Банк г.ЛС",2379.09,-1891.54,22.8719,0,0,-229.9613,739.9236,1112.9850,179.9195,78,46},//БАНК ЛС - 1449.3877,2876.4238,1502.0000,356.5607
	/*47*/{"Выход на улицу",-229.7659,742.1716,1112.9850,78,46,2379.1902,-1889.3997,22.8719,0.9709,0,0},//БАНК ЛС
	
	/*48*/{"Банк г.СФ",1853.5901,2035.0151,16.9742,0,0,-229.9613,739.9236,1112.9850,179.9195,79,47},//БАНК СФ
	/*49*/{"Выход на улицу",-229.7659,742.1716,1112.9850,79,47,1853.8319,2037.6410,16.9742,0.0252,0,0},//БАНК СФ
	
	/*50*/{"Банк г.ЛВ",109.9449,575.0067,13.2714,0,0,-229.9613,739.9236,1112.9850,179.9195,80,48},//БАНК ЛВ
	/*51*/{"Выход на улицу",-229.7659,742.1716,1112.9850,80,48,112.6601,574.7227,13.2632,265.0843,0,0},//БАНК ЛВ
	
	/*52*/{"Итальянская мафия",480.5479,737.5463,12.4797,0,0,2557.4688,-1852.5935,2522.8401,354.0827,73,49},//LCN
	/*53*/{"Выход на улицу",2557.2581,-1854.0968,2522.8401,73,49,481.2390,739.5133,12.0000,335.2825,0,0},//LCN
	
	/*54*/{"Японская мафия",2634.7048,1824.2144,11.0161,0,DELLWORLD,-1814.9398,-646.3951,1001.0999,269.3521,73,50},//Yakuza - DELETE 0 ВИРТ МИР
	/*55*/{"Выход на улицу",-1816.4397,-646.3781,1001.0999,73,DELLWORLD,2633.2048,1824.2188,11.0234,89.8335,0,0},//Yakuza - DELETE 50 ВИРТ МИР
	
	/*56*/{"Русская мафия",376.2423,1550.6342,12.0004,0,0,2557.1248,-1852.7596,2522.8401,0.8666,73,51},//RM
	/*57*/{"Выход на улицу",2557.3645,-1854.0952,2522.8401,73,51,379.4651,1550.1877,12.0004,261.8289,0,0},//RM
	
	/*58*/{"Ballas",-287.9750,1037.1525,12.1151,0,0,-1140.4866,2555.1946,1141.5186,179.0910,95,52},//Ballas
	/*59*/{"Выход на улицу",-1140.5067,2556.8794,1141.5186,95,52,-288.0688,1040.4000,12.0780,1.5274,0,0},//Ballas
	
	/*60*/{"Vagos",165.1459,1031.6077,13.7109,0,0,-1519.7736,-639.1133,1001.0062,269.8550,98,53},//Vagos
	/*61*/{"Выход на улицу",-1520.9098,-639.1717,1001.0062,98,53,168.2616,1032.1407,13.7109,279.4099,0,0},//Vagos
	
	/*62*/{"Grove",-287.9750,1037.1525,12.1151,0,0,-1140.4866,2555.1946,1141.5186,179.0910,94,54},//Grove
	/*63*/{"Выход на улицу",-1140.5067,2556.8794,1141.5186,94,54,-288.0688,1040.4000,12.0780,1.5274,0,0},//Grove
	
	/*64*/{"Aztecas",315.4393,1870.7950,11.9939,0,0,-2615.7310,2907.7068,2738.6201,84.0798,96,55},//Aztec
	/*65*/{"Выход на улицу",-2614.3401,2907.4810,2738.6201,96,55,321.1237,1869.9541,11.9926,263.6215,0,0},//Aztec

	/*66*/{"Rifa",790.4828,2451.3103,12.0000,0,0,-1518.6392,-639.2943,1001.0062,267.7559,97,56},//Rifa
	/*61*/{"Выход на улицу",-1520.9067,-639.1522,1001.0062,97,56,788.8218,2454.4490,12.0000,31.2104,0,0},//Rifa

	/*68*/{"Фабрика",-2346.9863,311.2379,1002.0000,85,203,316.8731,-204.5686,1006.5694,89.8283,88,200},//алько на фабрику
	/*69*/{"Выход в тюрьму",318.1118,-204.5303,1006.5694,88,200,-2344.8745,311.1266,1002.0000,266.0278,85,203},//алько на фабрику
	
	/*70*/{"Столовая",-2314.0820,335.9625,1002.0000,85,203,2257.6438,-1720.5598,-19.4341,91.2430,87,201},//алько в столовку
	/*71*/{"Выход в тюрьму",2259.4126,-1720.6680,-19.4341,87,201,-2315.8718,336.3065,1002.0000,89.8050,85,203},//алько в столовку
	
	/*72*/{"Белый дом",-317.8123,736.1518,13.7643,0,0,1157.8682,2573.7563,1112.4800,180.8521,83,57},//белый дом
	/*73*/{"Выход на улицу",1157.9611,2576.4817,1112.4800,83,57,-317.9125,734.3019,13.7643,178.4457,0,0},//белый дом
	
	/*74*/{"Центр развлечений",2450.1399,-1903.5425,21.9619,0,0,187.4490,2262.4031,1001.5000,357.0804,3,200},//центр развлечений
	/*75*/{"Выход на улицу",187.2610,2260.3899,1001.5000,3,200,2451.3455,-1903.4971,21.9619,273.5948,0,0},//центр развлечений
	
	/*76*/{"Казино",-193.4523,624.1537,12.0010,0,0,563.8727,-687.7576,1126.2225,182.6343,88,58},//казино - 328.5836,373.2091,1002.8266,92.2719
	/*77*/{"Выход на улицу",563.7305,-685.5101,1126.2225,88,58,-193.1352,626.1034,12.0010,353.5944,0,0},//казино

	/*78*/{"Казарма",783.344, -415.731, 4.326,0,0,1067.6847,2972.6633,1112.8621,178.9328,87,59},//казарма армия сф
	/*79*/{"Выход на улицу",1067.7902,2974.4993,1112.8621,87,59,781.0192,-415.4212,4.0000,75.9763,0,0},//казарма армия сф
	
	/*80*/{"Казарма",220.0600,1826.5244,18.3659,0,DELLWORLD,252.6794,103.3473,1024.3394,358.6109,87,60},//казарма армия лв - DELETE 0 ВИРТ МИР
	/*81*/{"Выход на улицу",252.6430,101.8477,1024.3394,87,DELLWORLD,223.6162,1826.3533,17.6790,268.2764,0,0},//казарма армия лв - DELETE 60 ВИРТ МИР

	/*82*/{"Штаб",284.5887,1988.8895,17.8456,0,DELLWORLD,758.8699,-2.7475,1151.9795,270.5926,89,61},//штаб армия лв - DELETE 0 ВИРТ МИР
	/*83*/{"Выход на улицу",757.3700,-2.7630,1151.9795,89,DELLWORLD,286.0011,1988.3844,17.8456,250.3196,0,0},//штаб армия лв - DELETE 61 ВИРТ МИР

	/*84*/{"Вход в ресепшен",2261.8713,2721.4355,1122.4604,76,45,2264.8877,2710.3909,1122.4604,4.5410,76,45},//вход в ресепшен автошколы
	/*85*/{"Выход в офис",2265.1575,2708.5420,1122.4604,76,45,2262.0442,2719.2981,1122.4604,182.2027,76,45},//выход в офис с ресепшена автошколы

	/*86*/{"Военкомат",1919.4891,2303.9795,15.5697,0,0,-113.9612,-281.6963,1112.0341,180.7323,84,63},//Военкомат
	/*87*/{"Выход на улицу",-113.9287,-279.6873,1112.0341,84,63,1917.1996,2302.7109,15.5697,121.4135,0,0},//Военкомат
	
	/*88*/{"Склад",764.6398,-414.3022,4.0000,0,0,-65.4002,1875.7472,1120.3975,179.9298,6,31},//СФ склад
	/*89*/{"Выход на улицу",-65.3456,1878.2096,1120.3975,6,31,764.2767,-408.8503,4.0000,5.6441,0,0},//СФ склад

	/*90*/{"Наркопритон",409.1208,967.3558,12.5516,0,0,530.2015,908.3161,1002.0200,88.5367,5,32},//наркопритон
	/*91*/{"Выход на улицу",532.3207,907.7457,1003.2231,5,32,409.7368,968.8696,12.5516,338.5791,0,0},//наркопритон
	
	/*92*/{"Военный госпиталь",127.5178,1859.4353,17.7644,0,DELLWORLD,311.2815,2059.5583,1014.3731,86.4105,90,33},//госпиталь ЛВа - DELETE 0 ВИРТ МИР
	/*93*/{"Выход на улицу",312.7786,2059.4644,1014.3731,90,DELLWORLD,128.9837,1859.1173,17.7625,257.7589,0,0},//госпиталь ЛВа - DELETE 33 ВИРТ МИР

	/*94*/{"Военный госпиталь",778.1289,-415.4594,4.0000,0,0,5472.9868,-1564.9320,109.2959,1.1306,90,34},//госпиталь СФа
	/*95*/{"Выход на улицу",5473.0444,-1566.4305,109.2959,90,34,777.7666,-411.2636,4.0000,0.1908,0,0},//госпиталь СФа

	/*96*/{"Вертолетная площадка",-561.7533,469.7217,12.1035,0,0,-562.4339,461.0040,12.4874,174.4826,0,0},//верт LSPD
	/*97*/{"Выход в гараж",-546.9415,461.0759,12.8772,0,0,-567.4399,468.7824,12.0005,89.4235,0,0},//верт LSPD
	
	/*98*/{"Вертолетная площадка",1322.1810,902.5623,1115.4399,99,42,2560.6995,-2398.4475,36.2359,84.5272,0,0},//верт LVPD
	/*99*/{"Выход в офис",2563.5586,-2399.1729,36.2359,0,0,1322.1515,900.3641,1115.4399,180.2444,99,42},//верт LVPD
	
	/*100*/{"Спавн",2508.5662,-1806.5394,22.2100,0,0,2516.2466,-1818.6456,1002.0050,182.4480,0,0},//вход спавн инт
	/*101*/{"Выход на улицу",2516.5984,-1816.5321,1002.0050,0,0,2508.7813,-1808.5576,22.2100,181.5080,0,0},//выход спавн инт
	
	/*102*/{"Лифт",2089.5159,1488.9689,1003.5300,93,20,2091.6074,1488.6621,1006.7326,269.2864,93,20},//МЧС ЛС 2 этаж
	/*103*/{"Лифт",2089.6113,1488.9033,1006.7326,93,20,2091.3005,1489.1857,1003.5300,272.7331,93,20},//МЧС ЛС 2 этаж
	
	/*104*/{"Лифт",2185.3337,568.6909,1080.4542,93,DELLWORLD,1552.2980,490.5710,1070.4316,359.2470,92,21},//МЧС СФ 2 этаж - DELETE 21 ВИРТ МИР
	/*105*/{"Лифт",1552.2783,489.0711,1070.4316,92,DELLWORLD,2185.3396,570.1909,1080.4542,359.7798,93,21},//МЧС СФ 2 этаж - DELETE 21 ВИРТ МИР
	
	/*106*/{"Лифт",2185.3337,568.6909,1080.4542,93,DELLWORLD,1552.2980,490.5710,1070.4316,359.2470,92,22},//МЧС ЛВ 2 этаж - DELETE 22 ВИРТ МИР
	/*107*/{"Лифт",1552.2783,489.0711,1070.4316,92,DELLWORLD,2185.3396,570.1909,1080.4542,359.7798,93,22},//МЧС ЛВ 2 этаж - DELETE 22 ВИРТ МИР
	
	/*108*/{"Вход в ресепшен",-234.9417,733.9250,1112.9850,-1,-1,-232.4264,729.8996,1112.9850,272.7138,-1,-1},//вход в ресепшен банка
	/*109*/{"Выход в банк",-233.9944,730.7242,1112.9850,-1,-1,-235.0552,735.8881,1112.9850,3.8714,-1,-1},//выход в банк с ресепшена банка
	
	/*110*/{"Лаборатория",-1797.6656,-643.4174,1001.0859,73,DELLWORLD,1634.6228,995.3404,1475.6283,86.9213,100,51},//лаборатория RM - DELETE 51 ВИРТ МИР
	/*111*/{"Выход в дом",1636.1206,995.2598,1475.6283,100,DELLWORLD,-1797.7463,-644.9152,1001.0959,176.9179,73,51},//лаборатория RM - DELETE 51 ВИРТ МИР
	
	/*112*/{"Тир",305.3506,-141.8417,1004.0625,7,66,302.9281,-141.8477,1004.0625,15.1908,7,500},//ТИР ЛС
	/*113*/{"Выход",304.5872,-141.9285,1004.0625,7,500,307.0656,-141.2360,1004.0625,293.4333,7,66},//ТИР ЛС выход
	
	/*114*/{"Тир",286.1431,-29.8190,1001.5156,1,DELLWORLD,286.1431,-27.2179,1001.5156,279.9366,1,500},//ТИР СФ - DELETE 67 ВИРТ МИР
	/*115*/{"Выход",286.0357,-29.1079,1001.5156,1,DELLWORLD,286.1418,-31.4886,1001.5156,179.6914,1,67},//ТИР СФ выход - DELETE 500 ВИРТ МИР
	
	/*116*/{"Тир",301.7687,-76.5397,1001.5156,4,68,301.6959,-73.8680,1001.5156,357.5736,4,500},//ТИР ЛВ
	/*117*/{"Выход",301.7337,-75.6934,1001.5156,4,500,301.6580,-78.1741,1001.5156,116.3515,4,68},//ТИР ЛВ выход
	
	/*118*/{"Тир",306.3994,-159.1899,999.5938,6,DELLWORLD,303.5488,-159.0396,999.5938,88.3483,6,31},//ТИР CФа вход - DELETE 31 ВИРТ МИР
	/*119*/{"Выход",305.6983,-159.1528,999.5938,6,DELLWORLD,307.9801,-159.6936,999.5938,262.3747,6,31},//ТИР CФа выход - DELETE 31 ВИРТ МИР

	/*120*/{"Тир",-1134.8462,2547.5991,1141.5186,95,52,302.9795,-141.6315,1004.0625,88.7265,7,48},//ТИР Ballas вход
	/*121*/{"Выход",304.5859,-141.8687,1004.0625,7,48,-1137.3655,2547.9390,1141.5186,84.9964,95,52},//ТИР Ballas выход
	
	/*122*/{"Тир",-2622.4617,2916.7822,2738.6201,96,55,302.9795,-141.6315,1004.0625,88.7265,7,51},//ТИР Aztec вход
	/*123*/{"Выход",304.5817,-141.9610,1004.0625,7,51,-2624.7432,2914.9016,2738.6201,176.2240,96,55},//ТИР Aztec выход
	
	/*124*/{"Тир",-1134.8462,2547.5991,1141.5186,94,54,302.9795,-141.6315,1004.0625,88.7265,7,50},//ТИР Grove вход
	/*125*/{"Выход",304.5859,-141.8687,1004.0625,7,50,-1137.3655,2547.9390,1141.5186,84.9964,94,54},//ТИР Grove выход
	
	/*126*/{"Тир",-1502.0464,-626.2208,1001.0062,98,53,302.9795,-141.6315,1004.0625,88.7265,7,49},//ТИР Vagos вход
	/*127*/{"Выход",304.5817,-141.9610,1004.0625,7,49,-1502.0096,-628.2529,1001.0062,180.8442,98,53},//ТИР Vagos выход
	
	/*128*/{"Тир",-1502.0464,-626.2208,1001.0062,97,56,302.9795,-141.6315,1004.0625,88.7265,7,52},//ТИР Rifa вход
	/*129*/{"Выход",304.5817,-141.9610,1004.0625,7,52,-1502.0096,-628.2529,1001.0062,180.8442,97,56},//ТИР Rifa выход

	/*130*/{"Тир",1578.3342,-1690.6177,6.2188,0,DELLWORLD,259.8334,-29.5117,1001.1633,93.7385,1,12},//ТИР LSPD вход - DELETE 0 ВИРТ МИР
	/*131*/{"Выход",261.1749,-29.6252,1001.1633,1,DELLWORLD,1578.2947,-1692.4899,6.2188,181.1595,0,0},//ТИР LSPD выход - DELETE 12 ВИРТ МИР
	
	/*132*/{"Тир",-1606.3071,672.0612,-4.9063,0,DELLWORLD,259.8334,-29.5117,1001.1633,93.7385,1,13},//ТИР LSPD вход - DELETE 0 ВИРТ МИР
	/*133*/{"Выход",261.1749,-29.6252,1001.1633,1,DELLWORLD,-1606.8217,673.8746,-5.2422,359.3306,0,0},//ТИР LSPD выход - DELETE 13 ВИРТ МИР
	
	/*134*/{"Тир",306.3991,-159.1039,999.5938,6,DELLWORLD,259.8334,-29.5117,1001.1633,93.7385,6,30},//ТИР LSPD вход - DELETE 30 ВИРТ МИР
	/*135*/{"Выход",261.1749,-29.6252,1001.1633,6,DELLWORLD,308.1745,-160.1824,999.5938,269.1558,6,30},//ТИР LSPD выход - DELETE 30 ВИРТ МИР
	
	/*136*/{"Выход на крышу",1157.2075,2576.4824,1112.4800,77,44,1919.5951,-2222.8440,31.0292,273.3441,0,0},//Мерия крыша
	/*137*/{"Выход в офис",1918.0383,-2223.0496,31.0292,0,0,1157.1261,2574.1450,1112.4800,185.8811,77,44},//Мерия в офис
	
	/*138*/{"Выход на задний двор",1166.3191,2556.2930,1112.4800,77,44,1907.5616,-2212.7129,12.5450,359.5675,0,0},//Мерия задний двор
	/*139*/{"Выход в офис",1907.2421,-2214.8306,12.5450,0,0,1166.5619,2558.0845,1112.4800,356.9389,77,44},//Мерия в офис
	
	/*140*/{"Церковь",1919.2798,2183.2893,15.6982,0,0,21.1873,1250.2310,1003.5100,91.9600,0,0},//Церковь вход
	/*141*/{"Выход из церкви",23.0126,1250.4028,1003.5100,0,0,1917.0253,2183.3647,15.7060,88.5133,0,0},//Церковь выход
	
	/*142*/{"Тюрьма",-1809.9600,-2877.9968,22.6305,0,0,-2319.0093,297.0593,1002.0000,359.8775,85,203},//Тюрьма вход
	/*143*/{"Выход из тюрьмы",-2319.0168,295.1774,1002.0000,85,203,-1808.3132,-2878.7231,22.6285,243.3164,0,0}//Тюрьма выход
};
new TeleportPickup[sizeof(gTeleportsToD)] = {-1, ...};

new gameint[2];

// ПИКАПЫ
new Float:gPickup[PICKUPS_COUNT][3] =
{//saneka
	/*0*/{2277.4104,2712.0449,1122.4604},//автошкола ПДД
	/*1*/{1154.7391,2567.7507,1112.4800},//мэрия трудоустрйоство
	/*2*/{2262.0291,2713.2046,1122.4604},//АШ покупка лицензий
	/*3*/{725.0279,592.7450,1002.9598},//отель выход
	/*4*/{723.8790,602.2735,1002.9598},//отель ресепшн
	/*5*/{733.0805,599.5924,1002.9598},//отель лифт 1
	/*6*/{1276.1132,-776.4033,1202.7220},//отель лифт 2
	/*7*/{411.0176,1498.2454,1113.4723},//медкарта
	/*8*/{414.1694,1498.2396,1113.4723},//смена пола
	/*9*/{551.2849,-700.5464,1126.6760},//казино раздевалка
	/*10*/{2522.9656,-1809.4531,22.2100},//помощь о игре спавн ЛС
	/*11*/{0.0,0.0,0.0},//помощь о игре спавн ЖД ЛС
	/*12*/{2519.7534,-1814.3867,22.2100},//бесплатная еда спавн ЛС
	/*13*/{0.0,0.0,0.0},//бесплатная еда спавн ЖД ЛС
	/*14*/{701.9507,921.8377,1112.9851},//сдача с повинной
	/*15*/{445.4591,760.2913,1001.0859},//информация в бизнесе таксопарке
	/*16*/{2557.6165,-1846.0060,2522.8401},//лаборатории аренда рабочих
	/*17*/{187.7980,2264.4397,1001.5000},//сумасшедшие войны
	/*18*/{1158.1116,2565.2798,1112.4800},//экономика белый дом
	/*19*/{264.9564,-216.5629,1006.5694},//[оружейный завод] раздевалка
	/*20*/{316.4112,-215.3311,1006.5694},//[оружейный завод] заготовка
	/*21*/{2733.5210,-2201.8828,21.9503},//[нефтезавод] раздевалка
	/*22*/{1665.3574,2372.4146,14.4500},//[Ферма] ящик
	/*23*/{1665.2770,2369.1965,14.4500},//[Ферма] лейка
	/*24*/{1666.0221,2371.1331,14.4500},//[Ферма] раздевалка
	/*25*/{1157.9900,2568.5391,1112.4800},//[Мэрия] инфо о штате
	
	/*26*/{705.7488,910.6666,1112.9851},//[ПД] выдача оружия
	/*27*/{-100.0154,1801.0696,2022.6899},//[ФБР] выдача оружия
	/*28*/{1065.8585,2960.7559,1112.8621},//[Армии] выдача оружия
	
	/*29*/{701.9528,925.3913,1112.9851},//[ПД] получение номеров на машины
	/*30*/{316.4047,-215.4883,1006.5694},//[Alcotraz] заготовка
	/*31*/{306.0586,-219.4866,1006.5694},//[Alcotraz] склад
	
	/*32*/{703.0916,909.9702,1112.9851},//[Раздевалка] ПОЛИЦИЯ
	/*33*/{-79.2706,1787.7706,2022.6899},//[Раздевалка] ФБР
	/*34*/{414.9285,1494.0486,1113.4723},//[Раздевалка] МЧС
	/*35*/{1069.2960,2960.7969,1112.8621},//[Раздевалка] АРМИИ
	/*36*/{1264.6564,1481.4884,1114.8402},//[Раздевалка] NEWS
	/*37*/{1140.5883,2547.9551,1115.5601},//[Раздевалка] Белый дом
	
	/*38*/{1161.4475,2567.7507,1112.4800},//Покупка семьи
	/*39*/{2173.8704,-1594.8182,1129.9301},//[Спорт-Зал] Инфо
	
	/*40*/{1142.3220,2550.7581,1115.5601},//[Белый дом] Выдача оружия
	
	/*41*/{1824.7104,1447.7292,10.2403},//[Лесопилка] Раздевалка
	
	/*42*/{187.5670,2269.0300,1001.5000},//[Регистрация] На мероприятие голодных игр
	
	/*43*/{-85.6883,1793.8923,2022.6899},//[FBI] Маскирока
	
	//[МЧС] Лечение
	
	/*44*/{-1141.6290,2532.0586,1138.5670},//[Ballas] склад
	/*45*/{-1503.2030,-630.6912,1001.0062},//[Vagos] склад
	/*46*/{-1141.6290,2532.0586,1138.5670},//[Grove] склад
	/*47*/{-2622.8501,2912.3767,2738.6201},//[Aztec] склад
	/*48*/{-1503.2030,-630.6912,1001.0062},//[Rifa] склад
	
	/*49*/{2567.3157,-1847.8822,2522.8401},//[Итальянская мафия] склад
	
	/*50*/{-231.2663,734.0237,1112.9850},//[Банк] услуги
	/*51*/{-225.6767,734.0237,1112.9850},//[Банк] услуги
	/*52*/{-223.7727,734.0231,1112.9850},//[Банк] оплата недвижимости
	/*53*/{-229.2875,734.0231,1112.9850},//[Банк] оплата штрафов

	/*54*/{2569.7490,2498.8726,1112.4916},//[выход с гаража] N
	/*55*/{-873.4202,2695.5488,1144.9087},//[выход с гаража] D
	/*56*/{-2855.0999,-1744.8560,902.6359},//[выход с гаража] B
	/*57*/{2201.7693,2832.2900,1117.7094},//[выход с гаража] A
	
	/*58*/{2227.0056,783.1144,1116.8480},//[автосалон] выход

	/*59*/{186.9202,2264.4324,1001.5000},//[гонки] регистрация

	/*60*/{716.9360,599.7196,1002.9598},//[отель] вход на парковку
	/*61*/{149.8147,-533.3707,-75.0400},//[гонки] выход с парковки в отель

	/*62*/{-1135.5950,2556.5059,1141.9373},//[Ballas] аптечка
	/*63*/{-1510.8998,-633.6291,1001.0062},//[Vagos] аптечка
	/*64*/{-1135.5950,2556.5059,1141.9373},//[Grove] аптечка
	/*65*/{-2628.7898,2902.3396,2738.6201},//[Aztec] аптечка
	/*66*/{-1510.8998,-633.6291,1001.0062},//[Rifa] аптечка

	/*67*/{778.9075,-429.2046,4.0000},//СФА тир
	/*68*/{303.3796,-127.7514,1004.0},//аммо тир лс
	/*69*/{294.4863,-59.0796,1001.5156},//аммо тир сф
	/*70*/{294.4863,-59.0796,1001.5156},//аммо тир лв
	
	/*71*/{303.2098,-129.5245,1004.0625},//аммо тир ballas
	/*72*/{303.2098,-129.5245,1004.0625},//аммо тир aztec
	/*73*/{303.2098,-129.5245,1004.0625},//аммо тир grove
	/*74*/{303.2098,-129.5245,1004.0625},//аммо тир vagos
	/*75*/{303.2098,-129.5245,1004.0625},//аммо тир rifa
	
	/*76*/{294.4863,-59.0796,1001.5156},//аммо тир lspd
	/*77*/{294.4863,-59.0796,1001.5156},//аммо тир sfpd
	/*78*/{294.4863,-59.0796,1001.5156},//аммо тир Lva

	/*79*/{-282.8857,1037.2544,12.1136},//ballas top
	/*80*/{161.8231,1029.4037,13.7109},//vagos top
	/*81*/{-666.7588,864.3813,12.0000},//grove top
	/*82*/{310.2980,1871.6161,11.9969},//aztec top
	/*83*/{796.1324,2457.8787,12.0000},//rifa top

	/*84*/{1835.3915,1426.3239,10.2403},//лесопилка unload 1
	/*85*/{1831.1548,1426.6832,10.2403},//лесопилка unload 2
	
 	/*86*/{789.9174,163.8560,1502.0000},//[Раздевалка] ПОЛИЦИЯ 2
	/*87*/{804.2490,146.4717,1502.0000},//[ПД 2] получение номеров на машины
	/*88*/{803.1454,142.0742,1502.0000},//сдача с повинной ПД 2
	/*89*/{798.2070,155.8085,1502.0000},//[ПД 2] выдача оружия
	
	/*90*/{1140.7911,2547.9536,1115.5601},//[Раздевалка] Мерия ЛС
	/*91*/{1160.6093,2562.5444,1112.4800},//[Мерия] выдача оружия
	
	/*92*/{2259.3870,2709.9961,1122.4604},//[Раздевалка] Автошкола
	
	/*93*/{2567.3157,-1847.8822,2522.8401},//[Русская мафия] склад
	
 	/*94*/{1327.6056,885.3579,1115.4399},//[Раздевалка] ПОЛИЦИЯ LVPD
	/*95*/{1327.1758,895.7876,1115.4399},//[LVPD] получение номеров на машины
	/*96*/{1327.1769,899.4918,1115.4399},//сдача с повинной LVPD
	/*97*/{1331.9196,885.5817,1115.4399}//[LVPD] выдача оружия
};
new gPickupData[PICKUPS_COUNT][3] ={//int | mir || id
	{76,45,1239},//0
	{77,44,1239},//1
	{76,45,1239},//2
	{79,-1,1318},//3
	{79,-1,1239},//4
	{-1,-1,19130},//5
	{-1,-1,19130},//6
	{93,-1,11736},//7
	{93,-1,1314},//8
	{88,58,1275},//9
	{0,0,1239},//10
	{0,0,1239},//11
	{0,0,1582},//12
	{0,0,1582},//13
	{99,-1,1247},//14
	{-1,-1,1239},//15
	{73,-1,1239},//16
	{3,200,1314},//17
	{83,57,1239},//18
	{0,0,1275},//19
	{0,0,1239},//20
	{0,0,1275},//21
	{0,0,19639},//22
	{0,0,19621},//23
	{0,0,1275},//24
	{77,44,1239},//25
	{99,-1,19134},//26
	{75,43,19134},//27
	{87,-1,19134},//28
	{99,-1,1239},//29
	{88,200,1239},//30
	{88,200,1579},//31
	{99,-1,1275},//32
	{75,43,1275},//33
	{93,-1,1275},//34
	{87,-1,1275},//35
	{74,-1,1275},//36
	{83,57,1275},//37
	{77,44,1314},//38 покупка семьи
	{-1,-1,1239},//39
	{83,57,19134},//40
	{0,0,1275},//41
	{3,200,1314},//42
	{75,43,1275},//43
	{95,52,11745},//44
	{98,53,11745},//45
	{94,54,11745},//46
	{96,55,11745},//47
	{97,56,11745},//48
	{73,49,11745},//49

	{-1,-1,1274},//50
	{-1,-1,1274},//51
	{-1,-1,1274},//52
	{-1,-1,1274},//53

	{-1,-1,19132},//54
	{-1,-1,19132},//55
	{-1,-1,19132},//56
	{-1,-1,19132},//57
	
	{-1,-1,1318},//58

	{3,200,1314},//59

	{79,-1,1318},//60
	{101,-1,1318},//61

	{95,52,1240},//62
	{98,53,1240},//63
	{94,54,1240},//64
	{96,55,1240},//65
	{97,56,1240},//66

	{0,0,19134},//67
	{7,500,19134},//68
	{4,500,19134},//69
	{4,501,19134},//70
	
	{7,48,19134},//71
	{7,49,19134},//72
	{7,50,19134},//73
	{7,51,19134},//74
	{7,52,19134},//75
	
	{4,502,19134},//76
	{4,503,19134},//77
	{4,504,19134},//78

	{0,0,1239},//79
	{0,0,1239},//80
	{0,0,1239},//81
	{0,0,1239},//82
	{0,0,1239},//83

	{0,0,19198},//84
	{0,0,19198},//85

	{99,-1,1275},//86
	{99,-1,1239},//87
	{99,-1,1247},//88
	{99,-1,19134},//89
	
	{77,-1,1275},//90
	{77,-1,19134},//91
	
	{76,45,1275},//92
	
	{73,51,11745},//93
	
	{99,-1,1275},//94
	{99,-1,1239},//95
	{99,-1,1247},//96
	{99,-1,19134}//97
};
enum pick3dtext {
	picName[64],
	picColor[36]
}
new gPickupDataName[PICKUPS_COUNT][pick3dtext] ={//3dText || color
	{"Правила Дорожного Движения",PP},//0
	{"Трудоустройство",PP},//1
	{"Покупка лицензий",PP},//2
	{"Выход на улицу",PP},//3
	{"Ресепшн",PP},//4
	{"Лифт",PP},//5
	{"Лифт",PP},//6
	{"Получение мед.карты",PP},//7
	{"Смена пола",PP},//8
	{"Раздевалка",PP},//9
	{"FAQ",PP},//10
	{"FAQ",PP},//11
	{"Бесплатная еда",PP},//12
	{"Бесплатная еда",PP},//13
	{"Сдача с повинной",PP},//14
	{"Информация",PP},//15
	{"Найм рабочих",PP},//16
	{"Сумасшедшие войны",PP},//17
	{"Управление штатом",PP},//18
	{"Раздевалка",PP},//19
	{"Заготовка",PP},//20
	{"Раздевалка",PP},//21
	{"Ящик для сбора яблок",PP},//22
	{"Лейка",PP},//23
	{"Раздевалка",PP},//24
	{"Информация о штате",PP},//25
	{"Оружие",PP},//26
	{"Оружие",PP},//27
	{"Оружие",PP},//28
	{"Получение номеров на Т/С",PP},//29
	{"Заготовка",PP},//30
	{"Склад",PP},//31

	{"Раздевалка",PP},//32
	{"Раздевалка",PP},//33
	{"Раздевалка",PP},//34
	{"Раздевалка",PP},//35
	{"Раздевалка",PP},//36
	{"Раздевалка",PP},//37
	{"Семьи",PP},//38
	{"Информация",PP},//39
	{"Оружие",PP},//40
	{"Раздевалка",PP},//41
	{"Голодные игры",PP},//42
	{"Маскировка",PP},//43
	{"None",PP},//44
	{"None",PP},//45
	{"None",PP},//46
	{"None",PP},//47
	{"None",PP},//48
	{"None",PP},//49

	{"Банковские услуги",PP},//50
	{"Банковские услуги",PP},//51
	{"Оплата недвижимости",PP},//52
	{"Оплата штрафов",PP},//53

	{"None",PP},//54
	{"None",PP},//55
	{"None",PP},//56
	{"None",PP},//57
	{"None",PP},//58

	{"Безумные гонки",PP},//59

	{"Вход на парковку",PP},//60
	{"Вход в отель",PP},//61

	{"None",PP},//62
	{"None",PP},//63
	{"None",PP},//64
	{"None",PP},//65
	{"None",PP},//66

	{"Начать тренировку",PP},//67
	{"Начать тренировку",PP},//68
	{"Начать тренировку",PP},//69
	{"Начать тренировку",PP},//70
	
	{"Начать тренировку",PP},//71
	{"Начать тренировку",PP},//72
	{"Начать тренировку",PP},//73
	{"Начать тренировку",PP},//74
	{"Начать тренировку",PP},//75
	
	{"Начать тренировку",PP},//76
	{"Начать тренировку",PP},//77
	{"Начать тренировку",PP},//78

	{"Информация",PP},//79
	{"Информация",PP},//80
	{"Информация",PP},//81
	{"Информация",PP},//82
	{"Информация",PP},//83

	{"None",PP},//84
	{"None",PP},//85
	
	{"Раздевалка",PP},//86
	{"Получение номеров на Т/С",PP},//87
	{"Сдача с повинной",PP},//88
	{"Оружие",PP},//89
	
	{"Раздевалка",PP},//90
	{"Оружие",PP},//91
	{"Раздевалка",PP},//92
	
	{"None",PP},//93
	
	{"Раздевалка",PP},//94
	{"Получение номеров на Т/С",PP},//95
	{"Сдача с повинной",PP},//96
	{"Оружие",PP}//97
};

new gPickID[sizeof(gPickup)] = {-1, ...};
CB: Float:GetDistanceBetweenPlayers(p1,p2) {
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
enum carInfo {
	carID[2],
	carModel[2],
	carColor_one[2],
	carColor_two[2],
	Float:carDrived[2],
	Float:carFuel[2],
	carVehcom_1[2],
	carVehcom_2[2],
	carVehcom_3[2],
	carVehcom_4[2],
	carVehcom_5[2],
	carVehcom_6[2],
	carVehcom_7[2],
	carVehcom_8[2],
	carVehcom_9[2],
	carVehcom_10[2],
	carVehcom_11[2],
	carVehcom_12[2],
	carVehcom_13[2],
	carVehcom_14[2],
	carOpen[2],
	carNarko[2],
	carDeagle[2],
	carM4[2],
	carAK47[2],
	carShot[2],
	carKanistra[2],
	carMats[2],
	carPaintJob[2],
	carPEngine_1[2],
	carPEngine_2[2],
	carPEngine_3[2],
	carPEngine_4[2],
	carPEngine_5[2],
	carPBrake_1[2],
	carPBrake_2[2],
	carPBrake_3[2],
	carPBrake_4[2],
	carPBrake_5[2]
};
new gPlayerCars[MAX_PLAYERS][carInfo],
	NumberVehicle[MAX_PLAYERS][2][10];

enum trunkInfo {
	tGun[4],
	tDrugs,
	tMats,
	tNarko,
	tKanistra,
	tOpen
};
new TrunkInfo[MAX_VEHICLES][trunkInfo];

new player_ip[MAX_PLAYERS][16],
	player_ip_check[MAX_PLAYERS][16],
	player_name[MAX_PLAYERS][24],
	player_pass[MAX_PLAYERS][64];

enum pInfo {
	pID,
	pEmail[36],
	pLevel,
	pAdmin,
	pAdminLevel,
	pJail,
	pIpReg[18],
	pKeyip[5],
	Float:pHP,
	pDataReg[32],
	pHouse,
	pTempKey,
	pRoom,
	pHotel,
	pAirport,
	pBusiness,
	pMats,
	pSex,
	pArrested,
	pMute,
	pCrimes,
	pExp,
	pCash,
	pSalary,
	pJailTime,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pSkin,
	pJob,
	pFracSkin,
	pPhone,
	pZakonp,
	pAddiction,
	pWarns,
	punWarnstime,
	pFuel,
	pMarried[MAX_PLAYER_NAME],
	pDrug[MAX_PLAYER_NAME],
	pBank,
	pMobile,
	pSearch,
	pGunSkill[6],
    pPlayTime[2],
    pAccusedof[44],
    pVictim[MAX_PLAYER_NAME],
	pHospital,
	pWatch,
	pRod,
	pRopes,
	pWorms,
	Float:pFish,
	pRouble,
	pFamily,
	pProgress,
	pBook,
	pPhoneNumber[25],
	pSpawn,
	pMedCard,
	pSettings[11],
	pMedHeal,
	pAdvert,
	pArmSkin,
	bizz_work,
	bizz_status,
	bizz_cash,
	bizz_lcash,
	pGolos,
	pBlago,
	pVips,
	pVipTime,
	pVipName,
	pfWarn,
	pDisease[2],
	pSatiety,
	pFamRank,
	pDSatiety,
	pDDisease,
	pBox,
	Float:pSnow,
	pMedKit,
	pMPromo,
	pAdmMSG,
	pAdmKL,
	pMask,
	pGoogle[64],
	pGoogleSec,
	Float:pX,
	Float:pY,
	pSellNeed[5],
	pVipAdd,
	pGunLic,
	pDrugInv,
	pHelper,
	pSlotItem[8],
	pSlotItem_Use[8],
	pAsk,
	pInstrument,
	pAskmute,
	pJemmy,
	ptheftSkill, //угон
	ptheftExp, // угон
	ptheftTime, //угон
	ptheftHome, //угон
	ppumpkin, //праздник
	pFMute,
	pDonateBank,
	pDonateBh
};
new PI[MAX_PLAYERS][pInfo],
	pPhoneName[MAX_PLAYERS][25][MAX_PLAYER_NAME],
	lic[MAX_PLAYERS][64],
	start_work[MAX_PLAYERS],
	gOnlinePlayer[MAX_PLAYERS][2],
	gOnlinePlayerAFK[MAX_PLAYERS][2];


//Радиоведущие //DJ
new DJlvl[MAX_PLAYERS];
new DJname[MAX_PLAYERS][25];
new DJmsg;

enum tInfo {
	tAFK,
	tSelectHouse,
	bool:tInHouse,
	bool:tTPpick,
	bool:tLogin,
	bool:tJoined,
	bool:tPhone,
	bool:tSpawn,
	bool:tSpectate,

	tSelectedBusinessID,

	tStoreGun,

	tArendaCar,
	tTaxiPrice,
	tTaxiTurn,
	bool:tTaxiGoing,
	Float:tTaxiStart,
	tTaxiPass,
	tSalonInfo[2],
	tKubik,
	tSpectr,
	preOrg,
	preOrgg,
	Float:Admin_X,
	Float:Admin_Y,
	Float:Admin_Z,
	pOldSkin,
	bool:tDialog,
	tPhoneCalled,
	tPhoneCaller,
	bool:tPhoneNews,
	bool:tTazer,
	tCuffedTime,
	tCuffed,
	bool:tTied,
	bool:tGag,
	tGagTime,
	tSpcarTime,
	bool:tEther,
	bool:tJobOil[2],//0 - работа, 1 - объект
	tJobSalary,
	tGunArea[4],// 0 - gungs_arena, 1 - KillsGun, 2 - KillsAll, 3 - NextGun
	tDMArea[3], // 0 - dm_arena, 1 - KillsPlayer, 2 - DeathsPlayer
	tJobSad[4], // 0 - sad_work, 1 - use_sad, sad_kg,sad_all
	tJobGun[3], // 0 - job_gun, 1 - gun_blank, 2 - gun_collected
	tJobWood[4], // 0 - wood_work, 1 - WoodCheckpointTop, 2 - WoodDrop, 3 - PlayerUseBox
	bool:tBlockWars,
	tMaskTime,
	tMask,
	tLoginTime,
	tAlcotraz[3], // 0 - alcatraz_time,1 - alcatraz_maniken, 2 - alcatraz_knife
	tTrucker[4], // 0 - quantity_tk, 1 - tk_unload, 2 - tk_unload_price, 3 - attach_trailer_2
	tOilObject,
	tTazers[3], // 0 - tazertime, 1 - tazershot, 2 - player
	bool:tPhoneOnline,
	tFight,
	bool:tGym,
	tClothesWork[2],// 0 - работа, 1 - заготовка
	tProcess[2],// 0 - выполнено, 2 - максимум
	tDuel,
	tDuelLobby,
	tArendKey,
	bool:tShowKeys,
	tAntiDM,
	tMasked,
	tFakePass,
	Float:tGyms,
	tGymSkill,
	tNewYear[2],
	bool:tHeal,
	bool:tEnter[MAX_FRACTIONS+1],
	tAutoSchool,
	loadingMode,
	loadingModelPlayer,
	tACflood,
	bool:tHelperDuty,
	bool:tSelectSkin,
	tUpdate,
	Float:tArmour,
	tCashDM,
	tCashRace,
	tDiceID,
	tDiceIDs,
	tDiceMoney,
	bool:tDiceClosed,
	tDiceTime,
	bool:tTir,
	tSLimit,
	tVirtualWorld,
	tInterior,
	tRaceID,
	tRaceMoney,
	tRaceRandom,
	tRaceCP
}
new TI[MAX_PLAYERS][tInfo];

enum action_info {
	act_skill,
	act_exp,
	act_sport,
	act_mp,
	act_gun,
	act_fish,
	act_renthotel,
	act_buyskin,
	act_buycar,
	act_rentcar,
	act_buylic,
	act_buyimprove,
	act_disease,
	act_changesex,
	act_medcard,
	act_buynubmbercar,
	act_perfomance,
	act_tune,
	act_timerullet,
	act_promocode,
	act_payday,
	act_donate,
	act_level,
	act_time,
	act_select
}
new BonusInfo[action_info];

stock D(playerid, dialogid, style, const caption[], const info[], const button1[], const button2[]) {
	if(!TI[playerid][tLogin]) {
		if(dialogid != 0 && dialogid != 1 && dialogid != 2 && dialogid != 3 && dialogid != 4 && dialogid != 402 && dialogid != 463) Kick(playerid);
	}
	//if(TI[playerid][tHeal]) TI[playerid][tHeal] = false;
	TI[playerid][tDialog] = true;
	if(OldDialogID[playerid] == INVALID_DIALOG_ID) PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	OldDialogID[playerid] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style,caption, info, button1, button2);
}

stock IsPlayerCheckAdmin(playerid)
{
	new fmt_query[70];
	new rows;
	new Cache: result;

	format(fmt_query, sizeof fmt_query, "SELECT * FROM `accounts` WHERE Name='%s' AND `pAdmin`!='0'", GetName(playerid));
	result = mysql_query(connects, fmt_query);

	rows = cache_num_rows();

	if(rows)
	{
		cache_delete(result);
		return 1;
	}
	else
	{
		cache_delete(result);
		return 0;
	}
}
stock IsPlayerGrandAdmin(playerid)
{
	new fmt_query[70];
	new rows;
	new Cache: result;

	format(fmt_query, sizeof fmt_query, "SELECT * FROM `"TABLE_FULLACCESS"` WHERE name='%s'", GetName(playerid));
	result = mysql_query(connects, fmt_query);

	rows = cache_num_rows();

	if(rows)
	{
		cache_delete(result);
		return 1;
	}
	else
	{
		cache_delete(result);
		return 0;
	}
}
stock IsPlayerValueGrandAdmin(params[])
{
	new fmt_query[70];
	new rows;
	new Cache: result;

	format(fmt_query, sizeof fmt_query, "SELECT * FROM `"TABLE_FULLACCESS"` WHERE name='%s'", params[0]);
	result = mysql_query(connects, fmt_query);

	rows = cache_num_rows();

	if(rows)
	{
		cache_delete(result);
		return 1;
	}
	else
	{
		cache_delete(result);
		return 0;
	}
}
stock IsPlayerParamsGrandAdmin(ids)
{
	new fmt_query[70];
	new rows;
	new Cache: result;

	format(fmt_query, sizeof fmt_query, "SELECT * FROM `"TABLE_FULLACCESS"` WHERE name='%s'", GetName(ids));
	result = mysql_query(connects, fmt_query);

	rows = cache_num_rows();

	if(rows)
	{
		cache_delete(result);
		return 1;
	}
	else
	{
		cache_delete(result);
		return 0;
	}
}

/*public SV_VOID:OnPlayerActivationKeyPress(
	SV_UINT:playerid,
	SV_UINT:keyid
) {
 	if (keyid == 0x42 && lstream[playerid]) SvAttachSpeakerToStream(lstream[playerid], playerid);
 	if (keyid == 0x49)
 	{

	 	if(PI[playerid][pCalling] !=-1) SelectTextDraw(playerid, -16776961);
        else ShowInventory(playerid);

 	}
 	if (keyid == 0x52) callcmd::radio(playerid);
	if (keyid == 0x5A && gstream) SvAttachSpeakerToStream(gstream, playerid);
}

public SV_VOID:OnPlayerActivationKeyRelease(
	SV_UINT:playerid,
	SV_UINT:keyid
) {
	if (keyid == 0x42 && lstream[playerid]) SvDetachSpeakerFromStream(lstream[playerid], playerid);
	if (keyid == 0x5A && gstream) SvDetachSpeakerFromStream(gstream, playerid);
}*/

public SV_VOID:OnPlayerActivationKeyPress(SV_UINT:playerid, SV_UINT:keyid)
{
    // Attach player to local stream as speaker if 'B' key is pressed
    if (keyid == 0x42 && lstream[playerid]) SvAttachSpeakerToStream(lstream[playerid], playerid);
    // Attach the player to the global stream as a speaker if the 'Z' key is pressed
    if (keyid == 0x5A && gstream) SvAttachSpeakerToStream(gstream, playerid);
}

public SV_VOID:OnPlayerActivationKeyRelease(SV_UINT:playerid, SV_UINT:keyid)
{
    // Detach the player from the local stream if the 'B' key is released
    if (keyid == 0x42 && lstream[playerid]) SvDetachSpeakerFromStream(lstream[playerid], playerid);
    // Detach the player from the global stream if the 'Z' key is released
    if (keyid == 0x5A && gstream) SvDetachSpeakerFromStream(gstream, playerid);
}

CB: CheckPlayerFullAccess(playerid)
{
	new rows;
	rows = cache_num_rows();

	for(new i = 0; i < rows; i ++)
    {
        cache_get_value_name_int(i, "id", FCI[i][fullaccess_id]);
        cache_get_value_name(i, "name", FCI[i][fullaccess_player]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof STRING_GLOBAL, "%d) %s\n", FCI[i][fullaccess_id], FCI[i][fullaccess_player]);

		D(playerid, D_ALLFULLACCESS, DIALOG_STYLE_LIST, "\
			{E4A424}Администраторы c полным доступом:", STRING_GLOBAL, "Выбрать", "Выход");
    }
}

stock IsVehicleOccupied(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
stock SendMedic(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAMedic(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendMafia(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAMafia(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendArmy(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAArm(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendCop(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsACop(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendNews(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsANews(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendBand(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(IsAGang(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock IsVehicleOccupiedTaxi(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleSeat(vehicleid) == 0) continue;
		if(IsPlayerInVehicle(i, vehicleid))
		return true;
	}
	return false;
}
/*============================================================================*/
new GunPlayer[MAX_PLAYERS][13][2];
new AC_GunCheattime[MAX_PLAYERS]={0,...};
stock GetWeaponSlot(weaponid) {
	switch(weaponid) {
		case 0,1:return 0;
		case 2..9:return 1;
		case 22..24:return 2;
		case 25..27:return 3;
		case 28,29,32:return 4;
		case 30,31:return 5;
		case 33,34:return 6;
		case 35..38:return 7;
		case 16..18,39:return 8;
		case 41..43:return 9;
		case 10..15:return 10;
		case 44..46:return 11;
		case 40:return 12;
	}
	return -1;
}
stock IsValidWeaponID(weaponid) {                                               // Проверка на существующее оружие
	if((weaponid > 0 && weaponid < 19) || (weaponid > 21 && weaponid < 47)) {
		return true;
	}
	return false;
}
stock AC_GivePlayerWeapon(playerid, weaponid, ammo) {
	if(IsPlayerConnected(playerid) && IsValidWeaponID(weaponid)) {
		new slot = GetWeaponSlot(weaponid);
		GunPlayer[playerid][slot][0] = weaponid;
		GunPlayer[playerid][slot][1] += ammo;
		GivePlayerWeapon(playerid, weaponid, ammo);
		SetPlayerArmedWeapon(playerid, weaponid);
		return 1;
	}
	return 0;
}
stock AC_SetPlayerAmmo(playerid, weaponid, ammo) {                           
    if(IsPlayerConnected(playerid) && IsValidWeaponID(weaponid) && ammo > 0) {
		new slot = GetWeaponSlot(weaponid);
		GunPlayer[playerid][slot][0] = weaponid;
		GunPlayer[playerid][slot][1] = ammo;
		SetPlayerAmmo(playerid, weaponid, ammo);
		SetPlayerArmedWeapon(playerid, weaponid); // Выбираем оружие в руки
		return 1;
	}
	return 0;
}
enum gtInfo {
	gtID,
	gtGoID,
	Float:gtX,
	Float:gtY,
	Float:gtZ,
	Float:gtTPX,
	Float:gtTPY,
	Float:gtTPZ,
	gtState,
	gtStayed
}
new GotoInfo[MAX_PLAYERS][gtInfo];
new RankName[MAX_FRACTIONS][15][24];

#define house_rent 	0.001
#define hotel_rent 	0.003
#define bizz_rent 	0.002
#define airport_rent 0.003

new FracSalary[10][15];
new WorkSalary[5];
new Nalog[8];

enum _fInfo {
    fID,
	fName[24],
	fLeader[MAX_PLAYER_NAME],
	fAdmin[24],
	fTime[53],
	fBank,
	fBankCash,
	fDrugs,
	fMats,
	fHealth,
	fSklad,
	fPrice,
	fSkin,
	fMaxRang,
	fInviteRang,
	fUninviteRang,
	fGiveRang,
	fUseStock,
	fColor,
	fVw,
	fInt,
	fMessage[71],
	fDrugsBuy,
	fDrugsPrice,
	fAntiTK,
	fPoints,
	fRating
}
new FI[MAX_FRACTIONS + 1][_fInfo],
	gFractionSkin[MAX_FRACTIONS][10] = {
		{0,0,0,0,0,0,0,0,0,0}, //Defence
		{281,280,284,282,285,303,288,283,306,309}, //LSPD
		{281,280,284,282,285,303,288,283,306,309}, //SFPD
		{281,280,284,282,285,303,288,283,306,309}, //LVPD
		{286,163,164,165,166,141,0,0,0,0}, //FBI
		{255,57,71,187,147,150,0,0,0,0}, //MAYOR
		{287,179,311,61,255,191,0,0,0,0}, //ARMY
		{287,179,311,61,255,191,0,0,0,0}, //ARMY
		{276,275,274,70,219,308,0,0,0,0}, //MEDICS LS
		{276,275,274,70,219,308,0,0,0,0}, //MEDICS SF
		{276,275,274,70,219,308,0,0,0,0}, //MEDICS LV
		{188,170,217,261,211,0,0,0,0,0}, //LS News
		{188,170,217,261,211,0,0,0,0,0}, //SF News
		{188,170,217,261,211,0,0,0,0,0}, //LV News
		{59,185,240,148,0,0,0,0,0,0}, //Instructors
		{124,223,127,113,214,0,0,0,0,0}, //LCN
		{117,118,123,186,120,169,0,0,0,0}, //Yakuza
		{112,111,126,125,272,216,0,0,0,0}, //RM
		{103,102,104,195,0,0,0,0,0,0}, //Ballas
		{108,109,110,56,0,0,0,0,0,0}, //Vagos
		{105,106,107,269,271,270,65,0,0,0}, //Grove
		{48,114,116,115,41,0,0,0,0,0}, //Aztec
		{175,174,173,273,226,0,0,0,0,0}, //Rifa
		{255,98,57,163,228,305,304,17,76,0} //WH
	};
new f_diplomacy[8][8] ;
enum Vacancy {
	VacancyCreator,
	bool: VacancyStatus,
	VacancyText[120],
	VacancyFraction,
};
new VacancyInfo[14][Vacancy];
//=================================================
CB: kick(giveplayerid) {
	return Kick(giveplayerid);
}
#define Kick(%0) SetTimerEx("kick",250,false,"d",%0)
//бизнесы

enum BINT_DATA {
	bintID,
	bintInterior,
	Float:bintX,
	Float:bintY,
	Float:bintZ,
	Float:bintR,
	Float:bintXB,
	Float:bintYB,
	Float:bintZB,
	bintName[32]
}

enum BUSINESS_DATA {
	bizzID,
	bizzName[64],
	bizzType,
	bizzBint,
	bizzWorld,
	bizzOwnerID,
	bizzSellPrice,
	bizzBank,
	bizzBankDay,
	bizzPrice,
	bizzEnter,
	bizzProduct,
	bizzProdOrder,
	bizzProdOrderPrice,
	bizzStatus,
	Float:bizzX,
	Float:bizzY,
	Float:bizzZ,
	Float:bizzR,
	Float:gpsX,
	Float:gpsY,
	Float:gpsZ,
	bizzDay,
	bizzMafia,
	bizzOwner[48],
	bizzVisitors,
	bizzUpgrade[3]
}

//Бизнесы
new gBints[BINT_COUNT][BINT_DATA],
	gBintEnterArea[BINT_COUNT],
	gBintBuyArea[BINT_COUNT],
	gBintsCount, gBintsTotalCount = 0,
	gBusiness[MAX_BUSINESS_COUNT][BUSINESS_DATA],
	b_area[MAX_BUSINESS_COUNT],
	Text3D: gBusinessText[MAX_BUSINESS_COUNT],
	gBusinessPickup[MAX_BUSINESS_COUNT],
	gBusinessIcon[MAX_BUSINESS_COUNT],
	gBusinessTypeName[BUSINESS_TYPE_COUNT][28] = {"Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Таксопарк","Риэлторское агенство","Спорт-Зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксессуаров","Perfomance Tune"},
	gBusinessCount, gBusinessTotalCount = 0,
	gFuncBusinessCount, gFuncBusinessTotalCount = 0,
	gCarsBusinessCount, gCarsBusinessTotalCount = 0,
	gBarCosts[] = {5, 10, 13, 16, 24, 31},
	gCompCosts[] = {100, 150, 230, 260},
	gTavernNames[][] = {{"Салат"}, {"Наггетсы"}, {"Бургер"}, {"Пицца"}}, 
	gTavernCosts[] = {5, 10, 13, 25},
	gShopProduct[SHOP_OBJECTS] = {66,84,24,72,38,28,16,12,25,30,25},
	gShopPrice[SHOP_OBJECTS] = 	 {660,840,240,720,380,280,90,120,250,300,250},
	gShopObject[SHOP_OBJECTS][24] = {"Телефон","Камера","Часы","Телефонная книга","SIM-карта","Маска","Аптечка","Цветы","Ремкомплект","Балончик с краской","Отмычки"},
	gFishCosts[] = {520, 340, 100, 400};
//лрпата, бита, катана, кастет, газ балон, парашут
new stock gSellGun [15] = { 6, 5, 8, 1, 17, 46, 23, 24, 25, 29, 30, 31, 33 };
new stock gSellGunPrice [15] = { 50, 100, 100, 100, 300, 1000, 16, 27, 32, 14, 27, 27, 1000 , 500 };
new stock gSellGunProds [15] = { 10, 10, 10, 10, 15, 20, 3, 4, 5, 3, 4, 4, 70, 50 };

new type_acces[MAX_PLAYERS];

new acces_name_all[][] = {
	{""P"1."W" Очки"},
	{""P"2."W" Шапки"},
	{""P"3."W" Шляпы"},
	{""P"4."W" Кепки"},
	{""P"5."W" Береты"},
	{""P"6."W" Банданы"},
	{""P"7."W" Панамки"},
	{""P"8."W" Спорт-шлем"},
	{""P"9."W" Каски"},
	{""P"10."W" Маски"},
	{""P"11."W" Наушники"},
	{""P"12."W" Часы"},
	{""P"13."W" Рюкзаки"}
	//{""P"14."W" Разное"}
};
//очки
new acces_id_glass[][] = {
	{19035,2500},
	{19034,2500},
	{19033,2500},
	{19032,2500},
	{19031,2500},
	{19030,2500},
	{19029,2500},
	{19028,2500},
	{19027,2500},
	{19026,2500},
	{19025,2500},
	{19024,2500},
	{19023,2500},
	{19022,2500},
	{19021,2500},
	{19020,2500},
	{19019,2500},
	{19018,2500},
	{19017,2500},
	{19016,2500},
	{19015,2500},
	{19014,2500},
	{19013,2500},
	{19012,2500},
	{19011,2500},
	{19010,2500},
	{19009,2500},
	{19008,2500},
	{19007,2500},
	{19006,2500}
};
//шапки
new acces_id_hat[][] = {
	{19069,5000},
	{19067,5000},
	{19068,6000},
	{18953,8000},
	{18954,10000},
	{19554,13000}
};
//шляпы
new acces_id_bonnet[][] = {
	{18947,10000},
	{18948,10000},
	{18949,10000},
	{18950,10000},
	{18951,10000}
};
//кепки
new acces_id_cap[][] = {
	{18933,3000},
	{18932,3000},
	{18928,4000},
	{18942,5000},
	{18943,6000},
	{18940,6000},
	{18929,7000},
	{18926,7000},
	{18955,7000},
	{18956,7000},
	{18957,7000},
	{18959,7000}
};
//береты
new acces_id_beret[][] = {
	{18924,3000},
	{18925,3000},
	{18921,3000},
	{18923,3000},
	{18922,3000}
};
//банданы
new acces_id_bandanas[][] = {
	{18906,4000},
	{18906,4000},
	{18906,4000},
	{18906,4000},
	{18910,4000},
	{18911,4000},
	{18912,4000},
	{18913,4000},
	{18914,4000},
	{18915,4000},
	{18916,4000},
	{18917,4000},
	{18918,4000},
	{18919,4000}
};
//панамки
new acces_id_panam[][] = {
	{18968,4000},
	{18967,4000},
	{18969,4000}
};
//спорт шлем
new acces_id_sporthat[][] = {
	{18976,15000},
	{18977,20000},
	{18978,20000},
	{18979,20000},
	{18645,20000}
};
//каски
new acces_id_kask[][] = {
	{19101,5000},
	{19102,5000},
	{19103,5000},
	{19104,5000},
	{19105,5000},
	{19106,7000},
	{19107,7000},
	{19108,7000},
	{19109,7000},
	{19110,7000},
	{19111,7000},
	{19112,7000},
	{19113,7000},
	{19114,7000},
	{19115,7000},
	{19116,7000},
	{19117,7000},
	{19118,7000},
	{19119,7000},
	{19120,7000}
};
//маски
new acces_id_mask[][] = {
	{19036,8000},
	{19037,8000},
	{19038,8000}
};
//наушники
new acces_id_headphones[][] = {
	{19421,6000},
	{19422,6000},
	{19423,6000},
	{19424,6000}
};
//часы
new acces_id_watch[][] = {
	{19042,7000},
	{19041,7000},
	{19040,7000},
	{19039,7000},
	{19043,7000},
	{19044,10000},
	{19045,10000},
	{19046,10000},
	{19048,10000},
	{19049,15000},
	{19050,15000},
	{19051,15000},
	{19053,15000}
};
//рюкзаки
new acces_id_backpack[][] = {
	{3026,4000},
	{371,8000},
	{19559,15000}
};

new open_game = 0; // если 0 - рега закрыта, 1 - открыта
new time_registr_game; // время на регистрацию
new time_play_game;
new players_in_game; // количество игроков зарегалось
new money_in_game; // бюджет регистрации
new game_start; // игра началась или нет
new player_to_game[MAX_PLAYERS];
new kills_player_game[MAX_PLAYERS];
new weapon_id_game[] ={22,23,24,25,28,29,30,31,33,34};
new Text:td_game[6];
new Text3D:gamedm_text;
new Text3D:gamerace_text;
new Text3D:golod_text;

new Text3D:labrary_text;
new Text3D:army_text;
new bool:army_chs[2];

new Float:pickup_game_dm[][14] =
{
	{105.3075,2484.9155,15.9813},
	{46.2913,2503.9155,12.8534},
	{26.0378,2553.4482,12.0568},
	{-34.2831,2589.5388,12.4403},
	{-43.6702,2543.0930,14.1339},
	{-88.2706,2518.6814,15.0181},
	{158.2228,2457.2268,16.8668},
	{148.7657,2520.5679,17.1436},
	{209.1543,2513.6145,18.7387},
	{173.9926,2560.4119,15.1334},
	{214.6286,2566.5171,15.1405},
	{244.7666,2518.6343,20.4905}
};
new pickups_game_dm[14];
new Float:spawns_pos_game[][19] = {
	{-15.2709,2522.6272,16.4844,129.8470},//1
	{0.8387,2480.1719,16.4844,129.8470},//2
	{10.4950,2515.0256,16.4844,129.8470},//3
	{8.7762,2528.0828,16.4922,129.8470},//4
	{34.5469,2523.9570,16.4844,129.8470},//5
	{48.4432,2478.2725,16.4844,129.8470},//6
	{54.4565,2481.7009,16.4844,129.8470},//7
	{52.2536,2509.2185,16.4844,129.8470},//8
	{56.1235,2517.0713,16.4844,129.8470},//9
	{89.3234,2481.9392,16.4844,129.8470},//10
	{107.6609,2493.5183,16.4844,129.8470},//11
	{92.4067,2522.1169,16.5540,129.8470},//12
	{112.5036,2519.1624,16.6917,129.8470}//13
};
new Float:spawns_pos_game_end[][6] =
{
	{187.8321,2262.8542,1001.5000,358.0204},
	{186.8051,2263.1040,1001.5000,3.0338},
	{187.5506,2267.3940,1001.5000,2.4072},
	{184.6980,2267.1833,1001.5000,343.9203},
	{189.4030,2267.5327,1001.5000,4.2872},
	{190.9009,2272.0708,1001.5000,184.2872}
};
new game_info[][] = {
	{""W"Сумасшедшие войны, в данном мероприятии каждый участник - сам за себя.\n"},
	{"Минимальный взнос для участия в мероприятии составляет "ORANGE"$1000$"W".\n"},
	{"Максимальный взнос для участия в мероприятии составляет "ORANGE"$10000$"W".\n\n"},
	{"Доступные виды оружия: \n\t"P"9mm Pistol, Silenced Pistol, Desert Eagle, Shotgun\n"},
	{"\tMP5, AK - 47, M4, Country Rifle, Sniper Rifle\n"},
	{""W"Оружие выдается рандомно после гибели Игрока.\n\n"},
	{""G"Призовой фонд составляет:\n\n"},
	{"\t"ORANGE"1 место - 50% от бюджета мероприятия\n"},
	{"\t2 место - 30% от бюджета мероприятия\n"},
	{"\t3 место - 20% от бюджета мероприятия\n"}
};

new golod_info[][] = {
	{""W"Голодные игры, суть данного мероприятия - остаться в живых.\n"},
	{"Минимальный взнос для участия в мероприятии составляет "ORANGE"$1000$"W".\n"},
	{"Максимальный взнос для участия в мероприятии составляет "ORANGE"$10000$"W".\n\n"},
	{"Доступные виды оружия: \n\t"P"9mm Pistol, Silenced Pistol, Desert Eagle, Shotgun\n"},
	{"\tMP5, AK - 47, M4, Country Rifle, Sniper Rifle\n"},
	{""W"Оружие же можно добыть, подобрав его после приземления воздушной посылки.\n\n"},
	{""G"Призовой фонд составляет:\n\n"},
	{"\t"ORANGE"1 место - 100% от бюджета мероприятия\n"}
};

new Float:spawns_pos_golod[][21] = {
	{511.1205,3411.7109,1.7684,99.0891}, // 1
	{509.9627,3396.8550,1.7684,72.1423}, // 2
	{504.6795,3382.9170,1.7684,57.1023}, // 3
	{495.4037,3371.1836,1.7684,33.2888}, // 4
	{482.9640,3362.9731,1.7684,18.5619}, // 5
	{468.7217,3358.4131,1.7684,9.7884}, // 6
	{453.8185,3358.3726,1.7684,359.4482}, // 7
	{439.4697,3362.7666,1.7684,334.0680}, // 8
	{426.9885,3371.1084,1.7684,315.2679}, // 9
	{417.8222,3382.8037,1.7684,291.1411}, // 10
	{412.2269,3396.7642,1.7684,283.3079}, // 11
	{411.1539,3411.7212,1.7684,273.5945}, // 12
	{414.4911,3426.2949,1.7684,247.2741}, // 13
	{421.9019,3439.3760,1.7684,229.4139}, // 14
	{433.0515,3449.2075,1.7684,217.5071}, // 15
	{446.3200,3455.8037,1.7684,202.7803}, // 16
	{461.1968,3458.0762,1.7684,194.9469}, // 17
	{475.9952,3455.8101,1.7684,177.0867}, // 18
	{489.4095,3449.4893,1.7684,159.5399}, // 19
	{500.4183,3439.2100,1.7684,133.8463}, // 20
	{507.6727,3426.1934,1.7684,103.4528} // 21
};
new Float:pickup_game_golod[][21] = {
	{477.4199,3420.0537,2.5208}, // сумка 1
	{483.0627,3407.4302,2.5208}, // сумка 2
	{485.4454,3397.5142,2.5208}, // сумка 3
	{484.5856,3392.6943,2.5208}, // сумка 4
	{481.7088,3391.8286,2.5208}, // сумка 5
	{478.2400,3390.9438,2.5208}, // сумка 6
	{463.9134,3387.8848,2.5208}, // сумка 7
	{451.6201,3385.4824,2.5208}, // сумка 8
	{448.5182,3388.5239,2.5208}, // сумка 9
	{448.0757,3391.3525,2.5208}, // сумка 10
	{447.4832,3394.5737,2.5208}, // сумка 11
	{446.5945,3401.0376,2.5208}, // сумка 12
	{444.3455,3413.2827,2.5208}, // сумка 13
	{442.8724,3418.9351,2.5208}, // сумка 14
	{445.3425,3423.0034,2.5208}, // сумка 15
	{448.0399,3423.3066,2.5208}, // сумка 16
	{451.7747,3424.2412,2.5208}, // сумка 17
	{466.9659,3427.0801,2.5208}, // сумка 18
	{476.5350,3428.8726,2.5208}, // сумка 19
	{481.1384,3426.8359,2.5208}, // сумка 20
	{481.2592,3423.7212,2.5208} // сумка 21
};
new pickups_game_golod[21] = -1;

new Float:pickup_game_golod_2[][21] = {
	{583.48,3429.419,7.0},
	{563.262,3481.784,13.5},
	{521.769,3504.372,9.0},
	{574.850,3373.640,13.5},
	{426.755,3497.690,12.0},
	{480.709,3288.237,9.963},
	{384.965,3510.70,11.958},
	{347.324,3369.504,11.3},
	{376.239,3316.323,12.3},
	{528.836,3595.626,49.0},
	{329.494,3417.427,17.2},
	{605.253,3251.989,47.0},
	{672.387,3300.246,63.0},
	{306.292,3520.320,48.9},
	{543.147,3205.829,50.8},
	{328.103,3560.866,45.7},
	{275.63,3453.482,45.4},
	{467.36,3657.813,43.4},
	{409.763,3658.840,68.9},
	{371.728,3185.230,71.1},
	{240.421,3495.499,76.3}
};
new Float:pickup_game_objmoved[][21] = {
	{583.48,3429.419,14.667,4.0},
	{563.262,3481.784,20.909,4.0},
	{521.769,3504.372,16.520,4.0},
	{574.850,3373.640,20.903,4.0},
	{426.755,3497.690,19.446,4.0},
	{480.709,3288.237,17.363,4.0},
	{384.965,3510.70,19.258,4.0},
	{347.324,3369.504,18.869,4.0},
	{376.239,3316.323,19.763,4.0},
	{528.836,3595.626,56.527,4.0},
	{329.494,3417.427,24.715,4.0},
	{605.253,3251.989,54.549,4.0},
	{672.387,3300.246,70.55,4.0},
	{306.292,3520.320,56.196,4.0},
	{543.147,3205.829,58.158,4.0},
	{328.103,3560.866,53.172,4.0},
	{275.63,3453.482,51.841,4.0},
	{467.36,3657.813,50.704,4.0},
	{409.763,3658.840,76.13,4.0},
	{371.728,3185.230,78.460,4.0},
	{240.421,3495.499,83.751,4.0}
};
new game_players[3];
new pickups_game_golod_2[21] = -1;
new area_golod[21];
new time_gamegolod = 0;
new player_to_golod[MAX_PLAYERS];
new open_gamegolod = 0;
new players_in_golod = 0;
new player_to_golod_id[MAX_PLAYERS];
new golod_use_pickup[MAX_PLAYERS];
new money_in_golod = 0;
new golod_start = 0;
new time_golod;
new Float:pickup_game_obj[][21] = {
	{607.48,3369.419,62.667,4.000,13.000,-32.860},
	{587.262,3421.784,68.909,0.000,0.000,0.000},
	{545.769,3444.372,64.520,11.000,0.000,0.000},
	{598.850,3313.640,68.903,0.000,0.000,-90.120},
	{450.755,3437.690,67.446,10.000,0.000,13.380},
	{504.709,3228.237,65.363,10.000,3.000,129.311},
	{408.965,3450.70,67.258,10.000,0.000,0.000},
	{371.324,3309.504,66.869,10.000,3.000,166.391},
	{400.239,3256.323,67.763,10.000,3.000,129.312},
	{552.836,3535.626,104.527,18.000,0.000,-16.000},
	{353.494,3357.427,72.715,10.000,3.000,0.079},
	{629.253,3191.989,102.549,0.000,0.000,48.720},
	{696.387,3240.246,118.55,-7.000,-10.000,2.000},
	{330.292,3460.320,104.196,20.000,0.000,17.000},
	{567.147,3145.829,106.158,0.000,0.000,0.000},
	{352.103,3500.866,101.172,15.000,0.000,53.000},
	{299.63,3393.482,100.841,11.000,0.000,69.480},
	{491.36,3597.813,98.704,-19.000,0.000,-69.419},
	{433.763,3598.840,124.13,0.000,0.000,0.000},
	{395.728,3125.230,126.460,-19.000,0.000,-2.000},
	{264.421,3435.499,131.751,-30.000,0.000,-67.000}
};

new random_car_race_lv = INVALID_VEHICLE_ID;
new car_id_race_lv[] ={495,502,506,559,560,562,568,587,603,451,411};

new open_race_lv = 0; // если 0 - рега закрыта, 1 - открыта
new time_registr_race_lv; // время на регистрацию
new players_in_race_lv; // количество игроков зарегалось
new money_in_race_lv; // бюджет регистрации
new time_race_lv; // игра началась или нет
new race_lv_start = 0;
new player_to_race_lv[MAX_PLAYERS];
new player_to_race_lv_id[MAX_PLAYERS];
new player_car_race_lv_id[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new race_lead_lv = 0;
new race_type = 0;

new Float:gRaceCPs[3][49][4] = {
	{// город
		{0.0,-1593.1674,995.8550,6.7661},
		{0.0,-1559.2784,713.1943,6.7661},
		{0.0,-1731.9357,321.2237,6.7583},
		{0.0,-1760.4103,325.8777,7.1245},
		{0.0,-1820.8859,380.7706,16.7357},
		{0.0,-1848.5409,365.2331,17.4409},
		{0.0,-1897.2014,95.6595,37.8657},
		{0.0,-1910.8467,-262.3996,37.9693},
		{0.0,-1910.7738,-577.5660,37.9615},
		{0.0,-1910.9318,-963.2586,42.4246},
		{0.0,-1907.5707,-1217.4100,39.2115},
		{0.0,-1911.0490,-1354.6622,40.1021},
		{0.0,-1956.8323,-1341.4967,40.1605},
		{0.0,-2093.4607,-1124.2417,30.1528},
		{0.0,-2219.6184,-921.2327,43.4467},
		{0.0,-2221.3218,-747.5360,63.7629},
		{0.0,-2349.4438,-724.1194,105.8035},
		{0.0,-2422.8469,-609.0765,132.2896},
		{0.0,-2506.4609,-482.6401,91.8960},
		{0.0,-2623.9351,-500.7565,70.6256},
		{0.0,-2489.5293,-443.8438,77.3281},
		{0.0,-2353.6812,-459.1245,79.9845},
		{0.0,-2336.3044,-421.2580,79.2547},
		{0.0,-2443.2471,-368.6861,70.0947},
		{0.0,-2675.7188,-425.3551,31.5907},
		{0.0,-2681.5325,-523.8073,16.5806},
		{0.0,-2774.8213,-495.3371,6.9114},
		{0.0,-2734.9756,-431.2374,6.9789},
		{0.0,-2557.7732,-345.0942,24.4528},
		{0.0,-2272.2705,-347.4919,39.2546},
		{0.0,-2075.9956,-350.9016,35.0318},
		{0.0,-2037.8602,-335.3759,35.0317},
		{0.0,-2005.3221,-137.4541,35.4380},
		{0.0,-2006.3556,138.6625,27.2661},
		{0.0,-2003.4937,384.4902,34.7427},
		{0.0,-2004.1002,542.3316,34.7427},
		{0.0,-2099.6802,565.8253,34.7431},
		{0.0,-2226.9331,565.7338,34.7483},
		{0.0,-2256.5208,591.7636,37.7843},
		{0.0,-2256.2234,905.8365,66.2233},
		{0.0,-2258.5522,1085.7393,79.5879},
		{0.0,-2260.9167,1251.9984,43.2102},
		{0.0,-2059.8630,1275.2407,8.0363},
		{0.0,-1863.7690,1337.6692,6.7739},
		{1.0,-1618.1641,1199.9156,6.7661},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},//
	{// бездорожье
		{0.0,-1864.4503,-2381.2229,31.5846},
		{0.0,-1718.3188,-2294.7283,45.2318},
		{0.0,-1678.9152,-2176.0771,36.4075},
		{0.0,-1708.6892,-2106.5313,40.5838},
		{0.0,-1832.3588,-2087.7468,56.0560},
		{0.0,-1952.9957,-2060.5771,69.7296},
		{0.0,-1945.8071,-1954.0258,78.5620},
		{0.0,-1857.0730,-1927.6558,88.4337},
		{0.0,-1691.0414,-1912.4009,98.2297},
		{0.0,-1581.9554,-1891.6198,84.9697},
		{0.0,-1518.2130,-1839.8138,67.3244},
		{0.0,-1475.8656,-1782.2496,50.6363},
		{0.0,-1430.3173,-1873.5522,33.5106},
		{0.0,-1411.3867,-2034.2435,1.0000},
		{0.0,-1350.2726,-2042.8008,9.2772},
		{0.0,-1306.4934,-2118.4250,25.2313},
		{0.0,-1264.5914,-2263.1064,22.2187},
		{0.0,-1189.5835,-2355.5100,19.3239},
		{0.0,-1055.4319,-2373.8184,49.7934},
		{0.0,-967.9534,-2357.7893,63.5209},
		{0.0,-954.4967,-2319.0549,58.7685},
		{0.0,-954.9092,-2214.7622,40.3016},
		{0.0,-895.7296,-2182.9709,29.5663},
		{0.0,-798.3245,-2157.1934,22.2218},
		{0.0,-814.7314,-2059.7971,24.9278},
		{0.0,-857.7783,-1976.6576,16.9916},
		{0.0,-735.8377,-1860.4415,12.9406},
		{0.0,-670.8856,-1925.7917,10.9450},
		{0.0,-676.0182,-2090.8599,24.7597},
		{0.0,-783.4732,-2136.5078,25.4185},
		{0.0,-888.4941,-2181.9814,28.5519},
		{0.0,-948.7108,-2195.7961,38.2576},
		{0.0,-936.2672,-2352.7488,58.5742},
		{0.0,-786.4156,-2465.2830,75.9324},
		{0.0,-709.3486,-2352.2390,40.8819},
		{0.0,-592.4052,-2384.5251,27.7612},
		{0.0,-658.4496,-2479.5637,34.5280},
		{0.0,-710.3221,-2609.6077,72.9349},
		{0.0,-777.1717,-2687.0247,83.4813},
		{0.0,-917.7076,-2668.3259,86.0870},
		{0.0,-1091.5773,-2669.1135,25.7622},
		{0.0,-1230.5806,-2637.0510,9.0866},
		{0.0,-1367.1473,-2632.0386,26.7262},
		{0.0,-1512.8129,-2634.5842,48.5268},
		{0.0,-1644.1321,-2622.4631,47.2647},
		{0.0,-1771.0397,-2502.6235,9.2780},
		{1.0,-1880.7358,-2432.5237,32.6747},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},//
	{// картинг
		{0.0,-1423.0721,-133.5238,1044.2628},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{1.0,-1404.6044,-155.3698,1043.1080},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	}
};

new Float:spawns_car_race_kart[][25] = {
	{-1402.4996, -207.0603, 1042.3719, 0.0000},
	{-1400.2638, -207.0603, 1042.3754, 0.0000},
	{-1397.8931, -207.0603, 1042.3781, 0.0000},
	{-1395.7288, -207.0603, 1042.3805, 0.0000},
	{-1393.3668, -207.0603, 1042.3831, 0.0000},
	{-1402.4996, -210.0510, 1042.3781, 0.0000},
	{-1400.2638, -210.0510, 1042.3818, 0.0000},
	{-1397.8931, -210.0510, 1042.3859, 0.0000},
	{-1395.7288, -210.0510, 1042.3884, 0.0000},
	{-1393.3668, -210.0510, 1042.3910, 0.0000},
	{-1402.4996, -213.1461, 1042.3794, 0.0000},
	{-1400.2638, -213.1461, 1042.3892, 0.0000},
	{-1397.8931, -213.1461, 1042.3923, 0.0000},
	{-1395.7288, -213.1461, 1042.3956, 0.0000},
	{-1393.3668, -213.1461, 1042.3932, 0.0000},
	{-1402.4996, -216.1665, 1042.4006, 0.0000},
	{-1400.2638, -216.1665, 1042.3590, 0.0000},
	{-1397.8931, -216.1665, 1042.3999, 0.0000},
	{-1395.7288, -216.1665, 1042.4026, 0.0000},
	{-1393.3668, -216.1665, 1042.4080, 0.0000},
	{-1402.4996, -219.2523, 1042.4167, 0.0000},
	{-1400.2638, -219.2523, 1042.4226, 0.0000},
	{-1397.8931, -219.2523, 1042.4073, 0.0000},
	{-1395.7288, -219.2523, 1042.4249, 0.0000},
	{-1393.3668, -219.2523, 1042.4327, 0.0000}
};
new Float:spawns_car_race_sity[][25] = {
	{-1626.8721, 1216.4556, 6.7722, 225.0000},
	{-1632.9271, 1210.5011, 6.7533, 225.0000},
	{-1632.3458, 1221.9630, 6.7671, 225.0000},
	{-1638.5345, 1215.9559, 6.7662, 225.0000},
	{-1638.4059, 1227.9788, 6.7671, 225.0000},
	{-1644.5020, 1221.8387, 6.7661, 225.0000},
	{-1644.3997, 1233.8173, 6.7671, 225.0000},
	{-1650.5052, 1227.5979, 6.7672, 225.0000},
	{-1650.2097, 1239.5116, 6.7671, 225.0000},
	{-1656.4216, 1233.3439, 6.7671, 225.0000},
	{-1656.1857, 1245.1952, 6.7709, 225.0000},
	{-1662.3087, 1238.9772, 6.7669, 225.0000},
	{-1662.2899, 1251.0956, 6.7772, 225.0000},
	{-1668.2368, 1244.9404, 6.7671, 225.0000},
	{-1667.9672, 1256.5748, 6.7777, 225.0000},
	{-1673.7991, 1250.6311, 6.7670, 225.0000},
	{-1673.7429, 1262.3813, 6.7592, 225.0000},
	{-1679.5250, 1256.4894, 6.7950, 225.0000},
	{-1679.6475, 1268.3621, 6.7671, 225.0000},
	{-1685.3892, 1262.6636, 6.7660, 225.0000},
	{-1685.3733, 1274.2111, 6.7672, 225.0000},
	{-1691.0829, 1268.3452, 6.7671, 225.0000},
	{-1690.8152, 1279.7847, 6.7661, 225.0000},
	{-1696.7572, 1274.0592, 6.7663, 225.0000},
	{-1696.3383, 1285.2871, 6.7662, 225.0000}
};
new Float:spawns_car_race_desert[][25] = {
	{-1928.6108, -2434.7722, 30.3596, 315.0000},
	{-1926.0165, -2437.4097, 30.3584, 315.0000},
	{-1923.4214, -2440.0471, 30.3579, 315.0000},
	{-1920.8254, -2442.6819, 30.3619, 315.0000},
	{-1918.2297, -2445.3201, 30.3607, 315.0000},
	{-1923.8497, -2450.6912, 30.3573, 315.0000},
	{-1926.2788, -2448.1880, 30.3531, 315.0000},
	{-1928.9128, -2445.5024, 30.3588, 315.0000},
	{-1931.5558, -2443.0854, 30.3528, 315.0000},
	{-1934.2892, -2440.4890, 30.3499, 315.0000},
	{-1939.2938, -2445.7158, 30.3620, 315.0000},
	{-1936.7200, -2448.2480, 30.3638, 315.0000},
	{-1934.1202, -2450.8022, 30.3679, 315.0000},
	{-1931.5591, -2453.3091, 30.4019, 315.0000},
	{-1928.9017, -2455.8230, 30.4710, 315.0000},
	{-1933.9561, -2460.9844, 30.6104, 315.0000},
	{-1936.4891, -2458.2773, 30.5352, 315.0000},
	{-1938.9983, -2455.6040, 30.4634, 315.0000},
	{-1941.4366, -2453.0049, 30.3984, 315.0000},
	{-1944.0645, -2450.2112, 30.3717, 315.0000},
	{-1949.2622, -2455.4006, 30.3631, 315.0000},
	{-1946.6733, -2457.9849, 30.4673, 315.0000},
	{-1944.1763, -2460.4136, 30.5923, 315.0000},
	{-1941.3196, -2463.2275, 30.6701, 315.0000},
	{-1938.7661, -2465.7358, 30.7351, 315.0000}
};
new game_info_race_lv[][] = {
	{"{FFFFFF}Безумные гонки, победит тот - кто первый доедет до финиша.\n"},
	{"Минимальный взнос для участия в мероприятии составляет "ORANGE"$1000"W".\n"},
	{"Максимальный взнос для участия в мероприятии составляет "ORANGE"$10000$"W".\n\n"},
	{"Возможные Автомобили: \n\t"P"Sandking, Hotring Racer, Super GT, Jester, Sultan\n"},
	{"\tElegy, Bandito, Euros, Phoenix, Infernus, Turismo\n\n"},
	{""G"Призовой фонд составляет:\n\n"},
	{""ORANGE"\t1 место - 50% от бюджета мероприятия\n"},
	{"\t2 место - 30% от бюджета мероприятия\n"},
	{"\t3 место - 20% от бюджета мероприятия\n"}
};

new ped_buyclothes[79][2] ={
	{95,5000},
	{50,10000},
	{15,10000},
	{35,10000},
	{25,10000},
	{36,10000},
	{96,10000},
	{155,10000},
	{143,10000},
	{44,20000},
	{24,30000},
	{37,40000},
	{2,45000},
	{3,45000},//
	{6,50000},
	{7,50000},//
	{14,50000},
	{47,50000},
	{67,50000},
	{142,50000},//
	{23,65000},//
	{72,70000},
	{22,80000},//
	{68,80000},
	{220,100000},
	{18,125000},
	{45,125000},
	{97,125000},
	{21,125000},
	{60,125000},//
	{182,150000},
	{262,150000},//
	{250,150000},
	{121,150000},
	{183,150000},
	{184,150000},//
	{30,175000},//
	{19,175000},
	{20,175000},//
	{4,225000},
	{5,225000},
	{259,250000},//
	{17,250000},
	{180,250000},//
	{208,250000},//
	{185,300000},
	{289,300000},
	{28,325000},
	{29,325000},
	{119,350000},
	{290,350000},
	{291,350000},
	{292,350000},
	{293,350000},
	{82,380000},
	{83,380000},//
	{84,380000},
	{101,400000},//
	{241,400000},
	{242,400000},
	{295,400000},
	{297,400000},
	{296,450000},//
	{249,500000},
	{299,500000},
	{46,700000},
	{294,700000},//67
	{55, 10000},//женские
	{90, 10000},
	{13, 10000},
	{192, 10000},
	{193, 10000},
	{224, 50000},
	{12, 100000},
	{190, 100000},
	{40, 100000},
	{298, 300000},
	{93, 600000},
	{233, 600000} // 79
};
enum fun_bizz {
	funcbSlot,
	funcbID,
	funcbName[20],
	funcbNameCar[12],
	funcbNum,
	funcbTarif[4],
	funcbCar[20],
	funcbBank[15],
	funcbColor,
	funcbShash,
	funcbPercent,
	Float:funcbPercent2,
	funcbPercent3,
	funcbCarID[20],
	funcbCars[20]

}
new FuncBizz[MAX_BUSINESS_COUNT][fun_bizz];
enum bizz_car
{
	carbID,
	carbBizz,
	carbCarSlot,
	carbModel,
Float: carbPosX,
Float: carbPosY,
Float: carbPosZ,
Float: carbPosR

}
new CarsBizz[MAX_BUSINESS_COUNT][bizz_car];

enum col_td {
	col_id,
	col_rgb[16],
	col_shash[16],
	col_car,
}
new taxi_class[6][24] = {"Эконом","Комфорт","Микроавтобус","Бизнес","Управляющий","Руководитель"};
new tk_class[3][24] = {"Водитель","Управляющий","Руководитель"};
enum  {
	iconTaxi
}
new static color_td[22][col_td] = {
	{-1,"ffffff",0xFFFFFFFF, 1},
	{930150143,"3770f6",0xFF3770F6, 2},
	{945198335,"385694",0xFF385694, 108},
	{-1554021121,"a35f84",0xFFA35F84, 232},
	{-328487169,"ec6bae",0xFFEC6BAE, 126},
	{831820287,"319491",0xFF319491, 240},
	{-1521069569,"a55651",0xFFA55651, 161},
	{1160383999,"452a0d",0xFF452A0D, 131},
	{-1433256961,"aa923b",0xFFAA923B, 228},
	{-1553384961,"a36939",0xFFA36939, 219},
	{-1674829569,"9c2c20",0xFF9C2C20, 158},
	{513427199,"1e9a46",0xFF1E9A46, 154},
	{444537343,"1a7f19",0xFF1A7F19, 229},
	{-1886631937,"8f8c47",0xFF8F8C47, 65},
	{-1365606401,"ae9a7f",0xFFAE9A7F, 99},
	{2084470783,"7c3e7f",0xFF7C3E7F, 178},
	{-1726078465,"991e21",0xFF991E21, 175},
	{-1701305857,"9a9821",0xFF9A9821, 194},
	{-712109825,"d58e10",0xFFD58E10, 6},
	{-2061554177,"042023",0xFF042023, 237},
	{623127039,"000000",0x000000AA, 0},
	{-1,"ffffff",0xFFFFFFFF, 1}
};
new biz_text[MAX_FUNCBIZZ];
new select_member[MAX_PLAYERS][36];
new taxi_car[7][2] = {
	{426,0},//эконом premier
	{438,0},//эконом cabbie
	{540,1},//комфорт vincent
	{550,1},//комфорт sunrise
	{560,3},//элитный sultan
	{580,3},//элитный stafford
	{483,2}//микроавтобус camper
};
new tk_car[3][2] = {
	{403,10000},
	{514,12000},
	{515,15000}
};
new Float:tk_wood[5][4] = {
	{260.9107, 1359.6311, 11.5590, 0.0000},
	{266.4707, 1359.6311, 11.5590, 0.0000},
	{272.0701, 1359.6311, 11.5590, 0.0000},
	{277.6099, 1359.6311, 11.5590, 0.0000},
	{283.4688, 1359.6311, 11.5590, 0.0000}
};
new Float:tk_gun[5][4] = {
	{2638.3792,-2377.5378,14.6545,179.6357},// 1
	{2632.4897,-2377.5396,14.6645,179.6178},// 2
	{2626.2043,-2377.6802,14.6628,181.1803},// 3
	{2619.8586,-2377.6594,14.6693,181.0333},// 4
	{2613.2920,-2377.6545,14.6742,180.4115}// 5
};
new tuningtaxi_text[4][20];
new tuningtaxi_text_1[4][20];
new tuningtaxi[4][20];
new tuningtaxi_1[4][20];
new tuningtaxi_shash[4][20];
enum HOUSE_DATA {
	houseID,	
	houseClass,
	houseApartmentCount,
	housePrice,
	houseHint,
	houseImprove[6],
	houseGun[9],
	houseSkin[3],
	houseSafeCode,
	houseSafeMoney,
	houseHealth,
	houseDrugs,
	houseProducts,
	houseClose,
	Float:houseX,
	Float:houseY,
	Float:houseZ,
	Float:houseR,
	Float:houseParkX,
	Float:houseParkY,
	Float:houseParkZ,
	Float:houseParkR,	
	houseOwnerID,
	houseOwner[MAX_PLAYER_NAME],
	houseHabitID[3],
	houseDay,
	bool:houseRob,
	/*hWall				[ 10 ],	// Стены
	hFloor				[ 10 ],	// Полы
	hRoof				[ 7 ],	// Потолки
	hStairs,
	hCountFurn,*/
	houseFamily
}

new gHouses[MAX_HOUSE_COUNT][HOUSE_DATA],
	gHouseArendator[MAX_HOUSE_COUNT][3][MAX_PLAYER_NAME],
	gHouseArea[MAX_HOUSE_COUNT],
	gHousePickup[MAX_HOUSE_COUNT],
	gHouseIcon[MAX_HOUSE_COUNT],
	gHouseCount, gHouseTotalCount = 0;
	
new gHouseImprovePriceN[3] = {10000,20000,25000},
	gHouseImprovePriceD[3] = {25000,60000,65000},
	gHouseImprovePriceB[3] = {75000,110000,115000},
	gHouseImprovePriceA[3] = {125000,160000,165000},
	gHouseImproveName[3][36] = {"Автоматические двери","Снижение субсидий","Гараж"};

enum hotelInfo{
	hotelID,
	hotelName[64],
	hotelOwnerID,
	hotelOwner[MAX_PLAYER_NAME],
	hotelPrice,
	hotelCoast,
	hotelBank,
	hotelBankDay,
	hotelVisitors,
	Float:hotelAreaX,
	Float:hotelAreaY,
	Float:hotelAreaZ,
    hotelLevel,
    hotelVW[8],
    Float:hotelParkX,
	Float:hotelParkY,
	Float:hotelParkZ,
	Float:hotelParkR,
	hotelDay,
	Float:carX,
	Float:carY,
	Float:carZ,
	Float:carC
};
new Text3D: gHotelText[HOTEL_COUNT],
	gHotelArea[HOTEL_COUNT],
	gHotelCount,
	gHotels[HOTEL_COUNT][hotelInfo];

enum roomInfo {
	roomsID,
    roomsOwner[MAX_PLAYER_NAME],
	Float:roomsEnterX,
	Float:roomsEnterY,
	Float:roomsEnterZ,
	Float:roomsEnterR,
    roomsDoors,
    roomsWorld,
    roomsDay,
    roomsHotel
};
new gRooms[240][roomInfo],
	gRoomsCount,
	Text3D:gRoomText[240];
	
enum pic_info
{
	e_id,
Float:e_x,
Float:e_y,
Float:e_z,
Float:e_r,
Float:v_x,
Float:v_y,
Float:v_z,
Float:v_r,
	e_int,
	e_world,
Text3D:p_text_enter,
Text3D:p_text_exit,
	p_pic_enter,
	p_pic_exit,
	e_types,
	e_dostup,
	e_fraction
};
new e_info[MAX_ENTER_PICKUPS][pic_info],
	gEnterCount;

enum ac_info {
	acID,
    acName[64],
	acValue
};
new AntiCheat[53][ac_info];

enum airportInfo {
	airID,
	airName[64],
	airOwnerID,
	airOwner[MAX_PLAYER_NAME],
	airPrice,
	airCoast,
	airBank,
	Float:airAreaX,
	Float:airAreaY,
	Float:airAreaZ,
	airDay
};
new Text3D:gAirText[AIR_COUNT],
	gAirArea[AIR_COUNT],
	gAirCount,
	gAirs[AIR_COUNT][airportInfo];

enum family_data {
	famID,
	famColor,
	famCName[32],
	famName[32],
	famDate[32],
	famCOwner[MAX_PLAYER_NAME],
	famOwner[MAX_PLAYER_NAME],
	famDrugs,
	famMats,
	famInvRang,
	famUninvRang,
	famGiveRang,
	famSklad,
	famMessage[71],
	famExp,
	famLvl,
	famPoint,
	famDrugsMax,
	famMatsMax,
	famFuel,
	famFuelMax,
	famRemp,
	famRempMax,
	famArmour,
	famArmourMax,
	famHealth,
	famHealthMax,
	famMask,
	famMaskMax,
	famMoney,
	famMoneyMax,
	famHouse,
	famType
}
new gFamily[FAMILY_COUNT][family_data];
new FamRanks[FAMILY_COUNT][9][24];
new Text3D:fam_lable[MAX_PLAYERS] = {Text3D:-1, ...};
new FamilyColor[13][7] ={"FFFFFF","AFAFAF","33AA33","FF0000","FFFF00","FFD700","dc6a26","2C8BDE","98F5FF","DD90FF","63cb00","54FF9F","6B8E23"};
new FamilyColorG[13] ={COLOR_WHITE,0xAFAFAFAA,0x33AA33AA,0xFF0000AA,0xFFFF00FF,0xFFD700FF,0xdc6a26AA,0x2C8BDEAA,0x98F5FFFF,0xDD90FFFF,0x63cb00FF,0x54FF9FFF,0x6B8E23FF};

new fam_point_upgrade[21] = {3000,4500,6000,8500,10000,11800,13600,15400,17200,19000,20800,22600,24400,26200,28000,29800,31600,33400,35200,37000,99999999999999};

new FamilyMoneyUpdate[20] = {10000,50000,100000,200000,300000,400000,500000,1000000,2000000,3000000,5000000,8000000,10000000,15000000,20000000,25000000,30000000,35000000,40000000,50000000};
new FamilyDrugsUpdate[20] = {500,800,1100,1400,1700,2000,2300,2600,2900,3200,3500,3800,4100,4400,4700,5000,5300,5600,5900,6200};
new FamilyMatsUpdate[20] = {10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,110000,120000,130000,140000,150000,160000,170000,180000,190000,200000};
new FamilyFuelUpdate[20] = {5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
new FamilyRempUpdate[20] = {5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
new FamilyArmourUpdate[20] = {3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};
new FamilyMaskUpdate[20] = {5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
new FamilyHealthUpdate[20] = {10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200};

#define MAX_QUESTS 10
enum QuestInfo {
	QuestName[64],
	QuestText[1024],
	LastProgress
}
new QI[MAX_QUESTS][QuestInfo] = {
	{"","",70},
	{"Сбор яблок",""G"Привет! Мы рады видеть тебя в нашем Штате,\nдля того чтобы заработать первые деньги тебе нужно отправиться\nв Яблочный сад и собрать 40кг яблок, за каждый килограмм тебе хорошо заплатят.\n\n"ORANGE"Задача: Собрать 40кг яблок\n"P"Награда: "GREEN"$8000",40},
	{"Сбор оружия",""G"Слышал о нашем заводе по производству оружия?\nНужна твоя помощь в сборке оружия,\nработа легальная и хорошо оплачиваемая. Отправляйся на завод и собери 15 единиц оружия.\n\n"ORANGE"Задача: Собрать 15 ед оружия\n"P"Награда: "GREEN"$8000",15},
	{"Грузчик",""G"Влиятельные люди платят неплохие деньги за каждую бочку нефти,\nвникни в суть дела и помоги перенести 10 бочек с нефтью, возможно ты следующий нефтяной магнат.\n\n"ORANGE"Задача: Перенести 10 бочек с нефтью\n"P"Награда: "GREEN"$8000",10},
	{"Лесоруб",""G"Ну ты прям трудоголик, дружище, последнее задание для тебя.\nСрочно требуется рабочая сила на завод по переработке древесины,\nсруби и перенеси 20 ед древесины и получи от меня награду.\n\n"ORANGE"Задача: Срубить и перенести 20 ед древесины\n"P"Награда: "GREEN"$10000",20},

	{"Вор",""G"Первое задание для тебя!\nПроберись на склад армий,\nи укради 500 ед боеприпасов.\n\n"ORANGE"Задача: Украсть 500 ед боеприпасов.\n"P"Награда: "GREEN"$5000",500},
	{"Грабитель",""G"На наших районах появились богатые жильцы.\nНе хочешь украсть у них денег?\nСтупай и ограбь 15 домов.\n\n"ORANGE"Задача: Ограбить 15 домов (/robhouse)\n"P"Награда: "GREEN"$7000",15},
	{"Продавец",""G"Заработай на продаже оружия.\nНайди 10 людей, которе хотят пострелять, и продай им любое оружие.\n\n"ORANGE"Задача: Продать оружие 10 игрокам\n"P"Награда: "GREEN"$7000",10},
	{"Тащер",""G"Говорят ты уже опытный бандит.\nТак вот, убей 20 игроков во время войны (капта),\nя тебе за это хорошо заплачу. Да и авторитет свой повысишь\n\n"ORANGE"Задача: Убить 20 игроков во время капта\n"P"Награда: "GREEN"$10000",20},
	{"Провокатор",""G"Время последнего задания!\nСпровоцируй войну за территорию с другой бандой.\nСтань лучшим провокатором своей банды!\n\n"ORANGE"Задача: Спровоцировать войну за территорию\n"P"Награда: "GREEN"$20000",1}
};
new QuestProgress[MAX_PLAYERS][MAX_QUESTS];
new QuestShow[MAX_PLAYERS][MAX_QUESTS];
new AcceptQuest[MAX_PLAYERS][MAX_QUESTS];
new QuestClick[MAX_PLAYERS];

enum AIRPLANE_DATA {
	aID,
	aAirport,
	aPlane,
    aOwner[24],
	aTime,
    aPrice,
    aCar,
    Float:aFuel,
    Float:aPos[4],
    Text3D:aText
}
new gAirplanes[34][AIRPLANE_DATA];

enum B_INFO {
    bObjectID,
	bObjectModel,
	Float:bPos[4],
    bPosText[32],
	bText[144],
	bOwner[MAX_PLAYER_NAME],
	bOwned,
	bBackColor,
	bFontFace,
	bAligment,
	bFontSize,
	bDay
};
new BildInfo[MAX_BILLBORDS][B_INFO];
new Colors_BIG[100] = { 0x000000,0xFFFFFF,0x20B2AA,0xDC143C,0x6495ED,0xf0e68c,0x778899,0xFF1493,0xF4A460,0xEE82EE,0xFFD720, 0x8b4513,0x4949A0,0x148b8b,0x14ff7f,0x556b2f,0x0FD9FA,0x10DC29,0x534081,0x0495CD,0xEF6CE8,0xBD34DA,
0x247C1B,0x0C8E5D,0x635B03,0xCB7ED3,0x65ADEB,0x5C1ACC,0xF2F853,0x11F891,0x7B39AA,0x53EB10,0x54137D, 0x275222,0xF09F5B,0x3D0A4F,0x22F767,0xD63034,0x9A6980,0xDFB935,0x3793FA,0x90239D,0xE9AB2F,0xAF2FF3,
0x057F94,0xB98519,0x388EEA,0x028151,0xA55043,0x0DE018,0x93AB1C,0x95BAF0,0x369976,0x18F71F,0x4B8987, 0x491B9E,0x829DC7,0xBCE635,0xCEA6DF,0x20D4AD,0x2D74FD,0x3C1C0D,0x12D6D4,0x48C000,0x2A51E2,0xE3AC12,
0xFC42A8,0x2FC827,0x1A30BF,0xB740C2,0x42ACF5,0x2FD9DE,0xFAFB71,0x05D1CD,0xC471BD,0x94436E,0xC1F7EC, 0xCE79EE,0xBD1EF2,0x93B7E4,0x3214AA,0x184D3B,0xAE4B99,0x7E49D7,0x4C436E,0xFA24CC,0xCE76BE,0xA04E0A,
0x9F945C,0xDCDE3D,0x10C9C5,0x70524D,0x0BE472,0x8A2CD7,0x6152C2,0xCF72A9,0xE59338,0xEEDC2D,0xD8C762, 0x3FE65C };

new Colors_LOW[][12] = { "000000","FFFFFF","20B2AA","DC143C","6495ED","f0e68c","778899","FF1493","F4A460","EE82EE","FFD720", "8b4513","4949A0","148b8b","14ff7f","556b2f","0FD9FA","10DC29","534081","0495CD","EF6CE8","BD34DA",
"247C1B","0C8E5D","635B03","CB7ED3","65ADEB","5C1ACC","F2F853","11F891","7B39AA","53EB10","54137D", "275222","F09F5B","3D0A4F","22F767","D63034","9A6980","DFB935","3793FA","90239D","E9AB2F","AF2FF3",
"057F94","B98519","388EEA","028151","A55043","0DE018","93AB1C","95BAF0","369976","18F71F","4B8987", "491B9E","829DC7","BCE635","CEA6DF","20D4AD","2D74FD","3C1C0D","12D6D4","48C000","2A51E2","E3AC12",
"FC42A8","2FC827","1A30BF","B740C2","42ACF5","2FD9DE","FAFB71","05D1CD","C471BD","94436E","C1F7EC", "CE79EE","BD1EF2","93B7E4","3214AA","184D3B","AE4B99","7E49D7","4C436E","FA24CC","CE76BE","A04E0A",
"9F945C","DCDE3D","10C9C5","70524D","0BE472","8A2CD7","6152C2","CF72A9","E59338","EEDC2D","D8C762","3FE65C" };

new skin_register[14][1] = {
    {78}, {79}, {137}, {94}, {200}, {212}, {26}, {230},
	
	{40}, {75}, {77}, {90}, {129}, {196}
};
stock SendDead(ids,whoids,killerid,playerid,reason) {
	foreach(new m:Player) {
		if(!TI[m][tLogin]) continue;
		if(PI[m][pMember] == ids || PI[m][pMember] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}
stock IsAMafia(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLCN,fYAKUZA,fRM: return 1;
	}
	return 0;
}
stock IsAGang(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: return 1;
	}
	return 0;
}
stock IsANews(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLSNEWS,fSFNEWS,fLVNEWS: return 1;
	}
	return 0;
}
stock DollahScoreUpdate(playerid) return SetPlayerScore(playerid, PI[playerid][pLevel]);

stock IsAMedic(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fMEDICLS,fMEDICSF,fMEDICLV: return 1;
	}
	return 0;
}
stock IsAMayor(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fMAYOR: return 1;
	}
	return 0;
}
stock IsAPD(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLSPD,fSFPD,fLVPD: return 1;
	}
	return 0;
}
stock IsACop(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLSPD,fSFPD,fLVPD,fFBI: return 1;
	}
	return 0;
}
stock IsAArm(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fARMYSF,fARMYLV: return 1;
	}
	return 0;
}
stock IsATaxi(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][bizz_work]) {
		case 2..4: return 1;
	}
	return 0;
}
stock IsATK(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PI[playerid][bizz_work]) {
		case 5..7: return 1;
	}
	return 0;
}
stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return 1;
	return 0;
}
stock SetPlayerToFacePlayer(playerid,targetid) {
    new Float:angle;
    GetPlayerFacingAngle(playerid, angle);
    SetPlayerFacingAngle(targetid,angle);
}

enum v_car {
	vSpawn,
	vColor[2],
	vPaintJob,
	vTuneList[13],
	vTeam,
	vRank,
	vJob,
	vBus,
	vBizz,
	vLights,
	vType,
	Float:vFuel,
	Float:vDrived,
	vPlayer,
	Float:veX,
	Float:veY,
	Float:veZ,
	Float:veA,
	Float:vEngineBoost,
	Float:vBrakeBoost,
	Float:vStabilityBoost,
	Float:vzAngle,
	vPEngine[5],
	vPBrake[5],
	vPerfStatus,
	bool:vRobHouse
}
new VehicleInfo[MAX_VEHICLES][v_car];
new VehicleState[MAX_VEHICLES];

enum v_gun {
	vgID,
	vgAmount[2],
	Text3D:vgText,
	bool:vgLoading,
	bool:vgUnloading,
	vgPickup,
	vgArea,
	vgDrugs,
	bool:vgRobHouse
}
new VG[MAX_VEHICLES][v_gun];

enum ARs {
	arZavod,
	arZavodSklad,
	arArmySFSklad,
	arArmyLVSklad,
	arOil[6],
	arLoadProds[2],
	arSad,
	arJob[6],
	arClothes[35],
	arPobeg[2],
	arManiken[18],
	arNews[2],
	arGripp[3],
	arPerfomans[2],
	arSpawn
}
new gAreas[ARs];

new Text3D:gun_3dtext[3],
	GunWorkWeapon[6] = {2044,2035,2036,2034,2033,1242},
	zavodsklad;
	
new gun_pickup[34],
	Float:gun_checkpoints[34][3] =
	{
		{311.7494,-210.6625,1006.5694}, // место оружейка 1
		{311.7658,-207.6715,1006.5694}, // место оружейка 2
		{311.7317,-213.6671,1006.5694}, // место оружейка 3
		{311.6341,-216.6622,1006.5694}, // место оружейка 4
		{306.0557,-216.6630,1006.5694}, // место оружейка 5
		{306.1685,-213.6704,1006.5694}, // место оружейка 6
		{306.0811,-210.6635,1006.5694}, // место оружейка 7
		{306.1038,-207.6708,1006.5694}, // место оружейка 8
		{300.7289,-207.6712,1006.5694}, // место оружейка 9
		{300.6749,-210.6631,1006.5694}, // место оружейка 10
		{300.6671,-213.6685,1006.5694}, // место оружейка 11
		{300.6900,-216.6620,1006.5694}, // место оружейка 12
		{295.0962,-216.6628,1006.5694}, // место оружейка 13
		{295.2259,-213.6695,1006.5694}, // место оружейка 14
		{295.0832,-210.6627,1006.5694}, // место оружейка 15
		{295.1392,-207.6697,1006.5694}, // место оружейка 16
		{287.7659,-209.4970,1006.5694}, // место оружейка 17
		{287.5916,-207.4492,1006.5694}, // место оружейка 18
		{287.5254,-211.4510,1006.5694}, // место оружейка 19
		{287.7769,-213.5034,1006.5694}, // место оружейка 20
		{287.6728,-215.4506,1006.5694}, // место оружейка 21
		{287.6812,-217.5079,1006.5694}, // место оружейка 22
		{282.2805,-217.5024,1006.5694}, // место оружейка 23
		{282.1395,-215.4507,1006.5694}, // место оружейка 24
		{282.2653,-213.5133,1006.5694}, // место оружейка 25
		{281.9489,-211.4457,1006.5694}, // место оружейка 26
		{282.3140,-209.5061,1006.5694}, // место оружейка 27
		{282.0548,-207.4477,1006.5694}, // место оружейка 28
		{276.5391,-207.4530,1006.5694}, // место оружейка 29
		{276.8022,-209.4992,1006.5694}, // место оружейка 30
		{276.6233,-211.4471,1006.5694}, // место оружейка 31
		{276.7637,-213.5045,1006.5694}, // место оружейка 32
		{276.4257,-215.4467,1006.5694}, // место оружейка 33
		{276.8652,-217.5007,1006.5694} // место оружейка 34
	};

new oilsklad,
	Text3D:oil_3dtext;

new pricedrugs;
new disease;

new Float:clothes_checkpoints[34][3] =
{
	{311.7494,-210.6625,1006.5694}, // место одежды 1
	{311.7658,-207.6715,1006.5694}, // место одежды 2
	{311.7317,-213.6671,1006.5694}, // место одежды 3
	{311.6341,-216.6622,1006.5694}, // место одежды 4
	{306.0557,-216.6630,1006.5694}, // место одежды 5
	{306.1685,-213.6704,1006.5694}, // место одежды 6
	{306.0811,-210.6635,1006.5694}, // место одежды 7
	{306.1038,-207.6708,1006.5694}, // место одежды 8
	{300.7289,-207.6712,1006.5694}, // место одежды 9
	{300.6749,-210.6631,1006.5694}, // место одежды 10
	{300.6671,-213.6685,1006.5694}, // место одежды 11
	{300.6900,-216.6620,1006.5694}, // место одежды 12
	{295.0962,-216.6628,1006.5694}, // место одежды 13
	{295.2259,-213.6695,1006.5694}, // место одежды 14
	{295.0832,-210.6627,1006.5694}, // место одежды 15
	{295.1392,-207.6697,1006.5694}, // место одежды 16
	{287.7659,-209.4970,1006.5694}, // место одежды 17
	{287.5916,-207.4492,1006.5694}, // место одежды 18
	{287.5254,-211.4510,1006.5694}, // место одежды 19
	{287.7769,-213.5034,1006.5694}, // место одежды 20
	{287.6728,-215.4506,1006.5694}, // место одежды 21
	{287.6812,-217.5079,1006.5694}, // место одежды 22
	{282.2805,-217.5024,1006.5694}, // место одежды 23
	{282.1395,-215.4507,1006.5694}, // место одежды 24
	{282.2653,-213.5133,1006.5694}, // место одежды 25
	{281.9489,-211.4457,1006.5694}, // место одежды 26
	{282.3140,-209.5061,1006.5694}, // место одежды 27
	{282.0548,-207.4477,1006.5694}, // место одежды 28
	{276.5391,-207.4530,1006.5694}, // место одежды 29
	{276.8022,-209.4992,1006.5694}, // место одежды 30
	{276.6233,-211.4471,1006.5694}, // место одежды 31
	{276.7637,-213.5045,1006.5694}, // место одежды 32
	{276.4257,-215.4467,1006.5694}, // место одежды 33
	{276.8652,-217.5007,1006.5694} // место одежды 34
};
new Float:clothes_works[34][3] =
{
	{311.7494,-210.6625,1006.5694}, // место одежды 1
	{311.7658,-207.6715,1006.5694}, // место одежды 2
	{311.7317,-213.6671,1006.5694}, // место одежды 3
	{311.6341,-216.6622,1006.5694}, // место одежды 4
	{306.0557,-216.6630,1006.5694}, // место одежды 5
	{306.1685,-213.6704,1006.5694}, // место одежды 6
	{306.0811,-210.6635,1006.5694}, // место одежды 7
	{306.1038,-207.6708,1006.5694}, // место одежды 8
	{300.7289,-207.6712,1006.5694}, // место одежды 9
	{300.6749,-210.6631,1006.5694}, // место одежды 10
	{300.6671,-213.6685,1006.5694}, // место одежды 11
	{300.6900,-216.6620,1006.5694}, // место одежды 12
	{295.0962,-216.6628,1006.5694}, // место одежды 13
	{295.2259,-213.6695,1006.5694}, // место одежды 14
	{295.0832,-210.6627,1006.5694}, // место одежды 15
	{295.1392,-207.6697,1006.5694}, // место одежды 16
	{287.7659,-209.4970,1006.5694}, // место одежды 17
	{287.5916,-207.4492,1006.5694}, // место одежды 18
	{287.5254,-211.4510,1006.5694}, // место одежды 19
	{287.7769,-213.5034,1006.5694}, // место одежды 20
	{287.6728,-215.4506,1006.5694}, // место одежды 21
	{287.6812,-217.5079,1006.5694}, // место одежды 22
	{282.2805,-217.5024,1006.5694}, // место одежды 23
	{282.1395,-215.4507,1006.5694}, // место одежды 24
	{282.2653,-213.5133,1006.5694}, // место одежды 25
	{281.9489,-211.4457,1006.5694}, // место одежды 26
	{282.3140,-209.5061,1006.5694}, // место одежды 27
	{282.0548,-207.4477,1006.5694}, // место одежды 28
	{276.5391,-207.4530,1006.5694}, // место одежды 29
	{276.8022,-209.4992,1006.5694}, // место одежды 30
	{276.6233,-211.4471,1006.5694}, // место одежды 31
	{276.7637,-213.5045,1006.5694}, // место одежды 32
	{276.4257,-215.4467,1006.5694}, // место одежды 33
	{276.8652,-217.5007,1006.5694} // место одежды 34
};

new fork_pickup,
	fork_pickups,
	Float:fork_allpickups[11][3] = {
		{1214.8530,2306.4580,1008.9139}, // вилка 1
		{1203.8088,2301.6340,1008.9139}, // вилка 2
		{1203.7101,2295.4634,1008.9139}, // вилка 3
		{1203.7124,2292.0486,1008.9139}, // вилка 4
		{1203.6594,2288.8381,1008.9139}, // вилка 5
		{1211.5032,2287.3240,1008.9139}, // вилка 6
		{1214.4635,2287.8840,1008.9139}, // вилка 7
		{1217.6741,2292.7222,1008.9139}, // вилка 8
		{1214.4635,2292.8457,1008.9139}, // вилка 9
		{1214.4635,2298.5601,1008.9139}, // вилка 10
		{1217.6741,2298.5061,1008.9139} // вилка 11
	};

new maniken[MAX_PLAYERS],
	Float:alcatraz_maniken[18][3] = {
		{753.66687, 588.01678, 1063.15625},
		{759.23547, 588.01678, 1063.15625},
		{760.66748, 588.01678, 1063.15625},
		{771.20062, 588.01678, 1063.15625},
		{776.71661, 588.01678, 1063.15625},
		{780.18860, 588.01678, 1063.15625},
		{780.22607, 588.01678, 1066.81628},
		{776.72803, 588.01678, 1066.79639},
		{771.18481, 588.01678, 1066.79639},
		{760.60321, 588.01678, 1066.79639},
		{759.21057, 588.03638, 1066.79639},
		{753.57727, 588.27856, 1066.79639},
		{753.55029, 588.15723, 1070.43628},
		{759.25525, 587.98145, 1070.43628},
		{760.63263, 588.07227, 1070.43628},
		{771.15869, 588.27612, 1070.43628},
		{776.71460, 588.00989, 1070.43628},
		{780.19446, 587.92993, 1070.43628}
	},
	Float:AlcatrazSpawns[18][4] = {
		{755.0739,589.0833,1063.3656,181.6186},
		{757.9329,589.1299,1063.3656,179.1118},
		{762.0038,589.0305,1063.3656,179.4253},
		{772.6663,589.0371,1063.3656,177.5454}, 
		{775.3486,588.9456,1063.3656,180.0523},
		{778.8930,588.8256,1063.3656,179.4256}, 
		{778.7370,588.8964,1067.0107,179.7387},
		{775.4164,588.8442,1067.0107,177.5455},
		{772.7256,588.9982,1067.0107,178.1488},
		{762.1152,588.9001,1067.0107,179.6921},
		{757.7969,588.7919,1067.0107,179.9820},
		{755.0713,589.0401,1067.0107,180.2721},
		{754.9739,589.1035,1070.6417,180.2487},
		{757.8131,589.0568,1070.6417,180.8754},
		{762.1030,588.8369,1070.6417,180.2488},
		{772.7346,589.0098,1070.6417,180.2493},
		{775.2703,589.1150,1070.6417,181.8159},
		{778.8127,588.7805,1070.6417,178.9958}
	};

stock IsAAlca(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
	
	if(PlayerToPoint(1.0,playerid,-2330.4792,317.6993,1002.0000)
	|| PlayerToPoint(1.0,playerid,-2340.8799,318.1218,1002.0000)
	|| PlayerToPoint(1.0,playerid,-2326.8237,341.9309,1002.0000)
	|| PlayerToPoint(1.0,playerid,-2332.2466,343.4677,1002.0000)
	|| PlayerToPoint(1.0,playerid,-2338.4895,343.0725,1002.0000)
	|| PlayerToPoint(1.0,playerid,-2339.5862,326.0733,1002.0000)
	|| PlayerToPoint(1.0,playerid,-2327.2361,328.1294,1002.0000))
	{
		return true;
	}
	return false;
}
#include "sourse/mast/mast_func"

new object_oil[MAX_PLAYERS];

new Text3D:sklad_armysf[3],
	//Text3D:sklad_armylv[2],
	Text3D:sklad_cops[4];

new l_actor[3][8],
	l_actort[3][8],
	l_actors[3][8],
	Float:l_actor_pos[8][4] = {
		{1620.3792,998.7274,1475.6283,180.9220}, // актер рабочий за столом
		{1621.3796,990.7556,1475.6283,272.4163}, // актер рабочий за столом
		{1627.0360,998.4398,1475.6283,1.7172}, // актер у куста
		{1626.9094,992.0641,1475.6283,179.0421}, // актер у куста
		{1630.2444,998.4404,1475.6283,358.5839}, // актер у куста
		{1630.0763,992.0634,1475.6283,180.2955}, // актер у куста
		{1633.3794,998.4421,1475.6283,1.4039}, // актер у куста
		{1633.1389,992.0649,1475.6283,181.5488} // актер у куста
	};

new Float:news_edit[8][3] =
{
 	{1257.9857,1478.8091,1114.8402},
	{1257.9711,1481.8016,1114.8402},
	{1246.6401,1470.4830,1114.8402},
	{1248.2072,1472.8302,1114.8402},
	{1246.4568,1472.8298,1114.8402},
	{1261.1829,1470.0491,1114.8402},
	{1260.4065,1472.8124,1114.8402},
	{1258.9001,1472.8286,1114.8402}
};

new Float:medic_heal[6][3] =
{
 	{2099.5347,1476.1790,1003.5300},
	{2088.5071,1476.3684,1003.5300},
	{2091.2327,1476.0381,1006.7396},
	{2091.9297,1467.1545,1006.7396},
	{2099.0911,1475.7980,1006.7396},
	{2098.9963,1467.3680,1006.7396}
};

new Float:comp_club[9][3] =
{
	{-644.2607,2198.0063,1003.7629},
	{-644.9619,2198.0137,1003.9188},
	{-645.6685,2197.9116,1003.4985},
	{-646.5728,2197.9214,1003.4985},
	{-647.4518,2197.9329,1003.4985},
	{-648.0433,2198.0464,1003.8969},
	{-646.4462,2200.2500,1003.4985},
	{-647.2313,2200.2500,1003.4985},
	{-647.8312,2200.2500,1003.4985}
};

new Float:tuning_enter[3][3] = {
	{2233.3906,-1802.6907,21.7119},//LS
	{1911.0051,2926.1563,12.0000},//SF
	{-395.8915,1010.1804,12.1450}//LV
};
/*
new Float:tuning_exit_1[3][4] = {
	{1146.8389,-1218.7427,17.7843,180.1412},//1
	{1151.7120,-1219.6622,17.6905,179.8527},//2
	{1156.8915,-1219.8698,17.6866,179.4841}//3
};
new Float:tuning_exit_2[3][4] = {
	{-1779.4021, 1204.3573, 24.8605, 180.0000},//1
	{-1775.1401, 1204.3573, 24.8605, 180.0000},//2
	{-1770.8749, 1204.3573, 24.8605, 180.0000}//3
};
new Float:tuning_exit_3[3][4] = {
	{1638.3571, 2195.1743, 10.5474, 180.0000},//1
	{1632.6182, 2195.1743, 10.5474, 180.0000},//2
	{1626.9589, 2195.1743, 10.5474, 180.0000}//3
};
*/

stock IsPlayerInBandOnline(bandid) {
	new count_band_online = 1;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] == bandid) {
			count_band_online++;
			if(count_band_online >= 3) return true;
		}
	}
	return false;
}
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
stock Float:PointToPoint2D(Float:x1,Float:y1,Float:x2,Float:y2) return floatsqroot(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)));
stock Float:GetPlayerDistanceToPlayer(playerid, targetid) {
    new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerPos(targetid, x2, y2, z2);
    return PointToPoint2D(x, y, x2, y2);
}

stock CreateTextDraws(playerid)
{
	theft_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 583.7628, 297.9164, "00:00"); // угон
	PlayerTextDrawLetterSize(playerid, theft_PTD[playerid][0], 0.4000, 1.6000);
	PlayerTextDrawAlignment(playerid, theft_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, theft_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, theft_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, theft_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, theft_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, theft_PTD[playerid][0], 0);

	theft_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 583.7627, 286.8330, "00:00"); // угон
	PlayerTextDrawLetterSize(playerid, theft_PTD[playerid][1], 0.4000, 1.6000);
	PlayerTextDrawAlignment(playerid, theft_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, theft_PTD[playerid][1], -16776961);
	PlayerTextDrawBackgroundColor(playerid, theft_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, theft_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, theft_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, theft_PTD[playerid][1], 0);	

	buy_player_skins[playerid] = CreatePlayerTextDraw(playerid, 294.555664, 404.706756, "10000$");
	PlayerTextDrawLetterSize(playerid, buy_player_skins[playerid], 0.217999, 1.316264);
	PlayerTextDrawAlignment(playerid, buy_player_skins[playerid], 1);
	PlayerTextDrawColor(playerid, buy_player_skins[playerid], -1);
	PlayerTextDrawSetShadow(playerid, buy_player_skins[playerid], 0);
	PlayerTextDrawSetOutline(playerid, buy_player_skins[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, buy_player_skins[playerid], 255);
	PlayerTextDrawFont(playerid, buy_player_skins[playerid], 2);
	PlayerTextDrawSetProportional(playerid, buy_player_skins[playerid], 1);

	skill_player_td[playerid][0] = CreatePlayerTextDraw(playerid,484.000091, 363.875549, "Desert Eagle");
	PlayerTextDrawLetterSize(playerid,skill_player_td[playerid][0], 0.186000, 1.077332);
	PlayerTextDrawAlignment(playerid,skill_player_td[playerid][0], 1);
	PlayerTextDrawColor(playerid,skill_player_td[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid,skill_player_td[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid,skill_player_td[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,skill_player_td[playerid][0], 51);
	PlayerTextDrawFont(playerid,skill_player_td[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid,skill_player_td[playerid][0], 1);

	skill_player_td[playerid][1] = CreatePlayerTextDraw(playerid,497.444732, 372.342224, "0/0");
	PlayerTextDrawLetterSize(playerid,skill_player_td[playerid][1], 0.198444, 1.127111);
	PlayerTextDrawAlignment(playerid,skill_player_td[playerid][1], 1);
	PlayerTextDrawColor(playerid,skill_player_td[playerid][1], -668447489);
	PlayerTextDrawSetShadow(playerid,skill_player_td[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,skill_player_td[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid,skill_player_td[playerid][1], 51);
	PlayerTextDrawFont(playerid,skill_player_td[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,skill_player_td[playerid][1], 1);

	RECON[playerid] = CreatePlayerTextDraw(playerid, 457.7958, 241.8333, "_");
	PlayerTextDrawFont(playerid, RECON[playerid], 2);
	PlayerTextDrawColor(playerid, RECON[playerid],-1);
	PlayerTextDrawSetOutline(playerid, RECON[playerid], 0);
	PlayerTextDrawLetterSize(playerid, RECON[playerid], 0.410000, 1.000000);
	PlayerTextDrawSetOutline(playerid, RECON[playerid],1);
	PlayerTextDrawSetProportional(playerid, RECON[playerid], 1);
	PlayerTextDrawAlignment(playerid, RECON[playerid], 1);
	PlayerTextDrawSetShadow(playerid, RECON[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RECON[playerid], 51);
	//PlayerTextDrawUseBox(playerid,RECON[playerid], 1);
	//PlayerTextDrawBoxColor(playerid,RECON[playerid], 100);

	load_tunes(playerid);

	LoadTexturess[playerid] = CreatePlayerTextDraw(playerid,394.110778, 221.522186, "usebox");
	PlayerTextDrawLetterSize(playerid,LoadTexturess[playerid], 0.000000, 0.091233);
	PlayerTextDrawTextSize(playerid,LoadTexturess[playerid], 211.777893, 0.000000);
	PlayerTextDrawAlignment(playerid,LoadTexturess[playerid], 1);
	PlayerTextDrawColor(playerid,LoadTexturess[playerid], 0);
	PlayerTextDrawUseBox(playerid,LoadTexturess[playerid], true);
	PlayerTextDrawBoxColor(playerid,LoadTexturess[playerid], 255);
	PlayerTextDrawSetShadow(playerid,LoadTexturess[playerid], 0);
	PlayerTextDrawSetOutline(playerid,LoadTexturess[playerid], 0);
	PlayerTextDrawFont(playerid,LoadTexturess[playerid], 0);

	HungerProgres[playerid] = CreatePlayerTextDraw(playerid,549.500000, 60.000000, "____");PlayerTextDrawBackgroundColor(playerid,HungerProgres[playerid], 255);PlayerTextDrawFont(playerid,HungerProgres[playerid], 1);PlayerTextDrawLetterSize(playerid,HungerProgres[playerid], 0.490000, -0.000000);
	PlayerTextDrawColor(playerid,HungerProgres[playerid], -1);PlayerTextDrawSetOutline(playerid,HungerProgres[playerid], 0);PlayerTextDrawSetProportional(playerid,HungerProgres[playerid], 1);PlayerTextDrawSetShadow(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawUseBox(playerid,HungerProgres[playerid], 1);PlayerTextDrawBoxColor(playerid,HungerProgres[playerid], -668439399);PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 604.000000, 40.000000);PlayerTextDrawSetSelectable(playerid,HungerProgres[playerid], 0);

	work_td[playerid][0] = CreatePlayerTextDraw(playerid, 508.799560, 157.333328, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][0], 0.000000, 4.143486);
	PlayerTextDrawTextSize(playerid, work_td[playerid][0], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][0], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][0], -668439399);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][0], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][0], 0);

	work_td[playerid][1] = CreatePlayerTextDraw(playerid, 511.142517, 168.416656, "MONEY:_$0");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][1], 0.377979, 1.389998);
	PlayerTextDrawAlignment(playerid, work_td[playerid][1], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][1], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][1], 0);

	work_td[playerid][2] = CreatePlayerTextDraw(playerid, 509.267150, 165.500045, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][2], 0.000000, -0.494873);
	PlayerTextDrawTextSize(playerid, work_td[playerid][2], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][2], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][2], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][2], 0);

	work_td[playerid][3] = CreatePlayerTextDraw(playerid, 509.267150, 190.583328, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][3], 0.000000, -0.494873);
	PlayerTextDrawTextSize(playerid, work_td[playerid][3], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][3], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][3], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][3], 0);

	YandNsysTDPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 287.288482, 318.583343, "PRESS Y");
	PlayerTextDrawLetterSize(playerid, YandNsysTDPlayer[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, YandNsysTDPlayer[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, YandNsysTDPlayer[playerid][0], 51);
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, YandNsysTDPlayer[playerid][0], 1);

	YandNsysTDPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 294.472076, 332.583099, "IIIIIIIIII");
	PlayerTextDrawLetterSize(playerid, YandNsysTDPlayer[playerid][1], 0.402498, 1.553333);
	PlayerTextDrawAlignment(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, YandNsysTDPlayer[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, YandNsysTDPlayer[playerid][1], 51);
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, YandNsysTDPlayer[playerid][1], 1);

	DmArenaTextDraw[playerid] = CreatePlayerTextDraw(playerid, 520.00, 100.00, "~b~Kills: ~g~0~n~~b~Deatch: ~g~Kills~n~~b~Deatch:~g~ 0 km");
	PlayerTextDrawAlignment(playerid, DmArenaTextDraw[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, DmArenaTextDraw[playerid], 0x000000ff);
	PlayerTextDrawFont(playerid, DmArenaTextDraw[playerid], 3);
	PlayerTextDrawLetterSize(playerid, DmArenaTextDraw[playerid], 0.399999, 1.00);
	PlayerTextDrawColor(playerid, DmArenaTextDraw[playerid], 0x0054c6ff);
	PlayerTextDrawSetOutline(playerid, DmArenaTextDraw[playerid], 1);
	PlayerTextDrawSetProportional(playerid, DmArenaTextDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, DmArenaTextDraw[playerid], 1);

	reg_tds[playerid][0] = CreatePlayerTextDraw(playerid,521.633850, 270.733428, "");
	PlayerTextDrawLetterSize(playerid,reg_tds[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,reg_tds[playerid][0], 95.000000, 42.000000);
	PlayerTextDrawAlignment(playerid,reg_tds[playerid][0], 1);
	PlayerTextDrawColor(playerid,reg_tds[playerid][0], 43);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid,reg_tds[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,reg_tds[playerid][0], 0);
	PlayerTextDrawFont(playerid,reg_tds[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid,reg_tds[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][0], 0);
	PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][0], 100);
	PlayerTextDrawSetPreviewRot(playerid,reg_tds[playerid][0], 46.000000, 24.000000, 0.000000, 1.000000);

	reg_tds[playerid][1] = CreatePlayerTextDraw(playerid,532.300537, 191.918548, "");
	PlayerTextDrawLetterSize(playerid,reg_tds[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,reg_tds[playerid][1], 122.000000, 128.000000);
	PlayerTextDrawAlignment(playerid,reg_tds[playerid][1], 1);
	PlayerTextDrawColor(playerid,reg_tds[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawFont(playerid,reg_tds[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][1], 100);
	PlayerTextDrawSetPreviewRot(playerid,reg_tds[playerid][1], 352.000000, 0.000000, 0.000000, 1.000000);

	reg_tds[playerid][2] = CreatePlayerTextDraw(playerid,592.967041, 178.800140, "Kody_Landino");
	PlayerTextDrawLetterSize(playerid,reg_tds[playerid][2], 0.179000, 0.874073);
	PlayerTextDrawAlignment(playerid,reg_tds[playerid][2], 2);
	PlayerTextDrawColor(playerid,reg_tds[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][2], 1);
	PlayerTextDrawSetOutline(playerid,reg_tds[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid,reg_tds[playerid][2], 255);
	PlayerTextDrawFont(playerid,reg_tds[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid,reg_tds[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][2], 1);

	//спидометр
	speedometr[playerid][0] = CreatePlayerTextDraw(playerid, 636.666503, 367.864532, "usebox");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][0], 0.000000, 5.759377);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][0], 490.444458, 0.000000);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][0], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, speedometr[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, speedometr[playerid][0], 471604424);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][0], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][0], 0);

	speedometr[playerid][1] = CreatePlayerTextDraw(playerid, 636.666687, 367.864624, "usebox");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][1], 0.000000, -0.095430);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][1], 490.444458, 0.000000);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][1], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, speedometr[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, speedometr[playerid][1], -668439399);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][1], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][1], 0);

	speedometr[playerid][2] = CreatePlayerTextDraw(playerid, 495.999877, 375.822235, "hud:radar_girlfriend");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][2], 9.777785, 9.955574);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][2], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][2], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][2], 4);

	speedometr[playerid][3] = CreatePlayerTextDraw(playerid, 495.666595, 389.266540, "hud:radar_impound");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][3], 10.222229, 11.946682);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][3], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][3], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][3], 4);

	speedometr[playerid][4] = CreatePlayerTextDraw(playerid, 495.333160, 407.688781, "hud:radar_centre");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][4], 10.666670, 10.951128);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][4], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][4], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][4], 4);

	speedometr[playerid][5] = CreatePlayerTextDraw(playerid, 510.555450, 374.342285, "1000 hp");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][5], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][5], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][5], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][5], 1);

	speedometr[playerid][6] = CreatePlayerTextDraw(playerid, 595.888366, 374.840026, "120");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][6], 0.495332, 3.013686);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][6], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][6], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][6], 1);

	speedometr[playerid][7] = CreatePlayerTextDraw(playerid, 510.444305, 390.266632, "9999 km");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][7], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][7], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][7], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][7], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][7], 1);

	speedometr[playerid][8] = CreatePlayerTextDraw(playerid, 511.333312, 406.693237, "79 %");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][8], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][8], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][8], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][8], 1);

	speedometr[playerid][9] = CreatePlayerTextDraw(playerid, 598.222167, 395.751190, "KM/H");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][9], 0.284665, 1.649775);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][9], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][9], -668439399);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][9], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][9], 1);

	speedometr[playerid][10] = CreatePlayerTextDraw(playerid, 576.888793, 371.857727, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][10], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][10], 15.111118, 17.422237);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][10], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][10], 780799999);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][10], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][10], 4);

	speedometr[playerid][11] = CreatePlayerTextDraw(playerid, 576.777954, 403.711090, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][11], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][11], 15.111118, 17.422237);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][11], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][11], 780799999);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][11], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][11], 4);

	speedometr[playerid][12] = CreatePlayerTextDraw(playerid, 555.111022, 406.204498, "LIGHT");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][12], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][12], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][12], -2139062017);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][12], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][12], 1);

	speedometr[playerid][13] = CreatePlayerTextDraw(playerid, 549.888671, 374.351287, "ENGINE");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][13], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][13], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][13], -2139062017);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][13], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][13], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][13], 1);

	speedometr[playerid][14] = CreatePlayerTextDraw(playerid, 555.333251, 390.284637, "door");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][14], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][14], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][14], -2139062017);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][14], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][14], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][14], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][14], 1);

	speedometr[playerid][15] = CreatePlayerTextDraw(playerid, 576.889038, 387.786651, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][15], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][15], 15.111118, 17.422237);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][15], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][15], -1523963137);
	PlayerTextDrawFont(playerid, speedometr[playerid][15], 4);
}
stock to_default(playerid) {
	for(new a = 0; a < 3; a++) {
		gBanks[playerid][bankNumber][a] = 0;
		gBanks[playerid][bankBalance][a] = 0;
		gBanks[playerid][bankID][a] = 0;
		gBanks[playerid][bankPassword][a] = 0;
	}
    ShowPlayerDialog(playerid, -1, 0, "", "", "", "");
    SetPlayerColor(playerid, TEAM_HIT_COLOR);
	DelGun(playerid);

	SetPVarInt(playerid, "taxist",-1);
	SetPVarInt(playerid, "invstat",-1);

	PI[playerid][pID]							=
	score_number[playerid]						=
  	FirstFire[playerid]							=
    SecondFire[playerid]						=
	PI[playerid][pAdmin] 						=
	addchet[playerid]							= 
	dostup[playerid] 							=
	PI[playerid][pMember] 						=
	PI[playerid][pLeader] 						=
	PI[playerid][pRouble] 						=
	nedded[playerid]							=
	TI[playerid][preOrg]						=
    TI[playerid][preOrgg]						=
	TI[playerid][pOldSkin] 						=
	TI[playerid][tCuffedTime] 					=
	TI[playerid][tCuffed] 						=
	TI[playerid][tGagTime] 						=
	TI[playerid][tSpcarTime] 					=
	TI[playerid][tJobSalary] 					=
	TI[playerid][tGunArea][0]					=
	TI[playerid][tGunArea][1]					=
	TI[playerid][tGunArea][2]					=
	TI[playerid][tGunArea][3]					=
	TI[playerid][tDMArea][0]					=
	TI[playerid][tDMArea][1]					=
	TI[playerid][tDMArea][2]					=
	TI[playerid][tJobSad][0]					=
	TI[playerid][tJobSad][1]					=
	TI[playerid][tJobSad][2]					=
	TI[playerid][tJobSad][3]					=
	TI[playerid][tJobGun][0]					=
	TI[playerid][tJobGun][1]					=
	TI[playerid][tJobGun][2]					=
	TI[playerid][tJobWood][0]					=
	TI[playerid][tJobWood][1]					=
	TI[playerid][tJobWood][3]					=
	TI[playerid][tMaskTime]						=
	TI[playerid][tAlcotraz][0]					=
	TI[playerid][tAlcotraz][1]					=
	TI[playerid][tAlcotraz][2]					=
	TI[playerid][tTrucker][0]					=
	TI[playerid][tTrucker][1]					=
	TI[playerid][tTrucker][2]					=
	TI[playerid][tTrucker][3]					=
	TI[playerid][tTazers][0] 					=
	TI[playerid][tTazers][1] 					=
	TI[playerid][tClothesWork][0] 				=
	TI[playerid][tClothesWork][1] 				=
	TI[playerid][tAntiDM]						=
	TI[playerid][tMasked]						=
	TI[playerid][tFakePass]						=
	TI[playerid][tGymSkill] 					=
	TI[playerid][tAutoSchool] 					=
	GotoInfo[playerid][gtState]                 =
	gAdmin[playerid][0]							=
	gAdmin[playerid][1]							=
	gAdmin[playerid][2]							=
	gAdmin[playerid][3]							=
	gAdmin[playerid][4]							=
	gAdmin[playerid][5]							=
	gAdmin[playerid][6]							=
	gAdmin[playerid][7]							=
	gAdmin[playerid][8]							=
	EdittingATM[playerid] 						=
	EdittingMoved[playerid] 					=
	EdittingMovedModel[playerid] 				=
	gAdminTime[playerid]						=
	gOnlinePlayer[playerid][0] 					=
	gOnlinePlayer[playerid][1] 					=
 	gOnlinePlayerAFK[playerid][0] 				=
	gOnlinePlayerAFK[playerid][1] 				= 
	Casino_Flag[playerid][casino_crup] 			=
	Casino_Flag[playerid][casino_bet_cash] 		= 
	gpss[playerid] 								=
	VinylJob[playerid] 							=
	RepaintValue[playerid] 						= 
	TI[playerid][loadingMode] 					= 
	TI[playerid][loadingModelPlayer] 			= 
	TI[playerid][tACflood]						= 
	PI[playerid][pHelper]						=
	PI[playerid][ptheftSkill]					= //угон
	PI[playerid][ptheftExp]						= //угон
	PI[playerid][ptheftTime]					= //угон
	PI[playerid][ptheftHome]					= //угон
	PI[playerid][pAsk]							=
	PI[playerid][pAskmute]						=
	TI[playerid][tCashDM]						=
	TI[playerid][tCashRace]						=
	TI[playerid][tAFK] 							= 
	TI[playerid][tDiceMoney]					=
	TI[playerid][tDiceTime]						=
	TI[playerid][tVirtualWorld]					=
	TI[playerid][tInterior]						=
	anti_dm{playerid} 							=
	TI[playerid][tSLimit]						=
	player_to_golod[playerid]					=
	player_to_game[playerid] 					=
	player_to_race_lv[playerid]					=
    kills_player_game[playerid]				 	= 
    player_gm{playerid}							=
    TI[playerid][tRaceMoney]					=
    PI[playerid][pFMute]						=
    TI[playerid][tRaceRandom]					=
    timer_job_mower[playerid] 					=
    PI[playerid][pTempKey]						= 0;

	youtube_player[playerid]  					= 0; //youtube
	youtube_time[playerid]  					= gettime(); //youtube

    PI[playerid][pHP]							= 100;

	maniken[playerid]							=
	idaofcar[playerid]							=
	gPlayerProdCP[playerid]						=
	PlayerTrailerTime[playerid] 				=
	avir[playerid]								=
	aint[playerid]								=
	Lastspec[playerid]							=
	TI[playerid][tTazers][2] 					=
	TI[playerid][tFight]						=
	TI[playerid][tArendKey]						=
	TI[playerid][tNewYear][0] 					=
	IDGZ[playerid] 								=
	edit_int[playerid] 							= 
	TI[playerid][tArendaCar] 					=
	TI[playerid][tJobWood][2]					=
	TI[playerid][tDuel] 						=
	 TI[playerid][tDuelLobby] 					=
	Casino_Flag[playerid][select_casino_table] 	= -1;
	CarSalonID[playerid]                        = -1;

	PI[playerid][pSlotItem_Use][0] 				=
    PI[playerid][pSlotItem_Use][1] 				=
    PI[playerid][pSlotItem_Use][2] 				=
    PI[playerid][pSlotItem_Use][3] 				=
    PI[playerid][pSlotItem_Use][4] 				=
    PI[playerid][pSlotItem_Use][5] 				=
    PI[playerid][pSlotItem_Use][7] 				=
    PI[playerid][pSlotItem_Use][6] 				= 1;

	PI[playerid][pSlotItem][0] 					=
    PI[playerid][pSlotItem][1] 					=
    PI[playerid][pSlotItem][2] 					=
    PI[playerid][pSlotItem][3] 					=
    PI[playerid][pSlotItem][4] 					=
    PI[playerid][pSlotItem][5] 					=
    PI[playerid][pSlotItem][6] 					=
    PI[playerid][pSlotItem][7] 					= 0;

	TI[playerid][tPhoneCaller] 					=
	TI[playerid][tPhoneCalled] 					=
	ReportAdmin[playerid] 						=
	GotoInfo[playerid][gtID]                    =
	GotoInfo[playerid][gtGoID]					=
	OldDialogID[playerid]                       =
	TI[playerid][tTaxiPass] 					=
	HealOffer[playerid] 						=
	SERIU[playerid][sID] 						= 
	TI[playerid][tSpectr]						=
	TI[playerid][tRaceID]						=
	TI[playerid][tDiceID]						=
	TI[playerid][tDiceIDs]						= INVALID_PLAYER_ID;

	PlayerTrailer[playerid] 					=
	TK_Trailer[playerid] 						=
	house_car[playerid][0] 						=
	house_car[playerid][1] 						=
	car_spawn[playerid]							=
	LastVeh[playerid] 							=
	VehTrailer[playerid]						=
	rob_veh[playerid]							=
	car_autoschool[playerid] 					=
	air_autoschool[playerid] 					=
	boat_autoschool[playerid] 					=
	theftveh[playerid][0]						=
	player_car_race_lv_id[playerid] 			= INVALID_VEHICLE_ID;

	TI[playerid][tLoginTime]					= 180;

	TI[playerid][tPhone] 						=
	TI[playerid][tPhoneNews] 					=
	TI[playerid][tTazer] 						=
	TI[playerid][tTied] 						=
	TI[playerid][tGag] 							=
	TI[playerid][tEther] 						=
	TI[playerid][tJobOil][0] 					=
	TI[playerid][tJobOil][1] 					=
	TI[playerid][tBlockWars] 					=
	TI[playerid][tPhoneOnline] 					=
	TI[playerid][tGym]							=
	TI[playerid][tShowKeys]						=
	TI[playerid][tInHouse] 						=
	TI[playerid][tHeal]							=
	ChangedPrimaryColor[playerid] 				=
	ChangedSecondaryColor[playerid] 			=
	ChangedVinylJob[playerid] 					=
	TI[playerid][tDialog] 						=
	TI[playerid][tTaxiGoing] 					=
	TI[playerid][tLogin] 						=
	TI[playerid][tJoined] 						=
	TI[playerid][tTPpick] 						=
	Fishing[playerid] 							= 
	TI[playerid][tHelperDuty] 					=
	TI[playerid][tSelectSkin] 					= 
	TI[playerid][tDiceClosed]					=
	infight[playerid] 							=
	TI[playerid][tTir]							= false;

	TI[playerid][tGyms] 						=
	TI[playerid][tTaxiStart] 					=
	GotoInfo[playerid][gtX]                     = 
	GotoInfo[playerid][gtY]                     = 
	GotoInfo[playerid][gtZ]                     = 
	GotoInfo[playerid][gtTPX]                   = 
	GotoInfo[playerid][gtTPY]                   = 
	GotoInfo[playerid][gtTPZ]                   =
	TI[playerid][tArmour]                   	= 0.0;
	DJlvl[playerid] 							= 0;
	ObjectShip[playerid] 						= 0x7F800000;
	gPlayerProdText[playerid]					= Text3D:-1;
	DMSTATUS[playerid] 							= Text3D:(0xFFFF);

	theftCheck[playerid][1]				     	= 0; //угон
	theftplayer[playerid][0] 					= 1010; //угон
	theftplayer[playerid][1] 					= 0; //угон
	theftIDveh[playerid][0] 					= INVALID_VEHICLE_ID; //угон
	theftIDveh[playerid][2] 					= 3; //угон

	for(new i = 0; i < 4; i++) 					lic[playerid][i] = 0;
	for(new i=0;i<10;i++) {
		GunPlayer[playerid][i][0]=0;
		GunPlayer[playerid][i][1]=0;
	}

	for(new i = 0; i <= MAX_FRACTIONS; i ++) {
		bl_info[playerid][bl_fraction][i] = false;
	}

	for(new i = 0; i < TOTALGZ; i++) 			GangZoneShowForPlayer(playerid,GZInfo[i][gZone],GetGangZoneColor(i));
	
	ResetPlayerMoney(playerid);
 	CreateTextDraws(playerid);
}
stock RemoveBuildings(playerid)
{
	//Автосалон элитного класса
    RemoveBuildingForPlayer(playerid, 4342, 413.1420, 752.0520, 17.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 4356, 413.1420, 752.0520, 17.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 4442, 362.0260, 812.1090, 12.5400, 0.25);
	RemoveBuildingForPlayer(playerid, 4447, 362.0260, 812.1090, 12.5400, 0.25);

	//Спавн г. Арзамас
	RemoveBuildingForPlayer(playerid, 4275, 194.675, 770.109, 11.001, 0.250);
	RemoveBuildingForPlayer(playerid, 4281, 194.675, 770.109, 11.001, 0.250);
	RemoveBuildingForPlayer(playerid, 4276, 200.613, 846.989, 17.180, 0.250);
	RemoveBuildingForPlayer(playerid, 4282, 200.613, 846.989, 17.180, 0.250);
	RemoveBuildingForPlayer(playerid, 4277, 200.613, 846.989, 17.180, 0.250);
	RemoveBuildingForPlayer(playerid, 4430, 185.341, 833.434, 12.989, 0.250);
	RemoveBuildingForPlayer(playerid, 4431, 174.190, 837.609, 12.989, 0.250);
	RemoveBuildingForPlayer(playerid, 4432, 163.802, 841.427, 12.989, 0.250);
	RemoveBuildingForPlayer(playerid, 1270, 193.462, 818.453, 10.699, 0.250);
	
	//Лесопилка
	RemoveBuildingForPlayer(playerid, 629, 1754.8209, 1474.2860, 8.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1783.0483, 1465.0034, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1797.7616, 1460.9546, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1790.0353, 1466.8658, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1799.1642, 1470.0796, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 630, 1775.6865, 1477.8744, 8.5130, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1761.4453, 1467.5479, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1770.3127, 1428.3723, 8.6807, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1773.6429, 1477.3901, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 629, 1771.0554, 1468.1583, 8.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 1807.8518, 1462.3799, 8.6922, 0.25);
	RemoveBuildingForPlayer(playerid, 621, 1800.4672, 1452.5518, 8.6922, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1858.3667, 1465.6356, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1860.2729, 1466.3643, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1859.0551, 1466.4885, 8.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.3270, 1468.5420, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1771.2312, 1462.2383, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1791.3909, 1466.7874, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.2869, 1470.4966, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1756.1298, 1472.8929, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1791.1254, 1470.7124, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.4353, 1471.9207, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1792.2446, 1470.0122, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1757.4301, 1474.3900, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1768.1539, 1464.8405, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1751.6907, 1474.9579, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1753.7098, 1477.3385, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1790.7413, 1468.7904, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1753.2146, 1472.6495, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1754.5553, 1472.2535, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1793.5470, 1468.0923, 8.8036, 0.25);
	RemoveBuildingForPlayer(playerid, 843, 1782.9326, 1474.1676, 9.3800, 0.25);
	// ДПС
	RemoveBuildingForPlayer(playerid, 2198, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2199, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2313, 2570.8601, -2377.6599, 20.9767, 0.25);
	RemoveBuildingForPlayer(playerid, 2314, 2570.8601, -2377.6599, 20.9767, 0.25);
	RemoveBuildingForPlayer(playerid, 2317, 2529.9500, -2395.3000, 20.9690, 0.25);
	RemoveBuildingForPlayer(playerid, 2318, 2529.9500, -2395.3000, 20.9690, 0.25);
	/*
   	// СеменовТыПросил20.44 10.03.2018
	RemoveBuildingForPlayer(playerid, 2630, 1723.969, -2490.129, 8.192, 0.250);
	RemoveBuildingForPlayer(playerid, 2631, 1723.969, -2490.129, 8.192, 0.250);
	*/
	// МЭРИЯ
	RemoveBuildingForPlayer(playerid, 2605, 1913.010, -2220.209, 29.885, 0.250);
	RemoveBuildingForPlayer(playerid, 2612, 1913.010, -2220.209, 29.885, 0.250);
	// ФСБ
	RemoveBuildingForPlayer(playerid, 10016, 2388.0100, -1842.9000, 20.8400, 0.25);
	RemoveBuildingForPlayer(playerid, 10017, 2387.6299, -1821.1100, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 10018, 2388.0901, -1848.5900, 20.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 10019, 2388.7600, -1854.5900, 20.8700, 0.25);
	// ППС
	RemoveBuildingForPlayer(playerid, 2067, 2716.7500, -2454.0200, 21.2635, 0.25);
	RemoveBuildingForPlayer(playerid, 2068, 2716.7500, -2454.0200, 21.2635, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2745.7200, -2412.3601, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2745.5701, -2473.4900, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2745.6399, -2443.4399, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2721.7000, -2478.5200, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2719.2100, -2407.3799, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2692.6799, -2412.2100, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2692.7500, -2470.1799, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1716, 2692.8201, -2444.1599, 20.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1697, 2703.5000, -2422.1399, 27.1750, 0.25);
	RemoveBuildingForPlayer(playerid, 1697, 2736.3899, -2421.7600, 27.1750, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 2683.3701, -2494.5100, 22.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2069, 2716.7500, -2454.0200, 21.2635, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2704.9900, -2447.2400, 25.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2715.5200, -2447.2400, 25.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2723.3000, -2447.2400, 25.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2731.1201, -2447.2400, 25.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2705.5200, -2450.7500, 30.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2712.4700, -2450.7500, 30.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2726.7400, -2450.7500, 30.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2719.1699, -2450.7500, 30.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2733.2100, -2450.7500, 30.8000, 0.25);
	//подарокАртуру
	RemoveBuildingForPlayer(playerid, 1784, 2456.0801, -1457.8800, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2459.0300, -1457.8900, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2461.9500, -1457.9200, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2464.8701, -1457.9301, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2467.7900, -1457.9500, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2470.6699, -1457.9500, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2473.6001, -1457.9200, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2476.5400, -1457.9399, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2478.0000, -1456.4500, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2478.0000, -1453.5200, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9800, -1450.5699, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9600, -1447.6400, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9299, -1444.7400, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9099, -1441.8199, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9500, -1438.8800, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9099, -1435.9100, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9399, -1433.0200, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1784, 2477.9500, -1430.1200, 79.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 2214, 2392.6299, -1407.1500, 75.0750, 0.25);
	RemoveBuildingForPlayer(playerid, 2215, 2453.8201, -1405.9500, 75.0750, 0.25);
	RemoveBuildingForPlayer(playerid, 2217, 2526.5701, -1455.0500, 61.2412, 0.25);
	RemoveBuildingForPlayer(playerid, 2219, 2477.0400, -1459.2000, 59.6698, 0.25);
	RemoveBuildingForPlayer(playerid, 2225, 2392.6299, -1407.1500, 75.0750, 0.25);
	RemoveBuildingForPlayer(playerid, 2226, 2453.8201, -1405.9500, 75.0750, 0.25);
	RemoveBuildingForPlayer(playerid, 2228, 2526.5701, -1455.0500, 61.2412, 0.25);
	RemoveBuildingForPlayer(playerid, 2230, 2477.0400, -1459.2000, 59.6698, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 2474.6699, -1430.9900, 80.7800, 0.25);

	//подарокАртуру
	RemoveBuildingForPlayer(playerid, 9128, 1835.3199, 1339.0500, 9.4750, 0.25);
	RemoveBuildingForPlayer(playerid, 9165, 1835.3199, 1339.0500, 9.4750, 0.25);
	RemoveBuildingForPlayer(playerid, 9133, 1795.6000, 1339.0500, 8.8016, 0.25);
	RemoveBuildingForPlayer(playerid, 9166, 1795.6000, 1339.0500, 8.8016, 0.25);
	RemoveBuildingForPlayer(playerid, 9132, 1814.8000, 1339.0500, 9.4346, 0.25);
	RemoveBuildingForPlayer(playerid, 9167, 1814.8000, 1339.0500, 9.4346, 0.25);
	RemoveBuildingForPlayer(playerid, 9130, 1858.1700, 1360.1600, 9.4576, 0.25);
	RemoveBuildingForPlayer(playerid, 9170, 1858.1700, 1360.1600, 9.4576, 0.25);
	RemoveBuildingForPlayer(playerid, 9129, 1863.4800, 1339.0500, 9.5006, 0.25);
	RemoveBuildingForPlayer(playerid, 9171, 1863.4800, 1339.0500, 9.5006, 0.25);
	RemoveBuildingForPlayer(playerid, 9202, 1829.2301, 1341.2672, 9.4300, 0.25);
	RemoveBuildingForPlayer(playerid, 9202, 1854.2223, 1341.2366, 9.4544, 0.25);
	RemoveBuildingForPlayer(playerid, 9202, 1829.2301, 1341.2672, 9.4300, 0.25);
	RemoveBuildingForPlayer(playerid, 9202, 1854.2223, 1341.2366, 9.4544, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1846.8335, 1340.7499, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1846.6711, 1347.6086, 8.6769, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1855.1134, 1348.5388, 8.7990, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 1846.7870, 1344.3668, 8.7418, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1809.9664, 1327.3279, 8.7613, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1846.5579, 1337.7955, 8.7613, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1821.8939, 1334.9934, 8.5036, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1806.5514, 1333.3412, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1833.6719, 1346.3715, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1806.6139, 1338.4106, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1806.7158, 1335.8767, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 624, 1842.4844, 1333.4646, 8.6695, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 1847.1500, 1332.0699, 8.7990, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1849.1294, 1348.2822, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1806.8643, 1340.5370, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1822.6997, 1339.8782, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 653, 1867.0427, 1348.3586, 8.7075, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1858.1062, 1348.3519, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1846.0847, 1330.5105, 8.7613, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1841.6899, 1327.2957, 8.7613, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1863.9121, 1368.4957, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1871.2067, 1358.4020, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1862.8058, 1368.5681, 8.7461, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1834.1531, 1345.9818, 8.6910, 0.25);
	RemoveBuildingForPlayer(playerid, 658, 1834.1531, 1345.9818, 8.6910, 0.25);

	//Бойцовский клуб
	RemoveBuildingForPlayer(playerid, 1996, 2435.7600, -2216.6699, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2435.7600, -2216.6699, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 1996, 2366.6599, -2184.3701, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2366.6599, -2184.3701, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 1996, 2295.0500, -2233.3701, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2295.0500, -2233.3701, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2600.0100, -2172.2600, 27.7989, 0.25);
	RemoveBuildingForPlayer(playerid, 2189, 2600.0100, -2172.2600, 27.7989, 0.25);
	RemoveBuildingForPlayer(playerid, 2628, 1908.6400, -2245.3101, 9.9162, 0.25);
	RemoveBuildingForPlayer(playerid, 2629, 1908.6400, -2245.3101, 9.9162, 0.25);
	RemoveBuildingForPlayer(playerid, 2632, 2098.6599, -2187.9500, 18.8212, 0.25);
	RemoveBuildingForPlayer(playerid, 2633, 2098.6599, -2187.9500, 18.8212, 0.25);

	/*
	RemoveBuildingForPlayer(playerid, 615, 516.4340, 749.4260, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 513.4280, 752.1730, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 511.7150, 755.8900, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 517.5970, 753.8050, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 515.1330, 756.9350, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 514.7970, 759.7430, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 518.1280, 757.7290, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 521.6850, 755.3520, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 524.6630, 752.2150, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 526.9170, 753.8200, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 530.6280, 752.1730, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 532.7620, 744.4920, 10.8586, 0.25);
	RemoveBuildingForPlayer(playerid, 4395, 513.4340, 753.2870, 17.2756, 0.25);
	RemoveBuildingForPlayer(playerid, 4395, 530.0600, 749.8340, 17.2756, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 474.3970, 757.1430, 10.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 4433, 487.5740, 668.0310, 17.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4444, 487.5740, 668.0310, 17.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4434, 477.3620, 674.0050, 17.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 4445, 477.3620, 674.0050, 17.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 4435, 507.4540, 665.0840, 13.2800, 0.25);
	RemoveBuildingForPlayer(playerid, 4446, 507.4540, 665.0840, 13.2800, 0.25);


	RemoveBuildingForPlayer(playerid, 4338, 391.2680, 704.2420, 13.8200, 0.25);
	RemoveBuildingForPlayer(playerid, 4352, 391.2680, 704.2420, 13.8200, 0.25);
	RemoveBuildingForPlayer(playerid, 4346, 442.4220, 682.3600, 14.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 4360, 442.4220, 682.3600, 14.2000, 0.25);

	RemoveBuildingForPlayer(playerid, 4593, 174.3860, 475.2590, 10.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 4585, 80.7600, 412.5160, 8.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 4586, 215.6800, 419.5790, 12.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 4596, 177.6010, 437.0190, 10.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4590, 164.0910, 399.0950, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4591, 212.2400, 427.0510, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4592, 202.8200, 392.6640, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4587, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4598, 160.2700, 350.4070, 9.5400, 0.25);

	RemoveBuildingForPlayer(playerid, 4599, 174.3860, 475.2590, 10.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 4600, 80.7600, 412.5160, 8.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 4601, 215.6800, 419.5790, 12.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 4602, 177.6010, 437.0190, 10.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4603, 164.0910, 399.0950, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4604, 212.2400, 427.0510, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4605, 202.8200, 392.6640, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4606, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4589, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4597, 177.6000, 437.0160, 10.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4594, 98.9300, 373.9400, 9.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 4588, 157.9500, 426.1000, 11.0000, 0.25);

	RemoveBuildingForPlayer(playerid, 4107, 476.4520, 754.0520, 11.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4366, 441.4700, 696.0350, 11.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 4367, 438.5590, 697.1240, 11.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 4368, 455.1690, 690.8180, 11.2050, 0.25);

	RemoveBuildingForPlayer(playerid, 4633, 123.4830, 485.5470, 9.8669, 0.25);
	RemoveBuildingForPlayer(playerid, 4634, 123.4830, 485.5470, 9.8669, 0.25);
	RemoveBuildingForPlayer(playerid, 4635, 132.0850, 449.5060, 9.8570, 0.25);
	RemoveBuildingForPlayer(playerid, 4636, 133.6660, 452.0860, 9.8570, 0.25);

	RemoveBuildingForPlayer(playerid, 5589, 596.3980, -1251.7600, 40.5900, 0.25);

	RemoveBuildingForPlayer(playerid, 1503, 182.7810, 403.1050, 26.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 166.4060, 409.4370, 26.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 143.2740, 401.8980, 9.8500, 0.25);

	RemoveBuildingForPlayer(playerid, 9146, 1828.2317, 1376.1675, 8.7522, 0.25);

	RemoveBuildingForPlayer(playerid, 9203, 2348.4890, 1364.2086, 10.9162, 0.25);
	RemoveBuildingForPlayer(playerid, 9203, 2348.4890, 1364.2086, 10.9162, 0.25);

	RemoveBuildingForPlayer(playerid, 785, -1798.7500, -2543.3601, 4.6610, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1790.4301, 0.0000, 16.6780, 0.25);
	*/

	//Склад
	RemoveBuildingForPlayer(playerid, 4338, -311.4510, 1219.2800, 14.3200, 0.25);
	RemoveBuildingForPlayer(playerid, 4352, -311.4510, 1219.2800, 14.3200, 0.25);

	// Маппинг Батырево
	RemoveBuildingForPlayer(playerid, 4928, 1935.3300, 2087.6101, 19.8005, 0.25);
	RemoveBuildingForPlayer(playerid, 4929, 1935.3300, 2087.6101, 19.8005, 0.25);
	RemoveBuildingForPlayer(playerid, 1245, 1949.4900, 2102.5901, 15.8500, 0.25);

	/*
	//perfomanse
	RemoveBuildingForPlayer(playerid, 6140, 657.570, -1498.328, 19.328, 0.250);
	RemoveBuildingForPlayer(playerid, 6193, 717.195, -1490.984, 15.757, 0.250);
	RemoveBuildingForPlayer(playerid, 6138, 657.570, -1498.328, 19.328, 0.250);
	//остров
	//RemoveBuildingForPlayer(playerid, 706, 2838.449, -292.000, 6.492, 0.250);
	//TRUCK
	RemoveBuildingForPlayer(playerid, 13191, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 13192, 164.710, -234.187, 0.476, 0.250);
	RemoveBuildingForPlayer(playerid, 13193, 173.515, -323.820, 0.515, 0.250);
	RemoveBuildingForPlayer(playerid, 13194, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 13195, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 29.171, -292.273, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1431, 36.429, -291.062, 1.570, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 24.593, -291.757, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 29.234, -286.054, 1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 32.406, -289.218, 1.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 33.601, -279.351, 1.117, 0.250);
	RemoveBuildingForPlayer(playerid, 12861, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1450, 43.484, -252.570, 1.203, 0.250);
	RemoveBuildingForPlayer(playerid, 1449, 43.109, -254.960, 1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 12859, 173.515, -323.820, 0.515, 0.250);
	RemoveBuildingForPlayer(playerid, 12805, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 13198, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 12956, 96.328, -261.195, 3.859, 0.250);
	RemoveBuildingForPlayer(playerid, 12860, 164.710, -234.187, 0.476, 0.250);
	RemoveBuildingForPlayer(playerid, 17350, -54.992, -1130.726, 4.578, 0.250);
	RemoveBuildingForPlayer(playerid, 1447, -89.929, -1133.750, 1.390, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -87.054, -1132.679, 0.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1462, -79.250, -1137.718, 0.054, 0.250);
	RemoveBuildingForPlayer(playerid, 3285, -73.804, -1141.421, 1.984, 0.250);
	RemoveBuildingForPlayer(playerid, 17072, -54.992, -1130.726, 4.578, 0.250);
	RemoveBuildingForPlayer(playerid, 17073, -56.125, -1130.171, 4.492, 0.250);
	RemoveBuildingForPlayer(playerid, 1462, -84.375, -1116.093, 0.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1447, -84.054, -1117.218, 1.390, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -68.351, -1104.992, 0.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1462, -60.359, -1116.937, 0.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -63.671, -1125.695, 0.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -63.414, -1115.414, 0.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -63.812, -1106.421, 0.218, 0.250);
	RemoveBuildingForPlayer(playerid, 17019, -606.031, -528.820, 30.523, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -513.757, -561.007, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -503.617, -540.531, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -502.609, -528.648, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -502.117, -521.031, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -502.406, -513.015, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -620.414, -490.507, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -619.625, -473.453, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -553.687, -481.632, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -554.453, -496.179, 25.164, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -537.039, -469.117, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -516.945, -496.648, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -503.125, -509.000, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 17020, -475.976, -544.851, 28.117, 0.250);
	RemoveBuildingForPlayer(playerid, 17301, -49.390, -1140.869, 5.203, 0.250);
	RemoveBuildingForPlayer(playerid, 17421, -49.390, -1140.869, 5.203, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -541.429, -561.226, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -471.554, -479.921, 38.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -491.859, -479.921, 38.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -512.164, -479.921, 38.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -532.468, -479.921, 38.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -552.765, -479.921, 38.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -573.054, -479.921, 38.578, 0.250);
	RemoveBuildingForPlayer(playerid, 17012, -542.007, -522.843, 29.593, 0.250);
	RemoveBuildingForPlayer(playerid, 17349, -542.007, -522.843, 29.593, 0.250);
	RemoveBuildingForPlayer(playerid, 12908, 125.438, -358.265, -7.859, 0.250);
	RemoveBuildingForPlayer(playerid, 13032, 125.438, -358.265, -7.859, 0.250);
	//airport ls
	RemoveBuildingForPlayer(playerid, 3769, 1961.4453, -2216.1719, 14.9844, 0.250);
	RemoveBuildingForPlayer(playerid, 3664, 1960.6953, -2236.4297, 19.2813, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1959.8984, -2227.4453, 13.7266, 0.250);
	RemoveBuildingForPlayer(playerid, 3625, 1961.4453, -2216.1719, 14.9844, 0.250);
	//taxi
	RemoveBuildingForPlayer(playerid, 647, 1077.367, -1750.398, 14.312, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1080.843, -1750.179, 18.578, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 1083.515, -1750.398, 14.312, 0.250);
	RemoveBuildingForPlayer(playerid, 8939, 2497.390, 1343.226, 12.484, 0.250);
	RemoveBuildingForPlayer(playerid, 8406, 2463.125, 1318.828, 15.289, 0.250);
	RemoveBuildingForPlayer(playerid, 8407, 2458.351, 1324.921, 11.281, 0.250);
	RemoveBuildingForPlayer(playerid, 8408, 2473.171, 1325.265, 17.015, 0.250);
	RemoveBuildingForPlayer(playerid, 8401, 2497.390, 1343.226, 12.484, 0.250);
	//спавн жд лс
	RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
	//RemoveBuildingForPlayer(playerid, 4821, 1745.199, -1882.849, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 4961, 1745.199, -1882.849, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 5033, 1745.199, -1882.849, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 5055, 1745.199, -1882.849, 26.140, 0.250);
	//забор у рыболовного
	RemoveBuildingForPlayer(playerid, 1410, -417.3125, -434.6328, 16.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -421.8594, -437.2422, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -424.6641, -435.0156, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -421.0703, -432.3828, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -416.6719, -430.9766, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -399.1719, -437.0156, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -394.6797, -438.4297, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -390.2422, -439.8906, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -403.7500, -435.6641, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -408.3281, -434.6328, 16.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -412.8594, -433.7813, 16.2891, 0.25);
	//STO LS
	//RemoveBuildingForPlayer(playerid, 5767, 1160.9609, -1180.5781, 70.4141, 0.25);
	//RemoveBuildingForPlayer(playerid, 5964, 1160.9609, -1180.5781, 70.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 5822, 1123.8203, -1198.8516, 25.7188, 0.25);
	//парк мэрия
	RemoveBuildingForPlayer(playerid, 4057, 1479.554, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 4210, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1457.937, -1620.695, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1496.867, -1707.820, 13.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1430.171, -1719.468, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1451.625, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1467.984, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1485.171, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1713.507, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.695, -1716.703, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1505.179, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1713.703, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1289, 1504.750, -1711.882, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.007, -1704.765, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1702.359, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1676.687, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.007, -1692.234, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1656.250, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1636.234, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1445.812, -1650.023, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1619.054, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.726, -1710.062, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.656, -1707.687, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1704.640, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1701.570, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.695, -1702.531, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.554, -1697.289, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1694.046, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.382, -1692.390, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 4186, 1479.554, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.125, -1687.562, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1690.648, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1458.617, -1684.132, 11.101, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.273, -1666.296, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1682.718, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1471.406, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.382, -1682.312, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1458.257, -1659.257, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1449.851, -1655.937, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1477.937, -1652.726, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.609, -1653.250, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.351, -1650.570, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1454.421, -1642.492, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.851, -1646.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.898, -1651.507, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1465.937, -1639.820, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1466.468, -1637.960, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1449.593, -1635.046, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.710, -1632.890, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.890, -1629.976, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.664, -1627.882, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.468, -1626.023, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 3985, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 4206, 1479.554, -1639.609, 13.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.835, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1466.484, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1704.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1494.210, -1694.437, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1693.734, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1496.976, -1686.851, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1494.140, -1689.234, 11.101, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1682.671, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1480.609, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1488.226, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.406, -1651.390, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.367, -1646.382, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1493.132, -1639.453, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.179, -1627.765, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.218, -1632.679, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.414, -1629.976, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.359, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1498.054, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1288, 1504.750, -1705.406, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1287, 1504.750, -1704.468, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1286, 1504.750, -1695.054, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1285, 1504.750, -1694.039, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.960, -1684.609, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.164, -1662.015, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.718, -1670.921, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1503.187, -1621.125, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1501.281, -1624.578, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.359, -1616.968, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1508.445, -1668.742, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1505.695, -1654.835, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1508.515, -1647.859, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1513.273, -1642.492, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1510.890, -1607.312, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1721.632, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1705.273, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1524.218, -1693.968, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1688.085, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1524.218, -1673.710, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1668.078, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1647.640, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1621.960, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1525.382, -1611.156, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1528.953, -1605.859, 15.625, 0.250);
	//ЖДЛВ
	RemoveBuildingForPlayer(playerid, 8577, 2809.320, 1303.187, 10.546, 0.250);
	RemoveBuildingForPlayer(playerid, 8740, 2798.632, 1246.664, 17.109, 0.250);
	RemoveBuildingForPlayer(playerid, 8741, 2842.578, 1290.789, 16.140, 0.250);
	RemoveBuildingForPlayer(playerid, 8743, 2809.320, 1303.187, 10.546, 0.250);
	RemoveBuildingForPlayer(playerid, 710, 2819.710, 1299.000, 25.421, 0.250);
	RemoveBuildingForPlayer(playerid, 710, 2819.710, 1281.156, 25.421, 0.250);
	RemoveBuildingForPlayer(playerid, 8578, 2798.632, 1246.664, 17.109, 0.250);
	RemoveBuildingForPlayer(playerid, 963, 2842.000, 1252.546, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 963, 2855.812, 1267.039, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 963, 2842.000, 1276.304, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1284.812, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1277.617, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 8575, 2842.578, 1290.789, 16.140, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1291.476, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 956, 2845.726, 1295.046, 10.789, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1300.304, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1296.390, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1304.781, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 962, 2855.812, 1314.625, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 962, 2842.000, 1324.039, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 962, 2842.000, 1303.976, 11.445, 0.250);
	//ЖДСФ
	RemoveBuildingForPlayer(playerid, 11311, -1968.562, 139.109, 31.867, 0.250);
	RemoveBuildingForPlayer(playerid, 11352, -1972.484, 136.375, 30.828, 0.250);
	RemoveBuildingForPlayer(playerid, 625, -1961.757, 114.195, 27.523, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 129.460, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 129.460, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 123.875, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 123.875, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 11305, -1968.562, 139.109, 31.867, 0.250);
	RemoveBuildingForPlayer(playerid, 11324, -1969.671, 137.859, 34.460, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 140.640, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 140.640, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 135.046, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 135.046, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1980.914, 149.562, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1980.914, 148.078, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1981.437, 148.921, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 955, -1980.789, 142.664, 27.070, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 151.812, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 151.812, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 146.226, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 146.226, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1977.320, 162.570, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 10932, -1941.460, 138.000, 32.640, 0.250);
	RemoveBuildingForPlayer(playerid, 11217, -1941.460, 138.000, 32.640, 0.250);
	RemoveBuildingForPlayer(playerid, 11354, -1921.890, 137.882, 29.757, 0.250);
	RemoveBuildingForPlayer(playerid, 11353, -1921.890, 137.882, 29.757, 0.250);
	//ЖДЛС
	RemoveBuildingForPlayer(playerid, 5199, 1982.640, -2038.164, 14.789, 0.250);
	RemoveBuildingForPlayer(playerid, 5201, 1988.140, -2003.421, 15.773, 0.250);
	RemoveBuildingForPlayer(playerid, 5313, 2043.992, -2016.867, 25.054, 0.250);
	RemoveBuildingForPlayer(playerid, 5316, 2043.992, -2016.867, 25.054, 0.250);
	RemoveBuildingForPlayer(playerid, 5346, 2016.312, -1968.921, 17.625, 0.250);
	RemoveBuildingForPlayer(playerid, 5337, 1995.437, -2066.148, 18.531, 0.250);
	RemoveBuildingForPlayer(playerid, 5375, 1995.437, -2066.148, 18.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1532, 1977.054, -2035.890, 12.539, 0.250);
	RemoveBuildingForPlayer(playerid, 5140, 1982.640, -2038.164, 14.789, 0.250);
	RemoveBuildingForPlayer(playerid, 1306, 2001.023, -2024.289, 19.750, 0.250);
	RemoveBuildingForPlayer(playerid, 5136, 1988.140, -2003.421, 15.773, 0.250);
	RemoveBuildingForPlayer(playerid, 5312, 2068.960, -2013.476, 24.156, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1989.085, -1982.476, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1983.812, -1982.476, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1978.531, -1982.476, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 1986.570, -1974.492, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 5153, 1975.710, -1974.507, 13.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 2004.492, -1974.492, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 2008.625, -1974.546, 15.023, 0.250);
	RemoveBuildingForPlayer(playerid, 5152, 1997.765, -1974.468, 14.875, 0.250);
	RemoveBuildingForPlayer(playerid, 3286, 2042.195, -1986.085, 38.328, 0.250);
	RemoveBuildingForPlayer(playerid, 5169, 2016.312, -1968.921, 17.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 1971.460, -1980.609, 12.640, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2072.546, -1967.601, 15.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2072.546, -1967.601, 15.117, 0.250);
	//удаленки в интах
	RemoveBuildingForPlayer(playerid, 1264, 933.0313, 2111.4141, 1011.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 934.8828, 2112.0703, 1012.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 935.3359, 2113.1406, 1010.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1264, 939.4844, 2113.1641, 1010.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 961.4453, 2097.3594, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2008, 960.4609, 2098.1094, 1009.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 963.1094, 2099.2813, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 963.1094, 2100.2891, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 14613, 942.1406, 2142.2578, 1012.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 14585, 939.5938, 2144.1406, 1016.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 14584, 942.3203, 2145.5156, 1011.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 14615, 932.7969, 2145.6406, 1015.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 14589, 945.6094, 2139.4766, 1013.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 14586, 946.1953, 2141.1875, 1016.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 14587, 948.7969, 2146.4688, 1015.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 14588, 948.9844, 2137.0938, 1013.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1497, 965.7422, 2161.5781, 1010.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1497, 965.7578, 2158.5703, 1010.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 14612, 961.1719, 2166.5781, 1012.7344, 0.25);

	RemoveBuildingForPlayer(playerid, 14784, 1281.1406, -30.0938, 1009.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 14795, 1388.8828, -20.8828, 1005.2031, 0.25);	
	//развозчики
	RemoveBuildingForPlayer(playerid, 7833, 1064.8359, 1869.7813, 13.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 7834, 1064.8359, 1869.7813, 13.9219, 0.25);
	//АШ
	RemoveBuildingForPlayer(playerid, 6491, 717.484, -1357.304, 20.296, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 650.835, -1377.664, 21.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 650.835, -1356.585, 21.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 650.835, -1338.242, 21.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 677.195, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 745.585, -1381.109, 25.875, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 751.335, -1368.031, 25.875, 0.250);
	RemoveBuildingForPlayer(playerid, 6490, 717.484, -1357.304, 20.296, 0.250);
	RemoveBuildingForPlayer(playerid, 6516, 717.687, -1357.281, 18.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 696.195, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 702.234, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 721.210, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, 732.851, -1332.898, 12.687, 0.250);
	RemoveBuildingForPlayer(playerid, 1439, 732.726, -1341.773, 12.632, 0.250);
	//farm
	RemoveBuildingForPlayer(playerid, 3376, -96.0859, 3.1953, 6.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3375, -96.0859, 3.1953, 6.6953, 0.25);
	//post
	RemoveBuildingForPlayer(playerid, 17002, 52.890, -1532.031, 7.742, 0.250);

	RemoveBuildingForPlayer(playerid, 3516, 1776.992, 828.968, 12.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1796.351, 789.234, 16.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3516, 1811.742, 822.929, 12.921, 0.250);
	//fish
	RemoveBuildingForPlayer(playerid, 1458, -401.2188, -429.5938, 15.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1463, -392.2188, -430.1641, 15.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3284, -393.2188, -422.8203, 17.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -400.6094, -410.2656, 13.9844, 0.25);
	//нефть
	RemoveBuildingForPlayer(playerid, 16279, 648.937, 1471.382, 8.367, 0.250);
	RemoveBuildingForPlayer(playerid, 3428, 628.148, 1354.406, 11.382, 0.250);
	RemoveBuildingForPlayer(playerid, 16089, 342.125, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16090, 315.773, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16091, 289.742, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16087, 358.679, 1430.453, 11.617, 0.250);
	RemoveBuildingForPlayer(playerid, 16088, 368.429, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16535, 409.625, 1320.500, 12.335, 0.250);
	RemoveBuildingForPlayer(playerid, 3426, 628.148, 1354.406, 11.382, 0.250);
	RemoveBuildingForPlayer(playerid, 16092, 394.156, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16766, 498.039, 1428.078, 7.164, 0.250);
	RemoveBuildingForPlayer(playerid, 16530, 414.289, 1496.226, 11.625, 0.250);
	RemoveBuildingForPlayer(playerid, 16532, 497.500, 1507.601, 5.250, 0.250);
	RemoveBuildingForPlayer(playerid, 16531, 465.492, 1552.093, 9.640, 0.250);
	RemoveBuildingForPlayer(playerid, 16534, 566.335, 1372.890, 12.179, 0.250);
	RemoveBuildingForPlayer(playerid, 16267, 638.601, 1404.992, 11.937, 0.250);
	RemoveBuildingForPlayer(playerid, 16533, 588.640, 1483.937, 8.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3427, 648.937, 1471.382, 8.367, 0.250);
	//lva
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 2023.757, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 1989.546, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 1955.765, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16619, 199.335, 1943.875, 18.203, 0.250);
	RemoveBuildingForPlayer(playerid, 16093, 211.648, 1810.156, 20.734, 0.250);
	RemoveBuildingForPlayer(playerid, 16638, 211.726, 1809.187, 18.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 262.093, 1807.671, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 347.195, 1799.265, 18.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 342.937, 1796.289, 18.757, 0.250);
	RemoveBuildingForPlayer(playerid, 16670, 330.789, 1813.218, 17.828, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 113.382, 1814.453, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 165.953, 1849.992, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1697, 220.382, 1835.343, 23.234, 0.250);
	RemoveBuildingForPlayer(playerid, 1697, 228.796, 1835.343, 23.234, 0.250);
	RemoveBuildingForPlayer(playerid, 1697, 236.992, 1835.343, 23.234, 0.250);
	RemoveBuildingForPlayer(playerid, 16095, 279.132, 1829.781, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16094, 191.140, 1870.039, 21.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 103.890, 1901.101, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 161.906, 1933.093, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 16323, 199.335, 1943.875, 18.203, 0.250);
	RemoveBuildingForPlayer(playerid, 16671, 193.953, 2051.796, 20.179, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 233.429, 1934.843, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 267.062, 1895.296, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 2023.757, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 1989.546, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 1955.765, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16669, 380.257, 1914.959, 17.429, 0.250);
	RemoveBuildingForPlayer(playerid, 16668, 357.937, 2049.419, 16.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 161.906, 1933.089, 16.820, 0.250);
	//sfa
    RemoveBuildingForPlayer(playerid, 968, -1526.437, 481.382, 6.906, 0.250);
	RemoveBuildingForPlayer(playerid, 966, -1526.390, 481.382, 6.179, 0.250);
	RemoveBuildingForPlayer(playerid, 10829, -1523.257, 486.796, 6.156, 0.250);
	RemoveBuildingForPlayer(playerid, 10825, -1412.290, 351.445, 13.710, 0.250);
	RemoveBuildingForPlayer(playerid, 10826, -1407.000, 390.960, 13.101, 0.250);
	RemoveBuildingForPlayer(playerid, 10898, -1407.000, 390.960, 13.101, 0.250);
	RemoveBuildingForPlayer(playerid, 10824, -1409.900, 389.476, 8.179, 0.250);
	RemoveBuildingForPlayer(playerid, 10900, -1409.900, 389.476, 8.179, 0.250);
	//
    RemoveBuildingForPlayer(playerid, 705, -2491.5859, -670.7188, 138.4297, 0.25);//[SF NEWS] дерево
	RemoveBuildingForPlayer(playerid, 1684, -2508.4063, -669.0938, 139.8516, 0.25);//[SF NEWS] здание для тока
    RemoveBuildingForPlayer(playerid, 1245, 2675.5234, 1172.9297, 11.1563, 0.25);//[LV NEWS] трамплин
	//work guns
	RemoveBuildingForPlayer(playerid, 1278, 2626.2344, -2391.5234, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2637.1719, -2385.8672, 16.4141, 0.25);

	RemoveBuildingForPlayer(playerid, 3689, 2685.382, -2366.054, 19.953, 0.250);
	RemoveBuildingForPlayer(playerid, 3707, 2716.234, -2452.593, 20.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3690, 2685.382, -2366.054, 19.953, 0.250);
	RemoveBuildingForPlayer(playerid, 3708, 2716.234, -2452.593, 20.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3770, 2746.406, -2453.484, 14.078, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2672.593, -2506.859, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2680.859, -2493.078, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2704.367, -2487.867, 20.562, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2686.757, -2416.625, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2672.593, -2408.250, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2639.195, -2392.820, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2663.835, -2392.820, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2747.007, -2480.242, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3626, 2746.406, -2453.484, 14.078, 0.250);
	RemoveBuildingForPlayer(playerid, 3577, 2744.570, -2436.187, 13.343, 0.250);
	RemoveBuildingForPlayer(playerid, 3577, 2744.570, -2427.320, 13.351, 0.250);

    RemoveBuildingForPlayer(playerid, 1250, 997.4141, 1707.5234, 10.8516, 0.25);//[RM mafia] шлагбаум
    RemoveBuildingForPlayer(playerid, 1251, 997.0469, 1710.9531, 11.2656, 0.25);//[RM mafia] шлагбаум
    RemoveBuildingForPlayer(playerid, 1251, 998.0938, 1755.6875, 11.2656, 0.25);//[RM mafia] шлагбаум
    RemoveBuildingForPlayer(playerid, 1250, 997.7266, 1759.1250, 10.8516, 0.25);//[RM mafia] шлагбаум
    */
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ) {
	if(hittype > 4) return false;
	if((hittype == BULLET_HIT_TYPE_PLAYER && ! IsPlayerConnected(hitid)) || (hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_OBJECT && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))) return false;
    return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) {
	if(newinteriorid > 0 && oldinteriorid == 0) SetPlayerWeather(playerid, 1);
	else if(newinteriorid == 0 && oldinteriorid > 0) SetPlayerWeather(playerid,2);
	return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags) {
    if(TI[playerid][tDialog]) {
		ErrorMessage(playerid,"Нельзя использовать команды при открытом диалоге");
		return 0;
	}
	if(!TI[playerid][tLogin]) {
		ErrorMessage(playerid,"Необходимо авторизоваться");
		return 0;
	}
	if(GetTickCount()-GetPVarInt(playerid, "AntiFlood") < 500) {
		if(CountFloodForPlayer[playerid] >= 2) return 0;
		CountFloodForPlayer[playerid]++;
		ErrorMessage(playerid, "Пожалуйста, не флудите");
		return 0;
	}
	SetPVarInt(playerid, "AntiFlood", GetTickCount());
	return TI[playerid][tLogin];
}
public OnPlayerConnect(playerid) {
	if(playerid == 65535) return Kick(playerid);
	TI[playerid][tLogin] = false;
	TI[playerid][tSpawn] = false;
	SetPlayerVirtualWorld(playerid,playerid+1);
	GetPlayerIp(playerid,player_ip_check[playerid],16);
	
	for(new i; i<MAX_QUESTS; i++) {
		AcceptQuest[playerid][i]=0;
		QuestShow[playerid][i]=0;
		QuestProgress[playerid][i]=0;
	}
	GetPlayerName(playerid,player_name[playerid],MAX_PLAYER_NAME);
	
	//Проверка с лаунчера ли игрок
	new version[24];
	GetPlayerVersion(playerid, version, sizeof(version));
	
	printf("Игрок: %s[%d] зашёл на сервер с клиента: %s.", player_name[playerid], playerid, version);
	
	if(!strcmp(version, "0.3.7-R3")) SetLauncherStatus(playerid, true);
	else SetLauncherStatus(playerid, false);
	
	PlayerVehicle[playerid] = -1;
	
    Interface_Arizona(playerid, Arz_Hud, Interface[0]);
	Interface_Arizona(playerid, Arz_Radar, Interface[1]);
	Interface_Arizona(playerid, Arz_Speedometer, Interface[2]);
	Interface_Arizona(playerid, Arz_Hunger, Interface[3]);
	Interface_Arizona(playerid, Arz_Fuel, Interface[4]);
	Interface_Arizona(playerid, Arz_TransparentChat, Interface[5]);
	Interface_Arizona(playerid, Arz_SaveDialog, Interface[6]);
	Interface_Arizona(playerid, Arz_NewNametag, Interface[7]);
	Interface_Arizona(playerid, Arz_Snow, Interface[8]);
	Interface_Arizona(playerid, Arz_RenderDialog, Interface[9]);

	ac_1{playerid} = false;
	to_default(playerid);

    shotTime[playerid] = 0;
    pPressed[playerid] = 0;
	shot[playerid] = 0;
	
	spaned[playerid]=0;
	
	//if(strcmp(player_name[playerid],"None",true) == 0) return Kick(playerid);
	
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `"TABLE_BANIP"` WHERE `IP` = '%s' LIMIT 1", player_ip_check[playerid]);
	mysql_tquery(connects, query, "check_ip_ban", "i", playerid);

	for(new i=0; i<4; i++) {
		TextDrawShowForPlayer(playerid, LOGO[i]);
	}
	GangZoneShowForPlayer(playerid, SFa, COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);

	RemoveBuildings(playerid);
	return true;
}
stock IsVehicleOccupiedEx(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	new arend_id = INVALID_PLAYER_ID;
	if(GetArendCarID(vehicleid, arend_id) != -1) {
		new string[200];
		if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id)) {
			if(!ispassenger) {
				new rc = GetArendCarID(vehicleid);

				new price;
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(ArendInfo[rc][aCost]/100*vip_status[PI[playerid][pVips]][vip_rentcar]);
					price = (ArendInfo[rc][aCost]-seller);
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(ArendInfo[rc][aCost]/100*BonusInfo[act_rentcar]);
						price = (ArendInfo[rc][aCost]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(ArendInfo[rc][aCost]/100*BonusInfo[act_rentcar]);
						price = (ArendInfo[rc][aCost]-seller);
					}
				    else price = ArendInfo[rc][aCost];
				}

				format(string,sizeof(string),""YELLOW"Транспорт для аренды\n\n"W"- Модель: "P"%s"W"\n- Стоимость: "GREEN"$%i"W"\n\nДля аренды Т/С нажмите "ORANGE"'Аренда'", gTransport[GetVehicleModel(vehicleid)-400][trName], price);
				D(playerid, dRentCar, DSM, ""P"Аренда", string, "Аренда", "Отмена");
				SetPVarInt(playerid, "rent_carid", vehicleid);
				ClearAnimations(playerid, 1);
			}
			else ClearAnimations(playerid, 1);
		}
		else if(arend_id != playerid) {
			ErrorMessage(playerid,"Этот транспорт уже арендуют");
			if(!ispassenger) ClearAnimations(playerid, 1);
		}
	}
	if(VehicleInfo[vehicleid][vBizz] > 0)
	{
		if(IsVehicleOccupiedEx(vehicleid) && VehicleInfo[vehicleid][vBizz] > 0 && !ispassenger) return ClearAnimations(playerid);
		switch(gBusiness[VehicleInfo[vehicleid][vBizz]][bizzType])
		{
			case 11:
			{
				if(VehicleInfo[vehicleid][vBizz] != PI[playerid][bizz_work] && !ispassenger) return ErrorMessage(playerid,"Вы не водитель такси"),ClearAnimations(playerid);
				switch(GetVehicleModel(vehicleid))
				{
					case 540,550: if(PI[playerid][bizz_status] < 2 && !ispassenger) return ErrorMessage(playerid,"У Вас нет доступа к этому классу такси"),ClearAnimations(playerid);
					case 483: if(PI[playerid][bizz_status] < 3 && !ispassenger) return ErrorMessage(playerid,"У Вас нет доступа к этому классу такси"),ClearAnimations(playerid);
					case 560,580: if(PI[playerid][bizz_status] < 4 && !ispassenger) return ErrorMessage(playerid,"У Вас нет доступа к этому классу такси"),ClearAnimations(playerid);
				}
				if(!ispassenger) SendOk(playerid,"Для включения счётчика введите "W"/count"G" и выберите оплачивающего пассажира");
			}
			case 14:
			{
				if(VehicleInfo[vehicleid][vBizz] != PI[playerid][bizz_work] && !ispassenger) return ErrorMessage(playerid,"Вы не сотрудник транспортной компании"),ClearAnimations(playerid);
			}
		}
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_AUTOSALON) ClearAnimations(playerid, 1);
	if(VehicleInfo[vehicleid][vBizz] && !ispassenger) {
		for(new i = 0; i < 20; i++) {
			if(vehicleid == FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i]) FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCarID][i] = playerid;
		}
	}
	if(VehicleInfo[vehicleid][vRobHouse]) {
		if(vehicleid != rob_veh[playerid]) ClearAnimations(playerid, 1);
	}
	SetPlayerArmedWeapon(playerid,0);
	return true;
}
CB: PlayerSpawn(playerid) {
    if(IsPlayerNPC(playerid)) return true;
    if(IsPlayerInAnyVehicle(playerid)) {
	    new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPosAC(playerid, X,Y,Z, TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	    SetTimerEx("PlayerSpawn", 50, false, "i", playerid);
	    return true;
	}
	SettingSpawn(playerid);
	if(TI[playerid][tSpectate] == true) SpecPl(playerid, false);
	else SpawnPlayer(playerid);
	return true;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
	for(new guard_iterator = strlen(inputtext) - 1; guard_iterator > -1; --guard_iterator) {
		if(inputtext[guard_iterator]=='%') inputtext[guard_iterator]='#';
	}
	TI[playerid][tDialog] = false;
	new bool:olddialog=true;
	if(dialogid != OldDialogID[playerid]) olddialog=false;
	new text_length = strlen(inputtext);
	for(new i = 0; i < text_length; i ++) {
		if(inputtext[i] == '{') {
			inputtext[i] = ' ';
		}
		if(inputtext[i] == '}') {
			inputtext[i] = ' ';
		}
		if(inputtext[i] == '%') {
            inputtext[i] = ' ';
        }
	}
	if(!olddialog) return 1;
	OldDialogID[playerid]                       = INVALID_DIALOG_ID;
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	switch(dialogid) {
	    case D_LAUNCHER_ADDON:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 2) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_Hud, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 1:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 2) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_Radar, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 2:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 2) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_Speedometer, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 3:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
					D(playerid, D_LAUNCHER_ADDON+1, DIALOG_STYLE_INPUT, "{5C79D6}Launcher Addon Menu!", "Введите значение голода от 0 до 100", "Ввод", "Выход");
					InterfaceSelect[playerid] = 0;
	            }
	            case 4:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
					D(playerid, D_LAUNCHER_ADDON+1, DIALOG_STYLE_INPUT, "{5C79D6}Launcher Addon Menu!", "Введите значение бензина от 0 до 100", "Ввод", "Выход");
					InterfaceSelect[playerid] = 1;
	            }
	            case 5:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 1) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_TransparentChat, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 6:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 1) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_SaveDialog, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 7:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 1) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_NewNametag, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 8:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 1) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_Snow, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 9:
	            {
					if(!GetLauncherStatus(playerid))
					{
					    SendClientMessage(playerid, 0x66FF55FF, "Этот пункт доступен только с лаунчера!");
					    return callcmd::launchaddon(playerid);
					}
	                Interface[listitem]++;
	                if(Interface[listitem] > 2) Interface[listitem] = 0;
	                Interface_Arizona(playerid, Arz_RenderDialog, Interface[listitem]);
	        		callcmd::launchaddon(playerid);
	            }
	            case 10:
	            {
					D(playerid, D_LAUNCHER_ADDON+1, DIALOG_STYLE_INPUT, "{5C79D6}Launcher Addon Menu!", "Введите ID скина", "Ввод", "Выход");
					InterfaceSelect[playerid] = 2;
				}
	            case 11:
	            {
					D(playerid, D_LAUNCHER_ADDON+1, DIALOG_STYLE_INPUT, "{5C79D6}Launcher Addon Menu!", "Введите ID авто", "Ввод", "Выход");
					InterfaceSelect[playerid] = 3;
				}
	        }
	        save_information();
	    }
	    case D_LAUNCHER_ADDON+1:
	    {
	        if(!response) return 1;
	        switch(InterfaceSelect[playerid])
	        {
	            case 0:
	            {
	                if(strval(inputtext) < 0 || strval(inputtext) > 100) return ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "{5C79D6}Launcher Addon Menu!", "Введите значение голода от 0 до 100", "Ввод", "Выход");
	                Interface[3]=strval(inputtext);
					Interface_Arizona(playerid, Arz_Hunger, strval(inputtext));
	        		callcmd::launchaddon(playerid);
	            }
	            case 1:
	            {
	                if(strval(inputtext) < 0 || strval(inputtext) > 100) return ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "{5C79D6}Launcher Addon Menu!", "Введите значение бензина от 0 до 100", "Ввод", "Выход");
                    Interface[4]=strval(inputtext);
					Interface_Arizona(playerid, Arz_Fuel, strval(inputtext));
	        		callcmd::launchaddon(playerid);
	            }
	            case 2:
	            {
					SetPlayerSkin(playerid, strval(inputtext));
	            }
	            case 3:
	            {
			        if(PlayerVehicle[playerid] != -1) DestroyVehicle(PlayerVehicle[playerid]);
			        new Float:x, Float:y, Float:z, Float:a;
			        GetPlayerPos(playerid, x, y, z);
			        GetPlayerFacingAngle(playerid, a);
			        PlayerVehicle[playerid] = AddStaticVehicle(strval(inputtext), x, y, z, a, random(100), random(100));
			        PutPlayerInVehicle(playerid, PlayerVehicle[playerid], 0);
	            }
	        }
	    }
		case D_ALOGIN: {
			if(!response) return 1;
			new query[300];
			switch(GetPVarInt(playerid,"aLogin")) {
				case 1: {
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=",true) != -1 || strfind(inputtext, "'",true) != -1) return D(playerid, D_ALOGIN, DSP, ""P"Авторизация", ""W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:", "Вход", "Отмена");
					SetPVarString(playerid,"inputtext",inputtext);
					format(query, sizeof(query), "SELECT * FROM `admin` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
					mysql_pquery(connects, query, "AloginAuth", "ds",playerid,player_name[playerid]);
				}
				case 0: {
					if(!strlen(inputtext)) return D(playerid, D_ALOGIN, DSP, ""P"Авторизация", ""W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:", "Вход", "Отмена");
					format(query, sizeof(query), "SELECT * FROM `admin` WHERE `Name` = '%s' AND `password` = '%s' LIMIT 1", player_name[playerid], MD5_Hash(inputtext));
					mysql_pquery(connects, query, "AloginReg","ds", playerid, inputtext);
				}
			}
			return 1;
		}
	    case D_GREENZONE: {
		    if(!response) return true;
			switch(listitem) {
			    case 0: D(playerid, D_GREENZONE_ADD, DSI, ""P"Создать зеленую зону", "Введите название зоны и дистанцию через знак ','", "Далее", "Закрыть");
			    default: {
			 		SetPVarInt(playerid,"ZONEID",listitem);
				  	D(playerid,D_GREENZONE_EDIT,DSL,""P"Редактирование зоны","{59DE00}1."W" Изменить название\n{59DE00}2."W" Изменить положение\n{59DE00}3."W" Изменить дистанцию", "Далее", "Закрыть");
				}
			}
		}
  		case D_GREENZONE_ADD: {
		    if(!response) return true;
		    new price,name[32];
  			if(sscanf(inputtext,"p<,>s[32]i",name,price)) return D(playerid, D_GREENZONE_ADD, DSI, ""P"Создать зеленую зону", "Введите название зоны и дистанцию через знак ','", "Далее", "Закрыть");
		    TOTALZONE++;
		    GetPlayerPos(playerid, GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ]);
		    GREENZONE[TOTALZONE][grVirt] = GetPlayerVirtualWorld(playerid);
		    new query[512];
		    mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_GREENZONE"` (`grx`,`gry`,`grz`,`grd`,`grname`,`grvirt`) VALUES\
			 ('%f','%f','%f','%i','%s','%i')",GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ],price,name,GREENZONE[TOTALZONE][grVirt]);
    		mysql_tquery(connects, query, "", "");
 			strmid(GREENZONE[TOTALZONE][grName],name, 0, strlen(name), 32);
 			GREENZONE[TOTALZONE][grid] = TOTALZONE;
 			GREENZONE[TOTALZONE][grD] = float(price);

 			static const f_str[] = "Зеленая зона под номером "ORANGE"%i"G" создана";
			new string[sizeof(f_str) +1 + (-2 + 3)];

 			format(string,sizeof(string),f_str,TOTALZONE);
			SendOk(playerid,string);
			return 1;
		}
		case D_GREENZONE_EDIT: {
		    if(!response) return true;
		    switch(listitem) {
		        case 0: D(playerid, D_GREENZONE_EDIT_NAME, DSI, ""P"Изменить название", "Введите название зоны:", "Далее", "Закрыть");
		        case 1: {
		            GetPlayerPos(playerid, GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ]);
		    		GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt] = GetPlayerVirtualWorld(playerid);
		    		new query[128];
		    		mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grx` = '%f', `gry` = '%f', `grz` = '%f', `grvirt` = '%i'\
	 				WHERE `id` = '%i'",GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ],
	 				GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
     				mysql_tquery(connects, query, "", "");
					SendOk(playerid,"Позиция изменена");
				}
				case 2: D(playerid, D_GREENZONE_EDIT_DIST, DSI, ""P"Изменить дистанцию", "Введите дистанцию для зоны:", "Далее", "Закрыть");
			}
			return true;
		}
		case D_GREENZONE_EDIT_NAME: {
		    if(!response) return true;
		    strmid(GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],inputtext, 0, strlen(inputtext), 32);
		    new query[128];
		    mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grname` = '%s' WHERE `id` = '%i'",
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
   			mysql_tquery(connects, query, "", "");
			SendOk(playerid,"Название изменено");
		}
		case D_GREENZONE_EDIT_DIST: {
		    if(!response) return true;
		    GREENZONE[GetPVarInt(playerid,"ZONEID")][grD] = float(strval(inputtext));
		    new query[128];
		    mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grd` = '%f' WHERE `id` = '%i'",
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grD],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
   			mysql_tquery(connects, query, "", "");
			SendOk(playerid,"Дистанция изменена");
		}
		case D_THEFT: { //угон
			if(!response) return true;
			theftveh[playerid][0] = INVALID_VEHICLE_ID;
			theftveh[playerid][2] = 0;
			if(PI[playerid][ptheftSkill] < 25) {
				if(!PI[playerid][pJemmy]) return ErrorMessage(playerid,"У Вас нет отмычки");
			}
			FindNearestHouseCar(playerid);
		}
		case D_THEFT_LIST: { //угон
			if(!response) return true;
			switch(listitem){
				case 0: {
					if(thefttime[playerid] > 0) return ErrorMessage(playerid, "Вы уже начали задание, для отмены введите команду /theftcancel");
					D(playerid,D_THEFT,DSM, ""P"Угон транспорта",""W"Здарова, я Jackson Young, наш общий знакомый сказал,\nчто ты не против заработать на нелегальной работенке.\nСуть моего задания в том, что я передаю на GPS координаты тачки, которая мне нужна.\nПеред тем, как берешься за работу, нужно купить в магазине отмычки.\nНичего сложного нет, крадешь тачку и получаешь - легкие деньги.\nБудешь браться за дело?","Да","Нет");
				}
				case 1: {
					if(thefttime[playerid] == 0) return ErrorMessage(playerid, "Нужно сначала взять задание!");
					new car;
					theftveh[playerid][1] = 120;
					PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
					switch(PI[playerid][ptheftSkill]){
						case 1: car = 462; 
						case 2: car = 481; 
						case 3..25: car = 461; 
					}

					switch (random(5)){
						case 0: theftveh[playerid][0] = A_CreateVehicle(car, -2288.2170,-93.6435,25.0666,347.8260, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 1: theftveh[playerid][0] = A_CreateVehicle(car, -2288.2170,-93.6435,25.0666,347.8260, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 2: theftveh[playerid][0] = A_CreateVehicle(car, -2288.2170,-93.6435,25.0666,347.8260, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 3: theftveh[playerid][0] = A_CreateVehicle(car, -2288.2170,-93.6435,25.0666,347.8260, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 4: theftveh[playerid][0] = A_CreateVehicle(car, -2288.2170,-93.6435,25.0666,347.8260, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					}
					if(car == 461) VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;

				}
			}
		}
		case D_BAND_STOCK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n","Пополнить","Закрыть");
				case 1: {
					if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функция");
					D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n","Снять","Закрыть");
				}
				case 2: D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Положить боеприпасы на склад:\n\n","Положить","Закрыть");
				case 3: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
					if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
						ErrorMessage(playerid,str);
						return 1;
					}
					D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Взять боеприпасы со склада:\n\n","Взять","Закрыть");
				}
				case 4: D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
				case 5: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
					if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
						ErrorMessage(playerid,str);
						return 1;
					}
					D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
				}
				case 6: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
					if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
						ErrorMessage(playerid,str);
						return 1;
					}
					D(playerid, D_BAND_GUN, DSL, ""P"Склад оружия",""P"1."W" SD Pistol\n"P"2."W" Desert Eagle\n"P"3."W" MP5\n"P"4."W" Shotgun\n"P"5."W" M4\n"P"6."W" AK-47\n"P"7."W" Rifle", "Выбрать", "Назад");
				}
				case 7: {
					if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функция");
					if(FI[GetTeamID(playerid)][fDrugsBuy]) return ErrorMessage(playerid,"Вы уже сделали заказ. Ожидайте, когда мафии привезут наркотики");
					new string[156];
					format(string,sizeof(string),""W"\n\nВведите кол-во наркотиков, которое желаете заказать у мафий:\nДоступно нараоктиков на складе: "P"%d\n\n",FI[GetTeamID(playerid)][fDrugs]);
					D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
				}
			}
		}
		case D_BAND_DRUGS: {
			if(!response) return 1;
			new drugs = strval(inputtext);
			if(drugs < 500 || drugs > 10000) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВведите кол-во наркотиков, которое желаете заказать у мафий:\nДоступно нараоктиков на складе: "P"%d\n"NO"*"G" От 500 и до 10000\n\n",FI[GetTeamID(playerid)][fDrugs]);
				return D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
			}
			if(FI[GetTeamID(playerid)][fDrugs]+drugs > 10000) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВведите кол-во наркотиков, которое желаете заказать у мафий:\nДоступно нараоктиков на складе: "P"%d\n"NO"*"G" На Ваш склад не поместится столько наркотиков\n\n",FI[GetTeamID(playerid)][fDrugs]);
				return D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
			}
			SetPVarInt(playerid,"buy_gdrugs",drugs);
			D(playerid,D_BAND_DRUGS_2,DSI,""P"Заказ наркотиков",""W"\n\nВведите цену за "P"1г"W" наркотиков:\n"NO"*"G" От $30 до $50\n\n","Далее","Назад");
		}
		case D_BAND_DRUGS_2: {
			if(!response) return DeletePVar(playerid,"buy_gdrugs");
			new price = strval(inputtext);
			if(price < 15 || price > 30) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВведите цену за "P"1г"W" наркотиков:\nЗаказ на "P"%dг\n\n"NO"*"G" От $15 до $30\n\n",GetPVarInt(playerid,"buy_gdrugs"));
				return D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
			}
			if(FI[GetTeamID(playerid)][fBank]-(price*GetPVarInt(playerid,"buy_gdrugs")) < 0) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВведите цену за "P"1г"W" наркотиков:\nЗаказ на "P"%dг\n\n"NO"*"G" Недостаточно средств в общаге банды\n\n",GetPVarInt(playerid,"buy_gdrugs"));
				return D(playerid,D_BAND_DRUGS,DSI,""P"Заказ наркотиков",string,"Далее","Назад");
			}
			FI[GetTeamID(playerid)][fBank]-=(price*GetPVarInt(playerid,"buy_gdrugs"));
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fDrugsBuy] = GetPVarInt(playerid,"buy_gdrugs");
			UpdateFraction(GetTeamID(playerid),"DrugsBuy",FI[GetTeamID(playerid)][fDrugsBuy]);
			FI[GetTeamID(playerid)][fDrugsPrice] = price;
			UpdateFraction(GetTeamID(playerid),"DrugsPrice",FI[GetTeamID(playerid)][fDrugsPrice]);
			DeletePVar(playerid,"buy_gdrugs");
			SendOk(playerid,"Наркотики успешно заказаны. Ожидайте, когда одна из мафий их доставит");
		}
		case D_BAND_GUN: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
				case 1: D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
				case 2: D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
				case 3: D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
				case 4: D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
				case 5: D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
				case 6: D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n", "Взять", "Отмена");
			}
		}
		case D_BAND_GUN_1: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 23) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[0][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_1, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"SD Pistol"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[0][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[0][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_2: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 24) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[1][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_2, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Desert Eagle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[1][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[1][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_3: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 29) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[2][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_3, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"MP5"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[2][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[2][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_4: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 25) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[3][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_4, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Shotgun"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[3][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[3][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_5: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 31) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[4][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_5, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"M4"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[4][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[4][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_6: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 30) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[5][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_6, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"AK-47"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[5][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[5][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_7: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n"NO"*"G" От 10 и до 200\n\n", "Взять", "Отмена");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 33) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[6][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_7, DSI, ""P"Склад оружия","\n\n"W"Введите количество патрон "ORANGE"Rifle"W", которое хотите взять со склада\n\n"NO"*"G" На складе недостаточно боеприпасов\n\n", "Взять", "Отмена");

			MeAction(playerid,"взял(а) оружие со склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[6][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[6][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_STOCK_PUT_MONEY: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n","Пополнить","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 500000) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета банды:\n\n"NO"*"G" От $1 и до $500.000\n\n","Пополнить","Закрыть");
			if(PI[playerid][pCash] < dengi) return ErrorMessage(playerid,"У Вас нет столько денег");
			if(FI[GetTeamID(playerid)][fBank]+dengi > 3000000) return ErrorMessage(playerid,"Нельзя хранить более $3.000.000");
			FI[GetTeamID(playerid)][fBank] += dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			GiveMoney(playerid, -dengi,"положил на счета банды");
			
			static const f_str[] = "[F] %s[%d] положил(а) в банк банды: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
		
			format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) деньги на склад");
		}
		case D_BAND_STOCK_INPUT_MONEY: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функция");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n","Снять","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 200000) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета банды:\n\n"NO"*"G" От $1 и до $200.000\n\n","Снять","Закрыть");
			if(FI[GetTeamID(playerid)][fBankCash] + dengi > 200000) {
				new string[128];
				format(string,sizeof(string),"Суточный лимит на перевод/снятие средств с общага - $200.000. Доступный лимит: $%d",200000-FI[GetTeamID(playerid)][fBankCash]);
				ErrorMessage(playerid,string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fBank] < dengi) return ErrorMessage(playerid,"В банке банды нет такой суммы"); 
			FI[GetTeamID(playerid)][fBank] -= dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fBankCash] += dengi;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			GiveMoney(playerid, dengi,"снял со счета банды");
			
			static const f_str[] = "[F] %s[%d] снял(а) с банка банды: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) деньги со склада");
			return 1;
		}
		case D_BAND_STOCK_PUT_MATS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Положить боеприпасы на склад:\n\n","Положить","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Положить боеприпасы на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pMats] < mats) return ErrorMessage(playerid,"У Вас нет столько боеприпасов");
			if(FI[GetTeamID(playerid)][fMats] +mats > 300000) return ErrorMessage(playerid,"Склад полон"); 
			FI[GetTeamID(playerid)][fMats] += mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PI[playerid][pMats] -= mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] положил(а) %d боеприпасов на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) боеприпасы на склад");
			return  1;
		}
		case D_BAND_STOCK_INPUT_MATS: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Взять боеприпасы со склада:\n\n","Взять","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Взять боеприпасы со склада:\n\n"NO"*"G" От 1 и до 500\n\n","Взять","Закрыть");
			if(PI[playerid][pMats]+mats > vip_status[PI[playerid][pVips]][vip_mats]) {
				new string[128];
				format(string,sizeof(string),"В кармане не поместится больше %d боеприпасов",vip_status[PI[playerid][pVips]][vip_mats]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fSklad] == 0) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fMats] < mats) return ErrorMessage(playerid, "На складе нет боеприпасов");
			FI[GetTeamID(playerid)][fMats] -= mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PI[playerid][pMats] += mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] взял(а) %d боеприпас(ы) со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) боеприпасы со склада");
			return true;
		}
		case D_BAND_STOCK_PUT_DRUGS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 500) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pDrugs] < drugs) return ErrorMessage(playerid,"У Вас нет столько наркотиков");
			if(FI[GetTeamID(playerid)][fDrugs]+drugs > 10000) return ErrorMessage(playerid,"Склад полон"); 
			FI[GetTeamID(playerid)][fDrugs] += drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PI[playerid][pDrugs] -= drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] положил(а) %d наркотик(ов) на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) наркотики на склад");
			return  1;
		}
		case D_BAND_STOCK_INPUT_DRUGS: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 50) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n"NO"*"G" От 1 и до 50\n\n","Взять","Закрыть");
			if(PI[playerid][pDrugs]+drugs > vip_status[PI[playerid][pVips]][vip_drugs]) {
				new string[128];
				format(string,sizeof(string),"В кармане не поместится больше %d наркотиков",vip_status[PI[playerid][pVips]][vip_drugs]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
			if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fDrugs] < drugs) return ErrorMessage(playerid, "На складе нет наркотиков");
			FI[GetTeamID(playerid)][fDrugs] -= drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PI[playerid][pDrugs] += drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] взял(а) %d наркотик(ов) со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) наркотики со склада");
			return true;
		}
		case D_MAFIA_STOCK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета мафии:\n\n","Пополнить","Закрыть");
				case 1: {
					if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функция");
					D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета мафии:\n\n","Снять","Закрыть");
				}
				case 2: D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Положить боеприпасы на склад:\n\n","Положить","Закрыть");
				case 3: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей мафии закрыл доступ к складу");
					D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Взять боеприпасы со склада:\n\n","Взять","Закрыть");
				}
				case 4: D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
				case 5: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей мафии закрыл доступ к складу");
					D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
				}
			}
		}
		case D_MAFIA_STOCK_PUT_MONEY: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета мафии:\n\n","Пополнить","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 100000) return D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""P"Введите сумму платежа","\n\n"W"Пополнение банковского счета мафии:\n\n"NO"*"G" От $1 и до $100000\n\n","Пополнить","Закрыть");
			if(PI[playerid][pCash] < dengi) return ErrorMessage(playerid,"У Вас нет столько денег");
			if(FI[GetTeamID(playerid)][fBank]+dengi > 4000000) return ErrorMessage(playerid,"Нельзя хранить более $4.000.000");
			FI[GetTeamID(playerid)][fBank] += dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			GiveMoney(playerid, -dengi,"положил на счета мафии");
			
			static const f_str[] = "[F] %s[%d] положил(а) в банк мафии: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
		
			format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) деньги на склад");
		}
		case D_MAFIA_STOCK_INPUT_MONEY: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функция");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета мафии:\n\n","Снять","Закрыть");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 300000) return D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""P"Введите сумму","\n\n"W"Снятие денег со счета мафии:\n\n"NO"*"G" От $1 и до $300.000\n\n","Снять","Закрыть");
			if(FI[GetTeamID(playerid)][fBank] < dengi) return ErrorMessage(playerid,"В банке мафии нет такой суммы"); 
			if(FI[GetTeamID(playerid)][fBankCash] + dengi > 300000) {
				new string[128];
				format(string,sizeof(string),"Суточный лимит на перевод/снятие средств с общага - $300.000. Доступный лимит: $%d",300000-FI[GetTeamID(playerid)][fBankCash]);
				ErrorMessage(playerid,string);
				return 1;
			}
			FI[GetTeamID(playerid)][fBank] -= dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fBankCash] += dengi;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			GiveMoney(playerid, dengi,"снял со счета мафии");
			
			static const f_str[] = "[F] %s[%d] снял(а) с банка фракции: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"снял(а) деньги со склада");
			return 1;
		}
		case D_MAFIA_STOCK_PUT_NARKO: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n","Положить","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 500) return D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Положить наркотики на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pDrugs] < drugs) return ErrorMessage(playerid,"У Вас нет столько наркотиков");
			if(FI[GetTeamID(playerid)][fDrugs]+drugs > 20000) return ErrorMessage(playerid,"Склад полон"); 
			FI[GetTeamID(playerid)][fDrugs] += drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PI[playerid][pDrugs] -= drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] положил(а) %d наркотик(ов) на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) наркотики на склад");
			return  1;
		}
		case D_MAFIA_STOCK_INPUT_NARKO: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n","Взять","Закрыть");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 50) return D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""P"Введите кол-во наркотиков","\n\n"W"Взять наркотики со склада:\n\n"NO"*"G" От 1 и до 50\n\n","Взять","Закрыть");
			if(PI[playerid][pDrugs]+drugs > vip_status[PI[playerid][pVips]][vip_drugs]) {
				new string[128];
				format(string,sizeof(string),"В кармане не поместится больше %d наркотиков",vip_status[PI[playerid][pVips]][vip_drugs]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fSklad] == 0) return ErrorMessage(playerid,"Лидер вашей мафии закрыл доступ к складу");
			if(FI[GetTeamID(playerid)][fDrugs] < drugs) return ErrorMessage(playerid, "На складе нет наркотиков");
			FI[GetTeamID(playerid)][fDrugs] -= drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PI[playerid][pDrugs] += drugs;
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] взял(а) %d наркотик(ов) со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) наркотики со склада");
			return true;
		}
		case D_MAFIA_STOCK_PUT_MATS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Положить боеприпасы на склад:\n\n","Положить","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Положить боеприпасы на склад:\n\n"NO"*"G" От 1 и до 500\n\n","Положить","Закрыть");
			if(PI[playerid][pMats] < mats) return ErrorMessage(playerid,"У Вас нет столько боеприпасов");
			if(FI[GetTeamID(playerid)][fMats] +mats > 300000) return ErrorMessage(playerid,"Склад полон"); 
			FI[GetTeamID(playerid)][fMats] += mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PI[playerid][pMats] -= mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] положил(а) %d боеприпасов на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) боеприпасы на склада");
			return  1;
		}
		case D_MAFIA_STOCK_INPUT_MATS: {
			if(!response) return 1;
			if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Взять боеприпасы со склада:\n\n","Взять","Закрыть");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""P"Введите кол-во боеприпасов","\n\n"W"Взять боеприпасы со склада:\n\n"NO"*"G" От 1 и до 500\n\n","Взять","Закрыть");
			if(PI[playerid][pMats]+mats > vip_status[PI[playerid][pVips]][vip_mats]) {
				new string[128];
				format(string,sizeof(string),"В кармане не поместится больше %d боеприпасов",vip_status[PI[playerid][pVips]][vip_mats]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fSklad] == 0) return ErrorMessage(playerid,"Лидер вашей мафии закрыл доступ к складу");
			if(FI[GetTeamID(playerid)][fMats] < mats) return ErrorMessage(playerid, "На складе нет боеприпасов");
			FI[GetTeamID(playerid)][fMats] -= mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PI[playerid][pMats] += mats;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] взял(а) %d боеприпас(ы) со склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взял(а) боеприпасы со склада");
			return true;
		}
		case D_REPORT: {
			if(!response) return 1;
			if(!strlen(inputtext)) return ErrorMessage(playerid,"Вы ничего не ввели");
			if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
			if(GetPVarInt(playerid,"AntiReport") > gettime()) return ErrorMessage(playerid,"Подавать жалобу можно 1 раз в минуту");
			if(!rep_system) {
				static const f_str[] = "[PM] %s[%i]: %s";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 128)];
				
				format(string, sizeof(string), f_str, player_name[playerid], playerid, (inputtext));
				SendAdminMessage(0x008e8cff,string);

				new string_1[128];
				format(string_1, sizeof(string_1), "Жалоба: %s", inputtext);
				SendClientMessage(playerid,COLOR_YELLOW,string_1);

				SendClientMessage(playerid, COLOR_LIGHTRED, "Наберитесь терпения и ожидайте ответа от администратора");
			}
			else {
				if(PI[playerid][pAdmin] >= 1) return ErrorMessage(playerid,"Не нужен тебе репорт");
				new bool:report = false,reps = 0;
				for(new i;i<MAX_REPORTS;i++) {
					if(PlayerReport[i] != -1) reps++;
				}
				for(new i;i<MAX_REPORTS;i++) {
					if(PlayerReport[reps] != -1) {
						reps++;
						continue;
					} 
					PlayerReport[reps] = playerid;
					strmid(TextReport[reps], (inputtext),0,strlen(inputtext),150);
					new string[143];
					if(PI[playerid][pVips] == VIP_FOREVER) {
						format(string, sizeof(string), "[PM] %s[%i]: %s."W" [%d] (/reps)", player_name[playerid], playerid, inputtext, reps+1);
						SendAdminMessage(COLOR_RED,string);
					}
					else {
						format(string, sizeof(string), "[PM] %s[%i]: %s."W" [%d] (/reps)", player_name[playerid], playerid, inputtext, reps+1);
						SendAdminMessage(0x008e8cff,string);
					}
					format(string, sizeof string, "Ваше обращение: "G"%s"YELLOW" — успешно отправлено.", inputtext);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "В скором времени вам ответит администратор. Вы в очереди репортов: "P"%d", reps+1);
					SendOk(playerid, string);
					//mysql_tquery(connects, "SELECT * FROM `reports`", "mysql_ReportShow", "i", playerid);
					report = true;
					break;
				}
				if(!report) return ErrorMessage(playerid,"Попробуйте позже");
			}
			SetPVarInt(playerid,"AntiReport",gettime()+60);
			return true;
		}
		case D_ASK: {
			if(!response) return 1;
			if(!strlen(inputtext)) return ErrorMessage(playerid,"Вы ничего не ввели");
			if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
			if(GetPVarInt(playerid,"AntiAsk") > gettime()) return ErrorMessage(playerid,"Задавать вопрос можно 1 раз в 30 секунд");
			new bool:online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!PI[i][pHelper] || !TI[i][tHelperDuty]) continue;
				online = true;
			}
			if(!online) return ErrorMessage(playerid,"Game Support's нету в сети. Задавайте вопросы через /mm >> связь с администрацией");
			if(PI[playerid][pHelper]) return ErrorMessage(playerid,"Вам запрещено задавать вопросы");
			new bool:report = false,reps = 0;
			for(new i;i<MAX_ASK;i++) {
				if(PlayerReportAsk[i] != -1) reps++;
			}
			for(new i;i<MAX_ASK;i++) {
				if(PlayerReportAsk[reps] != -1) {
					reps++;
					continue;
				} 
				PlayerReportAsk[reps] = playerid;
				strmid(TextAsk[reps], (inputtext),0,strlen(inputtext),150);
				new string[143];
				format(string, sizeof(string), "[ASK] %s[%i]: %s."W" [%d] (/asks)", player_name[playerid], playerid, inputtext, reps+1);
				SendGSMessage(0x008e8cff,string);
				format(string, sizeof string, "Ваше обращение: "G"%s"YELLOW" — успешно отправлено.", inputtext);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "В скором времени вам ответит Game Support. Вы в очереди вопросов: "P"%d", reps+1);
				SendOk(playerid, string);
				report = true;
				break;
			}
			if(!report) return ErrorMessage(playerid,"Попробуйте позже");
			SetPVarInt(playerid,"AntiAsk",gettime()+30);
			return true;
		}
		case D_LOGIN: {
			if(!response) return Kick(playerid);
			if(TI[playerid][tLogin]) return true;
			else if(!strlen(inputtext) || !CheckPassword(inputtext)) {
				if(!CheckPassword(inputtext)) ErrorMessage(playerid,"Смените раскладку клавиатуры");
			   	static const f_str[] = ""W"С возвращением на сервер "P""FullServName"!"W"\n\n\
					Аккаунт "P"%s"W" успешно найден.\n\
					Для авторизации, пожалуйста, введите пароль от аккаунта.\n\n\
					Восстановить пароль можно на сайте: "P""NameSite"";
				new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

				format(string, sizeof(string), f_str, player_name[playerid]);
				D(playerid,D_LOGIN,DSP, ""P"Авторизация",string, "Войти", "Отмена");
				return true;
			}
			else {
				if(strcmp(player_pass[playerid],MD5_Hash(inputtext),true)) {
           			if(GetPVarInt(playerid, "wrongPass") == 2) return ErrorMessage(playerid,"Неверный пароль. Используйте /q для выхода"), Kick(playerid);
					SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);

					static const f_str_1[] = "Внимание! Вы ввели неправильный пароль. У Вас осталось "NO"%d попыток";
					new string_1[sizeof(f_str_1) + 3];
					format(string_1,sizeof(string_1), f_str_1,3-GetPVarInt(playerid, "wrongPass"));
					ErrorMessage(playerid,string_1);

	     			static const f_str[] = ""W"С возвращением на сервер "P""FullServName"!"W"\n\n\
						Аккаунт "P"%s"W" успешно найден.\n\
						Для авторизации, пожалуйста, введите пароль от аккаунта.\n\n\
						Восстановить пароль можно на сайте: "P""NameSite"";
					new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

					format(string, sizeof(string), f_str, player_name[playerid]);
					D(playerid,D_LOGIN,DSP, ""P"Авторизация",string, "Войти", "Отмена");
			    }
			    else {
					if(PI[playerid][pGoogleSec] && strcmp(player_ip_check[playerid], player_ip[playerid]) != 0) {
						TI[playerid][tLoginTime] = 90;
						D(playerid, D_GOOGLE_2, DSI, ""P"Google Authenticator", "\n\n"W"Введите код Google Authenticator:\n\n","Далее","Отмена");
						return 1;
					}
					else if(!GetString(PI[playerid][pKeyip], "-")) load_captcha(playerid);
              		else load_load(playerid);
				}
			}
		}
		case D_GOOGLE_2: {
			if(!response) return Kick(playerid);
			if(strlen(inputtext) != 6 || isNumeric(inputtext)) return D(playerid, D_GOOGLE_2, DSI, ""P"Google Authenticator", "\n\n"W"Введите код Google Authenticator:\n\n"NO"*"G" Ключ должен состоять из 6 цифр\n\n","Далее","Отмена");
			new colvo = strval(inputtext);
			new heh = GoogleAuthenticatorCode(PI[playerid][pGoogle], gettime());
			if(heh == colvo) return load_load(playerid);
			else {
				if(GetPVarInt(playerid, "wrongGoogle") == 2) return ErrorMessage(playerid,"Неверный код. Используйте /q для выхода"), Kick(playerid);
				SetPVarInt(playerid, "wrongGoogle", GetPVarInt(playerid, "wrongGoogle")+1);
				static const f_str_1[] = "\n\n"W"Введите код Google Authenticator:\n\n"NO"*"G" Вы ввели неправильный код, осталось попыток: %d\n\n";
				new string_1[sizeof(f_str_1) + 3];
				format(string_1,sizeof(string_1), f_str_1,3-GetPVarInt(playerid, "wrongGoogle"));
				D(playerid, D_GOOGLE_2, DSI, ""P"Google Authenticator",string_1,"Далее","Отмена");
				return 1;
			}
		}
		case D_REG: {
			if(!response) return Kick(playerid);
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !CheckPassword(inputtext)) {
    			static const f_str[] = ""G"Добро пожаловать на сервер: "ORANGE""FullServName""G"\n\
					"ORANGE"Регистрация нового персонажа"G"\n\n\
					Логин: "P"%s"G"\n\
					Введите пароль:\n\n\
					"P"Примечание:\n\t\
					"NO"*"G" Пароль чувствителен к регистру\n\t\
					"NO"*"G" Пароль должен содержать от 6 до 20 символов\n\t\
					"NO"*"G" Пароль должен содержать Латинские символы и цифры(aA-zZ,0-9)";
				new string[sizeof(f_str) +1 + MAX_PLAYER_NAME];
				format(string,sizeof(string),f_str,player_name[playerid]);
				D(playerid,D_REG,DSI, ""P"Регистрация",string, "Готово", "Отмена");
				return true;
			}
			mysql_escape_string(inputtext,player_pass[playerid]);
			D(playerid,D_REG_MAIL,DSI, ""P"Регистрация",""G"Укажите Вашу "ORANGE"почту"G"\n\n\
				Укажите ваш реальный "P"Email"G". C помощью него вы сможете восстановить пароль","Далее","Пропуск");
			return true;
		}
		case D_REG_MAIL: {
			if(response) {
				if(strfind(inputtext,"|") != -1) {
					ErrorMessage(playerid,"У Вас в почте пристуствуют запрещенные символы");
					D(playerid,D_REG_MAIL,DSI, ""P"Регистрация",""G"Укажите Вашу "ORANGE"почту"G"\n\n\
						Укажите ваш реальный "P"Email"G". C помощью него вы сможете восстановить пароль","Далее","Пропуск");
					return 1;
				}
				if(!IsValidEmail(inputtext)) {
					ErrorMessage(playerid,"E-Mail не верный. Повторите ввод");
					D(playerid,D_REG_MAIL,DSI, ""P"Регистрация",""G"Укажите Вашу "ORANGE"почту"G"\n\n\
						Укажите ваш реальный "P"Email"G". C помощью него вы сможете восстановить пароль","Далее","Пропуск");
					return 1;
				}
				else {
					strmid(PI[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
					D(playerid,D_REG_FRIEND,DSI, ""P"Регистрация", ""G"Введите "ORANGE"ник"G" игрока, пригласившего Вас на сервер.\n\n\
						При достижении 4 уровня он получит "P"награду", "Далее", "Пропуск");
				}
			}
			else strmid(PI[playerid][pEmail], "no", 0, strlen("no"), strlen("-")+5);
			D(playerid,D_REG_FRIEND,DSI, ""P"Регистрация", ""G"Введите "ORANGE"ник"G" игрока, пригласившего Вас на сервер.\n\n\
						При достижении 4 уровня он получит "P"награду", "Далее", "Пропуск");
		}
  		case D_REG_FRIEND: {
		    if(response) {
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 25) {
					D(playerid,D_REG_FRIEND,DSI, ""P"Регистрация", ""G"Введите "ORANGE"ник"G" игрока, пригласившего Вас на сервер.\n\n\
					При достижении 4 уровня он получит "P"награду", "Далее", "Пропуск");
					return 1;
				}
		        new query[128];
		        mysql_format(connects, query, sizeof(query), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'", inputtext);
				mysql_tquery(connects, query, "friend_detectd","is", playerid,inputtext);
			}
			else strmid(PI[playerid][pDrug], "-", 0, strlen("-"), strlen("-")+5);
			D(playerid,D_REG_SEX,DSM, ""P"Регистрация", "\n"G"Выберите пол "ORANGE"Вашего"G" персонажа:\n", "Мужской", "Женский");
		}
  		case D_REG_SEX: {
			if(response) PI[playerid][pSex] = 1;
			else PI[playerid][pSex] = 2;
			ChosePlayerSkin(playerid);
		}
		case D_CLIST: {
			if(response == 1) {
				switch(listitem) {
					case 0: SetPlayerColor(playerid, TEAM_HIT_COLOR);
					case 1: SetPlayerColor(playerid,0x089401FF);
					case 2: SetPlayerColor(playerid,0x56FB4EFF);
					case 3: SetPlayerColor(playerid,0x49E789FF);
					case 4: SetPlayerColor(playerid,0x2A9170FF);
					case 5: SetPlayerColor(playerid,0x9ED201FF);
					case 6: SetPlayerColor(playerid,0x279B1EFF);
					case 7: SetPlayerColor(playerid,0x003366FF);
					case 8: SetPlayerColor(playerid,0xFF0606FF);
					case 9: SetPlayerColor(playerid,0xFF6600FF);
					case 10: SetPlayerColor(playerid,0xF45000FF);
					case 11: SetPlayerColor(playerid,0xBE8A01FF);
					case 12: SetPlayerColor(playerid,0xB30000FF);
					case 13: SetPlayerColor(playerid,0x954F4FFF);
					case 14: SetPlayerColor(playerid,0xE7961DFF);
					case 15: SetPlayerColor(playerid,0xE6284EFF);
					case 16: SetPlayerColor(playerid,0xFF9DB6FF);
					case 17: SetPlayerColor(playerid,0x110CE7FF);
					case 18: SetPlayerColor(playerid,0x0CD7E7FF);
					case 19: SetPlayerColor(playerid,0x139BECFF);
					case 20: SetPlayerColor(playerid,0x2C9197FF);
					case 21: SetPlayerColor(playerid,0x114D71FF);
					case 22: SetPlayerColor(playerid,0x8813E7FF);
					case 23: SetPlayerColor(playerid,0xB313E7FF);
					case 24: SetPlayerColor(playerid,0x758C9DFF);
					case 25: SetPlayerColor(playerid,0xFFDE24FF);
					case 26: SetPlayerColor(playerid,0xFFEE8AFF);
					case 27: SetPlayerColor(playerid,0xDDB201FF);
					case 28: SetPlayerColor(playerid,0xDDA701FF);
					case 29: SetPlayerColor(playerid,0xB0B000FF);
					case 30: SetPlayerColor(playerid,0x868484FF);
					case 31: SetPlayerColor(playerid,0xB8B6B6FF);
					case 32: SetPlayerColor(playerid,0x333333FF);
					case 33: SetPlayerColor(playerid,0xFAFAFAFF);
				}
			}
			else return true;
		}
		case D_CHANGE_PASS_SELECT: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return D(playerid,D_CHANGE_PASS_SELECT,DSI, ""P"Смена пароля","\n\n"W"Введите свой старый пароль:\n\n"NO"*"G" От 6 до 20 символов\n\n", "Ввод", "Назад");
			if(!CheckPassword(inputtext)) return D(playerid,D_CHANGE_PASS_SELECT,DSP,"Смена пароля","\n\n"W"Введите свой старый пароль:\n\n", "Ввод", "Назад");
			new query[200];
			format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' AND `pKey` = MD5('%s') LIMIT 1",GetName(playerid),inputtext);
			mysql_tquery(connects, query, "OnPlayerSelectPassword", "is",playerid, inputtext);
			return 1;
		}
		case D_CHANGE_PASS: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return D(playerid,D_CHANGE_PASS_SELECT,DSI, ""P"Смена пароля", "\n\n"W"Введите свой старый пароль:\n\n"NO"*"G" От 6 до 20 символов\n\n", "Ввод", "Назад");
			if(!CheckPassword(inputtext)) return D(playerid,D_CHANGE_PASS_SELECT,DSI, ""P"Смена пароля","\n\n"W"Введите свой старый пароль:\n\n", "Ввод", "Назад");
			new query[200],string[100];
			format(query, sizeof(query), "UPDATE `accounts` SET `pKey` = MD5('%s') WHERE `Name` = '%s' LIMIT 1",inputtext,GetName(playerid));
			mysql_tquery(connects,query);
			format(string, sizeof(string), "Ваш новый пароль: "W"%s", inputtext);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW, ""G"[Совет]"YELLOW" Мы рекомендуем Вам сделать скриншот. Клавиша "W"F8");
			return 1;
		}
		case D_CONTROL_EDIT: {
			if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
			    case 0: D(playerid,D_CHANGE_PASS_SELECT,DSP,"Смена пароля","\n\n"W"Введите свой старый пароль:\n\n", "Ввод", "Назад");
				case 1: {
					if(GetString(PI[playerid][pKeyip],"-")) {
						D(playerid, dCode, DSI, ""P"Защитный ключ", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n","Далее","Отмена");
					}
					else D(playerid, dChangeCode, DSL, ""P"Защитный ключ",""P"1."W" Сменить ключ\n"P"2."W" Отключить ключ\n"P"3."W" История входов","Выбрать", "Назад");
				}
				case 2: {
					if(!GetString(PI[playerid][pEmail],"no")) {
						new query[128],control;
						format(query, sizeof(query), "SELECT * FROM `email_success` WHERE BINARY `Account` = '%s' LIMIT 1", player_name[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name_int(0, "Type", control);
							if(control == 1) D(playerid, DIALOG_NONE, DSM, ""P"E-Mail", "\n\n"W"E-Mail адрес на Вашем аккаунте уже подтвержден. Изменить его нельзя\n\n","Закрыть","");
							else D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Закрыть");
						}
						else D(playerid, DIALOG_NONE, DSM, ""P"E-Mail", "\n\n"W"Подтвердите Ваш E-Mail адрес на сайте "YELLOW""NameSite"\n\n","Закрыть","");
						cache_delete(result);
					}
					else D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Закрыть");
				}
				case 3: {
					if(GetString(PI[playerid][pGoogle],"NULL")) {
						D(playerid, DIALOG_NONE, DSM, ""P"Google Authenticator", "\n\n"W"Подключите защиту в личном кабинете на нашем сайте - "ORANGE""NameSite"\n\n","Закрыть","");
						return 1;
					}
					D(playerid, D_GOOGLE, DSL, ""P"Google Authenticator", ""P"1."W" Запрашивать пароль при каждой смене IP адреса\n"P"2."W" Отключить Google Authenticator","Выбрать","Отмена");
				}
			}
		}
		case D_GOOGLE: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(PI[playerid][pGoogleSec]) return ErrorMessage(playerid,"У Вас уже подключена данная опция");
					if(!GetString(PI[playerid][pKeyip], "-")) return ErrorMessage(playerid,"Для защиты Google Authenticator отключите защитный ключ");
					PI[playerid][pGoogleSec] = 1;
					UpdatePlayerData(playerid,"pGoogle",1);
					SendOk(playerid,"Одноразовый пароль будет запрашиваться при каждой смене IP адреса");
				}
				case 1: {
					if(PI[playerid][pLeader]) return ErrorMessage(playerid,"Лидерам запрещено отключать данную защиту");
					if(PI[playerid][pAdmin]) return ErrorMessage(playerid,"Администраторам запрещено отключать данную защиту");
					new query[156];
					format(query,sizeof(query),"UPDATE accounts SET pGoogle = '0' WHERE BINARY `Name` = '%s' LIMIT 1",GetName(playerid));
					mysql_tquery(connects,query);
					SendOk(playerid,"Защита Google Authenticator была отключена");
				}
			}
		}
		case D_MAIL_CONTROL: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strfind(inputtext,"|") != -1) {
				ErrorMessage(playerid,"У Вас в почте пристуствуют запрещенные символы");
				D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Закрыть");
				return 1;
			}
			if(!IsValidEmail(inputtext)) {
				ErrorMessage(playerid,"E-Mail не верный. Повторите ввод");
				D(playerid,D_MAIL_CONTROL,DSI, ""P"E-Mail",""W"Укажите Вашу "GREEN"почту"W"\n\nУкажите ваш реальный "P"Email"W". C помощью него вы сможете восстановить пароль","Далее","Закрыть");
				return 1;
			}
			else {
				strmid(PI[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
				new query[156];
				format(query,sizeof(query),"UPDATE accounts SET pEmail = '%s' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pEmail],GetName(playerid));
				mysql_tquery(connects,query);
				new string[128];
				format(string,sizeof(string),"Ваш E-Mail адрес: "W"%s. "YELLOW"Подтвердите его на сайте "NameSite" в личном кабинете",PI[playerid][pEmail]);
				SendClientMessage(playerid,COLOR_YELLOW,string);
			}
		}
		case dChangeCode: {
			if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
				case 0: {
					if(GetString(PI[playerid][pKeyip],"-")) D(playerid,dCode,DSI, ""P"Защитный ключ", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n","Далее","Отмена");
					else D(playerid,dCodeChange1,3,"Защитный ключ","\n\n"W"Введите Ваш старый ключ безопасности:\n\n","Ввод","Назад");
				}
				case 1: {
					SetString(PI[playerid][pKeyip],"-");
					new query[156];
					format(query,sizeof(query),"UPDATE `accounts` SET `pKeyip` = '-' WHERE `Name` = '%s' LIMIT 1",GetName(playerid));
					mysql_tquery(connects,query);
					SendOk(playerid,"Ключ безопасности отключен");
				}
				case 2: {
					new string[164];
					format(string, sizeof(string), "SELECT * FROM `captchalog` WHERE `clName` = '%s' ORDER BY `captchalog`.`clID` DESC LIMIT 10", player_name[playerid]);
					mysql_tquery(connects, string, "OnPlayerCaptchaLoaded", "i", playerid);
				}
			}
		}
		case dCodeChange1: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strcmp(inputtext,PI[playerid][pKeyip],false) && strlen(inputtext)) {
				D(playerid,dCode,DSI, ""P"Защитный ключ", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n","Далее","Отмена");
			}
			else D(playerid,dCodeChange1,DSI, ""P"Защитный ключ","\n\n"W"Введите Ваш старый ключ безопасности:\n\n"NO"*"G" Ключ введён неверно\n\n","Ввод","Назад");
		}
		case dCode: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid, dCode, DSI, ""P"Защитный код:", "\n\n"W"Придумайте новый защитный ключ:\n"G"Защитный ключ будет запрашиваться после каждого входа в игру\n\n"NO"*"G" Ключ должен состоять из 4 цифр\n\n","Далее","Отмена");
			new string[200];
			format(string,sizeof(string),"Ваш новый защитный ключ: "W"%s."YELLOW" Он будет запрашиваться при входе в игру",(inputtext));
			SendClientMessage(playerid, COLOR_YELLOW,string);
			SendClientMessage(playerid, COLOR_YELLOW, ""G"[Совет]"YELLOW" Мы рекомендуем Вам сделать скриншот, восстановить ключ при утере будет невозможно. Клавиша "W"F8");
			SetString(PI[playerid][pKeyip],inputtext);
			new query[156];
			format(query,sizeof(query),"UPDATE `accounts` SET `pKeyip` = '%s' WHERE `Name` = '%s' LIMIT 1",(inputtext),GetName(playerid));
			mysql_pquery(connects,query);
			return 1;
		}
		case D_CHANGE_NAME: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strlen(inputtext)) return D(playerid,D_CHANGE_NAME,DSI, ""P"Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
			if(strlen(inputtext) < 5 || strlen(inputtext) > 20) return ErrorMessage(playerid,"Длина ника должна быть от 5 до 20 символов");
			if(strfind(inputtext, " ") != -1) return ErrorMessage(playerid,"В Вашем нике замечен пробел");
			if(IsIP(inputtext) || CheckString(inputtext) || strcmp(inputtext, "_",true) == -1) return ErrorMessage(playerid,"Введите новый ник по формату: Имя_Фамилия");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			format(query, sizeof(query), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_pquery(connects, query,  "CallChangeName", "d", playerid);
			return true;
		}
		case D_MENU: {
			if(!response) return 1;
			switch(listitem) {
				case 0: ShowStats(playerid,playerid,0);
				case 1: ShowSettings(playerid);
				case 2: D(playerid,D_MENU_COMMANDS,DSL, ""P"Команды", ""P"1."W" Общие команды\n"P"2."W" Чаты\n"P"3."W" По работе\n"P"4."W" Фракционные\n"P"5."W" Дом\n"P"6."W" Бизнес\n"P"7."W" Автомобиль\n"P"8."W" Семья\n"P"9."W" Лидер\n"P"10."W" Отель\n"P"11."W" Аэропорт", "Выбрать", "Назад");
				case 3: {
						if(PI[playerid][pAskmute]) return ErrorMessage(playerid,"У вас закрыт доступ к подаче вопросов");
						D(playerid,D_ASK,DSI, ""P"Связь с Game Support", "{d8284c}В{DCDCDC}ы собираетесь задать вопрос Game Support.\n\
						{d8284c}П{DCDCDC}ожалуйста, чётко и грамотно сформулируйте вопрос.\n\n\
						{d8284c}» Запрещён оффтоп, исп. CapsLock, оскорбления и нецензурная брань.", "Задать", "Назад");
				}
				case 4: {
					D(playerid,D_REPORT,DSI, ""P"Связь с администрацией", "{d8284c}В{DCDCDC}ы собираетесь отправить запрос администрации.\n\
						{d8284c}П{DCDCDC}ожалуйста, чётко и грамотно сформулируйте запрос.\n\
						{d8284c}Т{DCDCDC}акже, при подаче жалобы на игрока, укажите его ID.\n\n\
						{d8284c}» Запрещён оффтоп, исп. CapsLock, оскорбления и нецензурная брань.", "Отправить", "Назад");
				}
				case 5: D(playerid, D_CONTROL_EDIT, DSL, ""P"Безопасность", ""P"1."W" Изменить пароль\n"P"2."W" Защитный ключ\n"P"3."W" E-Mail адрес\n"P"4."W" Google Authenticator", "Выбрать", "Назад");
				case 6: {
					new plane = -1;
					for(new i=1;i<=gPlaneCount;i++) {
						if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
					}
					if(plane != -1) return ErrorMessage(playerid,"Для смены ника, необходимо отказаться от аренды воздушного транспорта");
					if(PI[playerid][pLeader]) return ErrorMessage(playerid,"Лидерам запрещено менять ник");
					D(playerid,D_CHANGE_NAME,DSI, ""P"Заявка на смену ника", "Напишите новый ник (по форме Имя_Фамилия)", "Отправить", "Назад");
				}
                case 7: return pc_cmd_donate(playerid);
				case 8: return D(playerid, D_USE_PROMO, DSI, ""P"Промокод", "\n\n"W"Введите "ORANGE"промокод"W" ютубера:\n\n", "Ввод", "Назад");
			}
		}
		case D_MENU_SETTING: {
			if(!response) return pc_cmd_menu(playerid,"");
		    switch(listitem) {
				case 0: {
					if(PI[playerid][pSettings][0]) {
						foreach(new i:Player) {
							if(!TI[i][tLogin]) continue;
							ShowPlayerNameTagForPlayer(playerid,i,0);
						}
						SendOk(playerid,"Вы отключили показ ников у игроков");
						PI[playerid][pSettings][listitem] = 0;
					}
					else {
						foreach(new i:Player) {
							if(!TI[i][tLogin]) continue;
							ShowPlayerNameTagForPlayer(playerid,i,1);
						}
						SendOk(playerid,"Вы включили показ ников у игроков");
						PI[playerid][pSettings][listitem] = 1;
					}
				}
				case 1: {
					if(PI[playerid][pSettings][listitem] == 0) {
						PI[playerid][pSettings][listitem] = 1;
						SendOk(playerid,"Вы включили чат организации");
					}
					else if(PI[playerid][pSettings][listitem] == 1) {
						PI[playerid][pSettings][listitem] = 0;
						SendOk(playerid,"Вы отключили чат организации");
					}
				}
				case 2: {
					if(PI[playerid][pSettings][3] == 0) {
						PI[playerid][pSettings][3] = 1;
						SendOk(playerid,"Вы включили чат компании");
					}
					else if(PI[playerid][pSettings][3] == 1) {
						PI[playerid][pSettings][3] = 0;
						SendOk(playerid,"Вы отключили чат компании");
					}
				}
				case 3: return D(playerid, D_NEWS_SELECT, DSL, ""P"Эфиры", ""P"1."W" Радиоцентр LS\n"P"2."W" Радиоцентр SF\n"P"3."W" Радиоцентр LV\n"P"-"W" Выключить", "Выбрать", "Назад");
				case 4: return D(playerid, D_CHAT, DSL, ""P"Стиль разговора", ""P"1."W" Стандартный\n"P"2."W" Стиль 1\n"P"3."W" Стиль 2\n"P"4."W" Стиль 3\n"P"5."W" Стиль 4\n"P"6."W" Стиль 5\n"P"7."W" Стиль 6", "Выбрать", "Назад");
				case 5: return D(playerid, D_BOX, DSL, ""P"Стиль боя", ""P"1."W" Стандартный\n"P"2."W" Бокс\n"P"3."W" Кунг-Фу\n"P"4."W" Кик-Бокс", "Выбрать", "Назад");
				case 6: {
					if(PI[playerid][pSettings][6]) {
						SendOk(playerid,"Вы скрыли состояние голода");
						PI[playerid][pSettings][6] = 0;
						Hunger(playerid,1);
					}
					else {
						SendOk(playerid,"Вы включили состояние голода");
						PI[playerid][pSettings][6] = 1;
						Hunger(playerid,0);
					}
				}
				case 7: {
					if(PI[playerid][pSettings][7]) {
						SendOk(playerid,"Вы убрали демонстрацию кейса в руках");
						PI[playerid][pSettings][7] = 0;
					}
					else {
						SendOk(playerid,"Вы включили показ демонстрацию кейса в руках");
						PI[playerid][pSettings][7] = 1;
					}
				}
				case 8: {
					if(PI[playerid][pSettings][8]) {
						SendOk(playerid,"Вы убрали окно прогрузки текстур");
						PI[playerid][pSettings][8] = 0;
					}
					else {
						SendOk(playerid,"Вы включили окно прогрузки текстур");
						PI[playerid][pSettings][8] = 1;
					}
				}
				case 9: {
					if(!PI[playerid][pSettings][9]) {
						SendOk(playerid,"Вы включили название семьи над головой");
						PI[playerid][pSettings][9] = 1;
					}
					else {
						SendOk(playerid,"Вы убрали название семьи над головой");
						PI[playerid][pSettings][9] = 0;
					}
				}
				case 10: {
					if(!PI[playerid][pSettings][10]) {
						SendOk(playerid,"Вы включили дамаг информер");
						PI[playerid][pSettings][10] = 1;
					}
					else {
						SendOk(playerid,"Вы выключили дамаг информер");
						PI[playerid][pSettings][10] = 0;
					}
				}
				case 11: return D(playerid, D_SPAWN, DSL, ""P"Выбор спавна", ""P"1."W" Вокзал\n"P"2."W" Дом/Отель\n"P"3."W" Организация", "Выбрать", "Отмена");
				case 12: return D(playerid, D_BUYACS_4, DSL,""P"Управление аксесурами",""P"1."W" Головные уборы\n"P"2."W" Очки\n"P"3."W" Банданы\n"P"4."W" Наушники\n"P"5."W" Часы\n"P"6."W" Рюкзаки" , "Выбрать", "Отмена");
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_MENU_COMMANDS: {
			if(!response) return pc_cmd_menu(playerid,"");
			new string[1512];
			switch(listitem) {
				case 0: {
					strcat(string,""P"/id"W" - узнать ид игрока по нику\n");
					strcat(string,""P"/ad"W" - подать объявление\n");
					strcat(string,""P"/radio"W" - выбрать радиостанцию\n");
					strcat(string,""P"/leaders"W" - руководители организаций (online)\n");
					strcat(string,""P"/subleaders"W" - заместители организаций (online)\n");
					strcat(string,""P"/anim"W" - список анимаций\n");
					strcat(string,""P"/number"W" - узнать номер игрока\n");
					strcat(string,""P"/с(/call)"W" - совершить вызов\n");
					strcat(string,""P"/sms"W" - написать СМС\n");
					strcat(string,""P"/book"W" - адресная книга\n");
					strcat(string,""P"/time"W" - посмотреть время(времени на сервере,заключения, бан чата)\n");
					strcat(string,""P"/pass"W" - показать паспорт\n");
					strcat(string,""P"/lic"W" - показать лицензии\n");
					strcat(string,""P"/togphone"W" - выключить/включить телефон\n");
					strcat(string,""P"/pay"W" - передать деньги\n");
					strcat(string,""P"/hi"W" - пожать руку\n");
					strcat(string,""P"/namestore"W" - узнать прошлые ники игрока\n");
					strcat(string,""P"/buyfuel"W" - купить канистру с бензином\n");
					strcat(string,""P"/fillcar"W" - использовать канистру с бензином\n");
					strcat(string,""P"/propose"W" - сделать предложение\n");
					strcat(string,""P"/divorce"W" - развестись\n");
					strcat(string,""P"/medcard"W" - показать мед. карту\n");
					strcat(string,""P"/play"W" - онлайн радио\n");
					strcat(string,""P"/referals"W" - список рефералов\n");
					strcat(string,""P"/leave"W" - уволиться из организации\n");
					strcat(string,""P"/give"W" - передать предмет\n");
					strcat(string,""P"/wbook"W" - просмотр трудовой книжки\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 1: {
					strcat(string,""P"/b"W" - ООС чат\n");
					strcat(string,""P"/me"W" - чат действий\n");
					strcat(string,""P"/ame"W" - действий над головой\n");
					strcat(string,""P"/do"W" - чат от 3-го лица\n");
					strcat(string,""P"/ado"W" - чат от 3-го лица над головой\n");
					strcat(string,""P"/try"W" - попытка действия (Удачно, Неудачно)\n");
					strcat(string,""P"/todo"W" - разговор совмещён с действием\n");
					strcat(string,""P"/s"W" - кричать\n");
					strcat(string,""P"/w"W" - шептать\n");
					strcat(string,""P"/flip"W" - подбросить монетку\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 2: {
					switch(PI[playerid][pJob]) {
						case 1: {
							strcat(string,""GREEN"Чтобы начать работу автобусника, необходимо арендовать автобус.\n");
							strcat(string,""GREEN"Место аренды автобусов Вы можете найти в GPS.\n");
							strcat(string,"\t\t\t"YELLOW"/gps >> работы\n");
						}
						case 2: {
							strcat(string,""P"/repairs"W" - список вызовов\n");
							strcat(string,""P"/repair"W" - починить автомобиль\n");
							strcat(string,""P"/refill"W" - заправить автомобиль\n");
							strcat(string,""P"/contract"W" - купить топливо у АЗС\n");
							strcat(string,""P"/tow"W" - буксировать автомобиль\n");
							strcat(string,""P"/untow"W" - отцепить автомобиль\n");
						}
						case 3: {
							strcat(string,""P"/prods"W" - список заказов продуктов/топлива\n");
							strcat(string,""GREEN"Место аренды развозчиков продуктов/топлива Вы можете найти в GPS.\n");
							strcat(string,"\t\t\t"YELLOW"/gps >> работы\n");
						}
						case 4: {
							strcat(string,""P"/bhd"W" - купить хот-доги у закусочной\n");
							strcat(string,""P"/shd"W" - продать хот-дог игроку\n");
						}
						case 5: {
							strcat(string,""GREEN"Место аренды Т/С для скашивания травы Вы можете найти в GPS.\n");
						}
						case 6: {
							strcat(string,""P"/zonestatus"W" - список зон для скашивания травы\n");
							strcat(string,""GREEN"Место аренды Т/С для скашивания травы Вы можете найти в GPS.\n");
						}
						default: return ErrorMessage(playerid,"Вы не трудоустроены"),pc_cmd_menu(playerid,"");
					}
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 3: {
					switch(GetTeamID(playerid)) {
						case fLSPD,fSFPD,fLVPD,fFBI: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/m"W" - мегафон\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/su"W" - выдать розыск\n");
							strcat(string,""P"/clear"W" - снять розыск\n");
							strcat(string,""P"/ud"W" - показать удостоверение\n");
							strcat(string,""P"/gotome"W" - тащить за собой\n");
							strcat(string,""P"/tazer"W" - поразить электрошокером\n");
							strcat(string,""P"/cuff"W" - надеть наручники\n");
							strcat(string,""P"/uncuff"W" - снять наручники\n");
							strcat(string,""P"/obc"W" - бортовой компьютер\n");
							strcat(string,""P"/arrest"W" - посадить в КПЗ\n");
							strcat(string,""P"/push"W" - затолкать в автомобиль\n");
							strcat(string,""P"/unmask"W" - снять маску\n");
							strcat(string,""P"/look"W" - обыскать игрока\n");
							strcat(string,""P"/take"W" - изъять лицензии/вещи\n");
							strcat(string,""P"/ticket"W" - выписать штраф\n");
							strcat(string,""P"/spikes"W" - выбросить шипы\n");
							strcat(string,""P"/hack"W" - взломать дверь дома\n");
							strcat(string,""P"/fences"W" - установить ограждение\n");
							if(GetTeamID(playerid) == fFBI) {
								strcat(string,""P"/demote"W" - понизить/уволить гос.служащего\n");
								strcat(string,""P"/fakepass"W" - показать поддельный паспорт\n");
								strcat(string,""P"/givekey"W" - выдать/забрать пропуск\n");
							}
						}
						case fMEDICLS,fMEDICSF,fMEDICLV: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/heal"W" - вылечить игрока\n");
							strcat(string,""P"/medics"W" - список вызовов\n");
							strcat(string,""P"/bheal"W" - вылечить от болезней\n");
							strcat(string,""P"/gmed"W" - поставить печать в лицензию на оружие\n");
						}
						case fLSNEWS,fSFNEWS,fLVNEWS: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/ether"W" - прямой эфир\n");
							strcat(string,""P"/edit"W" - объявления\n");
							strcat(string,""P"/skip"W" - положить трубку\n");
							strcat(string,""P"/udjur"W" - показать удостоверение журналиста\n");
							strcat(string,""P"/audience"W" - рейтинг слушателей\n");
						}
						case fARMYLV,fARMYSF: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							strcat(string,""P"/load"W" - начать загрузку боеприпасов\n");
							strcat(string,""P"/unload"W" - начать разгрузку боеприпасов\n");
							strcat(string,""P"/carm"W" - начать перевозку боеприпасов\n");
						}
						case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
							strcat(string,""P"/f"W" - рация\n");
							strcat(string,""P"/fb"W" - НонРП рация\n");
							strcat(string,""P"/bc"W" - чат банд\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/capture"W" - начать войну за территорию\n");
							strcat(string,""P"/kd"W" - узнать время до начала капта\n");
							strcat(string,""P"/zone"W" - узнать количество территорий\n");
							strcat(string,""P"/makegun"W" - сделать оружие\n");
							strcat(string,""P"/getgun"W" - взять оружие со склада\n");
							strcat(string,""P"/sellgun"W" - продать оружие\n");
							strcat(string,""P"/load"W" - начать загрузку материалов\n");
							strcat(string,""P"/unload"W" - начать разгрузку материалов\n");
							strcat(string,""P"/mask"W" - надеть маску\n");
							strcat(string,""P"/maskoff"W" - снять маску\n");
							strcat(string,""P"/dress"W" - переодеться в военную форму\n");
							strcat(string,""P"/givekey"W" - выдать/забрать пропуск\n");
							strcat(string,""P"/robhouse"W" - ограбить дом\n");
							strcat(string,""P"/srace"W" - уличные гонки\n");
							strcat(string,""P"/sellzone"W" - продать территорию\n");
							strcat(string,""P"/sklad"W" - открыть/закрыть склад\n");
							strcat(string,""P"/bmarket"W" - управление черным рынком\n");
							strcat(string,""P"/spawncars"W" - заспавнить незанятые авто\n");
							strcat(string,""P"/gpay"W" - выдать премию\n");
						}
						case fRM,fLCN,fYAKUZA: {
							strcat(string,""P"/f"W" - рация\n");
							strcat(string,""P"/fb"W" - НонРП рация\n");
							strcat(string,""P"/rr"W" - рация подфракций\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/bizwar"W" - начать войну за бизнес\n");
							strcat(string,""P"/bizlist"W" - посмотреть список бизнесов под контролем\n");
							strcat(string,""P"/tie"W" - связать игрока\n");
							strcat(string,""P"/untie"W" - развязать игрока\n");
							strcat(string,""P"/takephone"W" - забрать телефон\n");
							strcat(string,""P"/givephone"W" - вернуть телефон\n");
							strcat(string,""P"/gag"W" - вставить/достать кляп\n");
							strcat(string,""P"/bag"W" - надеть/снять мешок с головы\n");
							strcat(string,""P"/sklad"W" - открыть/закрыть склад\n");
							strcat(string,""P"/makegun"W" - сделать оружие\n");
							strcat(string,""P"/load"W" - начать загрузку боеприпасов\n");
							strcat(string,""P"/unload"W" - начать разгрузку боеприпасов\n");
						}
						case fMAYOR: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
						}
						case fWHITEHOUSE: {
							strcat(string,""P"/r"W" - рация\n");
							strcat(string,""P"/rb"W" - НонРП рация\n");
							strcat(string,""P"/d"W" - рация гос. департамента\n");
							strcat(string,""P"/db"W" - НонРП рация гос. департамента\n");
							strcat(string,""P"/members"W" - посмотреть онлайн фракции\n");
							strcat(string,""P"/gnews"W" - гос. новости\n");
							//strcat(string,""P"/giveleader"W" - назначить лидером\n");
							strcat(string,""P"/free"W" - выпустить из тюрьмы\n");
						}
						default: return ErrorMessage(playerid,"Вы не состоите в организации");
					}
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 4: {
				    if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У вас нет дома!");
					strcat(string,""P"/house"W" - меню управления домом\n");
					strcat(string,""P"/safe"W" - сейф\n");
					strcat(string,""P"/hhealme"W" - использовать аптечку\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 5: {
				    if(!PI[playerid][pBusiness]) return ErrorMessage(playerid,"У вас нет бизнеса!");
					strcat(string,""P"/bpanel"W" - меню управления бизнесом\n");
					strcat(string,""P"/tinvite"W" - принять в таксопарк\n");
					strcat(string,""P"/trinvite"W" - принять в транспортную компанию\n");
					strcat(string,""P"/tr"W" - чат таксопарка/транспортной компании\n");
					strcat(string,""P"/trspcar"W" - спавн автомобилей транспортной компании\n");
					strcat(string,""P"/taxispcar"W" - спавн автомобилей таксопарка\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 6: {
					strcat(string,""P"/lock"W" - открыть/закрыть Т/С\n");
					strcat(string,""P"/changecar"W" - продать/обменять Т/С\n");
					strcat(string,""P"/trunk"W" - багажник\n");
					strcat(string,""P"/slimit"W" - установить ограничение скорости Т/С\n");
					strcat(string,""P"/remp"W" - починить Т/С\n");
					strcat(string,""P"/mode"W" - переключить режим езды (perfomance)\n");
					strcat(string,""P"/fixcar"W" - заспавнить авто\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 7: {
					if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
					strcat(string,""P"/fmenu"W" - меню семьи\n");
					strcat(string,""P"/fam"W" - чат семьи\n");
					strcat(string,""P"/finvite"W" - принять в семью\n");
					strcat(string,""P"/funinvite"W" - выгнать из семьи\n");
					strcat(string,""P"/foffuninvite"W" - выгнать из семьи в оффлайн\n");
					strcat(string,""P"/frang"W" - повысить/понизить члена семьи\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 8: {
					if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вы не лидер");
					strcat(string,""P"/invite"W" - принять игрока в организацию\n");
					strcat(string,""P"/uninvite"W" - выгнать игрока из организации\n");
					strcat(string,""P"/rang"W" - повысить/понизить ранг\n");
					strcat(string,""P"/changeskin"W" - сменить скин игроку\n");
					strcat(string,""P"/lmenu"W" - меню лидера\n");
					strcat(string,""P"/fwarn"W" - выдать выговор\n");
					strcat(string,""P"/funwarn"W" - снять выговор\n");
					strcat(string,""P"/showall"W" - члены фракции оффлайн\n");
					strcat(string,""P"/bl"W" - управление черным списком\n");
					strcat(string,""P"/fmute"W" - выдать заглушку\n");
					strcat(string,""P"/funmute"W" - снять заглушку\n");
					D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 9: {
				    if(!PI[playerid][pHotel]) return ErrorMessage(playerid,"У вас нет отеля!");
				    strcat(string,""P"/htpanel"W" - меню управления отелем\n");
				    D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
				case 10: {
				    if(PI[playerid][pAirport] < 1) return ErrorMessage(playerid,"У Вас нет аэропорта!");
				    strcat(string,""P"/airpanel"W" - меню управления аэропортом\n");
				    D(playerid,DIALOG_NONE,DSM, ""P"Команды",string,"Закрыть","");
				}
			}
		}
		case D_CHAT: {
			if(!response) return ShowSettings(playerid);
			PI[playerid][pSettings][4] = listitem;
			SendOk(playerid, "Вы выбрали новый стиль разговора для своего персонажа");
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_BOX: {
			if(!response) return ShowSettings(playerid);
			if(PI[playerid][pBox] < listitem) return ErrorMessage(playerid,"Выбранный стиль еще не изучен. Отправляйтесь в спорт-зал"),ShowSettings(playerid);
			PI[playerid][pSettings][5] = listitem;
			SendOk(playerid, "Вы выбрали новый стиль боя для своего персонажа");
			switch(listitem) {
				case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_NEWS_SELECT: {
			if(!response) return ShowSettings(playerid);
			switch(listitem) {
				case 0: PI[playerid][pSettings][2] = fLSNEWS;
				case 1: PI[playerid][pSettings][2] = fSFNEWS;
				case 2: PI[playerid][pSettings][2] = fLVNEWS;
				case 3: PI[playerid][pSettings][2] = 0;
			}
			SendOk(playerid, "Радиостанция успешно установлена");
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_NEWS_SELECT_2: {
			if(!response) return 1;
			switch(listitem) {
				case 0: PI[playerid][pSettings][2] = fLSNEWS;
				case 1: PI[playerid][pSettings][2] = fSFNEWS;
				case 2: PI[playerid][pSettings][2] = fLVNEWS;
				case 3: PI[playerid][pSettings][2] = 0;
			}
			SendOk(playerid, "Радиостанция успешно установлена");
			save_settings(playerid);
		}
  		case D_BAN_LIST: {
			if(response) {
			    if(listitem == 20 || listitem == 21) CheckBanned(playerid,listitem);
       			else {
			        strmid(UnbanName[playerid], inputtext, 0, strlen(inputtext) );
			        if(GetString(inputtext, "<<< Назад")) return CheckBanned(playerid,21);
					new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0,query[128],string[220];
				    format(query, sizeof(query), "SELECT * FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
   					new Cache:result = mysql_query(connects, query);
   					new rows = cache_num_rows();
					if(rows > 0) {
						cache_get_value_index(0,1,NAME_PLAYER,24);
						cache_get_value_index(0,2,NAME_ADMIN,24);
						cache_get_value_index(0,3,BAN_REASON,24);
						cache_get_value_index_int(0,4,UNBAN_DATA);
						if(UNBAN_DATA > unix) {
							new date_ban[6];
							timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

							format(string,sizeof(string),"\
							"W"Заблокирован:\t"NO"%s\n\
							"W"Заблокировал:\t"ORANGE"%s\n\
							"W"Причина:\t\t"ORANGE"%s\n\
							"W"Разблокировка:\t"ORANGE"%02d/%02d/%02d %02d:%02d:%02d",
							NAME_PLAYER,NAME_ADMIN, BAN_REASON ,date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5]);
							D(playerid,D_UNBAN,DSM, ""P"Разблокировка",string,"Разбанить","Отмена");
						}
						else {
							static const f_str[] = "Игрок %s не забанен";
							new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
							
							format(str, sizeof(str), f_str, UnbanName[playerid]);
							ErrorMessage(playerid, str);
						}
					}
				    cache_delete(result);
			    }
			}
		}
  		case D_TRUNK_LIST: {
		    if(response) {
		        new idofcar = idaofcar[playerid];
				switch(listitem) {
				    case 0: {
						if(idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Машина не принадлежит Вам"),trunk_close(playerid);
				        if(!TrunkInfo[idofcar][tOpen]) {
							TrunkInfo[idofcar][tOpen] = 1;
							pc_cmd_trunk(playerid);
						}
				        else TrunkInfo[idofcar][tOpen] = 0;
				        pc_cmd_trunk(playerid);
				    }
				    case 1: {
                        nedded[playerid] = 1;
						new string[128];
                        format(string,sizeof(string),""W"Достать канистру\nПоложить канистру\nДоступно: "P"[%d/2]",TrunkInfo[idofcar][tKanistra]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
        			case 2: {
                        nedded[playerid] = 2;
						new string[128];
                        format(string,sizeof(string),""W"Достать наркотики\nПоложить наркотики\nДоступно: "P"[%d/200]",TrunkInfo[idofcar][tNarko]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
                	case 3: {
                        nedded[playerid] = 3;
                        new string[128];
                        format(string,sizeof(string),""W"Достать боеприпасы\nПоложить боеприпасы\nДоступно: "P"[%d/1000]",TrunkInfo[idofcar][tMats]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
        			case 4: {
                        nedded[playerid] = 4;
                        new string[128];
                        format(string,sizeof(string),""W"Достать Deagle\nПоложить Deagle\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][0]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
                	case 5: {
                        nedded[playerid] = 5;
                        new string[128];
                        format(string,sizeof(string),""W"Достать AK-47\nПоложить AK-47\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][1]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
                    case 6: {
                        nedded[playerid] = 6;
						new string[128];
                        format(string,sizeof(string),""W"Достать M4\nПоложить M4\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][2]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
                    case 7: {
                        nedded[playerid] = 7;
                        new string[128];
                        format(string,sizeof(string),""W"Достать ShotGun\nПоложить ShotGun\nДоступно: "P"[%d/50]",TrunkInfo[idofcar][tGun][3]);
                        D(playerid,D_TRUNK_SELECT,DSL,""P"Багажник",string,"Принять","Отмена");
				    }
				}
				SaveTrunk(idofcar);
		    }
			else trunk_close(playerid);
		}
  		case D_TRUNK_SELECT: {
		    if(response) {
		        new item[30];
		        switch(nedded[playerid]) {
		            case 1: item = "канистр";
		            case 2: item = "наркотиков";
		            case 3: item = "боеприпасов";
		            case 4: item = "патронов Deagle";
		            case 5: item = "патронов AK47";
		            case 6: item = "патронов M4";
		            case 7: item = "патронов ShotGun";
		            default: return false;
		        }
				new string[128];
		        switch(listitem) {
		            case 0: {
		                format(string,sizeof(string),""W"Введите кол-во %s, которое хотите достать с багажника:",item);
		                D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",string,"Принять","Отмена");
		            }
		            case 1: {
					    format(string,sizeof(string),""W"Введите кол-во %s, которое хотите положить в багажник:",item);
		                D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",string,"Принять","Отмена");
					}
		        }
		    }
		    else pc_cmd_trunk(playerid);
		}
		case D_TRUNK_INPUT: {
		    if(response) {
		        if(!strlen(inputtext)) return pc_cmd_trunk(playerid);
		        new bitem = strval(inputtext),idofcar=idaofcar[playerid],string[156];
		        if(bitem<1) return pc_cmd_trunk(playerid),SendClientMessage(playerid,COLOR_RED,"Ошибка");
		        switch(nedded[playerid]) {
                    case 1: {
						if(bitem>TrunkInfo[idofcar][tKanistra]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во канистр, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва канистр","Принять","Отмена");
						}
						if((PI[playerid][pFuel]+bitem)>vip_status[PI[playerid][pVips]][vip_fuel]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во канистр, которое хотите достать с багажника:\n\n"NO"*"G" Вы не можете взять с собой так много канистр","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PI[playerid][pFuel] +=bitem;
						UpdatePlayerData(playerid,"pFuel",PI[playerid][pFuel]);
						TrunkInfo[idofcar][tKanistra] -= bitem;
						pc_cmd_trunk(playerid),SendUse(playerid,"Вы взяли "ORANGE"1 "G"канистру с багажника");
		            }
                    case 2: {
						if(bitem>TrunkInfo[idofcar][tNarko]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во наркотиков, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва наркотиков","Принять","Отмена");
						}
						if((PI[playerid][pDrugs]+bitem)>vip_status[PI[playerid][pVips]][vip_drugs]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во наркотиков, которое хотите достать с багажника:\n\n"NO"*"G" Вы не можете взять с собой так много наркотиков","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PI[playerid][pDrugs] += bitem;
						TrunkInfo[idofcar][tNarko] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "G"наркотиков с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 3: {
						if(bitem>TrunkInfo[idofcar][tMats]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во боеприпасов, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва боеприпасов","Принять","Отмена");
		                }
						if((PI[playerid][pMats]+bitem)>vip_status[PI[playerid][pVips]][vip_mats]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во боеприпасов, которое хотите достать с багажника:\n\n"NO"*"G" Вы не можете взять с собой так много боеприпасов","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PI[playerid][pMats] += bitem;
						TrunkInfo[idofcar][tMats] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "G"боеприпасов с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 4: {
						if(bitem>TrunkInfo[idofcar][tGun][0]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов Deagle, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов Deagle","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 24, bitem);
						TrunkInfo[idofcar][tGun][0] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "G"патронов Deagle с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 5: {
						if(bitem>TrunkInfo[idofcar][tGun][1]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов AK-47, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов AK-47","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 30, bitem);
						TrunkInfo[idofcar][tGun][1] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "G"патронов AK-47 с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 6: {
						if(bitem>TrunkInfo[idofcar][tGun][2]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов M4, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов M4","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 31, bitem);
						TrunkInfo[idofcar][tGun][2] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "G"патронов M4 с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 7: {
						if(bitem>TrunkInfo[idofcar][tGun][3]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""P"Багажник",""W"Введите кол-во патронов ShotGun, которое хотите достать с багажника:\n\n"NO"*"G" В багажнике нет такого кол-ва патронов ShotGun","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 25, bitem);
						TrunkInfo[idofcar][tGun][3] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы взяли "ORANGE"%d "G"патронов ShotGun с багажника",bitem);
						SendUse(playerid,string);
		            }
		            default: return true;
		        }
		        ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
				SaveTrunk(idofcar);
		    }
		    else pc_cmd_trunk(playerid);
		}
		case D_TRUNK_PUT: {
		    if(response) {
		        if(!strlen(inputtext)) return pc_cmd_trunk(playerid);
		        new bitem = strval(inputtext),idofcar=idaofcar[playerid],string[156];
		        if(bitem<1)return pc_cmd_trunk(playerid),SendClientMessage(playerid,COLOR_RED,"Ошибка");
		        switch(nedded[playerid]) {
              		case 1: {
		                if((TrunkInfo[idofcar][tKanistra]+bitem)>2) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во канистр, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения канистр","Принять","Отмена");
						}
						if(bitem>PI[playerid][pFuel]) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во канистр, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько канистр","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PI[playerid][pFuel]-=1;
						UpdatePlayerData(playerid,"pFuel",PI[playerid][pFuel]);
						TrunkInfo[idofcar][tKanistra]+=bitem;
						pc_cmd_trunk(playerid),SendUse(playerid,"Вы положили "ORANGE"1 "G"канистру в багажник");
		            }
              		case 2: {
		                if((TrunkInfo[idofcar][tDrugs]+bitem)>200) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во наркотиков, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения наркотиков","Принять","Отмена");
						}
						if(bitem>PI[playerid][pDrugs]) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во наркотиков, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько наркотиков","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PI[playerid][pDrugs]-=bitem;
						TrunkInfo[idofcar][tNarko]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "G"наркотиков в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 3: {
		                if((TrunkInfo[idofcar][tMats]+bitem)>1000) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во боеприпасов, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения боеприпасов","Принять","Отмена");
						}
						if(bitem>PI[playerid][pMats]) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во боеприпасов, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько боеприпасов","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PI[playerid][pMats]-=bitem;
						TrunkInfo[idofcar][tMats]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "G"боеприпасов в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 4: {
						if((TrunkInfo[idofcar][tGun][0]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов Deagle, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов Deagle","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов Deagle, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов Deagle","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 24, -bitem);
						TrunkInfo[idofcar][tGun][0]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "G"патронов Deagle в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 5: {
		                if((TrunkInfo[idofcar][tGun][1]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов AK-47, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов AK-47","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов AK-47, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов AK-47","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 30, -bitem);
						TrunkInfo[idofcar][tGun][1]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "G"патронов AK-47 в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 6: {
		                if((TrunkInfo[idofcar][tGun][2]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов M4, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов M4","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов M4, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов M4","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 31, -bitem);
						TrunkInfo[idofcar][tGun][2]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "G"патронов M4 в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 7: {
		                if((TrunkInfo[idofcar][tGun][3]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов ShotGun, которое хотите положить в багажника:\n\n"NO"*"G" В багажнике нет места для хранения патронов ShotGun","Принять","Отмена");
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""P"Багажник",""W"Введите кол-во патронов ShotGun, которое хотите положить в багажника:\n\n"NO"*"G" У Вас нет столько патронов ShotGun","Принять","Отмена");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 25, -bitem);
						TrunkInfo[idofcar][tGun][3]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Вы положили "ORANGE"%d "G"патронов ShotGun в багажник",bitem);
						SendUse(playerid,string);
		            }
		            default: return true;
		        }
				SaveTrunk(idofcar);
		        ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
		    }
		    else pc_cmd_trunk(playerid);
		}
		case D_NEWS: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(!TI[playerid][tEther]) {
						TI[playerid][tEther] = true;
						SendOk(playerid,"Вы в прямом эфире");
						PI[playerid][pSettings][2] = PI[playerid][pMember];
						save_settings(playerid);
					}
					else {
						ether_closed(playerid);
						TI[playerid][tEther] = false;
						SendOk(playerid,"Вы вышли из прямого эфира");
					}
				}
				case 1: {
					new str[64];
					switch(PI[playerid][pMember]) {
						case fLSNEWS: {
							if(calls_news[0] == INVALID_PLAYER_ID) str = "Приём звонков - ["GREEN"Отсутствует"W"]";
							else format(str,sizeof(str),"Приём звонков - ["P"%s]",player_name[calls_news[0]]);
						}
						case fSFNEWS: {
							if(calls_news[1] == INVALID_PLAYER_ID) str = "Приём звонков - ["GREEN"Отсутствует"W"]";
							else format(str,sizeof(str),"Приём звонков - ["P"%s]",player_name[calls_news[1]]);
						}
						case fLVNEWS: {
							if(calls_news[2] == INVALID_PLAYER_ID) str = "Приём звонков - ["GREEN"Отсутствует"W"]";
							else format(str,sizeof(str),"Приём звонков - ["P"%s]",player_name[calls_news[2]]);
						}
					}
					new string[128];
					format(string,sizeof(string),""W"1. %s\n"W"2. Цена за звонки - ["GREEN"%d"W"]",str,FI[PI[playerid][pMember]][fPrice]);
					D(playerid,D_NEWS_ETHER, DSL, ""P"Меню эфира", string, "Далее", "Отмена");
				}
			}
		}
		case D_NEWS_ETHER: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(!TI[playerid][tEther]) return ErrorMessage(playerid,"Для приёма звонков необходимо находиться в прямом эфире");
					switch(PI[playerid][pMember]) {
						case fLSNEWS: {
							if(calls_news[0] == INVALID_PLAYER_ID) {
								calls_news[0] = playerid;
								new string[128];
								format(string,sizeof(string),"%s начал(а) приём звонков",player_name[playerid]);
								SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[0] == playerid) {
									ether_closed(playerid);
								}
								else ErrorMessage(playerid,"Кто-то из сотрудников уже принимает звонки");
							}
						}
						case fSFNEWS: {
							if(calls_news[1] == INVALID_PLAYER_ID) {
								calls_news[1] = playerid;
								new string[128];
								format(string,sizeof(string),"%s начал(а) приём звонков",player_name[playerid]);
								SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[1] == playerid) {
									ether_closed(playerid);
								}
								else ErrorMessage(playerid,"Кто-то из сотрудников уже принимает звонки");
							}
						}
						case fLVNEWS: {
							if(calls_news[2] == INVALID_PLAYER_ID) {
								calls_news[2] = playerid;
								new string[128];
								format(string,sizeof(string),"%s начал(а) приём звонков",player_name[playerid]);
								SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[2] == playerid) {
									ether_closed(playerid);
								}
								else ErrorMessage(playerid,"Кто-то из сотрудников уже принимает звонки");
							}
						}
					}
				}
				case 1: {
					if(PI[playerid][pMember] < 9) return ErrorMessage(playerid,"Данная функция Вам недоступна");
					D(playerid,D_NEWS_ETHER_PRICE, DSI, ""P"Цена за звонки", ""W"Введите стоимость за звонки:", "Далее", "Отмена");
				}
			}
		}
		case D_NEWS_ETHER_PRICE: {
			if(!response) return 1;
			new price = strval(inputtext);
			if(price < 10 || price > 50) return D(playerid,D_NEWS_ETHER_PRICE,DSI, ""P"Цена за звонки",""W"Введите стоимость за звонки:\n\n"NO"*"G" От $10 до $50","Далее","Отмена");
			FI[PI[playerid][pMember]][fPrice] = price;
			new string[128];
			format(string,sizeof(string),"%s установил(а) цену звонков - %d",player_name[playerid],price);
			SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
		}
	 	case D_ADVERT_LIST: {
			if(!response) return 1;
		    SetPVarInt(playerid,"editadvert",listitem);
			new id = GetPVarInt(playerid,"editadvert");
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			gAdvert[listitem][adCheking] = true;
			SetPVarInt(playerid,"adchecking_fix",listitem+1);
			static const f_str[] = ""W"Отправитель: {33AA33}%s"W"\n\
				Текст: {FFD700}%s"W"\n\n\
				Для публикации объявления, нажмите: {73B461}'ОТПРАВИТЬ'"W"\n\
				Чтобы отклонить или отправить сообщение администрации, нажмите: {E11C1C}'РЕДАКТОР'";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
			
		    format(string,sizeof(string), f_str ,gAdvert[id][adSender],gAdvert[id][adText],gAdvert[id][adText]);
			D(playerid,D_ADVERT_LIST_EDIT,DSI, ""P"Редактирование",string,"Отправить","Редактор");
		}
		case D_ADVERT_LIST_2: {
			if(!response) {
				if(GetPVarInt(playerid,"adchecking_fix")) {
					gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
					DeletePVar(playerid,"adchecking_fix");
				}
				return 1;
			}
			DeletePVar(playerid,"adchecking_fix");
		    new id = GetPVarInt(playerid,"editadvert");
		    new player = GetCheckID(gAdvert[id][adSender]);

		    if(listitem == 1) {
				new string[143];
				format(string, sizeof(string), "[NEWS] %s[%d]: %s", gAdvert[id][adSender],gAdvert[id][adID], gAdvert[id][adText]);
				SendAdminMessage(0x008e8cff,string);
			}
			
		    static const f_str[] = "Ваше объявление было отклонено редактором: {33AA33}%s"G"";
		    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
		    format(string,sizeof(string),f_str,player_name[playerid]);
			SendOk(player,string);
			
			strdel(gAdvert[id][adSender],0,24);
			gAdvert[id][adPhone] = 0;
			strdel(gAdvert[id][adText],0,100);
			gAdvert[id][adBusy] = false;
			gAdvert[id][adCheked] = false;
			gAdvert[id][adCheking] = false;
			if(gAdvertCount > 0) gAdvertCount--;
			return ShowAdvertList(playerid);
		}
		case D_ADVERT_LIST_EDIT: {
			if(!response) return D(playerid,D_ADVERT_LIST_2,DSL, ""P"Редактирование",""P"1."W" Отклонить объявление\n"P"2."W" Отклонить и отправить администрации","Выбрать","Отмена");
			new id = GetPVarInt(playerid,"editadvert");
            switch(PI[playerid][pMember]) {
                case fLSNEWS: gAdvert[id][adNews] = "LS";
                case fSFNEWS: gAdvert[id][adNews] = "SF";
                case fLVNEWS: gAdvert[id][adNews] = "LV";
            }
			if(strlen(inputtext)) format(gAdvert[id][adText],100,"%s",inputtext);
			format(gAdvert[id][adCheker],24,"%s",player_name[playerid]);

			FI[PI[playerid][pMember]][fBank] += gAdvert[id][adMoney];
			UpdateFraction(PI[playerid][pMember],"Bank",FI[PI[playerid][pMember]][fBank]);
			PI[playerid][pSalary] += 50;
			
            gAdvert[id][adTime] = gAdvertTime;
			gAdvertTime += 30;
			
			gAdvert[id][adCheking] = false;
			gAdvert[id][adCheked] = true;

			PI[playerid][pAdvert] ++;
			ShowAdvertList(playerid);
		}
	 	case D_ADVERT_START: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = GetPVarInt(playerid,"ad_price");
			DeletePVar(playerid,"ad_price");
			if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			GiveMoney(playerid,-price,"подача объявления");
			gAdvert[slot][adMoney] = price;
			format(gAdvert[slot][adSender],24,"%s",player_name[playerid]);
			gAdvert[slot][adID] = playerid;
			gAdvert[slot][adPhone] = PI[playerid][pPhone];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			gAdvert[slot][adTime] = gAdvertTime;
			if(PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				gAdvert[slot][adVIP] = true;
			}
			gAdvertTime += 30;
			SetPVarInt(playerid, #pAdvertTime, gettime()+60);
			new mes[90];
			format(mes, sizeof mes, "[ ! ] Поступило новое объявление от %s | Отредактируйте: /edit", gAdvert[slot][adSender]);
			SendFamilyMessage(fLSNEWS, 0x139BECFF, mes);
			SendFamilyMessage(fSFNEWS, 0x139BECFF, mes);
			SendFamilyMessage(fLVNEWS, 0x139BECFF, mes);
			SendOk(playerid,"Объявление подано в редакцию. Ожидайте проверки");
		}
		case D_DJMSG: {
			if(response) {
				if(DJlvl[playerid] < 1 ) return 1;
				new string[144];
				switch(listitem) 
				{
					case 0: {
						format(string, sizeof(string), "[DJ] Наслаждайтесь прямым эфиром от rDJ %s прямо сейчас! ", DJname[playerid]);
						SendClientMessageToAll(0xFFCD00AA,string);
						format(string, sizeof(string), "[DJ] Для прослушивания радио введите /play и подключитесь к "RadioSite"");
						SendClientMessageToAll(0xFFCD00AA,string);

					} 
					case 1:{
				
						format(string, sizeof(string), "[DJ] Проводите время в удовольствие с нашей музыкой! Подключайтесь к нам /play > 1."RadioSite"");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
					case 2:
					{
				
						format(string, sizeof(string), "[DJ] Больше новостей и музыкальных постов, которых нигде нет! ВК: "GroupVK"");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
					case 3:
					{
				
						format(string, sizeof(string), "[DJ] На форуме есть информация о стажировке на радио "RadioState". Успей подать свою заявку!");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
					case 4:
					{
				
						format(string, sizeof(string), "[DJ] Хочешь стать радиоведущим? Пиши генеральному директору во ВКонтакте - vk.com/frosthere");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
				}
				DJmsg = gettime()+600;
			}
		}
		case D_ADMIN_PANEL: {
			if(response) {
				if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
				switch(listitem) {
                	case 0: pc_cmd_admins(playerid);
					case 1: pc_cmd_spawn(playerid,"");
					case 2: D(playerid,D_JOB,DSL,""P"Трудоустройство",""W"1. Автобусник\t\t\t\t| "P"2 лвл\n"W"2. Механик\t\t\t\t| "P"3 лвл\n"W"3. Развозчик еды\t\t\t| "P"3 лвл\n"W"4. Развозчик продуктов/топлива\t| "P"4 лвл\n"W"5. Мойщик дорог\t\t\t| "P"4 лвл\n"W"6. Газонокосильщик\t\t\t| "P"5 лвл", "Выбрать", "Закрыть");
					case 3: pc_cmd_prisoners(playerid,"");
					case 4: pc_cmd_mutelist(playerid,"");
					case 5: PI[playerid][pAdmMSG] = (!PI[playerid][pAdmMSG])?(1):(0),UpdatePlayerData(playerid,"pAdmMSG",PI[playerid][pAdmMSG]),pc_cmd_apanel(playerid,"");
					case 6: {
						PI[playerid][pAdmKL] = (!PI[playerid][pAdmKL])?(1):(0),UpdatePlayerData(playerid,"pAdmKL",PI[playerid][pAdmKL]),pc_cmd_apanel(playerid,"");
						//for(new num; num < 10; num++) SendDeathMessageToPlayer(playerid,6000,5005, 255);
					}
					case 7: {
						if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
						new frac_online[MAX_FRACTIONS+1];
						foreach(new i:Player) {
							if(!TI[i][tLogin]) continue;
							if(!PI[i][pMember]) continue;
							switch(PI[i][pMember]) {
								case fLSPD: frac_online[fLSPD] ++;
								case fSFPD: frac_online[fSFPD] ++;
								case fLVPD: frac_online[fLVPD] ++;
								case fFBI: frac_online[fFBI] ++;
								case fMAYOR: frac_online[fMAYOR] ++;
								case fARMYSF: frac_online[fARMYSF] ++;
								case fARMYLV: frac_online[fARMYLV] ++;
								case fMEDICLS: frac_online[fMEDICLS] ++;
								case fMEDICSF: frac_online[fMEDICSF] ++;
								case fMEDICLV: frac_online[fMEDICLV] ++;
								case fLSNEWS: frac_online[fLSNEWS] ++;
								case fSFNEWS: frac_online[fSFNEWS] ++;
								case fLVNEWS: frac_online[fLVNEWS] ++;
								case fINSTRUCTORS: frac_online[fINSTRUCTORS] ++;
								case fLCN: frac_online[fLCN] ++;
								case fYAKUZA: frac_online[fYAKUZA] ++;
								case fRM: frac_online[fRM] ++;
								case fBALLAS: frac_online[fBALLAS] ++;
								case fVAGOS: frac_online[fVAGOS] ++;
								case fGROVE: frac_online[fGROVE] ++;
								case fAZTEC: frac_online[fAZTEC] ++;
								case fRIFA: frac_online[fRIFA] ++;
								case fWHITEHOUSE: frac_online[fWHITEHOUSE] ++;
							}
						}
						static const f_str[] = "Фракция\tИгроки\nПолиция ЛС\t%d\nПолиция СФ\t%d\nПолиция ЛВ\t%d\nФБР\t%d\n\
														Мэрия\t%d\nАрмия СФ\t%d\nАрмия ЛВ\t%d\n\
														Больница ЛС\t%d\nБольница СФ\t%d\nБольница ЛВ\t%d\n\
														Радиоцентр ЛС\t%d\nРадиоцентр СФ\t%d\nРадиоцентр ЛВ\t%d\n\
														Автошкола\t%d\nИтальянская мафия\t%d\nЯпонская мафия\t%d\n\
														Русская мафия\t%d\nThe Ballas\t%d\nThe Vagos\t%d\n\
														The Grove\t%d\nThe Aztec\t%d\nThe Rifa\t%d\nБелый дом\t%d";
						new string[sizeof(f_str) +1 + (30)];
						format(string,sizeof(string),f_str,frac_online[fLSPD],frac_online[fSFPD],frac_online[fLVPD],frac_online[fFBI],frac_online[fMAYOR],frac_online[fARMYSF],frac_online[fARMYLV],frac_online[fMEDICLS],frac_online[fMEDICSF],frac_online[fMEDICLV],
															frac_online[fLSNEWS],frac_online[fSFNEWS],frac_online[fLVNEWS],frac_online[fINSTRUCTORS],frac_online[fLCN],frac_online[fYAKUZA],frac_online[fRM],frac_online[fBALLAS],frac_online[fVAGOS],frac_online[fGROVE],
															frac_online[fAZTEC],frac_online[fRIFA],frac_online[fWHITEHOUSE]);
						D(playerid, D_AMEMBERS, DSTH, "Онлайн организаций", string, "Закрыть", "");
						
					}
					case 8: {
						if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
						if(!IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid,"Вы не в автомобиле"),pc_cmd_apanel(playerid,"");
						pc_cmd_fv(playerid,"");
					}
					case 9: pc_cmd_awarehouse(playerid,"");
					case 10: {
						if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return 1;
						new year[8], month[8], day[8], hour[8], minute[8], second[8];
						if(fracmoroz[0] >= unix) {
							timestamp_to_date(fracmoroz[0]-unix, year[0], month[0], day[0], hour[0], minute[0], second[0]);
						}
						else hour[0] = minute[0] = second[0] = 0;
						if(fracmoroz[1] >= unix) {
							timestamp_to_date(fracmoroz[1]-unix, year[1], month[1], day[1], hour[1], minute[1], second[1]);
						}
						else hour[1] = minute[1] = second[1] = 0;
						if(fracmoroz[2] >= unix) {
							timestamp_to_date(fracmoroz[2]-unix, year[2], month[2], day[2], hour[2], minute[2], second[2]);
						}
						else hour[2] = minute[2] = second[2] = 0;
						if(fracmoroz[3] >= unix) {
							timestamp_to_date(fracmoroz[3]-unix, year[3], month[3], day[3], hour[3], minute[3], second[3]);
						}
						else hour[3] = minute[3] = second[3] = 0;
						if(fracmoroz[4] >= unix) {
							timestamp_to_date(fracmoroz[4]-unix, year[4], month[4], day[4], hour[4], minute[4], second[4]);
						}
						else hour[4] = minute[4] = second[4] = 0;
						if(fracmoroz[5] >= unix) {
							timestamp_to_date(fracmoroz[5]-unix, year[5], month[5], day[5], hour[5], minute[5], second[5]);
						}
						else hour[5] = minute[5] = second[5] = 0;
						if(fracmoroz[6] >= unix) {
							timestamp_to_date(fracmoroz[6]-unix, year[6], month[6], day[6], hour[6], minute[6], second[6]);
						}
						else hour[6] = minute[6] = second[6] = 0;
						if(fracmoroz[7] >= unix) {
							timestamp_to_date(fracmoroz[7]-unix, year[7], month[7], day[7], hour[7], minute[7], second[7]);
						}
						else hour[7] = minute[7] = second[7] = 0;
						static const f_str[] = ""P"1."W" The Ballas\t\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"2."W" The Vagos\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"3."W" The Grove\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"4."W" The Rifa\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"5."W" The Aztec\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"6."W" Итальянская мафия\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"7."W" Японская мафия\t\t"ORANGE"%dч %dмин %dсек\n\
												"P"8."W" Русская мафия\t\t\t"ORANGE"%dч %dмин %dсек";
						new string[sizeof(f_str) + 90];
						format(string,sizeof(string),f_str,hour[0], minute[0], second[0],hour[1], minute[1], second[1],hour[2], minute[2], second[2],hour[3], minute[3], second[3],
															hour[4], minute[4], second[4],hour[5], minute[5], second[5],hour[6], minute[6], second[6],hour[7], minute[7], second[7]);
						D(playerid,DIALOG_NONE,DST, "Информация о заморозках", string, "Закрыть", "");
					}
					case 11: {
						if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
						new names[24],string[450],rows;
					    new Cache:result = mysql_query(connects, "SELECT `Name` FROM `ban` ORDER BY `ID` DESC LIMIT 0 , 20");
					    rows = cache_num_rows();
					    if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список забаненных пуст");
					    FirstBL[playerid] = 0;
					    for(new i; i < rows; i ++) {
						    cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
					        format(string, sizeof(string), "%s%s\n", string, names);
					    }
					    if(rows == 20) format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
						cache_delete(result);
					    if(!D(playerid, D_BAN_LIST, DSL, ""P"Забаненые", string, "Выбрать", "Назад"))SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент.");
					}
					case 12: {
						new string[3024],id = 0;
						string = ""P"Ник:\t"P"IP при регистрации\t"P"IP\n";
						foreach(new i:Player) {
							if(!TI[i][tLogin]) continue;
							if(!GetString(player_ip[i],PI[i][pIpReg])) format(string, sizeof(string), "%s"W"%s\tL-IP: %s\tR-IP: %s\n", string, player_name[i],PI[i][pIpReg],player_ip[i]),id++;
						}
						if(id == 0) return ErrorMessage(playerid,"Не найдено");
						else D(playerid, DIALOG_NONE, DSTH, ""P"Возможно взломаны", string, "Закрыть", "");
					}
					case 13: {
						if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
						new string[3200] = ""P"Место размещения\t"P"Статус\t"P"Владелец", str[124];
						for(new x; x<MAX_BILLBORDS; x++) {
							if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Свободен\t"GREEN"Отсутствует",BildInfo[x][bPosText]);
							else format(str,124,"\n%s\t"NO"Арендован\t"G"%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
							strcat(string,str);
						}
						return D(playerid,D_BILL_ADMIN,DSTH,""P"Мониторинг билбордов",string,"Выбрать","Закрыть");
					}
					case 14: duels = (!duels)?(1):(0),UpdateOtherData("duels",casino),pc_cmd_apanel(playerid,"");
					case 15: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						dialog_anticheat(playerid);
					}
					case 16: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						casino = (!casino)?(1):(0),UpdateOtherData("casino",casino),pc_cmd_apanel(playerid,"");
					}
					case 17: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						rep_system = (!rep_system)?(1):(0),UpdateOtherData("rep_system",casino),pc_cmd_apanel(playerid,"");
					}
					case 18: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						FI[fBALLAS][fMats] = 300000,UpdateFraction(fBALLAS,"Mats",FI[fBALLAS][fMats]);
						FI[fVAGOS][fMats] = 300000,UpdateFraction(fVAGOS,"Mats",FI[fVAGOS][fMats]);
						FI[fGROVE][fMats] = 300000,UpdateFraction(fGROVE,"Mats",FI[fGROVE][fMats]);
						FI[fAZTEC][fMats] = 300000,UpdateFraction(fAZTEC,"Mats",FI[fAZTEC][fMats]);
						FI[fRIFA][fMats] = 300000,UpdateFraction(fRIFA,"Mats",FI[fRIFA][fMats]);

						FI[fLCN][fMats] = 300000,UpdateFraction(fLCN,"Mats",FI[fLCN][fMats]);
						FI[fYAKUZA][fMats] = 300000,UpdateFraction(fYAKUZA,"Mats",FI[fYAKUZA][fMats]);
						FI[fRM][fMats] = 300000,UpdateFraction(fRM,"Mats",FI[fRM][fMats]);
						SendOk(playerid,"Склады банд/мафий успешно пополнены");
					}
					case 19: {
						if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						static const f_str[] =  ""P"Орагнизация\t"P"Уровень вступления\nПолиция\t%d\nФБР\t%d\nАрмии\t%d\nБольница\t%d\nНовости\t%d\nМафии\t%d\nБанды\t%d\nБелый дом\t%d";
						new string[sizeof(f_str) +19];
						format(string,sizeof(string),f_str,invite_frac[0],invite_frac[1],invite_frac[2],invite_frac[3],invite_frac[4],invite_frac[5],invite_frac[6],invite_frac[7]);
						return D(playerid,D_ADMIN_INVITE,DSTH,""P"Ограничение Invite",string,"Выбрать","Закрыть");
					}
					case 20: {
						if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						static const f_str[] = ""W"Оружейный завод - Порт г. СФ\t\t\t"ORANGE"$%d\n\
												"W"Лесопилка - Порт г. СФ\t\t"ORANGE"$%d\n\
												"W"Лесопилка - Порт г. ЛС\t\t\t"ORANGE"$%d\n\
												"W"Лесопилка - Оружейный завод\t\t\t"ORANGE"$%d";
						new string[sizeof(f_str) + 40];
						format(string,sizeof(string),f_str,tk_unloading[0],tk_unloading[1],tk_unloading[2],tk_unloading[3]);
						D(playerid,D_ADMIN_TK,DST, "Дальнобойщики", string, "Изменить", "Отмена");
					}
					case 21: {
						if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						D(playerid, D_PROMO, DSL, ""P"Промокоды", ""P"1."W" Список промокодов\n"P"2."W" Создать промокод\n"P"3."W" Удалить промокод", "Выбрать", "Назад");
					}
					case 22: {
						if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						new str[3][20] = {"Отключены","Только для новичков","Для всех"};
						static const f_str[] = "Бонусы\t\t\t"P"[%s]"W"\n\
												Ограничение по уровню новичков\t\t"P"[%d уровень]"W"\n\
												Управление бонусами";
						new string[sizeof(f_str) + 90];
						format(string,sizeof(string),f_str,str[BonusInfo[act_select]],BonusInfo[act_level]);
						D(playerid,D_ADMIN_OSNOVA,DST, "Бонусы", string, "Выбрать", "Отмена");
					}
					case 23: {
						if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						for(new i = 1; i < gBusinessCount; i ++) {
							if(gBusiness[i][bizzProdOrder] == 0) continue;
							gBusiness[i][bizzProduct] += gBusiness[i][bizzProdOrder];	
							gBusiness[i][bizzProdOrder] = 0;		
							gBusiness[i][bizzProdOrderPrice] = 0;
						}
						SendOk(playerid,"Продукты по бизнесам доставлены");
					}
					case 24: {
						if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						anti_tk = (!anti_tk)?(1):(0),UpdateOtherData("anti_tk",anti_tk),pc_cmd_apanel(playerid,"");
					}
				}
			}
		}
		case D_ADMIN_INVITE: {
			if(!response) return 1;
			SetPVarInt(playerid,"invite_admin",listitem);
			D(playerid,D_ADMIN_INVITE_2,DSI, ""P"Ограничение Invite","\n\n"W"Введите ограничение на INVITE игроков в организацию:\n\n"NO"*"G" От 1 до 8\n\n","Изменить", "Отмена");
		}
		case D_ADMIN_INVITE_2: {
			if(!response) return DeletePVar(playerid,"invite_admin");
			if(strval(inputtext) < 1 || strval(inputtext) > 8) {
				D(playerid,D_ADMIN_INVITE_2,DSI, ""P"Ограничение Invite","\n\n"W"Введите ограничение на INVITE игроков в организацию:\n\n"NO"*"G" От 1 до 8\n\n","Изменить", "Отмена");
				return 1;
			}
			invite_frac[GetPVarInt(playerid,"invite_admin")] = strval(inputtext);

			new query[90];
			format(query,sizeof(query),"UPDATE `others` SET `invite_frac%d` = '%d' LIMIT 1",GetPVarInt(playerid,"invite_admin"),invite_frac[GetPVarInt(playerid,"invite_admin")]);
			mysql_tquery(connects, query);

			DeletePVar(playerid,"invite_admin");
			SendOk(playerid,"Ограничение установлено");
		}
     	case D_ADMIN_OSNOVA: {
     		if(!response) return 1;
            switch(listitem) {
				case 0: {
					BonusInfo[act_select] = (BonusInfo[act_select] == 0) ? 1 : (BonusInfo[act_select] == 1) ? 2 : 0;
					UpdateBonuses("act_select",BonusInfo[act_select]);
					
					if(!BonusInfo[act_select]) SendRconCommand("hostname "HostName"");
					else if(BonusInfo[act_select] == 1) SendRconCommand("hostname "HostNameActions"");
					else SendRconCommand("hostname "HostNameX2"");
				}
				case 1: {
					BonusInfo[act_level] = (BonusInfo[act_level] == 3) ? 5 : (BonusInfo[act_level] == 5) ? 7 : 3;
					UpdateBonuses("act_level",BonusInfo[act_level]);
				}
				case 2: return dialog_bonuses(playerid);
            }
			new str[3][20] = {"Отключены","Только для новичков","Для всех"};
			static const f_str[] = "Бонусы\t\t\t"P"[%s]"W"\n\
									Ограничение по уровню новичков\t\t"P"[%d уровень]"W"\n\
									Управление бонусами";
			new string[sizeof(f_str) + 90];
			format(string,sizeof(string),f_str,str[BonusInfo[act_select]],BonusInfo[act_level]);
			D(playerid,D_ADMIN_OSNOVA,DST, "Бонусы", string, "Выбрать", "Отмена");
		}
		case D_BONUSES: {
     		if(!response) return 1;
            switch(listitem) {
				case 0: {
					BonusInfo[act_exp] = (BonusInfo[act_exp] == 1) ? 2 : (BonusInfo[act_exp] == 2) ? 3 : 1;
					UpdateBonuses("act_exp",BonusInfo[act_exp]);
				}
				case 1: {
					BonusInfo[act_skill] = (BonusInfo[act_skill] == 1) ? 2 : (BonusInfo[act_skill] == 2) ? 3 : 1;
					UpdateBonuses("act_skill",BonusInfo[act_skill]);
				}
				case 2: {
					BonusInfo[act_sport] = (BonusInfo[act_sport] == 1) ? 2 : (BonusInfo[act_sport] == 2) ? 3 : 1;
					UpdateBonuses("act_sport",BonusInfo[act_sport]);
				}
				case 3: {
					BonusInfo[act_mp] = (BonusInfo[act_mp] == 1) ? 2 : (BonusInfo[act_mp] == 2) ? 3 : 1;
					UpdateBonuses("act_mp",BonusInfo[act_mp]);
				}
				case 4: {
					BonusInfo[act_gun] = (BonusInfo[act_gun] == 1) ? 2 : (BonusInfo[act_gun] == 2) ? 3 : 1;
					UpdateBonuses("act_gun",BonusInfo[act_gun]);
				}
				case 5: {
					BonusInfo[act_fish] = (BonusInfo[act_fish] == 1) ? 2 : (BonusInfo[act_fish] == 2) ? 3 : 1;
					UpdateBonuses("act_fish",BonusInfo[act_fish]);
				}
				case 6: {
					BonusInfo[act_renthotel] = (BonusInfo[act_renthotel] == 0) ? 3 : (BonusInfo[act_renthotel] == 3) ? 5 : (BonusInfo[act_renthotel] == 5) ? 10 : 0;
					UpdateBonuses("act_renthotel",BonusInfo[act_renthotel]);
				}
				case 7: {
					BonusInfo[act_buyskin] = (BonusInfo[act_buyskin] == 0) ? 3 : (BonusInfo[act_buyskin] == 3) ? 5 : (BonusInfo[act_buyskin] == 5) ? 10 : 0;
					UpdateBonuses("act_buyskin",BonusInfo[act_buyskin]);
				}
				case 8: {
					BonusInfo[act_buycar] = (BonusInfo[act_buycar] == 0) ? 3 : (BonusInfo[act_buycar] == 3) ? 5 : (BonusInfo[act_buycar] == 5) ? 10 : 0;
					UpdateBonuses("act_buycar",BonusInfo[act_buycar]);
				}
				case 9: {
					BonusInfo[act_rentcar] = (BonusInfo[act_rentcar] == 0) ? 3 : (BonusInfo[act_rentcar] == 3) ? 5 : (BonusInfo[act_rentcar] == 5) ? 10 : 0;
					UpdateBonuses("act_rentcar",BonusInfo[act_rentcar]);
				}
				case 10: {
					BonusInfo[act_buylic] = (BonusInfo[act_buylic] == 0) ? 3 : (BonusInfo[act_buylic] == 3) ? 5 : (BonusInfo[act_buylic] == 5) ? 10 : 0;
					UpdateBonuses("act_buylic",BonusInfo[act_buylic]);
				}
				case 11: {
					BonusInfo[act_buyimprove] = (BonusInfo[act_buyimprove] == 0) ? 3 : (BonusInfo[act_buyimprove] == 3) ? 5 : (BonusInfo[act_buyimprove] == 5) ? 10 : 0;
					UpdateBonuses("act_buyimprove",BonusInfo[act_buyimprove]);
				}
				case 12: {
					BonusInfo[act_disease] = (BonusInfo[act_disease] == 0) ? 3 : (BonusInfo[act_disease] == 3) ? 5 : (BonusInfo[act_disease] == 5) ? 10 : 0;
					UpdateBonuses("act_disease",BonusInfo[act_disease]);
				}
				case 13: {
					BonusInfo[act_changesex] = (BonusInfo[act_changesex] == 0) ? 3 : (BonusInfo[act_changesex] == 3) ? 5 : (BonusInfo[act_changesex] == 5) ? 10 : 0;
					UpdateBonuses("act_changesex",BonusInfo[act_changesex]);
				}
				case 14: {
					BonusInfo[act_medcard] = (BonusInfo[act_medcard] == 0) ? 3 : (BonusInfo[act_medcard] == 3) ? 5 : (BonusInfo[act_medcard] == 5) ? 10 : 0;
					UpdateBonuses("act_medcard",BonusInfo[act_medcard]);
				}
				case 15: {
					BonusInfo[act_buynubmbercar] = (BonusInfo[act_buynubmbercar] == 0) ? 3 : (BonusInfo[act_buynubmbercar] == 3) ? 5 : (BonusInfo[act_buynubmbercar] == 5) ? 10 : 0;
					UpdateBonuses("act_buynubmbercar",BonusInfo[act_buynubmbercar]);
				}
				case 16: {
					BonusInfo[act_perfomance] = (BonusInfo[act_perfomance] == 0) ? 3 : (BonusInfo[act_perfomance] == 3) ? 5 : (BonusInfo[act_perfomance] == 5) ? 10 : 0;
					UpdateBonuses("act_perfomance",BonusInfo[act_perfomance]);
				}
				case 17: {
					BonusInfo[act_tune] = (BonusInfo[act_tune] == 0) ? 3 : (BonusInfo[act_tune] == 3) ? 5 : (BonusInfo[act_tune] == 5) ? 10 : 0;
					UpdateBonuses("act_tune",BonusInfo[act_tune]);
				}
				case 18: {
					BonusInfo[act_timerullet] = (BonusInfo[act_timerullet] == 180) ? 150 : (BonusInfo[act_timerullet] == 150) ? 120 : (BonusInfo[act_timerullet] == 120) ? 100 : 180;
					UpdateBonuses("act_timerullet",BonusInfo[act_timerullet]);
				}
				case 19: {
					BonusInfo[act_promocode] = (BonusInfo[act_promocode] == 1) ? 2 : (BonusInfo[act_promocode] == 2) ? 3 : 1;
					UpdateBonuses("act_promocode",BonusInfo[act_promocode]);
				}
				case 20: {
					BonusInfo[act_payday] = (BonusInfo[act_payday] == 1) ? 2 : (BonusInfo[act_payday] == 2) ? 3 : 1;
					UpdateBonuses("act_payday",BonusInfo[act_payday]);
				}
				case 21: {
					BonusInfo[act_donate] = (BonusInfo[act_donate] == 1) ? 2 : (BonusInfo[act_donate] == 2) ? 3 : 1;
					UpdateBonuses("act_donate",BonusInfo[act_donate]);
				}
            }
			dialog_bonuses(playerid);
		}
		case D_ADMIN_TK: {
     		if(!response) return 1;
            switch(listitem) {
				case 0: {
					static const f_str[] = "\n\n"W"Заработная плата на рейсе [Оружейный завод - Порт г. СФ]: "ORANGE"$%d\n\
											Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[0]);
					D(playerid,D_ADMIN_TK_1,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
					return 1;
				}
				case 1: {
					static const f_str[] = "\n\n"W"Заработная плата на рейсе [Лесопилка - Порт г. СФ]: "ORANGE"$%d\n\
											Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[1]);
					D(playerid,D_ADMIN_TK_2,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
					return 1;
				}
				case 2: {
					static const f_str[] = "\n\n"W"Заработная плата на рейсе [Лесопилка - Порт г. ЛС]: "ORANGE"$%d\n\
												Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[2]);
					D(playerid,D_ADMIN_TK_3,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
					return 1;
				}
				case 3: {
					static const f_str[] = "\n\n"W"Заработная плата на рейсе [Лесопилка - Оружейный завод]: "ORANGE"$%d\n\
												Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[3]);
					D(playerid,D_ADMIN_TK_4,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
					return 1;
				}
            }
		}
		case D_ADMIN_TK_1: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n"W"Заработная плата на рейсе [Оружейный завод - Порт г. СФ]: "ORANGE"$%d\n\
											Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[0]);
				D(playerid,D_ADMIN_TK_1,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
				return 1;
			}
			tk_unloading[0] = salary;
			UpdateOtherData("tk_unloading_0",tk_unloading[0]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ADMIN_TK_2: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n"W"Заработная плата на рейсе [Лесопилка - Порт г. СФ]: "ORANGE"$%d\n\
											Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[1]);
				D(playerid,D_ADMIN_TK_2,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
				return 1;
			}
			tk_unloading[1] = salary;
			UpdateOtherData("tk_unloading_1",tk_unloading[1]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ADMIN_TK_3: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n"W"Заработная плата на рейсе [Лесопилка - Порт г. ЛС]: "ORANGE"$%d\n\
											Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[2]);
				D(playerid,D_ADMIN_TK_3,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
				return 1;
			}
			tk_unloading[2] = salary;
			UpdateOtherData("tk_unloading_2",tk_unloading[2]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ADMIN_TK_4: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n"W"Заработная плата на рейсе [Лесопилка - Оружейный завод]: "ORANGE"$%d\n\
											Установите новую заработную плату:\n\n"NO"*"G" От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[3]);
				D(playerid,D_ADMIN_TK_4,DSI, ""P"Дальнобойщики",string,"Изменить", "Отмена");
				return 1;
			}
			tk_unloading[3] = salary;
			UpdateOtherData("tk_unloading_3",tk_unloading[3]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ANTICHEAT: {
			if(!response) return 1;
			AntiCheat[listitem][acValue] = (AntiCheat[listitem][acValue] == 0) ? 1 : (AntiCheat[listitem][acValue] == 1) ? 2 : 0;
			dialog_anticheat(playerid);
			new query[128];
			format(query,sizeof(query),"UPDATE `anticheats` SET `cheatvalue` = '%d' WHERE `chID` = '%d' LIMIT 1",AntiCheat[listitem][acValue],listitem+1);
			mysql_tquery(connects, query);
		}
		case D_TP_LIST: {
	        if(!response) return 1;
			new str[1024];
			for(new i = 0; i < MAX_TELEPORTS; i++) {
				if(TPLIST[i][tList] != listitem) continue;
				format(str, sizeof(str), "%s%s\n", str, TPLIST[i][tName]);
			}
			D(playerid, D_TP_LIST_2, DSL,""P"Телепорт", str, "Выбрать", "Отмена");
			SetPVarInt(playerid,"adm_tp",listitem);
		}
		case D_TP_LIST_2: {
			if(!response) return 1;
			new list = GetPVarInt(playerid,"adm_tp"),lis;
			switch(list) {
				case 0: lis = listitem;
				case 1: lis = (listitem+23);
				case 2: lis = (listitem+30);
				case 3: lis = (listitem+33);
				case 4: lis = (listitem+36);
				case 5: lis = (listitem+44);
				case 6: lis = (listitem+47);
			}
			if(TPLIST[lis][tPos][0] != 0.0 && TPLIST[lis][tPos][1] != 0.0 && TPLIST[lis][tPos][2] != 0.0)
			{
				if(GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TPLIST[lis][tPos][0],TPLIST[lis][tPos][1],TPLIST[lis][tPos][2]);
				}
				else
				{
					SetPlayerPosAC(playerid, TPLIST[lis][tPos][0],TPLIST[lis][tPos][1],TPLIST[lis][tPos][2], 0, 0);
				}
			}
			else ErrorMessage(playerid, "Не доступно!");
		}
  		case D_OBC_LIST: {
		    if(!response) return 1;
		    switch(listitem) {
		        case 0: {
		            new total_player_online = 0;
		            tick_wanted{total_player_online} = 0;
		            static const dialog_put_fmt[] = "%s\t%i\n";

					const string_length =
						sizeof(dialog_put_fmt) + 1 +
						(- 2 + MAX_PLAYER_NAME) + // Имя игрока
						(- 2 + 1);  // Уровень розыска

					goto skip_array_init;
					new onestring[(string_length * 30) / 4],
						tempstring[string_length];
					skip_array_init:

					new Float:pos[3];
            		GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 

					onestring = !""W"Имя игрока\t"W"Уровень розыска\n";
		            foreach(new i:Player) {
		            	if(!TI[i][tLogin]) continue;
						if(PI[i][pSearch] > 0) {
							if(!IsPlayerInRangeOfPoint(i, 200.0, pos[0],pos[1],pos[2])) continue;
							format(tempstring, sizeof(tempstring), dialog_put_fmt, player_name[i], PI[i][pSearch]);
							strcat(onestring, tempstring);
							tick_wanted{total_player_online} = i;
							total_player_online = total_player_online + 1;
						}
					}
		            if(!total_player_online) return ErrorMessage(playerid,"Преступников в радиусе 200 метров не обнаружено");
		            return D(playerid,D_OBC_WANTED,DSTH,"Бортовой компьютер",onestring,"Выбрать","Отмена");
				}
				case 1: D(playerid, D_OBC_BD, DSL, ""P"База данных", ""P"1."W" Пробить по имени\n"P"2."W" Пробить по гос. номеру авто", "Выбрать", "Отмена");
				case 2: {
					new Float:pos[3];
            		GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
					new bool:callers = false;
					new string[700],str[30];
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!GetPVarInt(i,"call_police")) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						format(str,sizeof(str),"%s\n",player_name[i]),strcat(string,str);
						callers = true;
					}
					if(!callers) return ErrorMessage(playerid,"Вызовы не поступали");
					D(playerid,D_OBC_SERVICESS,DSL,""P"Поступившие вызовы",string,"Выбрать","Отмена");
				}
		    }
		}
		case D_OBC_BD: {
			if(!response) return pc_cmd_obc(playerid);
			switch(listitem) {
				case 0: D(playerid,D_OBC_BD_NAME,DSI, ""P"База данных","\n\n"W"Введите ник игрока:\n\n","Выбрать","Отмена");
				case 1: D(playerid,D_OBC_BD_NUMBER,DSI, ""P"База данных","\n\n"W"Введите гос. номер автомобиля:\n"G"Примечание: X XXX XX - формат номера\n\n","Выбрать","Отмена");
			}
		}
		case D_OBC_BD_NAME: {
			if(!response) return pc_cmd_obc(playerid);
			if(strval(inputtext) >= 0 && strval(inputtext) < MAX_PLAYERS) {
		        if(!IsPlayerConnected(strval(inputtext))) return ErrorMessage(playerid,"Игрок не найден");
			}
		    if(GetPlayerID(inputtext) == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Игрок не найден");
			new id = GetPlayerID(inputtext);
			if(PI[id][pSearch] == 0) return ErrorMessage(playerid,"Человек не имеет розыска");
			static const f_str[] = ""W"Имя игрока:\t\t\t"YELLOW"%s\n\n\
				"W"Уровень розыска:\t\t"P"%d\n\
				"W"Сообщил:\t\t\t"P"%s\n\
				"W"Причина:\t\t\t"P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 2) + (-2 + MAX_PLAYER_NAME) + (-2 + 42)];
			format(string,sizeof(string), f_str, player_name[id], PI[id][pSearch], PI[id][pVictim],PI[id][pAccusedof]);
			D(playerid,DIALOG_NONE,DSM, ""P"База данных",string,"Закрыть","");
		}
		case D_OBC_BD_NUMBER: {
			if(!response) return pc_cmd_obc(playerid);
			if(strval(inputtext) != 7) return D(playerid,D_OBC_BD_NUMBER,DSI, ""P"База данных","\n\n"W"Введите гос. номер автомобиля:\n"G"Примечание: X XXX XX - формат номера\n\n","Выбрать","Отмена");
			new query[128];
			format(query, sizeof(query), "SELECT HIGH_PRIORITY * FROM `"TABLE_CARS"` WHERE `number`='%s'",inputtext);
	        mysql_tquery(connects,query,"ShowNumber","ds",playerid,inputtext);
		}
		case D_OBC_SERVICESS: {
			if(!response) return 1;
			SetPVarInt(playerid,"police_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\t"YELLOW"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "P"%s\n\
									"W"Расстояние: "P"%.2f метров\n\n\
									"W"Вы действительно хотите принять вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_OBC_SERVICESS_INV, DSM, ""P"Вызов", str, "Принять", "Отмена");
		}
		case D_OBC_SERVICESS_INV: {
			if(!response) return DeletePVar(playerid,"police_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"police_id"),"call_police");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"police_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Вызов принят. Местоположение указано на вашей карте");
			SendOk(GetPVarInt(playerid,"police_id"),"Полицейский принял Ваш вызов. Для быстрого нахождения Вас полицейским, оставайтесь на данном месте");
		}
		case D_OBC_WANTED: {
		    if(!response) return 1;
		    patrul_id[playerid] = tick_wanted{listitem};
		    
		    static const f_str[] = ""W"Имя игрока:\t\t\t"YELLOW"%s\n\n\
				"W"Уровень розыска:\t\t"P"%d\n\
				"W"Сообщил:\t\t\t"P"%s\n\
				"W"Причина:\t\t\t"P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 2) + (-2 + MAX_PLAYER_NAME) + (-2 + 32)];
			format(string,sizeof(string), f_str, player_name[patrul_id[playerid]], PI[patrul_id[playerid]][pSearch], PI[patrul_id[playerid]][pVictim],PI[patrul_id[playerid]][pAccusedof]);
			D(playerid,D_OBC_PATRUL,DSM, ""P"Бортовой компьютер",string,"Слежка","Назад");
		}
		case D_OBC_PATRUL: {
		    if(!response) return pc_cmd_obc(playerid);
      		if(GetPlayerInterior(patrul_id[playerid]) != 0) return ErrorMessage(playerid,"Не удалось обнаружить цель (объект в здании)");
			if(patrul_id[playerid] == playerid) return ErrorMessage(playerid,"Вы не можете начать слежку за собой");

			static const f_str[] = ""W"[ПАТРУЛИРОВАНИЕ]"G" %s(%d) начал преследование за %s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + MAX_PLAYER_NAME)];
			
			format(string, sizeof(string), f_str, player_name[playerid],playerid,player_name[patrul_id[playerid]]);
			SendFamilyMessage(PI[playerid][pMember], 0x99CC00FF, string);
			
			SetPVarInt(playerid,"Patrul",1);
			time_wanted[playerid] = SetTimerEx("CopsWanted",3000,true,"ff",playerid,patrul_id[playerid]);
		}
		case D_MEDICS: {
			if(!response) return 1;
			SetPVarInt(playerid,"medic_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\t"YELLOW"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "P"%s\n\
									"W"Расстояние: "P"%.2f метров\n\n\
									"W"Вы действительно хотите принять вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_MEDICS_INV, DSM, ""P"Вызов", str, "Принять", "Отмена");
		}
		case D_MEDICS_INV: {
			if(!response) return DeletePVar(playerid,"medic_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"medic_id"),"call_medics");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"medic_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Вызов принят. Местоположение указано на карте");
			SendOk(GetPVarInt(playerid,"medic_id"),"Медик принял Ваш вызов. Для быстрого нахождения Вас медиком, оставайтесь на данном месте");
		}
		case D_REPAIRS: {
			if(!response) return 1;
			SetPVarInt(playerid,"repair_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\t"YELLOW"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "P"%s\n\
									"W"Расстояние: "P"%.2f метров\n\n\
									"W"Вы действительно хотите принять вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_REPAIRS_INV, DSM, ""P"Вызов", str, "Принять", "Отмена");
		}
		case D_REPAIRS_INV: {
			if(!response) return DeletePVar(playerid,"repair_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"repair_id"),"call_mechanics");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"repair_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Вызов принят. Местоположение указано на карте");
			SendOk(GetPVarInt(playerid,"repair_id"),"Механик принял Ваш вызов. Для быстрого нахождения Вас механиком, оставайтесь на данном месте");
		}
      	case D_MAKELEADER_INFO: {
			if(!response) return 1;
			if(listitem == fARMYLV-1) return ErrorMessage(playerid,"Недоступно");
			if(listitem == fMEDICSF-1) return ErrorMessage(playerid,"Недоступно");
			if(listitem == fMEDICLV-1) return ErrorMessage(playerid,"Недоступно");
			if(listitem == fSFNEWS-1) return ErrorMessage(playerid,"Недоступно");
			if(listitem == fLVNEWS-1) return ErrorMessage(playerid,"Недоступно");
			if(listitem == fYAKUZA-1) return ErrorMessage(playerid,"Недоступно");
			//if(listitem == fWHITEHOUSE-1) return ErrorMessage(playerid,"Недоступно");
			
			//1 2 4 5 6 8 11 14 17 18 19 20 21
    
			static const f_str[] = ""P"%s "W"| "ORANGE"%s";
			new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];
			
			SetPVarInt(playerid, "use_frac", listitem+1);
			format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName],FI[GetPVarInt(playerid, "use_frac")][fLeader]);
			D(playerid,D_MAKELEADER_LIST,DSL,string,""P"1."W" Информация о фракции\n"P"2."W" Назначить лидера\n"P"3."W" Снять лидера\n"P"4."W" Вступить в организацию","Выбрать","Отмена");
		}
		case D_MAKELEADER_LIST: {
		    if(!response) return 1;
		    switch(listitem) {
		        case 0: {
					if(!strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return ErrorMessage(playerid, "У данной организации нет лидера");
					new ID = GetPVarInt(playerid, "use_frac");
					new query[200];
					format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i'", ID);
					mysql_pquery(connects, query, "info_fraction", "ii", playerid,ID);
				}
		        case 1: {
				    if(strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return ErrorMessage(playerid, "У данной организации уже есть лидер");
				    
				    static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на должность лидера "P"%s";
				    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];
				    
				    format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName]);
					D(playerid,D_MAKELEADER_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				}
		        case 2: {
					if(!strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return ErrorMessage(playerid, "У данной организации нет лидера");
				    static const f_str[] = ""W"Вы действительно хотите снять "NO"%s "W"с поста лидера организации "P"%s";
				    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];
				    
				    format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fLeader],FI[GetPVarInt(playerid, "use_frac")][fName]);
					D(playerid,D_MAKELEADER_CLEAR,DSM, ""P"Снятие",string,"Выбрать","Отмена");
				}
		        case 3:
				{
					new frac = GetPVarInt(playerid, "use_frac");
					
					PI[playerid][pLeader] = frac;
					PI[playerid][pMember] = frac;
					PI[playerid][pRank] = FI[frac][fMaxRang];
					PI[playerid][pSpawn] = 2;
					PI[playerid][pFracSkin] = FI[frac][fSkin];
					
					start_work[playerid] = 1;
					
					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					
					static const f_str[] = ""W"Вы успешно вступили в организацию "P"%s(ID: %d)";
				    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 3)];

					format(string, sizeof(string), f_str, FI[frac][fName], frac);
					SendOk(playerid, string);
					
					SendOk(playerid,"Место спавна автоматически изменилось на: "W"организацию");
					SendOk(playerid, "Для увольнения введите: "W"/uval");

					SaveAccount(playerid);
		        }
		    }
		}
		case D_MAKELEADER_ADD: {
		    if(!response) return 1;
			if(!strlen(inputtext)) {
				static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на должность лидера "P"%s";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
				
				format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName]);
				D(playerid,D_MAKELEADER_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				return 1;
			}
		    if(!IsPlayerConnected(strval(inputtext))) return ErrorMessage(playerid, "Игрок оффлайн");
		    if(!TI[strval(inputtext)][tLogin]) return ErrorMessage(playerid, "Игрок не авторизован на сервере");
		    if(PI[strval(inputtext)][pLeader] != 0) return ErrorMessage(playerid, "Игрок уже лидер организации");
			if(PI[strval(inputtext)][pMember] != 0) return ErrorMessage(playerid, "Игрок состоит в организации");
			if(!PI[strval(inputtext)][pGoogleSec]) return ErrorMessage(playerid, "У игрока отсутствует защита Google Authenticator");
		    SetPVarInt(playerid, "use_leader", strval(inputtext));
		    
		    static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на поста лидера организации "P"%s";
		    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
		    
		    format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_leader")],FI[GetPVarInt(playerid, "use_frac")][fName]);
			D(playerid,D_MAKELEADER,DSM, ""P"Назначение",string,"Назначить","Отмена");
		}
		case D_MAKELEADER: {
		    if(!response) return 1;
			new ID = GetPVarInt(playerid, "use_leader");
			new frac = GetPVarInt(playerid, "use_frac");
	        format(FI[frac][fLeader], 24, "%s", player_name[ID]);
			format(FI[frac][fAdmin],  24, "%s", player_name[playerid]);

			new year, month, day;
			getdate(year, month, day);
			format(FI[frac][fTime],  53, "%02i/%02i/%02i", day, month, year);

            PI[ID][pLeader] = FI[frac][fID];
            PI[ID][pMember] = FI[frac][fID];
            PI[ID][pRank] 	= FI[frac][fMaxRang];
            
            static const f_str[] = ""W"%s"G" назначил Вас лидером организации "P"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
            
            format(string,sizeof(string),f_str,player_name[playerid],FI[frac][fName]);
            SendOk(ID,string);

			format(string, sizeof(string), "[A] %s[%d] назначил %s[%d] на пост лидера %s",player_name[playerid],playerid,player_name[ID],ID,FI[frac][fName]);
			AdmMSG(0xAFAFAFAA, string,1);
			
			PI[ID][pFracSkin] = FI[frac][fSkin];
			PI[ID][pJob] 		= 0;
			A_SetPlayerSkin(ID,PI[ID][pFracSkin]);
			SetPlayerColor(ID,gFractionSpawn[PI[ID][pMember]][fracColor]);
			start_work[ID] = 1;
			PI[ID][pSpawn] = 2;
			SaveAccount(ID);
			SaveFraction(frac);
			add_datefrac(ID);
	    }
     	case D_MAKELEADER_CLEAR: {
         	if(!response) return 1;
	        new ID = GetCheckID(FI[GetPVarInt(playerid, "use_frac")][fLeader]);
		    if(ID != INVALID_PLAYER_ID) {
				if(IsAGang(ID)) EndCapt(ID);
				add_jobinfo(ID,"Снят с поста лидера");
	        	PI[ID][pLeader] = 0;
				PI[ID][pMember] = 0;
    			PI[ID][pRank] = 0;
				start_work[ID] = 0;
    			static const f_str[] = ""W"%s "G"забрал у Вас полномочия лидера организации";
    			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
    			
		    	format(string,sizeof(string),f_str,player_name[playerid]);
		    	SendOk(ID,string);

				format(string, sizeof(string), "[A] %s[%d] снял %s[%d] с поста лидера %s",player_name[playerid],playerid,player_name[ID],ID,FI[GetPVarInt(playerid, "use_frac")][fName]);
				AdmMSG(0xAFAFAFAA, string,1);

				if(PI[playerid][pHouse] > 0) PI[ID][pSpawn] = 1;
				else PI[ID][pSpawn] = 0;
				skin_player(ID);
				SaveAccount(ID);
		    	PlayerSpawn(ID);
	        }
	        else {
				new string[128];
				format(string, sizeof(string), "[A] %s[%d] снял %s с поста лидера %s",player_name[playerid],playerid,FI[GetPVarInt(playerid, "use_frac")][fLeader],FI[GetPVarInt(playerid, "use_frac")][fName]);
				AdmMSG(0xAFAFAFAA, string,1);
				off_add_jobinfo(FI[GetPVarInt(playerid, "use_frac")][fName],"Недееспособен");
			    SendOk(playerid, "Лидер организации успешно снят в оффлайн");
			    new query[128];
			    mysql_format(connects,query, sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pLeader = '0',pMember = '0',pRank = '0',pModel = '0' WHERE Name = '%s'",FI[GetPVarInt(playerid, "use_frac")][fLeader]);
    			mysql_tquery(connects, query, "", "");
			}
	        format(FI[GetPVarInt(playerid, "use_frac")][fLeader], 5, "None");
	        SaveFraction(GetPVarInt(playerid, "use_frac"));
	    }
		case D_BLACK_MARKET: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Введите стоимость за "P"1г"W" наркотика\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[5]);
					D(playerid,D_BLACK_MARKET_DRUGS,DSI, ""P"Стоимость наркотиков", string, "Изменить", "Назад");
				}
				case 1: {
					static const f_str[] = ""W"Введите стоимость за "P"1"W" боеприпас\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[6]);
					D(playerid,D_BLACK_MARKET_MATS,DSI, ""P"Стоимость боеприпасов", string, "Изменить", "Назад");
				}
				case 2: {
					static const f_str[] = ""W"Введите стоимость за "P"1"W" бронежилет\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[7]);
					D(playerid,D_BLACK_MARKET_ARMOUR,DSI, ""P"Стоимость бронежилет", string, "Изменить", "Назад");
				}
				case 3: {
					static const f_str[] = ""W"Введите стоимость за "P"1"W" армейскую форму\nСейчас стоимость составляет: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[8]);
					D(playerid,D_BLACK_MARKET_SKIN,DSI, ""P"Стоимость армейской формы", string, "Изменить", "Назад");
				}
			}
		}
		case D_BLACK_MARKET_DRUGS: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 50) {
				static const f_str[] = ""W"Введите стоимость за "P"1г"W" наркотика\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $1 до $50";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[5]);
				D(playerid,D_BLACK_MARKET_DRUGS,DSI, ""P"Стоимость наркотиков", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[5] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1г "G"наркотиков составляет "ORANGE"$%d",black_prods[5]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_BLACK_MARKET_MATS: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 10 || strval(inputtext) > 15) {
				static const f_str[] = ""W"Введите стоимость за "P"1"W" боеприпас\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $10 до $15";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[6]);
				D(playerid,D_BLACK_MARKET_MATS,DSI, ""P"Стоимость боеприпасов", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[6] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1 "G"боеприпаса составляет "ORANGE"$%d",black_prods[6]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_BLACK_MARKET_ARMOUR: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 10000) {
				static const f_str[] = ""W"Введите стоимость за "P"1"W" бронежилет\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $1 до $10.000";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[7]);
				D(playerid,D_BLACK_MARKET_ARMOUR,DSI, ""P"Стоимость бронежилета", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[7] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1 "G"бронежилета составляет "ORANGE"$%d",black_prods[7]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_BLACK_MARKET_SKIN: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 10000) {
				static const f_str[] = ""W"Введите стоимость за "P"1"W" армейскую форму\nСейчас стоимость составляет: "GREEN"$%d\n\n"NO"*"G" От $1 до $10.000";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[8]);
				D(playerid,D_BLACK_MARKET_SKIN,DSI, ""P"Стоимость армейской формы", string, "Изменить", "Назад");
				return 1;
			}
			black_prods[8] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Стоимость "P"1 "G"армейской формы составляет "ORANGE"$%d",black_prods[8]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_MARKET_NARKO: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 51) {
				static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
                "O"Примечание:"W"\n\
                \tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
                \tДоступно грамм на складе: "P"%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,black_prods[5],black_prods[1],vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs]);
				D(playerid,D_MARKET_NARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
				return 1;
			}
			if(black_prods[1] < strval(inputtext)) return ErrorMessage(playerid,"На складе закончился товар");
		    if(PI[playerid][pDrugs] + strval(inputtext) > vip_status[PI[playerid][pVips]][vip_drugs]) return ErrorMessage(playerid,"Вы не можете взять слишком много");
			if(GetPlayerMoneyEx(playerid) < black_prods[5]*strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно денег");
			GiveMoney(playerid,-black_prods[5]*strval(inputtext),"покупка нарко ЧР");
			PI[playerid][pDrugs] += strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			black_prods[1] -= strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[5]*strval(inputtext);
			new string[128];
			format(string,sizeof(string),"Вы приобрели "P"%dг "G"наркотиков за "ORANGE"$%d",strval(inputtext),black_prods[5]*strval(inputtext));
			SendUse(playerid,string);
		}
		case D_ROB_CAR: {
			if(!response) {
				new string[50];
				format(string,sizeof(string),"Видно что у тебя кишка тонка, вали от сюда");
				SendUse(playerid,string);
				return true;
			}
			D(playerid,DIALOG_NONE,DSM, ""P"Ограбление домов","Бери фургон и ищи дом в опасном районе\nНе забудь про отмычки, без них ты не сможешь взломать дверь дома", "Ок", "");
			rob_veh[playerid] = A_CreateVehicle(413, -2204.4797,-127.4187,26.1306,347.8256, 150, -1, -1,VEHICLE_TYPE_NONE);
			VehicleInfo[rob_veh[playerid]][vFuel] = 100;
			VehicleInfo[rob_veh[playerid]][vRobHouse] = true;
			SetVehicleParamsEx(rob_veh[playerid],false,false,false,false,false,false,false);
		}
		case D_MARKET_BUY: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new Float:armour;
					GetPlayerArmour(playerid,armour);
					if(PI[playerid][pAdmin]) return ErrorMessage(playerid,"Запрещено");
					if(armour < 50) return ErrorMessage(playerid,"У Вас нету бронежилета/либо он сильно изношен");
					if(black_prods[3]+1 > 50) return ErrorMessage(playerid,"На складе черного рынка недостаточно места");
					if(FI[black_prods[0]][fBank] < floatround(black_prods[7]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
					FI[black_prods[0]][fBank] -= floatround(black_prods[7]/4);
					UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
					black_prods[3] += 1;
					SaveMarket();
					GiveMoney(playerid,floatround(black_prods[7]/4),"продажа армора ЧР");
					SetPlayerArmour(playerid,0);
				}
				case 1: {
					if(!PI[playerid][pArmSkin]) return ErrorMessage(playerid,"У Вас нет армейской формы");
					if(black_prods[4]+1 > 50) return ErrorMessage(playerid,"На складе черного рынка недостаточно места");
					if(FI[black_prods[0]][fBank] < floatround(black_prods[8]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
					FI[black_prods[0]][fBank] -= floatround(black_prods[8]/4);
					UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
					black_prods[4] += 1;
					SaveMarket();
					GiveMoney(playerid,floatround(black_prods[8]/4),"продажа формы ЧР");
					PI[playerid][pArmSkin] = 0;
					UpdatePlayerData(playerid,"ArmSkin",0);
				}
				case 2: {
					static const f_str[] = ""W"Укажите количество наркотиков для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
						\tДоступно грамм в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

					format(string,sizeof(string),f_str,floatround(black_prods[5]/4),PI[playerid][pDrugs],2500-black_prods[1]);
					D(playerid,D_MARKET_NARKO_SELL,DSI, ""P"Продажа наркотиков", string, "Продать", "Отмена");
				}
				case 3: {
					static const f_str[] = ""W"Укажите количество боеприпасов для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1г"W" боеприпаса: "GREEN"$%d"W"\n\
						\tДоступно боеприпасов в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

					format(string,sizeof(string),f_str,floatround(black_prods[6]/4),PI[playerid][pMats],50000-black_prods[2]);
					D(playerid,D_MARKET_MATS_SELL,DSI, ""P"Продажа боеприпасов", string, "Продать", "Отмена");
				}
			}
		}
		case D_MARKET_NARKO_SELL: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 51) {
				static const f_str[] = ""W"Укажите количество наркотиков для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
						\tДоступно грамм в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,floatround(black_prods[5]/4),PI[playerid][pDrugs],2500-black_prods[1]);
				D(playerid,D_MARKET_NARKO_SELL,DSI, ""P"Продажа наркотиков", string, "Продать", "Отмена");
				return 1;
			}
			if(black_prods[1]+strval(inputtext) >= 2500) return ErrorMessage(playerid,"На складе черного рынка недостаточно места");
		    if(PI[playerid][pDrugs] < strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно наркотиков");
			if(FI[black_prods[0]][fBank] < floatround(black_prods[5]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
			GiveMoney(playerid,floatround((black_prods[5]*strval(inputtext))/4),"продажа нарко ЧР");
			PI[playerid][pDrugs] -= strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			black_prods[1] += strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] -= floatround((black_prods[5]*strval(inputtext))/4);
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[128];
			format(string,sizeof(string),"Вы продали "P"%dг "G"наркотиков за "ORANGE"$%d",strval(inputtext),floatround((black_prods[5]*strval(inputtext))/4));
			SendUse(playerid,string);
		}
		case D_MARKET_MATS_SELL: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 501) {
				static const f_str[] = ""W"Укажите количество боеприпасов для продажи:\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость "P"1г"W" боеприпаса: "GREEN"$%d"W"\n\
						\tДоступно боеприпасов в кармане: "P"%d"W"\n\
						\tНа склад поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,floatround(black_prods[6]/4),PI[playerid][pMats],50000-black_prods[2]);
				D(playerid,D_MARKET_MATS_SELL,DSI, ""P"Продажа боеприпасов", string, "Продать", "Отмена");
				return 1;
			}
			if(black_prods[2]+strval(inputtext) >= 50000) return ErrorMessage(playerid,"На складе черного рынка недостаточно места");
		    if(PI[playerid][pMats] < strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно боеприпасов");
			if(FI[black_prods[0]][fBank] < floatround(black_prods[6]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
			GiveMoney(playerid,floatround((black_prods[6]*strval(inputtext))/4),"продажа матов ЧР");
			PI[playerid][pMats] -= strval(inputtext);
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			black_prods[2] += strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] -= floatround((black_prods[6]*strval(inputtext))/4);
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[128];
			format(string,sizeof(string),"Вы продали "P"%dг "G"боеприпасов за "ORANGE"$%d",strval(inputtext),floatround((black_prods[6]*strval(inputtext))/4));
			SendUse(playerid,string);
		}
		case D_MARKET: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Вы действитлеьно хотите купить бронежилет?\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость бронежилет "GREEN"$%d"W"\n\
						\tДоступно на складе: "P"%d"W"";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,black_prods[7],black_prods[3]);
					D(playerid,D_MARKET_ARMOUR,DSM, ""P"Покупка бронежилет", string, "Купить", "Отмена");
				}
				case 1: {
					static const f_str[] = ""W"Вы действитлеьно хотите купить армейскую форму?\n\n\
						"O"Примечание:"W"\n\
						\tСтоимость армейской формы "GREEN"$%d"W"\n\
						\tДоступно на складе: "P"%d"W"";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,black_prods[8],black_prods[4]);
					D(playerid,D_MARKET_SKIN,DSM, ""P"Покупка армейской формы", string, "Купить", "Отмена");
				}
			}
		}
		case D_MARKET_ARMOUR: {
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < black_prods[7]) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(black_prods[3] < 1) return ErrorMessage(playerid,"На складе закончился товар");
			GiveMoney(playerid,-black_prods[7],"покупка брони ЧР");
			black_prods[3] -= 1;
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[7];
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			SetPlayerArmour(playerid,100);
			new string[100];
			format(string,sizeof(string),"Вы приобрели бронежилет за "ORANGE"$%d",black_prods[7]);
			SendUse(playerid,string);
		}
		case D_MARKET_SKIN: {
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < black_prods[8]) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(black_prods[4] < 1) return ErrorMessage(playerid,"На складе закончился товар");
			GiveMoney(playerid,-black_prods[8],"покупка формы ЧР");
			black_prods[4] -= 1;
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[8];
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			PI[playerid][pArmSkin] = 1;
			UpdatePlayerData(playerid,"ArmSkin",1);
			new string[100];
			format(string,sizeof(string),"Вы приобрели армейскую форму за "ORANGE"$%d",black_prods[8]);
			SendUse(playerid,string);
			SendOk(playerid,"Для использования армейской формы, введите: "W"/dress");
		}
		case D_MARKET_GUN: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = ""W"Укажите количество боеприпасов для покупки:\n\n\
                "O"Примечание:"W"\n\
                \tСтоимость "P"1"W" боеприпаса: "GREEN"$%d"W"\n\
                \tДоступно боеприпасов на складе: "P"%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,black_prods[6],black_prods[2],vip_status[PI[playerid][pVips]][vip_mats]-PI[playerid][pMats]);
				D(playerid,D_MARKET_GUN,DSI, ""P"Покупка боеприпасов", string, "Купить", "Отмена");
				return 1;
			}
			if(black_prods[2] < strval(inputtext)) return ErrorMessage(playerid,"На складе закончился товар");
		    if(PI[playerid][pMats] + strval(inputtext) > vip_status[PI[playerid][pVips]][vip_mats]) return ErrorMessage(playerid,"Вы не можете взять слишком много");
			if(GetPlayerMoneyEx(playerid) < black_prods[6]*strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно денег");
			GiveMoney(playerid,-black_prods[6]*strval(inputtext),"покупка матов ЧР");
			PI[playerid][pMats] += strval(inputtext);
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
			black_prods[2] -= strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[6]*strval(inputtext);
			new string[128];
			format(string,sizeof(string),"Вы приобрели "P"%d "G"боеприпасов за "ORANGE"$%d",strval(inputtext),black_prods[6]*strval(inputtext));
			SendUse(playerid,string);
		}
		case D_JOB_INFO:
	 	{
			if(!response) return 1;

   			switch(listitem)
   			{
		        case 0:
				{
					static const f_str[] = ""P"%s "W"| "ORANGE"Автобусник";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];

					SetPVarInt(playerid, "use_job", listitem+1);

					format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
					D(playerid,D_JOB_LIST,DSL,string,""P"1."W" Назначить работника\n"P"2."W" Снять работника","Выбрать","Отмена");
			    }
			    case 1:
				{
					static const f_str[] = ""P"%s "W"| "ORANGE"Механик";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];

					SetPVarInt(playerid, "use_job", listitem+1);

					format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
					D(playerid,D_JOB_LIST,DSL,string,""P"1."W" Назначить работника\n"P"2."W" Снять работника","Выбрать","Отмена");
			    }
			    case 2:
				{
					static const f_str[] = ""P"%s "W"| "ORANGE"Развозчик еды";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];

					SetPVarInt(playerid, "use_job", listitem+1);

					format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
					D(playerid,D_JOB_LIST,DSL,string,""P"1."W" Назначить работника\n"P"2."W" Снять работника","Выбрать","Отмена");
			    }
			    case 3:
				{
					static const f_str[] = ""P"%s "W"| "ORANGE"Развозчик продуктов/топлива";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];

					SetPVarInt(playerid, "use_job", listitem+1);

					format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
					D(playerid,D_JOB_LIST,DSL,string,""P"1."W" Назначить работника\n"P"2."W" Снять работника","Выбрать","Отмена");
			    }
			    case 4:
				{
					static const f_str[] = ""P"%s "W"| "ORANGE"Мойщик доров";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];

					SetPVarInt(playerid, "use_job", listitem+1);

					format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
					D(playerid,D_JOB_LIST,DSL,string,""P"1."W" Назначить работника\n"P"2."W" Снять работника","Выбрать","Отмена");
			    }
			    case 5:
				{
					static const f_str[] = ""P"%s "W"| "ORANGE"Газонокосильщик";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];

					SetPVarInt(playerid, "use_job", listitem+1);

					format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
					D(playerid,D_JOB_LIST,DSL,string,""P"1."W" Назначить работника\n"P"2."W" Снять работника","Выбрать","Отмена");
			    }
			}
		}
		case D_JOB_LIST: {
		    if(!response) return 1;
		    switch(listitem) {
		        case 0:
				{
				    if(PI[GetPVarInt(playerid, "use_job_player")][pJob] != 0) return ErrorMessage(playerid, "Игрок уже трудоустроен");
				    if(GetPVarInt(playerid, "use_job") == 1)
				    {
						static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Автобусник";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str);
						D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
					}
                    else if(GetPVarInt(playerid, "use_job") == 2)
				    {
						static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Механик";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str);
						D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
					}
                    else if(GetPVarInt(playerid, "use_job") == 3)
				    {
						static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Развозчик еды";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str);
						D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
                    }
                    else if(GetPVarInt(playerid, "use_job") == 4)
				    {
						static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Развозчик продуктов/топлива";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str);
						D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
                    }
                    else if(GetPVarInt(playerid, "use_job") == 5)
				    {
						static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Мойщик доров";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str);
						D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
                    }
                    else if(GetPVarInt(playerid, "use_job") == 6)
				    {
						static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Газонокосильщик";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str);
						D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
					}
				}
		        case 1:
				{
				    if(PI[GetPVarInt(playerid, "use_job_player")][pJob] == 0) return ErrorMessage(playerid, "Игрок не трудоустроен");
				    if(GetPVarInt(playerid, "use_job") == 1)
				    {
						static const f_str[] = ""W"Вы действительно хотите уволить "NO"%s "W"с работы "P"Автобусник";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
						D(playerid,D_JOB_CLEAR_UID,DSM, ""P"Снятие",string,"Выбрать","Отмена");
					}
                    else if(GetPVarInt(playerid, "use_job") == 2)
				    {
						static const f_str[] = ""W"Вы действительно хотите уволить "NO"%s "W"с работы "P"Механик";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
						D(playerid,D_JOB_CLEAR_UID,DSM, ""P"Снятие",string,"Выбрать","Отмена");
					}
                    else if(GetPVarInt(playerid, "use_job") == 3)
				    {
						static const f_str[] = ""W"Вы действительно хотите уволить "NO"%s "W"с работы "P"Развозчик еды";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
						D(playerid,D_JOB_CLEAR_UID,DSM, ""P"Снятие",string,"Выбрать","Отмена");
                    }
                    else if(GetPVarInt(playerid, "use_job") == 4)
				    {
						static const f_str[] = ""W"Вы действительно хотите уволить "NO"%s "W"с работы "P"Развозчик продуктов/топлива";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
						D(playerid,D_JOB_CLEAR_UID,DSM, ""P"Снятие",string,"Выбрать","Отмена");
                    }
                    else if(GetPVarInt(playerid, "use_job") == 5)
				    {
						static const f_str[] = ""W"Вы действительно хотите уволить "NO"%s "W"с работы "P"Мойщик доров";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
						D(playerid,D_JOB_CLEAR_UID,DSM, ""P"Снятие",string,"Выбрать","Отмена");
                    }
                    else if(GetPVarInt(playerid, "use_job") == 6)
				    {
						static const f_str[] = ""W"Вы действительно хотите уволить "NO"%s "W"с работы "P"Газонокосильщик";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

						format(string,sizeof(string),f_str,GetName(GetPVarInt(playerid, "use_job_player")));
						D(playerid,D_JOB_CLEAR_UID,DSM, ""P"Снятие",string,"Выбрать","Отмена");
					}
				}
		    }
		}
		case D_JOB_ADD: {
		    if(!response) return 1;
			if(!strlen(inputtext))
			{
				if(GetPVarInt(playerid, "use_job") == 1)
			    {
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Автобусник";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				}
    			else if(GetPVarInt(playerid, "use_job") == 2)
			    {
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Механик";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				}
 				else if(GetPVarInt(playerid, "use_job") == 3)
		   		{
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Развозчик еды";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
     			}
        		else if(GetPVarInt(playerid, "use_job") == 4)
	    		{
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Развозчик продуктов/топлива";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
     			}
     			else if(GetPVarInt(playerid, "use_job") == 5)
	    		{
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Мойщик доров";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
     			}
        		else if(GetPVarInt(playerid, "use_job") == 6)
	    		{
					static const f_str[] = ""W"Укажите ID игрока,которого хотите назначить на работу "P"Газонокосильщик";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str);
					D(playerid,D_JOB_ADD,DSI, ""P"Назначение",string,"Выбрать","Отмена");
				}
				return 1;
			}
		    if(!IsPlayerConnected(strval(inputtext))) return ErrorMessage(playerid, "Игрок оффлайн");
		    if(!TI[strval(inputtext)][tLogin]) return ErrorMessage(playerid, "Игрок не авторизован на сервере");
		    SetPVarInt(playerid, "use_player_job", strval(inputtext));

		    if(GetPVarInt(playerid, "use_job") == 1)
  			{
				static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на работу "P"Автобусник";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_player_job")]);
				D(playerid,D_JOB_INVITE,DSM, ""P"Назначение",string,"Назначить","Отмена");
			}
    		else if(GetPVarInt(playerid, "use_job") == 2)
   			{
				static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на работу "P"Механик";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_player_job")]);
				D(playerid,D_JOB_INVITE,DSM, ""P"Назначение",string,"Назначить","Отмена");
			}
 			else if(GetPVarInt(playerid, "use_job") == 3)
		   	{
				static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на работу "P"Развозчик еды";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_player_job")]);
				D(playerid,D_JOB_INVITE,DSM, ""P"Назначение",string,"Назначить","Отмена");
     		}
        	else if(GetPVarInt(playerid, "use_job") == 4)
	    	{
				static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на работу "P"Развозчик продуктов/топлива";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_player_job")]);
				D(playerid,D_JOB_INVITE,DSM, ""P"Назначение",string,"Назначить","Отмена");
     		}
     		else if(GetPVarInt(playerid, "use_job") == 5)
	    	{
				static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на работу "P"Мойщик доров";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_player_job")]);
				D(playerid,D_JOB_INVITE,DSM, ""P"Назначение",string,"Назначить","Отмена");
     		}
        	else if(GetPVarInt(playerid, "use_job") == 6)
	    	{
				static const f_str[] = ""W"Вы действительно хотите назначить "ORANGE"%s"W" на работу "P"Газонокосильщик";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_player_job")]);
				D(playerid,D_JOB_INVITE,DSM, ""P"Назначение",string,"Назначить","Отмена");
			}
		}
		case D_JOB_INVITE: {
		    if(!response) return 1;
			new ID = GetPVarInt(playerid, "use_player_job");
			new job = GetPVarInt(playerid, "use_job");

			new year, month, day;
			getdate(year, month, day);

            PI[ID][pJob] = job;

            if(GetPVarInt(playerid, "use_job") == 1)
  			{
				static const f_str[] = ""W"%s"G" назначил Вас на работу "P"Автобусник";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	SendOk(ID,string);
			}
    		else if(GetPVarInt(playerid, "use_job") == 2)
   			{
				static const f_str[] = ""W"%s"G" назначил Вас на работу "P"Механик";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	SendOk(ID,string);
			}
 			else if(GetPVarInt(playerid, "use_job") == 3)
		   	{
				static const f_str[] = ""W"%s"G" назначил Вас на работу "P"Развозчик еды";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	SendOk(ID,string);
     		}
        	else if(GetPVarInt(playerid, "use_job") == 4)
	    	{
				static const f_str[] = ""W"%s"G" назначил Вас на работу "P"Развозчик продуктов/топлива";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	SendOk(ID,string);
     		}
     		else if(GetPVarInt(playerid, "use_job") == 5)
	    	{
				static const f_str[] = ""W"%s"G" назначил Вас на работу "P"Мойщик доров";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	SendOk(ID,string);
     		}
        	else if(GetPVarInt(playerid, "use_job") == 6)
	    	{
				static const f_str[] = ""W"%s"G" назначил Вас на работу "P"Газонокосильщик";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
             	SendOk(ID,string);
			}

            if(GetPVarInt(playerid, "use_job") == 1)
  			{
				static const f_str[] = "[A] %s[%d] назначил %s[%d] на работу Автобусник";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	AdmMSG(0xAFAFAFAA, string,1);
			}
    		else if(GetPVarInt(playerid, "use_job") == 2)
   			{
				static const f_str[] = "[A] %s[%d] назначил %s[%d] на работу Механик";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	AdmMSG(0xAFAFAFAA, string,1);
			}
 			else if(GetPVarInt(playerid, "use_job") == 3)
		   	{
				static const f_str[] = "[A] %s[%d] назначил %s[%d] на работу Развозчик еды";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	AdmMSG(0xAFAFAFAA, string,1);
     		}
        	else if(GetPVarInt(playerid, "use_job") == 4)
	    	{
				static const f_str[] = "[A] %s[%d] назначил %s[%d] на работу Развозчик продуктов/топлива";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	AdmMSG(0xAFAFAFAA, string,1);
     		}
     		else if(GetPVarInt(playerid, "use_job") == 5)
	    	{
				static const f_str[] = "[A] %s[%d] назначил %s[%d] на работу Мойщик доров";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	AdmMSG(0xAFAFAFAA, string,1);
     		}
        	else if(GetPVarInt(playerid, "use_job") == 6)
	    	{
				static const f_str[] = "[A] %s[%d] назначил %s[%d] на работу Газонокосильщик";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

				format(string,sizeof(string),f_str,player_name[playerid]);
            	AdmMSG(0xAFAFAFAA, string,1);
			}

			SaveAccount(ID);

			SendOk(ID,"Вы успешно трудоустроились!");
			SendOk(ID,"Для просмотра доступных команд, введите: "W"/jobhelp или /mn > Команды сервера > По работе");
	    }
	    case D_JOB_CLEAR_UID: {
         	if(!response) return 1;
	        new ID = GetCheckID(GetName(GetPVarInt(playerid, "use_player_job")));
		    if(ID != INVALID_PLAYER_ID)
			{
	        	PI[ID][pJob] = 0;

	        	if(GetPVarInt(playerid, "use_job") == 1)
	  			{
					static const f_str[] = ""W"%s "G"уволил Вас с работы Автобусника";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str,player_name[playerid]);
		    		SendOk(ID,string);
				}
	    		else if(GetPVarInt(playerid, "use_job") == 2)
	   			{
					static const f_str[] = ""W"%s "G"уволил Вас с работы Механика";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str,player_name[playerid]);
		    		SendOk(ID,string);
				}
	 			else if(GetPVarInt(playerid, "use_job") == 3)
			   	{
					static const f_str[] = ""W"%s "G"уволил Вас с работы Развозчика еды";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str,player_name[playerid]);
		    		SendOk(ID,string);
	     		}
	        	else if(GetPVarInt(playerid, "use_job") == 4)
		    	{
					static const f_str[] = ""W"%s "G"уволил Вас с работы Развозчика продуктов/топлива";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str,player_name[playerid]);
		    		SendOk(ID,string);
	     		}
	     		else if(GetPVarInt(playerid, "use_job") == 5)
		    	{
					static const f_str[] = ""W"%s "G"уволил Вас с работы Мойщика дорог";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str,player_name[playerid]);
		    		SendOk(ID,string);
	     		}
	        	else if(GetPVarInt(playerid, "use_job") == 6)
		    	{
					static const f_str[] = ""W"%s "G"уволил Вас с работы Газонокосильщика";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string,sizeof(string),f_str,player_name[playerid]);
		    		SendOk(ID,string);
				}

		    	if(GetPVarInt(playerid, "use_job") == 1)
	  			{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Автобусника";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
				}
	    		else if(GetPVarInt(playerid, "use_job") == 2)
	   			{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Механика";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
				}
	 			else if(GetPVarInt(playerid, "use_job") == 3)
			   	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Развозчика еды";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
	     		}
	        	else if(GetPVarInt(playerid, "use_job") == 4)
		    	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Развозчика продуктов/топлива";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
	     		}
	     		else if(GetPVarInt(playerid, "use_job") == 5)
		    	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Мойщика дорог";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
	     		}
	        	else if(GetPVarInt(playerid, "use_job") == 6)
		    	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Газонокосильщика";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
				}

				SaveAccount(ID);
	        }
	        else
			{
			    if(PI[ID][pJob] == 0) return ErrorMessage(playerid, "Игрок не трудоустроен");
				if(GetPVarInt(playerid, "use_job") == 1)
	  			{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Автобусника";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
				}
	    		else if(GetPVarInt(playerid, "use_job") == 2)
	   			{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Механика";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
				}
	 			else if(GetPVarInt(playerid, "use_job") == 3)
			   	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Развозчика еды";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
	     		}
	        	else if(GetPVarInt(playerid, "use_job") == 4)
		    	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Развозчика продуктов/топлива";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
	     		}
	     		else if(GetPVarInt(playerid, "use_job") == 5)
		    	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Мойщика дорог";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
	     		}
	        	else if(GetPVarInt(playerid, "use_job") == 6)
		    	{
					static const f_str[] = "[A] %s[%d] уволил %s[%d] с работы Газонокосильщика";
					new string1[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];

					format(string1, sizeof(string1), f_str,player_name[playerid],playerid,player_name[ID],ID);
					AdmMSG(0xAFAFAFAA, string1,1);
				}

			    SendOk(playerid, "Игрок успешно уволен с работы в оффлайне");

			    new query[128];
			    mysql_format(connects,query, sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pJob = '0' WHERE Name = '%s'",GetName(GetPVarInt(playerid, "use_player_job")));
    			mysql_tquery(connects, query, "", "");
			}
	    }
		case D_JOB: {
			if(!response) return true;
			if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");
			switch(listitem) {
				case 0: {
					if(PI[playerid][pLevel] < 2) return ErrorMessage(playerid,"Доступно со 2 уровня");
					PI[playerid][pJob] = 1;
				}
				case 1: {
					if(PI[playerid][pLevel] < 3) return ErrorMessage(playerid,"Доступно со 3 уровня");
					PI[playerid][pJob] = 2;
				}
				case 2: {
					if(PI[playerid][pLevel] < 3) return ErrorMessage(playerid,"Доступно со 3 уровня");
					PI[playerid][pJob] = 4;
				}
				case 3: {
					if(PI[playerid][pLevel] < 4) return ErrorMessage(playerid,"Доступно со 4 уровня");
					PI[playerid][pJob] = 3;
				}
				case 4: {
					if(PI[playerid][pLevel] < 4) return ErrorMessage(playerid,"Доступно со 4 уровня");
					PI[playerid][pJob] = 5;
				}
				case 5: {
					if(PI[playerid][pLevel] < 5) return ErrorMessage(playerid,"Доступно с 5 уровня");
					PI[playerid][pJob] = 6;
				}
			}
			SendOk(playerid,"Вы успешно трудоустроились!");
			SendOk(playerid,"Для просмотра доступных команд, введите: "W"/menu > Команды сервера > По работе");
		}
		case D_JOB_OIL: {
			if(!response) return true;
			if(!TI[playerid][tJobOil][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");
				TI[playerid][tJobOil][0] = true;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на работу "W"нефтяника");
				SendOk(playerid,"Для просмотра статистики, введите - "W"/progress");
				SendOk(playerid,"Возмите бочку с верстака и отнесите на обозначенную метку на мини-карте");
		
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 27);
				else A_SetPlayerSkin(playerid, 131);
				
				EnableGPSForPlayer(playerid, 2717.7539,-2370.5381,17.9660);

				//SetPlayerMapIcon(playerid,1,2743.5747,-2200.5796,21.9503,11,-1,MAPICON_GLOBAL);
				//SetPlayerMapIcon(playerid,2,2752.0374,-2197.0898,21.9503,11,-1,MAPICON_GLOBAL);

				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndOil(playerid);
				else D(playerid,D_JOB_OIL_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
		case D_JOB_OIL_1: {
			if(!response) return EndOil(playerid);
			SetPVarInt(playerid,"oil_salary",1);
			EndOil(playerid);
		}
		case D_JOB_SAD: {
			if(!response) return true;
			if(!TI[playerid][tJobSad][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");
				TI[playerid][tJobSad][0] = 1;
				TI[playerid][tJobSad][2] = 0;
				TI[playerid][tJobSad][3] = 0;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на "W"ферму");
				SendOk(playerid,"Для ухода за деревом, возьмите лейку и полейте дерево");
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid,35);
				else A_SetPlayerSkin(playerid, 157);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
				//D(playerid,D_JOB_SAD_2,DSM, ""P"Яблочный сад","\n\n"W"Желаете пройти FAQ?\n\n","Да","Нет");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndSad(playerid);
				else D(playerid,D_JOB_SAD_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
		case D_JOB_SAD_1: {
			if(!response) return EndSad(playerid);
			SetPVarInt(playerid,"sad_salary",1);
			EndSad(playerid);
		}
		case D_JOB_GUNS: {
			if(!response) return true;
			if(!TI[playerid][tJobGun][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");
				TI[playerid][tJobGun][0] = 1;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на "W"оружейный завод");
				SendOk(playerid,"Возьмите заготовку у стенда и займите свободный стол для сборки оружия");
				TI[playerid][tJobGun][1] = 1;
				TI[playerid][tJobSalary] = 0;
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 73);
				else A_SetPlayerSkin(playerid, 53);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndGun(playerid);
				else D(playerid,D_JOB_GUNS_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
		case D_JOB_GUNS_1: {
			if(!response) return EndGun(playerid);
			SetPVarInt(playerid,"gun_salary",1);
			EndGun(playerid);
		}
		case D_JOB_WOOD: {
			if(!response) return true;
			if(!TI[playerid][tJobWood][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");
				TI[playerid][tJobWood][0] = 1;
				TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Поздравляем. Вы успешно устроились на "W"лесопилку");
				SendOk(playerid,"Чтобы напилить древесины, подойдите к основанию дерева");
				
				new rand = random(sizeof(Woods));
				EnableGPSForPlayer(playerid, Woods[rand][woodObjectPosX],Woods[rand][woodObjectPosY],Woods[rand][woodObjectPosZ]);
				
				if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 260);
				else A_SetPlayerSkin(playerid, 131);
				SetPlayerAttachedObject(playerid,8,341,6);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndWood(playerid);
				else D(playerid,D_JOB_WOOD_1,DSM, ""P"Завершение работы","\n\n\t"YELLOW"Выберите способ оплаты\n\n"G"При выборе оплаты на банковский счёт,\nзаработная плата придёт во время PayDay\n\n","Наличными","Банк");
			}
		}
		case D_JOB_WOOD_1: {
			if(!response) return EndWood(playerid);
			SetPVarInt(playerid,"wood_salary",1);
			EndWood(playerid);
		}
		case D_STOP_LOAD: {
  			if(!response) return RemovePlayerFromVehicleAC(playerid);
			else {
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return true;
				if(VG[vehicleid][vgLoading] == false && VG[vehicleid][vgUnloading] == false) return true;
				VG[vehicleid][vgLoading] = false;
				VG[vehicleid][vgUnloading] = false;
				
				if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabel(VG[vehicleid][vgText]);
				
				DestroyDynamicPickup(VG[vehicleid][vgPickup]);
	            VG[vehicleid][vgPickup] = 0;
	            DestroyDynamicArea(VG[vehicleid][vgArea]);
				VG[vehicleid][vgArea] = 0;
			}
		}
		case D_STOP_LOAD_ROBHOUSE: {
  			if(!response) return RemovePlayerFromVehicleAC(playerid);
			else {
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return true;
				if(VG[vehicleid][vgRobHouse] == false) return true;
				VG[vehicleid][vgRobHouse] = false;
				
				if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabel(VG[vehicleid][vgText]);
				DestroyDynamicPickup(VG[vehicleid][vgPickup]);
	            VG[vehicleid][vgPickup] = 0;
	            DestroyDynamicArea(VG[vehicleid][vgArea]);
				VG[vehicleid][vgArea] = 0;
				SendOk(playerid,"Награбленное можно продать на чёрном рынке");

				if(IsValidDynamicPickup(RobPlayer[playerid][RobPickup])) {
					DestroyDynamicPickup(RobPlayer[playerid][RobPickup]);
					DestroyDynamicArea(RobPlayer[playerid][RobArea]);
					DestroyDynamic3DTextLabel(RobPlayer[playerid][RobText]);
				}
			}
		}
		case dBizzEnter:
		{
		    if(!response) return true;
		    
		    new businessid = TI[playerid][tSelectedBusinessID], bint = gBusiness[businessid][bizzBint];
			if(!(1 <= bint <= gBintsCount-1)) return 1;
			TI[playerid][tTPpick] = true;
			SetPlayerInterior(playerid,gBints[bint][bintInterior]);
			SetPlayerVirtualWorld(playerid,businessid);
			SetPlayerPosAC(playerid, gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ], businessid, gBints[bint][bintInterior]);
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			gBusiness[businessid][bizzVisitors]++;
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);
		}
		case D_BIZZ_BUY: {
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			if(!response) {
				if(gBusiness[businessid][bizzType] == 8) {
     				if(IsPlayerInRangeOfPoint(playerid,10.0, 2475.11, -726.617, 12.3)) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0;
					if(IsPlayerInRangeOfPoint(playerid,10.0, 2328.85, -1804.16, 22.454)) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 2;
					if(IsPlayerInRangeOfPoint(playerid,10.0, 391.207, 789.493, 12.00)) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 4;
					if(IsPlayerInRangeOfPoint(playerid,10.0, 2135.81, -1802.5, 19.9079)) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 5;
					new carclass = GetPVarInt(playerid,"sellcarClass");
					TI[playerid][tTPpick] = true;
     				SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, carclass, 82);
					SetPlayerFacingAngle(playerid,182.0258);
					SetCameraBehindPlayer(playerid);
					gBusiness[businessid][bizzVisitors]++;
					
					BuySalonStatus[playerid] = 0;
					BuySalonWorld[playerid] = carclass;
					return 1;
				}
				D(playerid,dBizzEnter,DSM, ""P"Бизнес","\n\n"W"Вы дейстительно хотите войти в данный бизнес?\n\n","Да","Нет");
			}
			else {
				if(businessid < 0) return true;
				if(gBusiness[businessid][bizzOwnerID]) return ErrorMessage(playerid,"Этот бизнес уже кто-то купил");
				new mes[128];
				format(mes,sizeof(mes),""W"Вы действительно хотите купить этот бизнес за "GREEN"$%d"W"?",gBusiness[businessid][bizzSellPrice]);
				D(playerid,D_BIZZ_UPDATE,DSM, ""P"Бизнес",mes,"Да","Нет");
				return 1;
			}
		}
		case D_BIZZ_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"bizzProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
					SendOk(playerid,"Вы отказались от покупки бизнеса");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего бизнеса");
					DeletePVar(playerid,"bizzProdaet");
					DeletePVar(playerid,"bizzCena");
					DeletePVar(id_pokupaet,"bizzPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"bizzProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
					new bizz_cena = GetPVarInt(playerid,"bizzCena");
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < bizz_cena) {
							ErrorMessage(playerid,"У Вас недостаточно денег на руках");
							ErrorMessage(id_prodaet,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"bizzProdaet");
							DeletePVar(playerid,"bizzCena");
							DeletePVar(id_pokupaet,"bizzPokupaet");
						}
						else {
							new string[128];
							format(string,64,"покупка бизнеса у %s",player_name[id_prodaet]);
							string[0] = EOS;
							GiveMoney(playerid,-bizz_cena,string);
							string[0] = EOS;
							format(string,64,"продажа бизнеса %s",player_name[playerid]);
							GiveMoney(id_prodaet,bizz_cena,string);
							PI[playerid][pBusiness] = PI[id_prodaet][pBusiness];
							PI[id_prodaet][pBusiness] = 0;
							UpdatePlayerData(id_prodaet,"bussiness",0);
							UpdatePlayerData(playerid,"bussiness",PI[playerid][pBusiness]);
							strmid(gBusiness[PI[playerid][pBusiness]][bizzOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							SaveBusiness(PI[playerid][pBusiness]);
							new bizid = PI[playerid][pBusiness];
							UpdateBusinessText(bizid);

							if(gBusiness[bizid][bizzType] == 11 || gBusiness[bizid][bizzType] == 14) {
								if(gBusiness[bizid][bizzType] == 11) PI[playerid][bizz_status] = 6;
								else if(gBusiness[bizid][bizzType] == 14) PI[playerid][bizz_status] = 3;
								PI[playerid][bizz_work] = gBusiness[bizid][bizzID];
								UpdatePlayerData(playerid,"bizz_status",PI[playerid][bizz_status]);
								UpdatePlayerData(playerid,"bizz_work",gBusiness[bizid][bizzID]);
								PI[playerid][bizz_cash] = 0;
								UpdatePlayerData(playerid,"bizz_cash",0);
								PI[playerid][bizz_lcash] = 0;
								UpdatePlayerData(playerid,"bizz_lcash",0);
								
								PI[id_prodaet][bizz_work] = 0;
								UpdatePlayerData(id_prodaet,"bizz_work",0);
								PI[id_prodaet][bizz_status] = 0;
								UpdatePlayerData(id_prodaet,"bizz_status",0);
							}
                            SaveBusiness(bizid);

							format(string,sizeof(string),"Вы приобрели бизнес у "P"%s"G" за "ORANGE"$%i",player_name[id_prodaet],bizz_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Вы продали бизнес "P"%s"G" за "ORANGE"$%i",player_name[playerid],bizz_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"bizzProdaet");
							DeletePVar(playerid,"bizzCena");
							DeletePVar(id_pokupaet,"bizzPokupaet");
						}
					}
					else {
						ErrorMessage(playerid,"Игрок оффлайн");
						DeletePVar(playerid,"bizzProdaet");
						DeletePVar(playerid,"bizzCena");
					}
				}
			}
		}
		case D_BIZZ_BUY_FILL: {
			if(!response) return true;
			new businessid = GetPVarInt(playerid,"bfillingid");
			DeletePVar(playerid,"bfillingid");
			if(businessid < 0) return true;
			if(gBusiness[businessid][bizzOwnerID]) return ErrorMessage(playerid,"Этот бизнес уже кто-то купил");
			new price = gBusiness[businessid][bizzSellPrice];
			if(PI[playerid][pCash] < price) return  ErrorMessage(playerid,"У Вас недостаточно денег для покупки этого бизнеса");
			if(PI[playerid][pBusiness]) return  ErrorMessage(playerid,"У Вас уже есть бизнес");
			gBusiness[businessid][bizzOwnerID] = PI[playerid][pID];
			SetString(gBusiness[businessid][bizzOwner],player_name[playerid]);
			SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили бизнес. Не забывайте оплачивать его, иначе его продадут государству!");
			SendClientMessage(playerid,CGOLD,"Панель управления бизнесом: "W"/bpanel");

            new rent_time = (gBusiness[businessid][bizzDay] - (gBusiness[businessid][bizzDay] % 86400)) + (1 * 86400);

			gBusiness[businessid][bizzDay] = rent_time;
            //gBusiness[businessid][bizzDay] = unix + 60*60*24;

			gBusiness[businessid][bizzBank] = 0;
			gBusiness[businessid][bizzBankDay] = 0;
			gBusiness[businessid][bizzProduct] = 100;
			gBusiness[businessid][bizzPrice] = 12;
			gBusiness[businessid][bizzProdOrder] = 0;
			gBusiness[businessid][bizzProdOrderPrice] = 0;
			SaveBusiness(businessid);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid,"bussiness",businessid);
			PI[playerid][pBusiness] = gBusiness[businessid][bizzID];
			GiveMoney(playerid, -price,"покупка бизнеса");
		}
		case D_BIZZ_UPDATE:
		{
			if(!response) return true;
			new businessid = TI[playerid][tSelectedBusinessID];
			
			if(businessid < 0) return true;
			
			if(gBusiness[businessid][bizzOwnerID]) return ErrorMessage(playerid,"Этот бизнес уже кто-то купил");

			new price = gBusiness[businessid][bizzSellPrice];

			if(PI[playerid][pCash] < price) return  ErrorMessage(playerid,"У Вас недостаточно денег для покупки этого бизнеса");
			if(PI[playerid][pBusiness]) return  ErrorMessage(playerid,"У Вас уже есть бизнес");

			gBusiness[businessid][bizzOwnerID] = PI[playerid][pID];
			
			SetString(gBusiness[businessid][bizzOwner],player_name[playerid]);
			
			if(gBusiness[businessid][bizzType] == 11 || gBusiness[businessid][bizzType] == 14 || gBusiness[businessid][bizzType] == 15)
			{
				if(gBusiness[businessid][bizzType] == 11)
				{
					PI[playerid][bizz_status] = 6;
					SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили таксопарк. Не забывайте оплачивать его, иначе его продадут государству!");
				}
				else if(gBusiness[businessid][bizzType] == 14)
				{
					PI[playerid][bizz_status] = 3;
					SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили транспортную компанию. Не забывайте оплачивать ее, иначе ее продадут государству!");
				}
				else if(gBusiness[businessid][bizzType] == 15)
				{
					SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили банковское отделение. Не забывайте оплачивать его, иначе его продадут государству!");
				}
				PI[playerid][bizz_cash] = 0;
				PI[playerid][bizz_lcash] = 0;
				PI[playerid][bizz_work] = gBusiness[businessid][bizzID];
				
				UpdatePlayerData(playerid,"bizz_status",PI[playerid][bizz_status]);
				UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
				UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
				UpdatePlayerData(playerid,"bizz_work",gBusiness[businessid][bizzID]);
				
				gBusiness[businessid][bizzUpgrade][2] = 1;
				
				UpdateBizzUpgrade(businessid);
			}
			else
			{
				SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили бизнес. Не забывайте оплачивать его, иначе его продадут государству!");
				SendClientMessage(playerid,CGOLD,"Панель управления бизнесом - "W"/bpanel");
			}
			
			new rent_time = (gBusiness[businessid][bizzDay] - (gBusiness[businessid][bizzDay] % 86400)) + (1 * 86400);
			
			gBusiness[businessid][bizzDay] = rent_time;
			//gBusiness[businessid][bizzDay] = unix + 60*60*24;
			
			UpdateBusinessDataInt(businessid,"deliving",gBusiness[businessid][bizzDay]);

			gBusiness[businessid][bizzBank] = 0;
			gBusiness[businessid][bizzBankDay] = 0;
			gBusiness[businessid][bizzProduct] = 500;
			gBusiness[businessid][bizzPrice] = 1;
			
			SaveBusiness(businessid);
			
			UpdateBusinessText(businessid);
			
			PI[playerid][pBusiness] = businessid;
			UpdatePlayerData(playerid,"bussiness",businessid);

			GiveMoney(playerid, -price,"покупка бизнеса");
		}
  		case D_BIZZ: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness];
			if(bizz < 0) return true;
			switch(listitem) {
				case 0..5: dialog_business(playerid,bizz,listitem);
				case 6: dialog_business(playerid,bizz,7);
				case 7: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_2: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness];
			if(bizz < 0) return true;
			dialog_business(playerid,bizz,listitem);
		}
		case D_BIZZ_3: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness];
			if(bizz < 0) return true;
			switch(listitem) {
				case 0: dialog_business(playerid,bizz,0);
				case 1: dialog_business(playerid,bizz,2);
				case 2: dialog_business(playerid,bizz,3);
				case 3: dialog_business(playerid,bizz,5);
				case 4: dialog_business(playerid,bizz,6);
				case 5: dialog_business(playerid,bizz,7);
				case 6: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_4: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness];
			if(bizz < 0) return true;
			switch(listitem) {
				case 0..4: dialog_business(playerid,bizz,listitem);
				case 5: dialog_business(playerid,bizz,7);
				case 6: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_5: {
			if(!response) return true;
			new bizz = PI[playerid][pBusiness];
			if(bizz < 0) return true;
			switch(listitem) {
				case 0..2: dialog_business(playerid,bizz,listitem);
				case 3: dialog_business(playerid,bizz,4);
				case 4: dialog_business(playerid,bizz,5);
				case 5: dialog_business(playerid,bizz,7);
				case 6: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_UPGRADE: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PI[playerid][pBusiness]) return 1;
			new bizid = PI[playerid][pBusiness];
			switch(listitem) {
				case 0: {
					if(gBusiness[bizid][bizzBank] < 100000) return ErrorMessage(playerid, "На счету бизнеса недостаточно средств");
					if(gBusiness[bizid][bizzUpgrade][0] >= 10000) return ErrorMessage(playerid, "У Вас приобретено данное улучшение");
					gBusiness[bizid][bizzUpgrade][0] = 10000;
					gBusiness[bizid][bizzBank] -= 100000;
				}
				case 1: {
					if(gBusiness[bizid][bizzBank] < 200000) return ErrorMessage(playerid, "На счету бизнеса недостаточно средств");
					if(gBusiness[bizid][bizzUpgrade][1] == 1) return ErrorMessage(playerid, "У Вас приобретено данное улучшение");
					gBusiness[bizid][bizzUpgrade][1] = 1;
					gBusiness[bizid][bizzBank] -= 200000;
				}
				case 2: {
					if(gBusiness[bizid][bizzBank] < 200000) return ErrorMessage(playerid, "На счету бизнеса недостаточно средств");
					if(gBusiness[bizid][bizzUpgrade][2] == 1) return ErrorMessage(playerid, "У Вас приобретено данное улучшение");
					gBusiness[bizid][bizzUpgrade][2] = 1;
					gBusiness[bizid][bizzBank] -= 200000;
				}
			}
			SendClientMessage(playerid,CGOLD,"Поздравляем с покупкой улучшения в Ваш бизнес");
			UpdateBusinessDataInt(bizid,"bank",gBusiness[bizid][bizzBank]);
			UpdateBizzUpgrade(bizid);
		}
		case D_BIZZ_SELL: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(PI[playerid][pBusiness] < 1) return ErrorMessage(playerid,"У Вас нет бизнеса");
			new id = PI[playerid][pBusiness];
			new sum = floatround(gBusiness[id][bizzSellPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gBusiness[id][bizzSellPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(UpdateBusinessDataInt(id,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #21");
			gBusiness[id][bizzOwnerID] = 0;
			gBusiness[id][bizzStatus] = 1;
			gBusiness[id][bizzDay] = gettime() + (random(169200) + 3600);
			gBusiness[id][bizzUpgrade][0] = 5000;
			if(gBusiness[id][bizzType] != 16) gBusiness[id][bizzUpgrade][1] = 0;
			gBusiness[id][bizzUpgrade][2] = 0;
			gBusiness[id][bizzMafia] = 0;
			gBusiness[id][bizzPrice] = 5;
			SetString(gBusiness[id][bizzOwner],"");
			if(gBusiness[id][bizzType] != 16) {
				SaveBusiness(id);
			}
			if(gBusiness[id][bizzType] == 16) {
				SaveBusiness(id);
			}
			UpdateBusinessText(id);
			UpdatePlayerData(playerid,"bussiness",0);
			PI[playerid][pBusiness] = 0;
			GiveMoney(playerid,sum,"продажа бизнеса");
			if(gBusiness[id][bizzType] == 11) {
				sell_bizztaxi(id);
				SendOk(playerid,"Таксопарк продан государству");
			}
			else if(gBusiness[id][bizzType] == 14) {
				sell_bizztaxi(id);
				SendOk(playerid,"Транспортная компания продана государству");
			}
			else if(gBusiness[id][bizzType] == 15) {
				SendOk(playerid,"Банковское отделение продано государству");
			}
			else SendOk(playerid,"Бизнес продан государству");
		}
		case D_BIZZ_BANK: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PI[playerid][pBusiness]) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness]][bizzBank]);
					D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
				}
				case 1: D(playerid,D_BIZZ_BANK_INPUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите взять с кассы бизнеса:\n\n","Взять","Отмена");
				case 2: D(playerid,D_BIZZ_BANK_PUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите положить в кассу бизнеса:\n\n","Положить","Отмена");
			}
		}
		case D_BIZZ_BANK_INPUT: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PI[playerid][pBusiness]) return 1;
			new id = PI[playerid][pBusiness];
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_BIZZ_BANK_INPUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите взять с кассы бизнеса:\n\n"NO"*"G" От $1 до $1.000.000\n\n","Взять","Отмена");
			if(gBusiness[id][bizzBank] < sum) return D(playerid,D_BIZZ_BANK_INPUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите взять с кассы бизнеса:\n\n"NO"*"G" В кассе недостаточно средств\n\n","Взять","Отмена");	
			if(UpdateBusinessDataInt(id,"bank",gBusiness[id][bizzBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #20");
			gBusiness[id][bizzBank] -= sum;
			UpdateBusinessDataInt(id,"bank",gBusiness[id][bizzBank]);
			GiveMoney(playerid,sum,"прибыль с бизнеса");
			
			new string[128];
			format(string,sizeof(string),"Вы взяли с кассы бизнеса: "ORANGE"$%d",sum);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_BANK_PUT: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PI[playerid][pBusiness]) return 1;
			new id = PI[playerid][pBusiness];
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_BIZZ_BANK_PUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите положить в кассу бизнеса:\n\n"NO"*"G" От $1 до $1.000.000\n\n","Положить","Отмена");
			if(GetPlayerMoneyEx(playerid) < sum) return D(playerid,D_BIZZ_BANK_PUT,1,"Бизнес","\n\n"W"Введите сумму, которую хотите положить в кассу бизнеса:\n\n"NO"*"G" У Вас недостаточно средств\n\n","Положить","Отмена");	
			if(UpdateBusinessDataInt(id,"bank",gBusiness[id][bizzBank] + sum)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #20");
			gBusiness[id][bizzBank] += sum;
			UpdateBusinessDataInt(id,"bank",gBusiness[id][bizzBank]);
			GiveMoney(playerid,-sum,"положил в банк бизнеса");
			
			new string[128];
			format(string,sizeof(string),"Вы положили в кассу бизнеса: "ORANGE"$%d",sum);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_PRICE: {
			if(!response) return pc_cmd_bpanel(playerid);
			new id = PI[playerid][pBusiness];
			if(id < 0) return true;
			new price = strval(inputtext);
			if(gBusiness[id][bizzType] == 7) {
				if(price < 12 || price > 24) return D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за 1 литр\nПримечание: от "GREEN"$12"W" до "GREEN"$24\n\n","Изменить","Отмена");
			}
			else {
				if(price < 1 || price > 5) return D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за "P"1"W" ед. товара\nПримечание: от "GREEN"$1"W" до "GREEN"$5\n\n","Изменить","Отмена");
			}
			gBusiness[id][bizzPrice] = price;
			UpdateBusinessDataInt(id,"price",price);
			UpdateBusinessText(id);
			new string[128];
			if(gBusiness[id][bizzType] == 7) format(string,sizeof(string),"Цена за "P"1"G" литр установлена: "ORANGE"$%d",price);
			else format(string,sizeof(string),"Цена за "P"1"G" ед. товара установлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_ENTER: {
			if(!response) return pc_cmd_bpanel(playerid);
			new id = PI[playerid][pBusiness];
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 0 || price > 5000) return D(playerid,D_BIZZ_ENTER,DSI, ""P"Бизнес","\n\n"W"Введите цену за вход\nПримечание: от "GREEN"$0"W" до "GREEN"$5000\n\n","Изменить","Отмена");
			gBusiness[id][bizzEnter] = price;
			UpdateBusinessDataInt(id,"enter",price);
			UpdateBusinessText(id);
			new string[128];
			format(string,sizeof(string),"Цена за вход установлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_ENTERS: {
			if(!response) return 1;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
		    new price = gBusiness[businessid][bizzEnter];
			new bint = gBusiness[businessid][bizzBint];
			if(!(1 <= bint <= gBintsCount-1)) return 1;
			if(PI[playerid][pVips] == VIP_PLATINA) {
				if(GetPlayerMoneyEx(playerid) < price/2) return ErrorMessage(playerid,"У Вас недостаточно денег");
				GiveMoney(playerid,-floatround(price/2),"вход в бизнес");
				bizz_pay(businessid,floatround(price/2));
			}
			else if(PI[playerid][pVips] == VIP_NONE || PI[playerid][pVips] == VIP_BAZE || PI[playerid][pVips] == VIP_GOLD || PI[playerid][pVips] == VIP_KING || PI[playerid][pVips] == VIP_SILVER) {
				if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
				GiveMoney(playerid,-price,"вход в бизнес");
				bizz_pay(businessid,price);
			}
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ], businessid, gBints[bint][bintInterior]);
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			gBusiness[businessid][bizzVisitors]++;
			SetCameraBehindPlayer(playerid);
			if(gBusiness[businessid][bizzType] == 10 || gBusiness[businessid][bizzType] == 11 || gBusiness[businessid][bizzType] == 14 || gBusiness[businessid][bizzType] == 15) OnPlayerUpdateLoadingMode(playerid);
		}
		case dBusinessProd: {
			if(!response) return pc_cmd_bpanel(playerid);
			new put = strval(inputtext);
			new bizid = PI[playerid][pBusiness];
			if(gBusiness[bizid][bizzProdOrder]) return ErrorMessage(playerid,"Вы уже заказали продукты, ожидайте когда развозчики доставят его в Ваш бизнес");
			if(put < 500 || put > gBusiness[bizid][bizzUpgrade][0]) {
				static const f_str[] = "\n\n"W"Введите кол-во продуктов, которое хотите заказать:\n\n"NO"*"G" Минимум 500 максимум %d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 6)];
				format(string,sizeof(string),f_str,gBusiness[bizid][bizzUpgrade][0]);
				D(playerid,dBusinessProd,DSI, ""P"Заказ продуктов", string, "Далее", "Отмена");
				return 1;
			}
			if(gBusiness[bizid][bizzProduct]+put > gBusiness[bizid][bizzUpgrade][0]) return D(playerid,dBusinessProd,DSI, ""P"Заказ продуктов", "\n\n"W"Введите кол-во продуктов, которое хотите заказать:\n\n"NO"*"G" На Вашем складе достаточно продуктов\n\n", "Далее", "Отмена");
	
			SetPVarInt(playerid,"buy_prod",put);
			D(playerid,dBusinessProd2,DSI, ""P"Заказ продуктов", "\n\n"W"Введите цену за "P"1"W" продукт:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Отмена");
			return 1;
		}
		case dBusinessProd2: {
			if(!response) return pc_cmd_bpanel(playerid),DeletePVar(playerid,"buy_prod");
			new put;
			new bizid = PI[playerid][pBusiness];
			if(sscanf(inputtext,"i",put)) return D(playerid,dBusinessProd2,DSI, ""P"Заказ продуктов", "\n\n"W"Введите цену за "P"1"W" продукт:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Отмена");
			if(put < 2 || put > 4) return D(playerid,dBusinessProd2,DSI, ""P"Заказ продуктов", "\n\n"W"Введите цену за "P"1"W" продукт:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Отмена");
			new string[144];
			new prod = GetPVarInt(playerid,"buy_prod") * put;
			if(gBusiness[bizid][bizzBank] < prod) {
				format(string, sizeof(string), "Недостаточно средств на счету бизнеса. Для оплаты необходимо: "NO"$%d",prod);
				ErrorMessage(playerid,string);
				DeletePVar(playerid,"buy_prod");
				return 1;
			}
			gBusiness[bizid][bizzBank] -= prod;
			gBusiness[bizid][bizzProdOrder] = GetPVarInt(playerid,"buy_prod");
			gBusiness[bizid][bizzProdOrderPrice] = put;

			SaveBusiness(bizid);

			format(string, sizeof(string), ""W"Заказано продуктов: "O"%d\n"W"Оплачено со счёта бизнеса: "GREEN"$%d",gBusiness[bizid][bizzProdOrder],gBusiness[bizid][bizzProdOrderPrice]*gBusiness[bizid][bizzProdOrder]);
			D(playerid,DIALOG_NONE,DSM, ""P"Заказ продуктов", string, "Закрыть", "");
			DeletePVar(playerid,"buy_prod");
			return 1;
		}
		case D_BIZZ_STATS: return pc_cmd_bpanel(playerid);
		case D_AMMO: {
			if(!response) return 1;
			switch(listitem) {
				case 0..5,12,13: {
					new bizid = TI[playerid][tSelectedBusinessID];
					new slot = listitem;
					if(PI[playerid][pCash] < gSellGunPrice[slot]*gBusiness[bizid][bizzPrice]) return ErrorMessage(playerid,"Недостаточно денег");
					new gun_name[32 + 1],string[128];
					GetWeaponName(gSellGun[slot],gun_name,32);
					if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot] > 0) {
						gBusiness[bizid][bizzProduct] -= gSellGunProds[slot];
						bizz_pay(bizid,(gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]));
					} 
					UpdateBusinessText(bizid);

					if(listitem < 12) {
						format(string, sizeof(string), "Вы купили "P"%s "G"за "ORANGE"$%i",gun_name, gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
						AC_GivePlayerWeapon(playerid,gSellGun[slot],1);
					}
					else if(listitem == 12) {
						SetPlayerArmour(playerid,100);
						format(string, sizeof(string), "Вы купили "P"Armour "G"за "ORANGE"$%i", gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
					}
					else if(listitem == 13) {
						//return ErrorMessage(playerid,"В разработке. Уже скоро...");
						if(TI[playerid][tTir]) return ErrorMessage(playerid,"У Вас уже есть пропуск в тир");
						format(string, sizeof(string), "Вы купили "P"пропуск в тир "G"за "ORANGE"$%i", gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
						TI[playerid][tTir] = true;
					}
					GiveMoney(playerid,-gSellGunPrice[slot] * gBusiness[bizid][bizzPrice],"покупка оружия(аммо)");
				}
				case 6..11: {
					D(playerid,D_AMMO_2, DIALOG_STYLE_INPUT, "Меню аммо", ""W"Введите количество патрон, которое хотите купить:", "Далее", "Отмена");
					SetPVarInt(playerid,"slot_ammo", listitem);
				}
			}
			return 1;
		}
		case D_AMMO_2: {
			if(!response) return DeletePVar(playerid,"slot_ammo");
			new slot = GetPVarInt(playerid,"slot_ammo");
			new bizid = TI[playerid][tSelectedBusinessID];
			new patron = strval(inputtext);
			if(patron <= 0 || patron > 1000) return D(playerid,D_AMMO_2, DIALOG_STYLE_INPUT, "Меню аммо", ""W"Введите количество патрон, которое хотите купить:\n\n"NO"*"G" От 1 до 1000 патрон", "Далее", "Отмена");
			if(PI[playerid][pCash] < gSellGunPrice[slot]*gBusiness[bizid][bizzPrice] * patron) return D(playerid,D_AMMO_2, DIALOG_STYLE_INPUT, "Меню аммо", ""W"Введите количество патрон, которое хотите купить:\n\n"NO"*"G" Недостаточно средств", "Далее", "Отмена");
			new gun_name[32 + 1],string[128];
			GetWeaponName(gSellGun[slot],gun_name,32);
			format(string, sizeof(string), "Вы купили "P"%s [%i пат.] "G"за "ORANGE"$%i",gun_name,patron, gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron);
			SendUse(playerid, string);
			if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot]*patron > 0) {
				gBusiness[bizid][bizzProduct] -= gSellGunProds[slot]*patron;
				bizz_pay(bizid,(gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron));
			} 

			AC_GivePlayerWeapon(playerid,gSellGun[slot],patron);
			GiveMoney(playerid,-gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron,"покупка оружия(аммо)");
			DeletePVar(playerid,"slot_ammo");
			return 1;
		}
		case D_BOX_2: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem) {
				case 0: {
					if(GetPlayerMoneyEx(playerid) < gBusiness[id][bizzPrice]*150) return ErrorMessage(playerid,"У Вас недостаточно денег");
					bizz_pay(id,gBusiness[id][bizzPrice]*150);
					GiveMoney(playerid, -gBusiness[id][bizzPrice]*150,"покупка в спортзале");
					if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
					else A_SetPlayerSkin(playerid,192);
					TI[playerid][tGym] = true;
					//SendOk(playerid,"Для выход на ринге введите '/fight'");
				}
				case 1..3: {
					if(!TI[playerid][tGym]) return ErrorMessage(playerid,"Для начала приобретите спортивную форму");
					if(TI[playerid][tGymSkill]) return ErrorMessage(playerid,"Вы уже изучаете стиль боя");
					if(PI[playerid][pBox] == listitem) return ErrorMessage(playerid,"У Вас уже изучен данный стиль боя");
					if(PI[playerid][pBox]+1 < listitem) return ErrorMessage(playerid,"Для начала изучите предыдущий стиль боя");
					if(GetPlayerMoneyEx(playerid) < 5000) return ErrorMessage(playerid,"У Вас недостаточно денег");
					if(gBusiness[id][bizzProduct]-130 > 0) {
						gBusiness[id][bizzProduct] -= 130;
						bizz_pay(id,5000);
					}
					GiveMoney(playerid, -5000,"покупка в спортзале");
					SendOk(playerid,"Вы начали тренировку, бейте по грушам для прокачки навыка боя");
					TI[playerid][tGymSkill] = listitem;
				}
				case 4: {
					if(GetPlayerMoneyEx(playerid) < 200) return ErrorMessage(playerid,"У Вас недостаточно денег");
					if(TI[playerid][tGyms] + 250 > 1000) return ErrorMessage(playerid,"Нельзя взять больше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-20 > 0) {
						gBusiness[id][bizzProduct] -= 20;
						bizz_pay(id,200);
					}
					GiveMoney(playerid, -200,"покупка в спортзале");
					TI[playerid][tGyms] += 250;
					SendOk(playerid,"Вы купили шейкер Smart 250мл на 250 ударов");
				}
				case 5: {
					if(GetPlayerMoneyEx(playerid) < 350) return ErrorMessage(playerid,"У Вас недостаточно денег");
					if(TI[playerid][tGyms] + 500 > 1000) return ErrorMessage(playerid,"Нельзя взять больше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-35 > 0) {
						gBusiness[id][bizzProduct] -= 35;
						bizz_pay(id,350);
					}
					GiveMoney(playerid, -350,"покупка в спортзале");
					TI[playerid][tGyms] += 500;
					SendOk(playerid,"Вы купили шейкер BSN 500мл на 500 ударов");
				}
				case 6: {
					if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостаточно денег");
					if(TI[playerid][tGyms] + 750 > 1000) return ErrorMessage(playerid,"Нельзя взять больше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-50 > 0) {
						gBusiness[id][bizzProduct] -= 50;
						bizz_pay(id,500);
					}
					GiveMoney(playerid, -500,"покупка в спортзале");
					TI[playerid][tGyms] += 750;
					SendOk(playerid,"Вы купили шейкер Biotech 750мл на 750 ударов");
				}
				case 7: {
					D(playerid,DIALOG_NONE,DSM, ""P"Информация",""W"Шейкер поможет тебе ускорить прокачку стиля боя на "ORANGE"30%.\n"W"Для наиоблее эффективной тренировки рекомендуем приобрести "ORANGE"1000мл шейкера.\n\n"NO"Внимание!"W" Если Вы вышли из игры не закончив тренировку, Ваш прогресс сохранится.\nЗа форму, тренировку и шейкер придётся заплатить снова. Удачной тренировки!\n\n","Закрыть","");
				}
				case 8: {
					if(PI[playerid][pMember] && start_work[playerid]) {
						A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
						SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					}
					else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
					TI[playerid][tGym] = false;
					SendOk(playerid,"Вы закончили тренировку");
				}
			}
		}
		case D_BIZZ_24: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gShopPrice[listitem]*gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			switch(listitem) {
				case 0: {
					if(PI[playerid][pPhone]) return ErrorMessage(playerid,"У Вас уже есть телефон"),show_24(playerid,id);
					new number;
					number = Random(100000,999999);
					PI[playerid][pPhone] = number;
					UpdatePlayerData(playerid,"pPhone",number);
					new string[128];
					format(string,sizeof(string),"Поздравляем с приобретением телефона! Ваш номер: "ORANGE"%d",number);
					SendUse(playerid,string);
				}
				case 1: {
					AC_GivePlayerWeapon(playerid,43,20);
					SendUse(playerid,"Поздравляем с покупкой камеры! Вы можете запечатлить 20 кадров");
				}
				case 2: {
					if(PI[playerid][pWatch]) return ErrorMessage(playerid,"У Вас уже есть часы"),show_24(playerid,id);
					PI[playerid][pWatch] = 1;
					UpdatePlayerData(playerid,"watch",1);
					SendUse(playerid,"Поздравляем с приобретением часов! Посмотреть время - "ORANGE"/time");
				}
				case 3: {
					if(PI[playerid][pBook]) return ErrorMessage(playerid,"У Вас уже телефонная книга"),show_24(playerid,id);
					PI[playerid][pBook] = 1;
					UpdatePlayerData(playerid,"book",1);
					SendUse(playerid,"Поздравляем с приобретением телефонной книги! Контакты - "ORANGE"/book");
				}
				case 4: {
				    if(!PI[playerid][pPhone]) return ErrorMessage(playerid,"У Вас нет телефона"),show_24(playerid,id);
					return D(playerid,D_BIZZ_SIM,DSI, ""P"Покупка номера","\n\n"W"Введите номер, который хотите использовать (6 цифр):\n\n","Купить","Закрыть");
				}
				case 5: {
					if(PI[playerid][pMask] >= vip_status[PI[playerid][pVips]][vip_mask]) {
						new string[128];
						format(string,sizeof(string),"Нельзя хранить больше %d масок",vip_status[PI[playerid][pVips]][vip_mask]);
						ErrorMessage(playerid, string),show_24(playerid,id);
						return 1;
					}
     				PI[playerid][pMask] += 1;
					UpdatePlayerData(playerid,"pMask",PI[playerid][pMask]);
					SendUse(playerid,"Поздравляем с покупкой маски! Использовать маску - "ORANGE"/mask");
				}
				case 6: return D(playerid,D_BIZZ_MEDKIT,DSL, ""P"Покупка аптечки",""P"1."W" Себе\n"P"2."W" В дом\n"P"3."W" В банду","Купить","Закрыть");
				case 7: {
					for(new i; i <= 11; i++) {
						new gunid, ammo;
						GetPlayerWeaponData(playerid, i, gunid,ammo);
						if(gunid == 14) return ErrorMessage(playerid,"У Вас уже есть цветы"),show_24(playerid,id);
					}
					AC_GivePlayerWeapon(playerid,14,1);
					SendUse(playerid,"Поздравляем с покупкой цветов! Подарить цветы - "ORANGE"/flowers");
				}
				case 8: {
					if(PI[playerid][pInstrument] >= 5) return ErrorMessage(playerid,"Нельзя хранить больше 5 ремкомплектов");
					PI[playerid][pInstrument] ++;
					UpdatePlayerData(playerid,"pInstr",PI[playerid][pInstrument]);
					SendUse(playerid,"Поздравляем с покупкой ремкомплекта! Починть транспорт - "ORANGE"/remp");
				}
				case 9: {
					AC_GivePlayerWeapon(playerid,41,5000);
					SendUse(playerid,"Поздравляем с покупкой балончика с краской!");
				}
				case 10: {
					if(PI[playerid][pJemmy] >= vip_status[PI[playerid][pVips]][vip_jimmy]) {
						new string[128];
						format(string,sizeof(string),"Нельзя хранить больше %d отмычек",vip_status[PI[playerid][pVips]][vip_mask]);
						ErrorMessage(playerid, string),show_24(playerid,id);
						return 1;
					}
					PI[playerid][pJemmy] ++;
					UpdatePlayerData(playerid,"pJemmy",PI[playerid][pJemmy]);
					SendUse(playerid,"Поздравляем с покупкой отмычки! Она понадобится Вам при взломе дверного замка");
				}
			}
			if(gBusiness[id][bizzProduct]-gShopProduct[listitem] > 0) {
				gBusiness[id][bizzProduct] -= gShopProduct[listitem];
				bizz_pay(id,price);
			} 

			if(listitem != 0) show_24(playerid,id);

            GiveMoney(playerid, -price,"покупка в 24-7");
			show_24(playerid,id);
		}
		case D_BIZZ_SIM: {
      		if(!response) return true;
		    if(isNumeric(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0') {
				D(playerid,D_BIZZ_SIM,DSI, ""P"Покупка номера","\n\n"W"Введите номер, который хотите использовать (6 цифр):\n\n"NO"*"G" Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купить","Закрыть");
				return true;
			}
			new query[128], id = TI[playerid][tSelectedBusinessID], price = gShopPrice[4]*gBusiness[id][bizzPrice];
			format(query,sizeof(query),"SELECT `pPhone` FROM `accounts` WHERE `pPhone` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "sim_shop", "dddd", playerid, strval(inputtext), id, price);
		}
		case D_BIZZ_MEDKIT: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			switch(listitem) {
				case 0: {
					if(PI[playerid][pMedKit] == vip_status[PI[playerid][pVips]][vip_heal]) {
						new string[128];
						format(string,sizeof(string),"Нельзя хранить больше %d аптечек",vip_status[PI[playerid][pVips]][vip_heal]);
						ErrorMessage(playerid, string),show_24(playerid,id);
						return 1;
					}
					static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ карман поместится: "P"%d"W" аптечек";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit]);
					return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
				}
				case 1: {
					if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома"),show_24(playerid,id);
					if(gHouses[PI[playerid][pHouse]][houseHealth] == 500) return ErrorMessage(playerid, "Нельзя хранить больше 500 аптечек в сейфе дома"),show_24(playerid,id);
					static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,500-gHouses[PI[playerid][pHouse]][houseHealth]);
					return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
				}
				case 2: {
					if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не состоите в банде"),show_24(playerid,id);
					if(FI[PI[playerid][pMember]][fHealth] == 500) return ErrorMessage(playerid, "Нельзя хранить больше 500 аптечек на складе банды"),show_24(playerid,id);
					static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
					return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
				}
			}
		}
		case D_BIZZ_MEDKIT_2: {
			if(!response) return true;
			if(strval(inputtext) < 1 || strval(inputtext) > vip_status[PI[playerid][pVips]][vip_heal]) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ карман поместится: "P"%d"W" аптечек\n\n"NO"*"G" От 1 и до %d";
				new string[sizeof(f_str) + 8];
				format(string,sizeof(string),f_str,vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit],vip_status[PI[playerid][pVips]][vip_heal]);
				return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			if(PI[playerid][pMedKit]+strval(inputtext)>vip_status[PI[playerid][pVips]][vip_heal]) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ карман поместится: "P"%d"W" аптечек\n\n"NO"*"G" В карман не поместится столько аптечек";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit]);
				return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ карман поместится: "P"%d"W" аптечек\n\n"NO"*"G" У Вас недостаточно средств";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit]);
				return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			PI[playerid][pMedKit] += strval(inputtext);
			UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
			SendUse(playerid, "Поздравляем с покупкой аптечек! Использовать аптечку - "ORANGE"/healme");
		}
		case D_BIZZ_MEDKIT_3: {
			if(!response) return true;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек\n\n"NO"*"G" От 1 и до 500";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			if(FI[PI[playerid][pMember]][fHealth]+strval(inputtext)>500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек\n\n"NO"*"G" На склад банды не поместится столько аптечек";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nНа склад банды поместится: "P"%d"W" аптечек\n\n"NO"*"G" У Вас недостаточно средств";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PI[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			FI[GetTeamID(playerid)][fHealth] += strval(inputtext);
			UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
			SendUse(playerid, "Поздравляем с покупкой аптечек!");
		}
		case D_BIZZ_MEDKIT_4: {
			if(!response) return true;
			if(!PI[playerid][pHouse]) return 1;
			new houseid = PI[playerid][pHouse];
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек\n\n"NO"*"G" От 1 и до 500";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			if(gHouses[houseid][houseHealth]+strval(inputtext)>500) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек\n\n"NO"*"G" В сейф дома не поместится столько аптечек";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введите кол-во аптечек, которое хотите приобрести:\nВ сейф дома поместится: "P"%d"W" аптечек\n\n"NO"*"G" У Вас недостаточно средств";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""P"Покупка аптечки",string,"Купить","Закрыть");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			gHouses[houseid][houseHealth] += strval(inputtext);
   			SaveHouse(houseid);
			SendUse(playerid, "Поздравляем с покупкой аптечек! Использовать аптечку в доме: /hhealme");
		}
		case D_BIZZ_FISH: {
		    if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			if(listitem != 4) if(GetPlayerMoneyEx(playerid) < gFishCosts[listitem]*gBusiness[id][bizzPrice]) return ErrorMessage(playerid,"У Вас недостаточно денег");
			switch(listitem) {
				case 0: {
					if(PI[playerid][pRod]) return ErrorMessage(playerid,"У Вас уже есть удочка");
					PI[playerid][pRod] = 1;
					UpdatePlayerData(playerid,"pRod",1);
					SendUse(playerid,"Поздравляем с приобретением удочки!");
				}
				case 1: {
				    if(PI[playerid][pRopes]) return ErrorMessage(playerid,"У Вас уже есть снасти");
					PI[playerid][pRopes] = 1;
					UpdatePlayerData(playerid,"pRopes",1);
					SendUse(playerid,"Поздравляем с приобретением снастей для удочки!");
				}
				case 2: {
					if(PI[playerid][pWorms] + 10 > 30) return ErrorMessage(playerid,"Вы не можете купить наживку более 30 шт.");
					PI[playerid][pWorms] += 10;
					//UpdatePlayerData(playerid,"pWorms",PI[playerid][pWorms]);
					SendUse(playerid,"Поздравляем с приобретением наживки!");
				}
				case 3:
				{
					if(GetPVarInt(playerid,"fish_yes")) return ErrorMessage(playerid,"У Вас уже есть пропуск на ловлю рыбы");
					if(!lic[playerid][2]) return ErrorMessage(playerid, "У Вас нет лицензии на водный транспорт");
					SetPVarInt(playerid,"fish_yes",1);
					SendUse(playerid,"Поздравляем с приобретением одноразового пропуска для ловли рыбы!");
				}
				case 4: {
					D(playerid, DIALOG_NONE, DSM, ""P"Информация", ""W"Пойманую рыбу Вы можете продать на складе\n возле рыболовного магазина по курсу "ORANGE"$160 - 1кг"W",\n или положить в холодильник в доме.\n\n\
						"NO"Внимание! "W"Для наиболее эффективной и выгодной рыбалки рекомендуем приобрести 30шт.\n Наживки. Пропуск одноразовый. Удочка и снасти покупаются раз и навсегда.\nУдачной рыбалки!", "Закрыть", "");
					return 1;
				}
			}
			GiveMoney(playerid, -gFishCosts[listitem]*gBusiness[id][bizzPrice],"покупка в рыб.бизнесе");
			if(gBusiness[id][bizzProduct]-(gFishCosts[listitem] / 10) > 0) {
				gBusiness[id][bizzProduct] -= gFishCosts[listitem] / 10;
				bizz_pay(id,gFishCosts[listitem]*gBusiness[id][bizzPrice]);
			} 
			show_fish(playerid);
		}
		case D_BIZZ_BAR: {
		    if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gBarCosts[listitem] * 10 * gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			GiveMoney(playerid, -price,"покупка в баре");
			if(gBusiness[id][bizzProduct] - (gBarCosts[listitem]) > 0){
				gBusiness[id][bizzProduct] -= gBarCosts[listitem];
				bizz_pay(id,price);
			} 
			if(listitem == 0) SetPlayerSpecialAction(playerid, 22);
			else SetPlayerSpecialAction(playerid, 20);
		}
		case D_BIZZ_COMP: {
		    if(!response) return 1;
			if(GetPVarInt(playerid,"comp_game") > unix) return ErrorMessage(playerid,"У Вас уже куплен билет");
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gCompCosts[listitem] * gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			GiveMoney(playerid, -price,"покупка в комп клубе");
			bizz_pay(id,price);
			switch(listitem) {
				case 0: {
					SendUse(playerid,"Поздравляем с приобретением игрового времени [30 мин] в клубе");
					SetPVarInt(playerid,"comp_game",unix+1800);
				}
				case 1: {
					SendUse(playerid,"Поздравляем с приобретением игрового времени [1 час] в клубе");
					SetPVarInt(playerid,"comp_game",unix+3600);
				}
				case 2: {
					SendUse(playerid,"Поздравляем с приобретением игрового времени [2 часа] в клубе");
					SetPVarInt(playerid,"comp_game",unix+7200);
				}
				case 3: {
					SendUse(playerid,"Поздравляем с приобретением игрового времени [3 часа] в клубе");
					SetPVarInt(playerid,"comp_game",unix+10800);
				}
			}
		}
  		case D_BIZZ_TAVERN: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			new price = gTavernCosts[listitem] * gBusiness[id][bizzPrice] * 10;
			if(id < 0) return 1;
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			new amount = gTavernCosts[listitem];
			if(gBusiness[id][bizzProduct] -amount > 0) {
				gBusiness[id][bizzProduct]-= amount;
				bizz_pay(id,price);
			}
			if(PI[playerid][pSatiety] >= 100) return ErrorMessage(playerid,"Вы не голодны");
			GiveMoney(playerid, -price,"покупка в закусочной");	
			new name[32],string[64];
			switch(listitem) {
				case 0: {
					strcat(name,"салат");
					GiveFullness(playerid, 25);
				}
				case 1: {
					strcat(name,"наггетсы");
					GiveFullness(playerid, 35);
				}
				case 2: {
					strcat(name,"бургер");
					GiveFullness(playerid, 45);
				}
				case 3: {
					strcat(name,"пиццу");
					GiveFullness(playerid, 55);
				}
			}
			format(string,sizeof(string),"съел(а) %s", name);
			MeAction(playerid,string);
			ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
			show_tavern(playerid,id);
		}
		case D_BOOK: {
			if(!response) return 1;
			SetPVarInt(playerid,"select_idphone",listitem);
			if(PI[playerid][pPhoneNumber][listitem] == 0) return D(playerid, D_BOOK_2, DSI, ""P"Новый контакт", ""W"Введите номер телефона:", "Далее", "Отмена");
			D(playerid, D_BOOK_3, DSL, ""P"Телефонная книга", ""P"1."W" Позвонить\n"P"2."W" Написать сообщение\n"P"3."W" Удалить контакт", "Выбрать", "Отмена");
			return 1;
		}
		case D_BOOK_2: {
			if(!response) return DeletePVar(playerid,"select_idphone");
			if(isNumeric(inputtext) || strlen(inputtext) != 6) {
				D(playerid,D_BOOK_2,DSI, ""P"Новый контакт",""W"Введите номер телефона:\n\n"NO"*"G" Номер должен состоять из 6 цифр","Далее","Отмена");
				return 1;
			}
			new number = strval(inputtext);
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				//new bool:isnumber = false;
				if(!TI[i][tLogin]) continue;
				if(PI[i][pPhone] == number) {
					//isnumber = true;
					new id = GetPVarInt(playerid,"select_idphone");
					PI[playerid][pPhoneNumber][id] = number;
					strmid(pPhoneName[playerid][id],player_name[i],0,strlen(player_name[i]),MAX_PLAYER_NAME);
					SavePlayerNumber(playerid);
					SendOk(playerid,"Контакт успешно добавлен");
					break;
				}	
				//if(!isnumber) return D(playerid,D_BOOK_2,DSI, ""P"Новый контакт",""W"Введите номер телефона:\n\n"NO"*"G" Номер не найден/игрок оффлайн","Далее","Отмена");
			}
		}
		case D_BOOK_3: {
			if(!response) return 1;
			new id = GetPVarInt(playerid,"select_idphone");
			switch(listitem) {
				case 0: {
					new string[24];
					format(string, sizeof(string), "%i",PI[playerid][pPhoneNumber][id]);
					pc_cmd_call(playerid,string);
				}
				case 1: D(playerid,D_BOOK_4,DSI, ""P"Сообщение",""W"Введите текст СМС сообщения:\nПримечание: Длинна текста от 1 до 120 символов","Далее","Закрыть");
				case 2: {
					PI[playerid][pPhoneNumber][id] = 0;
					strmid(pPhoneName[playerid][id], "Нет", 0, strlen("Нет"), MAX_PLAYER_NAME);
					SavePlayerNumber(playerid);
					SendOk(playerid,"Контакт успешно удалён");
					pc_cmd_book(playerid);
				}
			}
		}
		case D_BOOK_4: {
			if(!response) return 1;
			if(NonSym(inputtext,120,1)) return D(playerid,D_BOOK_4,DSI, ""P"Сообщение",""W"Введите текст СМС сообщения:\n\n"NO"*"G" Запрещены некорректные символы","Далее","Закрыть");
			if(strlen(inputtext) < 1 || strlen(inputtext) > 120) return D(playerid,D_BOOK_4,DSI, ""P"Сообщение",""W"Введите текст СМС сообщения:\n\n"NO"*"G" Длинна текста от 1 до 120 символов","Далее","Закрыть");
			new id = GetPVarInt(playerid,"select_idphone");
			new string[146];
			format(string, sizeof(string), "%i %s",PI[playerid][pPhoneNumber][id],inputtext);
			pc_cmd_sms(playerid,string);
			return 1;
		}
		case dBuyCarSalon: {
			if(!response) return true;
			if(TI[playerid][tSelectedBusinessID] < 0) return true;
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, GetPVarInt(playerid,"sellcarClass"), 82);
   			SetPlayerFacingAngle(playerid,182.0258);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);
			
			BuySalonStatus[playerid] = 0;
			BuySalonWorld[playerid] = GetPVarInt(playerid,"sellcarClass");
		}
		case D_ARENDA: {
		    if(!response) return RemovePlayerFromVehicleAC(playerid),DeletePVar(playerid,"SelectPlane");
			if(lic[playerid][1] < 1) return ErrorMessage(playerid,"У Вас нет лицензии на воздушный транспорт"),RemovePlayerFromVehicleAC(playerid),DeletePVar(playerid,"SelectPlane");
			new ID = GetPVarInt(playerid,"SelectPlane");
			DeletePVar(playerid,"SelectPlane");
			new price = gAirs[gAirplanes[ID][aAirport]-1][airCoast] * gAirplanes[ID][aPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно средств для аренды"),RemovePlayerFromVehicleAC(playerid),DeletePVar(playerid,"SelectPlane");
			new plane = -1;
			for(new i=1;i<=gPlaneCount;i++) {
				if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
			}
			if(plane != -1) return ErrorMessage(playerid,"Вы уже арендуете воздушный транспорт"), RemovePlayerFromVehicleAC(playerid);
			strmid(gAirplanes[ID][aOwner],player_name[playerid], 0, strlen(player_name[playerid]), 24);
			gAirplanes[ID][aTime] = unix + 86400 * 10;
			SavePlane(ID);
			gAirs[gAirplanes[ID][aAirport]-1][airBank] += price;
			GiveMoney(playerid,-price,"оплата аренды самолета");
			UpdateAirportData(gAirplanes[ID][aAirport],"bank",gAirs[gAirplanes[ID][aAirport]-1][airBank]);
			new str[64];
			format(str, sizeof(str),"Арендатор - "O"%s", gAirplanes[ID][aOwner]);
			UpdateDynamic3DTextLabelText(gAirplanes[ID][aText],-1,str);
			D(playerid,DIALOG_NONE,DSM, ""P"Аренда",""GREEN"Поздравляем с арендой воздушного транспорта!\n\n"W"Срок аренды: "P"10 дней\n"W"Открыть/закрыть воздушный транспорт: "P"/lock 2\n\
												"W"Отказаться от аренды воздушного транспорта: "P"/norent","Хорошо","");
		}
		case D_HOUSE: {
			if(!response) return true;
			new houseid = TI[playerid][tSelectHouse];
			if(GetString(gHouses[houseid][houseOwner], "None"))
			{
				if(PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас уже есть дом");
				if(PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас уже есть номер в отеле");
				new string[128];
				format(string,sizeof(string),""W"Вы действительно хотите купить этот дом за "GREEN"$%d?",gHouses[houseid][housePrice]);
				D(playerid, D_HOUSE_BUY, DSM, ""P"Покупка дома",string,"Да","Нет");
			}
			else {
				if(PI[playerid][pHouse] != houseid && gHouses[houseid][houseClose]) return GameTextForPlayer(playerid,"~r~closed",2000,1);
				SetPlayerPosAC(playerid, hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],
					hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2], houseid, hinterior_info[gHouses[houseid][houseHint]][h_interior]);
					
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				TI[playerid][tInHouse] = true;
			}
		}
		case D_HOUSE_BUY: {
			if(!response) return true;
			new houseid = TI[playerid][tSelectHouse];
			if(GetString(gHouses[houseid][houseOwner], "None"))
			{
				new price = gHouses[houseid][housePrice];
				if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег на руках");
				UpdatePlayerData(playerid,"house",gHouses[houseid][houseID]);
				gHouses[houseid][houseOwnerID] = PI[playerid][pID];
				format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",player_name[playerid]);
				PI[playerid][pHouse] = gHouses[houseid][houseID];
				
				gHouses[houseid][houseDay] = unix + 60*60*24;

				SaveHouse(houseid);

				SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили дом. Не забывайте оплачивать его, иначе его продадут государству!");
				SendClientMessage(playerid,CGOLD,"Панель управления домом: "W"/house");
				PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
				SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
				GiveMoney(playerid,-price,"покупка дома");
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
				PI[playerid][pSpawn] = 1;
				loading_cars(playerid,0);
			}
		}
		case D_HOUSE_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"houseSeller")) {
					new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
					SendOk(playerid,"Вы отказались от покупки дома");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего дома");
					DeletePVar(playerid,"houseSeller");
					DeletePVar(playerid,"housePrices");
					DeletePVar(id_prodaet,"houseBuyer");
				}
			}
			else {
				if(GetPVarInt(playerid,"houseSeller")) {
					new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"houseBuyer")-1;
					new house_price = GetPVarInt(playerid,"housePrices");
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < house_price) {
							ErrorMessage(playerid,"У Вас недостаточно денег на руках");
							ErrorMessage(id_prodaet,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"houseSeller");
							DeletePVar(playerid,"housePrices");
							DeletePVar(id_prodaet,"houseBuyer");
						}
						else {
							new houseid = GetPVarInt(playerid,"houseIDs");
							UpdatePlayerData(id_prodaet,"house",0);
							UpdatePlayerData(playerid,"house",houseid);

							if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #14");

							PI[playerid][pHouse] = houseid;
							PI[id_prodaet][pHouse] = 0;

							new string[156];
							format(string,64,"покупка дома у %s",player_name[id_prodaet]);
							GiveMoney(playerid,-house_price,string);
							string[0] = EOS;
							format(string,64,"продажа дома %s",player_name[playerid]);
							GiveMoney(id_prodaet,house_price,string);

							gHouses[houseid][houseOwnerID] = PI[playerid][pID];
							format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",player_name[playerid]);
							strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
							strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
							strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);
							gHouses[houseid][houseHabitID][0] = 0;
							gHouses[houseid][houseHabitID][1] = 0;
							gHouses[houseid][houseHabitID][2] = 0;
							gHouses[houseid][houseFamily] = 0;
							gHouses[houseid][houseSkin][0] = PI[playerid][pSkin];
							SendOk(playerid,"Ваш скин помещен в шкаф купленного вами дома");
							UpdateHouseDress(houseid);
							if(PI[id_prodaet][pMember] && !start_work[id_prodaet]) {
								A_SetPlayerSkin(id_prodaet,PI[id_prodaet][pFracSkin]);
								SendOk(id_prodaet,"Рабочий день начат");
								TI[playerid][tMasked] = 0;
								SetPlayerColor(id_prodaet,gFractionSpawn[PI[id_prodaet][pMember]][fracColor]);
								start_work[id_prodaet] = 1;
								PI[id_prodaet][pJob] = 0;
							}
							if(gHouses[houseid][houseImprove][2] == 1) {
								loading_cars(playerid,0);
								loading_cars(playerid,1);
							}
							else loading_cars(playerid,0);
							if(house_car[id_prodaet][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[id_prodaet][0]),house_car[id_prodaet][0] = INVALID_VEHICLE_ID;
							if(house_car[id_prodaet][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[id_prodaet][1]),house_car[id_prodaet][1] = INVALID_VEHICLE_ID;
							gHouses[houseid][houseSkin][0] = 0;
							gHouses[houseid][houseSkin][1] = 0;
							gHouses[houseid][houseSkin][2] = 0;
							
							SaveHouse(houseid);

							format(string,sizeof(string),"Вы приобрели дом у "P"%s"G" за "ORANGE"$%i",player_name[id_prodaet],house_price);
							SendUse(playerid,string);
							SendOk(playerid,"Панель управления домом - "ORANGE"/house");
							format(string,sizeof(string),"Вы продали дом "P"%s"G" за "ORANGE"$%i",player_name[playerid],house_price);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"houseSeller");
							DeletePVar(playerid,"housePrices");
							DeletePVar(id_prodaet,"houseBuyer");
						}
					}
					else {
						ErrorMessage(playerid,"Игрок оффлайн");
						DeletePVar(playerid,"houseSeller");
						DeletePVar(playerid,"housePrices");
					}
				}
			}
		}
		case D_HOUSE_SELL: {
			if(!response) return true;
			if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
			new houseid = PI[playerid][pHouse];
			UpdatePlayerData(playerid,"house",0);
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #1");
			PI[playerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);	

			arendaor_closed(houseid);

			strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);			
			strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++) {
				if(PI[playerid][pMember] && !start_work[playerid]) {
					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SendOk(playerid,"Рабочий день начат");
					TI[playerid][tMasked] = 0;
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					start_work[playerid] = 1;
					PI[playerid][pJob] = 0;
				}
				if(i < 3) gHouses[houseid][houseImprove][i] = 0,gHouses[houseid][houseSkin][i] = 0;
				gHouses[houseid][houseGun][i] = 0;
			}
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseHealth] = 0;
			gHouses[houseid][houseProducts] = 0;
			gHouses[houseid][houseFamily] = 0;
			GiveMoney(playerid,floatround(gHouses[houseid][housePrice]/100*80),"продажа дома");
			
			SaveHouse(houseid);

			FI[fWHITEHOUSE][fBank] += floatround(gHouses[houseid][housePrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);	
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			SendOk(playerid,"Дом успешно продан государству!");
			if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
		case D_HOUSE_MENU: {
			if(!response) return true;
			new houseid = PI[playerid][pHouse];
			switch(listitem) {
				case 0:{					
					if(!gHouses[houseid][houseClose]) {
						gHouses[houseid][houseClose] = 1;
						GameTextForPlayer(playerid,"~r~closed",2000,3);
					}
					else {
						gHouses[houseid][houseClose] = 0;
						GameTextForPlayer(playerid,"~g~opened",2000,3);
					}
					SaveHouse(houseid);
					return pc_cmd_house(playerid);
				}
				case 1: {
					new classname[20],status[12];
					switch(gHouses[houseid][houseClass]) {
						case 0:classname = "Эконом";
						case 1:classname = "Cредний";
						case 2:classname = "Элитный";
						case 3:classname = "Особняк";
						default: classname = "Неизвестно";
					}					
					new cnt;
					for(new i;i<3;i++) {
						if(gHouses[houseid][houseHabitID][i]) cnt++;
					}					
					if(gHouses[houseid][houseClose]) strcat(status,"Закрыт");
					else strcat(status,"Открыт");
					new improve[128];
					if(gHouses[houseid][houseImprove][0]) strcat(improve,"1. Автоматические двери\n");
					if(gHouses[houseid][houseImprove][1]) strcat(improve,"2. Снижение субсидий\n");
					if(gHouses[houseid][houseImprove][2]) strcat(improve,"3. Гараж\n");
					if(gHouses[houseid][houseImprove][0] == 0 && gHouses[houseid][houseImprove][1] == 0 && gHouses[houseid][houseImprove][2] == 0) strcat(improve,"Отсутствуют");

					new day;
					day = (gHouses[houseid][houseDay]-gettime())/86400;
					static const f_str[] = ""W"Номер дома: \t\t"ORANGE"%d\n\
											"W"Класс: \t\t\t"ORANGE"%s\n\
											"W"К-во жильцов: \t"ORANGE"%d/%d\n\
											"W"Аренда дома: \t\t"ORANGE"%iд\n\
											"W"Статус: \t\t"ORANGE"%s\n\
											"W"Гос. цена: \t\t"ORANGE"%d\n\n\
											"W"Улучшения:\n\
											"ORANGE"%s";
					new string[512];
					format(string,sizeof(string),f_str,houseid,classname,cnt,gHouses[houseid][houseClass],day,status,gHouses[houseid][housePrice],improve);
					return D(playerid,D_HOUSE_STATS,DSM, ""P"Управление домом",string,"Назад","");
				}
				case 2: {
					new mes[210];
					for(new i;i<3;i++) {
						new c[12];
						if(gHouses[houseid][houseImprove][i]) c = ""GREEN"";
						else if(!i || gHouses[houseid][houseImprove][i-1]) c = ""W"";
						else c = ""G"";
						if(!i) format(mes,sizeof(mes),"%s%d. %s",c,i+1,gHouseImproveName[i]);
						else format(mes,sizeof(mes),"%s\n%s%d. %s",mes,c,i+1,gHouseImproveName[i]);
					}
					return D(playerid,D_HOUSE_IMPROVE,DSL,""P"Управление домом",mes,"Купить","Отмена");
				}
				case 3: {
					if(gHouses[houseid][houseClass] == 0) return ErrorMessage(playerid,"Недоступно для класса Вашего дома");
					new string[512];
					string = "№\tАрендатор\tСтатус\n";
					for(new i = 0; i < 3; i++) {
						switch(gHouses[houseid][houseClass]) {
							case 1: if(i > 0) break;
							case 2: if(i > 1) break;
						}
						if(!strcmp(gHouseArendator[houseid][i],"None")) {
							format(string,sizeof(string),"%s%i\tОтсутствует\tСвободно\n", string,i+1);
						}
						else format(string,sizeof(string),"%s%i\t%s\tЗанято\n",string,i+1,gHouseArendator[houseid][i]);
					}
					D(playerid,dArendator,DSTH,"Управление жителями",string,"Выбрать","Закрыть");
				}
				case 4: {
					new hint = gHouses[houseid][houseHint];
					new Float:x, Float:y, Float:z;
					x = hinterior_info[hint][h_pos_exit][0];
					y = hinterior_info[hint][h_pos_exit][1];
					z = hinterior_info[hint][h_pos_exit][2];
					if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return ErrorMessage(playerid,"Необходимо находиться в своём доме");
					new mes[1024];
					format(mes,sizeof(mes),""P"1."W" Наркотики "P"[%d г.]\n"P"2."W" Аптечки "P"[%d шт.]\n"P"3."W" Деньги "P"[$%d]\n"P"4."W" Sniper Rifle "P"[%d пт.]\n"P"5."W" Country Rifle "P"[%d пт.]\n"P"6."W" M4 "P"[%d пт.]\n"P"7."W" AK-47 "P"[%d пт.]\n"P"8."W" MP5 "P"[%d пт.]\n"P"9."W" Shotgun "P"[%d пт.]\n"P"10."W" Desert Eagle "P"[%d пт.]\n"P"11."W" SD Pistol "P"[%d пт.]\n"P"12."W" Baseball Bat "P"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
					D(playerid,dSafeAction,DSL,"Сейф",mes,"Далее","Отмена");
				}
				case 5: {
					new hint = gHouses[houseid][houseHint];
					new Float:x, Float:y, Float:z;
					x = hinterior_info[hint][h_pos_exit][0];
					y = hinterior_info[hint][h_pos_exit][1];
					z = hinterior_info[hint][h_pos_exit][2];
					if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return ErrorMessage(playerid,"Необходимо находиться в своём доме");
					if(start_work[playerid]) return ErrorMessage(playerid,"Для начала нужно закончить рабочий день");
					new cnt;
					new mes2[128];
					for(new i;i<3;i++) {					
						if(gHouses[houseid][houseSkin][i]) format(mes2,sizeof(mes2),"%sОдежда %d\n",mes2,i+1);
						else continue;
						cnt++;
					}
					if(!cnt) return ErrorMessage(playerid,"Нет одежды в шкафу");
					D(playerid,dStoreSkin,DSL,"Шкаф",mes2,"Одеть","Отмена");
				}
				case 6: {
					new string[144];
					if(PI[playerid][pVips] != VIP_GOLD || PI[playerid][pVips] != VIP_PLATINA || PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
						format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
					}
					else {
						format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]"W" - "ORANGE"$500\n"W"2. Автомобиль №2 "P"[%s]"W" - "ORANGE"$500",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
					}
				}
				case 7: pc_cmd_sellcar(playerid);
				case 8: {
					new hint = gHouses[houseid][houseHint];
					new Float:x, Float:y, Float:z;
					x = hinterior_info[hint][h_pos_exit][0];
					y = hinterior_info[hint][h_pos_exit][1];
					z = hinterior_info[hint][h_pos_exit][2];
					if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return ErrorMessage(playerid,"Необходимо находиться в своём доме");
					new string[2000],str[128],id = 1;
					string = ""P"№. Название\n";
					for(new i; i < 42; i++) {
						if(hinterior_info[i][h_type] != gHouses[houseid][houseClass]) continue;
						format:str( ""P"%d."W" %s\n", id,hinterior_info[i][h_int_name]);
						strcat(string, str);
						id++;
					}
					D(playerid, D_HOUSE_BUYINT, DIALOG_STYLE_TABLIST_HEADERS, ""P"Покупка интерьера", string, "Осмотреть", "Назад");
				}
				case 9: {
					EnableGPSForPlayer(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
					SendOk(playerid,"Местоположение Вашего дома отмечено в GPS");
				}
				case 10: pc_cmd_sellhouse(playerid,"");
			}
		}
		case D_HOUSE_BUYINT: {
			if(!response) return 1;
			new houseid = PI[playerid][pHouse];
			for(new i; i < 42; i++) {
				if(hinterior_info[i][h_type] != gHouses[houseid][houseClass]) continue;
				if(hinterior_info[i][h_id] == listitem) {
					SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], houseid, hinterior_info[i][h_interior]);
					SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
					SetCameraBehindPlayer(playerid);
					SendOk(playerid,"Для покупки данного интерьера, введите: "P"/buyint"G" и нажмите на пункт 'Купить'");
					SendOk(playerid,"Для отмены покупки данного интерьера, введите: "P"/buyint"G" и нажмите на пункт 'Отмена'");
					SetPVarInt(playerid,"buy_interior",listitem+1);
					break;
				}
			}
		}
		case D_HOUSE_BUYINT_2: {
			if(!response) {
				new house = PI[playerid][pHouse];
				new i = gHouses[house][houseHint];
				SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], house, hinterior_info[i][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "buy_interior");
				return 1;
			}
			new house = PI[playerid][pHouse];
			for(new x; x < 42; x++) {
				if(hinterior_info[x][h_type] != gHouses[house][houseClass]) continue;
				if(hinterior_info[x][h_id] == GetPVarInt(playerid,"buy_interior")-1) {
					if(PI[playerid][pCash] < 150000) return ErrorMessage(playerid,"У Вас недостаточно средств");
					GiveMoney(playerid,-150000,"покупка интерьера");
					gHouses[house][houseHint] = x;
					SaveHouse(house);

					new i = gHouses[house][houseHint];
					SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], house, hinterior_info[i][h_interior]);
					SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
					SetCameraBehindPlayer(playerid);
					SendOk(playerid,"Поздравляем с покупкой нового интерьера!");
					DeletePVar(playerid,"buy_interior");
					break;
				}
			}
			Streamer_Update(playerid);
		}
		case D_HOUSE_EXIT: {
			if(!response) return 1;
			new houseid = TI[playerid][tSelectHouse];
			switch(listitem) {
				case 0: {
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ], 0, 0);
					SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
					TI[playerid][tInHouse] = false;
					SetCameraBehindPlayer(playerid);
				}
				case 1: {
					SetPlayerPosAC(playerid, exitgarage[gHouses[houseid][houseClass]][0],exitgarage[gHouses[houseid][houseClass]][1],
						exitgarage[gHouses[houseid][houseClass]][2], TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
						
					SetPlayerFacingAngle(playerid,exitgarage[gHouses[houseid][houseClass]][3]);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
		case D_HOUSE_CARSELL: {
			if(!response) return 1;
			if(GetPVarInt(playerid,"carPokupaet")) return ErrorMessage(playerid,"У Вас активный обмен Т/С с игроком");
			new modelid = gPlayerCars[playerid][carModel][listitem] - 400;
			new Float:factor;
			factor = 0.8;
			new price = floatround(gTransport[modelid][trPrice]*factor);
			SetPVarInt(playerid,"car_sell",listitem);
			new string[144];
			format(string,sizeof(string),""W"Вы собираетесь продать свой автомобиль "P"%s "W"за "GREEN"$%i\n\n"NO"Продать автомобиль?",gTransport[gPlayerCars[playerid][carModel][listitem]-400][trName],price);
			return D(playerid,D_HOUSE_CARSELL_2,DSM, ""P"Продажа автомобиля",string, "Да", "Нет");
		}
		case D_HOUSE_CARSELL_2: {
			if(!response) return pc_cmd_house(playerid);
			sell_cars(playerid,GetPVarInt(playerid,"car_sell"));
		}
		case D_FIXCAR:{
			if(!response) return 1;
			if(theftplayer[playerid][0] != 1010) { //угон
				if(theftIDveh[theftplayer[playerid][0]][2] == listitem) return ErrorMessage(playerid, "Ваша машина в угоне");
			}
			if(PI[playerid][pVips] == VIP_NONE || PI[playerid][pVips] == VIP_KING || PI[playerid][pVips] == VIP_BAZE || PI[playerid][pVips] == VIP_SILVER) {
				if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостаточно средств");
				GiveMoney(playerid,-500,"Доставка ТС к дому");
			}
			loading_cars(playerid, listitem);
			SendOk(playerid,"Автомобиль успешно доставлен");
		}
		case D_HOUSE_STATS: pc_cmd_house(playerid);
		case D_HOUSE_IMPROVE: {
			if(!response) return pc_cmd_house(playerid);
			new houseid = PI[playerid][pHouse];
			if(gHouses[houseid][houseImprove][listitem]) {
				ErrorMessage(playerid,"У Вас уже установлено данное улучшение");
				pc_cmd_house(playerid);
			}
			else if((!listitem && !gHouses[houseid][houseImprove][listitem]) || (gHouses[houseid][houseImprove][listitem-1] && !gHouses[houseid][houseImprove][listitem])) {	
				new mes[128];
				new price;
				switch(gHouses[PI[playerid][pHouse]][houseClass]) {
					case 0: {
						if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceN[listitem]/100*vip_status[PI[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceN[listitem]-seller);
						}
						else {
							if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceN[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceN[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceN[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceN[listitem]-seller);
							}
						    else price = gHouseImprovePriceN[listitem];
						}
						format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],price);
					}
					case 1: {
						if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceD[listitem]/100*vip_status[PI[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceD[listitem]-seller);
						}
						else {
							if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceD[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceD[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceD[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceD[listitem]-seller);
							}
						    else price = gHouseImprovePriceD[listitem];
						}
						format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],price);
					}
					case 2: {
						if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceB[listitem]/100*vip_status[PI[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceD[listitem]-seller);
						}
						else {
							if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceB[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceB[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceB[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceB[listitem]-seller);
							}
						    else price = gHouseImprovePriceB[listitem];
						}
						format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],price);
					}
					case 3: {
						if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceA[listitem]/100*vip_status[PI[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceD[listitem]-seller);
						}
						else {
							if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceA[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceA[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceA[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceA[listitem]-seller);
							}
						    else price = gHouseImprovePriceA[listitem];
						}
						format(mes, sizeof(mes),""W"Улучшение: "O"%s\n"W"Стоимость "GREEN"$%d",gHouseImproveName[listitem],price);
					}
				}
				SetPVarInt(playerid,"improveid_price",price);
				D(playerid,D_HOUSE_IMPROVE_2,DSM, ""P"Покупка улучшений",mes,"Купить","Отмена");
				SetPVarInt(playerid,"improveid",listitem);
			}
			else {
				ErrorMessage(playerid,"Это улучшение Вам недоступно. Откройте улучшения выше");
				pc_cmd_house(playerid);
			}
		}
		case D_HOUSE_IMPROVE_2: {
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return pc_cmd_house(playerid);
			new price = GetPVarInt(playerid,"improveid_price");
			DeletePVar(playerid,"improveid_price");
			if(GetPlayerMoneyEx(playerid) < price) {
				pc_cmd_house(playerid);
				return ErrorMessage(playerid,"У Вас недостаточно денег");
			}
			new houseid = PI[playerid][pHouse];
			gHouses[houseid][houseImprove][improveid] = 1;
			if(improveid == 2) loading_cars(playerid,1);
			new data[32];
			for(new i;i<3;i++) {
				if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseImprove][i]);
				else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseImprove][i]);
			}
			SaveHouse(houseid);
			GiveMoney(playerid, -price,"покупка улучшения в дом");
			SendOk(playerid,"Поздравляем с приобретением улучшения в дом");
			pc_cmd_house(playerid);
		}
		case dStoreSkin: {
			if(!response) return 1;
			new skin,id;
			new mes2[128];
			new houseid = PI[playerid][pHouse];
			sscanf(inputtext,"{s[100]}i",id);			
			skin = gHouses[houseid][houseSkin][id-1];
			PI[playerid][pSkin] = skin;
			UpdatePlayerData(playerid, "Skin", skin);
			A_SetPlayerSkin(playerid,skin);
			new cnt;
			for(new i;i<3;i++) {
				if(gHouses[houseid][houseSkin][i]) format(mes2,sizeof(mes2),"%sОдежда %d\n",mes2,i+1);
				else continue;
				cnt ++;
			}
			if(!cnt) {
				ErrorMessage(playerid,"Нет одежды в шкафу");
				return D(playerid,dStore,2,"Шкаф","Выбрать одежду","Далее","Отмена");
			}
			D(playerid,dStoreSkin,2,"Шкаф",mes2,"Одеть","Отмена");
		}
		case dSafe: {
			if(!response) return true;
			D(playerid,dSafePutMoney,DSI,""P"Сейф","\n\n"W"Введите количество:\n\n","Ввод","Отмена");
			SetPVarInt(playerid,"safe_idx",listitem+1);
		}
		case dSafeAction: {
			if(!response) return 1;
			SetPVarInt(playerid,"safe_select",listitem+1);
			D(playerid,dSafe,DSL,""P"Сейф",""P"1."W" Взять\n"P"2."W" Положить","Далее","Отмена");
		}
		case dSafePutMoney: {
			if(!response) return 1;
			if(!strlen(inputtext) || strval(inputtext) < 1) return D(playerid,dSafePutMoney,DSI,""P"Сейф","\n\n"W"Введите количество:\n\n","Ввод","Отмена");
			new i = GetPVarInt(playerid,"safe_select")-1;
			new houseid = PI[playerid][pHouse];
			new money = strval(inputtext);
			if(GetPVarInt(playerid,"safe_idx") == 1) {
				switch(i) {
					case 0: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 наркотиков\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseDrugs] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно наркотиков в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						if(PI[playerid][pDrugs] + money > vip_status[PI[playerid][pVips]][vip_drugs]) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите взять из сейфа:\n\n"NO"*"G" В карман поместится слишком много наркотиков\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseDrugs] -= money;
						
						SaveHouse(houseid);
						
						PI[playerid][pDrugs] += money;
						MeAction(playerid,"взял(а) наркотики из сейфа");
					}
					case 1: {
						if(money < 1 || money > 20) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 20 аптечек\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseHealth] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно аптечек в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						if(PI[playerid][pMedKit] + money > vip_status[PI[playerid][pVips]][vip_heal]) {
							new string[160];
							format(string,sizeof(string),"\n\n"W"Укажите к-во аптечек, которое Вы хотите взять из сейфа:\n\n"NO"*"G" В карман поместится не больше %d аптечек\n\n",vip_status[PI[playerid][pVips]][vip_heal]);
							D(playerid,dSafePutMoney,DSI, ""P"Сейф",string,"Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseHealth] -= money;
						SaveHouse(houseid);
						PI[playerid][pMedKit] += money;
						UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
						MeAction(playerid,"взял(а) аптечки из сейфа");
					}
					case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите взять из сейфа:\n\n"NO"*"G" Сумма должна быть от $1 до $1.000.000\n\n","Взять","Отмена");
							return 1;
						}
						if(money > gHouses[houseid][houseSafeMoney]) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите взять из сейфа:\n\n"NO"*"G" В сейфе недостаточно средств\n\n","Взять","Отмена");
							return 1;
						}
						//if(gHouses[houseid][houseSafeMoney]+money > 5000000) return ErrorMessage(playerid,"Нельзя хранить более $5.000.000");
						gHouses[houseid][houseSafeMoney] -= money;
						SaveHouse(houseid);
						GiveMoney(playerid, money,"взял(а) деньги с сейфа");
						MeAction(playerid,"взял(а) деньги с сейфа");
					}
					case 3: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][0] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Sniper Rifle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][0] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 34, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 4: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][1] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Country Rifle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][1] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 33, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 5: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][2] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон M4 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][2] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 31, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 6: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][3] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон AK-47 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][3] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 30, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 7: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][4] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон MP5 в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][4] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 29, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 8: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][5] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Shotgun в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][5] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 25, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 9: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][6] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон Desert Eagle в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][6] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 24, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 10: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите взять из сейфа:\n\n"NO"*"G" От 1 до 500 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][7] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите взять из сейфа:\n\n"NO"*"G" Недостаточно патрон SD Pistol в сейфе\n\n","Взять","Отмена");
							return 1;
						}
						gHouses[houseid][houseGun][7] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 23, money);
						MeAction(playerid,"взял(а) патроны из сейфа");
					}
					case 11: {
						if(gHouses[houseid][houseGun][8] < 1) return ErrorMessage(playerid,"Недостаточно Baseball Bat в сейфе");
						gHouses[houseid][houseGun][8] -= money;
						SaveHouse(houseid);
						AC_GivePlayerWeapon(playerid, 5, money);
						MeAction(playerid,"взял(а) Baseball Bat из сейфа");
					}
				}
			}
			else if(GetPVarInt(playerid,"safe_idx") == 2) {
				switch(i) {
					case 0: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 500 наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(PI[playerid][pDrugs] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseDrugs]+money > 1000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во наркотиков, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 1000г наркотиков\n\n","Положить","Отмена");
							return 1;
						}
						gHouses[houseid][houseDrugs] += money;
						SaveHouse(houseid);
						PI[playerid][pDrugs] -= money;
						MeAction(playerid,"положил(а) наркотики в сейф");
					}
					case 1: {
						if(money < 1 || money > 20) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 20 аптечек\n\n","Положить","Отмена");
							return 1;
						}
						if(PI[playerid][pMedKit] < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно аптечек\n\n","Положить","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseHealth]+money > 500) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во аптечек, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 500 аптечек\n\n","Положить","Отмена");
							return 1;
						}
						gHouses[houseid][houseHealth] += money;
						SaveHouse(houseid);
						PI[playerid][pMedKit] -= money;
						UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
						MeAction(playerid,"положил(а) аптечки в сейф");
					}
					case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Сумма должна быть от $1 до $1.000.000\n\n","Положить","Отмена");
							return 1;
						}
						if(GetPlayerMoneyEx(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Недостаточно средств\n\n","Положить","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseSafeMoney]+money > 10000000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите сумму, которую хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более $10.000.000\n\n","Положить","Отмена");
							return 1;
						}
						gHouses[houseid][houseSafeMoney] += money;
						SaveHouse(houseid);
						GiveMoney(playerid, -money,"положил(а) деньги в сейф");
						MeAction(playerid,"положил(а) деньги в сейф");
					}
					case 3: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 34 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][0]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Sniper Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 34, -money);
						gHouses[houseid][houseGun][0] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 4: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 33 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][1]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Country Rifle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 33, -money);
						gHouses[houseid][houseGun][1] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 5: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][2]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон M4, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 31, -money);
						gHouses[houseid][houseGun][2] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 6: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][3]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон AK-47, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 30, -money);
						gHouses[houseid][houseGun][3] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 7: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 29 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][4]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон MP5, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 29, -money);
						gHouses[houseid][houseGun][4] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 8: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][5]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Shotgun, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 25, -money);
						gHouses[houseid][houseGun][5] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 9: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][6]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон Desert Eagle, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 24, -money);
						gHouses[houseid][houseGun][6] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 10: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" От 1 до 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 23 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" Недостаточно патрон\n\n","Взять","Отмена");
							return 1;
						}
						if(gHouses[houseid][houseGun][7]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""P"Сейф","\n\n"W"Укажите к-во патрон SD Pistol, которое Вы хотите положить в сейф:\n\n"NO"*"G" Нельзя хранить в сейфе более 5000 патрон\n\n","Взять","Отмена");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 23, -money);
						gHouses[houseid][houseGun][7] += money;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) патроны в сейф");
					}
					case 11: {
						if(GetPlayerWeapon(playerid) != 5 || GetPlayerAmmo(playerid) < money) return ErrorMessage(playerid,"Недостаточно Baseball Bat");
						if(gHouses[houseid][houseGun][7]+money > 1) return ErrorMessage(playerid,"Нельзя хранить в сейфе более 1 Baseball Bat");
						AC_GivePlayerWeapon(playerid, 5, -1);
						gHouses[houseid][houseGun][8] += 1;
						SaveHouse(houseid);
						MeAction(playerid,"положил(а) Baseball Bat в сейф");
					}
				}
			}
		}
		case dArendator: {
			if(!response) return pc_cmd_house(playerid);
			new house = PI[playerid][pHouse];
			if(!strcmp(gHouseArendator[house][listitem],"None")) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n","Ввод","Закрыть");
			}
			else D(playerid,dZhitelSettings,DSL,""P"Жители","Выселить жителя","Выбрать","Закрыть");
			SetPVarInt(playerid,"arenda_listitem",listitem+1);
			return 1;
		}
		case dZhitelSettings: {
			if(!response) return 1;
			new house = PI[playerid][pHouse];
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;
			new string[128];
			format(string, sizeof(string), "Вы выселили жителя из комнаты "ORANGE"№%i", id_rent+1);
			SendUse(playerid,string);
			new bool:check_online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!strcmp(gHouseArendator[house][id_rent],player_name[i])) {
					PI[i][pTempKey] = 0;
					UpdatePlayerData(i,"tempkey",0);
					SendOk(i,"Владелец выселил Вас из дома");
					check_online = true;
					break;
				}
			}
			if(!check_online) {
				new query[128];
				format(query,sizeof(query),"UPDATE `accounts` SET `tempkey` = '0' WHERE `Name` = '%s' LIMIT 1",gHouseArendator[house][id_rent]);
				mysql_tquery(connects, query, "", "");
			}
			strmid(gHouseArendator[house][id_rent],"None",0,strlen("None"),MAX_PLAYER_NAME);
			SaveHouse(house);
			return 1;
		}
		case dArendatorAction: {
			if(!response) return 1;
			new house = PI[playerid][pHouse];
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;

			if(isNumeric(inputtext) || !strval(inputtext)) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" Произошла ошибка при вводе ID. Попробуйте заного\n\n","Ввод","Закрыть");
				return 1;
			}
			if(!PlayerToPoint(5,playerid,gHouses[house][houseX], gHouses[house][houseY], gHouses[house][houseZ])) return ErrorMessage(playerid, "Необходимо находиться рядом со своим домом");
			if(!IsPlayerConnected(strval(inputtext)) && !TI[strval(inputtext)][tLogin]) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" Данный игрок не авторизован на сервере\n\n","Ввод","Закрыть");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtext))) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" Игрок далеко от Вас\n\n","Ввод","Закрыть");
				return 1;
			}
			if(PI[strval(inputtext)][pTempKey] || PI[strval(inputtext)][pHouse] || PI[strval(inputtext)][pRoom]) {
				D(playerid,dArendatorAction,DSI, ""P"Жители","\n\n"W"Введите ID игрока, которого хотите подеслить в дом:\n\n"NO"*"G" У игрока уже есть дом/номер в отеле/подселен в одном из домов\n\n","Ввод","Закрыть");
				return 1;
			}
			PI[strval(inputtext)][pTempKey] = house;
			UpdatePlayerData(strval(inputtext),"tempkey",PI[strval(inputtext)][pTempKey]);
			PI[strval(inputtext)][pSpawn] = 1;
			UpdatePlayerData(strval(inputtext),"spawn",PI[strval(inputtext)][pSpawn]);
			SendUse(strval(inputtext),"Вас прописали в доме, используйте: "ORANGE"/house");
			SetString(gHouseArendator[house][id_rent],player_name[strval(inputtext)]);
			new string[144];
			format(string,sizeof(string),"Вы добавили нового жителя: "P"%s "G"в комнату "ORANGE"№%i",gHouseArendator[house][id_rent],id_rent+1);
			SendUse(playerid,string);
			SaveHouse(house);
			return 1;
		}
		case dRentMenu: {
			if(!response) return 1;
			new tempkey = PI[playerid][pTempKey];
			for(new i; i < 3; i++) {
				if(!strcmp(gHouseArendator[tempkey][i],player_name[playerid])) {
					strmid(gHouseArendator[tempkey][i],"None",0,strlen("None"),MAX_PLAYER_NAME);
					break;
				}
			}
			SendOk(playerid,"Вы выселились из дома");
			PI[playerid][pTempKey] = 0;
			UpdatePlayerData(playerid,"tempkey",0);
	
			SaveHouse(tempkey);
			return 1;
		}
		case D_HOTEL: {
			if(!response) return 1;
			switch(listitem) {
				case 0: ShowHotelRooms(playerid);
				case 1: D(playerid,D_HOTEL_OWNER,DSL,""P"Отель",""P"1."W" Баланс отеля\n"P"2."W" Снять деньги\n"P"3."W" Статистика отеля\n"P"4."W" Установить цену за сутки проживания\n"P"5."NO" Продать отель","Выбрать","Отмена");
			}
		}
		case D_HOTEL_OWNER: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[64];
					format(string,sizeof(string),""W"В кассе: "GREEN"$%d",gHotels[PI[playerid][pHotel]-1][hotelBank]);
					D(playerid,DIALOG_NONE,DSM, ""P"Касса",string,"Хорошо","");
				}
				case 1: D(playerid,D_HOTEL_BANK,DSI, ""P"Отель",""W"Введите сумму, которую хотите взять с кассы отеля:","Взять","Отмена");
				case 2: ShowHotelInformation(playerid,PI[playerid][pHotel]-1,DIALOG_NONE);
				case 3: D(playerid,D_HOTEL_PRICE,DSI, ""P"Отель",""W"Введите цену за сутки проживания\nПримечание: от "GREEN"$400"W" до "GREEN"$1000","ОК","Отмена");
				case 4: {
					static const f_str[] = ""W"Вы хотите продать отель государству за "GREEN"$%d?\n\n"G"Для продажи отеля игроку введите: /sellhotel [ID игрока] [Сумма]";
					new string[sizeof(f_str) +1 + (-2 + 8)];
					format(string,sizeof(string),f_str,floatround(gHotels[PI[playerid][pHotel]-1][hotelPrice]/100*80));
					D(playerid,D_HOTEL_SELL,DSM, ""P"Отель",string,"Продать","Отмена");
				}
			}
		}
		case D_HOTEL_BANK: {
			if(!response) return 1;
			if(!PI[playerid][pHotel]) return 1;
			new id = PI[playerid][pHotel]-1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 500000) return D(playerid,D_HOTEL_BANK,DSI, ""P"Отель",""W"Введите сумму, которую хотите взять с кассы отеля:\n\n"NO"*"G" От $1 до $500000","Взять","Отмена");
			if(gHotels[id][hotelBank] < sum) return D(playerid,D_HOTEL_BANK,DSI, ""P"Отель",""W"Введите сумму, которую хотите взять с кассы отеля:\n\n"NO"*"G" В кассе недостаточно средств","Взять","Отмена");	
			if(UpdateHotelData(id,"bank",gHotels[id][hotelBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #30");
			gHotels[id][hotelBank] -= sum;
			UpdateHotelData(id+1,"bank",gHotels[id][hotelBank]);
			GiveMoney(playerid,sum,"прибыль с отеля");
			
			new string[128];
			format(string,sizeof(string),"Вы взяли с кассы отеля: "ORANGE"$%d",sum);
			SendUse(playerid,string);
		}
		case D_HOTEL_PRICE: {
			if(!response) return 1;
			new id = PI[playerid][pHotel] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 400 || price > 1000) return D(playerid,D_HOTEL_PRICE,DSI, ""P"Отель",""W"Введите цену за сутки проживания\n\n"NO"*"G" От $400 до $1000","ОК","Отмена");
			gHotels[id][hotelCoast] = price;
			UpdateHotelData(id+1,"coast",price);
			UpdateHotelText(id);
			new string[128];
			format(string,sizeof(string),"Цена за сутки проживания установлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
		}
		case D_HOTEL_SELL: {
			if(!response) return 1;
			if(PI[playerid][pHotel] < 1) return ErrorMessage(playerid,"У Вас нет отеля");
			new id = PI[playerid][pHotel] - 1;
			new sum = floatround(gHotels[id][hotelPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gHotels[id][hotelPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(UpdateHotelData(id+1,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #29");
			gHotels[id][hotelOwnerID] = 0;
			SetString(gHotels[id][hotelOwner],"");
			new query[256];
			format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '0', `owner` = '' ,`bank` = '0',`bankday` = '0' WHERE `id` = '%d'",id+1);
			mysql_tquery(connects, query,"","");
			UpdateHotelText(id);
			PI[playerid][pHotel] = 0;
			UpdatePlayerData(playerid,"hotelid",0);
			GiveMoney(playerid,sum,"продажа отеля");
			SendOk(playerid,"Отель продан государству");
		}
		case D_HOTEL_BUY:
		{
		    new otelid = GetPVarInt(playerid,"selectedhotel");
		    
			if(response)
			{
				if(PI[playerid][pHotel]) return ErrorMessage(playerid,"У Вас уже есть отель");
			
				if(GetPlayerMoneyEx(playerid) < gHotels[otelid][hotelPrice]) return ErrorMessage(playerid,"У Вас недостаточно денег");
				gHotels[otelid][hotelDay] = unix + 60*60*24;
				new query[172];

				format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '%d', `owner` = '%s', `day` = '%d' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],gHotels[otelid][hotelDay],otelid+1);
				mysql_tquery(connects, query,"","");
				GiveMoney(playerid,-gHotels[otelid][hotelPrice],"покупка отеля");
				gHotels[otelid][hotelOwnerID] = PI[playerid][pID];
				format(gHotels[otelid][hotelOwner],24,"%s",player_name[playerid]);

				UpdateHotelText(otelid);

				PI[playerid][pHotel] = otelid+1;
				UpdatePlayerData(playerid,"hotelid",PI[playerid][pHotel]);

				SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили отель. Не забывайте оплачивать его, иначе его продадут государству!");
				return 1;
			}
			else
			{
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, 725.0227, 594.9494, 1002.9598, otelid, 79);
				SetPlayerFacingAngle(playerid, 360.0);
				SetCameraBehindPlayer(playerid);
				gHotels[otelid][hotelVisitors]++;
				UpdateHotelData(otelid+1,"visitors",gHotels[otelid][hotelVisitors]);
				OnPlayerUpdateLoadingMode(playerid);
			}
		}
		case D_HOTEL_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"hotelProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"hotelPokupaet")-1;
					SendOk(playerid,"Вы отказались от покупки отеля");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего отеля");
					DeletePVar(playerid,"hotelProdaet");
					DeletePVar(playerid,"hotelCena");
					DeletePVar(id_pokupaet,"hotelPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"hotelProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"hotelPokupaet")-1;
					new hotel_cena = GetPVarInt(playerid,"hotelCena");
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < hotel_cena) {
							ErrorMessage(playerid,"У Вас недостаточно денег на руках");
							ErrorMessage(id_prodaet,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"hotelProdaet");
							DeletePVar(playerid,"hotelCena");
							DeletePVar(id_pokupaet,"hotelPokupaet");
						}
						else {
							new string[128];
							format(string,64,"покупка отеля у %s",player_name[id_prodaet]);
							GiveMoney(playerid,-hotel_cena,string);
							string[0] = EOS;
							format(string,64,"продажа отеля %s",player_name[playerid]);
							GiveMoney(id_prodaet,hotel_cena,string);
							PI[playerid][pHotel] = PI[id_prodaet][pHotel];
							PI[id_prodaet][pHotel] = 0;
							UpdatePlayerData(id_prodaet,"hotelid",0);
							UpdatePlayerData(playerid,"hotelid",PI[playerid][pHotel]);
							strmid(gHotels[PI[playerid][pHotel]-1][hotelOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							new query[256];
							format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],PI[playerid][pHotel]);
							mysql_tquery(connects, query);
							new bizid = PI[playerid][pHotel]-1;
							UpdateHotelText(bizid);

							format(string,sizeof(string),"Вы приобрели отель у "P"%s"G" за "ORANGE"$%i",player_name[id_prodaet],hotel_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Вы продали отель "P"%s"G" за "ORANGE"$%i",player_name[playerid],hotel_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"hotelProdaet");
							DeletePVar(playerid,"hotelCena");
							DeletePVar(id_pokupaet,"hotelPokupaet");
						}
					}
					else {
						ErrorMessage(playerid,"Игрок оффлайн");
						DeletePVar(playerid,"hotelProdaet");
						DeletePVar(playerid,"hotelCena");
					}
				}
			}
		}
		case D_HOTEL_RECEPTION: {
		    if(!response) return 1;
			if(PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас уже есть дом");
			new hotel = GetPVarInt(playerid,"select_room") + listitem;
			SetPVarInt(playerid,"select_room",hotel);
			SetPVarInt(playerid,"select_room_1",listitem);
			
			if(GetString(gRooms[hotel][roomsOwner], "None")) {
				if(PI[playerid][pRoom] == 0) {
					new price;
					if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*vip_status[PI[playerid][pVips]][vip_hotel]);
						price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
					}
					else {
						if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
					    else price = gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast];
					}

					static const f_str[] = ""W"Вы действительно хотите арендовать номер в отеле на 1 день за "GREEN"$%d?";
					new string[sizeof(f_str) +1 + (-2 + 4)];
					format(string, sizeof(string), f_str,price);
					D(playerid, D_HOTEL_ROOM_BUY, DSM, ""P"Отель", string, "Арендовать", "Отмена");
				}
				else ErrorMessage(playerid, "Вы уже арендуете номер в отеле");
			}
			else {
				if(GetString(gRooms[hotel][roomsOwner], player_name[playerid])) {
					D(playerid, D_HOTEL_RECEPTION_2, DSL, ""P"Отель", ""P"1."W" Информация\n"P"2."W" Продлить аренду\n"P"3."W" Отказаться от аренды\n"P"4."W" Автопарк", "Выбрать", "Отмена");
				}
				else ErrorMessage(playerid, "Номер занят");
			}
		}
		case D_HOTEL_ROOM_BUY: {
		    if(response) {
				if(PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас уже есть дом");
				new otel = GetPVarInt(playerid,"selectedhotel");
				new room = GetPVarInt(playerid,"select_room");
	            if(!GetString(gRooms[room][roomsOwner], "None")) return ErrorMessage(playerid,"Выбранный номер уже арендован");

	            if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
	            	new seller = floatround(gHotels[otel][hotelCoast]/100*vip_status[PI[playerid][pVips]][vip_hotel]);
					if(GetPlayerMoneyEx(playerid) < (gHotels[otel][hotelCoast]-seller)) return ErrorMessage(playerid,"Недостаточно денег для аренды");
					GiveMoney(playerid,-(gHotels[otel][hotelCoast]-seller),"аренда номера отель");
	            }
	            else {
		            if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(gHotels[otel][hotelCoast]/100*BonusInfo[act_renthotel]);
						if(GetPlayerMoneyEx(playerid) < (gHotels[otel][hotelCoast]-seller)) return ErrorMessage(playerid,"Недостаточно денег для аренды");
						GiveMoney(playerid,-(gHotels[otel][hotelCoast]-seller),"аренда номера отель");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(gHotels[otel][hotelCoast]/100*BonusInfo[act_renthotel]);
						if(GetPlayerMoneyEx(playerid) < (gHotels[otel][hotelCoast]-seller)) return ErrorMessage(playerid,"Недостаточно денег для аренды");
						GiveMoney(playerid,-(gHotels[otel][hotelCoast]-seller),"аренда номера отель");
					}
				    else {
				    	if(GetPlayerMoneyEx(playerid) < gHotels[otel][hotelCoast]) return ErrorMessage(playerid,"Недостаточно денег для аренды");
				    	GiveMoney(playerid,-gHotels[otel][hotelCoast],"аренда номера отель");
				    }
				}

				SetString(gRooms[room][roomsOwner], player_name[playerid]);

				gRooms[room][roomsDay] = unix + 60*60*24;
				
				updateroom(room+1);

				new query[256];
				format(query,sizeof(query),"UPDATE `rooms` SET `owner` = '%s',`day` = '%d' WHERE `id` = '%d'",player_name[playerid],gRooms[room][roomsDay],gRooms[room][roomsID]);
				mysql_tquery(connects, query);

				UpdatePlayerData(playerid,"hotelroom",room+1);
				PI[playerid][pRoom] = gRooms[room][roomsID];
				PI[playerid][pSpawn] = 1;
				new room_lift;
				switch(GetPVarInt(playerid,"select_room_1")) {
					case 0..9: room_lift = 2;
					case 10..19: room_lift = 3;
					case 20..29: room_lift = 4;
					case 30..39: room_lift = 5;
					case 40..49: room_lift = 6;
					case 50..59: room_lift = 7;
				}
				new string[330];
				format(string,sizeof(string),""W"Добро пожаловать в отель: "P"%s\n\n\
											 "W"Ваш номер: "O"%d"W" успешно забронирован на "O"1"W" день.\n\
											 Находится он на "O"%d "W"этаже.\n\
											 Наш дворецкий уже отнёс Ваши вещи в номер.\n\n\
											 "GREEN"Приятного отдыха!",gHotels[GetPVarInt(playerid,"selectedhotel")][hotelName], GetPVarInt(playerid,"select_room_1")+1,room_lift);
				D(playerid,DIALOG_NONE,DSM, ""P"Отель",string,"Закрыть","");

				gHotels[otel][hotelBank] += gHotels[otel][hotelCoast];
				gHotels[otel][hotelBankDay] += gHotels[otel][hotelCoast];
				SaveHotels(otel);
				
				loading_cars(playerid,0);
				DeletePVar(playerid,"select_room_1");
		    }
			else ShowHotelRooms(playerid);
		}
		case D_HOTEL_RECEPTION_2: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new day;
					day = (gRooms[PI[playerid][pRoom]-1][roomsDay]-gettime())/86400;

					new string[128];
					format(string,sizeof(string),"Отель:\t"O"%s\n\
												Оплачено на:\t"O"%iд",gHotels[GetPVarInt(playerid,"selectedhotel")][hotelName],day);
					D(playerid,DIALOG_NONE,DST,"Информация",string,"Хорошо","");
				}
				case 1: {
					new price;
					if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*vip_status[PI[playerid][pVips]][vip_hotel]);
						price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
					}
					else {
						if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
					    else price = gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast];
					}

					static const f_str[] = ""W"Введите кол-во дней на которое хотите продлить аренду за номер:\nСтоимость за день аренды: "GREEN"$%d";
					new string[sizeof(f_str) +1 + (-2 + 5)];
					format(string,sizeof(string),f_str,price);
					D(playerid,D_HOTEL_OPLATA,DSI, ""P"Оплата номера",string,"Оплатить","Отмена");
				}
				case 2: D(playerid,D_HOTEL_NORENT,DSM, ""P"Отказ от номера","\n\n"W"Вы действительно хотите отказаться от аренды номера?\n\n","Да","Отмена");
				case 3: {
					new string[144];
					if(PI[playerid][pVips] != VIP_GOLD || PI[playerid][pVips] != VIP_PLATINA || PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
						format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
					}
					else {
						format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]"W" - "ORANGE"$500\n"W"2. Автомобиль №2 "P"[%s]"W" - "ORANGE"$500",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
					}
				}
			}
		}
		case D_HOTEL_OPLATA: {
			if(!response) return 1;
			if(!PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет номера в отеле");
			new amount = strval(inputtext);
			new hotel = PI[playerid][pRoom] - 1;

			new price;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])/100*vip_status[PI[playerid][pVips]][vip_hotel]);
				price = ((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])/100*BonusInfo[act_renthotel]);
					price = ((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])/100*BonusInfo[act_renthotel]);
					price = ((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])-seller);
				}
			    else price = amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast];
			}

			new day;
			day = GetElapsedTime(gRooms[hotel][roomsDay], gettime(), CONVERT_TIME_TO_DAYS);
			if(amount < 1 || amount > 31) return D(playerid,D_HOTEL_OPLATA,DSI, ""P"Оплата номера",""W"Введите кол-во дней на которое хотите продлить аренду за номер:\n\n"NO"*"G" От 1 до 31 дней","Ок","Отмена");
			if(day + amount > 31) return D(playerid,D_HOTEL_OPLATA,DSI, ""P"Оплата номера",""W"Введите кол-во дней на которое хотите продлить аренду за номер:\n\n"NO"*"G" Максимальное кол-во оплаченных дней 31","Ок","Отмена");
			if(PI[playerid][pCash] < price) return D(playerid,D_HOTEL_OPLATA,DSI, ""P"Оплата номера",""W"Введите кол-во дней на которое хотите продлить аренду за номер:\n\n"NO"*"G" Недостаточно средств","Ок","Отмена");
			gRooms[hotel][roomsDay] += 86400 * amount;
			new query[128];
			format(query,sizeof(query),"UPDATE `rooms` SET `day` = '%d' WHERE id = '%d'",gRooms[hotel][roomsDay],hotel+1);
			mysql_tquery(connects, query,"","");

			gHotels[GetPVarInt(playerid,"selectedhotel")][hotelBank] += price;
			gHotels[GetPVarInt(playerid,"selectedhotel")][hotelBankDay] += price;
			SaveHotels(GetPVarInt(playerid,"selectedhotel"));
			
			updateroom(hotel+1);
			
			GiveMoney(playerid,-price,"аренда номера отель");

			static const f_str[] = ""W"Вы оплатили: "O"%d"W" дней. Снято средств: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,price);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата номера",string,"Хорошо","");
		}
		case D_HOTEL_NORENT: {
			if(!response) return ShowHotelRooms(playerid);
			if(PI[playerid][pRoom] != 0) {
				new hotel = PI[playerid][pRoom]-1;
				if(GetString(gRooms[hotel][roomsOwner],player_name[playerid])) SetString(gRooms[hotel][roomsOwner],"None");

				new query[256];
				format(query,sizeof(query),"UPDATE `rooms` SET `owner` = 'None' WHERE `id` = '%d'",gRooms[hotel][roomsID]);
				mysql_tquery(connects, query);

				PI[playerid][pRoom] = 0;
				UpdatePlayerData(playerid,"hotelroom",0);
				
				updateroom(hotel+1);
				
				SendOk(playerid,"Вы успешно отказались от аренды номера");

				if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
				else if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
			}
		}
		case D_HOTEL_LIFT_1:
		{
			if(!response) return 1;
			
			new otelid = GetPVarInt(playerid,"selectedhotel");
			
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 1275.9193,-774.3925,1202.7220, gHotels[otelid][hotelVW][listitem+1], 80);
			SetPlayerFacingAngle(playerid,7.0148);
			
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);
			
			updaterooms();
		}
		case D_HOTEL_LIFT_2:
		{
			if(!response) return 1;

			new otelid = GetPVarInt(playerid, "selectedhotel"), listit = listitem-1;
			
			if(listitem == 0)
			{
			    TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, 730.7416,599.5216,1002.9598, otelid, 79);
				SetPlayerFacingAngle(playerid,86.6257);
				
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
				
				updaterooms();
			}
			else
			{
			    TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, 1275.9193,-774.3925,1202.7220, gHotels[otelid][hotelVW][listit+1], 80);
				SetPlayerFacingAngle(playerid,7.0148);
				
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
				
				updaterooms();
			}
		}
		case D_AIRPORT: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[64];
					format(string,sizeof(string),""W"В кассе: "GREEN"$%d",gAirs[PI[playerid][pAirport]-1][airBank]);
					D(playerid,DIALOG_NONE,DSM, ""P"Касса",string,"Хорошо","");
				}
				case 1: D(playerid,D_AIRPORT_BANK,DSI, ""P"Аэропорт",""W"Введите сумму, которую хотите взять с кассы аэропорта:","Взять","Отмена");
				case 2: ShowAirportInformation(playerid,PI[playerid][pAirport]-1,DIALOG_NONE);
				case 3: D(playerid,D_AIRPORT_PRICE,DSI, ""P"Аэропорт",""W"Введите цену за аренду воздушной техники\nПримечание: от "GREEN"$120.000"W" до "GREEN"$170.000","ОК","Отмена");
				case 4: {
					static const f_str[] = ""W"Вы хотите продать аэропорт государству за "GREEN"$%d?\n\n"G"Для продажи аэропорта игроку введите: /sellairport [ID игрока] [Сумма]";
					new string[sizeof(f_str) +1 + (-2 + 8)];
					format(string,sizeof(string),f_str,floatround(gAirs[PI[playerid][pAirport]-1][airPrice]/100*80));
					D(playerid,D_AIRPORT_SELL,DSM, ""P"Аэропорт",string,"Продать","Отмена");
				}
			}
		}
		case D_AIRPORT_BANK: {
			if(!response) return 1;
			if(!PI[playerid][pAirport]) return 1;
			new id = PI[playerid][pAirport]-1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_AIRPORT_BANK,DSI, ""P"Аэропорт",""W"Введите сумму, которую хотите взять с кассы аэропорта:\n\n"NO"*"G" От $1 до $1.000.000","Взять","Отмена");
			if(gAirs[id][airBank] < sum) return D(playerid,D_AIRPORT_BANK,DSI, ""P"Аэропорт",""W"Введите сумму, которую хотите взять с кассы аэропорта:\n\n"NO"*"G" В кассе недостаточно средств","Взять","Отмена");	
			if(UpdateHotelData(id,"bank",gAirs[id][airBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #31");
			gAirs[id][airBank] -= sum;
			UpdateAirportData(id+1,"bank",gAirs[id][airBank]);
			GiveMoney(playerid,sum,"прибыль с аэропорта");
			
			new string[128];
			format(string,sizeof(string),"Вы взяли с кассы аэропорта: "ORANGE"$%d",sum);
			SendUse(playerid,string);
		}
		case D_AIRPORT_PRICE: {
			if(!response) return 1;
			new id = PI[playerid][pAirport] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 120000 || price > 170000) return D(playerid,D_AIRPORT_PRICE,DSI, ""P"Аэропорт",""W"Введите цену за аренду воздушной техники\n\n"NO"*"G" От $120.000 до $170.000","ОК","Отмена");
			gAirs[id][airCoast] = price;
			UpdateAirportData(id+1,"coast",price);
			UpdateAirportsText(id);
			new string[128];
			format(string,sizeof(string),"Цена за за аренду воздушной техники установлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
		}
		case D_AIRPORT_SELL: {
			if(!response) return 1;
			if(PI[playerid][pAirport] < 1) return ErrorMessage(playerid,"У Вас нет аэропорта");
			new id = PI[playerid][pAirport] - 1;
			new sum = floatround(gAirs[id][airPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gAirs[id][airPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(UpdateAirportData(id+1,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #32");
			gAirs[id][airOwnerID] = 0;
			SetString(gAirs[id][airOwner],"");
			new query[256];
			format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '0', `owner` = '' ,`bank` = '0',`bankday` = '0' WHERE `id` = '%d'",id+1);
			mysql_tquery(connects, query,"","");
			UpdateAirportsText(id);
			PI[playerid][pAirport] = 0;
			UpdatePlayerData(playerid,"airport",0);
			GiveMoney(playerid,sum,"продажа аэропорта");
			SendOk(playerid,"Аэропорт продан государству");
		}
		case D_AIRPORT_BUY: {
			if(!response) return DeletePVar(playerid,"selectedair");
			if(PI[playerid][pAirport]) return ErrorMessage(playerid,"Вы уже владеете одним из аэропортов");
			new airid = GetPVarInt(playerid,"selectedair");
			if(GetPlayerMoneyEx(playerid) < gAirs[airid][airPrice]) return ErrorMessage(playerid,"У Вас недостаточно денег");
			gAirs[airid][airDay] = unix + 60*60*24;

			new query[172];
			format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '%d', `owner` = '%s', `day` = '%d' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],gAirs[airid][airDay],airid+1);
			mysql_tquery(connects, query,"","");

			GiveMoney(playerid,-gAirs[airid][airPrice],"покупка аэропорта");
			gAirs[airid][airOwnerID] = PI[playerid][pID];
			format(gAirs[airid][airOwner],24,"%s",player_name[playerid]);

			UpdateAirportsText(airid);

			PI[playerid][pAirport] = airid+1;
			UpdatePlayerData(playerid,"airport",PI[playerid][pAirport]);

			SendClientMessage(playerid,CGOLD,"Поздравляем, Вы купили аэропорт. Не забывайте оплачивать его, иначе его продадут государству!");
			return 1;
		}
		case D_AIRPORT_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"airProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"airPokupaet")-1;
					SendOk(playerid,"Вы отказались от покупки аэропорта");
					SendOk(id_prodaet,"Игрок отказался от покупки Вашего аэропорта");
					DeletePVar(playerid,"airProdaet");
					DeletePVar(playerid,"airCena");
					DeletePVar(id_pokupaet,"airPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"airProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"airPokupaet")-1;
					new airport_cena = GetPVarInt(playerid,"airCena");
					if(id_pokupaet == playerid) {
						if(PI[playerid][pCash] < airport_cena) {
							ErrorMessage(playerid,"У Вас недостаточно денег на руках");
							ErrorMessage(id_prodaet,"У покупателя недостаточно денег на руках");
							DeletePVar(playerid,"airProdaet");
							DeletePVar(playerid,"airCena");
							DeletePVar(id_pokupaet,"airPokupaet");
						}
						else {
							GiveMoney(playerid,-airport_cena,"покупка аэропорта");
							GiveMoney(id_prodaet,airport_cena,"продажа аэропорта");
							PI[playerid][pAirport] = PI[id_prodaet][pAirport];
							PI[id_prodaet][pAirport] = 0;
							UpdatePlayerData(id_prodaet,"airport",0);
							UpdatePlayerData(playerid,"airport",PI[playerid][pAirport]);
							strmid(gAirs[PI[playerid][pAirport]-1][airOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							new query[256],string[128];
							format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PI[playerid][pID],player_name[playerid],PI[playerid][pAirport]);
							mysql_tquery(connects, query);
							UpdateAirportsText(PI[playerid][pAirport]-1);

							format(string,sizeof(string),"Вы приобрели аэропорт у "P"%s"G" за "ORANGE"$%i",player_name[id_prodaet],airport_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Вы продали аэропорт "P"%s"G" за "ORANGE"$%i",player_name[playerid],airport_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"airProdaet");
							DeletePVar(playerid,"airCena");
							DeletePVar(id_pokupaet,"airPokupaet");
						}
					}
					else {
						ErrorMessage(playerid,"Игрок оффлайн");
						DeletePVar(playerid,"airProdaet");
						DeletePVar(playerid,"airCena");
					}
				}
			}
		}
		case D_FAMILY_CREATE_2: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_FAMILY_CREATE_3,DSL, ""P"ТОП Семей",""P"1."W" По уровню\n"P"2."W" По EXP\n"P"3."W" По поинтам","Выбрать","Отмена");
				case 1: {
					if(PI[playerid][pFamily] > 0) return ErrorMessage(playerid,"Вы состоите в семье");
					D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Введите название семьи:\n\nСтоимость создания семьи стоит - "GREEN"500 RUB\n\n","Создать","Отмена");
				}
			}
		}
		case D_FAMILY_CREATE_3: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new name[44],rows;
					new lvl;
					new Cache:result = mysql_query(connects, "SELECT `name`,`lvl` FROM `family` ORDER BY `lvl` DESC LIMIT 5");
					rows = cache_num_rows();
					if(rows) {
						new string[300];
	       				string = ""P"№ Название семьи\t"P"Уровень\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "lvl",lvl);
							format(str, sizeof(str), f_str, i+1, name,lvl);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""P"Топ семей по уровню", string, "Закрыть", "");
					}
					cache_delete(result);
				}
				case 1: {
					new name[44],rows;
					new exp;
					new Cache:result = mysql_query(connects, "SELECT `name`,`exp` FROM `family` ORDER BY `exp` DESC LIMIT 5");
					rows = cache_num_rows();
					if(rows) {
						new string[300];
	       				string = ""P"№ Название семьи\t"P"EXP\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "exp",exp);
							format(str, sizeof(str), f_str, i+1, name,exp);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""P"Топ семей по EXP", string, "Закрыть", "");
					}
					cache_delete(result);
				}
				case 2: {
					new name[44],rows;
					new point;
					new Cache:result = mysql_query(connects, "SELECT `name`,`point` FROM `family` ORDER BY `point` DESC LIMIT 5");
					rows = cache_num_rows();
					if(rows) {
						new string[300];
	       				string = ""P"№ Название семьи\t"P"Поинты\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "point",point);
							format(str, sizeof(str), f_str, i+1, name,point);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""P"Топ семей по поинтам", string, "Закрыть", "");
					}
					cache_delete(result);
				}
			}
		}
		case D_FAMILY_CREATE: {
			if(!response) return 1;
			if(PI[playerid][pFamily] > 0) return ErrorMessage(playerid,"Вы состоите в семье");
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 30) {
			    D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Введите название семьи:\n\nСтоимость создания семьи стоит - "GREEN"500 RUB\n"NO"*"G" От 6 до 30 символов\n\n","Создать","Отмена");
				return true;
			}
			if(is_text_invalid(inputtext)) {
				D(playerid,D_FAMILY_CREATE,DSI, ""P"Создание семьи","\n\n"W"Введите название семьи:\n\nСтоимость создания семьи стоит - "GREEN"500 RUB\n"NO"*"G" Присутствуют запрещенные символы\n\n","Создать","Отмена");
				return true;
			}
			if(PI[playerid][pRouble] < 500) return ErrorMessage(playerid,"У Вас нет 500 RUB");
			if(TotalFamily >= FAMILY_COUNT) return ErrorMessage(playerid,"На сервере достигнут лимит семей");
			new query[128];
			format(query, sizeof(query), "SELECT * FROM family WHERE name = '%s'", inputtext);
			new Cache:result = mysql_query(connects, query);
			if(cache_num_rows()) {
				ErrorMessage(playerid, "Семья с таким именем уже существует");
				cache_delete(result);
				return 1;
			}
			cache_delete(result);

			strmid(gFamily[TotalFamily][famCName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			strmid(gFamily[TotalFamily][famName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			SetString(FamRanks[TotalFamily][0],"None");
			SetString(FamRanks[TotalFamily][1],"None");
			SetString(FamRanks[TotalFamily][2],"None");
			SetString(FamRanks[TotalFamily][3],"None");
			SetString(FamRanks[TotalFamily][4],"None");
			SetString(FamRanks[TotalFamily][5],"None");
			SetString(FamRanks[TotalFamily][6],"None");
			SetString(FamRanks[TotalFamily][7],"None");
			SetString(FamRanks[TotalFamily][8],"None");
			SetString(gFamily[TotalFamily][famMessage],"None");
			gFamily[TotalFamily][famInvRang] = gFamily[TotalFamily][famUninvRang] = gFamily[TotalFamily][famGiveRang] = 7;
			gFamily[TotalFamily][famLvl] = 1;
			new string[128];
			format(string,sizeof(string),"Поздравляем с созданием семьи - "ORANGE"%s",gFamily[TotalFamily][famCName]);
			SendUse(playerid,string);
			SendOk(playerid,"Управление семьей - "W"/fmenu");
			PI[playerid][pFamily] = TotalFamily + 1;
			UpdatePlayerData(playerid,"family",PI[playerid][pFamily]);
			PI[playerid][pFamRank] = 8;
			UpdatePlayerData(playerid,"pFamRank",8);
			strmid(gFamily[TotalFamily][famCOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
			strmid(gFamily[TotalFamily][famOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
			new querys[512];
			format(querys, sizeof(querys), "INSERT INTO `family`(`cname`,`name`,`time`,`cowner`,`owner`) VALUES ('%s','%s',NOW(),'%s','%s')",
				gFamily[TotalFamily][famCName],gFamily[TotalFamily][famName],gFamily[TotalFamily][famCOwner],gFamily[TotalFamily][famOwner]);
			mysql_tquery(connects, querys, "creategFamily", "i", TotalFamily);
			TotalFamily++;
			PI[playerid][pRouble] -= 500;
			UpdatePlayerData(playerid, "donatemoney", PI[playerid][pRouble]);
		}
		case D_FAMILY: {
			if(!response) return 1;
			new fam = PI[playerid][pFamily]-1;
			switch(listitem) {
				case 0: {
					new str[24];
					if(gFamily[fam][famHouse] && gHouses[gFamily[fam][famHouse]][houseFamily] == gFamily[fam][famHouse])
					{
						format(str,sizeof(str),"Дом №%d",gHouses[gFamily[fam][famHouse]][houseFamily]);
					}
					else str = "Отсутствует";
					
					static const f_str[] = "\t\t\t"W"Семья - "YELLOW"%s\n\n\
												"W"Основатель: \t\t\t"P"%s (%s)\n\
												"W"Дата основания: \t\t"P"%s\n\
												"W"Владелец: \t\t\t"P"%s\n\
												"W"Тип семьи: \t\t\t"P"%s\n\
												"W"Численность: \t\t\t"P"%d\n\n\
												"W"Уровень: \t\t\t"P"%d\n\
												"W"EXP: \t\t\t\t"P"%d/%d\n\
												"W"Поинты: \t\t\t"P"%d\n\n\
												"W"Деньги: \t\t\t"P"$%d / $%d\n\
												"W"Наркотики: \t\t\t"P"%d гр. / %d гр.\n\
												"W"Боеприпасы: \t\t\t"P"%d ед. / %d ед.\n\
												"W"Бронежилеты: \t\t"P"%d ед. / %d ед.\n\
												"W"Аптечки: \t\t\t"P"%d ед. / %d ед.\n\
												"W"Маски: \t\t\t"P"%d ед. / %d ед.\n\
												"W"Канистр с бензином: \t\t"P"%d ед. / %d ед.\n\
												"W"Ремкомплекты: \t\t"P"%d ед. / %d ед.\n\n\
												"W"Место жительства: \t\t"P"%s";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 24) + (-2 + 24) + (-2 + 24) + (-2 + 11) + (-2 + 11) + (-2 + 11) + (-2 + 11)];
					format(string,sizeof(string),f_str,
												gFamily[fam][famName],
												gFamily[fam][famCOwner],
												gFamily[fam][famCName],
												gFamily[fam][famDate],
												gFamily[fam][famOwner],
												(gFamily[fam][famType] == 0)?("Standart"):("Pro"),
												fam_members(fam+1),
												gFamily[fam][famLvl],
												gFamily[fam][famExp],
												fam_point_upgrade[gFamily[fam][famLvl]-1],
												gFamily[fam][famPoint],
												gFamily[fam][famMoney],
												FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],
												gFamily[fam][famDrugs],
												FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],
												gFamily[fam][famMats],
												FamilyMatsUpdate[gFamily[fam][famMatsMax]],
												gFamily[fam][famArmour],
												FamilyArmourUpdate[gFamily[fam][famArmourMax]],
												gFamily[fam][famHealth],
												FamilyHealthUpdate[gFamily[fam][famHealthMax]],
												gFamily[fam][famMask],
												FamilyMaskUpdate[gFamily[fam][famMaskMax]],
												gFamily[fam][famFuel],
												FamilyFuelUpdate[gFamily[fam][famFuelMax]],
												gFamily[fam][famRemp],
												FamilyRempUpdate[gFamily[fam][famRempMax]],
												str);
					return D(playerid,D_FAMILY_INFO,DSM, ""P"Информация",string,"Назад","");
				}
				case 1: {
					new count_family = 0,string[1512];
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(PI[i][pFamily] == PI[playerid][pFamily]) {
							format(string,sizeof(string),"%s"P"%i."W" %s\n",string,count_family+1,player_name[i]);
							count_family++;
						}
					}
					return D(playerid,D_FAMILY_INFO,DSL,""P"Семья online",string,"Назад","");
				}
				case 2: {
					new names[24],query[64],rows,string[1256],Level,bool:ids = false;
					FirstFamily[playerid] = 0;
				    format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `family` = '%d' LIMIT 20", PI[playerid][pFamily]);
   					new Cache:result = mysql_query(connects, query);
   					rows = cache_num_rows();
					for(new i; i < rows; i ++) {
						cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
						cache_get_value_name_int(i, "pLevel",Level);
						if(IsPlayerConnected(GetPlayerID(names))) continue;
						if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+1, names, Level);
						else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+1, names, Level);
						ids = true;
					}
					if(ids == true) D(playerid, D_FAMILY_OFFLINE, 0, "Семья offline", string, "Далее", "Назад");
					else ErrorMessage(playerid, "Список членов семьи offline пуст");
					cache_delete(result);
				}
				case 3: {
					static const f_str[] = "№ Наименование\tКоличество\n\
											1. Деньги\t$%d / $%d\n\
											2. Наркотики\t%d гр. / %d гр.\n\
											3. Боеприпасы\t%d ед. / %d ед.\n\
											4. Бронежилеты\t%d ед. / %d ед.\n\
											5. Аптечки\t%d ед. / %d ед.\n\
											6. Маски\t%d ед. / %d ед.\n\
											7. Канистр с бензином\t%d ед. / %d ед.\n\
											8. Ремкомплекты\t%d ед. / %d ед.";
					new string[sizeof(f_str) + 50];
					format(string,sizeof(string),f_str,
												gFamily[fam][famMoney],
												FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],
												gFamily[fam][famDrugs],
												FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],
												gFamily[fam][famMats],
												FamilyMatsUpdate[gFamily[fam][famMatsMax]],
												gFamily[fam][famArmour],
												FamilyArmourUpdate[gFamily[fam][famArmourMax]],
												gFamily[fam][famHealth],
												FamilyHealthUpdate[gFamily[fam][famHealthMax]],
												gFamily[fam][famMask],
												FamilyMaskUpdate[gFamily[fam][famMaskMax]],
												gFamily[fam][famFuel],
												FamilyFuelUpdate[gFamily[fam][famFuelMax]],
												gFamily[fam][famRemp],
												FamilyRempUpdate[gFamily[fam][famRempMax]]);
					return D(playerid,D_FAMILY_STORE,DSTH,"Сбережения",string,"Выбрать","Назад");
				}
				case 4: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return ErrorMessage(playerid,"Доступно только владельцу семьи");
					family_setting(playerid);
				}
				case 5: {
					if(GetString(gFamily[fam][famOwner],player_name[playerid])) return ErrorMessage(playerid,"Вы не можете покинуть семью, так как владелец");
					new string[128];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} покинул семью",player_name[playerid],FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
					PI[playerid][pFamily] = 0;
					UpdatePlayerData(playerid,"family",0);
					PI[playerid][pFamRank] = 0;
					UpdatePlayerData(playerid,"pFamRank",0);
				}
			}
		}
		case D_FAMILY_SET: {
			if(!response) return family_dialog(playerid);
			new fam = PI[playerid][pFamily]-1;
			if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return ErrorMessage(playerid,"Доступно только владельцу семьи");
			switch(listitem) {
				case 0..3: {
					new string[1256];
					for(new i = 1; i <= 8; i++) {
						new frac_rank_check = -1;
						if(listitem == 0) frac_rank_check = gFamily[fam][famInvRang];
						else if(listitem == 1) frac_rank_check = gFamily[fam][famUninvRang];
						else if(listitem == 2) frac_rank_check = gFamily[fam][famGiveRang];
						else if(listitem == 3) frac_rank_check = gFamily[fam][famSklad];
						if(frac_rank_check == -1) return true;
						format(string,sizeof(string),"%s%i. %s%s\n", string,i,(i == frac_rank_check)?(""P""):(""W""),GetFamName(fam,i));
					}
					SetPVarInt(playerid,"fam_rank", listitem);
					D(playerid,D_FAMILY_SET_RANK,DSL,""P"Выберите ранг",string,"Выбрать", "Закрыть");
				}
				case 4: {
					new string[1256];
					strcat(string, ""W"");
					for(new i = 1; i <= 8; i++) {
						format(string,sizeof(string),"%s%s\n",string,GetFamName(fam,i));
					}
					D(playerid,D_FAMILY_ERANK_1,DSL,""P"Выберите ранг",string,"Выбрать","Назад");
					return 1;
				}
				case 5: {
					new string[256];
					format(string,sizeof(string),"{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---",FamilyColor[0],
												FamilyColor[1],FamilyColor[2],FamilyColor[3],FamilyColor[4],FamilyColor[5],FamilyColor[6],FamilyColor[7],FamilyColor[8],FamilyColor[9],FamilyColor[10],FamilyColor[11],FamilyColor[12]);
					D(playerid,D_FAMILY_COLOR,DSL,""P"Изменение цвета",string,"Выбрать","Отмена");
				}
				case 6: D(playerid,D_FAMILY_NAME,DSI,""P"Изменение названия","\n\n"W"Введите новое название семьи:\n\n","Изменить","Назад");
				case 7: {
					static const f_str[] = "№ Наименование\tСостояние склада\tВместимость\tУровень улучшений\n\
											1. Деньги\t$%d\t%d\t%d/20\n\
											2. Наркотики\t%d гр.\t%d\t%d/20\n\
											3. Боеприпасы\t%d ед.\t%d\t%d/20\n\
											4. Бронежилеты\t%d ед.\t%d\t%d/20\n\
											5. Аптечки\t%d ед.\t%d\t%d/20\n\
											6. Маски\t%d ед.\t%d\t%d/20\n\
											7. Канистр с бензином\t%d ед.\t%d\t%d/20\n\
											8. Ремкомплекты\t%d ед.\t%d\t%d/20";
					new string[sizeof(f_str) + 70];
					format(string,sizeof(string),f_str,
						gFamily[fam][famMoney],
						FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],
						gFamily[fam][famMoneyMax]+1,
						gFamily[fam][famDrugs],
						FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],
						gFamily[fam][famDrugsMax]+1,
						gFamily[fam][famMats],
						FamilyMatsUpdate[gFamily[fam][famMatsMax]],
						gFamily[fam][famMatsMax]+1,
						gFamily[fam][famArmour],
						FamilyArmourUpdate[gFamily[fam][famArmourMax]],
						gFamily[fam][famArmourMax]+1,
						gFamily[fam][famHealth],
						FamilyHealthUpdate[gFamily[fam][famHealthMax]],
						gFamily[fam][famHealthMax]+1,
						gFamily[fam][famMask],
						FamilyMaskUpdate[gFamily[fam][famMaskMax]],
						gFamily[fam][famMaskMax]+1,
						gFamily[fam][famFuel],
						FamilyFuelUpdate[gFamily[fam][famFuelMax]],
						gFamily[fam][famFuelMax]+1,
						gFamily[fam][famRemp],
						FamilyRempUpdate[gFamily[fam][famRempMax]],
						gFamily[fam][famRempMax]+1);
					D(playerid,D_FAMILY_UPDATE,DIALOG_STYLE_TABLIST_HEADERS,""P"Улучшение склада",string,"Улучшить","Назад");
				}
				case 8: D(playerid,D_FAMILY_TEXT, DSI, ""P"Сообщение семье", "\n\n"W"Введите сообщение, которое будет показано членам Вашей семьи при входе:\nДля удаления сообщения введите: "ORANGE"None\n\n", "Ввод", "Отмена");
				case 9: {
					if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
					if(gHouses[PI[playerid][pHouse]][houseClass] != 3) return ErrorMessage(playerid,"Класс дома не соответствует классу 'ОСОБНЯК'");
					D(playerid,D_FAMILY_HOUSE,DSM,""P"Дом семьи","\n\n"W"Вы действительно хотите выбрать Ваш дом, спавном своей семьи?\n\n","Да","Отмена");
				}
			}
		}
		case D_FAMILY_TEXT: {
			if(!response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			new message[71];
			if(NonSym(inputtext,70,1)) return D(playerid,D_FAMILY_TEXT, DSI, ""P"Сообщение семье", "\n\n"W"Введите сообщение, которое будет показано членам Вашей семьи при входе:\nДля удаления сообщения введите: "ORANGE"None\n\n"NO"* "G"Запрещены некорректные символы\n\n", "Ввод", "Отмена");
			if(sscanf(inputtext,"s[70]",message)) return D(playerid,D_FAMILY_TEXT, DSI, ""P"Сообщение семье", "\n\n"W"Введите сообщение, которое будет показано членам Вашей семьи при входе:\nДля удаления сообщения введите: "ORANGE"None\n\n"NO"* "G"От 1 до 70 символов\n\n", "Ввод", "Отмена");
			strmid(gFamily[PI[playerid][pFamily]-1][famMessage],message,0,strlen(message),70);

			new query[350];
			format(query,sizeof(query),"UPDATE `family` SET message = '%s' WHERE `id` = '%d' LIMIT 1",gFamily[PI[playerid][pFamily]-1][famMessage],PI[playerid][pFamily]);
			mysql_tquery(connects,query);

			new string[128];
			format(string,sizeof(string),"Сообщение: "ORANGE"%s "G"успешно установлено",message);
			SendOk(playerid,string);
		}
		case D_FAMILY_HOUSE: {
			if(!response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
			if(gHouses[PI[playerid][pHouse]][houseClass] != 3) return ErrorMessage(playerid,"Класс дома не соответствует классу 'ОСОБНЯК'");
			gFamily[PI[playerid][pFamily]-1][famHouse] = PI[playerid][pHouse];
			UpdateFamily(PI[playerid][pFamily],"house",PI[playerid][pHouse]);
			gHouses[PI[playerid][pHouse]][houseFamily] = PI[playerid][pHouse];
			SaveHouse(PI[playerid][pHouse]);
			SendOk(playerid,"Дом семьи успешно выбран");
		}
		case D_FAMILY_UPDATE: {
			if(!response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PI[playerid][pFamily]-1;
			new max_upgrade = 19,lvl = -1;
			new name_upgrade[8][19] = {"денег","наркотиков","боеприпасов","бронежилетов","аптечек","масок","канистр с бензином","ремкомплектов"};
			switch(listitem) {
				case 0: {
					if(gFamily[fam][famMoneyMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famMoneyMax];
				}
				case 1: {
					if(gFamily[fam][famDrugsMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famDrugsMax];
				}
				case 2: {
					if(gFamily[fam][famMatsMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famMatsMax];
				}
				case 3: {
					if(gFamily[fam][famArmourMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famArmourMax];
				}
				case 4: {
					if(gFamily[fam][famHealthMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famHealthMax];
				}
				case 5: {
					if(gFamily[fam][famMaskMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famMaskMax];
				}
				case 6: {
					if(gFamily[fam][famFuelMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famFuelMax];
				}
				case 7: {
					if(gFamily[fam][famRempMax] == max_upgrade) return ErrorMessage(playerid,"Данный склад достиг максимального уровня");
					lvl = gFamily[fam][famRempMax];
				}
			}
			if(gFamily[fam][famLvl] < lvl+2) return ErrorMessage(playerid,"Уровень семьи недостаточен");
			SetPVarInt(playerid, "fam_upgrade_stock", listitem);
			new string[144];
			format(string,sizeof(string),"\n\n"W"Вы действительно хотите улучшить склад "P"%s"W" до "P"%d"W" уровня за "ORANGE"%d"W" поинтов?",name_upgrade[listitem],lvl+2,fam_point_upgrade[lvl]);
			D(playerid,D_FAMILY_UPDATE_2,DSM,""P"Улучшение склада",string,"Улучшить","Отмена");
		}
		case D_FAMILY_UPDATE_2: {
			if(!response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PI[playerid][pFamily]-1;
			switch(GetPVarInt(playerid, "fam_upgrade_stock")) {
				case 0: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famMoneyMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famMoneyMax]];
					gFamily[fam][famMoneyMax]++;
					UpdateFamily(fam+1,"money_max",gFamily[fam][famMoneyMax]);
				}
				case 1: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famDrugsMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famDrugsMax]];
					gFamily[fam][famDrugsMax]++;
					UpdateFamily(fam+1,"drugs_max",gFamily[fam][famDrugsMax]);
				}
				case 2: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famMatsMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famMatsMax]];
					gFamily[fam][famMatsMax]++;
					UpdateFamily(fam+1,"mats_max",gFamily[fam][famMatsMax]);
				}
				case 3: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famArmourMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famArmourMax]];
					gFamily[fam][famArmourMax]++;
					UpdateFamily(fam+1,"armour_max",gFamily[fam][famArmourMax]);
				}
				case 4: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famHealthMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famHealthMax]];
					gFamily[fam][famHealthMax]++;
					UpdateFamily(fam+1,"health_max",gFamily[fam][famHealthMax]);
				}
				case 5: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famMaskMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famMaskMax]];
					gFamily[fam][famMaskMax]++;
					UpdateFamily(fam+1,"mask_max",gFamily[fam][famMaskMax]);
				}
				case 6: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famFuelMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famFuelMax]];
					gFamily[fam][famFuelMax]++;
					UpdateFamily(fam+1,"fuel_max",gFamily[fam][famFuelMax]);
				}
				case 7: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famRempMax]]) return ErrorMessage(playerid,"У Вашей семьи недостаточно поинтов");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famRempMax]];
					gFamily[fam][famRempMax]++;
					UpdateFamily(fam+1,"remp_max",gFamily[fam][famRempMax]);
				}
			}
			SendOk(playerid,"Склад успешно улучшен");
			UpdateFamily(fam+1,"point",gFamily[fam][famPoint]);
		}
		case D_FAM_RANK: {
			if(!response) return 1;
			if(listitem == -1) return 1;
			if(PI[playerid][pFamRank] <= listitem) return ErrorMessage(playerid, "Ваш ранг недостаточен");
			new rank_id = GetPVarInt(playerid,"id_fgiverank"),string[128];
			new fam = PI[playerid][pFamily]-1;
			format(string,sizeof(string),"Вы повысили/понизили "W"%s{%s} до ранга "W"%s",player_name[rank_id],FamilyColor[gFamily[fam][famColor]],GetFamName(fam,listitem+1));
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);

			format(string,sizeof(string),"Вас повысил/понизил "W"%s{%s} до ранга "W"%s",player_name[playerid],FamilyColor[gFamily[fam][famColor]],GetFamName(fam,listitem+1));
			SendClientMessage(rank_id,FamilyColorG[gFamily[fam][famColor]],string);

			PI[rank_id][pFamRank] = listitem + 1;
			UpdatePlayerData(rank_id,"pFamRank",PI[rank_id][pFamRank]);

			DeletePVar(playerid,"id_fgiverank");
			return 1;
		}
		case D_FAMILY_COLOR: {
			if(!response) return family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			new fam = PI[playerid][pFamily]-1;
			gFamily[fam][famColor] = listitem;
			UpdateFamily(fam+1,"color",listitem);

			new string[128];
			format(string,sizeof(string),"Вы успешно изменили цвет Вашей семье на - {%s}ЦВЕТ СЕМЬИ",FamilyColor[gFamily[fam][famColor]]);
			SendUse(playerid,string);

			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[playerid][pFamily] != PI[i][pFamily]) continue;
				new famtext[50];
				format(famtext,sizeof(famtext),"{%s}%s",FamilyColor[gFamily[PI[i][pFamily]-1][famColor]],gFamily[PI[i][pFamily]-1][famName]);
				UpdateDynamic3DTextLabelText(fam_lable[i], -1, famtext);
			}
			family_setting(playerid);
		}
		case D_FAMILY_SET_RANK: {
			if(!response) return DeletePVar(playerid,"fam_rank"),family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			new fam = PI[playerid][pFamily]-1;
			new select_listitem = GetPVarInt(playerid,"fam_rank");UpdateFamily(fam+1,"invite",listitem + 1);
			if(select_listitem == 0) gFamily[fam][famInvRang] = listitem + 1,UpdateFamily(fam+1,"invite",listitem + 1);
			else if(select_listitem == 1) gFamily[fam][famUninvRang] = listitem + 1,UpdateFamily(fam+1,"uninvite",listitem + 1);
			else if(select_listitem == 2) gFamily[fam][famGiveRang] = listitem + 1,UpdateFamily(fam+1,"giverank",listitem + 1);
			else if(select_listitem == 3) gFamily[fam][famSklad] = listitem + 1,UpdateFamily(fam+1,"sklad",listitem + 1);
			else return true;
			DeletePVar(playerid,"fam_rank");
			family_setting(playerid);
			return 1;
		}
		case D_FAMILY_ERANK_1: {
			if(!response) return family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			SetPVarInt(playerid,"edit_frank",listitem);
			D(playerid, D_FAMILY_ERANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n", "Изменить", "Отмена");
			return 1;
		}
		case D_FAMILY_ERANK_2: {
			if(!response) return family_dialog(playerid);
			if(!PI[playerid][pFamily]) return 1;
			new fam = PI[playerid][pFamily]-1;
			if(strlen(inputtext) <= 1 || strlen(inputtext) >= 24) return D(playerid, D_FAMILY_ERANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n"NO"*"G" От 2 и до 24 симолов\n\n", "Изменить", "Отмена");
			string_replace(inputtext, "'", ' ');
			new slot = GetPVarInt(playerid, "edit_frank");

			new string[128];
			format(string,sizeof(string),"Ранг №%d переименован с %s на %s",slot+1,GetFamName(fam,slot+1),inputtext);
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);

			strmid(FamRanks[fam][slot], inputtext, 0, strlen(inputtext));
			SavefRank(slot+1,fam);
			family_setting(playerid);
			return 1;
		}
		case D_FAMILY_INFO: {
  			if(response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
		}
		case D_FAMILY_NAME: {
			if(!response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 30) {
				D(playerid,D_FAMILY_NAME,DSI, ""P"Название","\n\n"W"Введите новое название семьи:\n\n","Изменить","Отмена");
				return true;
			}
			if(is_text_invalid(inputtext)) {
				D(playerid,D_FAMILY_NAME,DSI, ""P"Название","\n\n"W"Введите новое название семьи:\n"NO"*"G" Присутствуют запрещенные символы\n\n","Изменить","Отмена");
				return true;
			}
			new query[128];
			format(query, sizeof(query), "SELECT * FROM family WHERE name = '%s'", inputtext);
			new Cache:result = mysql_query(connects, query);
			if(cache_num_rows()) {
				ErrorMessage(playerid, "Семья с таким именем уже существует");
				cache_delete(result);
				return 1;
			}
			cache_delete(result);
			new fam = PI[playerid][pFamily]-1;
			strmid(gFamily[fam][famName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			query = "";
			format(query, sizeof(query), "UPDATE `family` SET name = '%s' WHERE id = '%d'", gFamily[fam][famName],gFamily[fam][famID]);
			mysql_tquery(connects, query, "","");

			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[playerid][pFamily] != PI[i][pFamily]) continue;
				new famtext[50];
				format(famtext,sizeof(famtext),"{%s}%s",FamilyColor[gFamily[PI[i][pFamily]-1][famColor]],gFamily[PI[i][pFamily]-1][famName]);
				UpdateDynamic3DTextLabelText(fam_lable[i], -1, famtext);
			}
			new string[128];
			format(string,sizeof(string),"Вы успешно изменили название Вашей семье на - "W"%s",gFamily[fam][famName]);
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);
			return 1;
		}
		case D_FAMILY_STORE: {
			if(!response) {
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			switch(listitem) {
				case 0: D(playerid,D_FAMILY_STORE_1,DSL,""P"Деньги",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 1: D(playerid,D_FAMILY_STORE_1,DSL,""P"Наркотики",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 2: D(playerid,D_FAMILY_STORE_1,DSL,""P"Боеприпасы",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 3: D(playerid,D_FAMILY_STORE_1,DSL,""P"Бронежилеты",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 4: D(playerid,D_FAMILY_STORE_1,DSL,""P"Аптечки",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 5: D(playerid,D_FAMILY_STORE_1,DSL,""P"Маски",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 6: D(playerid,D_FAMILY_STORE_1,DSL,""P"Канистры с бензином",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
				case 7: D(playerid,D_FAMILY_STORE_1,DSL,""P"Ремкомплекты",""P"1."W" Взять\n"P"2."W" Положить","Выбрать","Отмена");
			}
			SetPVarInt(playerid,"select_famscore",listitem);
		}
		case D_FAMILY_STORE_1: {
			if(!response) {
				DeletePVar(playerid,"select_famscore");
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PI[playerid][pFamily]-1;
			new name_upgrade[8][19] = {"денег","наркотиков","боеприпасов","бронежилетов","аптечек","масок","канистр с бензином","ремкомплектов"};
			new lvl,colvo,all_1,all_2;
			switch(GetPVarInt(playerid,"select_famscore")) {
				case 0: {
					colvo = gFamily[fam][famMoney];
					lvl = FamilyMoneyUpdate[gFamily[fam][famMoneyMax]];
					all_2 = PI[playerid][pCash];
				}
				case 1: {
					colvo = gFamily[fam][famDrugs];
					lvl = FamilyDrugsUpdate[gFamily[fam][famDrugsMax]];
					all_1 = vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs];
					all_2 = PI[playerid][pDrugs];
				}
				case 2: {
					colvo = gFamily[fam][famMats];
					lvl = FamilyMatsUpdate[gFamily[fam][famMatsMax]];
					all_1 = vip_status[PI[playerid][pVips]][vip_mats]-PI[playerid][pMats];
					all_2 = PI[playerid][pMats];
				}
				case 3: {
					colvo = gFamily[fam][famArmour];
					lvl = FamilyArmourUpdate[gFamily[fam][famArmourMax]];
				}
				case 4: {
					colvo = gFamily[fam][famHealth];
					lvl = FamilyHealthUpdate[gFamily[fam][famHealthMax]];
					all_1 = vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit];
					all_2 = PI[playerid][pMedKit];
				}
				case 5: {
					colvo = gFamily[fam][famMask];
					lvl = FamilyMaskUpdate[gFamily[fam][famMaskMax]];
					all_1 = vip_status[PI[playerid][pVips]][vip_mask]-PI[playerid][pMask];
					all_2 = PI[playerid][pMask];
				}
				case 6: {
					colvo = gFamily[fam][famFuel];
					lvl = FamilyFuelUpdate[gFamily[fam][famFuelMax]];
					all_1 = vip_status[PI[playerid][pVips]][vip_fuel]-PI[playerid][pFuel];
					all_2 = PI[playerid][pFuel];
				}
				case 7: {
					colvo = gFamily[fam][famRemp];
					lvl = FamilyRempUpdate[gFamily[fam][famRempMax]];
					all_1 = 5-PI[playerid][pInstrument];
					all_2 = PI[playerid][pInstrument];
				}
			}
			switch(listitem) {
				case 0: {
					if(gFamily[fam][famSklad] > PI[playerid][pFamRank]) return ErrorMessage(playerid,"Ваш ранг недостаточен");
					if(GetPVarInt(playerid,"select_famscore") != 0 && GetPVarInt(playerid,"select_famscore") != 3) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество "GREEN"%s"W", которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl,all_1);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					else {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество "GREEN"%s"W", которое хотите взять:\nСостояние склада: "P"%d / %d"W"\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
				} 
				case 1: {
					if(GetPVarInt(playerid,"select_famscore") != 3) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество "GREEN"%s"W", которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно %s: "P"%d\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl,name_upgrade[GetPVarInt(playerid,"select_famscore")],all_2);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					else {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество "GREEN"%s"W", которое хотите положить:\nСостояние склада: "P"%d / %d"W"\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
				}
			}
		}
		case D_FAMILY_STORE_2: {
			if(!response) {
				DeletePVar(playerid,"select_famscore");
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PI[playerid][pFamily]-1;
			if(gFamily[fam][famSklad] > PI[playerid][pFamRank]) return ErrorMessage(playerid,"Ваш ранг недостаточен");
			new col = strval(inputtext);
			switch(GetPVarInt(playerid,"select_famscore")) {
				case 0: {
					if(col < 1) {
						new string[170];
						format(string,sizeof(string),"\n\n"W"Введите количество денег, "W"которое хотите взять:\nСостояние склада: "P"%d / %d\n\n",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famMoney] < col) {
						new string[170];
						format(string,sizeof(string),"\n\n"W"Введите количество денег, "W"которое хотите взять:\nСостояние склада: "P"%d / %d\n\n"NO"*"G" На складе семьи недостаточно средств",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					gFamily[fam][famMoney] -= col;
					UpdateFamily(fam+1,"money",gFamily[fam][famMoney]);
					GiveMoney(playerid,col,"снял(а) со склада семьи");
					SendOk(playerid,"Вы взяли деньги со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} денег",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				} 
				case 1: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество наркотиков, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famDrugs] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество наркотиков, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" На складе семьи недостаточно наркотиков",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(PI[playerid][pDrugs]+ col > vip_status[PI[playerid][pVips]][vip_drugs]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество наркотиков, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" Вы не можете хранить у себя так много наркотиков",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					gFamily[fam][famDrugs] -= col;
					UpdateFamily(fam+1,"drugs",gFamily[fam][famDrugs]);
					PI[playerid][pDrugs] +=col;
					UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					SendOk(playerid,"Вы взяли наркотики со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} наркотиков",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				} 
				case 2: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество боеприпасов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],vip_status[PI[playerid][pVips]][vip_mats]-PI[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famMats] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество боеприпасов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" На складе семьи недостаточно боеприпасов",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],vip_status[PI[playerid][pVips]][vip_mats]-PI[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(PI[playerid][pMats]+ col > vip_status[PI[playerid][pVips]][vip_mats]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество боеприпасов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" Вы не можете хранить у себя так много боеприпасов",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],vip_status[PI[playerid][pVips]][vip_mats]-PI[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}

					gFamily[fam][famMats] -= col;
					UpdateFamily(fam+1,"mats",gFamily[fam][famMats]);
					PI[playerid][pMats] +=col;
					UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
					SendOk(playerid,"Вы взяли боеприпасы со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} боеприпасов",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 3: {
					if(col != 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество бронежилетов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d\n\n",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famArmour] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество бронежилетов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d\n\n"NO"*"G" На складе семьи недостаточно бронежилетов",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					SetPlayerArmour(playerid,100);
					gFamily[fam][famArmour] -= col;
					UpdateFamily(fam+1,"armour",gFamily[fam][famArmour]);
					SendOk(playerid,"Вы взяли бронежилет со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} бронежилет",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 4: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество аптечек, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famHealth] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество аптечек, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" На складе семьи недостаточно аптечек",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(PI[playerid][pMedKit]+ col > vip_status[PI[playerid][pVips]][vip_heal]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество аптечек, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" Вы не можете хранить у себя так много аптечек",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],vip_status[PI[playerid][pVips]][vip_heal]-PI[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					gFamily[fam][famHealth] -= col;
					UpdateFamily(fam+1,"health",gFamily[fam][famHealth]);
					PI[playerid][pMedKit]+=col;
					UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
					SendOk(playerid,"Вы взяли аптечки со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} аптечек",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 5: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество масок, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMask]],vip_status[PI[playerid][pVips]][vip_mask]-PI[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famMask] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество масок, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" На складе семьи недостаточно масок",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMask]],vip_status[PI[playerid][pVips]][vip_mask]-PI[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(PI[playerid][pMask]+ col > vip_status[PI[playerid][pVips]][vip_mask]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество масок, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" Вы не можете хранить у себя так много масок",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMask]],vip_status[PI[playerid][pVips]][vip_mask]-PI[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}

					gFamily[fam][famMask] -= col;
					UpdateFamily(fam+1,"mask",gFamily[fam][famMask]);
					PI[playerid][pMask] +=col;
					UpdatePlayerData(playerid,"pMask",PI[playerid][pMask]);
					SendOk(playerid,"Вы взяли маски со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} масок",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 6: {
					if(col != 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество канистр с бензином, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],vip_status[PI[playerid][pVips]][vip_fuel]-PI[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famFuel] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество канистр с бензином, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" На складе семьи недостаточно канистр с бензином",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],vip_status[PI[playerid][pVips]][vip_fuel]-PI[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(PI[playerid][pFuel]+ col > vip_status[PI[playerid][pVips]][vip_fuel]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество канистр с бензином, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" Вы не можете хранить у себя так много канистр с бензином",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],vip_status[PI[playerid][pVips]][vip_fuel]-PI[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					gFamily[fam][famFuel] -= col;
					UpdateFamily(fam+1,"fuel",gFamily[fam][famFuel]);
					PI[playerid][pFuel]+=col;
					UpdatePlayerData(playerid,"pFuel",PI[playerid][pFuel]);
					SendOk(playerid,"Вы взяли канистру с бензином со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} канистру с бензином",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 7: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество ремкомплектов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],5-PI[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(gFamily[fam][famRemp] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество ремкомплектов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" На складе семьи недостаточно ремкомплектов",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],5-PI[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					if(PI[playerid][pInstrument]+ col > 5) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введите количество ремкомплектов, "W"которое хотите взять:\nСостояние склада: "P"%d / %d"W"\nВ карман поместится: "P"%d\n\n"NO"*"G" Вы не можете хранить у себя так много ремкомплектов",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],5-PI[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""P"Сбережения",string,"Взять","Отмена");
					}
					gFamily[fam][famRemp] -= col;
					UpdateFamily(fam+1,"remp",gFamily[fam][famRemp]);
					PI[playerid][pInstrument]+=col;
					UpdatePlayerData(playerid,"pInstr",PI[playerid][pInstrument]);
					SendOk(playerid,"Вы взяли ремкоплекты со склада семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} ремкомплектов",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
			}
		}
		case D_FAMILY_STORE_3: {
			if(!response) {
				DeletePVar(playerid,"select_famscore");
				if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PI[playerid][pFamily]-1;
			new col = strval(inputtext);
			switch(GetPVarInt(playerid,"select_famscore")) {
				case 0: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество денег, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно денег: "P"%d\n\n",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],PI[playerid][pCash]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pCash]- col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество денег, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно денег: "P"%d\n\n"NO"*"G" У Вас недостаточно средств",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],PI[playerid][pCash]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famMoney]+col > FamilyMoneyUpdate[gFamily[fam][famMoneyMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество денег, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно денег: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],PI[playerid][pCash]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famMoney] += col;
					UpdateFamily(fam+1,"money",gFamily[fam][famMoney]);
					GiveMoney(playerid,-col,"пополнил(а) склад семьи");
					SendOk(playerid,"Вы положили деньги на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} денег на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 1: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество наркотиков, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно наркотиков: "P"%d\n\n",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],PI[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pDrugs]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество наркотиков, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно наркотиков: "P"%d\n\n"NO"*"G" У Вас недостаточно наркотиков",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],PI[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famDrugs]+col > FamilyDrugsUpdate[gFamily[fam][famDrugsMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество наркотиков, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно наркотиков: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],PI[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famDrugs] += col;
					UpdateFamily(fam+1,"drugs",gFamily[fam][famDrugs]);
					PI[playerid][pDrugs]-=col;
					UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					SendOk(playerid,"Вы положили наркотики на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} наркотиков на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				} 
				case 2: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество боеприпасов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно боеприпасов: "P"%d\n\n",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],PI[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pMats]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество боеприпасов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно боеприпасов: "P"%d\n\n"NO"*"G" У Вас недостаточно боеприпасов",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],PI[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famMats]+col > FamilyMatsUpdate[gFamily[fam][famMatsMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество боеприпасов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно боеприпасов: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],PI[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famMats] += col;
					UpdateFamily(fam+1,"mats",gFamily[fam][famMats]);
					PI[playerid][pMats]-=col;
					UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
					SendOk(playerid,"Вы положили боеприпасы на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} боеприпасов на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 3: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество бронежилетов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d\n\n",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					new Float:arm;
					GetPlayerArmour(playerid, arm);
					if(arm < 80) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество бронежилетов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d\n\n"NO"*"G" У Вас нет бронежилета/он сильно изношен",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famArmour]+col > FamilyArmourUpdate[gFamily[fam][famArmourMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество бронежилетов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famArmour] += col;
					UpdateFamily(fam+1,"armour",gFamily[fam][famArmour]);
					SendOk(playerid,"Вы положили бронежилет на склад семьи");
					SetPlayerArmour(playerid, 0);
					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} бронежилет на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 4: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество аптечек, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно аптечек: "P"%d\n\n",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],PI[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pMedKit]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество аптечек, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно аптечек: "P"%d\n\n"NO"*"G" У Вас недостаточно аптечек",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],PI[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famHealth]+col > FamilyHealthUpdate[gFamily[fam][famHealthMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество аптечек, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно аптечек: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],PI[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famHealth] += col;
					UpdateFamily(fam+1,"health",gFamily[fam][famHealth]);
					PI[playerid][pMedKit]-=col;
					UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
					SendOk(playerid,"Вы положили аптечки на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} аптечек на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 5: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество масок, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно масок: "P"%d\n\n",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMaskMax]],PI[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pMask]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество масок, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно масок: "P"%d\n\n"NO"*"G" У Вас недостаточно масок",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMaskMax]],PI[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famMask]+col > FamilyMaskUpdate[gFamily[fam][famMaskMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество масок, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно масок: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMaskMax]],PI[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famMask] += col;
					UpdateFamily(fam+1,"mask",gFamily[fam][famMask]);
					PI[playerid][pMask]-=col;
					UpdatePlayerData(playerid,"pMask",PI[playerid][pMask]);
					SendOk(playerid,"Вы положили маски на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} масок на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 6: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество канистр с бензином, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно канистр с бензином: "P"%d\n\n",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],PI[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pFuel]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество канистр с бензином, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно канистр с бензином: "P"%d\n\n"NO"*"G" У Вас недостаточно канистр с бензином",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],PI[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famFuel]+col > FamilyFuelUpdate[gFamily[fam][famFuelMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество канистр с бензином, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно канистр с бензином: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],PI[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famFuel] += col;
					UpdateFamily(fam+1,"fuel",gFamily[fam][famFuel]);
					PI[playerid][pFuel]-=col;
					UpdatePlayerData(playerid,"pFuel",PI[playerid][pFuel]);
					SendOk(playerid,"Вы положили канистру с бензином на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} канистр с бензином на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 7: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество ремкомплектов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно ремкомплектов: "P"%d\n\n",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],PI[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(PI[playerid][pInstrument]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество ремкомплектов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"nДоступно ремкомплектов: "P"%d\n\n"NO"*"G" У Вас недостаточно ремкомплектов",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],PI[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					if(gFamily[fam][famRemp]+col > FamilyRempUpdate[gFamily[fam][famRempMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введите количество ремкомплектов, "W"которое хотите положить:\nСостояние склада: "P"%d / %d"W"\nДоступно ремкомплектов: "P"%d\n\n"NO"*"G" На складе семьи недостаточно места",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],PI[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""P"Сбережения",string,"Положить","Отмена");
					}
					gFamily[fam][famRemp] += col;
					UpdateFamily(fam+1,"remp",gFamily[fam][famRemp]);
					PI[playerid][pInstrument]-=col;
					UpdatePlayerData(playerid,"pInstr",PI[playerid][pInstrument]);
					SendOk(playerid,"Вы положили ремкоплекты на склад семьи");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} ремкоплеков на склад семьи",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
			}
		}
		case D_BUY_SKIN: {
			if(!response) return true;
			new houseid = PI[playerid][pHouse];
			if(!PI[playerid][pHouse] || ((houseid) > 0 && !GetString(player_name[playerid],gHouses[houseid][houseOwner]))) D(playerid,D_BUY_SKIN_2,DSM, ""P"Покупка одежды",""W"У Вас нет шкафа для одежды.\nЕсли Вы купите эту одежду, то она "NO"заменит"W" Вашу текущую\n\n"P"Вы все равно хотите купить выбранную одежду?","Да","Нет");
			else {
				new skin = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0];
				new price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
				new id = TI[playerid][tSelectedBusinessID];
				new slot=-1;
				for(new i;i<3;i++) {
					if(skin == gHouses[houseid][houseSkin][i]) return ErrorMessage(playerid,"У Вас уже есть эта одежда в шкафу");
					if(!gHouses[houseid][houseSkin][i]) {slot = i; break;}
				}
				if(slot == -1) return D(playerid,D_BUY_SKIN_2,DSM, ""P"Покупка одежды",""W"У Вас недостаточно места в шкафу.\nЕсли Вы купите эту одежду, то она "NO"заменит"W" Вашу текущую\n\n"P"Вы все равно хотите купить выбранную одежду?","Да","Нет");

				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(price/100*vip_status[PI[playerid][pVips]][vip_chose]);
					if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно средств");
					GiveMoney(playerid,-(price-seller),"покупка скина");
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(price/100*BonusInfo[act_buyskin]);
						if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно средств");
						GiveMoney(playerid,-(price-seller),"покупка скина");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(price/100*BonusInfo[act_buyskin]);
						if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно средств");
						GiveMoney(playerid,-(price-seller),"покупка скина");
					}
				    else {
				    	if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно средств");
				    	GiveMoney(playerid,-price,"покупка скина");
				    }
				}

				if(gBusiness[id][bizzProduct] - floatround((price / 150) * 5) / 10 > 0) {
					bizz_pay(id,floatround(price * 0.1647));
					gBusiness[id][bizzProduct] -= floatround((price / 150) * 5) / 10;
				}
				UpdateBusinessText(id);
				SaveBusiness(id);
				gHouses[houseid][houseSkin][slot] = skin;
				UpdateHouseDress(houseid);
				if(mysql_errno()) return ErrorMessage(playerid,"Ошибка #11");

				SendOk(playerid,"Одежда была помещена в Ваш шкаф");
				if(GetPVarInt(playerid, "curskin") == PI[playerid][pFracSkin] || PI[playerid][pMember]) A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
				else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
				cancel_skin(playerid);
			}
		}
		case D_BUY_SKIN_2: {
			if(!response) return true;
			new houseid = PI[playerid][pHouse];
			new skin = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0];
			new price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
			new id = TI[playerid][tSelectedBusinessID];
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(price/100*vip_status[PI[playerid][pVips]][vip_chose]);
				if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно средств");
				GiveMoney(playerid,-(price-seller),"покупка скина");
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(price/100*BonusInfo[act_buyskin]);
					if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно средств");
					GiveMoney(playerid,-(price-seller),"покупка скина");
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(price/100*BonusInfo[act_buyskin]);
					if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно средств");
					GiveMoney(playerid,-(price-seller),"покупка скина");
				}
			    else {
			    	if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно средств");
			    	GiveMoney(playerid,-price,"покупка скина");
				}
			}
			if(gBusiness[id][bizzProduct] - floatround((price / 150) * 5) / 10 > 0) {
				bizz_pay(id,floatround(price * 0.1647));
				gBusiness[id][bizzProduct] -= floatround((price / 150) * 5) / 10;
			}
			UpdateBusinessText(id);
			SaveBusiness(id);
			if(houseid) {
			    if(GetString(player_name[playerid],gHouses[houseid][houseOwner])) {
					new slot=-1, cnt;
					for(new i;i<3;i++) {
						if(gHouses[houseid][houseSkin][i]) cnt++;
						if(gHouses[houseid][houseSkin][i] == PI[playerid][pSkin]) slot = i;
					}
					if(cnt >= 3) {
						if(slot == -1) return ErrorMessage(playerid,"Ошибка при нахождении заменямого скина в шкафу");
						gHouses[houseid][houseSkin][slot] = skin;
						UpdateHouseDress(houseid);
					}
				}
			}
			if(UpdatePlayerData(playerid,"Skin",skin)) return ErrorMessage(playerid,"Ошибка #10");

			PI[playerid][pSkin] = skin;
			SetPVarInt(playerid,"ChangingSkin",0);
			if(GetPVarInt(playerid, "curskin") == PI[playerid][pFracSkin] || PI[playerid][pMember]) A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
			cancel_skin(playerid);
		}
		case D_AUTOSCHOOL_1: {
			if(!response) return DeletePVar(playerid,"use_test");
			new question = TestASKMassive[playerid][0];
			return D(playerid,D_AUTOSCHOOL_2,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","");
		}
		case D_AUTOSCHOOL_2: {
			new que, question;
			que = GetPVarInt(playerid,"pTestQNumber");
			question = TestASKMassive[playerid][que];
			if(QueInfo[question][dSuccesQwe] != -1 && listitem != QueInfo[question][dSuccesQwe]) SetPVarInt(playerid,"error_test",GetPVarInt(playerid,"error_test")+1);
			SetPVarInt(playerid,"pTestQNumber",GetPVarInt(playerid,"pTestQNumber")+1);
			que = GetPVarInt(playerid,"pTestQNumber");
			if(que < 7) {
				question = TestASKMassive[playerid][que];
				D(playerid,D_AUTOSCHOOL_2,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","");
			}
			else {
				if(GetPVarInt(playerid,"error_test") > 2) {
					new string[156];
					format(string,sizeof(string),""NO"Экзамен завален!\n\n"W"Ошибок допущено: "NO"%d\nСоветуем подготовиться лучше!",GetPVarInt(playerid,"error_test"));
					D(playerid,DIALOG_NONE,DSM, ""P"Экзамен",string,"Закрыть","");
					DeletePVar(playerid,"error_test");
					DeletePVar(playerid,"use_test");
					DeletePVar(playerid,"pTestQNumber");
					
					A_DestroyVehicle(car_autoschool[playerid]);
					car_autoschool[playerid] = INVALID_VEHICLE_ID;
					DisablePlayerRaceCheckpoint(playerid);

					DeletePVar(playerid,"LessonSlot");
					DeletePVar(playerid,"WaitExam");
					DeletePVar(playerid,"pWaitingExam");

					SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
					TI[playerid][tAutoSchool] = 0;
					return 1;
				}
				else
				{
					if(!PI[playerid][pVips] || PI[playerid][pVips] == VIP_KING)
					{
					    new Float:pos[3];
						GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

						SetPVarFloat(playerid,"pos_x_autos",pos[0]);
						SetPVarFloat(playerid,"pos_y_autos",pos[1]);
						SetPVarFloat(playerid,"pos_z_autos",pos[2]);

						D(playerid,DIALOG_NONE,DSM, ""P"Экзамен",""GREEN"Поздравляем с успешной сдачей теоретической части!\n\n\
							"W"Для прохождения практической части займите свободный автомобиль на парковке АвтоШколы","Хорошо","");
												
						new rand = random(sizeof(test_car));
						
						car_autoschool[playerid] = A_CreateVehicle(426, test_car[rand][0],test_car[rand][1],test_car[rand][2],test_car[rand][3], -1, -1, -1,
							VEHICLE_TYPE_AUTOSCHOOL);
							
                        VehicleInfo[car_autoschool[playerid]][vFuel] = 100.0;

						pPressed[playerid] = 0;

						EnableGPSForPlayer(playerid, test_car[rand][0]+2,test_car[rand][1]+2,test_car[rand][2]);
						
						SetPVarInt(playerid,"WaitExam", true);
						SetPVarInt(playerid,"pWaitingExam", true);
						
						DeletePVar(playerid,"use_test");
					}
					else {
						SendClientMessage(playerid,CGOLD,"Поздравляем с получением водительского удостоверения");
						lic[playerid][0] = 1;
						UpdateLicenses(playerid);
						
						DeletePVar(playerid,"error_test");
						DeletePVar(playerid,"use_test");
						DeletePVar(playerid,"pTestQNumber");
						
						A_DestroyVehicle(car_autoschool[playerid]);
						car_autoschool[playerid] = INVALID_VEHICLE_ID;
						DisablePlayerRaceCheckpoint(playerid);

						DeletePVar(playerid,"LessonSlot");
						DeletePVar(playerid,"WaitExam");
						DeletePVar(playerid,"pWaitingExam");

						TI[playerid][tAutoSchool] = 0;
					}
				}
			}
		}
		case D_AUTOSCHOOL_3: {
			if(!response) return 1;
			
			new Float:pos[3];
			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
			
			SetPVarFloat(playerid,"pos_x_autos",pos[0]);
			SetPVarFloat(playerid,"pos_y_autos",pos[1]);
			SetPVarFloat(playerid,"pos_z_autos",pos[2]);
			
			if(TI[playerid][tAutoSchool] == 2)
			{
	            new rand = random(sizeof(test_air));
				air_autoschool[playerid] = A_CreateVehicle(487, test_air[rand][0],test_air[rand][1],test_air[rand][2],test_air[rand][3], -1, -1, -1, VEHICLE_TYPE_AUTOSCHOOL);
				
				VehicleInfo[air_autoschool[playerid]][vFuel] = 100.0;
				
				pPressed[playerid] = 0;
				
				EnableGPSForPlayer(playerid, test_air[rand][0]+2,test_air[rand][1]+2,test_air[rand][2]);
			}
			else if(TI[playerid][tAutoSchool] == 3)
			{
				boat_autoschool[playerid] = A_CreateVehicle(446, -282.3931,1120.2064,-0.6946,93.1110, -1, -1, -1, VEHICLE_TYPE_AUTOSCHOOL);
				
				VehicleInfo[boat_autoschool[playerid]][vFuel] = 100.0;
				
				pPressed[playerid] = 0;
				
				EnableGPSForPlayer(playerid, -282.3931+2,1120.2064+2,-0.6946);
			}
			return 1;
		}
		case D_BANK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[300], str[120];
					string = ""P"№ счёта\t"P"Название\n"ORANGE"-\tОсновной счёт\n";
					for(new i;i < score_number[playerid];i++) {
						format(str, sizeof(str),""ORANGE"%i\t"W"%s\n",gBanks[playerid][bankNumber][i],score_name[playerid][i]), strcat(string, str);
					}
					return D(playerid,D_BANK_ACTIVE,DSTH,"Активные счета",string, "Выбрать", "Назад");
				}
				case 1: {
				    if(score_number[playerid] == 3) return ErrorMessage(playerid, "Максимальное количество счетов - 3");
				    return D(playerid,D_BANK_OPEN,DSI, ""P"Открытие нового счета","\n\n"W"Введите название для нового лицевого счёта:\n\n","Открыть","Отмена");
				}
			}
		}
		case D_BANK_ACTIVE: {
			if(!response) return bank_dialog(playerid);
			if(listitem == 0) return D(playerid,D_BANK_GLOBAL,DSL,""P"Основной счёт",""P"1."W" Информация о счёте\n"P"2."W" Пополнить счёт\n"P"3."W" Выдача наличных","Выбрать","Назад");
			SetPVarInt(playerid, "select_score",listitem-1);
			return D(playerid,D_BANK_AUTORISATION,DSI,""P"Авторизация","\n\n"W"Для получения доступа к счёту введите "P"PIN-код:\n\n","Ввод","Назад");
		}
		case D_BANK_OPEN: {
			if(!response) return bank_dialog(playerid);
			if(strlen(inputtext) < 1 || strlen(inputtext) > 12) return D(playerid,D_BANK_OPEN,DSI, ""P"Открытие нового счета","\n\n"W"Введите название для нового лицевого счёта:\n\n"NO"*"G" Максимальная длина 12 символов\n\n","Открыть","Отмена");
            new query[150];
			strmid(score_name[playerid][score_number[playerid]], inputtext, 0, strlen(inputtext), 20);
			strmid(gBanks[playerid][bankOwner][score_number[playerid]], player_name[playerid], 0, strlen(player_name[playerid]), 24);
			gBanks[playerid][bankPassword][score_number[playerid]] = 0000;
			gBanks[playerid][bankBalance][score_number[playerid]] = 0;
			format(query,sizeof(query),"INSERT INTO `bank` (`name`,`owner`,`balance`,`code`) VALUES ('%s','%s','0','0000')",score_name[playerid][score_number[playerid]], player_name[playerid]);
			mysql_tquery(connects,query,"","");
			score_number[playerid]++;
			mysql_format(connects,query,sizeof(query),"SELECT * FROM `bank` WHERE BINARY `owner` = '%s'", player_name[playerid]);
    		mysql_tquery(connects,query, "update_bank", "i", playerid);
			D(playerid,DIALOG_NONE,DSM, ""P"Счёт открыт",
				""W"Поздравляем! С открытием нового счёта в банке.\n\n\
				PIN-код по умолчанию: "P"0000\n\
				"W"Для защиты денежных сбережений, советуем сменить PIN-код на более сложный!","Готово","");
			return 1;
		}
    	case D_BANK_AUTORISATION: {
	    	if(!response) return bank_dialog(playerid);
			if(strlen(inputtext) != 4) return D(playerid,D_BANK_AUTORISATION,DSI,""P"Авторизация","\n\n"W"Для получения доступа к счёту введите "O"PIN-код:\n\n"NO"*"G" PIN-код должен состоять из 4 цифр\n\n","Ввод","Назад");
			if(gBanks[playerid][bankPassword][GetPVarInt(playerid, "select_score")] == strval(inputtext)) return bank_score(playerid);
			else D(playerid,D_BANK_AUTORISATION,DSI,""P"Авторизация","\n\n"W"Для получения доступа к счёту введите "P"PIN-код:\n\n"NO"*"G" PIN-код не верный\n\n","Ввод","Назад");
	    }
		case D_BANK_LIST: {
			if(response) {
				return D(playerid,D_BANK_TOP,DSL, ""P"Список операций", ""P"1."W" Информация о счёте\n"P"2."W" Пополнить счёт\n"P"3."W" Выдача наличных\n"P"4."W" Перевести на другой счёт\n"P"5."W" Список операций\n"P"6."W" Переименовать счёт\n"P"7."W" Изменить PIN-код", "Выбрать", "Назад");
			}
		}
		case D_BANK_GLOBAL_LIST: {
			if(response) {
				return D(playerid,D_BANK_GLOBAL,DSL,""P"Основной счёт",""P"1."W" Информация о счёте\n"P"2."W" Пополнить счёт\n"P"3."W" Выдача наличных","Выбрать","Отмена");
			}
		}
     	case D_BANK_TOP: {
			if(!response) return bank_dialog(playerid);
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Счёт:\t\t\t"P"№ %i\n\
								"W"Название:\t\t"P"%s\n\
								"W"Баланс:\t\t"GREEN"$%i\n";
					new string[sizeof(f_str) +1 + (-2 + 8) + (-2 + 13)+ (-2 + 11)];
					format(string, sizeof(string), f_str,gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],score_name[playerid][GetPVarInt(playerid, "select_score")],gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")]);
					return D(playerid,D_BANK_LIST,DSM, ""P"Информация",string,"Назад","");
				}
				case 1: D(playerid,D_BANK_PUT,DSI, ""P"Пополнение счёта","\n\n"W"Введите сумму которую хотите положить на банковский счёт:\n\n","Положить","Назад");
				case 2: D(playerid,D_BANK_INPUT,DSI, ""P"Выдача наличных","\n\n"W"Введите сумму которую хотите снять с банковского счёта:\n\n","Снять","Назад");
				case 3: {
					new Float:percent;
					switch(GetPlayerVirtualWorld(playerid)) {
						case 46: percent = FuncBizz[4][funcbPercent2];
						case 47: percent = FuncBizz[32][funcbPercent2];
						case 48: percent = FuncBizz[33][funcbPercent2];
						default: {
							switch(GetPVarInt(playerid, "bank_donate")) {
								case 0: percent = FuncBizz[4][funcbPercent2];
								case 1: percent = FuncBizz[32][funcbPercent2];
								case 2: percent = FuncBizz[33][funcbPercent2];
								default: return 1;
							}
						}
					}
					static const f_str[] = "\n\n"W"Введите номер счёта, на который хотите перевести деньги:\nВнимание: комиссия за перевод: "ORANGE"%.1f\n\n";
					new string[sizeof(f_str) +1 + (-2 + 4)];
					format(string,sizeof(string),f_str,percent);
					return D(playerid,D_BANK_TRANSFER_ONE,DSI, ""P"Перевод средств",string,"Далее","Назад");
				}
				case 4: {
					new query[150];
					mysql_format(connects,query, sizeof(query), "SELECT * FROM `history` WHERE BINARY `number_1` = '%d' or `number_2` = '%d' ORDER BY `date` DESC LIMIT 10", gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")], gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
					return mysql_tquery(connects, query, "OnPlayerBankOperations", "i", playerid);
				}
				case 5: D(playerid,D_BANK_CHANGE_NAME,DSI, ""P"Переименовать счёт","\n\n"W"Введите новое название Вашего счёта:\n\n","Изменить","Назад");
				case 6: D(playerid,D_BANK_CHANGE_PIN,DSI, ""P"Смена PIN-кода","\n\n"W"Введите новый PIN-код состоящий из 4 цифр:\n\n","Изменить","Назад");
			}
		}
		case D_BANK_INPUT: {
			if(!response) return bank_score(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму которую хотите снять:\n\n"NO"*"G" Можно снимать от $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_INPUT,DSI, ""P"Выдача наличных",string,"Снять","Назад");
				return 1;
			}
			if(gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] < amount) return D(playerid,D_BANK_INPUT,DSI, ""P"Выдача наличных","\n\n"W"Введите сумму которую хотите снять:\n\n"NO"*"G" Недостаточно средств\n\n","Снять","Назад");
			gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] -= amount;
		 	GiveMoney(playerid, amount,"снятие с банк счета");

			SaveScore(playerid);

			static const f_str[] = ""W"Снято средств:\t\t"GREEN"$%d\n\
								"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")]);
			D(playerid,D_BANK_LIST,DSM, ""P"Выдача наличных",string,"Назад","");

			new query[256];
			mysql_format(connects, query, sizeof(query), "INSERT `history` (`number_1`,`status`,`money`, `date`) VALUES('%d', '3', '%d', '%d' )", gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],amount, gettime());
			return mysql_tquery(connects, query, "", "");
		}
  		case D_BANK_PUT: {
			if(!response) return bank_score(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму которую хотите положить:\n\n"NO"*"G" Можно класть от $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_PUT,DSI, ""P"Пополнение счёта",string,"Положить","Назад");
				return 1;
			}
			if(PI[playerid][pCash] < amount) return D(playerid,D_BANK_PUT,DSI, ""P"Пополнение счёта","\n\n"W"Введите сумму которую хотите положить:\n\n"NO"*"G" Недостаточно средств\n\n","Положить","Назад");
			gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] += amount;
			GiveMoney(playerid, -amount,"положил на банк счет");

			SaveScore(playerid);

			static const f_str[] = ""W"Внесено средств:\t\t"GREEN"$%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")]);
			D(playerid,D_BANK_LIST,DSM, ""P"Пополнение счёта",string,"Назад","");

			new query[256];
			mysql_format(connects, query, sizeof(query), "INSERT `history` (`number_1`,`status`,`money`, `date`) VALUES('%d', '4', '%d', '%d' )", gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],amount, gettime());
			return mysql_tquery(connects, query, "", "");
		}
    	case D_BANK_TRANSFER_ONE: {
			if(!response) return bank_score(playerid);
			if(!strlen(inputtext)) {
				new Float:percent;
				switch(GetPlayerVirtualWorld(playerid)) {
					case 46: percent = FuncBizz[4][funcbPercent2];
					case 47: percent = FuncBizz[32][funcbPercent2];
					case 48: percent = FuncBizz[33][funcbPercent2];
					default: {
						switch(GetPVarInt(playerid, "bank_donate")) {
							case 0: percent = FuncBizz[4][funcbPercent2];
							case 1: percent = FuncBizz[32][funcbPercent2];
							case 2: percent = FuncBizz[33][funcbPercent2];
							default: return 1;
						}
					}
				}
				static const f_str[] = "\n\n"W"Введите номер счёта, на который хотите перевести деньги:\nВнимание: комиссия за перевод: "ORANGE"%.1f%\n\n";
				new string[sizeof(f_str) +1 + (-2 + 4)];
				format(string,sizeof(string),f_str,percent);
				return D(playerid,D_BANK_TRANSFER_ONE,DSI, ""P"Перевод средств",string,"Далее","Назад");
			}
			new query[128];
			format(query,sizeof(query),"SELECT * FROM `bank` WHERE `number` = '%i' LIMIT 1", strval(inputtext));
			mysql_tquery(connects,query, "check_score", "ii", playerid, strval(inputtext));
			return 1;
		}
		case D_BANK_TRANSFER_TWO: {
			if(!response) return bank_score(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму, которую хотите перевести на введенный Вами счёт:\n\n"NO"*"G" Можно переводить от $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_TRANSFER_TWO,DSI, ""P"Перевод средств",string,"Далее","Назад");
				return 1;
			}
			new percent,Float:percent2;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = floatround(amount/100*FuncBizz[4][funcbPercent2]),percent2 = FuncBizz[4][funcbPercent2];
				case 47: percent = floatround(amount/100*FuncBizz[32][funcbPercent2]),percent2 = FuncBizz[32][funcbPercent2];
				case 48: percent = floatround(amount/100*FuncBizz[33][funcbPercent2]),percent2 = FuncBizz[33][funcbPercent2];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = floatround(amount/100*FuncBizz[4][funcbPercent2]),percent2 = FuncBizz[4][funcbPercent2];
						case 1: percent = floatround(amount/100*FuncBizz[32][funcbPercent2]),percent2 = FuncBizz[32][funcbPercent2];
						case 2: percent = floatround(amount/100*FuncBizz[33][funcbPercent2]),percent2 = FuncBizz[33][funcbPercent2];
						default: return 1;
					}
				}
			}
			if(gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] < amount+percent) return D(playerid,D_BANK_TRANSFER_TWO,DSI, ""P"Перевод средств",""W"Введите сумму, которую хотите перевести на введенный Вами счёт:\n\n"NO"*"G" Недостаточно средств","Далее","Назад");
			new string[256];
			format(string, sizeof(string),""W"Перевод денежных средств\n\n\
				Имя получателя: \t"P"%s\n\
				"W"Номер счёта: \t\t"P"%d\n\
				"W"Комиссия: \t\t"P"%.1f%\n\n\
				"W"Вы действительно хотите перевести "GREEN"$%d"W"?",
			gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")], GetPVarInt(playerid, "select_number"),percent2,amount+percent);
			D(playerid,D_BANK_TRANSFER_THREE,DIALOG_STYLE_MSGBOX,"Перевод средств",string,"Перевод","Отмена");
			SetPVarInt(playerid, "select_money",amount);
			return 1;
		}
		case D_BANK_TRANSFER_THREE: {
			if(!response) {
				DeletePVar(playerid, "select_number");
				DeletePVar(playerid, "select_money");
				strmid(gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")], "None", 0, strlen("None"), 4);
				return bank_score(playerid);
			}
   			new query[256];
			format(query,sizeof(query), "UPDATE `bank` SET `balance` = `balance` + '%i' WHERE `number` = '%i'",
			GetPVarInt(playerid, "select_money"), GetPVarInt(playerid, "select_number"));
			mysql_tquery(connects,query,"","");

			new id = GetPlayerID(gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")]);
			if(IsPlayerConnected(id)) {
				for(new i;i < score_number[id];i++) {
					if(gBanks[id][bankNumber][i] != GetPVarInt(playerid, "select_number")) continue;
					gBanks[id][bankBalance][i] += GetPVarInt(playerid, "select_money");
					
					static const f_str[] = ""P"%s "G"осуществил перевод на Ваш банковский счёт "W"№ %d"W" в размере - "ORANGE"$%d";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 11) + (-2 + 11)];
					format(string,sizeof(string),f_str,player_name[playerid],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"));
					SendUse(id,string);
				}
			}
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[4][funcbPercent2]),bizz_pay(7,percent);
				case 47: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[32][funcbPercent2]),bizz_pay(8,percent);
				case 48: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[33][funcbPercent2]),bizz_pay(9,percent);
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[4][funcbPercent2]),bizz_pay(7,percent);
						case 1: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[32][funcbPercent2]),bizz_pay(8,percent);
						case 2: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[33][funcbPercent2]),bizz_pay(9,percent);
						default: return 1;
					}
				}
			}
			gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] -= (GetPVarInt(playerid, "select_money")+percent);

			SaveScore(playerid);

			new yeart, montht, dayt, hourt, minutet;
			getdate(yeart,montht,dayt) , gettime(hourt,minutet);
			new mtext[20],string[256];
			switch(montht) {
				case 1: mtext = "Января";
				case 2: mtext = "Февраля";
				case 3: mtext = "Марта";
				case 4: mtext = "Апреля";
				case 5: mtext = "Мая";
				case 6: mtext = "Июня";
				case 7: mtext = "Июля";
				case 8: mtext = "Августа";
				case 9: mtext = "Сентебря";
				case 10: mtext = "Октября";
				case 11: mtext = "Ноября";
				case 12: mtext = "Декабря";
			}
			if (minutet < 10)    format(string, sizeof(string), ""W"Перевод успешно завершен\n\nИмя получателя: "P"%s\n\
				"W"№ счёта: "P"%i\n"W"Сумма: "GREEN"$%i\n\n"W"Время: "P"%i %s %i в %i:0%i",
			gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"),dayt,mtext,yeart,hourt,minutet);
			else format(string, sizeof(string), ""W"Перевод успешно завершен\n\nИмя получателя: "P"%s\n\
				"W"№ счёта: "P"%i\n"W"Сумма: "GREEN"$%i\n\n"W"Время: "P"%i %s %i в %i:%i",
			gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"),dayt,mtext,yeart,hourt,minutet);
			D(playerid,DIALOG_NONE,DIALOG_STYLE_MSGBOX,"Чек",string,"Готово","");

			mysql_format(connects, query, sizeof(query), "INSERT `history` (`name_1`, `number_1`,`number_2`,`status`, `money`, `date`) VALUES('%s', '%d', '%d', '2', '%d', '%d')", player_name[playerid],gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"), gettime());
			return mysql_tquery(connects, query, "", "");
		}
		case D_BANK_CHANGE_PIN: {
		    if(!response) return bank_score(playerid);
	     	if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid,D_BANK_CHANGE_PIN,DSI, ""P"Смена PIN-кода","\n\n"W"Введите новый PIN-код состоящий из 4 цифр:\n\n","Изменить","Назад");
	     	gBanks[playerid][bankPassword][GetPVarInt(playerid, "select_score")] = strval(inputtext);
			new query[165];
			format(query,sizeof(query),"UPDATE `bank` SET `code` = '%d' WHERE `number` = '%d'",gBanks[playerid][bankPassword][GetPVarInt(playerid, "select_score")], gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
  			mysql_tquery(connects,query,"","");

			static const f_str[] = ""W"PIN-код успешно изменён\nВаш новый PIN - "P"%s";
			new string[sizeof(f_str) +1 + (-2 + 5)];
			format(string,sizeof(string),f_str,inputtext);
			D(playerid,D_BANK_LIST,DSM, ""P"Смена PIN-кода", string, "Назад","");
			mysql_format(connects, query, sizeof(query), "INSERT `history` (`name_1`, `number_1`,`status`, `date`) VALUES('%s', '%d', '1', '%d')", player_name[playerid],gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")], gettime());
			return mysql_tquery(connects, query, "", "");
		}
		case D_BANK_CHANGE_NAME: {
			if(!response) return bank_score(playerid);
	     	if(strlen(inputtext) < 1 || strlen(inputtext) > 12) return D(playerid,D_BANK_CHANGE_NAME,DSI, ""P"Переименовать счёт","\n\n"W"Введите новое название Вашего счёта:\n\n"NO"*"G" Максимальная длина 12 символов\n\n","Изменить","Назад");
	     	strmid(score_name[playerid][GetPVarInt(playerid, "select_score")], inputtext, 0, strlen(inputtext), 20);
			new query[100];
			format(query,sizeof(query),"UPDATE `bank` SET `name` = '%s' WHERE `number` = '%d'",score_name[playerid][GetPVarInt(playerid, "select_score")],gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
  			mysql_tquery(connects,query,"","");

			static const f_str[] = ""W"Имя банковского счёта успешно изменено\nНовое имя - "P"%s";
			new string[sizeof(f_str) +1 + (-2 + 13)];
			format(string,sizeof(string),f_str,score_name[playerid][GetPVarInt(playerid, "select_score")]);
			D(playerid,D_BANK_LIST,DSM, ""P"Переименовать счёт", string, "Назад","");
			return 1;
		}
		case D_BANK_GLOBAL: {
			if(!response) return bank_dialog(playerid);
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Название:\t\t"O"Основной счёт\n\
								"W"Баланс:\t\t"GREEN"$%i\n";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string, sizeof(string), f_str,PI[playerid][pBank]);
					return D(playerid,D_BANK_GLOBAL_LIST,DSM, ""P"Информация",string,"Назад","");
				}
				case 1: D(playerid,D_BANK_GLOBAL_PUT,DSI, ""P"Пополнение счёта","\n\n"W"Введите сумму которую хотите положить на банковский счёт:\n\n","Положить","Назад");
				case 2: D(playerid,D_BANK_GLOBAL_INPUT,DSI, ""P"Выдача наличных","\n\n"W"Введите сумму которую хотите снять с банковского счёта:\n\n","Снять","Назад");
			}
		}
		case D_BANK_GLOBAL_INPUT: {
			if(!response) return bank_dialog(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму которую хотите снять:\n\n"NO"*"G" Можно снимать от $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_GLOBAL_INPUT,DSI, ""P"Выдача наличных",string,"Снять","Назад");
				return 1;
			}
			if(PI[playerid][pBank] < amount) return D(playerid,D_BANK_GLOBAL_INPUT,DSI, ""P"Выдача наличных","\n\n"W"Введите сумму которую хотите снять:\n\n"NO"*"G" Недостаточно средств\n\n","Снять","Назад");
			PI[playerid][pBank] -= amount;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
		 	GiveMoney(playerid, amount,"снятие с банк счета");

			static const f_str[] = ""W"Снято средств:\t\t"GREEN"$%d\n\
								"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pBank]);
			return D(playerid,D_BANK_GLOBAL_LIST,DSM, ""P"Выдача наличных",string,"Назад","");
		}
  		case D_BANK_GLOBAL_PUT: {
			if(!response) return bank_dialog(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму которую хотите положить:\n\n"NO"*"G" Можно класть от $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_GLOBAL_PUT,DSI, ""P"Пополнение счёта",string,"Положить","Назад");
				return 1;
			}
			if(PI[playerid][pCash] < amount) return D(playerid,D_BANK_GLOBAL_PUT,DSI, ""P"Пополнение счёта","\n\n"W"Введите сумму которую хотите положить:\n\n"NO"*"G" Недостаточно средств\n\n","Положить","Назад");
			PI[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			GiveMoney(playerid, -amount,"положил на банк счет");

			static const f_str[] = ""W"Внесено средств:\t\t"GREEN"$%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pBank]);
			return D(playerid,D_BANK_GLOBAL_LIST,DSM, ""P"Пополнение счёта",string,"Назад","");
		}
		case D_BANK_OPLATA: {
			if(!response) return 1;
			new day;
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[4][funcbPercent];
				case 47: percent = FuncBizz[32][funcbPercent];
				case 48: percent = FuncBizz[33][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[4][funcbPercent];
						case 1: percent = FuncBizz[32][funcbPercent];
						case 2: percent = FuncBizz[33][funcbPercent];
						default: return 1;
					}
				}
			}
			switch(listitem) {
				case 0: {
					if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
					new house = PI[playerid][pHouse],oplata;
					if(gHouses[house][houseImprove][1]) oplata = floatround(gHouses[house][housePrice]*house_rent/2);
					else oplata = floatround(gHouses[house][housePrice]*house_rent);
					day = GetElapsedTime(gHouses[house][houseDay], gettime(), CONVERT_TIME_TO_DAYS);
					static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за дом:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\nОплачено дней: "P"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_HOUSE,DSI, ""P"Оплата дома",string,"Оплатить","Отмена");
				}
				case 1: {
					if(!PI[playerid][pBusiness]) return ErrorMessage(playerid,"У Вас нет бизнеса");
					new bizz = PI[playerid][pBusiness],oplata;
					if(gBusiness[bizz][bizzUpgrade][2]) oplata = floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent/2);
					else oplata = floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent);
					day = GetElapsedTime(gBusiness[bizz][bizzDay], gettime(), CONVERT_TIME_TO_DAYS);
					static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за бизнес:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\nОплачено дней: "P"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_BIZZ,DSI, ""P"Оплата бизнеса",string,"Оплатить","Отмена");
				}
				case 2: {
					if(!PI[playerid][pHotel]) return ErrorMessage(playerid,"У Вас нет отеля");
					new hotel = PI[playerid][pHotel]-1;
					day = GetElapsedTime(gHotels[hotel][hotelDay], gettime(), CONVERT_TIME_TO_DAYS);
					new oplata = floatround(gHotels[hotel][hotelPrice]*hotel_rent);
					static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за отель:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\nОплачено дней: "P"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_HOTEL,DSI, ""P"Оплата отеля",string,"Оплатить","Отмена");
				}
				case 3: {
					if(!PI[playerid][pAirport]) return ErrorMessage(playerid,"У Вас нет аэропорта");
					new air = PI[playerid][pAirport]-1;
					day = GetElapsedTime(gAirs[air][airDay], gettime(), CONVERT_TIME_TO_DAYS);
					new oplata = floatround(gAirs[air][airPrice]*airport_rent);
					static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за аэропорт:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\nОплачено дней: "P"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_AIRPORT,DSI, ""P"Оплата аэропорта",string,"Оплатить","Отмена");
				}
			}
		}
		case D_BANK_OPLATA_HOUSE: {
			if(!response) return 1;
			if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[4][funcbPercent];
				case 47: percent = FuncBizz[32][funcbPercent];
				case 48: percent = FuncBizz[33][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[4][funcbPercent];
						case 1: percent = FuncBizz[32][funcbPercent];
						case 2: percent = FuncBizz[33][funcbPercent];
						default: return 1;
					}
				}
			}
			new amount = strval(inputtext);
			new houseid = PI[playerid][pHouse],oplata;
			if(gHouses[houseid][houseImprove][1]) oplata = floatround(gHouses[houseid][housePrice]*house_rent/2);
			else oplata = floatround(gHouses[houseid][housePrice]*house_rent);
			new day;
			day = GetElapsedTime(gHouses[houseid][houseDay], gettime(), CONVERT_TIME_TO_DAYS);
			new plata = floatround((oplata/100*percent)+oplata);
			if(amount < 1 || amount > 31) {
				static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за дом:\n\
					Примечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\n\
					Оплачено дней: "P"%d\n\n"NO"*"G" От 1 до 31 дней\n\n";
					
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,plata,day);
				D(playerid,D_BANK_OPLATA_HOUSE,DSI, ""P"Оплата дома",string,"Оплатить","Отмена");
				return 1;
			}
			if(day + amount > 31) return ErrorMessage(playerid,"Максимальное кол-во оплаченных дней 31");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно средств");

			gHouses[houseid][houseDay] = (gHouses[houseid][houseDay] - (gHouses[houseid][houseDay] % 86400)) + (amount * 86400);

			GiveMoney(playerid,-(amount*plata),"оплата за дом");

			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(8,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(8,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}
			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			
			SaveHouse(houseid);

			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата дома",string,"Хорошо","");
		}
		case D_BANK_OPLATA_BIZZ: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return ErrorMessage(playerid,"У Вас нет бизнеса");
			new amount = strval(inputtext);
			new bizid = PI[playerid][pBusiness],oplata;
			if(gBusiness[bizid][bizzUpgrade][2]) oplata = floatround(gBusiness[bizid][bizzSellPrice]*bizz_rent/2);
			else oplata = floatround(gBusiness[bizid][bizzSellPrice]*bizz_rent);

			new day;
			day = GetElapsedTime(gBusiness[bizid][bizzDay], gettime(), CONVERT_TIME_TO_DAYS);

			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[4][funcbPercent];
				case 47: percent = FuncBizz[32][funcbPercent];
				case 48: percent = FuncBizz[33][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[4][funcbPercent];
						case 1: percent = FuncBizz[32][funcbPercent];
						case 2: percent = FuncBizz[33][funcbPercent];
						default: return 1;
					}
				}
			}
			if(amount < 1 || amount > 31) {
				static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за бизнес:\n\
					Примечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\n\
					Оплачено дней: "P"%d\n\n"NO"*"G" От 1 до 31 дней\n\n";
					
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
				return D(playerid,D_BANK_OPLATA_BIZZ,DSI, ""P"Оплата бизнеса",string,"Оплатить","Отмена");
			}
			new plata = floatround((oplata/100*percent)+oplata);
			if(day + amount > 31) return ErrorMessage(playerid,"Максимальное кол-во оплаченных дней 31");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно средств");
			gBusiness[bizid][bizzDay] = (gBusiness[bizid][bizzDay] - (gBusiness[bizid][bizzDay] % 86400)) + (amount * 86400);
			UpdateBusinessDataInt(bizid,"deliving",gBusiness[bizid][bizzDay]);
			GiveMoney(playerid,-(amount*plata),"оплата за бизнес");

			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}

			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата бизнеса",string,"Хорошо","");
		}
		case D_BANK_OPLATA_HOTEL: {
			if(!response) return 1;
			if(!PI[playerid][pHotel]) return ErrorMessage(playerid,"У Вас нет отеля");
			new amount = strval(inputtext);
			new hotel = PI[playerid][pHotel] - 1;
			new day;
			day = GetElapsedTime(gHotels[hotel][hotelDay], gettime(), CONVERT_TIME_TO_DAYS);
			new oplata = floatround(gHotels[hotel][hotelPrice]*hotel_rent);
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[4][funcbPercent];
				case 47: percent = FuncBizz[32][funcbPercent];
				case 48: percent = FuncBizz[33][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[4][funcbPercent];
						case 1: percent = FuncBizz[32][funcbPercent];
						case 2: percent = FuncBizz[33][funcbPercent];
						default: return 1;
					}
				}
			}
			if(amount < 1 || amount > 31) {
				static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за отель:\n\
					Примечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\n\
					Оплачено дней: "P"%d\n\n"NO"*"G" От 1 до 31 дней\n\n";
					
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
				return D(playerid,D_BANK_OPLATA_HOTEL,DSI, ""P"Оплата отеля",string,"Оплатить","Отмена");
			}
			new plata = floatround((oplata/100*percent)+oplata);
			if(day + amount > 31) return ErrorMessage(playerid,"Максимальное кол-во оплаченных дней 31");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно средств");
			gHotels[hotel][hotelDay] = (gHotels[hotel][hotelDay] - (gHotels[hotel][hotelDay] % 86400)) + (amount * 86400);
			UpdateHotelData(hotel+1,"day",gHotels[hotel][hotelDay]);
			GiveMoney(playerid,-(amount*plata),"оплата за отель");
			
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(8,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(8,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}

			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата отеля",string,"Хорошо","");
		}
		case D_BANK_OPLATA_AIRPORT: {
			if(!response) return 1;
			if(!PI[playerid][pAirport]) return ErrorMessage(playerid,"У Вас нет аэропорта");
			new amount = strval(inputtext);
			new airid = PI[playerid][pAirport] - 1;
			new day;
			day = GetElapsedTime(gAirs[airid][airDay], gettime(), CONVERT_TIME_TO_DAYS);
			new oplata = floatround(gAirs[airid][airPrice]*airport_rent);
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[4][funcbPercent];
				case 47: percent = FuncBizz[32][funcbPercent];
				case 48: percent = FuncBizz[33][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[4][funcbPercent];
						case 1: percent = FuncBizz[32][funcbPercent];
						case 2: percent = FuncBizz[33][funcbPercent];
						default: return 1;
					}
				}
			}
			if(amount < 1 || amount > 31) {
				static const f_str[] = "\n\n"W"Введите кол-во дней на которое хотите продлить аренду за аэропорт:\n\
					Примечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комиссия банка: "ORANGE"%d"W" процент(ов), сумма с комиссией: "GREEN"$%d"W")\n\
					Оплачено дней: "P"%d\n\n"NO"*"G" От 1 до 31 дней\n\n";
					
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
				return D(playerid,D_BANK_OPLATA_AIRPORT,DSI, ""P"Оплата аэропорта",string,"Оплатить","Отмена");
			}
			new plata = floatround((oplata/100*percent)+oplata);
			if(day + amount > 31) return ErrorMessage(playerid,"Максимальное кол-во оплаченных дней 31");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно средств");
			gAirs[airid][airDay] = (gAirs[airid][airDay] - (gAirs[airid][airDay] % 86400)) + (amount * 86400);
			UpdateAirportData(airid+1,"day",gAirs[airid][airDay]);
			GiveMoney(playerid,-(amount*plata),"оплата за аэропорт");

			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(8,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(8,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}

			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = ""W"Оплачено дней:\t\t"O"%d\n\
									"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PI[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""P"Оплата отеля",string,"Хорошо","");
		}
		case dBusRent: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(GetPlayerMoneyEx(playerid) < BUS_PRICE_RENT) return ErrorMessage(playerid,"У Вас недостаточно средств"),RemovePlayerFromVehicleAC(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"bus_id",vehicleid);
			switch(VehicleInfo[GetPlayerVehicleID(playerid)][vBus]) {
				case 1: D(playerid,dBusPrice,2,"Выберите маршрут:","1. АВЛС - Яблочный сад\n2. АВЛС - Оружейный завод\n3. АВЛС - Нефтезавод\n4. АВЛС - ЖДСФ\n5. АВЛС - ЖДЛВ","Выбрать","Отмена");
				case 2: {
					new string[156];
					new model = GetVehicleModel(vehicleid);
					if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
					SetString(gRouteName[5], "ЖДЛВ - АВЛС");
					format(string,sizeof(string),""P"%s\n"W"Стоимость билета: "GREEN"$%i",gRouteName[5],100);
					gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid),1, -1, -1);

					SetPVarInt(playerid,"route",6);
					SetNextBusCP(playerid);
				}
				case 3: {
					new string[156];
					new model = GetVehicleModel(vehicleid);
					if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
					SetString(gRouteName[6], "ЖДСФ - АВЛС");
					format(string,sizeof(string),""P"%s\n"W"Стоимость билета: "GREEN"$%i",gRouteName[6],100);
					gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid),1, -1, -1);

					SetPVarInt(playerid,"route",7);
					SetNextBusCP(playerid);
				}
			}
			GiveMoney(playerid,-BUS_PRICE_RENT,"аренда автобуса");
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			return 1;
		}
		case dBusPrice: {
			if(!response) {
				D(playerid,dBusPrice,2,"Выберите маршрут:","1. АВЛС - Яблочный сад\n2. АВЛС - Оружейный завод\n3. АВЛС - Нефтезавод\n4. АВЛС - ЖДСФ\n5. АВЛС - ЖДЛВ","Выбрать","Отмена");
				return 1;
			}
			SetPVarInt(playerid,"route_item",listitem);
			new route = GetPVarInt(playerid,"route_item");
			DeletePVar(playerid,"route_item");
			new string[156];
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;

			switch(route) {
				case 0: SetString(gRouteName[0], "АВЛС - Яблочный сад");
				case 1: SetString(gRouteName[1], "АВЛС - Оружейный завод");
				case 2: SetString(gRouteName[2], "АВЛС - Нефтезавод");
				case 3: SetString(gRouteName[3], "АВЛС - ЖДСФ");
				case 4: SetString(gRouteName[4], "АВЛС - ЖДЛВ");
			}

			format(string,sizeof(string),""P"%s\n"W"Стоимость билета: "GREEN"$%i",gRouteName[route],100);

			gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid),1, -1, -1);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);

			SetPVarInt(playerid,"route",route + 1);
			SetNextBusCP(playerid);
			SetPVarInt(playerid,"bus_id",vehicleid);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			return 1;
		}
		case D_SPAWN: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SendOk(playerid,"Вы выбрали местом спавна: "W"вокзал");
				case 1: {
					if(!PI[playerid][pHouse] && !PI[playerid][pTempKey] && !PI[playerid][pRoom]) return ErrorMessage(playerid, "У Вас нет дома/номера в отеле");
					SendOk(playerid,"Вы выбрали местом спавна: "W"дом/отель");
				}
				case 2:	{
					if(!PI[playerid][pMember]) return ErrorMessage(playerid, "Вы не состоите в организации");
					if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день в организации");					
					SendOk(playerid,"Вы выбрали местом спавна: "W"организация");
				}
				case 3: {
					if(PI[playerid][pFamily] && !gFamily[PI[playerid][pFamily]-1][famHouse]) return ErrorMessage(playerid,"Дом семьи не выбран");
					SendOk(playerid,"Вы выбрали местом спавна: "W"дом семьи");
				}
			}
			PI[playerid][pSpawn] = listitem;
		}
		case D_MAFIA_CARM: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Вы не в фургоне для развозки наркотиков");
			switch(listitem)
			{
				case 0:
				{
					if(PI[playerid][pMember] == fLCN) SetPlayerCheckpoint(playerid, 490.6504,755.6486,12.0000, 5);
					//else if(PI[playerid][pMember] == fYAKUZA) SetPlayerCheckpoint(playerid, 2626.6301,1766.1650,10.8203, 5);
					else if(PI[playerid][pMember] == fRM) SetPlayerCheckpoint(playerid, 376.6927,1542.4730,12.0004, 5);
					SendOk(playerid, "Место загрузки помечено на радаре");
				}
				case 1: SetPlayerCheckpoint(playerid, -276.8091,1039.9572,12.0666, 5);
				case 2: SetPlayerCheckpoint(playerid, 175.4521,1037.5360,13.5605, 5);
				case 3: SetPlayerCheckpoint(playerid, -668.0544,881.6227,12.0000, 5);
				case 4: SetPlayerCheckpoint(playerid, 324.3399,1865.0732,11.9855, 5);
				case 5:
				{
					//SetPlayerCheckpoint(playerid, 2728.3887,-1946.3820,13.5469, 5);
					ErrorMessage(playerid, "Не доступно");
				}
				case 6: {
					new string_gung[512] = ""P"Банда\t"P"Кол-во наркотиков\t"P"Цена за 1г\n";
					if(FI[fBALLAS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{CC00FF}The Ballas\t"P"%d\t"ORANGE"%d\n",string_gung,FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
					}
					if(FI[fVAGOS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{ffff00}The Vagos\t"P"%d\t"ORANGE"%d\n",string_gung,FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
					}
					if(FI[fGROVE][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{009900}The Grove\t"P"%d\t"ORANGE"%d\n",string_gung,FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
					}
					if(FI[fAZTEC][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{00CCFF}The Aztecas\t"P"%d\t"ORANGE"%d\n",string_gung,FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
					}
					if(FI[fRIFA][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{6666FF}The Rifa\t"P"%d\t"ORANGE"%d\n",string_gung,FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
					}
                    D(playerid,DIALOG_NONE,DSTH,"Заказы",string_gung,"Скрыть","");
                    return 1;
				}
			}
			if(listitem) SendOk(playerid, "Место разгрузки помечено на радаре");
			SetPVarInt(playerid,"DrugsMafiaCar",listitem+1);
			return 1;
		}
		case D_MAFIA_CARM_2: {
			if(!response) return 1;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Вы не в фургоне для развозки наркотиков");
			new drugs = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(FI[PI[playerid][pMember]][fDrugs] - drugs < 0) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\n\
									"NO"*"G" На складе недостаточно наркотиков";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fDrugs],500-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgDrugs] + drugs > 500) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d\n\n\
									"NO"*"G" В фургоне недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fDrugs],500-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
				return 1;
			}
			VG[vehicleid][vgDrugs] += drugs;
			FI[PI[playerid][pMember]][fDrugs]-=drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[PI[playerid][pMember]][fDrugs]);
			new string[128];
			format(string,sizeof(string),"Наркотики успешно загружены. В фургоне доступно: "ORANGE"%d"G" наркотиков",VG[vehicleid][vgDrugs]);
			SendOk(playerid,string);
		}
		case D_MAFIA_CARM_3: {
			if(!response) return DeletePVar(playerid,"sell_gdrugs");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Вы не в фургоне для развозки наркотиков");
			new gung,name[24];
			switch(GetPVarInt(playerid,"sell_gdrugs")) {
				case 1: gung = fBALLAS, name = "The Ballas";
				case 2: gung = fVAGOS, name = "The Vagos";
				case 3: gung = fGROVE, name = "The Grove";
				case 4: gung = fAZTEC, name = "The Aztec";
				case 5: gung = fRIFA, name = "The Rifa";
				default: return ErrorMessage(playerid,"Попробуйте позже");
			}
			if(!FI[gung][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиков");
			new drugs = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(drugs < 100 || drugs > 500) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать %s:\n\n\
										Доступно наркотиков: "ORANGE"%d\n\
										Склад банды: "ORANGE"%d"W"\n\
										"W"Заказ банды: "ORANGE"%d / $%d 1г\n\n\
										"NO"*"G" Продать можно от 100 и до 500 грамм";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy],FI[gung][fDrugsPrice]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgDrugs] - drugs < 0) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать %s:\n\n\
										Доступно наркотиков: "ORANGE"%d\n\
										Склад банды: "ORANGE"%d"W"\n\
										"W"Заказ банды: "ORANGE"%d / $%d 1г\n\n\
										"NO"*"G" В фургоне недостаточно наркотиков";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy],FI[gung][fDrugsPrice]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
				return 1;
			}
			if(FI[gung][fDrugs] + drugs > 10000) {
				static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать %s:\n\n\
										Доступно наркотиков: "ORANGE"%d\n\
										Склад банды: "ORANGE"%d"W"\n\
										"W"Заказ банды: "ORANGE"%d / $%d 1г\n\n\
										"NO"*"G" На склад банды не поместится столько наркотиков";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy],FI[gung][fDrugsPrice]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
				return 1;
			}
			VG[vehicleid][vgDrugs] -= drugs;
			FI[gung][fDrugs]+=drugs;
			UpdateFraction(gung,"Drugs",FI[gung][fDrugs]);

			FI[PI[playerid][pMember]][fBank] += (FI[gung][fDrugsPrice] * drugs);
			UpdateFraction(GetTeamID(playerid),"Bank",FI[PI[playerid][pMember]][fBank]);

			new string[128];
			format(string,sizeof(string),"Наркотики успешно проданы за "ORANGE"%d."G" В фургоне доступно: "ORANGE"%d"G" наркотиков",(FI[gung][fDrugsPrice] * drugs),VG[vehicleid][vgDrugs]);
			SendOk(playerid,string);

			FI[gung][fDrugsBuy]-=drugs;
			UpdateFraction(gung,"DrugsBuy",FI[gung][fDrugsBuy]);
			if(FI[gung][fDrugsBuy] == 0) {
				FI[gung][fDrugsPrice] = 0;
				UpdateFraction(gung,"DrugsPrice",FI[gung][fDrugsPrice]);
			}
			DeletePVar(playerid,"sell_gdrugs");
		}
		case D_ARMY_CARM: {
		    if(!response) return true;
			if(start_work[playerid] && PI[playerid][pMember] == fARMYLV) {}
			else return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозе");
			switch(listitem) {
				case 0: SetPlayerCheckpoint(playerid, -573.9612,489.6738,11.0655, 5);
				case 1: SetPlayerCheckpoint(playerid, 2748.9746,-2456.9094,21.6890, 5);
				case 2: SetPlayerCheckpoint(playerid, 2586.9053,-2435.4187,21.8047, 5);
				case 3: SetPlayerCheckpoint(playerid, 2388.8442,-1867.5363,21.8193, 5);
				case 4: {
					new string[300];
    				format(string, sizeof(string), "\tОрганизация\tБоеприпасы\n"W"Армия ЛВ:\t"P"%d\n"W"Армия СФ:\t"P"%d\n"W"Полиция ЛС:\t"P"%d\n"W"Полиция СФ:\t"P"%d\n"W"Полиция ЛВ:\t"P"%d\n"W"ФБР:\t"P"%d",
					FI[fARMYLV][fMats],FI[fARMYSF][fMats],FI[fLSPD][fMats],FI[fSFPD][fMats],FI[fLVPD][fMats],FI[fFBI][fMats]);
                    D(playerid, DIALOG_NONE, DST,"Склады организаций",string,"Скрыть","");
                    return 1;
				}
			}
			SendOk(playerid, "Место разгрузки помечено на радаре");
			SetPVarInt(playerid,"MatsArmyCar",listitem+1);
			return 1;
		}
		case D_ARMY_CARM_SF: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			switch(listitem) {
				case 0: D(playerid, D_ARMY_CARM_SF_2, DSL, ""P"Загрузка боеприпасов",""P"1."W" Загрузка оружейный завод\n"P"2."W" Загрузка склад Army SF", "Выбрать", "Отмена");
				case 1:
				{
				    //D(playerid, D_ARMY_CARM_SF_3, DSL, ""P"Разгрузка боеприпасов",""P"1."W" Разгрузка Army SF\n"P"2."W" Разгрузка Army LV", "Выбрать", "Отмена");
				    D(playerid, D_ARMY_CARM_SF_3, DSL, ""P"Разгрузка боеприпасов",""P"1."W" Разгрузка Army SF", "Выбрать", "Отмена");
				}
			}
			return 1;
		}
		case D_ARMY_CARM_SF_2: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, 2902.6968,-1288.8588,1.3119, 5);
					SendOk(playerid, "Место загрузки (оружейный завод) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",5);
				}
				case 1: {
					SetPlayerCheckpoint(playerid, 756.1727,-419.0354,4.0000, 5);
					SendOk(playerid, "Место загрузки (склад Army SF) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",6);
				}
			}
			return 1;
		}
		case D_ARMY_CARM_SF_3: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, 756.1727,-419.0354,4.0000, 5);
					SendOk(playerid, "Место разгрузки (Army SF) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",7);
				}
				case 1:
				{
				    /*
					SetPlayerCheckpoint(playerid, 310.7923,1801.0048,17.6406, 5);
					SendOk(playerid, "Место загрузки (Army LV) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",8);
					*/
				}
			}
			return 1;
		}
		case D_ARMY_CARM_SF_4: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(zavodsklad - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d\n\
									"NO"*"G" На оружейном складе недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgAmount][0] + mats > 30000) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d\n\
									"NO"*"G" В матолёте недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			VG[vehicleid][vgAmount][0] += mats;
			zavodsklad -= mats;
			UpdateOtherData("gun_mats",zavodsklad);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно загружены. В матолёте доступно: "ORANGE"%d"G" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case D_ARMY_CARM_SF_5: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(FI[fARMYSF][fMats] - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d\n\
									"NO"*"G" На складе Army SF недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[fARMYSF][fMats],30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_5, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			if(VG[vehicleid][vgAmount][0] + mats > 30000) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d\n\
									"NO"*"G" В матолёте недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[fARMYSF][fMats],30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_5, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				return 1;
			}
			VG[vehicleid][vgAmount][0] += mats;
			FI[fARMYSF][fMats] -= mats;
			UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно загружены. В матолёте доступно: "ORANGE"%d"G" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case D_ARMY_CARM_SF_6: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(VG[vehicleid][vgAmount][0] - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d\n\
									"NO"*"G" В матолёте недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYSF][fMats]);
				D(playerid, D_ARMY_CARM_SF_6, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			if(FI[fARMYSF][fMats] + mats > 1000000) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
										Доступно боеприпасов: "ORANGE"%d\n\
										"W"На склад поместится: "ORANGE"%d\n\
										"NO"*"G" На складе недосаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYSF][fMats]);
				D(playerid, D_ARMY_CARM_SF_6, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			VG[vehicleid][vgAmount][0] -= mats;
			FI[fARMYSF][fMats] += mats;
			UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно разгружены. В матолёте доступно: "ORANGE"%d"G" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case D_ARMY_CARM_SF_7: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Вы не в матовозке");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(VG[vehicleid][vgAmount][0] - mats < 0) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d\n\
									"NO"*"G" В матолёте недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLV][fMats]);
				D(playerid, D_ARMY_CARM_SF_7, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			if(FI[fARMYLV][fMats] + mats > 1000000) {
				static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d\n\
									"NO"*"G" На складе недосаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLV][fMats]);
				D(playerid, D_ARMY_CARM_SF_7, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			VG[vehicleid][vgAmount][0] -= mats;
			FI[fARMYLV][fMats] += mats;
			UpdateFraction(fARMYLV,"Mats",FI[fARMYLV][fMats]);
			new string[128];
			format(string,sizeof(string),"Боеприпасы успешно разгружены. В матолёте доступно: "ORANGE"%d"G" боеприпасов",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case dProdList: {
			if(!response) return 1;
			new veh = GetPlayerVehicleID(playerid);
			new car = GetVehicleModel(veh);
			switch(listitem) {
				case 0: {
					//if(GetVehicleModel(veh) == 403 && !GetVehicleTrailer(veh)) return ErrorMessage(playerid,"У Вас нет цистерны с топливом");
					new string[3600];
					strcat(string, ""YELLOW"№\t"GREEN"Название бизнеса\t"GREEN"Цена за ед продукта\t"GREEN"Требуется продуктов\n");

					new count_est = -1;
					for(new i = 1; i<gBusinessCount; i++) {
						if(!gBusiness[i][bizzOwnerID]) continue;
						if(gBusiness[i][bizzProdOrder] <= 0) continue;
						//if(count_est >= 30) break;
						switch(car) {
							case 456: if(gBusiness[i][bizzType] == 7) continue;//24-7
							case 403: if(gBusiness[i][bizzType] != 7) continue;//АЗС
						}
						format(string,sizeof(string),"%s%d\t%s\t%d\t%d\n",string,i+1,gBusiness[i][bizzName],gBusiness[i][bizzProdOrderPrice],gBusiness[i][bizzProdOrder]);
						count_est++;
					}

					if(count_est == -1) return ErrorMessage(playerid,"Бизнесмены не оставляли заявки на доставку продуктов");
					D(playerid,dProdPut,DSTH,"Бизнес",string,"Выбрать","Отмена");
				} 
				case 1: {
					switch(car) {
						case 456: EnableGPSForPlayer(playerid, 1964.0625,-2605.9001,11.0764);
						case 403: EnableGPSForPlayer(playerid, 1964.0625,-2605.9001,11.0764);
					}
				}
			}
		}
		case dProdPut: {
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return 1;
			new veh = GetPlayerVehicleID(playerid);
			new car = GetVehicleModel(veh);
			if(GetVehicleModel(veh) == 403 && !GetVehicleTrailer(veh)) return ErrorMessage(playerid,"У Вас нет цистерны с топливом");
			if(!response) return 1;
			prod_id[playerid] = strval(inputtext);
			new biz = prod_id[playerid]-1;
			
			if(!GetPVarInt(playerid,"count_prod")) return ErrorMessage(playerid,"В Вашей машине отсутствуют продукты");
			switch(car) {
				case 456: if(gBusiness[biz][bizzType] == 7) return ErrorMessage(playerid,"Неверно указан номер бизнеса");
				case 403: if(gBusiness[biz][bizzType] != 7) return ErrorMessage(playerid,"Неверно указан номер бизнеса");
			}
			new string[256];
			format(string, sizeof(string), ""W"Бизнес: "O"%s\n"W"Цена за 1 продукт: "GREEN"$%d\n"W"Требуется продуктов: "O"%d", gBusiness[biz][bizzName],gBusiness[biz][bizzProdOrderPrice],gBusiness[biz][bizzProdOrder]);
			D(playerid,DIALOG_NONE,DSM, ""P"Бизнес",string,"Закрыть","");

			format(string,144,""W"%s: "GREEN"%d/2000\n"W"Бизнес: "GREEN"%s", (car == 456) ? ("Продукты") : ("Бензин"), GetPVarInt(playerid,"count_prod"),gBusiness[biz][bizzName]);
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],COLOR_BLUE,string);

			SetPVarInt(playerid,"prod_id", biz + 1);
			if(gBusiness[biz][bizzID] != 20) {
				gPlayerProdCP[playerid] = CreateDynamicCP(gBusiness[biz][bizzX] + (3.5 * floatsin(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzY] + (3.5 * floatcos(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzZ],8.0,-1,-1,playerid,100.0);
				EnableGPSForPlayer(playerid, gBusiness[biz][bizzX] + (3.5 * floatsin(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzY] + (3.5 * floatcos(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzZ]);
			}
			else {
				gPlayerProdCP[playerid] = CreateDynamicCP(693.7745,1948.5906,5.5432,8.0,-1,-1,playerid,100.0);
				EnableGPSForPlayer(playerid, 693.7745,1948.5906,5.5432);
			}
			return 1;
		}
		case D_BUKSIR: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно денег для аренды буксира");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			SendOk(playerid, "Для просмотра доступных заказов, введите - "W"/repairs");
			GiveMoney(playerid,-500,"аренда буксира");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"mehjob", GetPlayerVehicleID(playerid));
			PlayerMehText[playerid] = CreateDynamic3DTextLabel(""G"Топлива нет",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid),1, -1, -1);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerMehText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			return 1;
		}
		case dProdRent: {
			if(GetPlayerState(playerid) != 2) return 1;
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостаточно средств"),RemovePlayerFromVehicleAC(playerid);
			GiveMoney(playerid,-500,"аренда транспорта(развозчики)");
			new veh = GetPlayerVehicleID(playerid);
			DeletePVar(playerid,"prod_id");
			SetPVarInt(playerid,"prod_vehicle_id",veh);
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
				new string[128];
				format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid,"count_prod"));
				gPlayerProdText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid),1, -1, -1);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			}
			SendOk(playerid,"Транспорт для развозки продуктов/бензина арендован. Управление заказами - "W"/prods");
			return 1;
		}
		case dEatRent: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда развозчика еды");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"eatjob", GetPlayerVehicleID(playerid));
			PlayerEatText[playerid] = CreateDynamic3DTextLabel(""G"Хот-догов: "P"0 ед.",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid),1, -1, -1);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerEatText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			return 1;
		}
		case dProdGet: {
			if(!response) return 1;
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return 1;
			if(strval(inputtext) < 1000 || strval(inputtext) > 2000) {
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
					return D(playerid,dProdGet,DSI, ""P"Покупка бензина","\n\n"W"Введите количество литров для покупки:\nПримечание: "ORANGE"1"W" литр = "GREEN"$1\n\n"NO"*"G" От 1000 до 2000\n\n","Купить","Отмена");
				}
				else return D(playerid,dProdGet,DSI, ""P"Покупка продуктов","\n\n"W"Введите количество продуктов для покупки:\nПримечание: "ORANGE"1"W" продукт = "GREEN"$1\n\n"NO"*"G" От 1000 до 2000\n\n","Купить","Отмена");
			}
			if(GetPVarInt(playerid,"count_prod") + strval(inputtext) > 2000) {
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
					return D(playerid,dProdGet,DSI, ""P"Покупка бензина","\n\n"W"Введите количество литров для покупки:\nПримечание: "ORANGE"1"W" литр = "GREEN"$1\n\n"NO"*"G" В Вашу машину столько не влезет. Максимум 2000\n\n","Купить","Отмена");
				}
				else return D(playerid,dProdGet,DSI, ""P"Покупка продуктов","\n\n"W"Введите количество продуктов для покупки:\nПримечание: "ORANGE"1"W" продукт = "GREEN"$1\n\n"NO"*"G" В Вашу машину столько не влезет. Максимум 2000\n\n","Купить","Отмена");
			}
			if(GetPlayerMoneyEx(playerid) < strval(inputtext)) return ErrorMessage(playerid,"Недостаточно средств");

			GiveMoney(playerid,-strval(inputtext),"покупка продуктов(развозчик)");
			new string[128];
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
				format(string,sizeof(string),"Вы купили: "P"%d"G" ед. продуктов за "ORANGE"$%d"G". Ожидайте загрузку продуктов в автомобиль",strval(inputtext),strval(inputtext));
				SendUse(playerid,string);
				SetTimerEx("LoadProd",0,0,"i",playerid);
			}
			else {
				format(string,sizeof(string),"Вы купили: "P"%d"G" л. бензина за "ORANGE"$%d"G". Цистерна с бензином уже готова к транспортировке",strval(inputtext),strval(inputtext));
				SendUse(playerid,string);
				SetTimerEx("LoadProd",0,0,"i",playerid);
			}
			SetPVarInt(playerid,"count_prod2", strval(inputtext));
			return 1;
		}
		case dProdSell: {
			if(!response) return 1;
			new bizid = GetPVarInt(playerid,"prod_id")-1;
			new prod = GetPVarInt(playerid,"count_prod");
			new price = strval(inputtext);
			new string[286],str[10];
			switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
				case 456: str = "продуктов";
				case 403: str = "топлива";
			}
			if(price < 1 || price > 2000) {
				format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
											"W"Требуется %s: "O"%d\n\
											"W"Доступно для разгрузки: "O"%d\n\
											"W"Введите кол-во %s для продажи:\n\n\
											"NO"*"G" От 1 ед до 2000 ед",
											gBusiness[bizid][bizzName],str,gBusiness[bizid][bizzProdOrder],prod,str);
				return D(playerid,dProdSell,DSI, ""P"Доставка",string,"Продать","Отмена");
			}
			if(gBusiness[bizid][bizzProdOrder] < price) {
				format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
											"W"Требуется %s: "O"%d\n\
											"W"Доступно для разгрузки: "O"%d\n\
											"W"Введите кол-во %s для продажи:\n\n\
											"NO"*"G" Владелец бизнеса не заказывал столько %s"
											,gBusiness[bizid][bizzName],str,gBusiness[bizid][bizzProdOrder],prod,str,str);
				return D(playerid,dProdSell,DSI, ""P"Доставка",string,"Продать","Отмена");
			}
			if(prod < price) {
				format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
											"W"Требуется %s: "O"%d\n\
											"W"Доступно для разгрузки: "O"%d\n\
											"W"Введите кол-во %s для продажи:\n\n\
											"NO"*"G" В Вашей машине нет столько %s"
											,gBusiness[bizid][bizzName],str,gBusiness[bizid][bizzProdOrder],prod,gBusiness[bizid][bizzProdOrder],str,str);
				return D(playerid,dProdSell,DSI, ""P"Доставка",string,"Продать","Отмена");
			}

			GiveMoney(playerid,gBusiness[bizid][bizzProdOrderPrice] * price,"оплата развозчику");

			gBusiness[bizid][bizzProdOrder] -= price;
			gBusiness[bizid][bizzProduct] += price;			

			format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
											"W"Продуктов доставлено: "O"%d\n\
											"W"Требуется продуктов: "O"%d\n\
											"W"Заработано: "GREEN"$%d",gBusiness[bizid][bizzName],price,gBusiness[bizid][bizzProdOrder],gBusiness[bizid][bizzProdOrderPrice] * price);
			D(playerid,DIALOG_NONE,DSM, ""P"Доставлено",string,"Закрыть","");

			if(gBusiness[bizid][bizzProdOrder] == 0) gBusiness[bizid][bizzProdOrderPrice] = 0;
			SaveBusiness(bizid);

			DeletePVar(playerid,"prod_id");
			SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") - price);

			format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid,"count_prod"));
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],-1,string);
			UpdateBusinessText(bizid);

			if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
			return 1;
		}
		case D_AUTOSALON:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					switch(GetPlayerVirtualWorld(playerid))
					{
						case 1: SetPVarInt(playerid,"sellcarClass",2), BuySalonType[playerid] = 0;
						case 2: SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 1;
						case 3: SetPVarInt(playerid,"sellcarClass",4), BuySalonType[playerid] = 2;
						case 4: SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 3;
					}
					new vw = GetPVarInt(playerid,"sellcarClass");
					SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, vw, 82);
     				SetPlayerFacingAngle(playerid,182.0258);
					SetCameraBehindPlayer(playerid);
					
					BuySalonStatus[playerid] = 0;
					BuySalonWorld[playerid] = vw;
				}
				case 1:
				{
					new id = TI[playerid][tSelectedBusinessID];
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ], 0, 0);
					SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
		case D_AUTOSALON_BUY:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, BuySalonWorld[playerid], 82);
     				SetPlayerFacingAngle(playerid,182.0258);
					SetCameraBehindPlayer(playerid);

					BuySalonStatus[playerid] = 0;
					CarSalonID[playerid] = -1;
				}
				case 1:
				{
					new id = TI[playerid][tSelectedBusinessID];
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ], 0, 0);
					SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
        case D_AUTOSALON_CAR:
		{
			if(!response) return 1;
			
			new strings[4096], autosalonstr[1024], price, cars;
			
			strings = "Название транспорта\tЦена\n";
			
			for(new i; i < sizeof(autosaloncar); i ++)
			{
			    //if(autosaloncar[i][autoClass] != BuySalonType[playerid]) continue;
			    if(autosaloncar[i][autoWorld] != GetPlayerVirtualWorld(playerid)) continue;
			    
			    ShowCar[playerid][cars] = i;
			    
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(gTransport[autosaloncar[i][autoCars]-400][trPrice]/100*vip_status[PI[playerid][pVips]][vip_buycar]);
					price = gTransport[autosaloncar[i][autoCars]-400][trPrice]-seller;
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(gTransport[autosaloncar[i][autoCars]-400][trPrice]/100*BonusInfo[act_buycar]);
						price = gTransport[autosaloncar[i][autoCars]-400][trPrice]-seller;
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(gTransport[autosaloncar[i][autoCars]-400][trPrice]/100*BonusInfo[act_buycar]);
						price = gTransport[autosaloncar[i][autoCars]-400][trPrice]-seller;
					}
				    else price = gTransport[autosaloncar[i][autoCars]-400][trPrice];
				}
			    
				format(strings,sizeof(strings),"%s%s[%d]\t%d руб.\n", strings, gTransport[autosaloncar[i][autoCars]-400][trName], autosaloncar[i][autoCars], price);
				cars ++;
			}
			format(autosalonstr, sizeof(autosalonstr), ""P"Список транспортов автосалона №%d", TI[playerid][tSelectedBusinessID]);
			D(playerid,D_AUTOSALON_CAR_NEXT,DSTH,autosalonstr,strings,"Перейти","Отмена");
		}
		case D_AUTOSALON_CAR_NEXT:
		{
			if(!response) return 1;
			
			new carid = ShowCar[playerid][listitem];
   			CarSalonID[playerid] = carid;
   			
			switch(GetPlayerVirtualWorld(playerid))
			{
				case 1: SetPlayerPosAC(playerid, 2226.8894,770.8658,1116.8480, CarSalonID[playerid]+50, 82);
				case 2: SetPlayerPosAC(playerid, 2226.8894,770.8658,1116.8480, CarSalonID[playerid]+50, 82);
				case 3: SetPlayerPosAC(playerid, 2226.8894,770.8658,1116.8480, CarSalonID[playerid]+50, 82);
				case 4: SetPlayerPosAC(playerid, 2226.8894,770.8658,1116.8480, CarSalonID[playerid]+50, 82);
				case 5: SetPlayerPosAC(playerid, 2226.8894,770.8658,1116.8480, CarSalonID[playerid]+50, 82);
				case 6: SetPlayerPosAC(playerid, 2226.8894,770.8658,1116.8480, CarSalonID[playerid]+50, 82);
			}
			SetPlayerFacingAngle(playerid,180.1976);
			SetCameraBehindPlayer(playerid);

			BuySalonStatus[playerid] = 1;
		}
		case D_AUTOSALON_MOTO:{
			if(!response) return 1;
			switch(listitem){
				case 0:
				{
					new id = TI[playerid][tSelectedBusinessID];
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ], 0, 0);
					SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
		case D_BUY_CAR: {
			if(!response) return true;
			new string[128];
			format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
			D(playerid,D_BUY_CAR_2,DSL,""P"Автосалон",string,"Купить","Закрыть");
		}
		case D_BUY_CAR_2: {
			if(!response) return 1;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			new carid = GetPVarInt(playerid,"car_number");
			DeletePVar(playerid,"car_number");
			new price = gTransport[carid][trPrice];
			if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет дома/номера в отеле");
			if(gPlayerCars[playerid][carModel][listitem] != 481) return ErrorMessage(playerid,"Для начала продайте автомобиль на данном слоте");

			new prices;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(price/100*vip_status[PI[playerid][pVips]][vip_buycar]);
				if(PI[playerid][pCash] < (price-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
				GiveMoney(playerid,-(price-seller),"покупка авто");
				prices = (price-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(price/100*BonusInfo[act_buycar]);
					if(PI[playerid][pCash] < (price-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
					GiveMoney(playerid,-(price-seller),"покупка авто");
					prices = (price-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(price/100*BonusInfo[act_buycar]);
					if(PI[playerid][pCash] < (price-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
					GiveMoney(playerid,-(price-seller),"покупка авто");
					prices = (price-seller);
				}
			    else {
			    	if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно средств");
			    	GiveMoney(playerid,-price,"покупка авто");
			    	prices = price;
			    }
			}

			gPlayerCars[playerid][carModel][listitem] = gTransport[carid][trModel];
			gPlayerCars[playerid][carFuel][listitem] = gTransport[carid][trTank];
			gPlayerCars[playerid][carDrived][listitem] = 0;
			save_car(playerid,listitem);
			loading_cars(playerid,listitem);

			if(gBusiness[businessid][bizzProduct]-gTransport[carid][trProds] > 0) {
				gBusiness[businessid][bizzProduct] -= gTransport[carid][trProds];
				switch(GetPVarInt(playerid,"sellcarClass")) {
					case 1: bizz_pay(businessid,floatround(price * 0.095));//LS
					case 3: bizz_pay(businessid,floatround(price * 0.095));//SF
					case 5: bizz_pay(businessid,floatround(price * 0.0495));//LV
					case 6: bizz_pay(businessid,floatround(price * 0.075));//Мото
				}
			}
			UpdateBusinessText(businessid);

			new string[200];
			format(string,sizeof(string),""W"Поздравляем с покупкой автомобиля: "P"%s\n\n\
										"W"Автомобиль куплен за: "GREEN"$%d\n\
										"W"И доставлен к Вашему дому",gTransport[carid][trName],prices);
			D(playerid,DIALOG_NONE,DSM, ""P"Автосалон",string,"Спасибо","");
		}
		case D_MEDCARD:{
			if(!response) return 1;

			new price;
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(1000/100*BonusInfo[act_medcard]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств. Стоимость медкарты - $1.000");
				price = (1000-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(1000/100*BonusInfo[act_medcard]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств. Стоимость медкарты - $1.000");
				price = (1000-seller);
			}
		    else price = 1000;

			use_medcards(playerid);
			GiveMoney(playerid,-price,"получение мед карты");
			FI[fWHITEHOUSE][fBank] += price;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
		}
		case D_MEDSEX:{
			if(!response) return 1;
			new price;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(50000/100*vip_status[PI[playerid][pVips]][vip_changesex]);
				price = (50000-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(50000/100*BonusInfo[act_changesex]);
					price = (50000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(50000/100*BonusInfo[act_changesex]);
					price = (50000-seller);
				}
			    else price = 50000;
			}
		    if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег для операции. Стоимость операции - $50.000");
		    use_medsex(playerid);
			GiveMoney(playerid,-price,"смена пола");
			FI[fWHITEHOUSE][fBank] += price;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
		}
		case D_SU: {
			if(!response) return 1;
			SetPVarInt(playerid,"su_listitem",listitem);
			D(playerid,D_SU_2,DSL,""P"Преступление",suspect_player[listitem][suspect_name_reason],"Выбрать","Назад");
			return 1;
		}
		case D_SU_2: {
			new params[2];
			params[1] = GetPVarInt(playerid,"su_listitem");
			new string[1024]; 
			if(!response || suspect_player[params[1]][suspect_level][listitem] == -1) {
				strcat(string, ""W"");
				for(new i=0; i<13; i++) {
					format(string,sizeof(string),"%s%s\n",string,suspect_player[i][suspect_name_folder]);
				}
				D(playerid,D_SU,DSL,""P"Преступление",string,"Выбрать","Закрыть");
				DeletePVar(playerid,"su_listitem");
				return 1;
			}
			params[0] = GetPVarInt(playerid,"su_player");
			format(string,128,"%s объявил Вас в розыск. Причина: %s",player_name[playerid],(inputtext));
			SendClientMessage(params[0],CBADINFO,string);
			PI[params[0]][pSearch] += suspect_player[params[1]][suspect_level][listitem];
			SetPlayerCriminal(params[0],player_name[playerid], (inputtext));
			format(string,220,"[Внимание] %s объявлен(а) в розыск [%d/6]. Обвинитель: %s. Причина: %s",player_name[params[0]],PI[params[0]][pSearch],player_name[playerid],(inputtext));
			SendTeamMessage(CDEPARTMENT,string);
			SetPlayerWantedLevel(params[0], PI[params[0]][pSearch]);
			DeletePVar(playerid,"su_player");
			DeletePVar(playerid,"su_listitem");
			return 1;
		}
		case D_TAZER: {
			if(!response ) return 1;
			for(new i; i <= 11; i++) {
				new gunid, ammo, storeslot = -1,string[200];
				GetPlayerWeaponData(playerid, i, gunid,ammo);
				new gun_text[32];
				GetWeaponName(gunid,gun_text,32);
				switch(gunid) {
					case 24,25: if(strfind(inputtext,gun_text) != -1) storeslot ++;
				}
				if(!gunid || !ammo || storeslot == -1) continue;
				if(storeslot != -1) {
					format(string,sizeof(string),""P"%s"G" успешно заряжено парализующими патронами [2 шт]",gun_text);
					SendUse(playerid,string);

					format(string, sizeof(string),"заряжает %s парализующими патронами",gun_text);
					MeAction(playerid,string);

					TI[playerid][tTazers][0] = 2;
					TI[playerid][tTazers][1] = gunid;
					break;
				}
			}
			return 1;
		}
		case dInviteSkin: {
			new string[156];
			format(string, sizeof(string), ""P"%s"G" предложил Вам вступить в организацию "ORANGE"%s",player_name[playerid],FI[PI[playerid][pMember]][fName]);
			SendUse(GetPVarInt(playerid,"invkot"), string);
			SendClientMessage(GetPVarInt(playerid,"invkot"), COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string),"Вы предложили "P"%s"G" вступить в организацию "ORANGE"%s",player_name[GetPVarInt(playerid,"invkot")],FI[PI[playerid][pMember]][fName]);
			SendUse(playerid, string);
	
	        SetPVarInt(GetPVarInt(playerid,"invkot"),"invstat",GetPVarInt(playerid,"invkot"));
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invinv",playerid);
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invskin",gFractionSkin[PI[playerid][pMember]][listitem]);
	
			DeletePVar(playerid, "invkot");
		}
		case dFractionSkin: {
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"params[0]");
			if(!IsPlayerConnected(actplayerid) || PI[actplayerid][pMember] != PI[playerid][pMember]) return 1;
			new fractionid = PI[actplayerid][pMember];
			new skinid = gFractionSkin[fractionid][listitem];
			if(skinid == PI[actplayerid][pFracSkin]) return 1;
			new mes[213];
			format(mes,sizeof(mes),"Ваша внешность была изменена лидером организации "P"%s[%d]",player_name[playerid],playerid);
			SendUse(actplayerid,mes);
			format(mes,sizeof(mes),"Вы изменили внешность игрока "P"%s[%d]",player_name[actplayerid],actplayerid);
			SendUse(playerid,mes);
			UpdatePlayerData(actplayerid,"pModel",skinid);
			PI[actplayerid][pFracSkin] = skinid;
			if(start_work[actplayerid]) A_SetPlayerSkin(actplayerid,skinid);
		}
		case dRank: {
			if(!response) return 1;
			if(listitem == -1) return 1;
			if(PI[playerid][pRank] <= listitem) return ErrorMessage(playerid, "Ваш ранг недостаточен");
			new rank_id = GetPVarInt(playerid,"id_giverank"),string[128];

			format(string,sizeof(string),"Вы повысили/понизили "P"%s"G" до ранга "ORANGE"%s",player_name[rank_id],GetRankName(PI[playerid][pMember],listitem+1));
			SendUse(playerid,string);

			format(string,sizeof(string),"Вас повысил/понизил "P"%s"G" до ранга "ORANGE"%s",player_name[playerid],GetRankName(PI[playerid][pMember],listitem+1));
			SendUse(rank_id,string);

			PI[rank_id][pRank] = listitem + 1;
			UpdatePlayerData(rank_id,"pRank",PI[rank_id][pRank]);

			new rangs[4];
			format(rangs,sizeof(rangs),"%d",PI[rank_id][pRank]);
			FracLog(LOGS_RANK,player_name[playerid],player_name[rank_id],rangs);
			DeletePVar(playerid,"id_giverank");
			return 1;
		}
		case D_CALL_SERVICESS: {
			if(!response) return 1;
			if(GetPlayerVirtualWorld(playerid) != 0) return ErrorMessage(playerid,"Для вызова служб спасения выйдите из помещения");
			new Float:pos[3];
            GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
			switch(listitem) {
				case 0: {
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!IsACop(i) && !start_work[playerid]) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return ErrorMessage(playerid,"Диспетчер: в данный момент, нет полицейских поблизости");
					SendOk(playerid, "Диспетчер: Ваш вызов принят, ожидайте...");
					SetPVarInt(playerid,"call_police",1);
				}
				case 1: {
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!IsAMedic(i) && !start_work[playerid]) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return ErrorMessage(playerid,"Диспетчер: в данный момент, нет медиков поблизости");
					SendOk(playerid, "Диспетчер: Ваш вызов принят, ожидайте...");
					SetPVarInt(playerid,"call_medics",1);
				}
				case 2: {
					new online = 0;
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(PI[i][pJob] != 2) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return ErrorMessage(playerid,"Диспетчер: в данный момент, нет механиков поблизости");
					SendOk(playerid, "Диспетчер: Ваш вызов принят, ожидайте...");
					SetPVarInt(playerid,"call_mechanics",1);
				}
			}
		}
		case D_TOW: {
			if(!response) return true;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return true;
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return ErrorMessage(playerid,"Ошибка 125");
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) return ErrorMessage(playerid,"Вы далеко друг от друга");			
			RemovePlayerFromVehicleAC(playerid);			
			new vehicleid = TI[offer][tArendaCar];
			SetTimerEx("AttachTrailerToVehicleEx",3000,false,"ii",trailer,vehicleid);
			SetPVarInt(playerid,"towvid",vehicleid);
			SetPVarInt(playerid,"towactvid",trailer);
			SendOk(playerid,"Т.С. будет прицеплено через 3 секунды. Чтобы отцепить, используйте "W"/untow");
		}
		case D_MAKEGUN: {
			if(!response) return 1;
			new needgun = MakeGunData[listitem][mgunamount];
			new bool:noneedgun;
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == MakeGunData[listitem][mgunid]) {noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break;}
			}
			if(PI[playerid][pMats] < needgun && !noneedgun) {
				new string[64];
				format(string, sizeof(string), "Вам нужно %d ед. оружия для сборки этого оружия",needgun);
				ErrorMessage(playerid,string);
				return 1;
			}
			D(playerid,D_MAKEGUN_2,DSI, ""P"Сборка оружия","\n\n"W"Сколько патронов вы хотите использовать для этого оружия?\n\n","Собрать","Отмена");
			SetPVarInt(playerid,"makegun_listitem",listitem);
			return 1;
		}
		case D_MAKEGUN_2: {
			if(!response) return 1;
			new ammos = strval(inputtext);
			new listitem_gun = GetPVarInt(playerid,"makegun_listitem");
			if(ammos < 1 || ammos > 200) return D(playerid,D_MAKEGUN_2,DSI, ""P"Сборка оружия","\n\n"W"Сколько патронов вы хотите использовать для этого оружия?\n\n"NO"*"G" От 1 до 200 патронов\n\n","Собрать","Отмена");
			if(PI[playerid][pMats]<(ammos+MakeGunData[listitem_gun][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid, "Недостаточно боеприпасов");
			if(PI[playerid][pMats]<ammos && GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid, "Недостаточно боеприпасов");
			DeletePVar(playerid,"makegun_listitem");
			MeAction(playerid,"собрал(а) оружие");
			if(!GetPVarInt(playerid,"noneedgun")) PI[playerid][pMats] -= MakeGunData[listitem_gun][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
		
			PI[playerid][pMats] -= ammos;
			UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);

			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos*BonusInfo[act_gun]);
			else if(BonusInfo[act_select] == 2) AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos*BonusInfo[act_gun]);
		    else AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos);
			return 1;
		}
		case D_BIZWAR: {
			if(response) {
				D(playerid, D_BIZWAR_LIST, DSL, ""P"Выбор места", ""P"1."W" Метеостанция\n"P"2."W" Деревня СВ-ВВС\n"P"3."W" Каменная деревня\n"P"4."W" Порт СФ\n"P"5."W" Вестоун\n"P"6."W" Угольная шахта\n"P"7."W" Порт ЛС", "Выбрать", "Отмена");
			}
			else {
				ErrorMessage(playerid, "Вы отменили захват");
				DeletePVar(playerid, "bizwar_id");
			}
			return 1;
		}
		case D_BIZWAR_LIST: {
			if(response) {
				new i = GetPVarInt(playerid,"bizwar_id");
				DeletePVar(playerid, "bizwar_id");

				if(BizWarTime[0] > 0 || BizWarTime[1] > 0) return ErrorMessage(playerid, "Война за бизнес уже идет");
				if(BizHourTime > 0) return ErrorMessage(playerid, "Стрелы за бизнес проходят 1 раз в час");
				if(PI[playerid][pMember] == gBusiness[i][bizzMafia]) return ErrorMessage(playerid,"Вы не можете захватить собственный бизнес");
				if(!IsPlayerInBandOnline(gBusiness[i][bizzMafia])) return ErrorMessage(playerid, "Мафия на которую Вы собираетесь напасть нет в сети / Меньше трёх человек");
				new gang1 = -1;
				switch(PI[playerid][pMember]) {
					case fLCN: gang1 = MOROZ_LCN;
					case fYAKUZA: gang1 = MOROZ_YAKUZA;
					case fRM: gang1 = MOROZ_RM;
				}
				if(gang1 != -1) {
					if(fracmoroz[gang1] > unix) return ErrorMessage(playerid, "Ваша мафия не может принимать участия в войнах. (заморожена администратором)");
				}
				war_gangzone = listitem;
				biz_war_gangzone = GangZoneCreate(mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3]);
				GangZoneShowForAll(biz_war_gangzone, gFractionSpawn[MZInfo[bFrakVlad]][fracColor]);

				BizWarTime[0] = 60*15;
				MZInfo[bNapad] = PI[playerid][pMember];
				MZInfo[bFrakVlad] = gBusiness[i][bizzMafia];
				MZInfo[bBiz] = i;
				MZInfo[bCountDead][MZInfo[bNapad]] = 0;
				MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;

				GangZoneFlashForAll(biz_war_gangzone, gFractionSpawn[MZInfo[bNapad]][fracColor]);

				new strela[32];
				switch(war_gangzone) {
					case 0: strela = "Метеостанция";
					case 1: strela = "Деревня СВ-ВВС";
					case 2: strela = "Каменная деревня";
					case 3: strela = "Порт СФ";
					case 4: strela = "Вестоун";
					case 5: strela = "Угольная шахта";
					case 6: strela = "Порт ЛС";
				}
				new string[186];
				format(string,sizeof(string), "%s забила стрелу Вашей мафии за бизнес %s. Место встречи: %s", GetMN(PI[playerid][pMember]),gBusiness[i][bizzName],strela);
				SendFamilyMessage(gBusiness[i][bizzMafia],0xFF0000FF,string);
				SendFamilyMessage(gBusiness[i][bizzMafia],0xFF0000FF,"Встреча состоится через 15 минут");
				format(string,sizeof(string),"Начал захват бизнеса: %s",player_name[playerid]);
				SendFamilyMessage(gBusiness[i][bizzMafia],-1,string);

				format(string,sizeof(string), "Ваша мафия забила стрелу %s за бизнес %s. Место встречи: %s", GetMN(gBusiness[i][bizzMafia]),gBusiness[i][bizzName],strela);
				SendFamilyMessage(PI[playerid][pMember],0xFF0000FF,string);
				SendFamilyMessage(PI[playerid][pMember],0xFF0000FF,"Встреча состоится через 15 минут");
				format(string,sizeof(string),"Начал захват бизнеса: %s",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember],-1,string);
			}
			else {
				ErrorMessage(playerid, "Вы отменили захват");
				DeletePVar(playerid, "bizwar_id");
			}
			return 1;
		}
		case D_ANIM: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
				case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
				case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
				case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
				case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
				case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
				case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
				case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
				case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
				case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
				case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
				case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
				case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
				case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
				case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
				case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
				case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
				case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
				case 18: GoAnim(playerid,"PED","handsup",4.1,1,0,0,0,0,0);
				case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
				case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
				case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
				case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
				case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
				case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
				case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
				case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
				case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
				case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
				case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
				case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
				case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
				case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
				case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
				case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
				case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
				case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
				case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
				case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
				case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
				case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
				case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
				case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
				case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
				case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
				case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
				case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
				case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
				case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
				case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
				case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
				case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
				case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
				case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
				case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
				case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
				case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
				case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
				case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
				case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
				case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
				case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
				case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
				case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
			}
			SetPVarInt(playerid,"Animation", 2);
			TextDrawShowForPlayer(playerid, AnimDraw);
			return 1;
		}
		case D_TAKE: {
			if(!response) return DeletePVar(playerid,"takelic");
			new acter = GetPVarInt(playerid,"takelic");
			if(!IsPlayerStream(10.0, playerid, acter)) return ErrorMessage(playerid, "Игрок не рядом с Вами");
			if(listitem < 4) {
				if(!lic[acter][listitem]) return ErrorMessage(playerid,"У игрока нет этой лицензии");
			}
			new string[156];
			if(listitem >= 4) {
				switch(listitem) {
					case 4: {
						if(!PI[acter][pDrugs]) return ErrorMessage(playerid,"У игрока нет наркотиков");
						format(string, sizeof(string), "Вы изъяли у "P"%s"G" наркотики", player_name[acter]);
						SendUse(playerid, string);
						format(string, sizeof(string), "Сотрудник "P"%s"G" изъял у Вас наркотики", player_name[playerid]);
						SendUse(acter, string);
						format(string, sizeof(string), "изъял(а) наркотики у %s", player_name[acter]);
						MeAction(playerid,string);

						PI[acter][pDrugs] = 0;
						UpdatePlayerData(playerid,"pDrugs",0);
					}
					case 5: {
						if(!PI[acter][pMats]) return ErrorMessage(playerid,"У игрока нет боеприпасов");
						format(string, sizeof(string), "Вы изъяли у "P"%s"G" боеприпасы", player_name[acter]);
						SendUse(playerid, string);
						format(string, sizeof(string), "Сотрудник "P"%s"G" изъял у Вас боеприпасы", player_name[playerid]);
						SendUse(acter, string);
						format(string, sizeof(string), "изъял(а) боеприпасы у %s", player_name[acter]);
						MeAction(playerid,string);
						PI[acter][pMats] = 0;
						UpdatePlayerData(playerid,"pMats",0);
					}
				}
				DeletePVar(playerid,"takelic");
				return 1;
			}
			new lics[28];
			switch(listitem) {
				case 0: lics = "водительские права";
				case 1: lics = "пилота";
				case 2: lics = "водного транспорта";
				case 3: lics = "на оружие";
			}
			format(string, sizeof(string), "Вы изъяли у "P"%s"G" лицензию %s", player_name[acter],lics);
			SendUse(playerid, string);
			format(string, sizeof(string), "Сотрудник "P"%s"G" изъял у Вас лицензию %s", player_name[playerid],lics);
			SendUse(acter, string);
			format(string, sizeof(string), "изъял(а) лицензию %s у %s",lics, player_name[acter]);
			MeAction(playerid,string);
			lic[acter][listitem]=0;
			UpdateLicenses(acter);
			DeletePVar(playerid,"takelic");
			return 1;
		}
		case D_ATM: {
			if(!response) return 1;
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[4][funcbPercent3];
				case 8: percent = FuncBizz[32][funcbPercent3];
				case 9: percent = FuncBizz[33][funcbPercent3];
				default:  percent = 1;
			}
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"На Вашем основном банковском счету доступно: "ORANGE"$%d\n\n\
					"W"Введите сумму, которую хотите снять с основного банковского счёта:\nПримечание: комиссия за пользование банкоматом "P"%d%";
					
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PI[playerid][pBank],percent);
					D(playerid,D_ATM_INPUT,DSI, ""P"Снять деньги",string,"Снять","Отмена");
				}
				case 1: {
					static const f_str[] = ""W"На Вашем счету доступно: "ORANGE"$%d\n\n"W"Введите сумму, которую хотите положить на основной банковский счёт:\nПримечание: комиссия за пользование банкоматом "P"%d%";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PI[playerid][pCash],percent);
					D(playerid,D_ATM_PUT,DSI, ""P"Положить деньги",string,"Положить","Отмена");
				}
				case 2: {
					if(!PI[playerid][pPhone]) return ErrorMessage(playerid,"У Вас нет мобильного телефона");
					static const f_str[] = ""W"Доступно средств наличными: "ORANGE"$%d\n\
											"W"На Вашем мобильном счету доступно: "ORANGE"$%d\n\n\
											"W"Введите сумму, которую хотите положить на мобильный счёт:\n\
											Примечание: комиссия за пользование банкоматом "P"%d%";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PI[playerid][pCash],PI[playerid][pMobile],percent);
					D(playerid,D_ATM_PHONE,DSI, ""P"Оплата мобильного",string,"Снять","Отмена");
				}
			}
		}
		case D_ATM_INPUT: {
			if(!response) return ShowATMMenu(playerid);
			new amount = strval(inputtext);
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[4][funcbPercent3];
				case 8: percent = FuncBizz[32][funcbPercent3];
				case 9: percent = FuncBizz[33][funcbPercent3];
				default:  percent = 1;
			}
			new plata = floatround((amount/100*percent)+amount);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму, которую хотите снять с основного банковского счёта:\n\n"NO"*"G" От $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_ATM_INPUT,DSI, ""P"Выдача наличных",string,"Снять","Назад");
				return 1;
			}
			if(PI[playerid][pBank] < plata) return D(playerid,D_ATM_INPUT,DSI, ""P"Выдача наличных",""W"Введите сумму, которую хотите снять с основного банковского счёта:\n\n"NO"*"G" Недостаточно средств","Снять","Назад");
			PI[playerid][pBank] -= plata;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			GiveMoney(playerid, amount,"снятие с банк счета");

			bizz_pay(ATMData[atm][atm_Bank],floatround(plata-amount));

			static const f_str[] = ""W"Снято средств:\t\t"ORANGE"$%d"W" (комиссия: "P"%d)\n\
								"W"Баланс:\t\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,plata-amount,PI[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, ""P"Выдача наличных",string,"Закрыть","");
		}
		case D_ATM_PUT: {
			if(!response) return ShowATMMenu(playerid);
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[4][funcbPercent3];
				case 8: percent = FuncBizz[32][funcbPercent3];
				case 9: percent = FuncBizz[33][funcbPercent3];
				default:  percent = 1;
			}
			new amount = strval(inputtext);
			new plata = floatround((amount/100*percent)+amount);
			if(amount < 1 || amount > vip_status[PI[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введите сумму которую хотите положить на основной банковский счёт:\n\n"NO"*"G" От $1 до $%d\n\n",vip_status[PI[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_ATM_PUT,DSI, ""P"Пополнение счёта",string,"Положить","Назад");
				return 1;
			}
			if(PI[playerid][pCash] < plata) return D(playerid,D_ATM_PUT,DSI, ""P"Пополнение счёта",""W"Введите сумму которую хотите положить на основной банковский счёт:\n\n"NO"*"G" Недостаточно средств","Положить","Назад");
			PI[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			GiveMoney(playerid, -plata,"пополнение банк счета");

			bizz_pay(ATMData[atm][atm_Bank],floatround(plata-amount));

			static const f_str[] = ""W"Внесено средств:\t\t"ORANGE"$%d"W" (комиссия: "P"%d)\n\
								"W"Баланс:\t\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,plata-amount,PI[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, ""P"Пополнение счёта",string,"Закрыть","");
		}
		case D_ATM_PHONE: {
			if(!response) return ShowATMMenu(playerid);
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[4][funcbPercent3];
				case 8: percent = FuncBizz[32][funcbPercent3];
				case 9: percent = FuncBizz[33][funcbPercent3];
				default:  percent = 1;
			}
			new amount = strval(inputtext);
			new plata = floatround((amount/100*percent)+amount);
			if(amount < 1 || amount > 10000) return D(playerid,D_ATM_PHONE,DSI, ""P"Оплата мобильного счёта",""W"Введите сумму которую хотите положить:\n\n"NO"*"G" От $1 до $10.000","Положить","Назад");
			if(GetPlayerMoneyEx(playerid) < plata) return D(playerid,D_ATM_PHONE,DSI, ""P"Оплата мобильного счёта",""W"Введите сумму которую хотите положить:\n\n"NO"*"G" Недостаточно средств","Положить","Назад");
			GiveMoney(playerid,-amount,"пополнение моб.телефона");
			PI[playerid][pMobile] += amount;

			bizz_pay(ATMData[atm][atm_Bank],floatround(plata-amount));

			static const f_str[] = ""W"Внесено средств:\t\t"ORANGE"$%d"W" (комиссия: "P"%d)\n\
								"W"На мобильном счёте:\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,plata-amount,PI[playerid][pMobile]);
			D(playerid,DIALOG_NONE,DSM, ""P"Оплата мобильного счёта",string,"Закрыть","");
		}
		case D_TICKET: {
	        if(!response) return 1;
	        switch(listitem) {
	            case 0: {
					new price;
					for(new i = 0; i < TOTALTICKETS[playerid]; i++) price += TL[playerid][i][tPrice];
					static const f_str[] = ""W"Вы собираетесь оплатить "YELLOW"%i"W" штрафов на сумму: "GREEN"$%i\n"W"Вы действительно хотите произвести оплату?";
					new string[sizeof(f_str) +1 + (-2 + 5)];
					format(string,sizeof(string),f_str,TOTALTICKETS[playerid],price);
				 	D(playerid,D_TICKET_1,DSM, ""P"Оплата штрафа",string,"Оплатить","Назад");
				}
				default: SetPVarInt(playerid,"ticket",listitem), D(playerid,D_TICKET_2,DSL,""P"Штрафы",""GREEN"1."W" Оплатить штраф\n"GREEN"2."W" Информация о штрафе","Далее","Назад");
			}
		}
		case D_TICKET_1: {
		    if(!response) return GetTickets(playerid);
		    new price;
			for(new i = 0; i < TOTALTICKETS[playerid]; i++) price += TL[playerid][i][tPrice];
			if(PI[playerid][pBank] < price) return ErrorMessage(playerid,"На основном банковском счету недостаточно средств"), GetTickets(playerid);
			PI[playerid][pBank] -= price;
			UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
			new query[128];
			for(new i = 0; i < TOTALTICKETS[playerid]; i++) {
			    format(query,sizeof(query), "DELETE FROM `"TABLE_TICKETS"` WHERE `id` = '%i'",TL[playerid][i][tID]);
    			mysql_tquery(connects,query,"","");
			}
			static const f_str[] = "Вы оплатили "P"%i"G" штрафов на сумму "ORANGE"$%i";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 8)];
		 	format(string,sizeof(string),f_str, TOTALTICKETS[playerid],price);
			SendUse(playerid,string);
			return 1;
		}
		case D_TICKET_2: {
		    if(!response) return GetTickets(playerid);
		    new i = GetPVarInt(playerid,"ticket")-1;
		    switch(listitem) {
		        case 0: {
		            if(PI[playerid][pBank] < TL[playerid][i][tPrice]) return ErrorMessage(playerid,"На основном банковском счету недостаточно средств"), GetTickets(playerid);
		            PI[playerid][pBank] -= TL[playerid][i][tPrice];
					UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
					new query[128];
		            format(query,sizeof(query), "DELETE FROM `"TABLE_TICKETS"` WHERE `id` = '%i'",TL[playerid][i][tID]);
 					mysql_tquery(connects,query,"","");
					static const f_str[] = "Вы оплатили штраф: "W"№%i";
					new string[sizeof(f_str) +1 + (-2 + 7)];
		 			format(string,sizeof(string),f_str, i+1);
					SendOk(playerid,string);
		 			return GetTickets(playerid);
				}
				case 1: {
					static const f_str[] = ""W"Штраф №%i\n\n\
										Причина: "NO"%s\n\
										"W"Сумма штрафа: {FACC2E}%i вирт\n\
										"W"Кем был выдан: {1DADF0}%s\n\
										"W"Дата выдачи: {04B404}%s";
					new string[sizeof(f_str) +1 + (-2 + 64) + (-2 + 7) + (-2 + MAX_PLAYER_NAME) + (-2 + 32)];
				    format(string,sizeof(string),f_str,i+1,TL[playerid][i][tReason],TL[playerid][i][tPrice],
										TL[playerid][i][tName],TL[playerid][i][tDate]);
					return D(playerid,D_TICKET_3,DSM, ""P"Информация",string,"Назад","");
				}
			}
			return true;
		}
		case D_TICKET_3: return GetTickets(playerid);
		case D_SHOWALL: {
			if(!response) return 1;
			new query[200];
			format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT %d, 20", PI[playerid][pMember],(SALLROWS[playerid] * 20));
			mysql_pquery(connects, query, "showall_callback", "i", playerid);
			return 1;
		}
		case D_TIPSTER: {
			new veh = GetPVarInt(playerid,"veh");
			if(!response) {
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
				DeletePVar(playerid,"veh");
				return 1;
			}
			switch(listitem) {
				case 0: {
					if(GetPVarInt(playerid,"tipster")) {
						ErrorMessage(playerid, "У Вас уже есть жучок");
						GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
						return 1;
					}
					SendUse(playerid, "Вы взяли "P"1"G" жучок. Для использования,введите: "W"/tipster");
					SetPVarInt(playerid,"tipster", true);
					MeAction(playerid,"взял(а) жучок");
				}
			}
			GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
			DeletePVar(playerid,"veh");
			return 1;
		}
		case D_FUEL: {
			if(!response) return 1;
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			new modelid = GetVehicleModel(vehicleid) - 400;
			new tank = strval(inputtext);

			if(tank < 1 || tank > 100 || VehicleInfo[vehicleid][vFuel]+tank > gTransport[modelid][trTank]) {
				static const f_str[] = "\n"W"Укажите на сколько литров заправить ваше Т/С:\n\nДоступно литров в баке: {FF9968}%.0f"W"\nВместимость бака: {FF9968}%d"W"\nМожно заправить на: {FF9968}%.0fл"W"\nСтоимость 1л: "GREEN"$%d\n";
				new string[sizeof(f_str) +1 + 30];
				format(string, sizeof(string), f_str, VehicleInfo[vehicleid][vFuel],gTransport[modelid][trTank],gTransport[modelid][trTank]-VehicleInfo[vehicleid][vFuel],gBusiness[fuel][bizzPrice]);
				D(playerid,D_FUEL,DSI, ""P"Заправка",string,"Заправить", "Отмена");
				return 1;
			}
			SetPVarInt(playerid,"tank_fill",tank);
			new number = GetPVarInt(playerid,"tank_fill");
			
			new string[128];
			format(string, sizeof(string), " \n  \n"W"Вы действительно хотите заправиться на "CA"%d"W" литров?\nСтоимость: "GREEN"$%d\n  \n ",
			number,number*gBusiness[fuel][bizzPrice]);
			D(playerid,D_FUEL_2,DSM, ""P"Заправка",string,"Да", "Нет");
			return 1;
		}
		case D_FUEL_2: {
			if(!response) return DeletePVar(playerid,"tank_fill");
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new price = GetPVarInt(playerid,"tank_fill")*gBusiness[fuel][bizzPrice];
			if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			GiveMoney(playerid,-price,"заправка авто АЗС");
			if(gBusiness[fuel][bizzProduct] - GetPVarInt(playerid,"tank_fill") > 0) {
				gBusiness[fuel][bizzProduct] -= GetPVarInt(playerid,"tank_fill");
				bizz_pay(fuel,price);
			}
			UpdateBusinessText(fuel);
			SetPVarInt(playerid,"tank_vfuel", floatround(VehicleInfo[GetPlayerVehicleID(playerid)][vFuel])); 
			SetTimerEx("FuelCar",500,0,"i",playerid);
			TogglePlayerControllable(playerid,false);
		}
		case D_BUY_FUEL: {
			if(!response) return 1;
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new price = 10*gBusiness[fuel][bizzPrice];
			if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(gBusiness[fuel][bizzProduct] - 10 > 0) {
				gBusiness[fuel][bizzProduct] -= 10;
				bizz_pay(fuel,price);
			}
			GiveMoney(playerid,-price,"покупка канистры");
			UpdateBusinessText(fuel);
			PI[playerid][pFuel] ++;
			UpdatePlayerData(playerid,"pFuel",PI[playerid][pFuel]);
			SendOk(playerid,"Вы купили канистру с бензином. Для заправки Т/С, введите: "W"/fillcar");
		}
		case D_CHANGECAR: {
			new id_pokupaet = GetPVarInt(playerid,"carPokupaet")-1;
			if(!response) {
				DeletePVar(id_pokupaet,"carProdaet");
				DeletePVar(id_pokupaet,"carCena");

				DeletePVar(playerid,"carPokupaet");
				DeletePVar(playerid,"numbercar1");
				DeletePVar(playerid,"numbercar2");
				DeletePVar(playerid,"sellcar_type");
				return 1;
			}
			new string[350];
			format(string, sizeof(string), ""P"%s"G" предложил(а) обмен "W"[%s] на [%s]"G". Доплата: "ORANGE"$%i",player_name[playerid],gTransport[gPlayerCars[playerid][carModel][GetPVarInt(playerid,"numbercar1")-1]-400][trName],gTransport[gPlayerCars[id_pokupaet][carModel][GetPVarInt(playerid,"numbercar2")-1]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(id_pokupaet, string);
			SendClientMessage(id_pokupaet,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
			format(string, sizeof(string), "Вы предложили "P"%s "G"обмен "W"[%s] на [%s]"G". Доплата: "ORANGE"$%i",player_name[id_pokupaet],gTransport[gPlayerCars[playerid][carModel][GetPVarInt(playerid,"numbercar1")-1]-400][trName],gTransport[gPlayerCars[id_pokupaet][carModel][GetPVarInt(playerid,"numbercar2")-1]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(playerid, string);
			DeletePVar(playerid,"sellcar_type");
			SetPVarInt(id_pokupaet,"sellcar_type",1);
		}
		case D_CAR_BUY: {
			if(!response) {
				if(GetPVarInt(playerid,"carProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
					SendOk(playerid,"Вы отказались от предложения на обмен транспортом");
					SendOk(id_prodaet,"Игрок отказался от предложения на обмен транспортом");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
			}
			new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"carPokupaet")-1;
			new car_cena = GetPVarInt(playerid,"carCena");
			new number_car1 = GetPVarInt(id_prodaet,"numbercar1")-1;
			new number_car2 = GetPVarInt(id_prodaet,"numbercar2")-1;
			if(!response) return change_carcancel(playerid,id_prodaet);
			if(id_pokupaet == playerid) {
				if(PI[playerid][pCash] < car_cena) {
					ErrorMessage(playerid,"У Вас не достаточно денег наличными");
					SendOk(id_prodaet,"У покупателя недостаточно денег наличными");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(!PI[id_prodaet][pHouse] && !PI[id_prodaet][pRoom]) {
					ErrorMessage(id_prodaet,"У Вас нет дома/номера в отеле");
					SendOk(playerid,"У продавца обмен нет дома/номера в отеле");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) {
					ErrorMessage(playerid,"У Вас нет дома/номера в отеле");
					SendOk(id_prodaet,"У покупателя нет дома/номера в отеле");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[playerid][0] == INVALID_VEHICLE_ID && house_car[playerid][1] == INVALID_VEHICLE_ID) {
					ErrorMessage(playerid,"Ваш автомобиль не создан/не на парковочном месте");
					SendOk(id_prodaet,"У покупателя автомобиль не создан/не на парковочном месте");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[id_prodaet][0] == INVALID_VEHICLE_ID && house_car[id_prodaet][1] == INVALID_VEHICLE_ID) {
					ErrorMessage(id_prodaet,"Ваш автомобиль не создан/не на парковочном месте");
					SendOk(playerid,"У продавца автомобиль не создан/не на парковочном месте");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				GiveMoney(playerid, -car_cena,"Покупка авто");
				GiveMoney(id_prodaet, car_cena,"Продажа авто");

				new string[156];
				format(string,sizeof(string),"Вы обменялись Т/С с "P"%s"G". Ваша доплата "ORANGE"$%i",player_name[id_prodaet],car_cena);
				SendUse(playerid,string);
				format(string,sizeof(string),"Вы обменялись Т/С с "P"%s"G". Доплата с его стороны: "ORANGE"$%i",player_name[playerid],car_cena);
				SendUse(id_prodaet,string);
				
				SetPVarInt(id_prodaet,"car",gPlayerCars[playerid][carID][number_car2]);
				gPlayerCars[playerid][carID][number_car2] = gPlayerCars[id_prodaet][carID][number_car1];
				gPlayerCars[id_prodaet][carID][number_car1] = GetPVarInt(id_prodaet,"car");
				DeletePVar(id_prodaet,"car");

				if(house_car[id_prodaet][0] != INVALID_VEHICLE_ID) {
					save_perf(id_prodaet,0);
					A_DestroyVehicle(house_car[id_prodaet][0]);
					house_car[id_prodaet][0] = INVALID_VEHICLE_ID;
				}
				if(house_car[id_prodaet][1] != INVALID_VEHICLE_ID) {
					save_perf(id_prodaet,1);
					A_DestroyVehicle(house_car[id_prodaet][1]);
					house_car[id_prodaet][1] = INVALID_VEHICLE_ID;
				}

				if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
					save_perf(playerid,0);
					A_DestroyVehicle(house_car[playerid][0]);
					house_car[playerid][0] = INVALID_VEHICLE_ID;
				}
				if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
					save_perf(playerid,1);
					A_DestroyVehicle(house_car[playerid][1]);
					house_car[playerid][1] = INVALID_VEHICLE_ID;
				}
				save_car(id_prodaet,0);
				save_car(id_prodaet,1);
				save_car(playerid,0);
				save_car(playerid,1);

				new query_str[128];
				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
				mysql_tquery(connects,query_str,"load_cars","i",playerid);

				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[id_prodaet]);
				mysql_tquery(connects,query_str,"load_cars","i",id_prodaet);

				change_carcancel(playerid,id_prodaet);
				return 1;
			}
			else {
				ErrorMessage(playerid,"Игрок оффлайн");
				DeletePVar(playerid,"carProdaet");
				DeletePVar(playerid,"carCena");
				DeletePVar(playerid,"sellcar_type");
			}
		}
		case D_SET_BET: {
			if(!response) return true;
			new s = Casino_Flag[playerid][select_casino_table];
			if(s==-1) return 1;
			if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"В данный момент идёт игра");
			if(InfoDice[s][dice_bank] != 0) return ErrorMessage(playerid,"Кто то из игроков уже поставил ставку");
			new stavka;
			if(sscanf(inputtext,"i",stavka)) return D(playerid, D_SET_BET, DSI, ""P"Ставка", ""W"Введите сумму ставки!\nСтавка должна быть не менее "ORANGE"$"#MIN_STAVKA"\n"W"и не более "ORANGE"$"#MAX_STAVKA"", "Далее", "Отмена");
			if(stavka < MIN_STAVKA || stavka > MAX_STAVKA) return ErrorMessage(playerid,"Неверная ставка"),D(playerid, D_SET_BET, DSI, ""P"Ставка", ""W"Введите сумму ставки!\nСтавка должна быть не менее "ORANGE"$"#MIN_STAVKA"\n"W"и не более "ORANGE"$"#MAX_STAVKA"", "Далее", "Отмена");
			if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"Вы не можете изменить ставку в процессе игры");
			InfoDice[s][dice_stavka] = stavka;
			SendOk(playerid,"Ставка успешно установлена");
			UpdateTextCasino(s);
			new string_set_bet[180];
			format(string_set_bet, 179, ""P"%s "G"установил ставку "ORANGE"$%d "G"Нажмите "W"SET BET "G"чтобы её поддержать", player_name[playerid], stavka);
			for(new p = 0; p < 5; p++) {
				if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
				SendUse(InfoDice[s][dice_gamer][p],string_set_bet);
			}
			if(InfoDice[s][dice_crup]!=INVALID_PLAYER_ID) SendUse(InfoDice[s][dice_crup],string_set_bet);
		}
		case D_CHOOSE: {
	        if(!response) return true;
	        if(!strlen(inputtext)) return D(playerid,D_CHOOSE,DSI, ""P"Скачки","{ffffff}Вы можете поставить деньги на любую лошадь.\nНапишите номер лошади [1-4] и ставку [50-200] через точку, чтобы сделать ставку\nНапример: 1.100 [Вы поставите на лошадь №1 - 100$]","Поставить","Отмена");
			new arrdshu[2][5];
			split(inputtext, arrdshu, '.');
			new horse = strval(arrdshu[0]);
			if(horse < 1 || horse > 4) return D(playerid,D_CHOOSE,DSI, ""P"Скачки","{ffffff}Вы можете поставить деньги на любую лошадь.\nНапишите номер лошади [1-4] и ставку [50-200] через точку, чтобы сделать ставку\nНапример: 1.100 [Вы поставите на лошадь №1 - 100$]","Поставить","Отмена");
			new cash = strval(arrdshu[1]);
			if(cash < 50 || cash > 200) return D(playerid,D_CHOOSE,DSI, ""P"Скачки","{ffffff}Вы можете поставить деньги на любую лошадь.\nНапишите номер лошади [1-4] и ставку [50-200] через точку, чтобы сделать ставку\nНапример: 1.100 [Вы поставите на лошадь №1 - 100$]","Поставить","Отмена");
			if(PI[playerid][pCash] < cash) return D(playerid,D_CHOOSE,DSI, ""P"Скачки","{ffffff}Вы можете поставить деньги на любую лошадь.\nНапишите номер лошади [1-4] и ставку [50-200] через точку, чтобы сделать ставку\nНапример: 1.100 [Вы поставите на лошадь №1 - 100$]","Поставить","Отмена");
			if(RaceStarted == 1) return ErrorMessage(playerid, "Скачки уже начались");
		    SetPVarInt(playerid,"MoneyBet",cash);
			//GivePlayerCash(playerid, -cash,"Ставка");
			SetPVarInt(playerid,"BetOnHorse",horse);
			new string[64];
			format(string, sizeof(string), "Вы поставили "ORANGE"%d$ на лошадь "P"№%d",cash,horse);
			SendUse(playerid, string);
			return true;
	    }
		case dBizList: {
			if(!response) return 1;
			new fracid = -1;
			new count_business = 1,string[5000];
			switch(PI[playerid][pMember]) {
				case fLCN: fracid = 0;
				case fYAKUZA: fracid = 1;
				case fRM: fracid = 2;
			}
			string = "№. Название + Доход бизнеса за сегодня\n\n";
			for(new i = 1; i<gBusinessCount; i++) {
				if(gBusiness[i][bizzMafia] != PI[playerid][pMember]) continue;
				if(fracid != -1) {
					if(count_business <= 50) {
						count_business++;
						continue;
					}
					format(string, sizeof(string), ""W"%s%i. %s + "GREEN"$%d\n",string, count_business, gBusiness[i][bizzName],gBankMafia[fracid][i]);
				}
			}
			D(playerid, DIALOG_NONE, DSM, ""P"Бизнесы мафии", string, "Закрыть", "");
			return 1;
		}
		case D_LMENU: {
			if(!response) return 1;
			switch(listitem) {
				case 0..2: dialog_lmenu(playerid,listitem);
				case 3..7: dialog_lmenu(playerid,listitem+1);
			}
		}
		case D_LMENU_2: {
			if(!response) return 1;
			dialog_lmenu(playerid,listitem);
		}
		case D_GANGTOP: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new gz_total[5];
					for(new i = 0; i < TOTALGZ; i++) {
						if(GZInfo[i][gFrakVlad] == fBALLAS) gz_total[0]++;
						if(GZInfo[i][gFrakVlad] == fVAGOS) gz_total[1]++;
						if(GZInfo[i][gFrakVlad] == fGROVE) gz_total[2]++;
						if(GZInfo[i][gFrakVlad] == fAZTEC) gz_total[3]++;
						if(GZInfo[i][gFrakVlad] == fRIFA) gz_total[4]++;
					}
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d/125"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d/125"W"\n\
											{009F00}Grove"W"\t{009F00}%d/125"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d/125"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d/125"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,gz_total[0],gz_total[1],gz_total[2],gz_total[3],gz_total[4]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Территории",string, "Закрыть", "");
				}
				case 1: {
					new graff[5];
					for(new i; i<CountGraffity; i++) {
						if(GrafInfo[i][gFrak] == fBALLAS) graff[0]++;
						if(GrafInfo[i][gFrak] == fVAGOS) graff[1]++;
						if(GrafInfo[i][gFrak] == fGROVE) graff[2]++;
						if(GrafInfo[i][gFrak] == fAZTEC) graff[3]++;
						if(GrafInfo[i][gFrak] == fRIFA) graff[4]++;
					}
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d/120"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d/120"W"\n\
											{009F00}Grove"W"\t{009F00}%d/120"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d/120"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d/120"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,graff[0],graff[1],graff[2],graff[3],graff[4]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Граффити",string, "Закрыть", "");
				}
				case 2: {
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d"W"\n\
											{009F00}Grove"W"\t{009F00}%d"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,FI[fBALLAS][fRating],FI[fVAGOS][fRating],FI[fGROVE][fRating],FI[fAZTEC][fRating],FI[fRIFA][fRating]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Рейтинг",string, "Закрыть", "");
				}
				case 3: {
					static const f_str[] = "{8813E7}Ballas"W"\t{8813E7}%d"W"\n\
											{DBD604}Vagos"W"\t{DBD604}%d"W"\n\
											{009F00}Grove"W"\t{009F00}%d"W"\n\
											{01FCFF}Aztecas"W"\t{01FCFF}%d"W"\n\
											{83BFBF}Rifa"W"\t{83BFBF}%d"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,FI[fBALLAS][fPoints],FI[fVAGOS][fPoints],FI[fGROVE][fPoints],FI[fAZTEC][fPoints],FI[fRIFA][fPoints]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"G-POINTS",string, "Закрыть", "");
				}
			}
		}
		case D_GANG_POINT: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[1512],str[128],idx = 1;
					new year, month, day, hour, minute, second;
					strcat(string,"№\tАвтомобиль\tОкончание аренды\n");
					for(new i; i < 50; i ++) {
						if(FracVehicle[i][fvehFrac] != GetTeamID(playerid)) continue;
						if(FracVehicle[i][fvehTime] > unix) {
							timestamp_to_date(FracVehicle[i][fvehTime]-unix, year, month, day, hour, minute, second);
							format(str, sizeof(str), "%d\t%s\t%d д. %d ч. %d м.\n", idx,gTransport[FracVehicle[i][fvehModelNew]-400][trName],day-1, hour, minute),strcat(string,str);
						}
						else format(str, sizeof(str), "%d\t%s\t-\n", idx,gTransport[FracVehicle[i][fvehModel]-400][trName]),strcat(string,str);
						idx++;
					}
					D(playerid, D_GANG_POINT_CAR, DSTH, "Управление автомобилями", string, "Выбрать", "Отмена");
				}
			}
		}
		case D_GANG_POINT_CAR: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return 1;
			SetPVarInt(playerid,"func_car_gang",listitem);
			new string[328],str[128];
			strcat(string,"№. Модель\tАренда\tСтоимость\n");
			for(new i; i < sizeof(gang_car); i ++) {
				format(str, sizeof(str), ""ORANGE"%d."W" %s\t30 дней\t%d\n", i+1,gTransport[gang_car[i][0]-400][trName],gang_car[i][1]),strcat(string,str);
			}
			D(playerid,D_GANG_POINT_CAR_2,DSTH,"Покупка машины",string,"Купить","Отмена");
		}
		case D_GANG_POINT_CAR_2: {
			if(!response) return DeletePVar(playerid,"func_car_gang");
			if(!PI[playerid][pLeader]) return 1;
			SetPVarInt(playerid,"func_car_gang_2",listitem);
			new id_car = GetPVarInt(playerid,"func_car_gang_2");
			static const f_str[] = ""W"Вы собираетесь приобрести автомобиль "P"%s\n\n"YELLOW"Вы действительно хотите купить данный автомобиль за "GREEN"%d G-POINTS?";
			new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
			format(string,sizeof(string),f_str,gTransport[gang_car[id_car][0]-400][trName],gang_car[id_car][1]);
			D(playerid,D_GANG_POINT_CAR_3,DSM, ""P"Покупка машины",string,"Да","Отмена");
		}
		case D_GANG_POINT_CAR_3: {
			if(!response) return DeletePVar(playerid,"func_car_gang"),DeletePVar(playerid,"func_car_gang_2");
			if(!PI[playerid][pLeader]) return 1;
			new id_slot = GetPVarInt(playerid,"func_car_gang");
			new id_car = GetPVarInt(playerid,"func_car_gang_2");
			DeletePVar(playerid,"func_car_gang");
			DeletePVar(playerid,"func_car_gang_2");
			new slot;
			switch(GetTeamID(playerid)) {
				case fBALLAS: slot = 0;
				case fVAGOS: slot = 9;
				case fGROVE: slot = 19;
				case fAZTEC: slot = 29;
				case fRIFA: slot = 39;
			}
			if(FracVehicle[slot+id_slot][fvehModel] == 482) return ErrorMessage(playerid,"Запрещено продавать фуру для погрузки/разгрузки боеприпасов");
			if(FracVehicle[slot+id_slot][fvehModel] == 481) {
				if(gang_car[id_car][0] != 461) return ErrorMessage(playerid,"На данный слот можно купить только мотоцикл");
			}
			if(FI[GetTeamID(playerid)][fPoints] < gang_car[id_car][1]) return ErrorMessage(playerid,"В Вашей банде недостаточно G-POINTS для аренды Т/С");
			FracVehicle[slot+id_slot][fvehModelNew] = gang_car[id_car][0];
			FracVehicle[slot+id_slot][fvehTime] = unix + 30*86400;
			FI[GetTeamID(playerid)][fPoints] -= gang_car[id_car][0];
			UpdateFraction(GetTeamID(playerid),"fPoints",FI[GetTeamID(playerid)][fPoints]);
			SendOk(playerid,"Автомобиль успешно арендован на 30 дней");
			save_fracveh(slot+id_slot);
		}
		case D_DIPLOMATION: {
			if (!response) {
				for (new i = 0 ; i < 7; i ++) {
					new pvar_string[8];
					format(pvar_string, 8, "d_%d",i);
					DeletePVar(playerid, pvar_string);
				}
				return 1;
			}
			new header_string[64]; 
			format(header_string, 8, "d_%d", listitem);
			new fr_id = GetPVarInt(playerid, header_string);
			SetPVarInt ( playerid, "d_listitem", listitem ) ;

			header_string[0] = EOS;
			strcat(header_string, "{");
			strcat(header_string, GetColorFrac(fr_id));
			strcat(header_string, "}");
			strcat(header_string, FI[fr_id][fName]);
			D(playerid, D_DIPLOMATION_2, DSL, header_string, ""P"1."W" Нейтралитет\n"P"2."W" Война\n"P"3."W" Союз", "Выбрать", "Закрыть" ) ;
		}
		case D_DIPLOMATION_2: {
			if(zahvat == true) return ErrorMessage(playerid,"Запрещено изменять дипломатию во время захвата территории");
			if(!response) return dialog_diplom(playerid,true);
			new pvar_string[8]; 
			format(pvar_string, 8, "d_%d", GetPVarInt(playerid, "d_listitem"));
			DeletePVar(playerid, "d_listitem");
			new fr_id = GetPVarInt(playerid, pvar_string);
			if(listitem == 2) {
				if (f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] == dip_status_alliance_get_invite) {
					f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] = dip_status_alliance;
					f_diplomacy[fr_id - 15][PI[playerid][pMember] - 15] = dip_status_alliance;
						
					dialog_diplom(playerid,true);
					save_diplomation(playerid,PI[playerid][pMember]);
					save_diplomation(playerid,fr_id);
					return 1;
				}
				f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] = dip_status_alliance_invite;
				f_diplomacy[fr_id - 15][PI[playerid][pMember] - 15] = dip_status_alliance_get_invite;
					
				dialog_diplom(playerid,true);
				save_diplomation(playerid,PI[playerid][pMember]);
				save_diplomation(playerid,fr_id);
				return 1 ;
			}
			f_diplomacy[PI[playerid][pMember] - 15][fr_id - 15] = listitem;
			f_diplomacy[fr_id - 15][PI[playerid][pMember] - 15] = listitem;			
	
			dialog_diplom(playerid,true);
			save_diplomation(playerid,PI[playerid][pMember]);
			save_diplomation(playerid,fr_id);
		}
		case D_LMENU_BANK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Состояние счета: "ORANGE"$%d\n"P"1."W" Снять деньги";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fBank]);
					D(playerid,D_LMENU_BANK,DSL,""P"Управление банком фракции",string,"Далее","Назад");
				}
				case 1: D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции","\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n","Взять","Отмена");
			}
		}
		case D_LMENU_BANK_INPUT: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функция");
			if(!strlen(inputtext)) return D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции","\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n","Взять","Отмена");
			new dengi = strval(inputtext),maxmoney = 0;
			switch(PI[playerid][pMember]) {
				case fLSPD,fSFPD,fLVPD,fFBI,fARMYSF,fARMYLV,fMEDICLS,fMEDICSF,fMEDICLV,fLSNEWS,fSFNEWS,fLVNEWS,fINSTRUCTORS,fRM,fLCN,fYAKUZA: maxmoney = 300000;
				case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: maxmoney = 200000;
				case fWHITEHOUSE: maxmoney = 500000;
			}
			if(dengi < 1 || dengi > maxmoney) {
				static const f_str[] = "\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n"NO"* "G"От $1 до $%d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 9)];
				format(string,sizeof(string),f_str,maxmoney);
				D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции",string,"Взять","Отмена");
				return 1;
			}
			if(FI[GetTeamID(playerid)][fBankCash] + dengi > maxmoney) {
				new string[128];
				format(string,sizeof(string),"\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n"NO"* "G"Суточный лимит на перевод/снятие средств с общага - $%d. Доступный лимит: $%d\n\n",maxmoney,maxmoney-FI[GetTeamID(playerid)][fBankCash]);
				D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции",string,"Взять","Отмена");
				return 1;
			}
			if(FI[GetTeamID(playerid)][fBank] < dengi) return D(playerid,D_LMENU_BANK_INPUT,DSI, ""P"Управление банком фракции","\n\n"W"Введите сумму, которую хотите взять с банка фракции:\n\n"NO"* "G"В банке фракции нет такой суммы\n\n","Взять","Отмена");
			FI[GetTeamID(playerid)][fBank] -= dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fBankCash] += dengi;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			GiveMoney(playerid, dengi,"снял со счета фракции");
			new string[128];
			format(string,sizeof(string),"Вы сняли с банка фракции: "ORANGE"$%d",dengi);
			SendOk(playerid,string);
		}
		case D_LMENU_TEXT: {
			if(!response) return 1;
			new message[71];
			if(NonSym(inputtext,70,1)) return D(playerid,D_LMENU_TEXT, DSI, ""P"Сообщение фракции", "\n\n"W"Введите сообщение, которое будет показано членам Вашей организации при входе:\nДля удаления сообщения введите: "ORANGE"None\n\n"NO"* "G"Запрещены некорректные символы\n\n", "Ввод", "Отмена" ) ;
			if(sscanf(inputtext,"s[70]",message)) return D(playerid,D_LMENU_TEXT, DSI, ""P"Сообщение фракции", "\n\n"W"Введите сообщение, которое будет показано членам Вашей организации при входе:\nДля удаления сообщения введите: "ORANGE"None\n\n"NO"* "G"От 1 до 70 символов\n\n", "Ввод", "Отмена" ) ;
			strmid(FI[PI[playerid][pMember]][fMessage],message,0,strlen(message),70);

			new query[350];
			format(query,sizeof(query),"UPDATE fractions SET Message = '%s' WHERE `ID` = '%d' LIMIT 1",FI[PI[playerid][pMember]][fMessage],PI[playerid][pMember]);
			mysql_tquery(connects,query);

			new string[128];
			format(string,sizeof(string),"Сообщение: "ORANGE"%s "G"успешно установлено",message);
			SendOk(playerid,string);
		}
		case D_LMENU_RANK: {
			if(!response) return DeletePVar(playerid,"leader_rank");
			if(!PI[playerid][pMember]) return 1;
			new select_listitem = GetPVarInt(playerid,"leader_rank");
			if(select_listitem == 0) FI[GetTeamID(playerid)][fInviteRang] = listitem + 1,UpdateFraction(GetTeamID(playerid),"RangInvite",listitem + 1);
			else if(select_listitem == 1) FI[GetTeamID(playerid)][fUninviteRang] = listitem + 1,UpdateFraction(GetTeamID(playerid),"RangUninvite",listitem + 1);
			else if(select_listitem == 2) FI[GetTeamID(playerid)][fGiveRang] = listitem + 1,UpdateFraction(GetTeamID(playerid),"GiveRang",listitem + 1);
			else if(select_listitem == 3) FI[GetTeamID(playerid)][fUseStock] = listitem + 1,UpdateFraction(GetTeamID(playerid),"UseStock",listitem + 1);
			else return true;
			DeletePVar(playerid,"leader_rank");
			pc_cmd_lmenu(playerid);
			return 1;
		}
		case D_EDIT_RANK_1: {
			if(!response) return pc_cmd_lmenu(playerid);
			if(!PI[playerid][pMember]) return 1;
			SetPVarInt(playerid,"edit_rank",listitem);
			D(playerid, D_EDIT_RANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n", "Изменить", "Отмена");
			return 1;
		}
		case D_EDIT_RANK_2: {
			if(!response) return 1;
			if(!PI[playerid][pMember]) return 1;
			if(strlen(inputtext) <= 5 || strlen(inputtext) >= 24) return D(playerid, D_EDIT_RANK_2, DSI, ""P"Смена названия ранга", "\n\n"W"Введите новое название ранга:\n\n"NO"*"G" От 6 и до 24 симолов\n\n", "Изменить", "Отмена");
			string_replace(inputtext, "'", ' ') ;
			new slot = GetPVarInt(playerid, "edit_rank");

			new string[156];
			format(string,sizeof(string),"Ранг "P"№%d"G" переименован с "W"%s"G" на "W"%s",slot+1,GetRankName(PI[playerid][pMember],slot+1),inputtext);
			SendUse(playerid,string);

			strmid(RankName[PI[playerid][pMember]][slot], inputtext, 0, strlen(inputtext));
			SaveRank(slot+1,GetTeamID(playerid));
			return 1;
		}
		case D_CASINO: {
			if(!response) return 1;
			if(!GetPVarInt(playerid,"krup")) {
				new null = 0;
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(GetPVarInt(i,"krup")) null++;
				}
				if(null >= 5) return ErrorMessage(playerid,"Уже работают достаточно крупье(5 человек)");
				SetPVarInt(playerid,"oldskinkrup",GetPlayerSkin(playerid));
				Casino_Flag[playerid][casino_crup] = 1;
			}
			else Casino_Flag[playerid][casino_crup] = 0;
			new skin_fix = (PI[playerid][pSex] == 1) ? (171) : (194);
			A_SetPlayerSkin(playerid,(GetPVarInt(playerid,"krup")) ? (GetPVarInt(playerid,"oldskinkrup")) : (skin_fix));
			SetPVarInt(playerid,"krup",(GetPVarInt(playerid,"krup")) ? (false) : (true));
			SendOk(playerid,(!GetPVarInt(playerid,"krup")) ? ("Вы закончили работу крупье") : ("Вы устроились на работу крупье"));
			return 1;
		}
		case D_COP_ARREST: {
			if(!response) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 40: PI[playerid][pJail] = 1;
				case 41: PI[playerid][pJail] = 2;
				case 42: PI[playerid][pJail] = 3;
			}
			PI[playerid][pJailTime] = (PI[playerid][pSearch] * 600)/2;
			UpdatePlayerData(playerid,"pJail",PI[playerid][pJail]);
			UpdatePlayerData(playerid,"pJailTime",PI[playerid][pJailTime]);
			PI[playerid][pSearch] = 0;
			SetPlayerWantedLevel(playerid, PI[playerid][pSearch]);
			PlayerSpawn(playerid);
		}
		case D_DONATE: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = "\
											"G"Покупка игровой валюты\n\n\
											"W"На счету Вашего аккаунта "O"%d "W"руб.\n\
											Введите сумму, которую Вы хотите получить:\n\
											Курс: "GREEN"1 рубль = $3000";
					new string[sizeof(f_str) +1 + (-2 + 13)];
					format(string, sizeof(string), f_str,PI[playerid][pRouble]);
					D(playerid, D_DONATE_CONVERT, DSI, ""P"Донат", string, "Купить", "Назад");
				}
				case 1: {
					if(PI[playerid][pLeader]) return ErrorMessage(playerid,"Лидерам запрещено менять ник");
					new plane = -1;
					for(new i=1;i<=gPlaneCount;i++) {
						if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
					}
					if(plane != -1) return ErrorMessage(playerid,"Для смены ника, необходимо отказаться от аренды воздушного транспорта");
					D(playerid, D_DONATE_CHANGENAME, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:\nСтоимость: "GREEN"20 рублей", "Сменить", "Назад");
				}
				case 2: D(playerid, D_DONATE_UNWARN, DSM, ""P"Донат", ""G"Снятие предупреждения\n\n"W"Стоимость: "GREEN"100 рублей\n"G"Вы действительно хотите снять предупреждение?", "Снять", "Назад");
				case 3: D(playerid, D_DONATE_ZAKON, DSM, ""P"Донат", ""G"Повышение законопослушности\n\n"W"Добавление: "P"+15"W" к законопослушности\nСтоимость: "GREEN"10 рублей\n"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				case 4: {
					static const f_str[] = "Лицензия\tСтоимость\tНаличие\n\
											"W"Водительское удостоверение\t"GREEN"20р\t%s\n\
											"W"Лицензия на вождение воздушного транспорта\t"GREEN"30р\t%s\n\
											"W"Лицензия на вождение водного транспорта\t"GREEN"30р\t%s\n\
											"W"Лицензия на ношение оружия\t"GREEN"50р\t%s";
					new string[sizeof(f_str) +1 + (-2 + 40+1000)];
					format(string,sizeof(string),f_str,(lic[0])?(""GREEN"Имеется"):(""NO"Отсутствует"),(lic[1])?(""GREEN"Имеется"):(""NO"Отсутствует"),(lic[2])?(""GREEN"Имеется"):(""NO"Отсутствует"),(lic[3])?(""GREEN"Имеется"):(""NO"Отсутствует"));
					D(playerid, D_DONATE_LICENSES, DSTH, ""P"Донат", string, "Купить", "Назад");
				}
				case 5: {
					static const f_str[] = "Оружие\tЦена\tСкилл\n\
											"G"SD-Pistol\t"GREEN"1р = 2%s\t"P"%d%s / 100%s\n\
											"G"Desert Eagle\t"GREEN"1р = 2%s\t"P"%d%s / 100%s\n\
											"G"ShotGun\t"GREEN"1р = 2%s\t"P"%d%s / 100%s\n\
											"G"MP5\t"GREEN"1р = 2%s\t"P"%d%s / 100%s\n\
											"G"AK-47\t"GREEN"1р = 2%s\t"P"%d%s / 100%s\n\
											"G"M4\t"GREEN"1р = 2%s\t"P"%d%s / 100%s";
					new string[sizeof(f_str) +1 + (-2 + 20)];
					format(string,sizeof(string),f_str,"%",PI[playerid][pGunSkill][0],"%","%","%",PI[playerid][pGunSkill][1],"%","%","%",PI[playerid][pGunSkill][2],"%","%","%",PI[playerid][pGunSkill][3],"%","%","%",PI[playerid][pGunSkill][4],"%","%","%",PI[playerid][pGunSkill][5],"%","%");
					D(playerid, D_DONATE_SKILLS, DSTH, ""P"Донат", string, "Купить", "Назад");
				}
				case 6: D(playerid, D_DONATE_SATIETY, DSM, ""P"Донат", ""G"Анти-Голод\n\n"W"Анти-Голод [100% шкала сытости]\nСтоимость: "GREEN"150 рублей\n"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				case 7: D(playerid, D_DONATE_DISEASE, DSM, ""P"Донат", ""G"Иммунитет\n\n"W"Иммунитет от всех болезней\nСтоимость: "GREEN"150 рублей\n"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				case 8: {
					new year, month, day, hour, minute, second,strs_0[30];
					if(PI[playerid][pVips] == VIP_FOREVER) {
						strs_0 = "Навсегда";
					}
					else if(PI[playerid][pVips] == VIP_NONE) {
						strs_0 = "-";
					}
					else {
						if(PI[playerid][pVipTime] >= unix) {
							timestamp_to_date(PI[playerid][pVipTime]-unix, year, month, day, hour, minute, second);
							format(strs_0,sizeof strs_0,""NO"%dм %dд %dч",month-1,day-1,hour);
						}
					}
					new string[600];
					new vip_name[8][20] = {"Отсутствует","V.I.P. Начальный", "V.I.P. Бронзовый","V.I.P. Серебряный","V.I.P. Золотой","V.I.P. Платиновый","V.I.P. Экстра","V.I.P. Беззаконник"};
					format(string,sizeof(string),"Наименование\tЦена\n\
																	"P"V.I.P. Беззаконник\t"GREEN"От 80 рублей\n\
																	"P"V.I.P. Начальный\t"GREEN"От 50 рублей\n\
																	"P"V.I.P. Бронзовый\t"GREEN"От 60 рублей\n\
																	"P"V.I.P. Серебряный\t"GREEN"От 70 рублей\n\
																	"P"V.I.P. Золотой\t"GREEN"От 80 рублей\n\
																	"P"V.I.P. Платиновый\t"GREEN"От 90 рублей\n\
																	"P"V.I.P. Экстра\t"GREEN"2000 рублей\n\
																	"GREEN"%s\t%s",vip_name[PI[playerid][pVips]],strs_0);
					D(playerid, D_DONATE_VIP, DSTH, ""P"Донат", string, "Купить", "Назад");
				}
				case 9: {
					if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет дома/номера в отеле");
					new string[1512],str[64];
					string = ""P"ID\t"P"Название автомобиля\t"P"Цена\n";
		            for(new i; i < sizeof(donate_car); i++) {
						format(str,sizeof(str), ""W"%d\t%s\t"ORANGE"%d\n",donate_car[i][0], gTransport[donate_car[i][0]-400][trName],donate_car[i][1]);
						strcat(string, str);
					}
					D(playerid, D_BUY_CAR_DONATE, DSTH, ""P"Покупка автомобиля", string, "Купить", "Назад");
				}
				case 10: {
					if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
					static const f_str[] = ""G"Покупка EXP + поинтов в семью\n\n\
											"W"На счету Вашего аккаунта "O"%d "W"руб.\n\
											Введите сумму, которую Вы хотите получить:\n\
											Курс: "GREEN"1 рубль = 10 поинтов";
					new string[sizeof(f_str) +1 + (-2 + 13)];
					format(string, sizeof(string), f_str,PI[playerid][pRouble]);
					D(playerid, D_DONATE_POINT, DSI, ""P"Донат", string, "Купить", "Назад");
				}
				case 11: D(playerid, D_DONATE_BANK, DSM, ""P"Донат", ""G"Мобильный банк\n\n\
						"W"Возможности:\n\
						\t"P"-"G" Выбор банка\n\
						\t"P"-"G" Вызов банковского меню с помощью /call 0000\n\
						\t"P"-"G" Вызов банковских услуг с помощью /call 0000\n\n\
						"W"Стоимость: "GREEN"150 рублей\n\
						"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				case 12: D(playerid, D_DONATE_SKIN, DSI, ""P"Донат", ""G"Покупка уникального скина\n\n\
											Введите ID скина, который Вы хотите приобрести:\n\
											"W"Стоимость: "GREEN"200 рублей", "Купить", "Назад");
				case 13: {
					D(playerid, D_DONATE_ZV, DSM, ""P"Донат", ""G"Уровнь розыска\n\n\
						"W"Убрать 1 уровень розыска\n\n\
						"W"Стоимость: "GREEN"10 рублей\n\
						"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				}
				case 14: {
					D(playerid, D_DONATE_BH, DSM, ""P"Донат", ""G" Анти Банни Хоп\n\n\
						"W"Стоимость: "GREEN"100 рублей\n\
						"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				}
				case 15: {
					if(PI[playerid][pBox] == 3) return ErrorMessage(playerid,"У Вас изучены все стили боя");
					new style_box[3][9] = {"Бокс","Кунг-Фу","Кик-Бокс"};
					static const f_str[] = "Стиль боя\tЦена\tНавыки\n\
											"G"%s\t"GREEN"1р = 2%s\t"P"%.1f%s / 1000%s";
					new string[sizeof(f_str) +1 + (-2 + 20)];
					format(string,sizeof(string),f_str,style_box[PI[playerid][pBox]],"%",PI[playerid][pSnow],"%","%");
					D(playerid, D_DONATE_BOX, DSTH, ""P"Донат", string, "Купить", "Назад");
				}
				case 16: {
					if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет Т/С");
					D(playerid, D_DONATE_TUNE_CAR, DSM, ""P"Донат", ""G"Убрать тюнинг с личного Т/С\n\n\
						"W"Убрать весь тюнинг с Т/С\n\n\
						"W"Стоимость: "GREEN"50 рублей\n\
						"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				}
				case 17: {
					D(playerid, D_DONATE_NUMBER, DSTH, ""P"Донат", "Знаков в номере\tЦена\n\
																	"P"5 значный\t"GREEN"200 рублей\n\
																	"P"4 значный\t"GREEN"300 рублей\n\
																	"P"3 значный\t"GREEN"400 рублей\n\
																	"P"2 значный\t"GREEN"500 рублей", "Купить", "Назад");
				}
				case 18: D(playerid, D_DONATE_BLACK, DSTH, ""P"Донат", "№ Наименование\tЦена\n\
											"P"1."W" Выход из ЧС организации\t"GREEN"50 рублей\n\
											"P"2."W" Выход из ЧС всех организаций\t"GREEN"300 рублей", "Купить", "Назад");
				/*case 19: {
					if(!PI[playerid][pMute]) return ErrorMessage(playerid,"У Вас нет Бана Чата");
					D(playerid, D_DONATE_UNMUTE, DSM, ""P"Донат", ""G"Снять Бан Чата\n\n\
						"W"Стоимость: "GREEN"10 рублей\n\
						"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				}
				case 20: {
					D(playerid, D_DONATE_UNBAN, DSI, ""P"Донат", ""G"Разблокировка аккаунта\n\n\
						"W"Стоимость: "GREEN"500 рублей\n\
						"G"Введите ник игрока, которого хотите разблокировать:", "Купить", "Назад");
				}*/
				case 19: D(playerid, D_DONATE_UNNARK, DSM, ""P"Донат", ""G"Снять наркозависимость\n\n"W"Снять: "P"1000"W" от наркозависимости\nСтоимость: "GREEN"100 рублей\n"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				case 20: D(playerid, D_DONATE_JOB, DSM, ""P"Донат", ""G"Новая трудовая книжка\n\nСтоимость: "GREEN"50 рублей\n"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				case 21: pc_cmd_donate(playerid);
				case 22: {
					new query[256];
					format(query, sizeof(query), "SELECT * FROM unitpay_payments WHERE account = '%s' AND status = 1 ORDER BY dateComplete DESC LIMIT 0,20;", player_name[playerid]);
	 				mysql_tquery(connects, query, "unitpay_callback", "dd", playerid, 0);
				}
			}
		}
		case D_DONATE_JOB: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно средств");
			PI[playerid][pRouble] -= 50;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			new query[96];
			format(query,sizeof(query),"DELETE FROM `users_jobinfo` WHERE `ji_uid` = '%d'",PI[playerid][pID]);
			mysql_query(connects, query);
			SendClientMessage(playerid,CGOLD,"Новая трудовая книжка успешно получена");
		}
		case D_DONATE_UNNARK: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 100) return ErrorMessage(playerid,"У Вас недостаточно средств");
			PI[playerid][pRouble] -= 100;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно сняли наркозависимость");
			if(PI[playerid][pAddiction] - 1000 < 0) PI[playerid][pAddiction] = 0;
			else PI[playerid][pAddiction] -= 1000;
			UpdatePlayerData(playerid,"pAddiction",PI[playerid][pAddiction]);
		}
		case D_DONATE_UNBAN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 500) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(strval(inputtext) < 6 || strval(inputtext) > 24) {
				D(playerid, D_DONATE_UNBAN, DSI, ""P"Донат", ""G"Разблокировка аккаунта\n\n\
							"W"Стоимость: "GREEN"500 рублей\n\
							"G"Введите ник игрока, которого хотите разблокировать:\n\n"NO"*"G" От 6 и до 24 символов\n\n", "Купить", "Назад");
				return 1;
			}
			if(!IsBannedName(inputtext)) {
				D(playerid, D_DONATE_UNBAN, DSI, ""P"Донат", ""G"Разблокировка аккаунта\n\n\
							"W"Стоимость: "GREEN"500 рублей\n\
							"G"Введите ник игрока, которого хотите разблокировать:\n\n"NO"*"G" Данный игрок не заблокирован\n\n", "Купить", "Назад");
				return 1;
			}
			PI[playerid][pRouble] -= 500;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			UnBanName(inputtext);
			SendClientMessage(playerid,CGOLD,"Вы успешно сняли блокировку с игрока");
		}
		case D_DONATE_UNMUTE: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 10) return ErrorMessage(playerid,"У Вас недостаточно средств");
			PI[playerid][pRouble] -= 10;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно сняли Бан Чата");
			PI[playerid][pMute] = 0;
			UpdatePlayerData(playerid,"mute",0);
		}
		case D_DONATE_BLACK: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0: {
					new black_str[30] = {""G"Не в ЧС",""NO"В ЧС"};
					static const f_str[] = "Организация\tЦена\tСтатус\n\
											"G"Полиция г.ЛС\t"GREEN"50 рублей\t%s\n\
											"G"Полиция г.СФ\t"GREEN"50 рублей\t%s\n\
											"G"Полиция г.ЛВ\t"GREEN"50 рублей\t%s\n\
											"G"ФБР\t"GREEN"50 рублей\t%s\n\
											"G"Армия г.СФ\t"GREEN"50 рублей\t%s\n\
											"G"Армия г.ЛВ\t"GREEN"50 рублей\t%s\n\
											"G"Больница г.ЛС\t"GREEN"50 рублей\t%s\n\
											"G"Больница г.СФ\t"GREEN"50 рублей\t%s\n\
											"G"Больница г.ЛВ\t"GREEN"50 рублей\t%s\n\
											"G"Радиоцентр г.ЛС\t"GREEN"50 рублей\t%s\n\
											"G"Радиоцентр г.СФ\t"GREEN"50 рублей\t%s\n\
											"G"Радиоцентр г.ЛВ\t"GREEN"50 рублей\t%s\n\
											"G"Итальянская мафия\t"GREEN"50 рублей\t%s\n\
											"G"Японская мафия\t"GREEN"50 рублей\t%s\n\
											"G"Русская мафия\t"GREEN"50 рублей\t%s\n\
											"G"Ballas\t"GREEN"50 рублей\t%s\n\
											"G"Vagos\t"GREEN"50 рублей\t%s\n\
											"G"Grove\t"GREEN"50 рублей\t%s\n\
											"G"Aztec\t"GREEN"50 рублей\t%s\n\
											"G"Rifa\t"GREEN"50 рублей\t%s\n\
											"G"Белый дом\t"GREEN"50 рублей\t%s";
					new string[sizeof(f_str) + 280];
					format(string,sizeof(string),f_str,
						black_str[bl_info[playerid][bl_fraction][fLSPD]],black_str[bl_info[playerid][bl_fraction][fSFPD]],black_str[bl_info[playerid][bl_fraction][fLVPD]],
						black_str[bl_info[playerid][bl_fraction][fFBI]],black_str[bl_info[playerid][bl_fraction][fMAYOR]],black_str[bl_info[playerid][bl_fraction][fARMYSF]],
						black_str[bl_info[playerid][bl_fraction][fARMYLV]],black_str[bl_info[playerid][bl_fraction][fMEDICLS]],black_str[bl_info[playerid][bl_fraction][fMEDICSF]],
						black_str[bl_info[playerid][bl_fraction][fMEDICLV]],black_str[bl_info[playerid][bl_fraction][fLSNEWS]],black_str[bl_info[playerid][bl_fraction][fSFNEWS]],
						black_str[bl_info[playerid][bl_fraction][fLVNEWS]],black_str[bl_info[playerid][bl_fraction][fLCN]],black_str[bl_info[playerid][bl_fraction][fYAKUZA]],
						black_str[bl_info[playerid][bl_fraction][fRM]],black_str[bl_info[playerid][bl_fraction][fBALLAS]],black_str[bl_info[playerid][bl_fraction][fVAGOS]],
						black_str[bl_info[playerid][bl_fraction][fGROVE]],black_str[bl_info[playerid][bl_fraction][fAZTEC]],black_str[bl_info[playerid][bl_fraction][fRIFA]],
						black_str[bl_info[playerid][bl_fraction][fWHITEHOUSE]]);
					D(playerid, D_DONATE_BLACK_3, DSTH, ""P"Донат", string, "Купить", "Назад");
				}
				case 1: {
					D(playerid, D_DONATE_BLACK_2, DSM, ""P"Донат", ""G"Выход из ЧС всех организаций\n\n\
						"W"Стоимость: "GREEN"300 рублей\n\
						"G"Вы действительно хотите купить данную услугу?", "Купить", "Назад");
				}
			}
		}
		case D_DONATE_BLACK_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 300) return ErrorMessage(playerid,"У Вас недостаточно средств");
			PI[playerid][pRouble] -= 300;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно вышли их ЧС всех организаций");
			bl_info[playerid][bl_fraction][fLSPD] = bl_info[playerid][bl_fraction][fSFPD] = bl_info[playerid][bl_fraction][fLVPD] =
			bl_info[playerid][bl_fraction][fFBI] = bl_info[playerid][bl_fraction][fMAYOR] = bl_info[playerid][bl_fraction][fARMYSF] = 
			bl_info[playerid][bl_fraction][fARMYLV] = bl_info[playerid][bl_fraction][fMEDICLS] = bl_info[playerid][bl_fraction][fMEDICSF] = 
			bl_info[playerid][bl_fraction][fMEDICLV] = bl_info[playerid][bl_fraction][fLSNEWS] = bl_info[playerid][bl_fraction][fSFNEWS] =
			bl_info[playerid][bl_fraction][fLVNEWS] = bl_info[playerid][bl_fraction][fLCN] = bl_info[playerid][bl_fraction][fYAKUZA] =
			bl_info[playerid][bl_fraction][fRM] = bl_info[playerid][bl_fraction][fBALLAS] = bl_info[playerid][bl_fraction][fVAGOS] =
			bl_info[playerid][bl_fraction][fGROVE] = bl_info[playerid][bl_fraction][fAZTEC] = bl_info[playerid][bl_fraction][fRIFA] = 
			bl_info[playerid][bl_fraction][fWHITEHOUSE] = false;
			new query[74 + MAX_PLAYER_NAME + 6];
			format(query, sizeof(query), "DELETE FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s'", player_name[playerid]);
			mysql_pquery(connects, query, "", "");
		}
		case D_DONATE_BLACK_3: {
			if(PI[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно средств");
			new frac;
			switch(listitem) {
				case 0: frac = fLSPD;
				case 1: frac = fSFPD;
				case 2: frac = fLVPD;
				case 3: frac = fFBI;
				case 4: frac = fARMYSF;
				case 5: frac = fARMYLV;
				case 6: frac = fMEDICLS;
				case 7: frac = fMEDICSF;
				case 8: frac = fMEDICLV;
				case 9: frac = fLSNEWS;
				case 10: frac = fSFNEWS;
				case 11: frac = fLVNEWS;
				case 12: frac = fLCN;
				case 13: frac = fYAKUZA;
				case 14: frac = fRM;
				case 15: frac = fBALLAS;
				case 16: frac = fVAGOS;
				case 17: frac = fGROVE;
				case 18: frac = fAZTEC;
				case 19: frac = fRIFA;
				case 20: frac = fWHITEHOUSE;
			}
			if(bl_info[playerid][bl_fraction][frac] == false) return ErrorMessage(playerid,"Вы не состоите в ЧС данной организации");
			bl_info[playerid][bl_fraction][frac] = false;
			new query[74 + MAX_PLAYER_NAME + 6];
			format(query, sizeof(query), "DELETE FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", player_name[playerid], frac);
			mysql_pquery(connects, query, "", "");
			PI[playerid][pRouble] -= 50;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно вышли их ЧС организации");
		}
		case D_DONATE_NUMBER: {
			if(!response) return pc_cmd_donate(playerid);
			SetPVarInt(playerid, "donate_number", listitem);
			new price_number[4] = {200,300,400,500};
			if(PI[playerid][pRouble] < price_number[listitem]) return ErrorMessage(playerid,"У Вас недостаточно средств");
			static const f_str[] = ""G"Покупка номера телефона\n\n\
											Введите %d значный номер телефона, который Вы хотите приобрести:\n\
											"W"Стоимость: "GREEN"%d рублей\n";
			new string[sizeof(f_str) +7];
			format(string,sizeof(string),f_str,5-listitem,price_number[listitem]);
			D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",string,"Купить","Закрыть");
		}
		case D_DONATE_NUMBER_2: {
			if(!response) return pc_cmd_donate(playerid);
			new price_number[4] = {200,300,400,500};
			if(PI[playerid][pRouble] < price_number[GetPVarInt(playerid, "donate_number")]) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(strval(inputtext) == 111 || strval(inputtext) == 222 || strval(inputtext) == 333 || strval(inputtext) == 911) {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
												Введите 3 значный номер телефона, который Вы хотите приобрести:\n\
												"W"Стоимость: "GREEN"400 рублей\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
			switch(GetPVarInt(playerid, "donate_number")) {
				case 0: {
					if(isNumeric(inputtext) || strlen(inputtext) != 5 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
											Введите 5 значный номер телефона, который Вы хотите приобрести:\n\
											"W"Стоимость: "GREEN"200 рублей\n\n"NO"*"G" Номер должен состоять из 5 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купить","Закрыть");
						return true;
					}
				}
				case 1: {
					if(isNumeric(inputtext) || strlen(inputtext) != 4 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
												Введите 4 значный номер телефона, который Вы хотите приобрести:\n\
												"W"Стоимость: "GREEN"300 рублей\n\n"NO"*"G" Номер должен состоять из 4 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купить","Закрыть");
						return true;
					}
				}
				case 2: {
					if(isNumeric(inputtext) || strlen(inputtext) != 3 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
												Введите 3 значный номер телефона, который Вы хотите приобрести:\n\
												"W"Стоимость: "GREEN"400 рублей\n\n"NO"*"G" Номер должен состоять из 3 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купить","Закрыть");
						return true;
					}
				}
				case 3: {
					if(isNumeric(inputtext) || strlen(inputtext) != 2 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
												Введите 2 значный номер телефона, который Вы хотите приобрести:\n\
												"W"Стоимость: "GREEN"500 рублей\n\n"NO"*"G" Номер должен состоять из 2 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купить","Закрыть");
						return true;
					}
				}
			}
			new query[128];
			format(query,sizeof(query),"SELECT `pPhone` FROM `accounts` WHERE `pPhone` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "donate_shop", "dddd", playerid, strval(inputtext), GetPVarInt(playerid, "donate_number"), price_number[GetPVarInt(playerid, "donate_number")]);
		}
		case D_DONATE_TUNE_CAR: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет Т/С");
			new string[128];
			format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
			D(playerid,D_DONATE_TUNE_CAR_2,DSL,""P"Убрать тюнинг с личного Т/С",string,"Выбрать","Закрыть");
		}
		case D_DONATE_TUNE_CAR_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(!PI[playerid][pHouse] && !PI[playerid][pRoom] && house_car[playerid][listitem] == INVALID_VEHICLE_ID) return ErrorMessage(playerid,"У Вас нет Т/С");
			RemoveTuning(playerid,house_car[playerid][listitem],listitem);
			save_perf_sell(playerid,listitem);
			if(house_car[playerid][listitem] != INVALID_VEHICLE_ID) {
				for(new i; i < 5; i ++) {
					VehicleInfo[house_car[playerid][listitem]][vPEngine][i] = 0;	
					VehicleInfo[house_car[playerid][listitem]][vPBrake][i] = 0;		
				}
			}
			save_car(playerid,listitem);

			PI[playerid][pRouble] -= 50;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Тюнинг с личного Т/С успешно удалён");
		}
		case D_DONATE_BOX: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pBox] == 3) return ErrorMessage(playerid,"У Вас изучены все стили боя");
			if(PI[playerid][pRouble] < 2) return ErrorMessage(playerid,"У Вас недостаточно средств");
			PI[playerid][pRouble] -= 2;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			if(floatround(PI[playerid][pSnow]) < 1000) {
				PI[playerid][pSnow] += 2;
			}
			else if(floatround(PI[playerid][pSnow]) >= 1000) {
				PI[playerid][pBox] ++;
				UpdatePlayerData(playerid,"pBox",PI[playerid][pBox]);
				PI[playerid][pSnow] = 0;
				SendOk(playerid,"Вы изучили новый стиль боя. Для переключения введите: "W"/mm > личные настройки > стиль боя");
			}
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели навыки боевых исскуств");
			new style_box[3][9] = {"Бокс","Кунг-Фу","Кик-Бокс"};
			static const f_str[] = "Стиль боя\tЦена\tНавыки\n\
									"G"%s\t"GREEN"1р = 2%s\t"P"%.1f%s / 1000%s";
			new string[sizeof(f_str) +1 + (-2 + 20)];
			format(string,sizeof(string),f_str,style_box[PI[playerid][pBox]],"%",PI[playerid][pSnow],"%","%");
			D(playerid, D_DONATE_BOX, DSTH, ""P"Донат", string, "Купить", "Назад");
		}
		case D_DONATE_BH: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 100) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(PI[playerid][pDonateBh]) return ErrorMessage(playerid,"У Вас уже есть данная услуга");
			PI[playerid][pRouble] -= 100;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			PI[playerid][pDonateBh] = 1;
			UpdatePlayerData(playerid,"pDonateBh",PI[playerid][pDonateBh]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели услугу - Анти Банни Хоп");
		}
		case D_DONATE_ZV: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 10) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(!PI[playerid][pSearch]) return ErrorMessage(playerid,"Вы не находитесь в розыске");
			PI[playerid][pSearch] --;
			SetPlayerWantedLevel(playerid,PI[playerid][pSearch]);
			PI[playerid][pRouble] -= 10;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно сняли один уровень розыска");
		}
		case D_DONATE_SKIN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 200) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(!CheckSkin(strval(inputtext)) || strval(inputtext) < 1 || strval(inputtext) > 311) {
				D(playerid, D_DONATE_SKIN, DSI, ""P"Донат", ""G"Покупка уникального скина\n\n\
											Введите ID скина, который Вы хотите приобрести:\n\
											"W"Стоимость: "GREEN"200 рублей\n\n"NO"*"G" Выбранный скин отсутствует в продаже", "Купить", "Назад");
				return 1;
			}
			PI[playerid][pRouble] -= 200;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			PI[playerid][pSkin] = strval(inputtext);
			UpdatePlayerData(playerid,"Skin",PI[playerid][pSkin]);
			if(PI[playerid][pMember] && start_work[playerid]) {
				A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
				SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели уникальный скин");
		}
		case D_DONATE_BANK: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 150) return ErrorMessage(playerid,"У Вас недостаточно средств");
			if(PI[playerid][pDonateBank]) return ErrorMessage(playerid,"У Вас уже есть данная услуга");
			PI[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			PI[playerid][pDonateBank] = 1;
			UpdatePlayerData(playerid,"pDonateBank",PI[playerid][pDonateBank]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели услугу - мобильный банк. Воспользоваться услугой: "W"/call 0000");
		}
		case D_BUY_CAR_DONATE: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < donate_car[listitem][1]) return ErrorMessage(playerid,"У Вас недостаточно средств");
			SetPVarInt(playerid, "car_donate", listitem);
			new string[128];
			format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
			D(playerid,D_BUY_CAR_DONATE_2,DSL,""P"Донат",string,"Купить","Закрыть");
		}
		case D_BUY_CAR_DONATE_2: {
			if(!response) return DeletePVar(playerid, "car_donate");
			new carid = GetPVarInt(playerid, "car_donate");
			DeletePVar(playerid, "car_donate");
			if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет дома/номера в отеле");
			if(gPlayerCars[playerid][carModel][listitem] != 481) return ErrorMessage(playerid,"Для начала продайте автомобиль на данном слоте");

			if(PI[playerid][pRouble] < donate_car[carid][1]) return ErrorMessage(playerid,"У Вас недостаточно средств");

			gPlayerCars[playerid][carModel][listitem] = donate_car[carid][0];
			gPlayerCars[playerid][carFuel][listitem] = 30;
			gPlayerCars[playerid][carDrived][listitem] = 0;
			save_car(playerid,listitem);
			loading_cars(playerid,listitem);

			PI[playerid][pRouble] -= donate_car[carid][1];
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);

			new string[200];
			format(string,sizeof(string),""W"Поздравляем с покупкой автомобиля: "P"%s\n\n\
										"W"Автомобиль куплен за: "GREEN"$%d\n\
										"W"И доставлен к Вашему дому",gTransport[donate_car[carid][0]-400][trName],donate_car[carid][1]);
			D(playerid,DIALOG_NONE,DSM, ""P"Донат",string,"Спасибо","");
		}
		case D_DONATE_LICENSES: {
			if(!response) return pc_cmd_donate(playerid);
			new price[] = {20,30,30,50};
			if(PI[playerid][pRouble] < price[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
			if(lic[playerid][listitem]) return ErrorMessage(playerid,"У Вас уже есть данная лицензия");
			lic[playerid][listitem] = 1;
			UpdateLicenses(playerid);
			PI[playerid][pRouble] -= price[listitem];
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели лицензию");
		}
		case D_DONATE_SKILLS: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 2) return ErrorMessage(playerid,"Недостаточно средств");
			if(PI[playerid][pGunSkill][listitem] +2 >= 100) return ErrorMessage(playerid,"Выбранный навык владения оружием прокачен полностью");
			PI[playerid][pRouble] -= 2;
			PI[playerid][pGunSkill][listitem] += 2;
			if(PI[playerid][pGunSkill][listitem] > 100) PI[playerid][pGunSkill][listitem] = 100;
			SaveAccount(playerid);
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели навыки владения оружием");
			static const f_str[] = "Оружие\tЦена\tСкилл\n\
									"G"SD-Pistol\t"GREEN"1р = 2\t"P"%d%s / 100%s\n\
									"G"Desert Eagle\t"GREEN"1р = 2\t"P"%d%s / 100%s\n\
									"G"ShotGun\t"GREEN"1р = 2\t"P"%d%s / 100%s\n\
									"G"MP5\t"GREEN"1р = 2\t"P"%d%s / 100%s\n\
									"G"AK-47\t"GREEN"1р = 2\t"P"%d%s / 100%s\n\
									"G"M4\t"GREEN"1р = 2\t"P"%d%s / 100%s";
			new string[sizeof(f_str) +1 + (-2 + 20)];
			format(string,sizeof(string),f_str,PI[playerid][pGunSkill][0],"%","%",PI[playerid][pGunSkill][1],"%","%",PI[playerid][pGunSkill][2],"%","%",PI[playerid][pGunSkill][3],"%","%",PI[playerid][pGunSkill][4],"%","%",PI[playerid][pGunSkill][5],"%","%");
			D(playerid, D_DONATE_SKILLS, DSTH, ""P"Донат", string, "Купить", "Назад");
		}
		case D_DONATE_DISEASE: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 150) return D(playerid, D_DONATE_DISEASE, DSM, ""P"Донат", ""G"Иммунитет\n\n"W"Иммунитет от всех болезней\nСтоимость: "GREEN"150 рублей\n"G"Вы действительно хотите купить данную услугу?\n\n"NO"*"G" Недостаточно средств", "Купить", "Назад");
			if(PI[playerid][pDDisease] == 1) return D(playerid, D_DONATE_DISEASE, DSM, ""P"Донат", ""G"Иммунитет\n\n"W"Иммунитет от всех болезней\nСтоимость: "GREEN"150 рублей\n"G"Вы действительно хотите купить данную услугу?\n\n"NO"*"G" У Вас уже куплена данная услуга", "Купить", "Назад");
			PI[playerid][pDDisease] = 1;
			UpdatePlayerData(playerid,"pDDisease",1);
			PI[playerid][pDisease][0] = 0;
			PI[playerid][pDisease][1] = 0;
			UpdatePlayerData(playerid,"pDisease_0",0);
			UpdatePlayerData(playerid,"pDisease_1",0);
			PI[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели Иммунитет");
		}
		case D_DONATE_SATIETY: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 150) return D(playerid, D_DONATE_SATIETY, DSM, ""P"Донат", ""G"Анти-Голод\n\n"W"Анти-Голод [100% шкала сытости]\nСтоимость: "GREEN"150 рублей\n"G"Вы действительно хотите купить данную услугу?\n\n"NO"*"G" Недостаточно средств", "Купить", "Назад");
			if(PI[playerid][pDSatiety] == 1) return D(playerid, D_DONATE_SATIETY, DSM, ""P"Донат", ""G"Анти-Голод\n\n"W"Анти-Голод [100% шкала сытости]\nСтоимость: "GREEN"150 рублей\n"G"Вы действительно хотите купить данную услугу?\n\n"NO"*"G" У Вас уже куплена данная услуга", "Купить", "Назад");
			PI[playerid][pDSatiety] = 1;
			UpdatePlayerData(playerid,"pDSatiety",1);
			SetFullness(playerid, 100);
			PI[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно приобрели Анти-Голод");
		}
		case D_DONATE_ZAKON: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 10) return D(playerid, D_DONATE_ZAKON, DSM, ""P"Донат", ""G"Повышение законопослушности\n\n"W"Добавление: "P"+15"W" к законопослушности\nСтоимость: "GREEN"10 рублей\n"G"Вы действительно хотите купить данную услугу?\n\n"NO"*"G" Недостаточно средств", "Купить", "Назад");
			if(PI[playerid][pZakonp]+15 > 100) return D(playerid, D_DONATE_ZAKON, DSM, ""P"Донат", ""G"Повышение законопослушности\n\n"W"Добавление: "P"+15"W" к законопослушности\nСтоимость: "GREEN"10 рублей\n"G"Вы действительно хотите купить данную услугу?\n\n"NO"*"G" Нельзя иметь больше 100 законопослушности", "Купить", "Назад");
			PI[playerid][pZakonp] += 15;
			UpdatePlayerData(playerid,"pZakonp",PI[playerid][pZakonp]);
			PI[playerid][pRouble] -= 10;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно добавили +10 к законопослушности");
		}
		case D_DONATE_UNWARN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 100) return D(playerid, D_DONATE_UNWARN, DSM, ""P"Донат", ""G"Снятие предупреждения\n\n"W"Стоимость: "GREEN"100 рублей\n"G"Вы действительно хотите снять предупреждение?\n\n"NO"*"G" Недостаточно средств", "Снять", "Назад");
			if(!PI[playerid][pWarns]) return D(playerid, D_DONATE_UNWARN, DSM, ""P"Донат", ""G"Снятие предупреждения\n\n"W"Стоимость: "GREEN"100 рублей\n"G"Вы действительно хотите снять предупреждение?\n\n"NO"*"G" На Вашем аккаунте нет предупреждений", "Снять", "Назад");
			PI[playerid][pWarns] --;
			UpdatePlayerData(playerid,"pWarns",PI[playerid][pWarns]);
			PI[playerid][pRouble] -= 100;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Вы успешно сняли 1 предупреждение");
		}
		case D_DONATE_VIP: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0: D(playerid, D_DONATE_VIP_GHETTO, DSTH, ""P"Беззаконник", "№ Наименование\tДни\tЦена\tВыгода\n\
																					"P"1."W" V.I.P.Беззаконник\t7 дней\t80 руб.\t-\n\
																					"P"2."W" V.I.P.Беззаконник\t15 дней\t150 руб.\t21 руб.\n\
																					"P"3."W" V.I.P.Беззаконник\t30 дней\t280 руб.\t63 руб.\n\
																					"P"4."W" V.I.P.Беззаконник\t60 дней\t540 руб.\t146 руб.\n\
																					"P"5."W" Информация", "Выбрать", "Назад");
				case 1: D(playerid, D_DONATE_VIP_BAZE, DSTH, ""P"V.I.P. Начальный", "№ Наименование\tДни\tЦена\tВыгода\n\
																					"P"1."W" V.I.P. Начальный\t7 дней\t50 руб.\t-\n\
																					"P"2."W" V.I.P. Начальный\t15 дней\t90 руб.\t17 руб.\n\
																					"P"3."W" V.I.P. Начальный\t30 дней\t160 руб.\t54 руб.\n\
																					"P"4."W" V.I.P. Начальный\t60 дней\t300 руб.\t129 руб.\n\
																					"P"5."W" Информация", "Выбрать", "Назад");
				case 2: D(playerid, D_DONATE_VIP_SILVER, DSTH, ""P"V.I.P. Бронзовый", "№ Наименование\tДни\tЦена\tВыгода\n\
																					"P"1."W" V.I.P. Бронзовый\t7 дней\t60 руб.\t-\n\
																					"P"2."W" V.I.P. Бронзовый\t15 дней\t100 руб.\t29 руб.\n\
																					"P"3."W" V.I.P. Бронзовый\t30 дней\t180 руб.\t77 руб.\n\
																					"P"4."W" V.I.P. Бронзовый\t60 дней\t350 руб.\t164 руб.\n\
																					"P"5."W" Информация", "Выбрать", "Назад");
				case 3: D(playerid, D_DONATE_VIP_GOLD, DSTH, ""P"V.I.P. Серебряный", "№ Наименование\tДни\tЦена\tВыгода\n\
																					"P"1."W" V.I.P. Серебряный\t7 дней\t70 руб.\t-\n\
																					"P"2."W" V.I.P. Серебряный\t15 дней\t120 руб.\t30 руб.\n\
																					"P"3."W" V.I.P. Серебряный\t30 дней\t220 руб.\t80 руб.\n\
																					"P"4."W" V.I.P. Серебряный\t60 дней\t420 руб.\t180 руб.\n\
																					"P"5."W" Информация", "Выбрать", "Назад");
				case 4: {
					if(PI[playerid][pVips] == VIP_PLATINA) {
						D(playerid, D_DONATE_VIP_PLATIN, DSTH, ""P"V.I.P. Золотой", "№ Наименование\tДни\tЦена\tВыгода\n\
																						"P"1."W" V.I.P. Золотой\t7 дней\t80 руб.\t-\n\
																						"P"2."W" V.I.P. Золотой\t15 дней\t150 руб.\t21 руб.\n\
																						"P"3."W" V.I.P. Золотой\t30 дней\t290 руб.\t53 руб.\n\
																						"P"4."W" V.I.P. Золотой\t60 дней\t570 руб.\t116 руб.\n\
																						"P"6."W" Информация\n\
																						"P"7."W" Смена ника", "Выбрать", "Назад");
					}
					else {
						D(playerid, D_DONATE_VIP_PLATIN, DSTH, ""P"V.I.P. Золотой", "№ Наименование\tДни\tЦена\tВыгода\n\
																						"P"1."W" V.I.P. Золотой\t7 дней\t80 руб.\t-\n\
																						"P"2."W" V.I.P. Золотой\t15 дней\t150 руб.\t21 руб.\n\
																						"P"3."W" V.I.P. Золотой\t30 дней\t290 руб.\t53 руб.\n\
																						"P"4."W" V.I.P. Золотой\t60 дней\t570 руб.\t116 руб.\n\
																						"P"5."W" Информация", "Выбрать", "Назад");
					}
				}
				case 5: {
					if(PI[playerid][pVips] == VIP_ECSCLUSIVE) {
						D(playerid, D_DONATE_VIP_ECSCLUSIVE, DSTH, ""P"V.I.P. Платиновый", "№ Наименование\tДни\tЦена\tВыгода\n\
																						"P"1."W" V.I.P. Платиновый\t7 дней\t90 руб.\t-\n\
																						"P"2."W" V.I.P. Платиновый\t15 дней\t170 руб.\t23 руб.\n\
																						"P"3."W" V.I.P. Платиновый\t30 дней\t329 руб.\t66 руб.\n\
																						"P"4."W" V.I.P. Платиновый\t60 дней\t620 руб.\t151 руб.\n\
																						"P"5."W" Информация\n\
																						"P"6."W" Смена ника", "Выбрать", "Назад");
					}
					else {
						D(playerid, D_DONATE_VIP_ECSCLUSIVE, DSTH, ""P"V.I.P. Платиновый", "№ Наименование\tДни\tЦена\tВыгода\n\
																					"P"1."W" V.I.P. Платиновый\t7 дней\t90 руб.\t-\n\
																					"P"2."W" V.I.P. Платиновый\t15 дней\t170 руб.\t23 руб.\n\
																					"P"3."W" V.I.P. Платиновый\t30 дней\t329 руб.\t66 руб.\n\
																					"P"4."W" V.I.P. Платиновый\t60 дней\t620 руб.\t151 руб.\n\
																					"P"5."W" Информация", "Выбрать", "Назад");
					}
				}
				case 6: {
					if(PI[playerid][pVips] == VIP_FOREVER) {
						D(playerid, D_DONATE_VIP_FOREVER, DSTH, ""P"V.I.P. Экстра", "№ Наименование\tДни\tЦена\n\
																						"P"1."W" V.I.P. Экстра\tНавсегда\t2000 руб.\t\n\
																						"P"2."W" Информация\n\
																						"P"3."W" Смена ника", "Выбрать", "Назад");
					}
					else {
						D(playerid, D_DONATE_VIP_FOREVER, DSTH, ""P"V.I.P. Люкс", "№ Наименование\tДни\tЦена\n\
																						"P"1."W" V.I.P. Экстра\tНавсегда\t2000 руб.\t\n\
																						"P"2."W" Информация", "Выбрать", "Назад");
					}
				}
			}
		}
		case D_DONATE_VIP_GHETTO: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {80,150,280,540};
				new vip_day[] = {7,15,30,60};
				if(PI[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
				PI[playerid][pVips] = VIP_KING;
				PI[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PI[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Беззаконник");
			}
			else show_vip(playerid,VIP_KING);
		}
		case D_DONATE_VIP_BAZE: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {50,90,160,300};
				new vip_day[] = {7,15,30,60};
				if(PI[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
				PI[playerid][pVips] = VIP_BAZE;
				PI[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PI[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Начальный");
			}
			else show_vip(playerid,VIP_BAZE);
		}
		case D_DONATE_VIP_SILVER: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {60,100,180,350};
				new vip_day[] = {7,15,30,60};
				if(PI[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
				PI[playerid][pVips] = VIP_SILVER;
				PI[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PI[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Бронзовый");
			}
			else show_vip(playerid,VIP_SILVER);
		}
		case D_DONATE_VIP_GOLD: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {70,120,220,420};
				new vip_day[] = {7,15,30,60};
				if(PI[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
				PI[playerid][pVips] = VIP_GOLD;
				PI[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PI[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Серебряный");
			}
			else show_vip(playerid,VIP_GOLD);
		}
		case D_DONATE_VIP_PLATIN: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0..3: {
					new price_vip[] = {80,150,290,570};
					new vip_day[] = {7,15,30,60};
					if(PI[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
					PI[playerid][pVips] = VIP_PLATINA;
					PI[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
					PI[playerid][pRouble] -= price_vip[listitem];
					UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
					UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
					UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
					SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Золотой");
				}
				case 4: show_vip(playerid,VIP_PLATINA);
				case 5: {
					if(PI[playerid][pVipName] > unix) return ErrorMessage(playerid,"Менять ник можно раз в 10 дней");
					D(playerid, D_DONATE_CHANGENAME_2, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:", "Сменить", "Назад");
				}
			}
		}
		case D_DONATE_VIP_ECSCLUSIVE: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0..3: {
					new price_vip[] = {90,170,320,620};
					new vip_day[] = {7,15,30,60};
					if(PI[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно средств");
					PI[playerid][pVips] = VIP_ECSCLUSIVE;
					PI[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
					PI[playerid][pRouble] -= price_vip[listitem];
					UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
					UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
					UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
					SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Платиновый");
				}
				case 4: show_vip(playerid,VIP_ECSCLUSIVE);
				case 5: {
					if(PI[playerid][pVipName] > unix) return ErrorMessage(playerid,"Менять ник можно раз в 5 дней");
					D(playerid, D_DONATE_CHANGENAME_2, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:", "Сменить", "Назад");
				}
			}
		}
		case D_DONATE_VIP_FOREVER: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0: {
					if(PI[playerid][pRouble] < 2000) return ErrorMessage(playerid,"Недостаточно средств");
					PI[playerid][pVips] = VIP_FOREVER;
					PI[playerid][pVipTime] = (unix + 86400 * 90);
					PI[playerid][pRouble] -= 2000;
					UpdatePlayerData(playerid,"pVips",PI[playerid][pVips]);
					UpdatePlayerData(playerid,"pVipTime",PI[playerid][pVipTime]);
					UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
					SendClientMessage(playerid, CGOLD, "Поздравляем с покупкой V.I.P. Экстра");
				}
				case 1: show_vip(playerid,VIP_FOREVER);
				case 2: {
					if(PI[playerid][pVipName] > unix) return ErrorMessage(playerid,"Менять ник можно раз в 3 дня");
					D(playerid, D_DONATE_CHANGENAME_2, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:", "Сменить", "Назад");
				}
			}
		}
		case D_DONATE_POINT: {
			if(!response) return pc_cmd_donate(playerid);
			if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
			new moneys;
			if(sscanf(inputtext,"i", moneys)) {
				static const f_str[] = "\
										"G"Покупка EXP + поинтов в семью\n\n\
										"W"На счету Вашего аккаунта "O"%d "W"руб.\n\
										Введите сумму, которую Вы хотите получить:\n\
										Курс: "GREEN"1 рубль = 10 поинтов";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str,PI[playerid][pRouble]);
				D(playerid, D_DONATE_POINT, DSI, ""P"Донат", string, "Купить", "Назад");
				return 1;
			}
			if(PI[playerid][pRouble] < moneys) {
				static const f_str[] = "\
										"G"Покупка EXP + поинтов в семью\n\n\
										"W"На счету Вашего аккаунта "O"%d "W"руб.\n\
										Введите сумму, которую Вы хотите получить:\n\
										Курс: "GREEN"1 рубль = 10 поинтов\n\
										\n"NO"*"G" Недостаточно средств";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str,PI[playerid][pRouble]);
				D(playerid, D_DONATE_POINT, DSI, ""P"Донат", string, "Купить", "Назад");
				return 1;
			}
			if(moneys > 10000 || moneys < 1) return ErrorMessage(playerid, "От 1 до 10000");
			reputation_family(PI[playerid][pFamily]-1,10*moneys);
			SendClientMessage(playerid, CGOLD, "Операция успешно произведена");
			PI[playerid][pRouble] -= moneys;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);

			new string[128];
	
			format(string,sizeof(string),"[!] %s %s: пополнил счёт семьи(EXP+Поинты) на %d",GetFamName(PI[playerid][pFamily]-1,PI[playerid][pFamRank]),player_name[playerid],10*moneys);
			FamMSG(PI[playerid][pFamily],string);
			return 1;
		}
		case D_DONATE_CONVERT: {
			if(!response) return pc_cmd_donate(playerid);
			new moneys;
			if(sscanf(inputtext,"i", moneys)) {
				static const f_str[] = "\
										"G"Покупка игровой валюты\n\n\
										"W"На счету Вашего аккаунта "O"%d "W"руб.\n\
										Введите сумму, которую Вы хотите получить:\n\
										Курс: "GREEN"1 рубль = $3000";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str, PI[playerid][pRouble]);
				D(playerid, D_DONATE_CONVERT, DSI, ""P"Донат", string, "Купить", "Назад");
				return 1;
			}
			if(PI[playerid][pRouble] < moneys) {
				static const f_str[] = "\
										"G"Покупка игровой валюты\n\n\
										"W"На счету Вашего аккаунта "O"%d "W"руб.\n\
										Введите сумму, которую Вы хотите получить:\n\
										Курс: "GREEN"1 рубль = $3000\n\
										\n"NO"*"G" Недостаточно средств";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str, PI[playerid][pRouble]);
				D(playerid, D_DONATE_CONVERT, DSI, ""P"Донат", string, "Купить", "Назад");
				return 1;
			}
			if(moneys > 10000 || moneys < 1) return ErrorMessage(playerid, "От 1 до 10000");
			GiveMoney(playerid,moneys * 3000,"донат конверт");
			SendClientMessage(playerid, CGOLD, "Операция успешно произведена. Ваш счёт пополнен");
			PI[playerid][pRouble] -= moneys;
			UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
			return 1;
		}
		case D_DONATE_CHANGENAME: {
			if(!response) return pc_cmd_donate(playerid);
			if(PI[playerid][pRouble] < 20) return D(playerid, D_DONATE_CHANGENAME, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:\nСтоимость: "GREEN"20 рублей\n\n"NO"*"G" Недостаточно средств", "Сменить", "Назад");
			if(!strlen(inputtext) || IsTextInvalid(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !IsARPName(inputtext) || strfind(inputtext, " ") != -1) return D(playerid, D_DONATE_CHANGENAME, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:\nСтоимость: "GREEN"20 рублей\n\n"NO"*"G" Некорректный формат игрового имени", "Сменить", "Назад");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			format(query,sizeof(query), "SELECT `Name` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "GrandChangeName", "d", playerid);
			return 1;
		}
		case D_DONATE_CHANGENAME_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(!strlen(inputtext) || IsTextInvalid(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !IsARPName(inputtext) || strfind(inputtext, " ") != -1) return D(playerid, D_DONATE_CHANGENAME_2, DSI, ""P"Донат", ""G"Смена игрового имени\n\n"W"Введите новое игровое имя:\n\n"NO"*"G" Некорректный формат игрового имени", "Сменить", "Назад");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			format(query,sizeof(query), "SELECT `Name` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "GrandChangeName2", "d", playerid);
			return 1;
		}
		case D_DJMAKE: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 15) {
				D(playerid,D_DJMAKE,DSI, ""P"Введите ник DJ","\n\n"W"Введите ник DJ:\n\n\
																Минимальное количество символов: "P"3\n\
																"W"Максимальное количество символов: "P"15","Изменить","Отмена");
				return true;
			}
			new query[128], string[100];
			new iddj = 	GetPVarInt(playerid, "makeDJ");
			mysql_format(connects, query, sizeof(query), "INSERT INTO `rjlist` (`pid`, `lvl`, `nick`) VALUES ('%d', '1', '%e')", PI[iddj][pID],inputtext);
 			mysql_tquery(connects, query, "", "");

			format(string, sizeof(string), "%s успешно добавлен в список DJ под ником %s", player_name[iddj],inputtext);
			SendOk(playerid, string);
			format(string, sizeof(string), "[DJ]"W" %s(DJ %s) добавил в команду %s (DJ %s)",player_name[playerid],DJname[playerid],player_name[iddj],inputtext);
			SendDJMessage(COLOR_YELLOW, string);
		}
		case D_SELL_SIM: {
			if(response) {
				new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
				new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
				if(!IsPlayerConnected(sell_sim_id)) return ErrorMessage(playerid,"Игрок который хотел продать Вам SIM-карту оффлайн");
				if(PI[playerid][pCash] < sell_sim_sum) {
					ErrorMessage(playerid,"У Вас нет столько денег");
					SendOk(sell_sim_id,"У покупателя недостаточно средств");
					return 1;
				}
				new string[128];
				format(string, sizeof(string), "Вы приобрели SIM-карту у "P"%s "G"за "ORANGE"$%i", player_name[sell_sim_id],sell_sim_sum);
				SendUse(playerid, string);
				format(string, sizeof(string), ""P"%s "G"купил у Вас SIM-карту за "ORANGE"$%i", player_name[playerid],sell_sim_sum);
				SendUse(sell_sim_id, string);
				
				string[0] = EOS;
				format(string,64,"продал симку %s",player_name[playerid]);
				GiveMoney(sell_sim_id, sell_sim_sum, string);
				string[0] = EOS;
				format(string,64,"купил симку у %s",player_name[sell_sim_id]);
				GiveMoney(playerid, -sell_sim_sum, string);

				PI[playerid][pPhone] = PI[sell_sim_id][pPhone];
				PI[sell_sim_id][pPhone] = 0;
				UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
				UpdatePlayerData(sell_sim_id,"pPhone",PI[sell_sim_id][pPhone]);
				format(string, sizeof(string), "Ваш новый номер: "W"%i",PI[playerid][pPhone]);
				SendClientMessage(playerid, CGOLD, string);
			}
			else {
				SendOk(GetPVarInt(playerid, "sim_id_sell")-1, "Игрок отказался от покупки SIM-карты");
				SendOk(playerid, "Вы отказались от покупки SIM-карты");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
		}
		case D_AMMOSG: { //тир
			if(!response) return 1;
			CreateShootingBox(playerid);
		}
		case D_BIZZ_TAXI_INFO: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			switch(listitem) {
				case 0: showstattaxi(playerid,bizz);
				case 1: {
					if(PI[playerid][bizz_status] == 6) return ErrorMessage(playerid,"Вы не можете уволиться из таксопарка");
					PI[playerid][bizz_work] = 0;
					UpdatePlayerData(playerid,"bizz_work",0);
					PI[playerid][bizz_status] = 0;
					UpdatePlayerData(playerid,"bizz_status",0);
					SendOk(playerid,"Вы уволились из таксопарка");
				}
			}
		}
		case D_BIZZ_TAXI: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			dialog_taxi(playerid,bizz,listitem);
		}
		case D_BIZZ_TAXI_ZAM: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			switch(listitem) {
				case 0: dialog_taxi(playerid,bizz,0);
				case 1: dialog_taxi(playerid,bizz,10);
				case 2: dialog_taxi(playerid,bizz,11);
			}
		}
		case D_BIZZ_TAXI_CAR: {
			if(!response) return 1;
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			SetPVarInt(playerid,"func_car_taxi",listitem);
			switch(FuncBizz[bizz][funcbCar][listitem]) {
				case 0: {
					new string[328],str[128];
					if(gBusiness[bizz][bizzType] == 11) {
						strcat(string,"№. Модель\tКласс\tСтоимость\n");
						for(new i; i < sizeof(taxi_car); i ++) {
							format(str, sizeof(str), ""ORANGE"%d."W" %s\t%s\t%d\n", i+1,gTransport[taxi_car[i][0]-400][trName],taxi_class[taxi_car[i][1]],gTransport[taxi_car[i][0]-400][trPrice]),strcat(string,str);
						}
					}
					else if(gBusiness[bizz][bizzType] == 14) {
						strcat(string,"№. Модель\tГрузоподъемность\tСтоимость\n");
						for(new i; i < sizeof(tk_car); i ++) {
							format(str, sizeof(str), ""ORANGE"%d."W" %s\t%d\t%d\n", i+1,gTransport[tk_car[i][0]-400][trName],tk_car[i][1],gTransport[tk_car[i][0]-400][trPrice]),strcat(string,str);
						}
					}
					D(playerid,D_BIZZ_TAXI_CAR_2,DSTH,"Покупка машины",string,"Купить","Отмена");
				}
				default: {
					if(gBusiness[bizz][bizzType] == 11) {
						static const f_str[] = ""W"Вы собираетесь продать автомобиль "P"%s\n\n"YELLOW"Вы действительно хотите продать данный автомобиль за "GREEN"$%d?";
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
						format(string,sizeof(string),f_str,gTransport[FuncBizz[bizz][funcbCar][listitem]-400][trName],gTransport[FuncBizz[bizz][funcbCar][listitem]-400][trPrice]/2);
						D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""P"Продажа машины",string,"Да","Отмена");
					}
					else if(gBusiness[bizz][bizzType] == 14) {
						static const f_str[] = ""W"Вы собираетесь продать автомобиль "P"%s\n\n"YELLOW"Вы действительно хотите продать данный автомобиль за "GREEN"$%d?";
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
						format(string,sizeof(string),f_str,gTransport[FuncBizz[bizz][funcbCar][listitem]-400][trName],gTransport[FuncBizz[bizz][funcbCar][listitem]-400][trPrice]/2);
						D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""P"Продажа машины",string,"Да","Отмена");
					}
				}
			}
		}
		case D_BIZZ_TAXI_CAR_2: {
			if(!response) return DeletePVar(playerid,"func_car_taxi");
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			SetPVarInt(playerid,"func_car_taxi_2",listitem);
			new id_slot = GetPVarInt(playerid,"func_car_taxi");
			new id_car = GetPVarInt(playerid,"func_car_taxi_2");
			if(FuncBizz[bizz][funcbCar][id_slot] != 0) return ErrorMessage(playerid,"На данном слоте уже есть автомобиль");
			if(gBusiness[bizz][bizzType] == 11) {
				static const f_str[] = ""W"Вы собираетесь приобрести автомобиль "P"%s "YELLOW"[%s]\n\n"YELLOW"Вы действительно хотите купить данный автомобиль за "GREEN"$%d?";
				new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
				format(string,sizeof(string),f_str,gTransport[taxi_car[id_car][0]-400][trName],taxi_class[taxi_car[id_car][1]],gTransport[taxi_car[id_car][0]-400][trPrice]);
				D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""P"Покупка машины",string,"Да","Отмена");
			}
			else if(gBusiness[bizz][bizzType] == 14) {
				static const f_str[] = ""W"Вы собираетесь приобрести автомобиль "P"%s "YELLOW"[%d]\n\n"YELLOW"Вы действительно хотите купить данный автомобиль за "GREEN"$%d?";
				new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
				format(string,sizeof(string),f_str,gTransport[tk_car[id_car][0]-400][trName],tk_car[id_car][1],gTransport[tk_car[id_car][0]-400][trPrice]);
				D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""P"Покупка машины",string,"Да","Отмена");
			}
		}
		case D_BIZZ_TAXI_CAR_3: {
			if(!response) return DeletePVar(playerid,"func_car_taxi"),DeletePVar(playerid,"func_car_taxi_2");
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			new id_slot = GetPVarInt(playerid,"func_car_taxi");
			new id_car = GetPVarInt(playerid,"func_car_taxi_2");
			DeletePVar(playerid,"func_car_taxi");
			DeletePVar(playerid,"func_car_taxi_2");
			switch(FuncBizz[bizz][funcbCar][id_slot]) {
				case 0: {
					if(gBusiness[bizz][bizzType] == 11) {
						if(gBusiness[bizz][bizzBank] < gTransport[taxi_car[id_car][0]-400][trPrice]) return ErrorMessage(playerid,"В кассе таксопарка недостаточно средств для покупки");
						FuncBizz[bizz][funcbCar][id_slot] = taxi_car[id_car][0];
						gBusiness[bizz][bizzBank] -= gTransport[taxi_car[id_car][0]-400][trPrice];
						UpdateBusinessDataInt(bizz,"bank",gBusiness[bizz][bizzBank]);
					}
					if(gBusiness[bizz][bizzType] == 14) {
						if(gBusiness[bizz][bizzBank] < gTransport[tk_car[id_car][0]-400][trPrice]) return ErrorMessage(playerid,"В кассе транспортной компании недостаточно средств для покупки");
						FuncBizz[bizz][funcbCar][id_slot] = tk_car[id_car][0];
						gBusiness[bizz][bizzBank] -= gTransport[tk_car[id_car][0]-400][trPrice];
						UpdateBusinessDataInt(bizz,"bank",gBusiness[bizz][bizzBank]);
					}

					new funcstr[1024], Cache:result, rows, car_slot;
					mysql_format(connects, funcstr, sizeof(funcstr), "SELECT * FROM `business_cars` WHERE `bizzID` = '%d' AND `car_slot` = '%d'", bizz, id_slot);
					result = mysql_query(connects, funcstr);
					
					rows = cache_num_rows();
					
					if(rows)
					{
					    for(new i; i < rows; i ++)
					    {
						    cache_get_value_name_int(i, "car_slot", car_slot);

							creare_funccar(bizz,car_slot,id_slot);
						}
					}
					cache_delete(result);
					
					SendOk(playerid,"Автомобиль успешно куплен");
				}
				default: {
					if(gBusiness[bizz][bizzType] == 11) {
						gBusiness[bizz][bizzBank] += gTransport[FuncBizz[bizz][funcbCar][id_slot]-400][trPrice]/2;
						UpdateBusinessDataInt(bizz,"bank",gBusiness[bizz][bizzBank]);

						DestroyDynamicObject(tuningtaxi[FuncBizz[bizz][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_1[FuncBizz[bizz][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_shash[FuncBizz[bizz][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_text[FuncBizz[bizz][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_text_1[FuncBizz[bizz][funcbSlot]][id_slot]);
					}
					if(gBusiness[bizz][bizzType] == 14) {
						gBusiness[bizz][bizzBank] += gTransport[FuncBizz[bizz][funcbCar][id_slot]-400][trPrice]/2;
						UpdateBusinessDataInt(bizz,"bank",gBusiness[bizz][bizzBank]);
					}
					FuncBizz[bizz][funcbCar][id_slot] = 0;
					A_DestroyVehicle(FuncBizz[bizz][funcbCars][id_slot]);
					FuncBizz[bizz][funcbCars][id_slot] = INVALID_VEHICLE_ID;
					SendOk(playerid,"Автомобиль успешно продан");
				}
			}
			save_funcar(bizz);
		}
		case D_BIZZ_TAXI_NAME: {
			if(!response) return 1;
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 20) {
				if(gBusiness[bizz][bizzType] == 11) {
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""P"Название такси","\n\n"W"Введите новое название таксопарка:\n\n\
																	Минимальное количество символов: "P"3\n\
																	"W"Максимальное количество символов: "P"20","Изменить","Отмена");
					return true;
				}
				else if(gBusiness[bizz][bizzType] == 14){
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""P"Название транспортной компании","\n\n"W"Введите новое название транспортной компании:\n\n\
														Минимальное количество символов: "P"3\n\
														"W"Максимальное количество символов: "P"20","Изменить","Отмена");
					return true;
				}
				else if(gBusiness[bizz][bizzType] == 15){
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""P"Название банковского отделения","\n\n"W"Введите новое название банковского отделения:\n\n\
														Минимальное количество символов: "P"3\n\
														"W"Максимальное количество символов: "P"20","Изменить","Отмена");
					return true;
				}
			}
			if(is_text_invalid(inputtext)) return ErrorMessage(playerid,"Присутствуют запрещенные символы");
			strmid(FuncBizz[bizz][funcbName],inputtext, 0, strlen(inputtext));
			new query[128];
			format(query,sizeof(query),"UPDATE `business_func` SET `name` = '%s' WHERE `bizzID` = '%i'",FuncBizz[bizz][funcbName],bizz);
 			mysql_tquery(connects, query, "", "");

			new string[54];
			format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[bizz][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
			SetDynamicObjectMaterialText(biz_text[FuncBizz[bizz][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
			UpdateBusinessText(bizz-1);
			if(gBusiness[bizz][bizzType] == 15) {
				static const f_str[] = "Новое название Вашего банковского отделения: {%s}%s";
				new str[sizeof(f_str) +1 + (-2 + 21) + (-2 + 20)];
				format(str,sizeof(str),f_str,color_td[FuncBizz[FuncBizz[bizz][funcbID]][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
				SendUse(playerid,str);
				return 1;
			}
			else {
				static const f_str[] = "Новое название %s: {%s}%s";
				new str[sizeof(f_str) +1 + (-2 + 21) + (-2 + 21) + (-2 + 20)];
				format(str,sizeof(str),f_str,(gBusiness[bizz][bizzType] == 11) ? ("Вашего таксопарка") : ("Вашей транспортной компании"),color_td[FuncBizz[FuncBizz[bizz][funcbID]][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
				SendUse(playerid,str);
			}
		}
		case D_BIZZ_TAXI_NAMECAR: {
			if(!response) return 1;
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 12) {
				D(playerid,D_BIZZ_TAXI_NAMECAR,DSI, ""P"Название такси","\n\n"W"Введите новое название на автомобилях:\n\n\
																Минимальное количество символов: "P"3\n\
																"W"Максимальное количество символов: "P"12","Изменить","Отмена");
				return true;
			}
			if(is_text_invalid(inputtext)) return ErrorMessage(playerid,"Присутствуют запрещенные символы");
			strmid(FuncBizz[bizz][funcbNameCar],inputtext, 0, strlen(inputtext));
			new query[128];
			format(query,sizeof(query),"UPDATE `business_func` SET `name_car` = '%s' WHERE `bizzID` = '%i'",FuncBizz[bizz][funcbNameCar],bizz);
 			mysql_tquery(connects, query, "", "");

			update_bfunc(2,bizz,-1);
			static const f_str[] = "Новый текст на автомобилях такси: "ORANGE"%s";
			new string[sizeof(f_str) +1 + (-2 + 13)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbNameCar]);
			SendUse(playerid,string);
		}
		case D_BIZZ_TAXI_TARIF: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return 1;
			switch(listitem) {
				case 0: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Эконом\n\n\
																"W"Доступный диапазон: от "GREEN"$50"W" до "GREEN"$200"W" за 1 км.","Изменить","Отмена");
				case 1: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Комфорт\n\n\
																"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Изменить","Отмена");
				case 2: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Микроавтобус\n\n\
																"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Изменить","Отмена");
				case 3: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Бизнес\n\n\
																"W"Доступный диапазон: от "GREEN"$150"W" до "GREEN"$600"W" за 1 км.","Изменить","Отмена");
			}
			SetPVarInt(playerid,"select_tarif",listitem+1);
		}
		case D_BIZZ_TAXI_TARIF_2: {
			if(!response) return DeletePVar(playerid,"select_tarif");
			if(!PI[playerid][pBusiness]) return 1;
			new list = GetPVarInt(playerid,"select_tarif")-1;
			new tarif = strval(inputtext);
			switch(list) {
				case 0: {
					if(tarif < 50 || tarif > 200) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Эконом\n\n\
																"W"Доступный диапазон: от "GREEN"$50"W" до "GREEN"$200"W" за 1 км.","Изменить","Отмена");
						return 1;
					}
				}
				case 1: {
					if(tarif < 100 || tarif > 400) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Комфорт\n\n\
																"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Изменить","Отмена");
						return 1;
					}
				}
				case 2: {
					if(tarif < 100 || tarif > 400) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Микроавтобус\n\n\
																"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Изменить","Отмена");
						return 1;
					}
				}
				case 3: {
					if(tarif < 150 || tarif > 600) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""P"Название такси","\n\n"W"Введите тариф для класса "P"Бизнес\n\n\
																"W"Доступный диапазон: от "GREEN"$150"W" до "GREEN"$600"W" за 1 км.","Изменить","Отмена");
						return 1;
					}
				}
			}
			FuncBizz[PI[playerid][pBusiness]][funcbTarif][list] = tarif;
			save_funtarif(PI[playerid][pBusiness]);
			static const f_str[] =  "Вы установили новый тариф "ORANGE"%d"G" для класса "P"%s";
			new str[sizeof(f_str) +1 + (-2 + 4) + (-2 + 24)];
			format(str,sizeof(str),f_str,tarif,taxi_class[list]);
			SendUse(playerid,str);

			static const f_string[] =  "Руководитель таксопарка установил тариф "GREEN"%d"YELLOW" для класса %s";
			new string[sizeof(f_string) +1 + (-2 + 4) + (-2 + 24)];
			format(string,sizeof(string),f_string,tarif,taxi_class[list]);
			BizzMSG(PI[playerid][pBusiness],COLOR_YELLOW,string);
		}
		case D_BIZZ_TAXI_PERCENT: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return 1;
			new bizz = PI[playerid][pBusiness];
			new percent = strval(inputtext);
			if(percent < 1 || percent > 50) {
				if(gBusiness[bizz][bizzType] == 11) {
					D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""P"Процент от прибыли","\n\n"W"Введите процент взымаемый от прибыли таксистов Вашего таксопарка\n\n\
														Доступный диапазон: от "P"1% "W"до "P"50%","Изменить","Отмена");
					return 1;
				}
				else if(gBusiness[bizz][bizzType] == 14) {
					D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""P"Процент от прибыли","\n\n"W"Введите процент взымаемый от прибыли работников Вашей транспортной компании\n\n\
														Доступный диапазон: от "P"1% "W"до "P"50%","Изменить","Отмена");
					return 1;
				}
			}
			FuncBizz[PI[playerid][pBusiness]][funcbPercent] = percent;
			UpdateFuncBizzData(PI[playerid][pBusiness],"percent",FuncBizz[PI[playerid][pBusiness]][funcbPercent]);
			static const f_string[] = "Руководитель %s установил процент от прибыли в размере: %d процент(а)";
			new str[sizeof(f_string) +1 + (-2 + 20) + (-2 + 4)];
			format(str,sizeof(str),f_string,(gBusiness[bizz][bizzType] == 11) ? ("таксопарка") : ("транспортной компании"),FuncBizz[PI[playerid][pBusiness]][funcbPercent]);
			BizzMSG(PI[playerid][pBusiness],COLOR_YELLOW,str);
		}
		case D_BIZZ_BO_PERCENT: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return 1;
			switch(listitem) {
				case 0: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.1;
				case 1: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.2;
				case 2: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.3;
				case 3: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.4;
				case 4: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.5;
				case 5: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.6;
				case 6: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.7;
				case 7: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.8;
				case 8: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 0.9;
				case 9: FuncBizz[PI[playerid][pBusiness]][funcbPercent2] = 1.0;
			}
			new query[128];
			format(query,sizeof(query),"UPDATE `business_func` SET `percent2` = '%.1f' WHERE `bizzID` = '%d'",FuncBizz[PI[playerid][pBusiness]][funcbPercent2],PI[playerid][pBusiness]);
			mysql_tquery(connects, query,"","");
			static const f_str[] = "Вы изменили процент комиссий переводов: "ORANGE"%.1f процент(а)";
			new string[sizeof(f_str) +1 + (-2 + 4)];
			format(string,sizeof(string),f_str,FuncBizz[PI[playerid][pBusiness]][funcbPercent2]);
			SendUse(playerid,string);
		}
		case D_BIZZ_BO_PERCENT_2: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return 1;
			new percent = strval(inputtext);
			if(percent < 1 || percent > 5) {
				D(playerid,D_BIZZ_BO_PERCENT_2,DSI, ""P"Комиссия за оплату недвижимости","\n\n"W"Введите процент комиссии взымаемый с человека во время опаты недвижимости\n\n\
																Доступный диапазон: от "P"1% "W"до "P"5%","Изменить","Отмена");
				return 1;
			}
			FuncBizz[PI[playerid][pBusiness]][funcbPercent] = percent;
			UpdateFuncBizzData(PI[playerid][pBusiness],"percent",FuncBizz[PI[playerid][pBusiness]][funcbPercent]);
			static const f_str[] = "Вы установили новый процент комиссии за оплату недвижимости: "ORANGE"%d процент(а)";
			new string[sizeof(f_str) +1 + (-2 + 4)];
			format(string,sizeof(string),f_str,FuncBizz[PI[playerid][pBusiness]][funcbPercent]);
			SendUse(playerid,string);
		}
		case D_BIZZ_BO_PERCENT_3: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return 1;
			new percent = strval(inputtext);
			if(percent < 1 || percent > 5) {
				D(playerid,D_BIZZ_BO_PERCENT_3,DSI, ""P"Комиссия за пользование банкоматом","\n\n"W"Введите процент комиссии взымаемый с человека во время пользования банкоматом\n\n\
																Доступный диапазон: от "P"1% "W"до "P"5%","Изменить","Отмена");
				return 1;
			}
			FuncBizz[PI[playerid][pBusiness]][funcbPercent3] = percent;
			UpdateFuncBizzData(PI[playerid][pBusiness],"percent3",FuncBizz[PI[playerid][pBusiness]][funcbPercent3]);
			static const f_str[] = "Вы установили новый процент комиссии за пользование банкоматом: "ORANGE"%d процент(а)";
			new string[sizeof(f_str) +1 + (-2 + 4)];
			format(string,sizeof(string),f_str,FuncBizz[PI[playerid][pBusiness]][funcbPercent3]);
			SendUse(playerid,string);
		}
		case D_BIZZ_TAXI_PHONE: {
			if(!response) return 1;
			if(!PI[playerid][pBusiness]) return 1;
		    if(isNumeric(inputtext) || strval(inputtext) < 1000 || strval(inputtext) > 9900) {
				static const f_str[] = "\n\n"W"Текущий номер вашего таксопарка: "YELLOW"%d\n\n\
											"W"Введите желаемый новый номер телефона для Вашего таксопарка\n\
											Доступный диапазон: от "P"1000"W" до "P"9900\n\
											"W"Стоимость номера: "GREEN"$50000\n\
											"W"Стоимость номера с 4 одинаоквыми числами: "GREEN"$300000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 5)];
				format(string,sizeof(string),f_str,FuncBizz[PI[playerid][pBusiness]][funcbNum]);
				D(playerid,D_BIZZ_TAXI_PHONE,DSI, ""P"Покупка номера телефона",string,"Купить","Отмена");
				return 1;
			}
			new query[128];
			format(query,sizeof(query),"SELECT `number` FROM `business_func` WHERE `number` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "sim_bizz", "dd", playerid, strval(inputtext));
		}
		case D_BIZZ_TAXI_MEM: {
			if(!response) return 1;
			GetWord(inputtext[3],0, select_member[playerid], strlen(inputtext[3])+1);
			new id = GetPlayerID(select_member[playerid]);
			new names[24],status,query[128];
			format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
			new Cache:result = mysql_query(connects, query);
			new rows = cache_num_rows();
			if(rows > 0) {
				cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
				cache_get_value_name_int(0, "bizz_status",status);
				if(PI[playerid][bizz_status] == 6 || PI[playerid][bizz_status] == 5) {
					if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
					if(status == 6) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
					if(PI[playerid][bizz_status] == 5) {
						if(status == 5 || status == 6) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
					}
					static const f_str[] = "\t%s\n\
											"P"1. "W"Изменить доступ:\n\
											\t%s- Эконом\n\
											\t%s- Комфорт\n\
											\t%s- Микроавтобус\n\
											\t%s- Бизнес\n\
											\t%s- Управляющий\n\
											"P"2. "NO"Уволить";
					new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
					format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""),(status == 3) ? (""P"") : (""W""),(status == 4) ? (""P"") : (""W""),(status == 5) ? (""P"") : (""W""));
					D(playerid,D_BIZZ_TAXI_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
				}
			}
			else ErrorMessage(playerid, "Сотрудник не найден");
			cache_delete(result);
		}
		case D_BIZZ_TAXI_MEM_2: {
			if(!response) return 1;
			new id = GetPlayerID(select_member[playerid]);
			if(PI[playerid][bizz_status] == 5 || PI[playerid][bizz_status] == 6) {
				switch(listitem) {
					case 2..6: {
						if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							PI[id][bizz_status] = listitem-1;
							UpdatePlayerData(id,"bizz_status",PI[id][bizz_status]);
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_status` = '%d' WHERE `Name` = '%s' LIMIT 1",listitem-1,select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы изменили доступ к автомобилям таксопарка для сотрудника "ORANGE"%s"G" на "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
						format(string,sizeof(string),f_str,select_member[playerid],taxi_class[listitem-2]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz", 150, 0, "ii", playerid,PI[playerid][bizz_work]);
						return 1;
					}
					case 7: {
						if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PI[id][bizz_work]) RemovePlayerFromVehicleAC(id);
							PI[id][bizz_work] = 0;
							UpdatePlayerData(id,"bizz_work",0);
							SendOk(id,"Управляющий таксопарка уволил вас из предприятия");
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_work` = '0',`bizz_cash` = '0',`bizz_status` = '0' WHERE `Name` = '%s' LIMIT 1",select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы уволили сотрудника таксопарка "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
						format(string,sizeof(string),f_str,select_member[playerid]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz", 150, 0, "ii", playerid,PI[playerid][bizz_work]);
						return 1;
					}
					default: {
						new names[24],status,query[128];
						format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
							cache_get_value_name_int(0, "bizz_status",status);
							if(PI[playerid][bizz_status] == 6) {
								if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
								if(status == 6 || status == 5) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
								static const f_str[] = "\t%s\n\
														"P"1. "W"Изменить доступ:\n\
														\t%s- Эконом\n\
														\t%s- Комфорт\n\
														\t%s- Микроавтобус\n\
														\t%s- Бизнес\n\
														\t%s- Управляющий\n\
														"P"2. "NO"Уволить";
								new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
								format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""),(status == 3) ? (""P"") : (""W""),(status == 4) ? (""P"") : (""W""),(status == 5) ? (""P"") : (""W""));
								D(playerid,D_BIZZ_TAXI_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
							}
						}
						else ErrorMessage(playerid, "Сотрудник не найден");
						cache_delete(result);
						return 1;
					}
				}
			}
			members_funcbizz(playerid,PI[playerid][bizz_work]);
		}
		case D_TAXI_CALL: {
			if(!response) return DeletePVar(playerid,"taxi_call_bizz");
			new bizz = GetPVarInt(playerid,"taxi_call_bizz");
			DeletePVar(playerid,"taxi_call_bizz");
			new ids[4];
			if(GetPlayerVirtualWorld(playerid) != 0) return ErrorMessage(playerid,"Для вызова такси выйдите из помещения");
			if(GetPVarInt(playerid,"taxi_time") > gettime()) return ErrorMessage(playerid,"Вы уже вызвали такси, попробуйте позже");
			for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(!IsValidVehicle(i)) continue;
				if(VehicleInfo[i][vBizz] != bizz) continue;
				if(!IsVehicleOccupied(i)) continue;
				switch(GetVehicleModel(i)) {
					case 426,438: ids[0] ++;
					case 540,550: ids[1] ++;
					case 560,580: ids[3] ++;
					case 483: ids[2] ++;
				}
			}
			if(listitem < 2) return 1;
			if(!ids[listitem-2]) return ErrorMessage(playerid,"Нет свободных таксистов данного класса");
			SendOk(playerid,"Вы вызвали такси, ожидайте подтверждения заказа");

			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][bizz_work] != bizz) continue;
				if(GetPlayerVirtualWorld(i) != 0) continue;
				static const f_str[] = ""W"%s"YELLOW" вызывает такси класса "W"%s. "YELLOW"Расстояние: "W"%.2f км";
				new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 12) + (-2 + 6)];
				format(str,sizeof(str),f_str,player_name[playerid],taxi_class[listitem-2],GetDistanceBetweenPlayers(playerid,i));
				SendClientMessage(i,COLOR_YELLOW,str);
				SendClientMessage(i,COLOR_YELLOW,"Введите "W"/taxilist"YELLOW" для просмотра заказов");
			}
			SetPVarInt(playerid,"taxi_class",listitem-1);
			SetPVarInt(playerid,"taxi_bizz",bizz);
			SetPVarInt(playerid,"taxi_time",gettime()+60);
		}
		case D_TAXIST: {
			if(!response) return 1;
			new id = GetPlayerID(inputtext[3]);
			DeletePVar(id,"taxi_class");
			DeletePVar(id,"taxi_bizz");
			DeletePVar(id,"taxi_time");
			static const f_str[] = "[TAXI] "W"%s"YELLOW" принял Ваш заказ. Автомобиль: "W"%s";
			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 12)];
			format(str,sizeof(str),f_str,player_name[playerid],gTransport[GetVehicleModel(GetPlayerVehicleID(playerid))-400][trName]);
			SendClientMessage(id,COLOR_YELLOW,str);

			static const f_string[] = "[TAXI] "W"%s"YELLOW" принял заказ "W"%s";
			new string[sizeof(f_string) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + MAX_PLAYER_NAME)];
			format(string,sizeof(string),f_string,player_name[playerid],player_name[id]);
			BizzMSG(PI[playerid][bizz_work],COLOR_YELLOW,string);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(id, X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
		}
		case D_TAXI_COUNT: {
			if(!response) return 1;
			new id = GetPlayerID(inputtext[3]);
			TI[playerid][tTaxiGoing] = true;
			TI[playerid][tTaxiPass] = id;
			TI[playerid][tTaxiStart] = VehicleInfo[GetPlayerVehicleID(playerid)][vDrived];
			SendOk(playerid,"Вы включили счётчик");
			SendOk(playerid,""ORANGE"/taxi"G" запросить у пассажира место назначения");
		}
		case D_GPS_GOTO:
			{
			    if(!response) return 1;

	            if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					SetPlayerPosAC(playerid, GetPlayerGPSInfo(playerid, G_POS_X), GetPlayerGPSInfo(playerid, G_POS_Y), GetPlayerGPSInfo(playerid, G_POS_Z),
						GetPlayerGPSInfo(playerid, G_INTERIOR), GetPlayerGPSInfo(playerid, G_WORLD));

					SetPlayerInterior(playerid, GetPlayerGPSInfo(playerid, G_INTERIOR));
					SetPlayerVirtualWorld(playerid, GetPlayerGPSInfo(playerid, G_WORLD));

				}
	            else
				{
					SetVehiclePos(GetPlayerVehicleID(playerid), GetPlayerGPSInfo(playerid, G_POS_X), GetPlayerGPSInfo(playerid, G_POS_Y), GetPlayerGPSInfo(playerid, G_POS_Z));

                    SetPlayerInterior(playerid, GetPlayerGPSInfo(playerid, G_INTERIOR));
					SetPlayerVirtualWorld(playerid, GetPlayerGPSInfo(playerid, G_WORLD));
			
					LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerGPSInfo(playerid, G_INTERIOR));
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetPlayerGPSInfo(playerid, G_WORLD));
					
	    			SetPlayerInterior(playerid, GetPlayerGPSInfo(playerid, G_INTERIOR));
					SetPlayerVirtualWorld(playerid, GetPlayerGPSInfo(playerid, G_WORLD));
				}
	            GameTextForPlayer(playerid, "~g~SUCCESS", 3000, 1);
	            return 1;
	      	}
		case D_GPS: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 7) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшей АЗС успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 1: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 1) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшей Закусочной успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 2: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 2) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшего 24-7 успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 3: {
					new max_distance = 100000;
					new id_atm = -1;
					for(new i = 1; i <= MAX_ATM; i ++) {
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, ATMData[i][ATM_Pos][0],ATMData[i][ATM_Pos][1],ATMData[i][ATM_Pos][2])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), ATMData[i][ATM_Pos][0],ATMData[i][ATM_Pos][1],ATMData[i][ATM_Pos][2]));
						if(here_distance < max_distance) {
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшего банкомата успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,ATMData[id_atm][ATM_Pos][0],ATMData[id_atm][ATM_Pos][1],ATMData[id_atm][ATM_Pos][2]);
					return 1;
				}
				case 4: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 5) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Местоположение ближайшего магазина одежды успешно отмечено в вашем GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 5: {
					D(playerid,D_GPS_O,DSL,""P"Общественные места",""P"1."W" Автошкола\n\
											"P"2."W" Военкомат\n\
											"P"3."W" ЖД Вокзал г. ЛС\n\
											"P"4."W" ЖД Вокзал г. СФ\n\
											"P"5."W" ЖД Вокзал г. ЛВ\n\
											"P"6."W" Церковь\n\
											"P"7."W" Казино\n\
											"P"8."W" Ловля рыбы\n\
											"P"9."W" Спорт-Зал\n\
											"P"10."W" Центр развлечений\n\
											"P"11."W" Наркопритон","Выбрать","Назад");
					
				}
				case 6: {
					D(playerid,D_GPS_WORK,DSL,""P"Работы",""P"1."W" Яблочный сад\n\
											"P"2."W" Оружейный завод\n\
											"P"3."W" Нефтезавод\n\
											"P"4."W" Лесопилка\n\
											"P"5."W" Аренда автобусов г. ЛС\n\
											"P"6."W" Аренда автобусов г. СФ\n\
											"P"7."W" Аренда автобусов г. ЛВ\n\
											"P"8."W" Аренда развозчиков продуктов\n\
											"P"9."W" Аренда развозчиков топлива\n\
											"P"10."W" Аренда развозчиков еды г. ЛС\n\
											"P"11."W" Аренда развозчиков еды г. СФ\n\
											"P"12."W" Аренда транспорта механиков г. ЛС №1\n\
											"P"13."W" Аренда транспорта механиков г. ЛС №2\n\
											"P"14."W" Аренда транспорта механиков г. СФ №1\n\
											"P"15."W" Аренда транспорта механиков г. СФ №2\n\
											"P"16."W" Аренда транспорта механиков г. ЛВ №1\n\
											"P"17."W" Аренда транспорта механиков г. ЛВ №2\n\
											"P"18."W" Аренда транспорта для уборки улиц\n\
											"P"19."W" Аренда транспорта для скашивания травы","Выбрать","Назад");
				}
				case 7: {
					D(playerid,D_GPS_AUTOSALON,DSL,""P"Автосалоны и тюнинги","\
											"P"1."W" Автосалон [Эконом]\n\
											"P"2."W" Автосалон [Стандарт]\n\
											"P"3."W" Автосалон [Спорт]\n\
											"P"4."W" Мотосалон\n\
											"P"5."W" Тюнинг г. ЛС\n\
											"P"6."W" Тюнинг г. СФ\n\
											"P"7."W" Тюнинг г. ЛВ","Выбрать","Назад");
				}
				case 8: {
					D(playerid,D_GPS_GOS,DSL,""P"Государственные организации","\
											"P"1."W" Белый дом\n\
											"P"2."W" Мэрия\n\
											"P"3."W" Полицейский участок г. ЛС\n\
											"P"4."W" Полицейский участок г. СФ\n\
											"P"5."W" Полицейский участок г. ЛВ\n\
											"P"6."W" Больница г. ЛС\n\
											"P"7."W" Больница г. СФ\n\
											"P"8."W" Больница г. ЛВ\n\
											"P"9."W" ФБР\n\
											"P"10."W" Армия [Сухопутные войска]\n\
											"P"11."W" Армия [Военно-морской флот]\n\
											"P"12."W" Лицензеры\n\
											"P"13."W" Радиоцентр г. ЛС\n\
											"P"14."W" Радиоцентр г. СФ\n\
											"P"15."W" Радиоцентр г. ЛВ\n\
											"P"16."W" Тюрьма","Выбрать","Назад");
				}
				case 9: {
					D(playerid,D_GPS_NOLEGAL,DSL,""P"Нелегальные организации","\
											"P"1."W" The Ballas Gang\n\
											"P"2."W" The Vagos Gang\n\
											"P"3."W" The Grove Gang\n\
											"P"4."W" The Aztecas Gang\n\
											"P"5."W" The Rifa Gang\n\
											"P"6."W" Итальянская мафия\n\
											"P"7."W" Японская мафия\n\
											"P"8."W" Русская мафия\n\
											"P"9."W" Чёрный рынок\n\
											"P"10."W" Дуэли\n\
											"P"11."W" Ограбление домов","Выбрать","Назад");
				}
				case 10:
				{
				    new string[256];
					new count_ammo = 1;
					for(new i = 1; i < gBusinessCount; i ++) {
					    if(gBusiness[i][bizzType] != 15) continue;
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,gBusiness[i][bizzName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_BANK, DSL, ""P"Банки", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Банки не найдены");
				}
				case 11: {
					new string[2512];
					new count_ammo = 1;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzUpgrade][1] != 1) continue;
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,gBusiness[i][bizzName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_BIZZ, DSL, ""P"Бизнесы", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Бизнесы не найдены");
				}
				case 12:
				{
					new string[256];
					new count_ammo = 1;
					for(new i = 0; i < gHotelCount; i ++) {
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,gHotels[i][hotelName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_HOTEL, DSL, ""P"Отели", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Отели не найдены");
				}
				case 13:
				{
				    new string[256];
					new count_ammo = 1;
					for(new i = 0; i < gAirCount; i ++) {
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,gAirs[i][airName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_AIRPORT, DSL, ""P"Аэропорты", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Аэропорты не найдены");
				}
				case 14:
				{
					new string[512];
					new count_ammo = 1;
					for(new i = 1; i < gBusinessCount; i ++)
					{
						if(gBusiness[i][bizzType] != 11) continue;
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,FuncBizz[i][funcbName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_TAXI, DSL, ""P"Таксопарки", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Таксопарки не найдены");
				}
				case 15:
				{
				    new string[4096], strings[4096], count_ammo = 1;
				    
					format(string,sizeof(string),"\
						"P"1."W" [Загрузка] Оружейный завод\n\
						"P"2."W" [Загрузка] Нефтезавод\n\
						"P"3."W" [Разгрузка] Порт г. СФ\n\
						"P"4."W" [Разгрузка] Порт г. ЛС\n\
						"P"5."W" [Разгрузка] Оружейный завод\n");
						
					for(new i = 1; i < gBusinessCount; i ++)
					{
						if(gBusiness[i][bizzType] != 14) continue;
						
						format(strings,sizeof(strings),""P"%d."W" %s\n",count_ammo+5,FuncBizz[i][funcbName]);
						strcat(string, strings);
						
						count_ammo++;
					}
					D(playerid, D_GPS_TK, DSL, ""P"Транспортные компании", string, "Выбрать", "Назад");
				}
				case 16:
				{
				    new string[2512];
					new count_ammo = 1;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 10) continue;
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,gBusiness[i][bizzName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_GAME, DSL, ""P"Развлечения", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Развлечения не найдены");
				}
				case 17:
				{
				    new string[256];
					new count_ammo = 1;
					for(new i = 1; i < gBusinessCount; i ++) {
					    if(gBusiness[i][bizzType] != 16) continue;
						format(string,sizeof(string),"%s"P"%d."W" %s\n",string,count_ammo,gBusiness[i][bizzName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_RIELTOR, DSL, ""P"Риэлторские агенства", string, "Выбрать", "Назад");
					else ErrorMessage(playerid,"Риэлторские агенства не найдены");
				}
			}
		}
		case D_GPS_O: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[28];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,2187.6289,-2197.4480,22.0478), str = "Автошколы";
				case 1: EnableGPSForPlayer(playerid,1916.4010,2302.0427,15.5697), str = "Военкомата";
				case 2: EnableGPSForPlayer(playerid,2494.9819,-1805.0677,22.2100), str = "Автовокзала г. ЛС";
				case 3:
				{
					//ErrorMessage(playerid, "Не доступно!");
					EnableGPSForPlayer(playerid,1890.2421,2038.2003,17.2723), str = "Автовокзала г. СФ";//пофиксить
				}
				case 4:
				{
					//ErrorMessage(playerid, "Не доступно!");
					EnableGPSForPlayer(playerid,197.2227,838.5482,12.3272), str = "Автовокзала г. ЛВ";//пофиксить
				}
				case 5: EnableGPSForPlayer(playerid,1912.2568,2183.3430,15.7060), str = "Церкви";
				case 6: EnableGPSForPlayer(playerid,-192.7492,630.5344,12.0010), str = "Казино";
				case 7: EnableGPSForPlayer(playerid,1987.4982,991.9432,15.4402), str = "Ловли рыбы";//пофиксить
				case 8: EnableGPSForPlayer(playerid,-231.4539,945.5009,12.0844), str = "Спорт-Зала";
				case 9: EnableGPSForPlayer(playerid,2454.2534,-1903.3557,21.9619), str = "Центра развлечений";//пофиксить
				case 10: EnableGPSForPlayer(playerid,409.7368,968.8696,12.5516), str = "Наркопритон";//пофиксить
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_WORK: {
			if(!response) return pc_cmd_gps(playerid);
			new string[144],str[40];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,1654.6044,2226.4363,15.1801), str = "Яблочного сада";//пофиксить
				case 1: EnableGPSForPlayer(playerid,2892.6079,-1361.1183,1.3313), str = "Оружейного завода";//пофиксить
				case 2: EnableGPSForPlayer(playerid,2738.1997,-2276.4375,17.9269), str = "Нефтезавода";//пофиксить
				case 3: EnableGPSForPlayer(playerid,1831.2653,1459.9362,9.9700), str = "Лесопилки";//пофиксить
				case 4: EnableGPSForPlayer(playerid,2243.7415,-1954.4022,18.8125), str = "Аренды автобусов г. ЛС";//пофиксить
				case 5: EnableGPSForPlayer(playerid,1888.4780,2256.0354,15.5060), str = "Аренды автобусов г. СФ";//пофиксить
				case 6: EnableGPSForPlayer(playerid,429.0622,782.6144,11.5528), str = "Аренды автобусов г. ЛВ";//пофиксить
				case 7: EnableGPSForPlayer(playerid,2017.2015,-2587.9453,10.8226), str = "Аренды развозчиков продуктов";//пофиксить
				case 8: EnableGPSForPlayer(playerid,2055.0291,-2586.6394,10.8149), str = "Аренды топлива продуктов";//пофиксить
				case 9: EnableGPSForPlayer(playerid,2498.1792,-637.6623,12.0020), str = "Аренды развозчиков еды г. ЛС";//пофиксить
				case 10: EnableGPSForPlayer(playerid,1816.5942,2488.5361,15.6717), str = "Аренды развозчиков еды г. СФ";//пофиксить
				case 11: EnableGPSForPlayer(playerid,2272.0107,-1931.8497,21.9692), str = "Аренды транспорта механиков г. ЛС №1";
				case 12: EnableGPSForPlayer(playerid,2529.2170,-2165.9189,21.9694), str = "Аренды транспорта механиков г. ЛС №2";
				case 13: EnableGPSForPlayer(playerid,1745.5760,2425.0383,14.9512), str = "Аренды транспорта механиков г. СФ №1";
				case 14: EnableGPSForPlayer(playerid,1770.4866,2236.3149,15.4194), str = "Аренды транспорта механиков г. СФ №2";
				case 15: EnableGPSForPlayer(playerid,-421.4068,1045.2223,12.0230), str = "Аренды транспорта механиков г. ЛВ №1";//пофиксить
				case 16: EnableGPSForPlayer(playerid,221.9038,1664.8551,12.0000), str = "Аренды транспорта механиков г. ЛВ №2";//пофиксить
				case 17: EnableGPSForPlayer(playerid,1969.0511,-2587.2964,10.8149), str = "Аренда транспорта для уборки улиц";//пофиксить
				case 18: EnableGPSForPlayer(playerid,1994.4725,-2585.7927,10.8226), str = "Аренда транспорта для скашивания травы";//пофиксить
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_GOS: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[32];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,-318.7470,722.0333,12.0010), str = "Белого дома";//пофиксить
				case 1: EnableGPSForPlayer(playerid,1908.5549,-2243.0327,11.0945), str = "Правительства";
				case 2: EnableGPSForPlayer(playerid,-587.7632,476.6361,11.5094), str = "Полицейского участка г. ЛС";
				case 3: EnableGPSForPlayer(playerid,2748.0056,-2443.5215,21.6890), str = "Полицейского участка г. СФ";
				case 4: EnableGPSForPlayer(playerid,2580.5569,-2415.7356,21.9953), str = "Полицейского участка г. ЛВ";//пофиксить
				case 5: EnableGPSForPlayer(playerid,2113.7253,-2383.5383,21.5531), str = "Больницы г. ЛС";
				case 6:
				{
					ErrorMessage(playerid, "Не доступно!");
					//EnableGPSForPlayer(playerid,-2654.8313,623.7918,14.4531), str = "Больницы г. СФ";//пофиксить
				}
				case 7:
				{
					ErrorMessage(playerid, "Не доступно!");
					//EnableGPSForPlayer(playerid,1607.5950,1831.1354,10.8203), str = "Больницы г. ЛВ";//пофиксить
				}
				case 8: EnableGPSForPlayer(playerid,2412.4600,-1849.2751,21.8503), str = "ФБР";
				case 9:
				{
					ErrorMessage(playerid, "Не доступно!");
					//EnableGPSForPlayer(playerid,0.0,0.0,0.0), str = "Армии [сухопутные войска]";//пофиксить
				}
				case 10: EnableGPSForPlayer(playerid,781.3303,-410.1868,4.0000), str = "Армии [военно-морской флот]";
				case 11: EnableGPSForPlayer(playerid,2174.3533,-2197.7297,23.1784), str = "Лицензеров";
				case 12: EnableGPSForPlayer(playerid,1976.8444,-2700.7385,10.9778), str = "Радиоцентра г. ЛС";
				case 13:
				{
					ErrorMessage(playerid, "Не доступно!");
					//EnableGPSForPlayer(playerid,-2482.1636,-616.2321,132.5656), str = "Радиоцентра г. СФ";//пофиксить
				}
				case 14:
				{
					ErrorMessage(playerid, "Не доступно!");
					//EnableGPSForPlayer(playerid,2615.1035,1172.8719,10.7614), str = "Радиоцентра г. ЛВ";//пофиксить
				}
				case 15: EnableGPSForPlayer(playerid,-1808.3132,-2878.7231,22.6285), str = "Тюрьма";//пофиксить
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_NOLEGAL: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[24];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,-287.8625,1040.1838,12.0802), str = "The Ballas Gang";
				case 1: EnableGPSForPlayer(playerid,163.5456,1034.5892,13.7109), str = "The Vagos Gang";
				case 2: EnableGPSForPlayer(playerid,-671.0748,870.4196,12.0000), str = "The Grove Gang";
				case 3: EnableGPSForPlayer(playerid,317.6296,1866.1141,11.9870), str = "The Aztecas Gang";
				case 4: EnableGPSForPlayer(playerid,785.9185,2455.3586,12.0000), str = "The Rifa Gang";
				case 5: EnableGPSForPlayer(playerid,482.1486,742.1371,12.0000), str = "Итальянской мафии";
				case 6:
				{
					ErrorMessage(playerid, "Не доступно!");
					//EnableGPSForPlayer(playerid,2514.0728,1824.1353,10.7868), str = "Японской мафии";//пофиксить
				}
				case 7: EnableGPSForPlayer(playerid,379.6704,1550.9363,12.0004), str = "Русской мафии";
				case 8: EnableGPSForPlayer(playerid,-2295.6011,-134.7951,25.4431), str = "Чёрного рынка";//пофиксить
				case 9: EnableGPSForPlayer(playerid,2302.4607,-1712.4628,21.9609), str = "Дуэлей";//пофиксить
				case 10: EnableGPSForPlayer(playerid,-2202.4827,-126.2161,26.1306), str = "Ограбления домов";//пофиксить
			}
			if(listitem != 6)
			{
				format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
				SendClientMessage(playerid,CGOLD,string);
			}
		}
		case D_GPS_BANK:
		{
		    if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 1; i < gBusinessCount; i ++)
			{
				if(gBusiness[i][bizzType] != 15) continue;
				if((count_ammo-1) == listitem)
				{
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					
					if(gBusiness[i][bizzWorld] == 0)
					{
						EnableGPSForPlayer(playerid,gBusiness[i][bizzX], gBusiness[i][bizzY], gBusiness[i][bizzZ]);
					}
					else
					{
						format(string,sizeof(string),"Офис %s находится в интерьере банка штата.",gBusiness[i][bizzName]);
						SendClientMessage(playerid, CGREEN, string);

						EnableGPSForPlayer(playerid,gBusiness[i][gpsX], gBusiness[i][gpsY], gBusiness[i][gpsZ]);
					}
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_RIELTOR:
		{
		    if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 1; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzType] != 16) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_AIRPORT:
		{
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gAirCount; i ++) {
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gAirs[i][airName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_TAXI: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 1; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzType] != 11) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",FuncBizz[i][funcbName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_TK:
		{
			if(!response) return pc_cmd_gps(playerid);
			
			new count_ammo = 1,string[128], str[1024],stringss[500];
			
			switch(listitem)
			{
				case 0:
				{
					EnableGPSForPlayer(playerid,2902.6968,-1288.8588,1.3119), str = "[Загрузка] Оружейный завод";
					
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
					SendClientMessage(playerid,CGOLD,string);
				}
				case 1:
				{
					EnableGPSForPlayer(playerid,2738.4099,-2272.0891,17.9269), str = "[Загрузка] Нефтезавод";

					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
					SendClientMessage(playerid,CGOLD,string);
				}
    			case 2:
				{
					EnableGPSForPlayer(playerid,1713.8218,3504.8047,2.6100), str = "[Разгрузка] Порт г. СФ";

					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
					SendClientMessage(playerid,CGOLD,string);
				}
				case 3:
				{
					EnableGPSForPlayer(playerid,2943.0398,-1286.9751,1.3162), str = "[Разгрузка] Порт г. ЛС";

					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
					SendClientMessage(playerid,CGOLD,string);
				}
				case 4:
				{
					EnableGPSForPlayer(playerid,1771.4325,3453.3499,2.1509), str = "[Разгрузка] Оружейный завод";

					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
					SendClientMessage(playerid,CGOLD,string);
				}
				default:
				{
				    for(new i = 1; i < gBusinessCount; i ++)
					{
						if(gBusiness[i][bizzType] != 14) continue;

						if((count_ammo-1) == listitem-5)
						{
							format(stringss,sizeof(stringss),"Местоположение %s успешно отмечено в вашем GPS",FuncBizz[i][funcbName]);
							SendClientMessage(playerid, CGOLD, stringss);

							EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
						}
						count_ammo++;
					}
				}
			}
			return 1;
		}
		case D_GPS_HOTEL: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gHotelCount; i ++) {
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gHotels[i][hotelName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_BIZZ: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 1; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzUpgrade][1] != 1) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_AUTOSALON: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[22];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,2475.3518,-733.6874,12.0969), str = "Автосалона [Эконом]";
				case 1: EnableGPSForPlayer(playerid,2325.0452,-1804.2061,22.4540), str = "Автосалона [Стандарт]";
				case 2: EnableGPSForPlayer(playerid,389.5608,786.0237,12.0000), str = "Автосалона [Спорт]";//Пофиксить
				case 3: EnableGPSForPlayer(playerid,2141.6421,-1803.2435,18.9452), str = "Мотосалона";//Пофиксить
				case 4: EnableGPSForPlayer(playerid,2233.3906,-1802.6907,21.7119), str = "Тюнинга г. ЛС";//Пофиксить
				case 5: EnableGPSForPlayer(playerid,1911.0051,2926.1563,12.0000), str = "Тюнинга г. СФ";//Пофиксить
				case 6: EnableGPSForPlayer(playerid,-395.8915,1010.1804,12.1450), str = "Тюнинга г. ЛВ";//Пофиксить
			}
			format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_GAME:
		{
		    if(!response) return pc_cmd_gps(playerid);
		    new count_ammo = 1,string[128];
			for(new i = 1; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzType] != 10) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Местоположение %s успешно отмечено в вашем GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case DIALOG_ATM_EDIT: {
			if(!response) {
				EdittingATM[playerid] = 0;
				return 1;
			}
			new string[128], atmID = EdittingATM[playerid];
			switch (listitem) {
				case 0: {
					EditDynamicObject(playerid, ATMData[atmID][atm_Object]);
					format(string, sizeof(string), "Вы изменяете позицию ATM (ID: %d).", atmID);
					SendOk(playerid, string);
				}
				case 1: {
					new vw, Float:ATMPosa[4], int;
					GetPlayerPos(playerid, ATMPosa[0], ATMPosa[1], ATMPosa[2]);
					GetPlayerFacingAngle(playerid, ATMPosa[3]);
					vw  = GetPlayerVirtualWorld(playerid);
					int = GetPlayerInterior(playerid);
					ATMData[atmID][ATM_Pos][0]   = ATMPosa[0];
					ATMData[atmID][ATM_Pos][1]   = ATMPosa[1];
					ATMData[atmID][ATM_Pos][2]   = ATMPosa[2];
					ATMData[atmID][ATM_Pos][3]   = 0;
					ATMData[atmID][ATM_Pos][4]   = 0;
					ATMData[atmID][ATM_Pos][5]   = ATMPosa[3];
					ATMData[atmID][atm_VW]  	 = vw;
					ATMData[atmID][atm_INT]  	 = int;
					ATMData[atmID][atm_Taken]    = 1;
					
					SaveATM(atmID);
					
					DestroyDynamicObject(ATMData[atmID][atm_Object]);
				//	ATMData[atmID][atm_Object] = CreateDynamicObject(2942, ATMData[atmID][ATM_Pos][0]+2, ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);

					UpdateATMLabel(atmID);
				}
				case 2: D(playerid, DIALOG_ATM_EDIT_DELETE, DSM, ""P"Удаление ATM", "Удалить банкомат?", "Да", "Нет");
			}
		}
		case DIALOG_ATM_EDIT_DELETE: {
			new title[128], atmID = EdittingATM[playerid];
			if(!response) {
				format(title, sizeof(title), "Изменение ATM: (ID: %d)", atmID);
				D(playerid, DIALOG_ATM_EDIT, DSL, title, "Изменение позиции(редактор)\nПеренести позицию на свои координаты\nУдаление ATM", "Далее", "Отмена");
			}
			else DeleteATM(playerid, atmID);
		}
		case D_FREE: {
			if(!response) return 1;
			new id = GetPVarInt(playerid,"FreeOffer") - 1;
			new price = GetPVarInt(playerid,"FreePrice");
			new percent = floatround(price/100*15);
			DeletePVar(playerid,"FreePrice");
			DeletePVar(playerid,"FreeOffer");
			switch(listitem) {
				case 0: {
					if(PI[playerid][pCash] < price) {
						SendOk(id, "У игрока недостаточно средств для оплаты Ваших услуг");
						ErrorMessage(playerid, "Недостаточно средств для оплаты");
						return 1;
					}
					GiveMoney(playerid,-price,"оплата адвокату");
					GiveMoney(id,percent,"услуги адвоката");
				}
				case 1: {
					if(PI[playerid][pBank] < price) {
						SendOk(id, "У игрока недостаточно средств для оплаты Ваших услуг");
						ErrorMessage(playerid, "Недостаточно средств для оплаты");
						return 1;
					}
					PI[playerid][pBank] -= price;
					PI[id][pBank] += percent;
					UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);
					UpdatePlayerData(id,"pBank",PI[id][pBank]);
				}
			}
			FI[fWHITEHOUSE][fBank] += (price-percent);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			new string[156];
			format(string, sizeof(string), "Адвокат "P"%s"G" освободил Вас за "ORANGE"$%d",player_name[id], price);
			SendUse(playerid,string);
			
			format(string, sizeof(string), "Вы выпустили "P"%s"G" за "ORANGE"$%d."G" Способ оплаты: "W"%s",player_name[playerid], percent,(listitem == 0) ? ("наличные") : ("банк. счёт"));
			SendUse(id,string);
			SetPlayerPosAC(playerid, camExit[PI[playerid][pJail]-1][0],camExit[PI[playerid][pJail]-1][1],camExit[PI[playerid][pJail]-1][2], 0, 0);
			SetPlayerFacingAngle(playerid,camExit[PI[playerid][pJail]-1][3]);
			SetCameraBehindPlayer(playerid);
			PI[playerid][pJailTime] = 0;
			PI[playerid][pJail] = 0;
			UpdatePlayerData(playerid,"pJailTime",0);
			UpdatePlayerData(playerid,"pJail",0);
			GameTextForPlayer(playerid, "~g~~h~FREEDOM", 5000, 1);
			return 1;
		}
		case D_ECONOMY: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Казна штата: \t\t\t\t\t"YELLOW"$%d\n\n\
											"W"Заработная плата оружейный завод:\t"GREEN"$%d\n\
											"W"Заработная плата нефтезавод:\t\t"GREEN"$%d\n\
											"W"Заработная плата яблочный сад:\t\t"GREEN"$%d\n\
											"W"Заработная плата лесопилка:\t\t"GREEN"$%d\n\
											"W"Заработная плата алькатрас:\t\t\t"GREEN"$%d\n\
											"W"Налогообложение бизнесов:\t\t"ORANGE"%d%%\n\
											"W"Налоги заработных плат гос.структур:\t"ORANGE"%d%%";
					new string[sizeof(f_str) +1 + (-2 + 13) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3)];
					format(string,sizeof(string),f_str,FI[fWHITEHOUSE][fBank],WorkSalary[0],WorkSalary[1],WorkSalary[3],WorkSalary[2],WorkSalary[4],Nalog[3],Nalog[0]);
					D(playerid,DIALOG_NONE,DSM, ""P"Информация",string,"Закрыть","");
				}
				case 1: {
					static const f_str[] = "\n\n"W"Заработная плата на оружейном заводе составляет: "GREEN"$%d\n\
											Установите новую заработную плату на оружейном заводе:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[0]);
					D(playerid,D_ECONOMY_GUN,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 2: {
					static const f_str[] = "\n\n"W"Заработная плата на нефтезаводе составляет: "GREEN"$%d\n\
											Установите новую заработную плату на нефтезаводе:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[1]);
					D(playerid,D_ECONOMY_OIL,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 3: {
					static const f_str[] = "\n\n"W"Заработная плата в яблочном саду составляет: "GREEN"$%d\n\
											Установите новую заработную плату в яблочном саду:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[3]);
					D(playerid,D_ECONOMY_APPLE,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 4: {
					static const f_str[] = "\n\n"W"Заработная плата на лесопилке составляет: "GREEN"$%d\n\
											Установите новую заработную плату на лесопилке:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[4]);
					D(playerid,D_ECONOMY_WOOD,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 5: {
					static const f_str[] = "\n\n"W"Заработная плата в алькатрасе составляет: "GREEN"$%d\n\
											Установите новую заработную плату в алькатрасе:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[2]);
					D(playerid,D_ECONOMY_ALCO,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 6: {
					static const f_str[] = "\n\n"W"Налогообложение бизнесов составляет: "GREEN"$%d\n\
											Установите новое налогообложение бизнесов:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[3]);
					D(playerid,D_ECONOMY_BIZZ,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 7: {
					static const f_str[] = "\n\n"W"Налоги заработных плат гос.структур составляют: "GREEN"$%d\n\
											Установите новые налоги заработных плат гос.структур:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[0]);
					D(playerid,D_ECONOMY_NALOG,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 8: D(playerid,D_ECONOMY_SALARY,DSL,"Управление штатом",""P"1."W" Полиция\n"P"2."W" ФБР\n"P"3."W" Армии\n"P"4."W" МЧС\n"P"5."W" Новостные студии\n"P"6."W" Белый дом","Выбрать", "Отмена");
				case 9: D(playerid,D_ECONOMY_PREM,DSL,""P"Управление штатом",""P"1."W" Полиция ЛС\n"P"2."W" Полиция СФ\n"P"3."W" Полиция ЛВ\n"P"4."W" ФБР\n"P"5."W" Армия СФ\n"P"6."W" Армия ЛВ\n"P"7."W" Больница г.ЛС\n"P"8."W" Больница г.СФ\n"P"9."W" Больница г.ЛВ\n"P"10."W" Радиоцентр ЛС\n"P"11."W" Радиоцентр СФ\n"P"12."W" Радиоцентр ЛВ","Выбрать", "Отмена");
				case 10: D(playerid,D_ECONOMY_PENS,DSL,""P"Управление штатом",""P"1."W" Размер пенсии\n"P"2."W" Пенсионный возраст","Выбрать", "Отмена");
				case 11: D(playerid,D_ECONOMY_PUT,DSI,""P"Управление штатом","\n\n"W"Укажите сумму, на которую хотите пополнить казну штата\n\n","Пополнить", "Отмена");
				case 12: D(playerid,D_ECONOMY_INPUT,DSI,""P"Управление штатом","\n\n"W"Укажите сумму, которую хотите снять с казны штата\n\n","Снять", "Отмена");
			}
		}
		case D_ECONOMY_PENS: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = "\n\n"W"Размер пенсии составляет: "GREEN"$%d\n\
											Установите новый размер пенсии:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[2]);
					D(playerid,D_ECONOMY_PENS_1,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
				case 1: {
					static const f_str[] = "\n\n"W"Пенсионный возраст составляет: "GREEN"%d\n\
											Установите новый пенсионный возраст:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[1]);
					D(playerid,D_ECONOMY_PENS_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				}
			}
		}
		case D_ECONOMY_PENS_1: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 5000 || salary > 9000) {
				static const f_str[] = "\n\n"W"Размер пенсии составляет: "GREEN"$%d\n\
											Установите новый размер пенсии:\n\n"NO"*"G" От $5000 до $9000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[2]);
				D(playerid,D_ECONOMY_PENS_1,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			Nalog[2] = salary;
			UpdateEconomyData("nalog_3",salary);
			static const f_string[] = "Размер пенсии в размере "GREEN"$%d"G" установлен";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[2]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_PENS_2: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 15 || salary > 25) {
				static const f_str[] = "\n\n"W"Пенсионный возраст составляет: "GREEN"%d\n\
											Установите новый пенсионный возраст:\n\n"NO"*"G" От 15 до 25\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[1]);
				D(playerid,D_ECONOMY_PENS_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			Nalog[1] = salary;
			UpdateEconomyData("nalog_2",salary);
			static const f_string[] = "Пенсионный возраст "GREEN"$%d"G" лет установлен";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[1]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_GUN: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 60 || salary > 160) {
				static const f_str[] = "\n\n"W"Заработная плата на оружейном заводе составляет: "GREEN"$%d\n\
											Установите новую заработную плату на оружейном заводе:\n\n"NO"*"G" От $60 до $160\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[0]);
				D(playerid,D_ECONOMY_GUN,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			WorkSalary[0] = salary;
			UpdateEconomyData("work_gun",salary);
			static const f_string[] = "Заработная плата на оружейном заводе в размере "ORANGE"$%d"G" установлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[0]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_OIL: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 120 || salary > 220) {
				static const f_str[] = "\n\n"W"Заработная плата на нефтезаводе составляет: "GREEN"$%d\n\
											Установите новую заработную плату на нефтезаводе:\n\n"NO"*"G" От $120 до $220\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[1]);
				D(playerid,D_ECONOMY_OIL,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			WorkSalary[1] = salary;
			UpdateEconomyData("work_oil",salary);
			static const f_string[] = "Заработная плата на нефтезаводе в размере "ORANGE"$%d"G" установлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[1]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_APPLE: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 30 || salary > 120) {
				static const f_str[] = "\n\n"W"Заработная плата в яблочном саду составляет: "GREEN"$%d\n\
											Установите новую заработную плату в яблочном саду:\n\n"NO"*"G" От $30 до $120\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[3]);
				D(playerid,D_ECONOMY_APPLE,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			WorkSalary[3] = salary;
			UpdateEconomyData("work_apple",salary);
			static const f_string[] = "Заработная плата в яблочном саду в размере "ORANGE"$%d"G" установлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[3]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_WOOD: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 30 || salary > 120) {
				static const f_str[] = "\n\n"W"Заработная плата на лесопилке составляет: "GREEN"$%d\n\
											Установите новую заработную плату на лесопилке:\n\n"NO"*"G" От $30 до $120\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[4]);
				D(playerid,D_ECONOMY_WOOD,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			WorkSalary[4] = salary;
			UpdateEconomyData("work_wood",salary);
			static const f_string[] = "Заработная плата на лесопилке в размере "ORANGE"$%d"G" установлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[4]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_ALCO: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 20 || salary > 40) {
				static const f_str[] = "\n\n"W"Заработная плата в алькатрасе составляет: "GREEN"$%d\n\
											Установите новую заработную плату в алькатрасе:\n\n"NO"*"G" От $20 до $40\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[2]);
				D(playerid,D_ECONOMY_ALCO,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			WorkSalary[2] = salary;
			UpdateEconomyData("work_alco",salary);
			static const f_string[] = "Заработная плата в алькатрасе в размере "ORANGE"$%d"G" установлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[2]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_BIZZ: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 15) {
				static const f_str[] = "\n\n"W"Налогообложение бизнесов составляет: "P"%d%%\n\
											Установите новое налогообложение бизнесов:\n\n"NO"*"G" От 1%% до 15%%\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[3]);
				D(playerid,D_ECONOMY_BIZZ,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			Nalog[3] = salary;
			UpdateEconomyData("nalog_4",salary);
			static const f_string[] = "Налогообложение бизнесов в размере "ORANGE"%d%%"G" установлено";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[3]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_NALOG: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 5 || salary > 15) {
				static const f_str[] = "\n\n"W"Налоги заработных плат гос.структур составляют: "P"%d%%\n\
											Установите новые налоги заработных плат гос.структур:\n\n"NO"*"G" От 5%% до 15%%\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[0]);
				D(playerid,D_ECONOMY_NALOG,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
				return 1;
			}
			Nalog[0] = salary;
			UpdateEconomyData("nalog_1",salary);
			static const f_string[] = "Налоги заработных плат гос.структур в размере "ORANGE"%d%%"G" установлены";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[0]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_SALARY: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
				case 0: {
					new string[555];
					string = "Должность\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fLSPD][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fLSPD,i),i,FracSalary[0][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""P"Выберите ранг",string,"Выбрать","Закрыть");
					}
				}
				case 1: {
					new string[555];
					string = "Должность\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fFBI][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fFBI,i),i,FracSalary[1][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""P"Выберите ранг",string,"Выбрать","Закрыть");
					}
				}
				case 2: {
					new string[555];
					string = "Должность\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fARMYSF][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fARMYSF,i),i,FracSalary[3][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""P"Выберите ранг",string,"Выбрать","Закрыть");
					}
				}
				case 3: {
					new string[555];
					string = "Должность\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fMEDICLS][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fMEDICLS,i),i,FracSalary[4][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""P"Выберите ранг",string,"Выбрать","Закрыть");
					}
				}
				case 4: {
					new string[555];
					string = "Должность\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fLSNEWS][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fLSNEWS,i),i,FracSalary[5][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""P"Выберите ранг",string,"Выбрать","Закрыть");
					}
				}
				case 5: {
					new string[555];
					string = "Должность\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fWHITEHOUSE][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fWHITEHOUSE,i),i,FracSalary[8][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""P"Выберите ранг",string,"Выбрать","Закрыть");
					}
				}
			}
			SetPVarInt(playerid, "variable_zp", listitem);
		}
		case D_ECONOMY_SALARY_1: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			SetPVarInt(playerid, "variable_rang", listitem);
			switch(GetPVarInt(playerid, "variable_zp")) {
				case 0: {
					static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Полиция\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fLSPD,listitem+1),listitem+1,FracSalary[0][listitem],GetRankName(fLSPD,listitem+1),salary_pd[listitem]/2,salary_pd[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
					return 1;
				}
				case 1: {
					static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - ФБР\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fFBI,listitem+1),listitem+1,FracSalary[1][listitem],GetRankName(fFBI,listitem+1),salary_fbi[listitem]/2,salary_fbi[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
					return 1;
				}
				case 2: {
					static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Армии\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fARMYSF,listitem+1),listitem+1,FracSalary[3][listitem],GetRankName(fARMYSF,listitem+1),salary_army[listitem]/2,salary_army[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
					return 1;
				}
				case 3: {
					static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - МЧС\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fMEDICLS,listitem+1),listitem+1,FracSalary[4][listitem],GetRankName(fMEDICLS,listitem+1),salary_medics[listitem]/2,salary_medics[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
					return 1;
				}
				case 4: {
					static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Новостная студия\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fLSNEWS,listitem+1),listitem+1,FracSalary[5][listitem],GetRankName(fLSNEWS,listitem+1),salary_news[listitem]/2,salary_news[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
					return 1;
				}
				case 5: {
					static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Белый дом\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fWHITEHOUSE,listitem+1),listitem+1,FracSalary[8][listitem],GetRankName(fWHITEHOUSE,listitem+1),salary_wh[listitem]/2,salary_wh[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
					return 1;
				}
			}
		}
		case D_ECONOMY_SALARY_2: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			new list = GetPVarInt(playerid, "variable_rang");
			switch(GetPVarInt(playerid, "variable_zp")) {
				case 0: {
					if(salary < salary_pd[list]/2 || salary > salary_pd[list]) {
						static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Полиция\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fLSPD,list+1),list+1,FracSalary[0][list],GetRankName(fLSPD,list+1),salary_pd[list]/2,salary_pd[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
						return 1;
					}
					FracSalary[0][list] = salary;
					save_salary(0);
				}
				case 1: {
					if(salary < salary_fbi[list]/2 || salary > salary_fbi[list]) {
						static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - ФБР\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fFBI,list+1),list+1,FracSalary[1][list],GetRankName(fFBI,list+1),salary_fbi[list]/2,salary_fbi[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
						return 1;
					}
					FracSalary[1][list] = salary;
					save_salary(1);
				}
				case 2: {
					if(salary < salary_army[list]/2 || salary > salary_army[list]) {
						static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Армии\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fARMYSF,list+1),list+1,FracSalary[3][list],GetRankName(fARMYSF,list+1),salary_army[list]/2,salary_army[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
						return 1;
					}
					FracSalary[3][list] = salary;
					save_salary(3);
				}
				case 3: {
					if(salary < salary_medics[list]/2 || salary > salary_medics[list]) {
						static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - МЧС\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fMEDICLS,list+1),list+1,FracSalary[4][list],GetRankName(fMEDICLS,list+1),salary_medics[list]/2,salary_medics[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
						return 1;
					}
					FracSalary[4][list] = salary;
					save_salary(4);
				}
				case 4: {
					if(salary < salary_news[list]/2 || salary > salary_news[list]) {
						static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Новостная студия\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fLSNEWS,list+1),list+1,FracSalary[5][list],GetRankName(fLSNEWS,list+1),salary_news[list]/2,salary_news[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
						return 1;
					}
					FracSalary[5][list] = salary;
					save_salary(5);
				}
				case 5: {
					if(salary < salary_wh[list]/2 || salary > salary_wh[list]) {
						static const f_str[] = "\n\n"W"Заработная плата %s(%d) $%d - Белый дом\n\
											Установите новую заработную плату для ранга %s:\n\n"NO"*"G" От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fWHITEHOUSE,list+1),list+1,FracSalary[8][list],GetRankName(fWHITEHOUSE,list+1),salary_wh[list]/2,salary_wh[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""P"Управление штатом",string,"Установить", "Отмена");
						return 1;
					}
					FracSalary[8][list] = salary;
					save_salary(8);
				}
			}
			SendOk(playerid,"Заработная плата изменена");
		}
		case D_ECONOMY_PREM: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new frac;
			switch(listitem) {
				case 0: frac = fLSPD;
				case 1: frac = fSFPD;
				case 2: frac = fLVPD;
				case 3: frac = fFBI;
				case 4: frac = fARMYSF;
				case 5: frac = fARMYLV;
				case 6: frac = fMEDICLS;
				case 7: frac = fMEDICSF;
				case 8: frac = fMEDICLV;
				case 9: frac = fLSNEWS;
				case 10: frac = fSFNEWS;
				case 11: frac = fLVNEWS;
			}
			SetPVarInt(playerid,"prem_fration",frac);
			new string[156];
			format(string,sizeof(string),"\n\n"W"Укажите сумму перевода:\nОрганизация: "ORANGE"%s\n\n",FI[frac][fName]);
			D(playerid,D_ECONOMY_PREM_1,DSI, ""P"Управление штатом",string,"Перевести", "Отмена");
		}
		case D_ECONOMY_PREM_1: {
			if(!response) return DeletePVar(playerid,"prem_fration");
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 50000 || salary > 500000) {
				new string[156];
				format(string,sizeof(string),"\n\n"W"Укажите сумму перевода:\nОрганизация: "ORANGE"%s\n\n"NO"*"G" От $50.000 до $500.000\n\n",FI[GetPVarInt(playerid,"prem_fration")][fName]);
				D(playerid,D_ECONOMY_PREM_1,DSI, ""P"Управление штатом",string,"Перевести", "Отмена");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBank] - salary < 0) return ErrorMessage(playerid,"В казне недостаточно средств");
			if(FI[fWHITEHOUSE][fBankCash] + salary > 500000) {
				new string[128];
				format(string,sizeof(string),"Суточный лимит на перевод/снятие средств с казны - $500.000. Доступный лимит: $%d",500000-FI[fWHITEHOUSE][fBankCash]);
				ErrorMessage(playerid,string);
				return 1;
			}
			FI[fWHITEHOUSE][fBankCash] += salary;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);
			FI[GetPVarInt(playerid,"prem_fration")][fBank] += salary;
			UpdateFraction(GetPVarInt(playerid,"prem_fration"),"Bank",FI[GetPVarInt(playerid,"prem_fration")][fBank]);
			FI[fWHITEHOUSE][fBank] -= salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			static const f_string[] = "Перевод денежных средств в размере "ORANGE"$%d"G" организации "P"%s"G" выполнен успешно";
			new str[sizeof(f_string) +1 + (-2 + 4) + (-2 + 24)];
			format(str,sizeof(str),f_string,salary,FI[GetPVarInt(playerid,"prem_fration")][fName]);
			SendUse(playerid,str);
			DeletePVar(playerid,"prem_fration");
		}
		case D_ECONOMY_PUT: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 500000) {
				D(playerid,D_ECONOMY_PUT,DSI, ""P"Управление штатом","\n\n"W"Укажите сумму, на которую хотите пополнить казну штата\n\n"NO"*"G" От $1 до $500.000\n\n","Пополнить", "Отмена");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < salary) {
				D(playerid,D_ECONOMY_PUT,DSI, ""P"Управление штатом","\n\n"W"Укажите сумму, на которую хотите пополнить казну штата\n\n"NO"*"G" У Вас недостаточно средств\n\n","Пополнить", "Отмена");
				return 1;
			}
			GiveMoney(playerid,-salary,"пополнение казны");
			FI[fWHITEHOUSE][fBank] += salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			FI[fWHITEHOUSE][fBankCash] -= salary;
			if(FI[fWHITEHOUSE][fBankCash] < 0) FI[fWHITEHOUSE][fBankCash] = 0;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);

			static const f_string[] = "Вы пополнили казну штата на "ORANGE"$%d";
			new str[sizeof(f_string) +1 + (-2 + 5)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
		case D_ECONOMY_INPUT: {
			if(!response) return 1;
			if(PI[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 500000) {
				D(playerid,D_ECONOMY_INPUT,DSI, ""P"Управление штатом","\n\n"W"Укажите сумму, которую хотите снять с казны штата\n\n"NO"*"G" От $1 до $500.000\n\n","Снять", "Отмена");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBank] < salary) {
				D(playerid,D_ECONOMY_INPUT,DSI, ""P"Управление штатом","\n\n"W"Укажите сумму, которую хотите снять с казны штата\n\n"NO"*"G" В казне недостаточно средств\n\n","Снять", "Отмена");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBankCash] + salary > 500000) {
				static const f_str[] = "\n\n"W"Укажите сумму, которую хотите снять с казны штата\n\n"NO"*"G" Суточный лимит на перевод/снятие средств с казны - $500.000. Доступный лимит: $%d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 6)];
				format(string,sizeof(string),f_str,500000-FI[fWHITEHOUSE][fBankCash]);
				D(playerid,D_ECONOMY_INPUT,DSI, ""P"Управление штатом",string,"Снять", "Отмена");
				return 1;
			}
			GiveMoney(playerid,salary,"снятие с казны");
			FI[fWHITEHOUSE][fBank] -= salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			FI[fWHITEHOUSE][fBankCash] += salary;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);

			static const f_string[] = "Вы сняли с казны штата "ORANGE"$%d";
			new str[sizeof(f_string) +1 + (-2 + 5)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
		case D_REC_KICK: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Произоша ошибка");
			if(!strlen(inputtext)) return D(playerid,D_REC_KICK,DSI, ""P"KICK","\n\n"W"Введите причину, по которой хотите кикнуть игрока с сервера:\n\n","Кикнуть","Отмена");
			new string[64];
			format(string,sizeof(string),"%d %s",SERIU[playerid][sID],inputtext);
			pc_cmd_kick(playerid,string);
		}
		case D_REC_WARN: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Произоша ошибка");
			if(!strlen(inputtext)) return D(playerid,D_REC_WARN,DSI, ""P"WARN","\n\n"W"Введите причину, по которой хотите выдать Warn игроку:\n\n","Варн","Отмена");
			new string[64];
			format(string,sizeof(string),"%d %s",SERIU[playerid][sID],inputtext);
			pc_cmd_warn(playerid,string);
		}
		case D_REC_BAN: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Произоша ошибка");
			new Days,Reason[31];
			if(sscanf(inputtext, "p<,>is[30]",Days,Reason)) return D(playerid,D_REC_BAN,DSI, ""P"BAN","\n\n"W"Введите причину, по которой хотите заблокировать аккаунт игроку:\n"NO"ВНИМАНИЕ!"W" Введите время и причину через запятую без пробелов (15,читер)\nВремя блокировки аккаунта: от 7 до 30 дней\n\n","Бан","Отмена");
			new string[78];
			format(string,sizeof(string),"%d %d %s",SERIU[playerid][sID],Days,Reason);
			pc_cmd_ban(playerid,string);
		}
		case D_UNBAN: {
		    if(!response) return 1;
		    if(!IsBannedName(UnbanName[playerid])) return ErrorMessage(playerid,"Данный игрок не заблокирован");
			UnBanName(UnbanName[playerid]);
			new string[144];
			format(string,sizeof(string),"[A] Администратор %s разблокировал игрока %s",player_name[playerid],UnbanName[playerid]);
			AdmMSG(0xAFAFAFAA, string,1);
			WriteLog(LOG_UNBAN,player_name[playerid],UnbanName[playerid],"разблокировка");
		}
		case D_ELECTION: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[512];
					string = ""W"";
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							format(string, sizeof(string), "%s%i. %s (%i голосов)\n", string, i+1, vote_name[i],vote_count[i]);
						}
						else format(string,sizeof(string),"%s%i. -\n",string, i+1);
					}
					D(playerid,DIALOG_NONE,DSM, ""P"Список кандидатов",string,"Закрыть","");
				}
				case 1: {
					for(new i = 0; i < MAX_VOTES; i++) {
						if(!strlen(vote_name[i])) {
							SetPVarInt(playerid,"vote_slot", i);
							D(playerid,D_ELECTION_1, DSI, ""P"Добавление кандитата", "\n\nВведите имя кандитата:\n\n","Ввод","Отмена");
							return 1;
						}
					}
					return ErrorMessage(playerid,"Достигнут лимит кандитатов");
				}
				case 2: {
					new string[512];
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							format(string,sizeof(string), "%s%s\n",string,vote_name[i]);
						}
						else strcat(string,"-\n");
					}
					if(!strlen(string)) return ErrorMessage(playerid,"Кандитатов нет");
					D(playerid,D_ELECTION_3, DSL, ""P"Удаление кандитата", string, "Выбрать", "Закрыть");
				}
				case 3: {
					if(election) return ErrorMessage(playerid,"Пикап для голосований уже установлен");
					election = CreateDynamicPickup(19134,1,-1333.8834,1927.8076,1087.7546,44);	
					election3D = CreateDynamic3DTextLabel(""P"Голосование", -1, -1333.8834,1927.8076,1087.7546+1.0, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
					new string[144];
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Уважаемые жители штата", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Начались выборы президента", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Голосование доступно с 3-х лет проживания в штате", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Спасибо за внимание", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_RED, string);
				}
				case 4: {
					new win_count = 0;
					new win_slot = 0;
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							if(vote_count[i] > win_count) {
								win_count = vote_count[i];
								win_slot = i;
								new query[128];
								format(query,sizeof(query),"DELETE FROM `vote` WHERE `vote_name` = '%s'",vote_name[i]);
								mysql_pquery(connects, query, "", "");
								vote_count[i] = 0;
							}
						}
					}
					new string[144];
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Уважаемые жители штата", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Выборы окончены. Новый президент штата: %s (%i голосов)", player_name[playerid], playerid, vote_name[win_slot], win_count);
					SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "[ВЫБОРЫ] %s [%d]: Спасибо за внимание", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_RED, string);
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(PI[i][pGolos]) PI[i][pGolos] = 0;
					}
					mysql_pquery(connects, "UPDATE `accounts` SET `pGolos` = '0'", "", "");
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							strmid(vote_name[i],"",strlen(""),MAX_PLAYER_NAME);
						}
					}
					if(election) DestroyDynamicPickup(election),election = 0;
					DestroyDynamic3DTextLabel(election3D);
				}
			}
			return 1;
		}
		case D_ELECTION_3: {
			if(!response) return 1;
			if(!strcmp(inputtext,"-")) return 1;
			new string[1120];
			format(string, sizeof(string), "Вы убрали "P"%s"G" с выборов", vote_name[listitem]);
			SendUse(playerid,string);
			new query[70];
			format(query,sizeof(query),"DELETE FROM `vote` WHERE `vote_name` = '%s'",vote_name[listitem]);
			mysql_pquery(connects, query, "", "");
			strmid(vote_name[listitem],"",strlen(""),MAX_PLAYER_NAME);
			vote_count[listitem] = 0;
			return 1;
		}
		case D_ELECTION_1: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext)>23) return ErrorMessage(playerid,"От 1 до 23");
			new slot = GetPVarInt(playerid,"vote_slot");
			strmid(vote_name[slot],inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			new string[110];
			format(string,sizeof(string),"Вы добавили кандитата: "W"%s", inputtext);
			SendOk(playerid,string);
			new query[256];
			format(query,sizeof(query),"INSERT INTO `vote`(`vote_name`, `vote_count`) VALUES ('%s','%i')",vote_name[slot],vote_count[slot]);
			mysql_pquery(connects, query, "", "");
			DeletePVar(playerid,"vote_slot");
			return 1;
		}
		case D_ELECTION_2: {
			if(!response) return 1;
			if(!strlen(vote_name[listitem])) return ErrorMessage(playerid,"Кандитат не назначен");
			vote_count[listitem]++;
			new query[128];
			format(query,sizeof(query),"UPDATE `vote` SET `vote_count` = '%i' WHERE `vote_name` = '%s'",vote_count[listitem],vote_name[listitem]);
			mysql_pquery(connects, query, "", "");
			new string[144];
			format(string,sizeof(string),"Вы отдали свой голос за "P"%s. "G"Спасибо за участие в голосовании!",vote_name[listitem]);
			SendOk(playerid,string);
			PI[playerid][pGolos] = 1;
			UpdatePlayerData(playerid,"pGolos",PI[playerid][pGolos]);
			if(GetPVarInt(playerid,"anti_sbiv_time") <= unix) ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
			return 1;
		}
		case D_MAYOR: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Казна штата: \t\t\t\t\t"YELLOW"$%d\n\n\
											"W"Заработная плата оружейный завод:\t"GREEN"$%d\n\
											"W"Заработная плата нефтезавод:\t\t"GREEN"$%d\n\
											"W"Заработная плата яблочный сад:\t\t"GREEN"$%d\n\
											"W"Заработная плата алькатрас:\t\t\t"GREEN"$%d\n\
											"W"Налогообложение бизнесов:\t\t"ORANGE"%d%%\n\
											"W"Налоги заработных плат гос.структур:\t"ORANGE"%d%%";
					new string[sizeof(f_str) +1 + (-2 + 13) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3)];
					format(string,sizeof(string),f_str,FI[fWHITEHOUSE][fBank],WorkSalary[0],WorkSalary[1],WorkSalary[3],WorkSalary[2],Nalog[3],Nalog[0]);
					D(playerid,DIALOG_NONE,DSM, ""P"Информация",string,"Закрыть","");
				}
				case 1: D(playerid,D_MAYOR_BLAGO,DSI, ""P"Благотворительность","\n\n"W"Введите сумму, которую хотите пожертвовать в казну штата:\n\n","Перевести", "Отмена");
				case 2: {
					new name[24],rows;
					new blago;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pBlago` FROM `accounts` ORDER BY `pBlago` DESC LIMIT 5");
					rows = cache_num_rows();
					if(rows) {
						new string[300];
	       				string = ""P"№ Имя\t"P"Пожертвовал\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"$%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pBlago",blago);
							format(str, sizeof(str), f_str, i+1, name,blago);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, "Самые щедрые", string, "Закрыть", "");
					}
					cache_delete(result);
				}
			}
		}
		case D_MAYOR_BLAGO: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 1000 || salary > 1000000) {
				D(playerid,D_MAYOR_BLAGO,DSI, ""P"Благотворительность","\n\n"W"Введите сумму, которую хотите пожертвовать в казну штата:\n\n"NO"*"G" От $1.000 до $1.000.000\n\n","Перевести", "Отмена");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < salary) return ErrorMessage(playerid,"У Вас недостаточно средств");
			GiveMoney(playerid,-salary,"пожертвование");
			PI[playerid][pBlago] += salary;
			UpdatePlayerData(playerid,"pBlago",PI[playerid][pBlago]);
			FI[fWHITEHOUSE][fBank] += salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			static const f_string[] = "Вы успешно пожертвовали "ORANGE"$%d"G" в казну штата";
			new str[sizeof(f_string) +1 + (-2 + 9)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
		case dRentCar: {
		    if(!response) return DeletePVar(playerid,"rent_carid");
			new arid = GetArendCarID(GetPVarInt(playerid, "rent_carid"));
			DeletePVar(playerid,"rent_carid");
			if(!lic[playerid][0]) return ErrorMessage(playerid,"У Вас нет водительских прав");
			if(arid != -1) {
				if(TI[playerid][tArendKey] == -1) {
					if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID])) {
						if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(ArendInfo[arid][aCost]/100*vip_status[PI[playerid][pVips]][vip_rentcar]);
							if(PI[playerid][pCash] < (ArendInfo[arid][aCost]-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
							GiveMoney(playerid,-(ArendInfo[arid][aCost]-seller),"аренда ТС");
						}
						else {
							if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(ArendInfo[arid][aCost]/100*BonusInfo[act_rentcar]);
								if(PI[playerid][pCash] < (ArendInfo[arid][aCost]-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
								GiveMoney(playerid,-(ArendInfo[arid][aCost]-seller),"аренда ТС");
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(ArendInfo[arid][aCost]/100*BonusInfo[act_rentcar]);
								if(PI[playerid][pCash] < (ArendInfo[arid][aCost]-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
								GiveMoney(playerid,-(ArendInfo[arid][aCost]-seller),"аренда ТС");
							}
						    else {
						    	if(PI[playerid][pCash] < ArendInfo[arid][aCost]) return ErrorMessage(playerid,"У Вас недостаточно средств");
						    	GiveMoney(playerid,-ArendInfo[arid][aCost],"аренда ТС");
						    }
						}

						bizz_pay(ArendInfo[arid][aBizz],floatround(ArendInfo[arid][aCost]*0.2));
						TI[playerid][tArendKey] = arid;

						ArendInfo[arid][aPlayerID] = playerid;
						D(playerid, DIALOG_NONE, DSM, ""P"Транспортное средство арендовано", ""W"Список доступных комманд:\n\n"YELLOW"/lock 3"W" - Закрыть/Открыть арендованный транспорт\n"YELLOW"/unrent"W" - Отказаться от аренды\n\n"NO"При отдалении от Т/С на 2км контракт автоматически расторгается", "Закрыть", "");
					}
					else ErrorMessage(playerid, "Этот транспорт уже арендуют");
				}
				else ErrorMessage(playerid,"Вы уже арендуете транспорт");
			}
		}
		case D_COP_GUN: {
			if(!response) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 40: {

				}
				case 41: {}
				case 42: {}
			}
			switch(listitem) {
				case 0: AC_GivePlayerWeapon(playerid,24,21);
				case 1: AC_GivePlayerWeapon(playerid,25,30);
				case 2: AC_GivePlayerWeapon(playerid,29,90);
				case 3: AC_GivePlayerWeapon(playerid,31,150);
				case 4: AC_GivePlayerWeapon(playerid,3,1);
				case 5: SetPlayerArmour(playerid,100);
			}

		}
		case dGiveGunTD: {
			if(!response) return true;
			if(!PI[playerid][pMember]) return 1;

			if(strfind(inputtext, "Бронежилет") != -1) {
				SetPlayerArmour(playerid, 100.0);
				return true;
			}
			if(listitem >= 9) return true;
			if(GunTickGet[playerid][listitem] > unix) return ErrorMessage(playerid,"Нельзя брать оружие слишком часто");
			GunTickGet[playerid][listitem] = unix+20;
			new team;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 40: team = fLSPD;
				case 41: team = fSFPD;
				case 42: team = fLVPD;
				case 43: team = fFBI;
				case 44: team = fMAYOR;
			}
			for(new i = 0 ; i < 9 ; i++) {
				if(strfind(inputtext, FW[i][team][fwName]) != -1) {
					new count_minus = 100;
					switch(FW[i][team][fwGunID]) {
						case 24: count_minus = 60;
						case 22: count_minus = 40;
						case 25: count_minus = 60;
						case 29: count_minus = 80;
						case 31: count_minus = 100;
						case 30: count_minus = 100;
						case 34: count_minus = 250;
						case 99: count_minus = 30;
						default: count_minus = 90;
					}
					if(FI[team][fMats] < count_minus) return ErrorMessage(playerid,"Недостаточно боеприпасов");
					if(IsACop(playerid) && PI[playerid][pRank] == 1 && FW[i][team][fwGunID] != 3) {
						ErrorMessage(playerid,"Для Вашего ранга доступна только дубинка");
						return true;
					}
					FI[team][fMats] -= count_minus;
					UpdateFraction(team,"Mats",FI[team][fMats]);
					if(FW[i][team][fwGunID] == 99) {
						if(PI[playerid][pMask] == vip_status[PI[playerid][pVips]][vip_mask]) {
							new string[128];
							format(string,sizeof(string),"Нельзя хранить больше %d масок",vip_status[PI[playerid][pVips]][vip_mask]);
							ErrorMessage(playerid, string);
							return 1;
						}
						PI[playerid][pMask] += 1;
						UpdatePlayerData(playerid,"pMask",PI[playerid][pMask]);
						SendUse(playerid,"Использовать маску - "W"/mask");
						return 1;
					}
					AC_GivePlayerWeapon(playerid,FW[i][team][fwGunID],FW[i][team][fwGunAmmo]);
					break;
				}
			}
			ShowGetGun(playerid);
			return true;
		}
		case D_MATERIALS_BUY: {
			if(!response) return 1;
			if(!IsAMafia(playerid)) return ErrorMessage(playerid,"Вы не мафиози");
			if(GetPlayerMoneyEx(playerid) < 50000) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(GetPlayerMoneyEx(playerid) < 50000) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(FI[GetTeamID(playerid)][fMats]+10000 > 300000) return ErrorMessage(playerid,"На склад Вашей мафии не поместится столько боеприпасов");
			FI[GetTeamID(playerid)][fMats] += 10000;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			GiveMoney(playerid,-50000,"покупка матов мафии");
			SendOk(playerid, "Вы купили 10000 боеприпасов за 50000 вирт");
		}
		case dEContract: {
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return ErrorMessage(playerid,"От 5 и до 50 хот-догов");
			new litres = strval(inputtext);
			new price = litres*gBusiness[GetPVarInt(playerid,"e_biz")][bizzPrice]*50;
			if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(GetPVarInt(playerid,"eatcolvo") + litres > 50) return ErrorMessage(playerid,"В машину не поместится больше 50 хот-догов");
			GiveMoney(playerid,-price,"развозчик еды контракт");
			if(gBusiness[GetPVarInt(playerid,"e_biz")][bizzProduct] - litres > 0) {
				gBusiness[GetPVarInt(playerid,"e_biz")][bizzProduct] -= litres;
				bizz_pay(GetPVarInt(playerid,"e_biz"),price);
			}
			new string[128];
			format(string, sizeof(string),""G"Хот-догов: "P"%d ед.",GetPVarInt(playerid,"eatcolvo") + litres);
			UpdateDynamic3DTextLabelText(PlayerEatText[playerid], -1, string);
			SetPVarInt(playerid,"eatcolvo",GetPVarInt(playerid,"eatcolvo") + litres);
			DeletePVar(playerid,"e_biz");
			return 1;
		}
		case dFContract: {
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return ErrorMessage(playerid,"От 1л и до 50л");
			new litres = strval(inputtext);
			new price = litres*gBusiness[GetPVarInt(playerid,"f_biz")][bizzPrice];
			if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
			if(GetPVarInt(playerid,"toplivo") + litres > 100) return ErrorMessage(playerid,"В машину не поместится больше 100л топлива");
			GiveMoney(playerid,-price,"механик контракт");
			if(gBusiness[GetPVarInt(playerid,"f_biz")][bizzProduct] - litres > 0) {
				gBusiness[GetPVarInt(playerid,"f_biz")][bizzProduct] -= litres;
				bizz_pay(GetPVarInt(playerid,"f_biz"),price);
			}
			new string[128];
			format(string, sizeof(string),""G"Топливо: "P"%d л.",GetPVarInt(playerid,"toplivo") + litres);
			UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, string);
			SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") + litres);
			DeletePVar(playerid,"f_biz");
			return 1;
		}
		case dRefill: {
			new id_mhnk = GetPVarInt(playerid,"id_refill")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_refill");
			new litres = GetPVarInt(id_mhnk,"litres_refill");
			DeletePVar(id_mhnk,"id_repair");
			DeletePVar(id_mhnk,"price_repair");
			DeletePVar(playerid,"id_repair");
			if(!response) {
				SendOk(id_mhnk,"Игрок отказался от предложения");
				SendOk(playerid,"Вы отказались от предложения");
			}
			else {
				if(GetPlayerMoneyEx(playerid) < price_mhnk) {
					SendOk(id_mhnk,"У игрока недостаточно средств");
					ErrorMessage(playerid,"У Вас недостаточно средств для оплаты");
					return 1;
				}
				new string[144];
				format(string,sizeof(string), "Механик "P"%s"G" заправил Вам автомобиль на "W"%d"G" литров за "ORANGE"$%i",player_name[id_mhnk],litres,price_mhnk);
				SendUse(playerid,string);

				format(string,sizeof(string), "Вы заправили автомобиль "P"%s "G"на "W"%d"G" литров за "ORANGE"$%i",player_name[playerid],litres,price_mhnk);
				SendUse(id_mhnk,string);

				GiveMoney(playerid,-price_mhnk,"оплата механику заправка");
				GiveMoney(id_mhnk,price_mhnk,"ЗП механику заправка");
				new vehicleid = GetPlayerVehicleID(playerid);

				if(vehicleid) VehicleInfo[vehicleid][vFuel] += float(litres);
				SetPVarInt(id_mhnk,"toplivo",GetPVarInt(id_mhnk,"toplivo") - litres);

				format(string, sizeof(string),""G"Топливо: "P"%d л.",GetPVarInt(id_mhnk,"toplivo"));
				UpdateDynamic3DTextLabelText(PlayerMehText[id_mhnk], -1, string);
			}
			return 1;
		}
		case dEHotDog: {
			new id_mhnk = GetPVarInt(playerid,"id_hotdog")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_hotdog");
			DeletePVar(id_mhnk,"id_hotdog");
			DeletePVar(id_mhnk,"price_hotdog");
			DeletePVar(playerid,"id_hotdog");
			if(!response) {
				SendOk(id_mhnk,"Игрок отказался от предложения");
				SendOk(playerid,"Вы отказались от предложения");
			}
			else {
				if(GetPlayerMoneyEx(playerid) < price_mhnk) {
					SendOk(id_mhnk,"У игрока недостаточно средств");
					ErrorMessage(playerid,"У Вас недостаточно средств для оплаты");
					return 1;
				}
				new string[144];
				format(string,sizeof(string), "Продавец хот-догов "P"%s"G" продал Вам хот-дог за "ORANGE"$%i",player_name[id_mhnk],price_mhnk);
				SendUse(playerid,string);

				format(string,sizeof(string), "Вы продали хот-дог "P"%s"G" за "ORANGE"$%i",player_name[playerid],price_mhnk);
				SendUse(id_mhnk,string);

				GiveMoney(playerid,-price_mhnk,"оплата продавцу еды");
				GiveMoney(id_mhnk,price_mhnk,"ЗП продавцу еды");

				GiveFullness(playerid, 40);
				
				SetPVarInt(id_mhnk,"eatcolvo",GetPVarInt(id_mhnk,"eatcolvo") - 1);

				format(string, sizeof(string),""G"Хот-Догов: "P"%d ед.",GetPVarInt(id_mhnk,"eatcolvo"));
				UpdateDynamic3DTextLabelText(PlayerEatText[id_mhnk], -1, string);
			}
			return 1;
		}
		case D_MARRIED: {
			new id_marriage = GetPVarInt(playerid,"ProposeOffer")-1;
			DeletePVar(id_marriage,"ProposeOffer");
			if(!response) {
				SendOk(id_marriage,"Игрок отказался от предложения");
				SendOk(playerid,"Вы отказались от предложения");
			}
			else {
				if(!GetPVarInt(playerid,"ProposeOffer")) return ErrorMessage(playerid, "Вам ни кто не предлагал выйти замуж/жениться");
				if(!PlayerToPoint(10.0, playerid, -11.0080,1250.0342,1003.9500)) return ErrorMessage(playerid, "Вы не у церкви");
				if(!IsPlayerConnected(id_marriage)) return ErrorMessage(playerid, not_id);
				if(!IsPlayerStream(10.0, playerid, id_marriage)) return ErrorMessage(playerid, "Жених/Невеста не рядом с Вам");
				new string[144];
				format(string, sizeof(string), "Вы приняли предложение от "W"%s's", player_name[id_marriage]);
				SendOk(playerid, string);
				format(string, sizeof(string), "%s принял(а) Ваш запрос быть Вашей(ым) Женой/Мужем", player_name[playerid]);
				SendClientMessage(id_marriage, 0x6ab1ffaa, string);
				format(string, sizeof(string), "{FC6DEC}::: Поздравляем! %s и %s теперь муж и жена! :::", player_name[playerid], player_name[id_marriage]);
				SendClientMessageToAll(-1,string);

				strmid(PI[playerid][pMarried], player_name[id_marriage], 0, strlen(player_name[id_marriage]));
				strmid(PI[id_marriage][pMarried], player_name[playerid], 0, strlen(player_name[playerid]));

				new query[156];
				format(query, sizeof(query), "UPDATE `accounts` SET `pMarried` = '%s' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pMarried],GetName(playerid));
				mysql_pquery(connects, query, "", "");

				format(query, sizeof(query), "UPDATE `accounts` SET `pMarried` = '%s' WHERE `Name` = '%s' LIMIT 1",PI[id_marriage][pMarried],GetName(id_marriage));
				mysql_pquery(connects, query, "", "");
			}
			return 1;
		}
		case D_BUYNARKO: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 51) {
				static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
                "O"Примечание:"W"\n\
                \tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,pricedrugs,50-PI[playerid][pDrugs]);
				D(playerid,D_BUYNARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
				return 1;
			}
		    if(PI[playerid][pDrugs] + strval(inputtext) > vip_status[PI[playerid][pVips]][vip_drugs]) return ErrorMessage(playerid,"Вы не можете взять слишком много");
			if(GetPlayerMoneyEx(playerid) < pricedrugs*strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно денег");
			GiveMoney(playerid,-pricedrugs*strval(inputtext),"покупка нарко притон");
			PI[playerid][pDrugs] += strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
			new string[128];
			format(string,sizeof(string),"Вы купили "P"%dг "G"наркотиков за "ORANGE"$%d",strval(inputtext),pricedrugs*strval(inputtext));
			SendUse(playerid,string);
		}
		case D_ADMC: {
			if(!response) return 1;
			if(PI[playerid][pAdmin] < listitem+1) return ErrorMessage(playerid,"Ты еще маленький");
			new string[1500],str[120];
			for(new adm = 0;adm < MAX_ADM_CMDS;adm++) {
				if(AdminCommand[adm][cmdLVL] != listitem+1) continue;
				format(str, sizeof(str), "\n\t{70c425}%s"W" - %s", AdminCommand[adm][cmdName], AdminCommand[adm][cmdInfo]);
				strcat(string, str);
			}
			D(playerid,DIALOG_NONE,DSM, ""P"Админ команды",string,"Закрыть","");
		}
		case D_MP: {
	        if(!response) return 1;
        	switch(listitem) {
				case 0: {
					if(!Teleport) {
						new string[200];
						if(!Teleport_Players[0]) return ErrorMessage(playerid,"Необходимо указать кол-во участников мероприятия");
					    if(strcmp(Teleport_text,"None",true) == 0) return ErrorMessage(playerid,"Необходимо ввести название мероприятия");
						format(string,sizeof(string),""YELLOW"[МП]"W" Создано мероприятие "YELLOW"%s"W". Количество участников: "P"%d",Teleport_text,Teleport_Players[0]);
						SendClientMessageToAll(-1,string);
						SendClientMessageToAll(-1,""YELLOW"[МП]"W"Для телепорта введите: "P"'/mp'");
      					GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
				        TeleportInfo[0] = GetPlayerInterior(playerid);
				        TeleportInfo[1] = GetPlayerVirtualWorld(playerid);
            			Teleport = true;
						format(string, sizeof(string), "[A] %s[%d] создал мероприятие",player_name[playerid],playerid);
						AdmMSG(0xAFAFAFAA, string,1);
					}
					else {
						new string[128];
                        format(string,sizeof(string),""YELLOW"[МП]"W" Мероприятие "YELLOW"%s"W" телепорт удалён",Teleport_text);
						SendClientMessageToAll(-1,string);
						strmid(Teleport_text, "None", 0, strlen("None"), 36);
						Teleport = false;
						Teleport_Players[0] = Teleport_Players[1] = 0;
					}
				}
				case 1: D(playerid, D_MP_1, DSI, ""P"Выдача оружия", "\n\n"W"Введите "P"ID"W" оружия и патроны\nПример: 31,500\nГде 31 M4, а 500 патроны\n\n", "Выдать", "Выход");
				case 2: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
						SetPlayerHealth(i, 100);
						SendOk(i, "Администратор выдал Вам жизни");
					}
				}
    			case 3: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
						SetPlayerArmour(i, 100);
						SendOk(i, "Администратор выдал вам броню");
					}
				}
				case 4: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						ResetPlayerWeapons(i);
						SendOk(i, "Администратор забрал у Вас оружие");
					}
				}
    			case 5: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						SetPlayerArmour(i, 0);
						SendOk(i, "Администратор забрал у Вас броню");
					}
				}
				case 6: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						if(i == playerid) continue;
						TogglePlayerControllable(i, 0);
						SendOk(i, "Администратор заморозил Вас");
					}
					SendOk(playerid,"Игроки заморожены");
				}
				case 7: {
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						if(i == playerid) continue;
						TogglePlayerControllable(i, 1);
						SendOk(i, "Администратор разморозил Вас");
					}
					SendOk(playerid,"Игроки разморожены");
				}
				case 8: D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n\n", "Ввод", "Отмена");
				case 9: D(playerid, D_MP_2, DIALOG_STYLE_INPUT, "Название", "\n\n"W"Введите название мероприятия:\n\n", "Ввод", "Отмена");
				case 10: D(playerid, D_MP_4, DIALOG_STYLE_INPUT, "Кол-во участников", "\n\n"W"Введите количество участников:\n\n", "Ввод", "Отмена");
			}
		}
		case D_MP_5: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n\n", "Ввод", "Отмена");
			else if(strfind(inputtext,",", true) != -1) {
				new razdel[2][24];
				split(inputtext, razdel, ',');
				if(!(5 <= strval(razdel[1]) <= 50)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n"NO"*"G" Радиус от 5 до 50\n\n", "Ввод", "Отмена");
				if(!(1 <= strval(razdel[0]) <= 311)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Название", "\n\n"W"Введите ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n"NO"*"G" Скины от 1 до 311\n\n", "Ввод", "Отмена");
    			foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(GetDistanceBetweenPlayers(playerid, i) > strval(razdel[1])) continue;
					if(i == playerid) continue;
					A_SetPlayerSkin(i, strval(razdel[0]));
					SendOk(i, "Администратор выдал Вам временный скин");
				}
				SendOk(playerid,"Временные скины выданы");
			}
			return 1;
		}
      	case D_MP_1: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_1, DSI, ""P"Выдача оружия", "\n\nВведите "P"ID"W" оружия и патроны\nПример: 31,500\nГде 31 M4, а 500 патроны\n\n", "Выдать", "Выход");
			else if(strfind(inputtext,",", true) != -1) {
				new razdel[2][24];
				split(inputtext, razdel, ',');
    			foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
					AC_GivePlayerWeapon(i, strval(razdel[0]), strval(razdel[1]));
					SendOk(i, "Администратор выдал вам оружие");
				}
			}
			return 1;
		}
    	case D_MP_3: {
            if(!response) return 1;
            SetPlayerPosAC(playerid, TeleportFloat[0], TeleportFloat[1]+2, TeleportFloat[2],TeleportInfo[1],TeleportInfo[0]);
			Teleport_Players[1]++;
            return 1;
        }
        case D_MP_4: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_4, DSI, "Кол-во участников", "\n\n"W"Введите количество участников:\n\n", "Ввод", "Отмена");
			if(!(5 <= strval(inputtext) <= 100)) {
				return D(playerid, D_MP_4, DSI, "Кол-во участников", "\n\n"W"Введите количество участников:\n\n"NO"*"G" От 5 до 100 мест\n\n", "Ввод", "Отмена");
			}
			new string[128];
			format(string,sizeof(string),"Лимит участников: "P"%d"W" создан",strval(inputtext));
			SendOk(playerid,string);
			Teleport_Players[0] = strval(inputtext);
			return 1;
		}
		case D_MP_2: {
			if(!response) return 1;
			if(!strlen(inputtext)) D(playerid, D_MP_2, DSI, ""P"Название", "\n\n"W"Введите название мероприятия\n\n", "Ввод", "Отмена");
			else if(strfind(inputtext,"", true) != 0) {
			    strmid(Teleport_text,inputtext,0,strlen(inputtext),36);
			}
			new string[128];
			format(string,sizeof(string),"Название: "P"%s"W" создано",inputtext);
			SendOk(playerid,string);
			return 1;
		}
		case D_PROMO: {
			if(!response) return 1;
	        switch(listitem) {
	            case 0: mysql_tquery(connects, "SELECT * FROM promocode", "promo_show", "i", playerid);
	            case 1: D(playerid, D_PROMO_1, DSI, ""P"Создание промокода", "\n\n"W"Введите промокод который хотите создать:\n\n", "Далее", "Назад");
	            case 2: D(playerid, D_PROMO_2, DSI, ""P"Удаление промокода", "\n\n"W"Введите промокод который хотите удалить:\n\n", "Далее", "Назад");
	        }
		}
		case D_PROMO_1: {
            if(!response) return 1;
            if(!strlen(inputtext)) return D(playerid, D_PROMO_1, DSI, ""P"Создание промокода", "\n\n"W"Введите промокод который хотите создать\n"G"От 3 до 16 символов\n\n", "Далее", "Назад");
            for(new i = strlen(inputtext); i != 0; --i) {
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ' ': {
					    D(playerid, D_PROMO_1, DSI, ""P"Создание промокода", "\n\n"W"Введите промокод который хотите создать\n\n"NO"*"G" От 3 до 16 символов\n"NO"*"G" Включите английскую раскладку\n\n", "Далее", "Назад");
						return 1;
					}
				}
			}
			if(!(3 <= strlen(inputtext) <= 16)) {
			    D(playerid, D_PROMO_1, DSI, ""P"Создание промокода", "\n\n"W"Введите промокод который хотите создать\n\n"NO"*"G" От 3 до 16 символов\n\n", "Далее", "Назад");
				return 1;
			}
            SetPVarString(playerid, "promoname", inputtext);
            D(playerid, D_PROMO_3, DSL, ""P"Создание промокода", ""P"1."W" SD-Pistol\n"P"2."W" Deagle\n"P"3."W" ShotGun\n"P"4."W" MP5\n"P"5."W" AK-47\n"P"6."W" M4\n"NO"7. Не выдавать", "Выбрать", "Отмена");
	    }
		case D_PROMO_3: {
            if(!response) return 1;
            SetPVarInt(playerid, "promoskills", listitem);
			D(playerid, D_PROMO_4, DSL, ""P"Создание промокода", ""P"1."W" Водительское удостоверение\n"P"2."W" Лицензия на полёты\n"P"3."W" Лицензия на водный транспорт\n"P"4."W" Лицензия на оружие\n"NO"5. Не выдавать", "Выбрать", "Отмена");
	    }
    	case D_PROMO_4: {
            if(!response) return 1;
            SetPVarInt(playerid, "promolic", listitem);
            D(playerid, D_PROMO_5, DSI, ""P"Создание промокода", "\n\n"W"Укажите количество денег, которое будет выдано при использовании промокода\n"G"От $5.000$ до $50.000\n\n", "Готово", "Отмена");
        }
    	case D_PROMO_5:  {
            if(!response) return 1;
            if(!strlen(inputtext)) return D(playerid, D_PROMO_5, DSI, ""P"Создание промокода", "\n\n"W"Укажите количество денег, которое будет выдано при использовании промокода\n"G"От $5.000$ до $50.000\n\n", "Готово", "Отмена");
            if(!(5000 <= strval(inputtext) <= 50000)) {
				return D(playerid, D_PROMO_5, DSI, ""P"Создание промокода", "\n\n"W"Укажите количество денег, которое будет выдано при использовании промокода\n\n"NO"*"G" От $5.000$ до $50.000\n\n", "Готово", "Отмена");
            }
            SetPVarInt(playerid, "promomoney", strval(inputtext));
            new promoname[16];
            GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
			new str2[7][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4","Не выдавать"};
			new str3[5][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие","Не выдавать"};

			new string[360];
			format(string, sizeof(string), "\
				"W"Вы хотите создать промокод "P"%s"W"?\n\
				Количество денег: "GREEN"$%i"W"\n\
				Навыки владения оружием: "GREEN"%s"W"\n\
				Лицензия: "GREEN"%s",
			promoname,GetPVarInt(playerid, "promomoney"), str2[GetPVarInt(playerid, "promoskills")], str3[GetPVarInt(playerid, "promolic")]);
            D(playerid, D_PROMO_6, DSM, ""P"Создание промокода", string, "Создать", "Отмена");
        }
		case D_PROMO_6: {
            if(!response) return 1;
            new promoname[16];
            GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
            mysql_tquery(connects, "SELECT * FROM "T_PROMOCODE"", "promo_create", "is", playerid, promoname);
	    }
    	case D_PROMO_2: {
            if(!response) return 1;
            if(!strlen(inputtext)) return D(playerid, D_PROMO_2, DSI, ""P"Удаление промокода", "\n\n"W"Введите промокод который хотите удалить:\n\n", "Далее", "Назад");
            for(new i = strlen(inputtext); i != 0; --i) {
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ' ': {
						return D(playerid, D_PROMO_2, DSI, ""P"Удаление промокода", "\n\n"W"Введите промокод который хотите удалить:\n\n"NO"*"G" Включите английскую раскладку\n\n", "Далее", "Назад");
					}
				}
			}
			mysql_tquery(connects, "SELECT * FROM "T_PROMOCODE"", "promo_dell", "is", playerid, inputtext);
	    }
		case D_USE_PROMO: {
	        if(!response) return 1;
			if(strlen(inputtext) < 1 || strlen(inputtext) > 15) return ErrorMessage(playerid,"Длина промокода должна быть от 1 до 15 символов");
			if(is_text_invalid(inputtext)) return ErrorMessage(playerid,"Присутствуют запрещенные символы");
	        new query[128];
            format(query, 128, "SELECT * FROM "T_PROMOCODE" WHERE code LIKE '%s'", inputtext);
            mysql_tquery(connects, query, "promo_check", "is", playerid, inputtext);
	    }
		case D_COMP_GAME: {
	    	if(!response) return 1;
	    	switch(listitem) {
	    	    case 0: D(playerid,D_COMP_GAME_1,DSL,""P"Capture Blocks",""P"1."W" Играть\n"P"2."W" Информация", "Выбрать", "Закрыть");
	    	    case 1: D(playerid,D_COMP_GAME_2,DSL,""P"DM - Арена",""P"1."W" Играть\n"P"2."W" Информация\n"P"3."W" TOP - 5", "Выбрать", "Закрыть");
	    	    case 2: D(playerid,D_COMP_GAME_3,DSL,""P"Гонка Вооружений",""P"1."W" Играть\n"P"2."W" Информация\n"P"3."W" TOP - 5", "Выбрать", "Закрыть");
			}
		}
		case D_COMP_GAME_1: {
	    	if(!response) return 1;
	    	switch(listitem) {
	    	    case 0: {
	          		if(g_game_status != 2) {
						new Float:pos[3];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						SetPVarFloat(playerid, "pos_comp_x", pos[0]);
						SetPVarFloat(playerid, "pos_comp_y", pos[1]);
						SetPVarFloat(playerid, "pos_comp_z", pos[2]);
						SetPVarInt(playerid, "comp_int", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "comp_vw", GetPlayerVirtualWorld(playerid));
						if(g_game_status == 0) {
							g_sign_up_timer = SetTimer("MinigamePrepare", 30000, false);
							g_game_status = 1;
							SendOk(playerid,"Вы создали сервер. Ожидайте подключение других игроков [30 секунд]");
							TI[playerid][tBlockWars] = true;
						}
						else if(g_game_status == 1) {
			    			if(!TI[playerid][tBlockWars]) {
								TI[playerid][tBlockWars] = true;
								SendOk(playerid, "Вы присоеденились к игре");
								new null;
				    			foreach(new i:Player) {
									if(!TI[i][tLogin]) continue;
									if(!TI[i][tBlockWars]) continue;
									null++;
								}
								if(null == 4) {
									KillTimer(g_sign_up_timer);
									MinigamePrepare();
								}
							}
							else ErrorMessage(playerid,"Вы уже записались на игру");
						}
					}
					else ErrorMessage(playerid,"Игра уже началась");
				}
	    	    case 1: {
					static const f_str[] = "\t\t\t{FFFF00}- Capture Blocks -"W"\n\n\
						Суть данной мини-игры {FFFF00}'Capture Blocks'"W" такова:\n\
						За {FFFF00}1"W" минуту захватить большее количество квадратов,\n\
						квадрат захватывается и красится в {FFFF00}Ваш"W" цвет,\n\
						свой цвет можно узнать на текстдрайве при начале мини-игры.\n\
						Максимальное количество игроков - {FFFF00}4"W", минимальное - {FFFF00}2"W".";
				    new string[sizeof(f_str)];
					format(string,sizeof(string),f_str);
					D(playerid,DIALOG_NONE,DSM, ""P"Capture Blocks",string, "Закрыть", "");
				}
			}
		}
		case D_COMP_GAME_2: {
	    	if(!response) return 1;
	    	if(TI[playerid][tBlockWars]) return ErrorMessage(playerid,"Вы записаны на игру Capture Blocks");
	    	switch(listitem) {
	    	    case 0: {
					TI[playerid][tDMArea][0] = 1;
					TI[playerid][tDMArea][1] = 0;
					TI[playerid][tDMArea][2] = 0;
					new Float:pos[3];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					SetPVarFloat(playerid, "pos_comp_x", pos[0]);
					SetPVarFloat(playerid, "pos_comp_y", pos[1]);
					SetPVarFloat(playerid, "pos_comp_z", pos[2]);
					SetPVarInt(playerid, "comp_int", GetPlayerInterior(playerid));
					SetPVarInt(playerid, "comp_vw", GetPlayerVirtualWorld(playerid));
					new string[100];
     				format(string, sizeof(string), "Присоединился новый игрок - "ORANGE"%s",player_name[playerid]);
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!TI[i][tDMArea][0]) continue;
						SendClientMessage(i,-1,string);
					}
					SendOk(playerid,"Для выхода из DM-Арены,используйте: "W"/power");
					DelGun(playerid);
					AC_GivePlayerWeapon(playerid, PaintGun[random(sizeof(PaintGun))], 3000);
	    	    	new rand = random(sizeof(DmArenaSpawns));
					SetPlayerPosAC(playerid, DmArenaSpawns[rand][0], DmArenaSpawns[rand][1], DmArenaSpawns[rand][2],8,0);
					SetPlayerHealth(playerid, 100.0);
					SetPlayerColor(playerid,0x56FB4EFF);
					format(string,sizeof(string),"{1bd12f}Убийств:{ffffff}%d\n{1bd12f}Смертей:{ffffff}%d",TI[playerid][tDMArea][1],TI[playerid][tDMArea][2]);
					DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
					DMSTATUS[playerid] = CreateDynamic3DTextLabel(string, 0xFF6347FF, 0,0,0.4,10.0,playerid,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
				}
				case 1: {
				    static const f_str[] = "\t\t\t\t{FFFF00}- DM - Арена -"W"\n\n\
						Добро пожаловать на {FFFF00}'DM - Арену'"W".\n\
						Данный режим предназначен для отдыха души и разума от повседневных забот.\n\
						Оружие: {FFFF00}Рандомное"W"\n\
						После убийства ваше здоровье пополняется на {FFFF00}25 хп"W".\n\
						Цель игры: Набрать наибольшее количество убийств\n\n\
						Приз - {FFFF00}ВСЕОБЩЕЕ УВАЖЕНИЕ";
				    new string[sizeof(f_str)];
					format(string,sizeof(string),f_str);
					D(playerid,DIALOG_NONE,DSM, ""P"DM - Арена",string, "Закрыть", "");
				}
				case 2: {
					new name[24],rows;
					new kills;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pKills` FROM `accounts` ORDER BY `pKills` DESC LIMIT 5");
					rows = cache_num_rows();
					if(rows) {
						new string[300];
	       				string = ""P"№ Имя\t"P"Убийств\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pKills",kills);
							format(str, sizeof(str), f_str, i+1, name,kills);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, "ТОП игроки", string, "Закрыть", "");
					}
					else ErrorMessage(playerid,"Список еще не составлен");
					cache_delete(result);
				}
			}
		}
		case D_COMP_GAME_3: {
	    	if(!response) return 1;
	    	if(TI[playerid][tBlockWars]) return ErrorMessage(playerid,"Вы записаны на игру Capture Blocks");
	    	switch(listitem) {
	    	    case 0: {
					TI[playerid][tGunArea][0] = 1;
					TI[playerid][tGunArea][1] = 0;
					TI[playerid][tGunArea][2] = 0;
					TI[playerid][tGunArea][3] = 1;
					new Float:pos[3];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					SetPVarFloat(playerid, "pos_comp_x", pos[0]);
					SetPVarFloat(playerid, "pos_comp_y", pos[1]);
					SetPVarFloat(playerid, "pos_comp_z", pos[2]);
					SetPVarInt(playerid, "comp_int", GetPlayerInterior(playerid));
					SetPVarInt(playerid, "comp_vw", GetPlayerVirtualWorld(playerid));
					new string[100];
     				format(string, sizeof(string), "Присоединился новый игрок - "ORANGE"%s",player_name[playerid]);
					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!TI[i][tGunArea][0]) continue;
						SendClientMessage(i,-1,string);
					}
					SendOk(playerid,"Для выхода из Гонки Вооружений,используйте: "W"/power");
					DelGun(playerid);
					AC_GivePlayerWeapon(playerid, ArenaGun[5], 3000);
	    	    	new rand = random(sizeof(DMPositions));
					SetPlayerPosAC(playerid, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2],141,0);
					SetPlayerHealth(playerid, 100.0);
					SetPlayerColor(playerid,0x56FB4EFF);
					format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[playerid][tGunArea][1],TI[playerid][tGunArea][3]);
					DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
					DMSTATUS[playerid] = CreateDynamic3DTextLabel(string, 0xFF6347FF, 0,0,0.4,10.0,playerid,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
				}
				case 1: {
				    static const f_str[] = "\t{FFFF00}    - Гонка Вооружений -"W"\n\n\
						Суть данной игры {FFFF00}'Гонка Вооружений'"W" такова:\n\
						Пройти всю лесенку смены оружия.\n\
						Всего оружий {FFFF00}6"W".\n\
						Для смены оружия требуется убийств {FFFF00}3"W".\n\
						Оружие №1 {FFFF00}M4"W".\n\
						Оружие №2 {FFFF00}AK-47"W".\n\
						Оружие №3 {FFFF00}MP5"W".\n\
						Оружие №4 {FFFF00}Shotgun"W".\n\
						Оружие №5 {FFFF00}Deagle"W".\n\
						Оружие №6 {FFFF00}USP"W".\n\n\
						Приз - {FFFF00}ВСЕОБЩЕЕ УВАЖЕНИЕ";
					new string[sizeof(f_str)];
					format(string,sizeof(string),f_str);
					D(playerid,DIALOG_NONE,DSM, ""P"Гонка Вооружений",string, "Закрыть", "");
				}
    			case 2: {
					new name[24],rows;
					new kills;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pWinArea` FROM `accounts` ORDER BY `pWinArea` DESC LIMIT 5");
					rows = cache_num_rows();
					if(rows) {
						new string[300];
	       				string = ""P"№ Имя\t"P"Побед\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pWinArea",kills);
							format(str, sizeof(str), f_str, i+1, name,kills);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, "ТОП игроки", string, "Закрыть", "");
					}
					else ErrorMessage(playerid,"Список еще не составлен");
					cache_delete(result);
				}
			}
		}
		case D_DISEASE: {
			if(!response) return true;
			new i = GetPVarInt(playerid,"gheal");
			new string[156];

			new price_1,price_2;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller_1 = floatround(1500/100*vip_status[PI[playerid][pVips]][vip_disease]);
				new seller_2 = floatround(2500/100*vip_status[PI[playerid][pVips]][vip_disease]);
				price_1 = (1500-seller_1);
				price_2 = (2500-seller_2);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
			    else {
			    	price_1 = 1500;
			    	price_1 = 2500;
			    }
			}

			switch(take_items[playerid][listitem]) {
				case 0: {
					if(GetPlayerMoneyEx(i) < price_1) return ErrorMessage(playerid,"У игрока недостаточно средств");
					format(string, sizeof(string), "Вы предложили "P"%s"G" лечение болезни грипп",player_name[i]);
					SendUse(playerid,string);

					static const f_str[] = "\n"W"Доктор: "P"%s"W" предлагает вылечить Вас от болезни грипп.\n\
										Стоимость процедур: "GREEN"$%d.\n\n"YELLOW"\tВы согласны пройти курс лечения?";
					new str[sizeof(f_str) +1 + (-2 + 25) + (-2 + 6)];
					format(str, sizeof(str), f_str,player_name[playerid],price_1);
					D(i,D_DISEASE_2,DSM, ""P"Лечение",str,"Да", "Нет");
				}
				case 1: {
					if(GetPlayerMoneyEx(i) < price_2) return ErrorMessage(playerid,"У игрока недостаточно средств");
					format(string, sizeof(string), "Вы предложили "P"%s"G" лечение болезни анорексия",player_name[i]);
					SendUse(playerid,string);

					static const f_str[] = "\n"W"Доктор: "P"%s"W" предлагает вылечить Вас от болезни анорексия.\n\
										Стоимость процедур: "GREEN"$%d.\n\n"YELLOW"\tВы согласны пройти курс лечения?";
					new str[sizeof(f_str) +1 + (-2 + 25) + (-2 + 6)];
					format(str, sizeof(str), f_str,player_name[playerid],price_2);
					D(i,D_DISEASE_2,DSM, ""P"Лечение",str,"Да", "Нет");
				}
			}
			SetPVarInt(i,"gheal2",take_items[playerid][listitem]);
			SetPVarInt(i,"gheal2p",playerid);
		}
		case D_DISEASE_2: {
			new id = GetPVarInt(playerid,"gheal2p");
			new switem = GetPVarInt(playerid,"gheal2");
			DeletePVar(playerid,"gheal2p");
			DeletePVar(playerid,"gheal2");
			if(!response) {
				SendOk(playerid,"Вы отказались от лечения");
				SendOk(id,"Игрок отказался от лечения");
			}
			else {
				new price_1,price_2;
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
			    else {
			    	price_1 = 1500;
			    	price_1 = 2500;
			    }

				new string[144];
				switch(switem) {
					case 0: {
						SendOk(playerid,"Вы прошли курс лечения от болезни "W"грипп");
						format(string, sizeof(string),"Игрок "P"%s "G"прошел курс лечения от болезни "W"грипп"G" за "ORANGE"%d", player_name[playerid],price_1);
						SendUse(id,string);
						GiveMoney(playerid,-price_1,"лечение от гриппа");
						GiveMoney(id,225,"лечение от гриппа");
						FI[fWHITEHOUSE][fBank] += 1275;
						UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
						PI[playerid][pDisease][0] = 0;
						UpdatePlayerData(playerid,"pDisease_0",0);
					}
					case 1: {
						SendOk(playerid,"Вы прошли курс лечения от болезни "W"анорексия");
						format(string, sizeof(string),"Игрок "P"%s "G"прошел курс лечения от болезни "W"анорексия"G" за "ORANGE"%d", player_name[playerid],price_2);
						SendUse(id,string);
						GiveMoney(playerid,-price_2,"лечение от анорексии");
						GiveMoney(id,375,"лечение от гриппа");
						FI[fWHITEHOUSE][fBank] += 2125;
						UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
						PI[playerid][pDisease][1] = 0;
						UpdatePlayerData(playerid,"pDisease_1",0);
						SetFullness(playerid, 100);
					}
				}
			}
		}
		case D_QUEST: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512];
			if(QuestProgress[playerid][id] == 100) return SendBotMessage(playerid,"Дружище, ты уже выполнил данное задание");
			switch(id) {
				case 2,3,4: {
					if(QuestProgress[playerid][id-1] != 100) return SendBotMessage(playerid,"Для начала выполни предыдущее задание");
				}
			}
			if(AcceptQuest[playerid][id] == 0) {
				format(string,sizeof(string),"%s\n\n"YELLOW"Вы действительно хотите начать данный квест?",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, ""P"Квест",string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
						case 1: {
							SendBotMessage(playerid,"А ты молодец! Быстрота выполнения задания меня шокирует! Держи награду!");
							GiveMoney(playerid,8000,"квест яблоки");
						}
						case 2: {
							SendBotMessage(playerid,"Отлично! Получите и распишитесь!");
							GiveMoney(playerid,8000,"квест оружейка");
						}
						case 3: {
							SendBotMessage(playerid,"Молодчина! Осталось последнее задание для тебя!");
							GiveMoney(playerid,8000,"квест нефтезавод");
						}
						case 4: {
							SendBotMessage(playerid,"Было приятно иметь дело с тобой! Хорошего настроения и верных друзей в нашем штате!");
							GiveMoney(playerid,10000,"квест лесопилка");
						}
					}
					if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
		case D_QUEST_GANG: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512];
			if(QuestProgress[playerid][id] == 100) return SendBotMessage(playerid,"Дружище, ты уже выполнил данное задание");
			switch(id) {
				case 6,7,8,9: {
					if(QuestProgress[playerid][id-1] != 100) return SendBotMessage(playerid,"Для начала выполни предыдущее задание");
				}
			}
			if(AcceptQuest[playerid][id] == 0) {
				format(string,sizeof(string),"%s\n\n"YELLOW"Вы действительно хотите начать данный квест?",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, ""P"Квест",string,"Начать","Отмена");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
						case 5: {
							SendBotMessage(playerid,"Красавчик. Получи бабосики");
							GiveMoney(playerid,5000,"квест вор");
						}
						case 6: {
							SendBotMessage(playerid,"Отлично! Из тебя получился хороший грабитель!");
							GiveMoney(playerid,7000,"квест грабитель");
						}
						case 7: {
							SendBotMessage(playerid,"Ты не перестаешь меня удивлять! Я надеюсь ты еще и на продаже заработал!");
							GiveMoney(playerid,7000,"квест продавец");
						}
						case 8: {
							SendBotMessage(playerid,"А ты меткий стрелок! Быстро справился! У меня для тебя награда!");
							GiveMoney(playerid,10000,"квест тащер");
						}
						case 9: {
							SendBotMessage(playerid,"Поздравляю! Ты прошёл все задания у меня! Удачи!");
							GiveMoney(playerid,20000,"квест Провокатор");
						}
					}
					if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
		case D_QUEST_1: {
			if(!response) return 1;
			new id = QuestClick[playerid];
			if(QuestProgress[playerid][id]==100) return ErrorMessage(playerid,"Вы уже выполняли у меня это задание!");//Вы уже его выполнили
			if(QuestProgress[playerid][id]>=0 && AcceptQuest[playerid][id]!=0) return ErrorMessage(playerid,"Вы уже приняли это задание!"); //Вы уже его приняли
			if(AcceptQuest[playerid][id]==0) {
				new query[256];
				format(query, sizeof(query), "INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 0, 1);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 0;
				SendBotMessage(playerid,"Желаю удачи! Для просмотра заданий введи: /quest");
				NextStapQI(playerid,id);
			}
			return 1;
		}
		case D_QUEST_2: {
		    if(!response) return 1;
			new id = QuestShow[playerid][listitem];
			if(QuestProgress[playerid][id]==100) return ErrorMessage(playerid,"Выбранный квест уже выполнен");
			new string[512];
			if(QuestProgress[playerid][id] < QI[id][LastProgress]) format(string,sizeof(string),""G"Прогресс: "ORANGE"%d/%d"W"",QuestProgress[playerid][id],QI[id][LastProgress]);
			else format(string,sizeof(string),""G"Прогресс: "NO"Можно завершить"W"");
			format(string,sizeof(string),"%s\n\n%s",QI[id][QuestText],string);
			D(playerid,D_QUEST_3,DSM,QI[id][QuestName],string,"Начать","Закрыть");
			QuestClick[playerid] = id;
		}
		case D_QUEST_3: {
		    if(!response) return 1;
			NextStapQI(playerid,QuestClick[playerid]);
		}
		case D_RIELTOR: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					drieltorka[playerid] = 0;
					new string[1512],houseidd = 0,classname[20];
					for(new i = 1; i < gHouseCount; i ++) {
						if(gHouses[i][houseOwnerID] != 0) continue;
						switch(gHouses[i][houseClass]) {
							case 0:classname = "Эконом";
							case 1:classname = "Cредний";
							case 2:classname = "Элитный";
							case 3:classname = "Особняк";
							default: classname = "Неизвестно";
						}
						format(string, sizeof(string), "%sДом "ORANGE"№%d "W"[%s]\n",string,i+1,classname);
						houseidd++;
						if(houseidd == 30) {
							format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
							break;
						}
					}
					if(!houseidd) return ErrorMessage(playerid,"Свободных домов нет");
					D(playerid, D_RIELTOR_HOUSE, DSL, ""P"Выберите дом", string, "Выбрать", "Назад");
					return 1;
				}
				case 1: {
					drieltorka[playerid] = 0;
					new string[1512],bizzid = 0;
					for(new i = 1; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzOwnerID] != 0) continue;
						format(string, sizeof(string), "%sБизнес "ORANGE"№%d "W"[%s] [%s]\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
						bizzid++;
						if(bizzid == 20) {
							format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
							break;
						}
					}
					if(!bizzid) return ErrorMessage(playerid,"Свободных бизнесов нет");
					D(playerid, D_RIELTOR_BIZZ, DSL, ""P"Выберите бизнес", string, "Выбрать", "Назад");
					return 1;
				}
			}
		}
		case D_RIELTOR_HOUSE: {
			if(!response) return 1;
			if(listitem == 30 || listitem == 31) CheckHouses(playerid,listitem);
			else {
				new bizz = TI[playerid][tSelectedBusinessID];
				if(bizz < 0) return 1;
				new price = gBusiness[bizz][bizzPrice]*150;
				new houseid = strval(inputtext[4])-1;
				SetPVarInt(playerid,"hrieltor",houseid);
				if(GetString(inputtext, "<<< Назад")) return CheckHouses(playerid,31);
				new classname[20];
				switch(gHouses[houseid][houseClass]) {
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
				}
				static const f_str[] = ""W"Дом № \t\t"P"%d\n\
					"W"Класс: \t\t\t"P"%s\n\
					"W"Гос.Цена: \t\t"GREEN"$%d\n\n\
					"W"Стоимость осмотра дома - "GREEN"$%d";
				new string[sizeof(f_str) +1 + (-2 + 10) + (-2 + 20) + (-2 + 7)];

				format(string,sizeof(string),f_str,houseid, classname, gHouses[houseid][housePrice],price);
				D(playerid,D_RIELTOR_HOUSE_2,DSM, ""P"Риэлторское агенство",string,"Осмотреть","Отмена");
			}
		}
		case D_RIELTOR_HOUSE_2: {
			if(!response) return DeletePVar(playerid,"hrieltor");
			new bizz = TI[playerid][tSelectedBusinessID];
			if(bizz < 0) return 1;
			new price = gBusiness[bizz][bizzPrice]*150;
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно средств");
			bizz_pay(bizz,price);
			GiveMoney(playerid,-price,"осмотр риэлторка");
			new houseid = GetPVarInt(playerid,"hrieltor")-1,Float:pos[3];

			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

			SetPVarFloat(playerid,"rielX",pos[0]);
			SetPVarFloat(playerid,"rielY",pos[1]);
			SetPVarFloat(playerid,"rielZ",pos[2]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			SetPlayerPosAC(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]-50.0,0,0);
			TogglePlayerControllable(playerid,0);

			SetPlayerCameraPos(playerid,gHouses[houseid][houseX] + (-8.0 * floatsin(gHouses[houseid][houseR], degrees)),gHouses[houseid][houseY] + (5.0 * floatcos(gHouses[houseid][houseR], degrees)), gHouses[houseid][houseZ]+0.3);
			SetPlayerCameraLookAt(playerid, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);

			SendOk(playerid,"Для выхода нажмите: "ORANGE"ENTER");
			SendOk(playerid,"Отметить местоположение дома на Вашей карте: "ORANGE"/label");
		}
		case D_RIELTOR_BIZZ: {
			if(!response) return 1;
			if(listitem == 20 || listitem == 21) CheckBusiness(playerid,listitem);
			else {
				new bizz = TI[playerid][tSelectedBusinessID];
				if(bizz < 0) return 1;
				new price = gBusiness[bizz][bizzPrice]*150;
				new bizzid = strval(inputtext[4])-1;
				SetPVarInt(playerid,"bizzrielor",bizzid+1);
				if(GetString(inputtext, "<<< Назад")) return CheckBusiness(playerid,21);
				static const f_str[] = ""W"Бизнес № \t\t"P"%d [%s]\n\
					"W"Тип: \t\t\t"P"%s\n\
					"W"Гос.Цена: \t\t"GREEN"$%d\n\n\
					"W"Стоимость осмотра бизнеса - "GREEN"$%d";
				new string[sizeof(f_str) +1 + (-2 + 15) + (-2 + 20) + (-2 + 7)];

				format(string,sizeof(string),f_str,bizzid+1, gBusiness[bizzid][bizzName],gBusinessTypeName[gBusiness[bizzid][bizzType]-1], gBusiness[bizzid][bizzSellPrice],price);
				D(playerid,D_RIELTOR_BIZZ_2,DSM, ""P"Риэлторское агенство",string,"Осмотреть","Отмена");
			}
		}
		case D_RIELTOR_BIZZ_2: {
			if(!response) return DeletePVar(playerid,"bizzrielor");
			new bizz = TI[playerid][tSelectedBusinessID];
			if(bizz < 0) return 1;
			new price = gBusiness[bizz][bizzPrice]*150;
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно средств");
			bizz_pay(bizz,price);
			GiveMoney(playerid,-price,"осмотр риэлторка");
			new bizzid = GetPVarInt(playerid,"bizzrielor")-1,Float:pos[3];

			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

			SetPVarFloat(playerid,"rielX",pos[0]);
			SetPVarFloat(playerid,"rielY",pos[1]);
			SetPVarFloat(playerid,"rielZ",pos[2]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			SetPlayerPosAC(playerid,gBusiness[bizzid][bizzX],gBusiness[bizzid][bizzY],gBusiness[bizzid][bizzZ]-50.0,0,0);
			TogglePlayerControllable(playerid,0);

			SetPlayerCameraPos(playerid,gBusiness[bizzid][bizzX] + (-8.0 * floatsin(gBusiness[bizzid][bizzR], degrees)),gBusiness[bizzid][bizzY] + (5.0 * floatcos(gBusiness[bizzid][bizzR], degrees)), gBusiness[bizzid][bizzZ]+0.3);
			SetPlayerCameraLookAt(playerid, gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ]);

			SendOk(playerid,"Для выхода нажмите: "ORANGE"ENTER");
			SendOk(playerid,"Отметить местоположение бизнеса на Вашей карте: "ORANGE"/label");
		}
		case D_VEH_NUMBER: {
			if(!response) return 1;
			if(!IsACarNumber(gPlayerCars[playerid][carModel][listitem])) return ErrorMessage(playerid, "На данное Т/С нельзя установить гос.номер");
			if(!GetString(NumberVehicle[playerid][listitem],"TRANSIT")) return ErrorMessage(playerid,"У Вас уже получен гос.номер на данное Т/С");
			new price;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(1000/100*vip_status[PI[playerid][pVips]][vip_number]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
				price = (1000-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
					price = (1000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
					price = (1000-seller);
				}
			    else price = 1000;
			}

			new string[156];
			format(string,sizeof(string),"\n\n"W"Вы действительно хотите установить гос.номер на Т/С "P"%s"W" стоимостью - "ORANGE"%d"W"?\n\n",gTransport[gPlayerCars[playerid][carModel][listitem]-400][trName],price);
			D(playerid,D_VEH_NUMBER_2,DSM, ""P"Покупка гос.номера", string, "Купить", "Назад");
			SetPVarInt(playerid,"buy_carnumber",listitem);
		}
		case D_VEH_NUMBER_2: {
			if(!response) return DeletePVar(playerid,"buy_carnumber");
			if(!IsACarNumber(gPlayerCars[playerid][carModel][GetPVarInt(playerid,"buy_carnumber")])) return ErrorMessage(playerid, "На данное Т/С нельзя установить гос.номер");
			if(!GetString(NumberVehicle[playerid][GetPVarInt(playerid,"buy_carnumber")],"TRANSIT")) return ErrorMessage(playerid,"У Вас уже получен гос.номер на данное Т/С");

			new price;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(1000/100*vip_status[PI[playerid][pVips]][vip_number]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
				price = (1000-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
					price = (1000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств");
					price = (1000-seller);
				}
			    else price = 1000;
			}

			GiveMoney(playerid,-price,"покупка гос.номера");
			new numbers[64],a1[32],a2[32],a3[32];
			a1 = ABC[random(20)];
			a2 = ABC[random(20)];
			a3 = ABC[random(20)];
			format(numbers,10, "%c %i %c%c", a1, 100 + random(900), a2, a3) ;
			format(NumberVehicle[playerid][GetPVarInt(playerid,"buy_carnumber")],MAX_PLAYER_NAME,"%s",numbers);
			new string[128];
			format(string,sizeof(string),"Поздравляем, с получением гос. номера: "W"%s",numbers);
			SendClientMessage(playerid,CGOLD,string);
			save_car(playerid,GetPVarInt(playerid,"buy_carnumber"));
			DeletePVar(playerid,"buy_carnumber");
		}
		case D_WORK: {
			if(!response) return 1;
			if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
			if(!start_work[playerid]) {
				A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
				SendOk(playerid,"Рабочий день начат");
				TI[playerid][tMasked] = 0;
				SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				start_work[playerid] = 1;
				PI[playerid][pJob] = 0;
				return 1;
			}
			if(IsAArm(playerid)) if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
			DelGun(playerid);
			SendOk(playerid, "Рабочий день окончен");
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
			start_work[playerid] = 0;
			A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
			SetPlayerArmour(playerid, 0);
		}
		case D_RADIO: {
			if(!response) return 1;
			switch(listitem) {
				case 0: PlayAudioStreamForPlayer(playerid, "https://a2.radioheart.ru:9017/RH3645"),SendOk(playerid, "Онлайн радио включено");
				case 1: PlayAudioStreamForPlayer(playerid, "http://stream.variant.fm:8000/LOVE-192"),SendOk(playerid, "Онлайн радио включено");
				case 2: PlayAudioStreamForPlayer(playerid, "http://air2.radiorecord.ru:805/rr_320"),SendOk(playerid, "Онлайн радио включено");
				case 3: PlayAudioStreamForPlayer(playerid, "http://ic3.101.ru:8000/v1_1?setst=-1"), SendOk(playerid, "Онлайн радио включено");
				case 4: PlayAudioStreamForPlayer(playerid, "http://cast.radiogroup.com.ua:8000/retro"), SendOk(playerid, "Онлайн радио включено");
				case 5: PlayAudioStreamForPlayer(playerid, "http://chanson.hostingradio.ru:8041/chanson256.mp3"), SendOk(playerid, "Онлайн радио включено");
				case 6: StopAudioStreamForPlayer(playerid), SendOk(playerid,"Радио выключено");
			}
		}
		case D_BL: {
			if(!response ) return 1;
			switch(listitem) {
				case 0: {
					if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) {
						new string[128];
						format(string, sizeof(string), "Доступно с %d ранга", FI[PI[playerid][pMember]][fInviteRang]);
						ErrorMessage(playerid, string);
						return 1 ;
					}
					D(playerid,D_BL_ADD,DSI, ""P"Добавление в ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите внести в ЧС организации\n\n", "Далее", "Назад");
				}
				case 1: {
					if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) {
						new string[128];
						format(string, sizeof(string), "Доступно с %d ранга", FI[PI[playerid][pMember]][fInviteRang]);
						ErrorMessage(playerid, string);
						return 1 ;
					}
					D(playerid, D_BL_DELL, DSI, ""P"Удаление из ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите вычеркнуть из ЧС организации\n\n", "Принять", "Назад");
				}
				case 2: {
					new query[76];
					SetPVarInt(playerid, "bl_page", 1);

					format(query, sizeof(query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PI[playerid][pMember]);
					mysql_pquery(connects, query, "bl_callback", "i", playerid );
				}
				case 3: {
					new string[2056];
					string = "Имя\t\t\t\tПричина\n\n"W"";
					new COUNT_MEMBERS = 0 ;

					foreach(new i:Player) {
						if(!TI[i][tLogin]) continue;
						if(!bl_info[i][bl_fraction][PI[playerid][pMember]]) continue;

						format(string, sizeof(string), "%s%s(%i)\t\t\t%s\n", string, player_name[i], i, bl_info[i][bl_reason][PI[playerid][pMember]]);
						COUNT_MEMBERS ++ ;
					}
					if(COUNT_MEMBERS == 0) return ErrorMessage(playerid, "Чёрный список пуст");
					D(playerid, DIALOG_NONE, DSM, ""P"Черный список онлайн", string, "Закрыть", "");
				}
			}
			return 1 ;
		}
		case D_BL_ADD: {
			if(!response ) return pc_cmd_bl(playerid);
			if(!strlen(inputtext) || strlen(inputtext)>23) return D(playerid, D_BL_ADD, DSI, ""P"Добавление в ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите внести в ЧС организации\n"NO"*"G" От 10 до 24 символов\n\n", "Далее", "Назад");
			strmid(bl_name,inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			if(!IsBannedNameReg(bl_name)) return D(playerid, D_BL_ADD, DSI, ""P"Добавление в ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите внести в ЧС организации\n"NO"*"G" Данный игрок не зарегистрирован на сервере\n\n", "Далее", "Назад");
			if(IsBLName(bl_name,PI[playerid][pMember])) return D(playerid, D_BL_ADD, DSI, ""P"Добавление в ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите внести в ЧС организации\n"NO"*"G" Данный игрок уже в ЧС\n\n", "Далее", "Назад");
			if(IsBLNameMember(bl_name,PI[playerid][pMember])) return D(playerid, D_BL_ADD, DSI, ""P"Добавление в ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите внести в ЧС организации\n"NO"*"G" Данный игрок состоит в Вашей организации\n\n", "Далее", "Назад");
			D(playerid, D_BL_ADD_REASON, DSI, ""P"Причина внесения", "\n\n"W"Введите причину, по которой Вы хотите внести игрока в ЧС организации\n\n", "Принять", "Назад");
		}
		case D_BL_ADD_REASON: {
			if(!response) return D(playerid, D_BL_ADD, DSI, ""P"Добавление в ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите внести в ЧС организации\n\n", "Далее", "Назад");
			if(strlen(inputtext) < 2 || strlen(inputtext) > 32) return D(playerid, D_BL_ADD_REASON, DSI, ""P"Причина внесения", "\n\n"W"Введите причину, по которой Вы хотите внести игрока в ЧС организации\n"NO"*"G" Причина должна быть от 2 до 32 символов\n\n", "Принять", "Назад");
			new pl_id = GetCheckID(bl_name);

			new query[356];
			format(query, sizeof(query), "INSERT INTO `fraction_bl` (`f_bl_id`, `f_bl_accused`, `f_bl_accuser`, `f_bl_date`, `f_bl_reason`) VALUES ('%i','%s','%s',NOW(),'%s')",
			PI[playerid][pMember], bl_name, player_name[playerid], inputtext);
			mysql_pquery(connects, query, "", "");

			new string[128];
			if(pl_id != INVALID_PLAYER_ID) {
				bl_info[pl_id][bl_fraction][PI[playerid][pMember]] = true;
				bl_info[pl_id][bl_reason][PI[playerid][pMember]] = strlen(inputtext);

				format(string, sizeof(string), "[ЧС] %s внёс Вас в чёрный список %s. Причина: %s", player_name[playerid], FI[PI[playerid][pMember]][fName], inputtext);
				SendClientMessage(pl_id, COLOR_LIGHTRED, string) ;
			}
			format(string, sizeof(string), "[ЧС] %s внёс %s в чёрный список %s. Причина: %s",  player_name[playerid], bl_name, FI[PI[playerid][pMember]][fName], inputtext);
			SendFamilyMessage(PI[playerid][pMember], COLOR_LIGHTRED, string);
		}
		case D_BL_DELL: {
			if(!response ) return pc_cmd_bl(playerid);
			if(!strlen(inputtext) || strlen(inputtext)>23) return D(playerid, D_BL_DELL, DSI, ""P"Удаление из ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите вычеркнуть из ЧС организации\n"NO"*"G" От 10 до 24 символов\n\n", "Далее", "Назад");
			strmid(bl_name,inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			if(!IsBLName(bl_name,PI[playerid][pMember])) return D(playerid, D_BL_DELL, DSI, ""P"Удаление из ЧС", "\n\n"W"Введите Nick_Name игрока, которого хотите вычеркнуть из ЧС организации\n"NO"*"G" Данный игрок не в ЧС\n\n", "Далее", "Назад");

			//bl_info[pl_id][bl_fraction][PI[playerid][pMember]] = false;
			new query[74 + MAX_PLAYER_NAME + 6];
			format(query, sizeof(query), "DELETE FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", bl_name, PI[playerid][pMember]);
			mysql_pquery(connects, query, "", "");

			new string[128];
			new pl_id = GetCheckID(bl_name);
			if(pl_id != INVALID_PLAYER_ID) {
				format(string, sizeof(string), "[ЧС] %s вычеркнул Вас из чёрного списка %s", player_name[playerid], FI[PI[playerid][pMember]][fName]);
				SendClientMessage(pl_id, COLOR_LIGHTRED, string);
				bl_info[pl_id][bl_fraction][PI[playerid][pMember]] = false;
			}
			format(string, sizeof(string), "[ЧС] %s вычеркнул %s из чёрного списка %s",  player_name[playerid], bl_name, FI[PI[playerid][pMember]][fName]);
			SendFamilyMessage(PI[playerid][pMember], COLOR_LIGHTRED, string);
		 }
		 case D_BL_ALL: {
			if(!response) {
				DeletePVar(playerid,"bl_page");
				DeletePVar(playerid,"bl_rows");
				return pc_cmd_bl(playerid);
			}
			if(listitem == 0) {
				new rows_list = GetPVarInt(playerid, "bl_page") - 1;
				new query[128];
				if(rows_list == 0) {
					format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PI[playerid][pMember]);
					mysql_pquery(connects, query, "bl_callback", "i", playerid );
					ErrorMessage(playerid, "Вы на 1ой странице");
					return 1 ;
				}
				SetPVarInt(playerid, "bl_page", rows_list ) ;
				format(query, sizeof(query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PI[playerid][pMember]);
				mysql_pquery(connects, query, "bl_callback", "i", playerid);
			}
			else if(listitem == 1) {
				new rows_list = GetPVarInt ( playerid, "bl_page" ) - 1;
				new query[128];
				if((rows_list + 1 )*10 >= GetPVarInt(playerid, "bl_rows" )) {
					ErrorMessage(playerid, "Вы на последней странице");
					format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PI[playerid][pMember]);
					mysql_pquery(connects, query, "bl_callback", "i", playerid);
					return 1 ;
				}
				SetPVarInt(playerid, "bl_page", rows_list + 2);
				format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PI[playerid][pMember]);
				mysql_pquery(connects, query, "bl_callback", "i", playerid);
			}
			else {
				new query[128];
				format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PI[playerid][pMember]);
				mysql_pquery(connects, query, "bl_callback", "i", playerid);
			}
		}
		case D_REFERALS: {
		    if(response) FirstReferal[playerid] += 10;
		    else {
		        if(FirstReferal[playerid] >= 10) FirstReferal[playerid] -= 10;
		        else return true;
		    }
		    new string[1024], Nick[MAX_PLAYER_NAME], Level,rows,query[156];
		    format(query, sizeof(query), "\
				SELECT `Name`,`pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT %i, 10", player_name[playerid], FirstReferal[playerid]);
				
		    new Cache:result = mysql_query(connects, query);
      		rows = cache_num_rows();
			if(rows) {
				for(new i; i < rows; i ++) {
					cache_get_value_name(i, "Name", Nick, MAX_PLAYER_NAME);
					cache_get_value_name_int(i, "pLevel",Level);

					if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+FirstReferal[playerid]+1, Nick, Level);
					else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+FirstReferal[playerid]+1, Nick, Level);
				}
				if(!D(playerid, D_REFERALS, 0, "Приглашенные", string, "Далее", "Назад")) ErrorMessage(playerid, "Недоступно, попробуйте повторить заного");
			}
			else ErrorMessage(playerid,"Больше Вас никто не указывал как пригласившего на сервер");
      		cache_delete(result);
		}
		case D_FAMILY_OFFLINE: {
		    if(response) FirstFamily[playerid] += 20;
		    else {
		        if(FirstFamily[playerid] >= 20) FirstFamily[playerid] -= 20;
		        else return true;
		    }
		    new names[24],query[64],rows,string[1256],Level;
		    format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `family` = '%d' LIMIT %i, 20", PI[playerid][pFamily], FirstFamily[playerid]);
		    new Cache:result = mysql_query(connects, query);
      		rows = cache_num_rows();
			if(rows > 0) {
				for(new i; i < rows; i ++) {
					cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
					cache_get_value_name_int(i, "pLevel",Level);
					if(IsPlayerConnected(GetPlayerID(names))) continue;
					if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+FirstFamily[playerid]+1, names, Level);
					else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+FirstFamily[playerid]+1, names, Level);
				}
				if(!D(playerid, D_FAMILY_OFFLINE, 0, "Семья offline", string, "Далее", "Назад")) ErrorMessage(playerid, "Недоступно, попробуйте повторить заного");
			}
			else ErrorMessage(playerid, "Больше в Вашей семье никого нет");
			cache_delete(result);
		}
		case D_BIZZ_BO_BANK: {
			if(!response) return 1;
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			SetPVarInt(playerid,"atm_listitem",listitem+1);
			if(!ATMData[listitem+1][atm_Bank]) {
				new string[328];
				format(string, sizeof(string), "\n\n"W"Вы собираетесь арендовать банкомат "P"[%s]"W"\nСтоимость аренды: "ORANGE"$%d / 7 дней\n\n", ATMNames[listitem],15000);
				D(playerid,D_BIZZ_BO_BANK_2,DSM, ""P"Аренда банкомата",string,"Арендовать","Отмена");
			}
			else return ErrorMessage(playerid,"Выбранный банкомат арендован");
		}
		case D_BIZZ_BO_BANK_2: {
			if(!response) return DeletePVar(playerid,"atm_listitem");
			new bizz = PI[playerid][pBusiness];
			if(!bizz) return 1;
			new id_slot = GetPVarInt(playerid,"atm_listitem");
			DeletePVar(playerid,"atm_listitem");
			if(ATMData[id_slot][atm_Bank]) return ErrorMessage(playerid,"Выбранный банкомат арендован");
			if(gBusiness[bizz][bizzBank] < 15000) return ErrorMessage(playerid,"В кассе банковского отделения недостаточно средств для аренды");
			gBusiness[bizz][bizzBank] -= 15000;
			UpdateBusinessDataInt(bizz,"bank",gBusiness[bizz][bizzBank]);
			ATMData[id_slot][atm_Bank] = bizz;
			ATMData[id_slot][atm_BankTime] = (unix + 86400 * 7);
			UpdateAtmData(id_slot,"ATM_BANK",ATMData[id_slot][atm_Bank]);
			UpdateAtmData(id_slot,"ATM_BANKTIME",ATMData[id_slot][atm_BankTime]);
			SendOk(playerid,"Выбранный банкомат успешно арендован");
		}
		case D_BIZZ_BO: {
			if(!response) return 1;
			new bizz = PI[playerid][pBusiness];
			switch(listitem) {
				case 0: {
					new day;
					day = (gBusiness[bizz][bizzDay]-gettime())/86400;
					static const f_str[] = ""W"Название:\t\t"P"%s\n\
											"W"Владелец:\t\t"P"%s\n\
											"W"Количество дней:\t"P"%d\n\
											"W"Гос. цена\t\t"P"%d\n\
											"W"Касса:\t\t\t"P"$%d\n\
											"W"Оплата:\t\t"P"$%d/день\n\
											"W"Налогообложение:\t"P"%d%";
					new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 3) + (-2 + 3) + (-2 + 8) + (-2 + 8) + (-2 + 8) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz][bizzOwner],day,gBusiness[bizz][bizzSellPrice],gBusiness[bizz][bizzBank],floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent/2),Nalog[3]);
					D(playerid,DIALOG_NONE,DSM, ""P"Банковское отделение",string,"Закрыть","");
				}
				case 1: {
					static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness]][bizzBank]);
					D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
				}
				case 2: {
					load_color(playerid);
					SetPVarInt(playerid,"color_allcolor",1);
				}
				case 3: {
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""P"Название банковского отделения","\n\n"W"Введите новое название банковского отделения:\n\n\
																Минимальное количество символов: "P"3\n\
																"W"Максимальное количество символов: "P"20","Изменить","Отмена");
				}
				case 4: {
					D(playerid,D_BIZZ_BO_PERCENT,DSL,""P"Комиссия за переводы",""P"1."W" 0.1%\n"P"2."W" 0.2%\n"P"3."W" 0.3%\n"P"4."W" 0.4%\n"P"5."W" 0.5%\n"P"6."W" 0.6%\n"P"7."W" 0.7%\n"P"8."W" 0.8%\n"P"9."W" 0.9%\n"P"10."W" 1.0%","Изменить","Отмена");
				}
				case 5: {
					D(playerid,D_BIZZ_BO_PERCENT_2,DSI, ""P"Комиссия за оплату недвижимости","\n\n"W"Введите процент комиссии взымаемый с человека во время опаты недвижимости\n\n\
																Доступный диапазон: от "P"1% "W"до "P"5%","Изменить","Отмена");
				}
				case 6: {
					D(playerid,D_BIZZ_BO_PERCENT_3,DSI, ""P"Комиссия за пользование банкоматом","\n\n"W"Введите процент комиссии взымаемый с человека во время пользования банкоматом\n\n\
																Доступный диапазон: от "P"1% "W"до "P"5%","Изменить","Отмена");
				}
				case 7: {
					new string[1512],str[128];
					strcat(string,"№\tБанкомат\tСтатус\tАренда\n");
					for(new i = 1; i < 16; i ++) {
						if(ATMData[i][atm_Bank] == 0) format(str, sizeof(str), ""GREEN"%d\t%s\tНе арендован\t---\n", i,ATMNames[i-1]),strcat(string,str);
						else {
							new year, month, day, hour, minute, second;
							timestamp_to_date(ATMData[i][atm_BankTime]-unix, year, month, day, hour, minute, second);
							format(str, sizeof(str), ""NO"%d\t%s\t{%s}%s\t"P"%dд %dч %dм\n", i,
								ATMNames[i-1],color_td[FuncBizz[ATMData[i][atm_Bank]][funcbColor]][col_rgb],
								FuncBizz[ATMData[i][atm_Bank]][funcbName],day-1, hour, minute),strcat(string,str);
						}
					}
					D(playerid, D_BIZZ_BO_BANK, DSTH, "Управление банкоматами", string, "Выбрать", "Отмена");
				}
				case 8: {
					new query[156];
					format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PI[playerid][pBusiness]);
					mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PI[playerid][pBusiness]);
				}
				case 9: {
					new string[230];
					format(string,sizeof(string),""W"Вы хотите продать банковское отделение государству за "GREEN"$%d?\n\n"G"Для продажи банковского отделения игроку введите: /sellbusiness [ID игрока] [Сумма]",floatround(gBusiness[bizz][bizzSellPrice]/100*80));
					D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнесс",string,"Продать","Отмена");
				}
			}
		}
		case D_BIZZ_TK: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			dialog_tk(playerid,bizz,listitem);
		}
		case D_BIZZ_TK_ZAM: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			switch(listitem) {
				case 0: dialog_tk(playerid,bizz,0);
				case 1: dialog_tk(playerid,bizz,6);
				case 2: dialog_tk(playerid,bizz,7);
			}
		}
		case D_BIZZ_TK_MEM: {
			if(!response) return 1;
			GetWord(inputtext[3],0, select_member[playerid], strlen(inputtext[3])+2);
			new id = GetPlayerID(select_member[playerid]);
			new names[24],status,query[128];
			format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
			new Cache:result = mysql_query(connects, query);
			new rows = cache_num_rows();
			if(rows > 0) {
				cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
				cache_get_value_name_int(0, "bizz_status",status);
				if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
					if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
					if(status == 3) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
					if(PI[playerid][bizz_status] == 2) {
						if(status == 2) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
					}
					static const f_str[] = "\t%s\n\
											"P"1. "W"Изменить доступ:\n\
											\t%s- Водитель\n\
											\t%s- Управляющий\n\
											"P"2. "NO"Уволить";
					new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
					format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""));
					D(playerid,D_BIZZ_TK_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
				}
			}
			else ErrorMessage(playerid, "Сотрудник не найден");
			cache_delete(result);
		}
		case D_BIZZ_TK_MEM_2: {
			if(!response) return 1;
			new id = GetPlayerID(select_member[playerid]);
			if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
				if(PI[playerid][bizz_status] == 2 && listitem == 3) return ErrorMessage(playerid,"Невозможно применить");
				switch(listitem) {
					case 2,3: {
						if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							PI[id][bizz_status] = listitem-1;
							UpdatePlayerData(id,"bizz_status",PI[id][bizz_status]);
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_status` = '%d' WHERE `Name` = '%s' LIMIT 1",listitem-1,select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы изменили должность для сотрудника "ORANGE"%s"G" на "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
						format(string,sizeof(string),f_str,select_member[playerid],tk_class[listitem-2]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz_tk", 100, 0, "ii", playerid,PI[playerid][bizz_work]);
						return 1;
					}
					case 4: {
						if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
						if(IsPlayerConnected(id)) {
							if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PI[id][bizz_work]) RemovePlayerFromVehicleAC(id);
							PI[id][bizz_work] = 0;
							UpdatePlayerData(id,"bizz_work",0);
							SendOk(id,"Управляющий транспортной компании уволил вас из предприятия");
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_work` = '0',`bizz_cash` = '0',`bizz_lcash` = '0',`bizz_status` = '0' WHERE `Name` = '%s' LIMIT 1",select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Вы уволили сотрудника транспортной компании "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
						format(string,sizeof(string),f_str,select_member[playerid]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz_tk", 100, 0, "ii", playerid,PI[playerid][bizz_work]);
						members_funcbizz_tk(playerid,PI[playerid][bizz_work]);
						return 1;
					}
					default: {
						new names[24],status,query[128];
						format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
							cache_get_value_name_int(0, "bizz_status",status);
							if(PI[playerid][bizz_status] == 3 || PI[playerid][bizz_status] == 2) {
								if(id == playerid) return ErrorMessage(playerid,"Невозможно применить на себе");
								if(status == 3) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
								if(PI[playerid][bizz_status] == 2) {
									if(status == 2) return ErrorMessage(playerid,"Невозможно применить на Руководителе");
								}
								static const f_str[] = "\t%s\n\
														"P"1. "W"Изменить доступ:\n\
														\t%s- Водитель\n\
														\t%s- Управляющий\n\
														"P"2. "NO"Уволить";
								new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
								format(str,sizeof(str),f_str,names,(status == 1) ? (""P"") : (""W""),(status == 2) ? (""P"") : (""W""));
								D(playerid,D_BIZZ_TK_MEM_2,DSL,""P"Сотрудник",str,"Далее","Закрыть");
							}
						}
						else ErrorMessage(playerid, "Сотрудник не найден");
						cache_delete(result);
						return 1;
					}
				}
			}
		}
		case D_BIZZ_TK_INFO: {
			if(!response) return 1;
			new bizz = PI[playerid][bizz_work];
			switch(listitem) {
				case 0: showstattk(playerid,bizz);
				case 1: {
					new string[128];
					format(string,sizeof(string),"Доход за сутки:\t"ORANGE"$%d\nДоход за всё время:\t"ORANGE"$%d",PI[playerid][bizz_lcash],PI[playerid][bizz_cash]);
					D(playerid,DIALOG_NONE,DST,""P"Доходы",string,"Закрыть","");
				}
				case 2: {
					if(PI[playerid][bizz_status] == 3) return ErrorMessage(playerid,"Вы не можете уволиться из транспортной компании");
					PI[playerid][bizz_work] = 0;
					UpdatePlayerData(playerid,"bizz_work",0);
					PI[playerid][bizz_status] = 0;
					UpdatePlayerData(playerid,"bizz_status",0);
					SendOk(playerid,"Вы уволились из транспортной компании");
				}
			}
		}
		case D_TRUCK: {
			if(!response) {
				new Veh = GetPlayerVehicleID(playerid);
				if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(TK_Trailer[playerid]);
					TK_Trailer[playerid] = INVALID_VEHICLE_ID;
					TI[playerid][tTrucker][3] = 0;
					TI[playerid][tTrucker][2] = 0;
					TI[playerid][tTrucker][1] = 0;
					TI[playerid][tTrucker][0] = 0;
				}
				new rand = random(sizeof(tk_gun));
				SetVehiclePos(Veh, tk_gun[rand][0],tk_gun[rand][1],tk_gun[rand][2]);
				SetVehicleZAngle(Veh, tk_gun[rand][3]);
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				SetPlayerVirtualWorld(playerid,0);	
				SetVehicleVirtualWorld(Veh,0);
				return 1;
			}
			new veh = GetPlayerVehicleID(playerid),prods;
			switch(GetVehicleModel(veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}
			if(strval(inputtext) > prods) {
				static const f_str[] = ""W"Сколько боеприпасов вы хотите загрузить?\n\n\
									Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
									Боеприпасов на складе: "ORANGE"%d"W" ед\n\n\
									"W"Количество загружаемых боеприпасов должно быть кратное: "ORANGE"1000"W" кг\n\n\
									"NO"*"G" В Вашу фуру столько не поместится";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,zavodsklad);

				D(playerid,D_TRUCK,DSI, ""P"Оружейный завод",string,"Загрузить","Отмена");
				return 1;
			}
			if(strval(inputtext) > zavodsklad) {
				static const f_str[] = ""W"Сколько боеприпасов вы хотите загрузить?\n\n\
									Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
									Боеприпасов на складе: "ORANGE"%d"W" ед\n\n\
									"W"Количество загружаемых боеприпасов должно быть кратное: "ORANGE"1000"W" кг\n\n\
									"NO"*"G" На складе оружейного завода недостаточно боеприпасов";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,zavodsklad);

				D(playerid,D_TRUCK,DSI, ""P"Оружейный завод",string,"Загрузить","Отмена");
				return 1;
			}
			if((isNumeric(inputtext) || strlen(inputtext) > 6) || (strval(inputtext) != 1000 && strval(inputtext) != 2000 && strval(inputtext) != 3000 && strval(inputtext) != 4000 &&
				strval(inputtext) != 5000 && strval(inputtext) != 6000 && strval(inputtext) != 7000 && strval(inputtext) != 8000 && strval(inputtext) != 9000 && strval(inputtext) != 10000 &&
				strval(inputtext) != 11000 && strval(inputtext) != 12000 && strval(inputtext) != 13000 && strval(inputtext) != 14000 && strval(inputtext) != 15000)) {
				static const f_str[] = ""W"Сколько боеприпасов вы хотите загрузить?\n\n\
									Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
									Боеприпасов на складе: "ORANGE"%d"W" ед\n\n\
									"W"Количество загружаемых боеприпасов должно быть кратное: "ORANGE"1000"W" кг";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,zavodsklad);

				D(playerid,D_TRUCK,DSI, ""P"Оружейный завод",string,"Загрузить","Отмена");
				return 1;
			}
			SetPVarInt(playerid,"tk_spawn",1);
			SetTimerEx("tk_load",0,false,"ii",playerid,strval(inputtext));
			SendOk(playerid,"Загрузка фуры начата. Ожидайте завершения загрузки");
		}
		case D_TRUCK_2: {
			if(!response) {
				new Veh = GetPlayerVehicleID(playerid);
				if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(TK_Trailer[playerid]);
					TK_Trailer[playerid] = INVALID_VEHICLE_ID;
					TI[playerid][tTrucker][3] = 0;
					TI[playerid][tTrucker][2] = 0;
					TI[playerid][tTrucker][1] = 0;
					TI[playerid][tTrucker][0] = 0;
				}
				new rand = random(sizeof(tk_wood));
				SetVehiclePos(Veh, tk_wood[rand][0],tk_wood[rand][1],tk_wood[rand][2]);
				SetVehicleZAngle(Veh, tk_wood[rand][3]);
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				SetPlayerVirtualWorld(playerid,0);	
				SetVehicleVirtualWorld(Veh,0);
				return 1;
			}
			new veh = GetPlayerVehicleID(playerid),prods;
			switch(GetVehicleModel(veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}
			if(strval(inputtext) > prods) {
				static const f_str[] = ""W"Сколько тонн нефти вы хотите загрузить?\n\n\
									Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
									Нефти на складе: "ORANGE"%d"W" т.\n\n\
									"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.\n\n\
									"NO"*"G" В Вашу фуру столько не поместится";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,oilsklad*10000);

				D(playerid,D_TRUCK_2,DSI, ""P"Нефтезавод",string,"Загрузить","Отмена");
				return 1;
			}
			if(strval(inputtext) > oilsklad*10000) {
				static const f_str[] = ""W"Сколько тонн нефти вы хотите загрузить?\n\n\
									Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
									Нефти на складе: "ORANGE"%d"W" т.\n\n\
									"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.\n\n\
									"NO"*"G" На складе нефтезавода недостаточно нефти";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,oilsklad*10000);

				D(playerid,D_TRUCK_2,DSI, ""P"Нефтезавод",string,"Загрузить","Отмена");
				return 1;
			}
			if((isNumeric(inputtext) || strlen(inputtext) > 6) || (strval(inputtext) != 1000 && strval(inputtext) != 2000 && strval(inputtext) != 3000 && strval(inputtext) != 4000 &&
				strval(inputtext) != 5000 && strval(inputtext) != 6000 && strval(inputtext) != 7000 && strval(inputtext) != 8000 && strval(inputtext) != 9000 && strval(inputtext) != 10000 &&
				strval(inputtext) != 11000 && strval(inputtext) != 12000 && strval(inputtext) != 13000 && strval(inputtext) != 14000 && strval(inputtext) != 15000)) {
				static const f_str[] = ""W"Сколько тонн нефти вы хотите загрузить?\n\n\
									Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
									Нефти на складе: "ORANGE"%d"W" т.\n\n\
									"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,oilsklad*10000);

				D(playerid,D_TRUCK_2,DSI, ""P"Нефтезавод",string,"Загрузить","Отмена");
				return 1;
			}
			SetPVarInt(playerid,"tk_spawn",2);
			SetTimerEx("tk_load",0,false,"ii",playerid,strval(inputtext));
			SendOk(playerid,"Загрузка фуры начата. Ожидайте завершения загрузки");
		}
		case D_TRUCK_UNLOAD: {
			SetPlayerCheckpoint(playerid, 2869.7126,-1345.6025,1.3355, 5);
			SendOk(playerid,"Отправляйтесь к порту г. СФ");
			TI[playerid][tTrucker][1] = 1;
			TI[playerid][tTrucker][2] = tk_unloading[0];
		}
		case D_TRUCK_UNLOAD_2: {
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, 2869.7126,-1345.6025,1.3355, 5);
					SendOk(playerid,"Отправляйтесь к порту г. СФ");
					TI[playerid][tTrucker][2] = tk_unloading[1];
				}
				case 1: {
					SetPlayerCheckpoint(playerid, 1789.7302,3467.2896,2.6100, 5);
					SendOk(playerid,"Отправляйтесь к порту г. ЛС");
					TI[playerid][tTrucker][2] = tk_unloading[2];
				}
				case 2: {
					SetPlayerCheckpoint(playerid, 1713.8218,3504.8047,2.6100, 5);
					SendOk(playerid,"Отправляйтесь к оружейному заводу");
					TI[playerid][tTrucker][2] = tk_unloading[3];
				}
			}
			TI[playerid][tTrucker][1] = listitem+1;
		}
		case D_SPY: {
			if(!response) return 1;
			new string[1024];
			switch(listitem) {
				case 0: TI[playerid][tMasked] = fLSPD;
				case 1: TI[playerid][tMasked] = fSFPD;
				case 2: TI[playerid][tMasked] = fLVPD;
				case 3: TI[playerid][tMasked] = fMAYOR;
				case 4: TI[playerid][tMasked] = fARMYSF;
				case 5: TI[playerid][tMasked] = fARMYLV;
				case 6: TI[playerid][tMasked] = fMEDICLS;
				case 7: TI[playerid][tMasked] = fMEDICSF;
				case 8: TI[playerid][tMasked] = fMEDICLV;
				case 9: TI[playerid][tMasked] = fLSNEWS;
				case 10: TI[playerid][tMasked] = fSFNEWS;
				case 11: TI[playerid][tMasked] = fLVNEWS;
				case 12: TI[playerid][tMasked] = fLCN;
				case 13: TI[playerid][tMasked] = fYAKUZA;
				case 14: TI[playerid][tMasked] = fRM;
				case 15: TI[playerid][tMasked] = fBALLAS;
				case 16: TI[playerid][tMasked] = fVAGOS;
				case 17: TI[playerid][tMasked] = fGROVE;
				case 18: TI[playerid][tMasked] = fAZTEC;
				case 19: TI[playerid][tMasked] = fRIFA;
				case 20: TI[playerid][tMasked] = fWHITEHOUSE;
			}
			for(new i = 0; i < 10; i++) {
				if(!gFractionSkin[TI[playerid][tMasked]][i]) continue;
				format(string, sizeof(string), "%s%i\n",string,gFractionSkin[TI[playerid][tMasked]][i]);
			}
			D(playerid, D_SPY_2, DSL, ""P"Выберите скин", string, "Выбрать", "Закрыть");
			return 1;
		}
		case D_SPY_2: {
			if(!response) return TI[playerid][tMasked] = 0;
			new fraction = TI[playerid][tMasked];
			A_SetPlayerSkin(playerid,gFractionSkin[fraction][listitem]);
			SetPlayerColor(playerid,gFractionSpawn[fraction][fracColor]);
			new string[128];
			format(string, sizeof(string), "Вы взяли шпионскую одежду - "W"%s", FI[fraction][fName]);
			SendOk(playerid,string);
			SendOk(playerid,"Чтобы переодеться обратно, встаньте еще раз на пикап");
			return 1;
		}
		case D_DUEL: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(TI[playerid][tDuel] != -1) {
						if(DI[TI[playerid][tDuel]][duel_type] == 0) return ErrorMessage(playerid,"Вы создатель лобби/уже состоите в лобби");
						else if(DI[TI[playerid][tDuel]][duel_type] == 1) return duel_lobby_2(playerid,TI[playerid][tDuel]);
						else if(DI[TI[playerid][tDuel]][duel_type] == 2) return duel_lobby_3(playerid,TI[playerid][tDuel]);
					}
					new string[1024];
					strcat(string,"№ | Создатель\tТип | Взнос\tКарта | Оружие | ХП | Броня\tСтатус\n");
					new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
					new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
					new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
					new bool:duel_lobby = false;
					for(new d = 0; d < MAX_DUELS; d++) {
						if(DI[d][duel_create] == false || DI[d][duel_start] == true) continue;
						if(!DI[d][duel_password]) format(string,sizeof(string),"%s%d | %s\t%s | %d\t%s | %s | %d | %d\t"GREEN"OPEN"W"\n",string,d,player_name[DI[d][duel_owner_id]],duel_types[DI[d][duel_type]],DI[d][duel_money],duel_maps[DI[d][duel_map]],duel_guns[DI[d][duel_gun]],DI[d][duel_health],DI[d][duel_armour]);
						else format(string,sizeof(string),"%s%d | %s\t%s | %d\t%s | %s | %d | %d\t"NO"CLOSE"W"\n",string,d,player_name[DI[d][duel_owner_id]],duel_types[DI[d][duel_type]],DI[d][duel_money],duel_maps[DI[d][duel_map]],duel_guns[DI[d][duel_gun]],DI[d][duel_health],DI[d][duel_armour]);
						duel_lobby = true;
					}
					if(!duel_lobby) return SendBotMessage(playerid,"Доступных лобби нет");
					D(playerid,D_DUEL_2,DSTH,""P"Лобби",string,"Выбрать","Закрыть");
				}
				case 1: {
					if(TI[playerid][tDuel] != -1) {
						if(playerid != DI[TI[playerid][tDuel]][duel_owner_id]) return ErrorMessage(playerid,"Вы состоите в лобби");
						else {
							duel_message(playerid,TI[playerid][tDuel]);
							return 1;
						}
					}
					new duel_t = 0;
					for(new d = 0; d < MAX_DUELS; d++) {
						if(DI[d][duel_owner_id] != INVALID_PLAYER_ID) continue;
						TI[playerid][tDuel] = d;
						DI[d][duel_owner_id] = playerid;
						duel_t++;
						break;
					}
					if(!duel_t) return SendBotMessage(playerid,"В данный момент нельзя создать лобби. Все слоты переполнены");
					duel_message(playerid,TI[playerid][tDuel]);
				}
			}
		}
		case D_DUEL_2: {
			if(!response) return 1;
			new id = strval(inputtext[0]);
			SetPVarInt(playerid,"duel_number",id);
			if(DI[id][duel_owner_id] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Выбранное лобби недоступно");
			if(DI[id][duel_start] == true) return ErrorMessage(playerid,"Выбранное лобби недоступно");
			if(!DI[id][duel_password]) {
				duel_enter(playerid,id);
				return 1;
			}
			else D(playerid,D_DUEL_ENTER_PSW,DSI,""P"Лобби | Вход","\n\n"W"Для входа в лобби введите пароль:\n\n","Войти","Отмена");
		}
		case D_DUEL_3: {
			if(!response) return 1;
			new id = GetPVarInt(playerid, "duel_number");
			DeletePVar(playerid, "duel_number");
			if(DI[id][duel_owner_id] == INVALID_PLAYER_ID) return 1;
			if(GetPlayerMoneyEx(playerid) < DI[id][duel_money]) return ErrorMessage(playerid,"Недостаточно средств");
			GiveMoney(playerid,-DI[id][duel_money],"взнос дуэль");
			DI[id][duel_cash] += DI[id][duel_money];
			TI[playerid][tDuel] = id;
			switch(DI[id][duel_type]) {
				case 0: {
					DI[id][duel_id][1] = playerid;
					
					start_duel_1(id);
					new Float:pos[3];
					GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
					GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				}
				case 1: duel_lobby_2(playerid,id);
				case 2: duel_lobby_3(playerid,id);
			}
		}
		case D_DUEL_4: {
			if(TI[playerid][tDuel]) return 1;
			if(DI[TI[playerid][tDuel]][duel_start] == true) return 1;
			if(!response) {
				if(DI[TI[playerid][tDuel]][duel_owner_id] == playerid) duel_delete(TI[playerid][tDuel],false);
				if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,TI[playerid][tDuel]);
				TI[playerid][tDuel] = -1;
				return 1;
			}
			if(TI[playerid][tDuel] == -1) return 1;
			new id = TI[playerid][tDuel];
			switch(listitem) {
				case 0: {
					if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][0] = playerid,TI[playerid][tDuelLobby] = 0;
						SendOk(playerid,"Вы заняли место "W"№1"G" в команде "W"№1");
					}
					else duel_lobby_2(playerid,id);
				}
				case 1: {
					if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][1] = playerid,TI[playerid][tDuelLobby] = 1;
						SendOk(playerid,"Вы заняли место "W"№2"G" в команде "W"№1");
					}
					else duel_lobby_2(playerid,id);
				}
				case 2: duel_lobby_2(playerid,id);
				case 3: {
					if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][2] = playerid,TI[playerid][tDuelLobby] = 2;
						SendOk(playerid,"Вы заняли место "W"№1"G" в команде "W"№2");
					}
					else duel_lobby_2(playerid,id);
				}
				case 4: {
					if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][3] = playerid,TI[playerid][tDuelLobby] = 3;
						SendOk(playerid,"Вы заняли место "W"№2"G" в команде "W"№2");
					}
					else duel_lobby_2(playerid,id);
				}
			}
			if(DI[id][duel_id][0] != INVALID_PLAYER_ID && DI[id][duel_id][1] != INVALID_PLAYER_ID && DI[id][duel_id][2] != INVALID_PLAYER_ID && DI[id][duel_id][3] != INVALID_PLAYER_ID) {
				new Float:pos[3];
				GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][2], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][3], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_z", pos[2]);
				DI[id][duel_vw] = DI[id][duel_id][0]+1;
				start_duel_2(id);
			}
		}
		case D_DUEL_5: {
			if(TI[playerid][tDuel]) return 1;
			if(DI[TI[playerid][tDuel]][duel_start] == true) return 1;
			if(!response) {
				if(DI[TI[playerid][tDuel]][duel_owner_id] == playerid) duel_delete(TI[playerid][tDuel],false);
				if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,TI[playerid][tDuel]);
				TI[playerid][tDuel] = -1;
				return 1;
			}
			if(TI[playerid][tDuel] == -1) return 1;
			new id = TI[playerid][tDuel];
			switch(listitem) {
				case 0: {
					if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][0] = playerid,TI[playerid][tDuelLobby] = 0;
						SendOk(playerid,"Вы заняли место "W"№1"G" в команде "W"№1");
					}
					else duel_lobby_3(playerid,id);
				}
				case 1: {
					if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][1] = playerid,TI[playerid][tDuelLobby] = 1;
						SendOk(playerid,"Вы заняли место "W"№2"G" в команде "W"№1");
					}
					else duel_lobby_3(playerid,id);
				}
				case 2: {
					if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][2] = playerid,TI[playerid][tDuelLobby] = 2;
						SendOk(playerid,"Вы заняли место "W"№3"G" в команде "W"№1");
					}
					else duel_lobby_3(playerid,id);
				}
				case 3: duel_lobby_3(playerid,id);
				case 4: {
					if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][3] = playerid,TI[playerid][tDuelLobby] = 3;
						SendOk(playerid,"Вы заняли место "W"№1"G" в команде "W"№2");
					}
					else duel_lobby_3(playerid,id);
				}
				case 5: {
					if(DI[id][duel_id][4] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][4] = playerid,TI[playerid][tDuelLobby] = 4;
						SendOk(playerid,"Вы заняли место "W"№2"G" в команде "W"№2");
					}
					else duel_lobby_3(playerid,id);
				}
				case 6: {
					if(DI[id][duel_id][5] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][5] = playerid,TI[playerid][tDuelLobby] = 5;
						SendOk(playerid,"Вы заняли место "W"№3"G" в команде "W"№2");
					}
					else duel_lobby_3(playerid,id);
				}
			}
			if(DI[id][duel_id][0] != INVALID_PLAYER_ID && DI[id][duel_id][1] != INVALID_PLAYER_ID && DI[id][duel_id][2] != INVALID_PLAYER_ID && DI[id][duel_id][3] != INVALID_PLAYER_ID && DI[id][duel_id][4] != INVALID_PLAYER_ID && DI[id][duel_id][5] != INVALID_PLAYER_ID) {
				new Float:pos[3];
				GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][2], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][3], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][4], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][5], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_z", pos[2]);
				DI[id][duel_vw] = DI[id][duel_id][0]+1;
				start_duel_3(id);
			}
		}
		case D_DUEL_ENTER_PSW: {
			if(!response) return 1;
			if(DI[GetPVarInt(playerid, "duel_number")][duel_owner_id] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Выбранное лобби недоступно");
			if(DI[GetPVarInt(playerid, "duel_number")][duel_start] == true) return ErrorMessage(playerid,"Выбранное лобби недоступно");
			if(strval(inputtext) != DI[GetPVarInt(playerid, "duel_number")][duel_password]) {
				D(playerid,D_DUEL_ENTER_PSW,DSI,""P"Лобби | Вход","\n\n"W"Для входа в лобби введите пароль:\n"NO"*"G" Неверный пароль\n\n","Войти","Отмена");
				return 1;
			}
			duel_enter(playerid,GetPVarInt(playerid, "duel_number"));
		}
		case D_DUEL_1: {
			if(!response) {
				duel_delete(TI[playerid][tDuel],true);
				return 1;
			}
			if(listitem != 9) {
				if(DI[TI[playerid][tDuel]][duel_create] == true) return ErrorMessage(playerid,"Запрещено изменять, после создания лобби");
			}
			switch(listitem) {
				case 0: {
					//DI[TI[playerid][tDuel]][duel_type] = 0;
					DI[TI[playerid][tDuel]][duel_type] = (DI[TI[playerid][tDuel]][duel_type] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_type] == 1) ? 2 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 1: {
					DI[TI[playerid][tDuel]][duel_raund] = (DI[TI[playerid][tDuel]][duel_raund] == 1) ? 3 : (DI[TI[playerid][tDuel]][duel_raund] == 3) ? 5 : (DI[TI[playerid][tDuel]][duel_raund] == 5) ? 11 : 1;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 2: {
					D(playerid,D_DUEL_MONEY,DSI, ""P"Взнос","\n\n"W"Введите сумму взноса:\n\n\
																Миниальный взнос: "ORANGE"$1000\n\
																"W"Максимальный взнос: "ORANGE"$50000","Изменить","Отмена");
				}
				case 3: {
					DI[TI[playerid][tDuel]][duel_gun] = (DI[TI[playerid][tDuel]][duel_gun] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_gun] == 1) ? 2 : (DI[TI[playerid][tDuel]][duel_gun] == 2) ? 3 : (DI[TI[playerid][tDuel]][duel_gun] == 3) ? 4 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 4: {
					DI[TI[playerid][tDuel]][duel_gun_2] = (DI[TI[playerid][tDuel]][duel_gun_2] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_gun_2] == 1) ? 2 : (DI[TI[playerid][tDuel]][duel_gun_2] == 2) ? 3 : (DI[TI[playerid][tDuel]][duel_gun_2] == 3) ? 4 : (DI[TI[playerid][tDuel]][duel_gun_2] == 4) ? 5 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 5: {
					DI[TI[playerid][tDuel]][duel_map] = 0;
					//DI[TI[playerid][tDuel]][duel_map] = (DI[TI[playerid][tDuel]][duel_map] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_map] == 1) ? 2 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 6: {
					D(playerid,D_DUEL_HEALTH,DSI, ""P"Здоровье","\n\n"W"Введите состояние здоровья на дуэли:\n\n\
																Миниальное состояние: "P"10\n\
																"W"Максимальное состояние: "P"200","Изменить","Отмена");
				}
				case 7: {
					D(playerid,D_DUEL_ARMOUR,DSI, ""P"Броня","\n\n"W"Введите состояние брони на дуэли:\n\n\
																Миниальное состояние: "P"0\n\
																"W"Максимальное состояние: "P"100","Изменить","Отмена");
				}
				case 8: {
					D(playerid,D_DUEL_PASSWORD,DSI, ""P"Пароль","\n\n"W"Введите пароль для входа в лобби:\n\n\
																Пароль должен состоять из 4х цифр:","Изменить","Отмена");
				}
				case 9: {
					if(DI[TI[playerid][tDuel]][duel_create] == false) {
						if(GetPlayerMoneyEx(playerid) < DI[TI[playerid][tDuel]][duel_money]) {
							ErrorMessage(playerid,"У Вас недостаточно средств для взноса");
							new id = TI[playerid][tDuel];
							DI[id][duel_owner_id] = DI[id][duel_id][0] = DI[id][duel_id][1] = DI[id][duel_id][2] = DI[id][duel_id][3] = DI[id][duel_id][4] = DI[id][duel_id][5] = INVALID_PLAYER_ID;
							DI[id][duel_gun] = DI[id][duel_gun_2] = 0;
							DI[id][duel_money] = 1000;
							DI[id][duel_raund] = 1;
							DI[id][duel_type] = 0;
							DI[id][duel_map] = 0;
							DI[id][duel_health] = 100;
							DI[id][duel_armour] = 0;
							DI[id][duel_start] = false;
							DI[id][duel_create] = false;
							DI[id][duel_point_1] = DI[id][duel_point_2] = 0;
							TI[playerid][tDuel] = -1;
							return 1;
						}
						GiveMoney(playerid,-DI[TI[playerid][tDuel]][duel_money],"взнос дуэль");
						DI[TI[playerid][tDuel]][duel_owner_id] = playerid;
						DI[TI[playerid][tDuel]][duel_id][0] = playerid;
						DI[TI[playerid][tDuel]][duel_create] = true;
						TI[playerid][tDuelLobby] = 0;
						if(DI[TI[playerid][tDuel]][duel_type] == 1) SendOk(playerid,"Вы заняли место "W"№1"G" в команде "W"№1");
						else if(DI[TI[playerid][tDuel]][duel_type] == 2) SendOk(playerid,"Вы заняли место "W"№1"G" в команде "W"№1");
						SendOk(playerid,"Лобби успешно создано");
					}
					else {
						DI[TI[playerid][tDuel]][duel_create] = false;
						SendOk(playerid,"Лобби успешно удалено");
						duel_delete(TI[playerid][tDuel],false);
					}
				}
			}
		}
		case D_DUEL_PASSWORD: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid,D_DUEL_PASSWORD,DSI, ""P"Пароль","\n\n"W"Введите пароль для входа в лобби:\n\n\
																Пароль должен состоять из 4х цифр:","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_password] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_DUEL_HEALTH: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 10 || strval(inputtext) > 200) return D(playerid,D_DUEL_HEALTH,DSI, ""P"Здоровье","\n\n"W"Введите состояние здоровья на дуэли:\n\n\
																Миниальное состояние: "P"10\n\
																"W"Максимальное состояние: "P"200","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_health] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_DUEL_ARMOUR: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 0 || strval(inputtext) > 100) return D(playerid,D_DUEL_ARMOUR,DSI, ""P"Броня","\n\n"W"Введите состояние брони на дуэли:\n\n\
																Миниальное состояние: "P"0\n\
																"W"Максимальное состояние: "P"100","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_armour] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_DUEL_MONEY: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 1000 || strval(inputtext) > 50000) return D(playerid,D_DUEL_MONEY,DSI, ""P"Взнос","\n\n"W"Введите сумму взноса:\n\n\
																Миниальный взнос: "ORANGE"$1000\n\
																"W"Максимальный взнос: "ORANGE"$50000","Изменить","Отмена");
			DI[TI[playerid][tDuel]][duel_money] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_REPORT_1: {
			new i = ReportID[playerid];
			if(!response) {
			    ReportSlot[i] = -1, ReportID[playerid] = -1;
			    new string[156];
				format(string, sizeof string, "Администратор %s[%d] отказался отвечать на вашу жалобу. Ожидайте ответа от другого администратора",player_name[playerid], playerid);
				ErrorMessage(PlayerReport[i], string);
				return 1;
			}
			if(!strlen(inputtext) || strlen(inputtext)>130) {
			    new string[300];
				format(string, sizeof(string), ""W"Жалоба от %s[%i]\n\n"G"%s\n\n"NO"*"G" От 1 до 130 символов", player_name[PlayerReport[i]], PlayerReport[i], TextReport[i]);
		        D(playerid,D_REPORT_1,DSI, ""P"Репорт",string,"Принять","Отмена");
			    return 1;
			}
			if(!IsPlayerConnected(PlayerReport[i])) {
				ReportDell(i);
				ReportID[playerid] = -1;
				ErrorMessage(playerid, "Игрок вышел с игры");
				return 1;
			}
            new string[400];
			if(!IsAGang(PlayerReport[i])) {
				if(GetPVarInt(PlayerReport[i],"adchecking_fix")) {
					gAdvert[GetPVarInt(PlayerReport[i],"adchecking_fix")-1][adCheking]=false;
					DeletePVar(PlayerReport[i],"adchecking_fix");
				}
				format(string, sizeof(string), ""W"Рассмотрена Ваша жалоба: "G"%s\n"W"Ответ от администратора %s: "P"%s\n\n", TextReport[i], player_name[playerid], inputtext);
				D(PlayerReport[i],D_REPORT_3,DSM, ""P"Репорт",string,"Спасибо","");
				ReportAdmin[PlayerReport[i]] = playerid;
			}
			else {
				format(string, sizeof(string), "Ответ от %s[%i]: %s",player_name[playerid],playerid,inputtext);
				SendClientMessage(PlayerReport[i], 0xffa141FF, string);
			}
			format(string,sizeof(string),"Администратор %s[%d] ответил игроку %s[%d]: %s",player_name[playerid], playerid, player_name[PlayerReport[i]], PlayerReport[i], inputtext);
			SendAdminMessage(0xFfa500AA,string);
			gAdmin[playerid][ADMIN_PM] ++;
			
			strmid(TextReportAdmin[i], (inputtext),0,strlen(inputtext),130);
			ReportDell(i);
			ReportID[playerid] = -1;
			//D(playerid,D_REPORT_4,DSL,"Быстрый ответ","Нет, это временный ответ\nДа, этот ответ может использоватся как быстрый ответ","Принять","Отмена");
			return 1;
		}
		case D_REPORT_4: {
		    new i = ReportID[playerid];
		    switch(listitem) {
		        case 0: {
			 		SendOk(playerid, "Вы выбрали временный ответ");
			 		ReportID[playerid] = -1;
					ReportDell(i);
		        }
		        case 1: {
					new query[300];
		        	format(query, sizeof(query), "INSERT INTO `reports` (`rText`, `rOtvet`, `rNick`) VALUE ('%s','%s','%s')", TextReport[i], TextReportAdmin[i], player_name[playerid]);
					mysql_tquery(connects, query);
					SendOk(playerid, "Вы выбрали как быстрый ответ");
					ReportID[playerid] = -1;
					ReportDell(i);
		        }
		    }
		}
		case D_REPORT_3: return D(playerid, D_REPORT_2, DSL, ""P"Оценка работы", "Хороший ответ\nПлохой ответ", "Выбрать", "Отмена");
		case D_REPORT_2: {
			if(!response) {
			    D(playerid, D_REPORT_2, DSL, ""P"Оценка работы", "Хороший ответ\nПлохой ответ", "Выбрать", "Отмена");
			    return 1;
			}
			SendOk(playerid, "Спасибо! Ваш отзыв учтён!");
			if(ReportAdmin[playerid] == INVALID_PLAYER_ID) return 1;
			switch(listitem) {
				case 0: gAdmin[ReportAdmin[playerid]][8] ++;
				case 1: gAdmin[ReportAdmin[playerid]][8] --;
			}
			ReportAdmin[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		case D_ASK_1: {
			new i = ReportIDAsk[playerid];
			if(!response) {
			    ReportSlot[i] = -1, ReportIDAsk[playerid] = -1;
			    new string[156];
				format(string, sizeof string, "Game Support %s[%d] отказался отвечать на ваш вопрос. Ожидайте ответа от другого Game Support'a'",player_name[playerid], playerid);
				ErrorMessage(PlayerReportAsk[i], string);
				return 1;
			}
			if(!strlen(inputtext) || strlen(inputtext)>130) {
			    new string[300];
				format(string, sizeof(string), ""W"Вопрос от %s[%i]\n\n"G"%s\n\n"NO"*"G" От 1 до 130 символов", player_name[PlayerReportAsk[i]], PlayerReportAsk[i], TextAsk[i]);
		        D(playerid,D_ASK_1,DSI, ""P"Репорт",string,"Принять","Отмена");
			    return 1;
			}
			if(!IsPlayerConnected(PlayerReportAsk[i])) {
				ReportDellAsk(i);
				ReportIDAsk[playerid] = -1;
				ErrorMessage(playerid, "Игрок вышел с игры");
				return 1;
			}
			if(!strcmp(inputtext,"adm",true)){
				new bool:report = false,reps = 0;
				for(new id;id<MAX_REPORTS;id++) {
					if(PlayerReport[id] != -1) reps++;
				}
				for(new id;id<MAX_REPORTS;id++) {
					if(PlayerReport[reps] != -1) {
						reps++;
						continue;
					} 
					PlayerReport[reps] = PlayerReportAsk[i];
					strmid(TextReport[reps], (TextAsk[i]),0,strlen(TextAsk[i]),150);
					new string[143];
					format(string, sizeof(string), "[PM] %s[%i]: %s."W" [%d] "ORANGE"(s-%d)", player_name[PlayerReportAsk[i]], PlayerReportAsk[i], TextAsk[i], reps+1,playerid);
					SendAdminMessage(0x008e8cff,string);
					format(string, sizeof(string), "Game Support %s[%d] передал ваш вопрос администрации проекта",player_name[playerid],playerid);
					SendClientMessage(PlayerReportAsk[i], 0xffa141FF, string);
					format(string, sizeof string, "Ваше обращение: "G"%s"YELLOW" — успешно отправлено.", TextAsk[i]);
					SendClientMessage(PlayerReportAsk[i], COLOR_YELLOW, string);
					format(string, sizeof(string), "В скором времени вам ответит администратор. Вы в очереди репортов: "P"%d", reps+1);
					SendOk(PlayerReportAsk[i], string);
					report = true;
					ReportDellAsk(i);
					ReportIDAsk[playerid] = -1;
					break;
				}
				if(!report) {
					ReportSlot[i] = -1, ReportIDAsk[playerid] = -1;
					return ErrorMessage(playerid,"Вы не можете перенаправить вопрос администрации проекта");
				} 
				return true;
			}
            new string[400];
			format(string, sizeof(string), "Ответ от %s[%i]: %s",player_name[playerid],playerid,inputtext);
			SendClientMessage(PlayerReportAsk[i], 0xffa141FF, string);

			format(string,sizeof(string),"Game Support %s[%d] ответил игроку %s[%d]: %s",player_name[playerid], playerid, player_name[PlayerReportAsk[i]], PlayerReportAsk[i], inputtext);
			SendGSMessage(0xFfa500AA,string);
			PI[playerid][pAsk]++;
			ReportDellAsk(i);
			ReportIDAsk[playerid] = -1;
			return 1;
		}
		case D_LEAVE: {
			if(!response) return 1;
			if(PI[playerid][pLeader]) return ErrorMessage(playerid,"Лидеру запрещено");
			if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
			if(start_work[playerid]) {
				SendOk(playerid,"Рабочий день окончен");
				start_work[playerid] = 0;
			}
			add_jobinfo(playerid,"Собственное желание");
			PI[playerid][pRank] = 0;
			PI[playerid][pMember] = 0;
			PI[playerid][pJob] = 0;
			PI[playerid][pFracSkin] = 0;
			DelGun(playerid);
			SetPlayerArmour(playerid, 0);
			SetPlayerColor(playerid,0xFFFFFF11);
			skin_player(playerid);
			SaveAccount(playerid);
			FracLog(LOGS_LEAVE,player_name[playerid],player_name[playerid],"С/Ж LEAVE");
		}
		case D_LICENSES: {
			if(!response) return 1;
			new string[144];
			if(TI[playerid][tAutoSchool])
			{
				if(TI[playerid][tAutoSchool] == 2)
				{
					format(string,sizeof(string),"%s завершите активный экзамен (воздушный транспорт)",player_name[playerid]);
				}
				else if(TI[playerid][tAutoSchool] == 3)
				{
					format(string,sizeof(string),"%s завершите активный экзамен (водный транспорт)",player_name[playerid]);
				}
				else
				{
				    format(string,sizeof(string),"%s завершите активный экзамен (наземный транспорт)",player_name[playerid]);
				}
				SendBotMessage(playerid,string);
				return 1;
			}
			switch(listitem) {
				case 0: {
					if(lic[playerid][0]) {
						format(string,sizeof(string),"%s у вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(500/100*BonusInfo[act_buylic]);
						if(PI[playerid][pCash] < (500-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(500-seller),"покупка лицензии");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(500/100*BonusInfo[act_buylic]);
						if(PI[playerid][pCash] < (500-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(500-seller),"покупка лицензии");
					}
				    else {
				    	if(PI[playerid][pCash] < 500) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-500,"покупка лицензии");
				    }

					FI[fWHITEHOUSE][fBank] += 500;

					format(string,sizeof(string),"%s пройдите в компьютерный класс для прохождения теоретической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
				case 1: {
					if(lic[playerid][1]) {
						format(string,sizeof(string),"%s у вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(15000/100*BonusInfo[act_buylic]);
						if(PI[playerid][pCash] < (15000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(15000-seller),"покупка лицензии");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(15000/100*BonusInfo[act_buylic]);
						if(PI[playerid][pCash] < (15000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(15000-seller),"покупка лицензии");
					}
				    else {
				    	if(PI[playerid][pCash] < 15000) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-15000,"покупка лицензии");
				    }

					FI[fWHITEHOUSE][fBank] += 15000;
					format(string,sizeof(string),"%s пройдите в класс для прохождения практической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
				case 2: {
					if(lic[playerid][2]) {
						format(string,sizeof(string),"%s у вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(10000/100*BonusInfo[act_buylic]);
						if(PI[playerid][pCash] < (10000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(10000-seller),"покупка лицензии");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(10000/100*BonusInfo[act_buylic]);
						if(PI[playerid][pCash] < (10000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(10000-seller),"покупка лицензии");
					}
				    else {
				    	if(PI[playerid][pCash] < 10000) {
							format(string,sizeof(string),"%s у вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-10000,"покупка лицензии");
				    }
				    FI[fWHITEHOUSE][fBank] += 10000;
				    if(PI[playerid][pVips] != VIP_NONE && PI[playerid][pVips] != VIP_KING) {
					    SendClientMessage(playerid,CGOLD,"Поздравляем с получением лицензии на полёты");
						lic[playerid][1] = 1;
						UpdateLicenses(playerid);
						
						DeletePVar(playerid,"error_test");
						DeletePVar(playerid,"use_test");
						DeletePVar(playerid,"pTestQNumber");

						A_DestroyVehicle(car_autoschool[playerid]);
						car_autoschool[playerid] = INVALID_VEHICLE_ID;
						DisablePlayerRaceCheckpoint(playerid);

						DeletePVar(playerid,"LessonSlot");
						DeletePVar(playerid,"WaitExam");
						DeletePVar(playerid,"pWaitingExam");

						TI[playerid][tAutoSchool] = 0;
						return 1;
					}
					else {
						format(string,sizeof(string),"%s пройдите в класс для прохождения практической части",player_name[playerid]);
						SendBotMessage(playerid,string);
					}
				}
				case 3:
				{
					if(lic[playerid][3])
					{
						format(string,sizeof(string),"%s у Вас уже имеется данная лицензия",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PI[playerid][pVips] != VIP_PLATINA && PI[playerid][pVips] != VIP_ECSCLUSIVE && PI[playerid][pVips] != VIP_FOREVER)
					{
						if(!PI[playerid][pGunLic])
						{
							format(string,sizeof(string),"%s чтобы получить лицензию на оружие требуется печать одного из врачей в любой больнице",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
					}
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1)
					{
						new seller = floatround(20000/100*BonusInfo[act_buylic]);
						
						if(PI[playerid][pCash] < (20000-seller))
						{
							format(string,sizeof(string),"%s у Вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(20000-seller),"покупка лицензии");
					}
					else if(BonusInfo[act_select] == 2)
					{
						new seller = floatround(20000/100*BonusInfo[act_buylic]);
						
						if(PI[playerid][pCash] < (20000-seller))
						{
							format(string,sizeof(string),"%s у Вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(20000-seller),"покупка лицензии");
					}
				    else
					{
				    	if(PI[playerid][pCash] < 20000)
						{
							format(string,sizeof(string),"%s у Вас недостаточно средств на покупку данной лицензии",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-20000,"покупка лицензии");
				    }
					FI[fWHITEHOUSE][fBank] += 20000;
					
					format(string,sizeof(string),"%s Ваша лицензия готова",player_name[playerid]);
					SendBotMessage(playerid,string);
					
					lic[playerid][3] = 1;
					UpdateLicenses(playerid);
				}
			}
			if(listitem != 3) TI[playerid][tAutoSchool] = listitem + 1;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
		}
		case D_BILL_ADMIN: {
			if(!response) return pc_cmd_apanel(playerid,"");
			SetPVarInt(playerid,"SelectBildID",listitem);
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "bild_x", pos[0]);
			SetPVarFloat(playerid, "bild_y", pos[1]);
			SetPVarFloat(playerid, "bild_z", pos[2]);
			BildIntro(playerid, listitem, -30);
			D(playerid,D_BILL_AUNRENT,DSM,""P"Аренда билборда","\n\n"W"Вы уверены, что хотите разорвать аренду у данного билборда?\n\n","Да","Нет");
		}
		case D_BILL_MAIN: {
	   		if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = 1000*gBusiness[id][bizzPrice];
		   	SetPVarInt(playerid,"SelectBildID",listitem);

			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "bild_x", pos[0]);
			SetPVarFloat(playerid, "bild_y", pos[1]);
			SetPVarFloat(playerid, "bild_z", pos[2]);   
			
		   	if(!BildInfo[listitem][bOwned]) {
		       	new z, string[256];
		       	for(new x; x<MAX_BILLBORDS; x++) if(strfind(player_name[playerid],BildInfo[x][bOwner],false) == 0) z++;
		    	BildIntro(playerid, listitem, -30);
		    	format(string, sizeof(string),"\n\n"W"Цена аренды рекламного щита: "ORANGE"$%d\n"W"Вы уверены, что хотите арендовать данный рекламный щит на "P"7"W" дней?\n",price);
		       	D(playerid,D_BILL_RENT,DSM,""P"Аренда билборда",string,"Да","Нет");
		   	}
		   	else if(GetString(BildInfo[listitem][bOwner],player_name[playerid])) ShowPlayerEditMenu(playerid);
  		}
		case D_BILL_RENT: {
		    if(!response) return BildExit(playerid);
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = 1000*gBusiness[id][bizzPrice];
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    if(PI[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно средств"), BildExit(playerid);
			GiveMoney(playerid,-price,"аренда билборда");
			bizz_pay(id,price);
			format(BildInfo[p_var][bOwner],MAX_PLAYER_NAME,player_name[playerid]);
			SendOk(playerid, "Вы успешно арендовали билборд на 7 дней");
			BildInfo[p_var][bOwned] = 1;
			BildInfo[p_var][bDay] = (unix + 86400 * 7);
			ShowPlayerEditMenu(playerid);
			format(query,sizeof(query),"UPDATE `billboards` SET `bDay` = '%d',`bOwned` = 1, `bOwner` = '%s' WHERE `id` = '%i'",BildInfo[p_var][bDay],player_name[playerid],p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_SETTING: {
		    if(!response) return BildExit(playerid);
		    switch(listitem) {
		        case 0: D(playerid,D_BILL_TEXT,DSI,""P"Изменение текста","\n\n"W"Введите текст объявления в поле ниже:\n\n","Изменить","Назад");
		        case 1: {
					new str[24],string[1524];
				    for(new i, z = sizeof(Colors_LOW); i<z; i++) format(str,24,"{%s}Фон\n",Colors_LOW[i]), strcat(string, str);
					D(playerid,D_BILL_FON,DSL,""P"Цвет фона",string,"Изменить","Назад");
				}
				case 2: D(playerid,D_BILL_FONT,DSL,""P"Шрифт",""P"1."W" Arial\n"P"2."W" Calibri\n"P"3."W" Tahoma\n"P"4."W" Verdana","Выбрать","Назад");
				case 3: D(playerid,D_BILL_SIZE,DSI,""P"Размер текста","\n\n"W"Укажите размер текста (от 1 до 255):\n\n","Изменить","Назад");
				case 4: D(playerid,D_BILL_TEXT_2,DSL,""P"Выравнивания текста",""P"1."W" По левому краю\n"P"2."W" По центру\n"P"3."W" По правому краю","Выбрать","Назад");
				case 5: D(playerid,D_BILL_UNRENT,DSM,""P"Расторжение договора","\n\n"W"Вы действительно хотите разорвать договор аренды с этим билбордом?\n\n","Да","Нет");
		    }
		}
		case D_BILL_TEXT: {
            if(!response) return ShowPlayerEditMenu(playerid);
            new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			for(new i; i<5; i++) {
				new pos = strfind(inputtext,"/",false);
				if(pos != -1) strdel(inputtext, pos, pos+1), strins(inputtext, "\n", pos, 2);
			}
			format(BildInfo[p_var][bText],144,inputtext);
			SendOk(playerid,"Вы успешно изменили текст билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,144+64,"UPDATE `billboards` SET `bText` = '%s' WHERE `id` = %i",inputtext,p_var);
			mysql_tquery(connects,query,"","");
  		}
		case D_BILL_FON: {
  		    if(!response) return ShowPlayerEditMenu(playerid);
  		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bBackColor] = listitem;
			SendOk(playerid,"Вы успешно изменили фон билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,96,"UPDATE `billboards` SET `bBackColor` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_FONT: {
            if(!response) return ShowPlayerEditMenu(playerid);
            new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
            BildInfo[p_var][bFontFace] = listitem;
            SendOk(playerid,"Вы успешно изменили шрифт билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,96,"UPDATE `billboards` SET `bFontFace` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_SIZE: {
		    if(!response) return ShowPlayerEditMenu(playerid);
			new size = strval(inputtext), query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    if(size < 0 || size > 255) return D(playerid,D_BILL_SIZE,DSI,""P"Размер текста","\n\n"W"Укажите размер текста (от 1 до 255):\n\n","Изменить","Назад");
		    BildInfo[p_var][bFontSize] = size;
		    SendOk(playerid,"Вы успешно изменили размер текста билборда");
		    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

		    format(query,96,"UPDATE `billboards` SET `bFontSize` = %i WHERE `id` = %i",size,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_TEXT_2: {
		    if(!response) return ShowPlayerEditMenu(playerid);
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[p_var][bAligment] = listitem;
		   	SendOk(playerid,"Вы успешно изменили выравнивание текста билборда");
		    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,96,"UPDATE `billboards` SET `bAligment` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_UNRENT: {
		    if(!response) return ShowPlayerEditMenu(playerid);
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[p_var][bFontSize] = 0;
		    BildInfo[p_var][bBackColor] = 0;
			BildInfo[p_var][bFontFace] = 0;
			BildInfo[p_var][bOwned] = 0;
			BildInfo[p_var][bDay] = 0;
			format(BildInfo[p_var][bOwner],1,"-");
		    SendOk(playerid,"Договор с одним из рекламных билбордов успешно расторгнут");
		    UpdateBuildText(p_var);
            BildExit(playerid);

		    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_AUNRENT: {
			if(!response) return SetCameraBehindPlayer(playerid),TogglePlayerControllable(playerid, 1),pc_cmd_apanel(playerid,"");
		    new query[256], ID = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[ID][bFontSize] = 0;
		    BildInfo[ID][bBackColor] = 0;
			BildInfo[ID][bFontFace] = 0;
			BildInfo[ID][bOwned] = 0;
			BildInfo[ID][bDay] = 0;
			format(BildInfo[ID][bOwner],1,"-");
		    SendOk(playerid,"Договор с одним из рекламных билбордов успешно расторгнут");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		    UpdateBuildText(ID);

		    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",ID);
			mysql_tquery(connects,query,"","");
		}
		case D_ADMIN_TIME: {
			if(!response) return 1;
	        if(!strlen(inputtext)) return D(playerid, D_ADMIN_TIME, DSI, ""P"Статистика администратора", "\n\n"W"Для просмотра статистики администратора\nукажите его ник:\n\n", "Ввод", "Отмена");
			new query[200];
			format(query, sizeof(query), "SELECT * FROM admin WHERE Name = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "OnCheckStatsAdmin", "is", playerid, inputtext);
		}
		case D_TUNE_UPDATE: {
			if(!response) return 1;
			new str[64],value,model,vehicleid = GetPlayerVehicleID(playerid);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			format(str,64,"TUN[%d][Value]",CustomListNum[playerid]);
			value = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) return ErrorMessage(playerid, "Невозможно установить данную деталь");
			if(CheckTuning(playerid,GetNearestCar(playerid),model)) return ErrorMessage(playerid, "Данная деталь уже установлена");

			new price;

			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}
		    if(PI[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно средств");

			new string[128];
			format(string,sizeof(string),"Вы установили деталь за "ORANGE"$%d",price);
			SendOk(playerid,string);
			ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
			SaveTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
			GiveMoney(playerid,-price,"Тюннинг");
			PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		}
		case D_AMEMBERS: {
			if(!response) return 1;
			new ids = 0;
			new string[3000],str[128];
			strcat(str,"ID\tРанг\tТелефон\tВыговоры\tИмя"W"\n\n");
			strcat(string,str);
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != listitem+1) continue;
				if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
				format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PI[i][pRank],PI[i][pPhone],PI[i][pfWarn],player_name[i],(start_work[i]) ? ("[На работе]") : ("[Не на работе]"),(TI[i][tAFK] > 3) ? (""P"[AFK]"W""):(""));
				strcat(string,str);
				ids++;
			}
			D(playerid, DIALOG_NONE, DSM, ""P"Члены организации онлайн", string, "Закрыть", "");
			string = "";
			format(string,128,"Всего игроков в организации: "ORANGE"%d",ids);
			SendOk(playerid,string);
		}
		case D_LAB: {
			if(!response) return 1;
			if(!PI[playerid][pLeader]) return 1;
			new string[512],member = -1;
			if(PI[playerid][pMember] == fLCN) member = 0;
			else if(PI[playerid][pMember] == fYAKUZA) member = 1;
			else if(PI[playerid][pMember] == fRM) member = 2;
			if(member == -1) return 1;
			if(l_actor[member][listitem]) return ErrorMessage(playerid,"Рабочий уже нанят");
			format(string,sizeof(string),"\n\n"W"Вы действительно хотите нанять рабочего "P"№%d"W" за "ORANGE"$25000"W" на "P"7"W" дней?",listitem+1);
			D(playerid, D_LAB_2, DSM, ""P"Найм работника", string, "Нанять", "Закрыть");
			SetPVarInt(playerid,"lactor",listitem);
		}
		case D_LAB_2: {
			if(!response) return 1;
			new member = -1,list = GetPVarInt(playerid,"lactor");
			DeletePVar(playerid,"lactor");
			if(PI[playerid][pMember] == fLCN) member = 0;
			else if(PI[playerid][pMember] == fYAKUZA) member = 1;
			else if(PI[playerid][pMember] == fRM) member = 2;
			if(member == -1) return 1;
			if(l_actor[member][list]) return ErrorMessage(playerid,"Рабочий уже нанят");
			if(FI[PI[playerid][pMember]][fBank] < 25000) return ErrorMessage(playerid,"В общаге мафии недостаточно средств");
			FI[GetTeamID(playerid)][fBank]-= 25000;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			SendOk(playerid,"Рабочий нанят");
			l_actort[member][list] = unix + 7*86400;
			l_actor[member][list] = 1;
			SaveLabrary(member);
			UseLabrary(member,list,1);
		}
		case D_FAKEPASS: {
			if(!response) return 1;
			if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Вы не агент FBI");
			if(!TI[playerid][tMasked]) return ErrorMessage(playerid,"На Вас нет маскировочной формы");
			new id = GetPVarInt(playerid,"fpass2");
			DeletePVar(playerid,"fpass2");
			if(!IsPlayerConnected(id)) return ErrorMessage(playerid,not_id);
			if(GetPlayerDistanceToPlayer(playerid, id) > 5.0  || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return ErrorMessage(playerid, "Игрок слишком далеко");
			if(active_accept(id)) return ErrorMessage(playerid,"У игрока есть активное предложение");
			TI[playerid][tFakePass] = listitem;
			new string[144];
				
			format(string, sizeof(string), ""P"%s "G"хочет показать Вам паспорт", player_name[playerid]);
			SendUse(id, string);
			SendClientMessage(id,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string), "Вы предложили "P"%s "G"показать Ваш паспорт", player_name[id]);
			SendUse(playerid, string);
			SetPVarInt(id,"fpass", playerid + 1);
		}
		case D_BUYACS: {
	        if(!response) {
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				DeletePVar(playerid,"buy_accses");
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"),80,1);
				SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "posx");
				DeletePVar(playerid, "posy");
				DeletePVar(playerid, "posz");
				DeletePVar(playerid, "posa");
	        	return true;
			}
			new price;
	        switch(listitem) {
	        	case 0: {
	        		type_acces[playerid] = 1;
	        		SetPVarInt(playerid, "slot_acs", 1);
	        		PI[playerid][pSlotItem_Use][1] = 1;
	        		AtachPlayerAcces(playerid, acces_id_glass[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_glass[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_glass[0][0]);
	        	}
		    	case 1: {
		    	    type_acces[playerid] = 2;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_hat[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_hat[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_hat[0][0]);
		    	}
		    	case 2: {
		    	    type_acces[playerid] = 3;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_bonnet[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_bonnet[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_bonnet[0][0]);
		    	}
		    	case 3: {
		    	    type_acces[playerid] = 4;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_cap[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_cap[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_cap[0][0]);
		    	}
		    	case 4: {
		    	    type_acces[playerid] = 5;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_beret[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_beret[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_beret[0][0]);
		    	}
		    	case 5: {
		    	    type_acces[playerid] = 6;
			    	SetPVarInt(playerid, "slot_acs", 3);
	        		PI[playerid][pSlotItem_Use][3] = 1;
	        		AtachPlayerAcces(playerid, acces_id_bandanas[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_bandanas[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_bandanas[0][0]);
		    	}
		    	case 6: {
		    	    type_acces[playerid] = 7;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_panam[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_panam[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_panam[0][0]);
		    	}
		    	case 7: {
		    	    type_acces[playerid] = 8;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_sporthat[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_sporthat[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_sporthat[0][0]);
		    	}
		    	case 8: {
		    	    type_acces[playerid] = 9;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PI[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_kask[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_kask[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_kask[0][0]);
		    	}
		    	case 9: {
		    	    type_acces[playerid] = 10;
			    	SetPVarInt(playerid, "slot_acs", 3);
	        		PI[playerid][pSlotItem_Use][3] = 1;
	        		AtachPlayerAcces(playerid, acces_id_mask[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_mask[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_mask[0][0]);
		    	}
		    	case 10: {
		    	    type_acces[playerid] = 11;
			    	SetPVarInt(playerid, "slot_acs", 6);
	        		PI[playerid][pSlotItem_Use][6] = 1;
	        		AtachPlayerAcces(playerid, acces_id_headphones[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_headphones[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_headphones[0][0]);
		    	}
		    	case 11: {
		    	    type_acces[playerid] = 12;
			    	SetPVarInt(playerid, "slot_acs", 7);
	        		PI[playerid][pSlotItem_Use][7] = 1;
	        		AtachPlayerAcces(playerid, acces_id_watch[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 211.655944, -41.365447, 1002.099304, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 216.590118, -41.735664, 1001.380371, 1300);
					price = acces_id_watch[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_watch[0][0]);
		    	}
		    	case 12: {
		    	    type_acces[playerid] = 13;
			    	SetPVarInt(playerid, "slot_acs", 5);
	        		PI[playerid][pSlotItem_Use][5] = 1;
	        		AtachPlayerAcces(playerid, acces_id_backpack[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 214.039825, -41.529178, 1002.489135, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 209.092712, -41.541694, 1001.763916, 1300);
					price = acces_id_backpack[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_backpack[0][0]);
		    	}
			}
			SetPVarInt(playerid, "price_acs", price);
			for(new i=0; i<9; i++) {
				TextDrawShowForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawShow(playerid,buy_player_skins[playerid]);
			new string[12];
			format(string,sizeof(string),"$%d",price);
			PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
			SelectTextDraw(playerid, 0x0080FFFF);
	    }
	    case D_BUYACS_3: {
	        if(!response) {
	            AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
	        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
	        	buyacces(playerid);
	        	return true;
			}
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
	            AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
	        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
	        	buyacces(playerid);
	        	return true;
			}
			if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
				gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
				bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
			}
			SendOk(playerid, "Поздравляем с покупкой Аксесуара");
			SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > Личные настройки > Аксессуары)");
			GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксессуара");
			PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записываем ид обьекта в слот
			PI[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
			save_slotitem(playerid);
			save_slotitem_use(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
			buyacces(playerid);
			accs_close(playerid);
	    }
		case D_BUYACS_4: {
	        if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
			    case 0:  {
			        SetPVarInt(playerid, "slot_acs_",0);
			        D(playerid, D_BUYACS_5, DSL,""P"Управление аксесурами: Головные уборы",""P"1."W" Надеть\n"P"2."W" Снять\n"P"3."W" Удалить" , "Выбрать", "Отмена");
				}
				case 1: {
			        SetPVarInt(playerid, "slot_acs_",1);
			        D(playerid, D_BUYACS_5, DSL,""P"Управление аксесурами: Очки",""P"1."W" Надеть\n"P"2."W" Снять\n"P"3."W" Удалить" , "Выбрать", "Отмена");
				}
				case 2: {
			        SetPVarInt(playerid, "slot_acs_",3);
			        D(playerid, D_BUYACS_5, DSL,""P"Управление аксесурами: Банданы",""P"1."W" Надеть\n"P"2."W" Снять\n"P"3."W" Удалить" , "Выбрать", "Отмена");
				}
				case 3:  {
			        SetPVarInt(playerid, "slot_acs_",6);
			        D(playerid, D_BUYACS_5, DSL,""P"Управление аксесурами: Наушники",""P"1."W" Надеть\n"P"2."W" Снять\n"P"3."W" Удалить" , "Выбрать", "Отмена");
				}
				case 4:  {
			        SetPVarInt(playerid, "slot_acs_",7);
			        D(playerid, D_BUYACS_5, DSL,""P"Управление аксесурами: Часы",""P"1."W" Надеть\n"P"2."W" Снять\n"P"3."W" Удалить" , "Выбрать", "Отмена");
				}
				case 5:  {
			        SetPVarInt(playerid, "slot_acs_",5);
			        D(playerid, D_BUYACS_5, DSL,""P"Управление аксесурами: Рюкзаки",""P"1."W" Надеть\n"P"2."W" Снять\n"P"3."W" Удалить" , "Выбрать", "Отмена");
				}
			}
	    }
	    case D_BUYACS_5: {
	        if(!response) return true;
			switch(listitem) {
			    case 0: {
					if(PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "У Вас нет этого аксессура");
					if(PI[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] == 1) return ErrorMessage(playerid, "Этот аксессуар уже находится на Вашем персонаже");
					PI[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] = 1;
					save_slotitem_use(playerid);
					AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")],GetPlayerSkin(playerid));
					SendOk(playerid,"Аксессуар успешно надет");
				}
				case 1: {
			        if(PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "У Вас нет этого аксессура");
					if(PI[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "Этот аксессуар уже снят");
					PI[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] = 0;
					save_slotitem_use(playerid);
					RemovePlayerAttachedObject(playerid, GetPVarInt(playerid, "slot_acs_"));
					SendOk(playerid,"Аксессуар успешно снят");
				}
				case 2: {
					if(PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "У Вас нет этого аксессура");
					PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] = 0;
					save_slotitem(playerid);
					RemovePlayerAttachedObject(playerid, GetPVarInt(playerid, "slot_acs_"));
					SendOk(playerid,"Аксессуар успешно удалён");
				}
			}
			D(playerid, D_BUYACS_4, DSL,""P"Управление аксесурами",""P"1."W" Головные уборы\n"P"2."W" Очки\n"P"3."W" Банданы\n"P"4."W" Наушники\n"P"5."W" Часы\n"P"6."W" Рюкзаки" , "Выбрать", "Отмена");
	    }
		case D_GAME_DM: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: {
					if(!lic[playerid][3]) return ErrorMessage(playerid,"У Вас нет лицензии на оружие");
					if(open_game != 1) return  ErrorMessage(playerid, "В данный момент регистрация закрыта");
					new string[256];
					format(string, sizeof(string), "\n\n"W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\nОбщий взнос составляет "ORANGE"$%d\n\n", players_in_game,money_in_game);
				    D(playerid,D_GAME_DM_2,DSI,""P"Регистрация",string,"Внести","Назад");
				    return 1;
				}
				case 1: {
    		        new game_info1[650];
    		        for(new i; i < sizeof(game_info); i++) {
						strcat(game_info1,game_info[i]);
			  			D(playerid,DIALOG_NONE,DSM,""P"Информация", game_info1, "Закрыть", "");
					}
				}
			}
		}
		case D_GAME_DM_2: {
			if(!response) return 1;
			if(open_game != 1) return ErrorMessage(playerid, "В данный момент регистрация закрыта");
			if(player_to_game[playerid] == 1) return ErrorMessage(playerid, "Вы уже зарегистрировались");
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\nОбщий взнос составляет "ORANGE"$%d\n\n"NO"*"G" Размер взноса от $1000 до $10000", players_in_game,money_in_game);
				D(playerid,D_GAME_DM_2,DSI,""P"Регистрация",string,"Внести","Назад");
				return 1;
			}
			if(strval(inputtext) > PI[playerid][pCash]) return ErrorMessage(playerid, "У Вас недостаточно средств");
			GiveMoney(playerid,-strval(inputtext),"взнос на сумасшедшие войны");
			TI[playerid][tCashDM] = strval(inputtext);
            SendOk(playerid, "Вы успешно зарегистрировались");
			players_in_game++;

            money_in_game += strval(inputtext);

			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_game);
			UpdateDynamic3DTextLabelText(gamedm_text,-1,string);

            player_to_game[playerid] = 1;
			new query[148];
			format(query, sizeof(query), "INSERT INTO `dm_arena` (Name, kills_dm) VALUES ('%s', '0')", player_name[playerid]);
			mysql_tquery(connects, query);
		}
		case D_GAME_RACE: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: {
					if(!lic[playerid][0]) return ErrorMessage(playerid,"У Вас нет водительских прав");
    		        if(open_race_lv != 1) return ErrorMessage(playerid,"В данный момент регистрация закрыта");
					if(players_in_race_lv >= 25) return ErrorMessage(playerid,"Нет места для регистрации! Всего 25 участников");
					new string[256];
					format(string, sizeof(string), "\n\n"W""W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n", players_in_race_lv,money_in_race_lv);
				    D(playerid,D_GAME_RACE_2,DSI,""P"Регистрация",string,"Внести","Назад");
				    return 1;
				}
				case 1: {
    		        new game_info2[650];
    		        for(new i; i < sizeof(game_info_race_lv); i++) {
						strcat(game_info2,game_info_race_lv[i]);
			  			D(playerid,DIALOG_NONE,DSM,""P"Информация", game_info2, "Закрыть", "");
					}
				}
			}
		}
		case D_GAME_RACE_2: {
			if(!response) return 1;
			if(player_to_race_lv[playerid] == 1) return ErrorMessage(playerid, "Вы уже зарегистрировались");
			if(players_in_race_lv >= 25) return ErrorMessage(playerid, "Нет места для регистрации! Всего 25 участников");
			if(open_race_lv != 1) return ErrorMessage(playerid, "В данный момент регистрация закрыт!");
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W""W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n"NO"*"G" Размер взноса от $1000 до $10000", players_in_race_lv,money_in_race_lv);
				D(playerid,D_GAME_RACE_2,DSI,""P"Регистрация",string,"Внести","Назад");
				return 1;
			}
			if(strval(inputtext) > PI[playerid][pCash]) return ErrorMessage(playerid, "У Вас недостаточно средств");
			GiveMoney(playerid,-strval(inputtext),"взнос на безумные гонки");
			TI[playerid][tCashRace] = strval(inputtext);
            SendOk(playerid, "Вы успешно зарегистрировались");
			players_in_race_lv ++;
            money_in_race_lv += strval(inputtext);
            player_to_race_lv[playerid] = 1;
            player_to_race_lv_id[playerid] = players_in_race_lv;

			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_race_lv);
			UpdateDynamic3DTextLabelText(gamerace_text,-1,string);
		}
		case D_GAME_GOLOD: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: {
    		        if(!open_gamegolod) return ErrorMessage(playerid,"В данный момент регистрация закрыта");
					if(players_in_golod >= 21) return ErrorMessage(playerid,"Нет места для регистрации! Всего 21 участников");
					new string[256];
					format(string, sizeof(string), "\n\n"W""W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n", players_in_golod,money_in_golod);
				    D(playerid,D_GAME_GOLOD_2,DSI,""P"Регистрация",string,"Внести","Назад");
				    return 1;
				}
				case 1: {
    		        new game_info2[650];
    		        for(new i; i < sizeof(golod_info); i++) {
						strcat(game_info2,golod_info[i]);
			  			D(playerid,DIALOG_NONE,DSM,""P"Информация", game_info2, "Закрыть", "");
					}
				}
			}
		}
		case D_GAME_GOLOD_2: {
			if(!response) return 1;
			if(player_to_golod[playerid]) return ErrorMessage(playerid, "Вы уже зарегистрировались");
			if(players_in_golod >= 21) return ErrorMessage(playerid, "Нет места для регистрации! Всего 21 участников");
			if(!open_gamegolod) return ErrorMessage(playerid, "В данный момент регистрация закрыта");
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W""W"Для регистрации, необходимо сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "P"%d "W"игроков\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n"NO"*"G" Размер взноса от $1000 до $10000", players_in_golod,money_in_golod);
				D(playerid,D_GAME_GOLOD_2,DSI,""P"Регистрация",string,"Внести","Назад");
				return 1;
			}
			if(strval(inputtext) > PI[playerid][pCash]) return ErrorMessage(playerid, "У Вас недостаточно средств");
			GiveMoney(playerid,-strval(inputtext),"взнос на голодные игры");
			TI[playerid][tCashRace] = strval(inputtext);
            SendOk(playerid, "Вы успешно зарегистрировались");
			players_in_golod ++;
            money_in_golod += strval(inputtext);
            player_to_golod[playerid] = 1;
            player_to_golod_id[playerid] = players_in_golod;
            golod_use_pickup[playerid] = 0;

			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_golod);
			UpdateDynamic3DTextLabelText(golod_text,-1,string);
		}
		case D_GIVE: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: D(playerid,D_GIVE_2,DSI,""P"Передача аптечки","\n\n"W"Укажите количество аптечек, которое хотите передать:\n\n","Передать","Отмена");
				case 1: D(playerid,D_GIVE_2,DSI,""P"Передача маски","\n\n"W"Укажите количество масок, которое хотите передать:\n\n","Передать","Отмена");
				case 2: D(playerid,D_GIVE_2,DSI,""P"Передача материалов","\n\n"W"Укажите количество материалов, которое хотите передать:\n\n","Передать","Отмена");
				case 3: D(playerid,D_GIVE_2,DSI,""P"Передача наркотиков","\n\n"W"Укажите количество наркотиков, которое хотите передать:\n\n","Передать","Отмена");
				case 4: D(playerid,D_GIVE_2,DSI,""P"Передача ремкомплекта","\n\n"W"Укажите количество ремкомплектов, которое хотите передать:\n\n","Передать","Отмена");
			}
			SetPVarInt(playerid, "Give_Tupe",listitem+1);
		}
		case D_GIVE_2: {
		    if(!response) return DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		    switch(GetPVarInt(playerid, "Give_Tupe")) {
		        case 1: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 5) {
						D(playerid,D_GIVE_2,DSI,""P"Передача аптечки","\n\n"W"Укажите количество аптечек, которое хотите передать:\n\n"NO"*"G"От 1 до 5 аптечек","Передать","Отмена");
						return 1;
					}
					if(strval(inputtext) > PI[playerid][pMedKit]) return ErrorMessage(playerid, "У Вас нет столько аптечек"), DeletePVar(playerid, "Give_ID");
					if((strval(inputtext)+PI[GetPVarInt(playerid, "Give_ID")][pMedKit]) > vip_status[PI[GetPVarInt(playerid, "Give_ID")][pVips]][vip_heal]) return ErrorMessage(playerid, "Игрок не унесет столько аптечек"),DeletePVar(playerid, "Give_ID");
		            PI[playerid][pMedKit] -=strval(inputtext);
					UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
					PI[GetPVarInt(playerid, "Give_ID")][pMedKit] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pMedKit",PI[GetPVarInt(playerid, "Give_ID")][pMedKit]);
		            new string[128];
		            format(string,sizeof(string),"Вы передали "W"%s "ORANGE"%d"G" аптечку(и)",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d"G" аптчечку(и)",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 2: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 3) {
						D(playerid,D_GIVE_2,DSI,""P"Передача маски","\n\n"W"Укажите количество масок, которое хотите передать:\n\n"NO"*"G"От 1 до 3 масок","Передать","Отмена");
						return 1;
					}
					if(strval(inputtext) > PI[playerid][pMask]) return ErrorMessage(playerid, "У Вас нет столько масок"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PI[GetPVarInt(playerid, "Give_ID")][pMask]) > vip_status[PI[GetPVarInt(playerid, "Give_ID")][pVips]][vip_mask]) return ErrorMessage(playerid, "Игрок не унесет столько масок"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PI[playerid][pMask] -=strval(inputtext);
					UpdatePlayerData(playerid,"pMask",PI[playerid][pMask]);
					PI[GetPVarInt(playerid, "Give_ID")][pMask] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pMask",PI[GetPVarInt(playerid, "Give_ID")][pMask]);
		            new string[128];
		            format(string,sizeof(string),"Вы передали "W"%s "ORANGE"%d"G" маску(и)",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d"G" маску(и)",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 3: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 500) {
						D(playerid,D_GIVE_2,DSI,""P"Передача материалов","\n\n"W"Укажите количество материалов, которое хотите передать:\n\n"NO"*"G"От 1 до 500 боеприпасов","Передать","Отмена");
						return 1;
					}
					if(strval(inputtext) > PI[playerid][pMats]) return ErrorMessage(playerid, "У Вас нет столько боеприпасов"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PI[GetPVarInt(playerid, "Give_ID")][pMats]) > vip_status[PI[GetPVarInt(playerid, "Give_ID")][pVips]][vip_mats]) return ErrorMessage(playerid, "Игрок не унесет столько боеприпасов"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PI[playerid][pMats] -=strval(inputtext);
					UpdatePlayerData(playerid,"pMats",PI[playerid][pMats]);
				    PI[GetPVarInt(playerid, "Give_ID")][pMats] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pMats",PI[GetPVarInt(playerid, "Give_ID")][pMats]);
		            new string[128];
		            format(string,sizeof(string),"Вы передали "W"%s "ORANGE"%d"G" боеприпасов",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d"G" боеприпасов",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 4: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 50) {
						D(playerid,D_GIVE_2,DSI,""P"Передача наркотиков","\n\n"W"Укажите количество наркотиков, которое хотите передать:\n\n"NO"*"G"От 1 до 50 наркотиков","Передать","Отмена");
						return 1;
					}
					if(strval(inputtext) > PI[playerid][pDrugs]) return  ErrorMessage(playerid, "У Вас нет столько наркотиков"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PI[GetPVarInt(playerid, "Give_ID")][pDrugs]) > vip_status[PI[GetPVarInt(playerid, "Give_ID")][pVips]][vip_drugs]) return ErrorMessage(playerid, "Игрок не унесет столько наркотиков"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PI[playerid][pDrugs] -=strval(inputtext);
					UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					PI[GetPVarInt(playerid, "Give_ID")][pDrugs] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pDrugs",PI[GetPVarInt(playerid, "Give_ID")][pDrugs]);
		            new string[128];
		            format(string,sizeof(string),"Вы передали "W"%s "ORANGE"%dг"G" наркотиков",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%dг"G" наркотиков",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 5: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 5) {
						D(playerid,D_GIVE_2,DSI,""P"Передача ремкомплекта","\n\n"W"Укажите количество ремкомплектов, которое хотите передать:\n\n"NO"*"G"От 1 до 5 ремкомплектов","Передать","Отмена");
						return 1;
					}
					if(strval(inputtext) > PI[playerid][pInstrument]) return  ErrorMessage(playerid, "У Вас нет столько ремкомплектов"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PI[GetPVarInt(playerid, "Give_ID")][pInstrument]) > 5) return ErrorMessage(playerid, "Игрок не унесет столько ремкомплектов"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PI[playerid][pInstrument] -=strval(inputtext);
					UpdatePlayerData(playerid,"pInstr",PI[playerid][pInstrument]);
					PI[GetPVarInt(playerid, "Give_ID")][pInstrument] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pInstr",PI[GetPVarInt(playerid, "Give_ID")][pInstrument]);
		            new string[128];
		            format(string,sizeof(string),"Вы передали "W"%s "ORANGE"%d"G" ремкомплектов",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d"G" ремкомплектов",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
			}
			SetPlayerChatBubble(playerid, "Что-то передал", COLOR_PURPLE, 30.0, 5000);
			ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
			DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		}
		case D_REPAIR_LIST: {
			if(!response) return true;
			if(PI[playerid][pInstrument] < 1) return ErrorMessage(playerid,"Недостаточно инструментов");
			new veh = GetPVarInt(playerid,"MechOsmotrVEHID");
			new Float:vhealth;
			GetVehicleHealth(veh, vhealth);
			new panels_job,doors_job,lights_job,tires_job;
			GetVehicleDamageStatus(veh,panels_job,doors_job,lights_job,tires_job);
			switch(listitem) {
				case 0: {
					if(!doors_job) return ErrorMessage(playerid,"Починка дверей не требуется");
					D(playerid,D_REPAIR,DSM,""P"Починка дверей","\n\n"W"Вы уверены, что хотите починить двери?\n\n","Да","Нет");
				}
				case 1: {
					if(!panels_job) return ErrorMessage(playerid,"Починка корпуса не требуется!");
					D(playerid,D_REPAIR,DSM,""P"Починка корпуса","\n\n"W"Вы уверены, что хотите починить корпус?\n\n","Да","Нет");
				}
				case 2: {
					if(!lights_job) return ErrorMessage(playerid,"Починка фар не требуется");
					new Float:pos[6];
					GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
					GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
					if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return ErrorMessage(playerid,"Вы далеко от фар Т/С");
					D(playerid,D_REPAIR,DSM,""P"Починка фар","\n\n"W"Вы уверены, что хотите починить фары?\n\n","Да","Нет");
				}
				case 3: {
					if(!tires_job) return ErrorMessage(playerid,"Починка колёс не требуется");
					D(playerid,D_REPAIR,DSM,""P"Починка колес","\n\n"W"Вы уверены, что хотите заменить колеса?\n\n","Да","Нет"),SetPVarInt(playerid,"JOBOSMOTR",4);
				}
	   			case 4: {
					if(vhealth >= 1000) return ErrorMessage(playerid,"Починка не требуется");
					new Float:pos[6];
					GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
					GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
					if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return ErrorMessage(playerid,"Вы далеко от двигателя Т/С");
					D(playerid,D_REPAIR,DSM,""P"Починка двигателя","\n\n"W"Вы уверены, что хотите починить двигатель?\n\n","Да","Нет"),SetPVarInt(playerid,"JOBOSMOTR",5);
				}
				case 5: pc_cmd_remp(playerid,"");
			}
			SetPVarInt(playerid,"JOBOSMOTR",listitem+1);
			return 1;
		}
		case D_REPAIR: {
			if(!response) return true;
			new vehydid = GetPVarInt(playerid,"MechOsmotrVEHID");
			switch(GetPVarInt(playerid,"JOBOSMOTR")) {
				case 1: SetPlayerChatBubble(playerid, "осматривает двери транспорта", COLOR_PURPLE, 15, 5000);
				case 2: SetPlayerChatBubble(playerid, "осматривает копус транспорта", COLOR_PURPLE, 15, 5000);
				case 3: SetPlayerChatBubble(playerid, "осматривает фары транспорта", COLOR_PURPLE, 15, 5000);
				case 4: SetPlayerChatBubble(playerid, "осматривает колёса транспорта", COLOR_PURPLE, 15, 5000);
				case 5: {
					SetPlayerChatBubble(playerid, "осматривает двигатель транспорта", COLOR_PURPLE, 15, 5000);
					GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,true,boot,objective);
				}
			}
			TogglePlayerControllable(playerid, false);
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 8;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			return true;
		}
		case D_VACANCY: {
			if(!response) return 1;
			new vacancies = 0;
			for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyStatus]) vacancies++;
			}
			if(PI[playerid][pMember] && PI[playerid][pRank] >= FI[GetTeamID(playerid)][fInviteRang] && !IsAGang(playerid) && !IsAMafia(playerid)) {
			    if(listitem == 0 && vacancies == 0) return D(playerid, D_VACANCY_2,DSI, ""P"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n", "Принять", "Отмена");
				else if(vacancies != 14 && listitem == vacancies) return D(playerid, D_VACANCY_2, DIALOG_STYLE_INPUT, ""P"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n", "Принять", "Отмена");
			}
			if(vacancies == 0) return ErrorMessage(playerid, "Сейчас нет доступных вакансий");
			if(listitem == vacancies + 1) pc_cmd_vacancy(playerid);
			new items = 0;
			for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyStatus] == true) items++;
			    if(items - 1 == listitem) {
			        new string[63+28+100];
					format(string, sizeof(string), ""W"Организация: {%s}%s\n"W"Критерии: "G"%s\n",  GetColorFrac(VacancyInfo[i][VacancyFraction]), FI[VacancyInfo[i][VacancyFraction]][fName], VacancyInfo[i][VacancyText]);
					if(VacancyInfo[i][VacancyFraction] != PI[playerid][pLeader]) return D(playerid, DIALOG_NONE, DSM, ""P"Вакансия", string, "Закрыть", "");
					return D(playerid, D_VACANCY_3, DSM, ""P"Вакансия", string, "Удалить", "Отмена");
			    }
			}
		}
		case D_VACANCY_2: {
			if(!response) return 1;
			new text[120];
			if(sscanf(inputtext, "s[120]", text) || strlen(inputtext) > 120) return D(playerid, D_VACANCY_2, DSI, ""P"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n"NO"*"G" Не более 120 символов", "Принять", "Отмена");
            for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyFraction] == PI[playerid][pMember] && VacancyInfo[i][VacancyStatus] == true)
			        return ErrorMessage(playerid, "Вакансия Вашей организации уже добавлена, удалите старую");
            }
			for(new i = 0; i < 14; i++)  {
			    if(VacancyInfo[i][VacancyStatus] == false) {
			        VacancyInfo[i][VacancyText] = text;
                    VacancyInfo[i][VacancyFraction] = PI[playerid][pMember];
                    VacancyInfo[i][VacancyStatus] = true;
					VacancyInfo[i][VacancyCreator] = playerid;
					
                    SendOk(playerid, "Вакансия успешно добавлена");
                    return pc_cmd_vacancy(playerid);
				}
			}
			return pc_cmd_vacancy(playerid);
		}
		case D_VACANCY_3: {
		    if(!response) return pc_cmd_vacancy(playerid);
			for(new i = 0; i < 14; i++)  {
			    if(VacancyInfo[i][VacancyFraction] == PI[playerid] [pLeader]) {
			        VacancyInfo[i][VacancyStatus] = false;
					VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
			        return SendOk(playerid, "Вакансия успешно удалена");
			     }
			}
		}
		case D_OBJ: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_OBJ_2,DSL,""P"Ограждения",""P"1."W" Преграда №1\n"P"2."W" Преграда №2\n"P"3."W" Отбойник\n"P"4."W" Конус\n"P"5."W" Табличка\n"P"6."W" Лежачий полицеский\n"P"7."W" Железный забор №1\n"P"8."W" Железный забор №2","Выбрать","Отмена");
				case 1: D(playerid,D_OBJ_3,DSL,""P"Ограждения",""P"1."W" Ограничение скорости\n"P"2."W" Запрет движения прямо\n"P"3."W" Закрыто\n"P"4."W" Стоп\n"P"5."W" Уступить дорогу\n"P"6."W" Ремонт дороги\n"P"7."W" Направление движения прямо\n"P"8."W" Поворот налево\n"P"9."W" Поворот направо","Выбрать","Отмена");
				case 2: D(playerid,D_OBJ_4,DSL,""P"Ограждения",""P"1."W" Радар","Выбрать","Отмена");
				case 3: {
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					for(new i;i<MAX_OGRAD;i++) {
						if(object[i]!=-1) {
							GetDynamicObjectPos(object[i],x,y,z);
							if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
								if(objectrot[i] != -1) {
									DestroyDynamicObject(objectrot[i]);
									objectrot[i]=-1;
								}
								DestroyDynamicObject(object[i]);
								object[i]=-1;
								SendOk(playerid,"Ограждение успешно убрано");
								return 1;
							}
						}
					}
				}
			}
		}
		case D_OBJ_2: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
			//	case 0: object[idobject] = CreateDynamicObject(1423, x, y, z-0.25, 0, 0, angle);
			//	case 1: object[idobject] = CreateDynamicObject(1282, x,y,z-0.3,0, 0, angle-90);
			//	case 2: object[idobject] = CreateDynamicObject(1237, x,y,z-1.0,0, 0, angle);
			//	case 3: object[idobject] = CreateDynamicObject(1238, x,y,z-0.65,0, 0, angle);
				case 4: D(playerid,D_OBJ_5,DSI,""P"Ограждения","\n\n"W"Введите текст, который будет отображаться на ограждении\n\n","Ввод","Отмена");
			//	case 5: object[idobject] = CreateDynamicObject(19425, x,y,z-0.9,0, 0, angle);
			//	case 6: object[idobject] = CreateDynamicObject(983, x,y,z-0.3,0, 0, angle-90);
			//	case 7: object[idobject] = CreateDynamicObject(970, x,y,z-0.5,0, 0, angle);
			}
			if(listitem != 4) ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0),Streamer_Update(playerid);
		}
		case D_OBJ_3: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
		//		case 0: object[idobject] = CreateDynamicObject(11699, x,y,z-1.1,0, 0, angle);
		//		case 1: object[idobject] = CreateDynamicObject(19950, x,y,z-1.1,0, 0, angle);
		//		case 2: object[idobject] = CreateDynamicObject(19967, x,y,z-1.1,0, 0, angle);
		//		case 3: object[idobject] = CreateDynamicObject(19966, x,y,z-1.1,0, 0, angle);
		//		case 4: object[idobject] = CreateDynamicObject(19976 , x,y,z-1.1,0, 0, angle);
		//		case 5: object[idobject] = CreateDynamicObject(19974, x,y,z-1.1,0, 0, angle);
		//		case 6: object[idobject] = CreateDynamicObject(19957, x,y,z-1.1,0, 0, angle);
		//		case 7: object[idobject] = CreateDynamicObject(19955, x,y,z-1.1,0, 0, angle);
		//		case 8: object[idobject] = CreateDynamicObject(19956, x,y,z-1.1,0, 0, angle);
			}
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		case D_OBJ_4: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
			//	case 0: object[idobject] = CreateDynamicObject(18880, x,y,z-1.3,0, 0, angle);
			}
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		case D_OBJ_5: {
			if(!response) return pc_cmd_fences(playerid,"");
			if(strlen(inputtext) < 5 || strlen(inputtext) > 40) {
				D(playerid,D_OBJ_5,DSI,""P"Ограждения","\n\n"W"Введите текст, который будет отображаться на ограждении\n\n"NO"*"G" От 5 до 40 символов","Ввод","Отмена");
				return 1;
			}
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle,Float:rx, Float:ry, Float:rz,Float:ox, Float:oy, Float:oz;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
		//	object[idobject] = CreateDynamicObject(19980, x,y,z-1.0,0, 0, angle);
		//	SetDynamicObjectMaterial(object[idobject], 2, 2823, "gb_kitchtake", "deep_red64", 0);
			GetDynamicObjectPos(object[idobject], ox, oy, oz);
			GetDynamicObjectRot(object[idobject], rx, ry, rz);
		//	objectrot[idobject] = CreateDynamicObject(19477,ox - 0.05 * floatsin(-rz, degrees), oy - 0.05 * floatcos(-rz, degrees), oz + 2.6, 0.000, 0.000, rz - 90.0);
		//	SetDynamicObjectMaterialText(objectrot[idobject], 0, inputtext,  120, "Ariel", 15, 1, COLOR_WHITE, 0 , 1);
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		case D_TUNE_LIST: {
			if(!response) return 1;
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			switch(listitem) {
				case 0: perfomans_engine(playerid);
				case 1: perfomans_brake(playerid);
			}
		}
		case D_PERF_ENGINE: {
			if(!response) return D(playerid, D_TUNE_LIST, DSL, ""P"Perfomance Tune", ""P"1."W" Улучшение двигателя\n"P"2."W" Улучшение тормозов", "Далее", "Закрыть");
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vPEngine][listitem]) {
				ErrorMessage(playerid, "Данная деталь уже установлена");
				perfomans_engine(playerid);
				return 1 ;
			}			
			SetPVarInt(playerid, "performance_list", listitem);

			new price[5],seller[5];

			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				seller[listitem] = floatround(engine_name_price[listitem]/100*vip_status[PI[playerid][pVips]][vip_perfonans]);
				price[listitem] = (engine_name_price[listitem]-seller[listitem]);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[listitem] = floatround(engine_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (engine_name_price[listitem]-seller[listitem]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[listitem] = floatround(engine_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (engine_name_price[listitem]-seller[listitem]);
				}
			    else price[listitem] = engine_name_price[listitem];
			}

			new string[144];
			format(string, sizeof(string), "\n\n"W"Вы действительно желаете установить "P"%s"W"?\nСтоимость "ORANGE"$%d\n\n", engine_name[listitem], price[listitem]);
			D(playerid, D_PERF_ENGINE_2, DIALOG_STYLE_MSGBOX, ""P"Установка детали",string, "Купить", "Назад");
		}
		case D_PERF_ENGINE_2: {
			if(!response) {
				DeletePVar(playerid, "performance_list");
				perfomans_engine(playerid);
				return 1 ;
			}
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			new list_item = GetPVarInt(playerid, "performance_list");
			DeletePVar(playerid, "performance_list");

			new price[5],seller[5];
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				seller[list_item] = floatround(engine_name_price[list_item]/100*vip_status[PI[playerid][pVips]][vip_perfonans]);
				price[list_item] = (engine_name_price[list_item]-seller[list_item]);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[list_item] = floatround(engine_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (engine_name_price[list_item]-seller[list_item]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[list_item] = floatround(engine_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (engine_name_price[list_item]-seller[list_item]);
				}
			    else price[list_item] = engine_name_price[list_item];
			}

			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetPlayerMoneyEx(playerid) < price[list_item]) {
				ErrorMessage(playerid, "У Вас недостаточно средств");
				perfomans_engine(playerid);
				return 1 ;
			}
			new b_price = floatround(engine_name_price[list_item]/10);
			if(gBusiness[81][bizzProduct]-70 > 0) {
				gBusiness[81][bizzProduct] -= 70;
				bizz_pay(81,b_price);
			}
			GiveMoney(playerid, -price[list_item],"Покупка тюнинга (Perfomance)");
			VehicleInfo[vehicleid][vEngineBoost] += engine_name_boost[list_item];
			SendOk(playerid, "Поздравляем с покупкой улучшения. Для переключения стиля езды в режим спорт, используйте: "W"E (/mode)");
			VehicleInfo[vehicleid][vPEngine][list_item] = 1;
			perfomans_engine(playerid);
			new car = GetNearestCar(playerid);
			save_perf(playerid,car);
			//if(VehicleInfo[vehicleid][vEngineBoost] == 4) perf_engine_object(vehicleid);
		}
		case D_PERF_BRAKE: {
			if(!response) return D(playerid, D_TUNE_LIST, DSL, ""P"Perfomance Tune", ""P"1."W" Улучшение двигателя\n"P"2."W" Улучшение тормозов", "Далее", "Закрыть");
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vPBrake][listitem]) {
				ErrorMessage(playerid, "Данная деталь уже установлена");
				perfomans_brake(playerid);
				return 1 ;
			}			
			SetPVarInt(playerid, "performance_list", listitem);

			new price[5],seller[5];

			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				seller[listitem] = floatround(brake_name_price[listitem]/100*vip_status[PI[playerid][pVips]][vip_perfonans]);
				price[listitem] = (brake_name_price[listitem]-seller[listitem]);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[listitem] = floatround(brake_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (brake_name_price[listitem]-seller[listitem]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[listitem] = floatround(brake_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (brake_name_price[listitem]-seller[listitem]);
				}
			    else price[listitem] = brake_name_price[listitem];
			}

			new string[144];
			format(string, sizeof(string), ""W"\n\nВы действительно желаете установить "P"%s"W"?\nСтоимость "ORANGE"$%d", brake_name[listitem],price[listitem]);
			D(playerid,D_PERF_BRAKE_2, DSM, ""P"Установка детали", string, "Купить", "Назад");
		}
		case D_PERF_BRAKE_2: {
			if(!response) {
				DeletePVar(playerid, "performance_list");
				perfomans_brake(playerid);
				return 1 ;
			}
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			new list_item = GetPVarInt (playerid, "performance_list");
			DeletePVar(playerid, "performance_list");
			new vehicleid = GetPlayerVehicleID(playerid);

			new price[5],seller[5];

			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				seller[list_item] = floatround(brake_name_price[list_item]/100*vip_status[PI[playerid][pVips]][vip_perfonans]);
				price[list_item] = (brake_name_price[list_item]-seller[list_item]);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[list_item] = floatround(brake_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (brake_name_price[list_item]-seller[list_item]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[list_item] = floatround(brake_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (brake_name_price[list_item]-seller[list_item]);
				}
			    else price[list_item] = brake_name_price[list_item];
			}

			if(GetPlayerMoneyEx(playerid) < price[list_item]) {
				ErrorMessage(playerid, "У Вас недостаточно средств");
				perfomans_brake(playerid);
				return 1 ;
			}
			new b_price = floatround(brake_name_price[list_item]/20);
			if(gBusiness[81][bizzProduct]-80 > 0) {
				gBusiness[81][bizzProduct] -= 80;
				bizz_pay(81,b_price);
			}
			GiveMoney(playerid, -price[list_item],"Покупка тюнинга (Perfomance)");
			VehicleInfo[vehicleid][vBrakeBoost] += brake_name_boost[list_item];
			SendOk(playerid, "Поздравляем с покупкой улучшения. Для переключения стиля езды в режим спорт, используйте: "W"E (/mode)");
			VehicleInfo[vehicleid][vPBrake][list_item] = 1;
			perfomans_brake(playerid);
			new car = GetNearestCar(playerid);
			save_perf(playerid,car);
		}
		case D_FIND: {
			if(!response) return 1;
			new frac;
			switch(PI[playerid][pRank]) {
				case MINISTRE_NEWS: {
					switch(listitem) {
						case 0: frac = fLSNEWS;
						case 1: frac = fSFNEWS;
						case 2: frac = fLVNEWS;
					}
				}
				case MINISTRE_ARMY: {
					switch(listitem) {
						case 0: frac = fARMYSF;
						case 1: frac = fARMYLV;
					}
				}
				case MINISTRE_PD: {
					switch(listitem) {
						case 0: frac = fLSPD;
						case 1: frac = fSFPD;
						case 2: frac = fLVPD;
						case 3: frac = fFBI;
					}
				}
				case MINISTRE_MEDICS: {
					switch(listitem) {
						case 0: frac = fMEDICLS;
						case 1: frac = fMEDICSF;
						case 2: frac = fMEDICLV;
					}
				}
				default: return 1;
			}
			new ids = 0;
			new string[3000],str[128];
			strcat(str,"ID\tРанг\tТелефон\tВыговоры\tИмя"W"\n\n");
			strcat(string,str);
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != frac)continue;
				if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
				if(PI[i][pAdmin]) continue;
				format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PI[i][pRank],PI[i][pPhone],PI[i][pfWarn],player_name[i],(start_work[i]) ? ("[На работе]") : ("[Не на работе]"),(TI[i][tAFK] > 3) ? (""P"[AFK]"W""):(""));
				strcat(string,str);
				ids++;
			}
			D(playerid, DIALOG_NONE, DSM, ""P"Члены организации онлайн", string, "Закрыть", "");
			new strr[128];
			format(strr,sizeof(strr),"Всего игроков в организации: "ORANGE"%d",ids);
			SendOk(playerid,strr);
		}
		case D_SHOWALL_2: {
			if(!response) return 1;
			new frac;
			switch(PI[playerid][pRank]) {
				case MINISTRE_NEWS: {
					switch(listitem) {
						case 0: frac = fLSNEWS;
						case 1: frac = fSFNEWS;
						case 2: frac = fLVNEWS;
					}
				}
				case MINISTRE_ARMY: {
					switch(listitem) {
						case 0: frac = fARMYSF;
						case 1: frac = fARMYLV;
					}
				}
				case MINISTRE_PD: {
					switch(listitem) {
						case 0: frac = fLSPD;
						case 1: frac = fSFPD;
						case 2: frac = fLVPD;
						case 3: frac = fFBI;
					}
				}
				case MINISTRE_MEDICS: {
					switch(listitem) {
						case 0: frac = fMEDICLS;
						case 1: frac = fMEDICSF;
						case 2: frac = fMEDICLV;
					}
				}
				default: return 1;
			}
			SALLROWS[playerid] = 0;
			new query[200];
			format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT 0, 20", frac);
			mysql_pquery(connects, query, "showall_callback", "i", playerid);
		}
		case D_GANG_PAY: {
			if(!response) return DeletePVar(playerid, "prem_gang_money");
			new money = GetPVarInt(playerid, "prem_gang_money");
			DeletePVar(playerid, "prem_gang_money");
			
			new count = 0 ;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != PI[playerid][pMember] || playerid == i) continue;
				count ++;
			}
			if(PI[playerid][pCash] < count*money) return ErrorMessage(playerid, "У Вас недостаточно средств");
			GiveMoney(playerid, -count*money,"выдача премии банде");
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pMember] != PI[playerid][pMember] || playerid == i) continue;
				GiveMoney(i, money,"получение премии в банде");
		
				new string[128];
				format(string, sizeof(string), ""W"%s "G"выдал Вам премию в размере "ORANGE"$%d", player_name[playerid], money);
				SendOk(i,string);
			}
			SendOk(playerid, "Премиальные успешно выданы членам Вашей банды");
		}
		case D_AUTONEWS: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_BUY, DSL, ""P"Объявление | Купить", ""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Отель\n"P"4."W" Аэропорт\n"P"5."W" Автомобиль\n"P"6."W" Мотоцикл\n"P"7."W" Сим-Карту", "Выбрать", "Отмена");
				case 1: D(playerid, D_AUTONEWS_SELL, DSL, ""P"Объявление | Продать", ""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Отель\n"P"4."W" Аэропорт\n"P"5."W" А/М\n"P"6."W" М/Ц\n"P"7."W" Сим-Карту", "Выбрать", "Отмена");
				case 2: D(playerid, D_AUTONEWS_CHANGE, DSL, ""P"Объявление | Обменять", ""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Отель\n"P"4."W" Аэропорт\n"P"5."W" А/М\n"P"6."W" М/Ц\n"P"7."W" Сим-Карту", "Выбрать", "Отмена");
				case 3: D(playerid, D_AUTONEWS_SERVICES, DSL, ""P"Объявление | Услуги", ""P"1."W" Объявить о собеседовании", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_SERVICES: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_SERVICES_2, DSL, ""P"Объявление | Услуги | Собеседования", ""P"1."W" Русская Мафия\n"P"2."W" Японская мафия\n"P"3."W" Итальянская мафия\n"P"4."W" The Ballas\n"P"5."W" The Vagos\n"P"6."W" The Grove\n"P"7."W" The Aztec\n"P"8."W" The Rifa\n"P"9."W" Таксопарк\n"P"10."W" Транспортная компания", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_SERVICES_2: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			switch(listitem) {
				case 0: format(gAdvert[slot][adText],100,"Проходит собеседование в \"Русское посольство\". Подробности по телефону");
				case 1: format(gAdvert[slot][adText],100,"Идет набор официантов в \"Японский ресторан\". Подробности по телефону");
				case 2: format(gAdvert[slot][adText],100,"Итальянская сувенирная лавка ищет сотрудников. Подробности по телефону");
				case 3: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Ballas\". Желающим прибыть на площадку");
				case 4: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Vagos\". Желающим прибыть на площадку");
				case 5: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Grove\". Желающим прибыть на площадку");
				case 6: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Aztec\". Желающим прибыть на площадку");
				case 7: format(gAdvert[slot][adText],100,"Проходит набор в баскетбольную команду \"Rifa\". Желающим прибыть на площадку");
				case 8: format(gAdvert[slot][adText],100,"Проходит собеседование в такси. Подробности по телефону");
				case 9: format(gAdvert[slot][adText],100,"Проходит собеседование в транспортную компанию. Подробности по телефону");
			}
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_BUY_HOUSE, DSL, ""P"Объявление | Купить | Дом", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Cредний\n"P"4."W" Элитный\n"P"5."W" Особняк", "Выбрать", "Отмена");
				case 1: D(playerid, D_AUTONEWS_BUY_BIZZ, DSL, ""P"Объявление | Купить | Бизнес", ""P"1."W" Пропустить\n"P"2. "W"Закусочная\n"P"3. "W"24/7\n"P"4. "W"Бар\n"P"5. "W"Клуб\n"P"6. "W"Магазин одежды\n"P"7. "W"АММО\n"P"8. "W"АЗС\n"P"9. "W"Автосалон\n"P"10. "W"Рыболовный бизнес\n"P"11. "W"Компьютерный клуб\n"P"12. "W"Таксопарк\n"P"13. "W"Риэлторское агенство\n"P"14. "W"Спорт-Зал\n"P"15. "W"Транспортная компания\n"P"16. "W"Банк\n"P"17. "W"Рекламное агенство\n"P"18. "W"Магазин Аксессуаров\n"P"19. "W"Perfomance Tune", "Выбрать", "Отмена");
				case 2: D(playerid, D_AUTONEWS_BUY_HOTEL, DSI, ""P"Объявление | Купить | Отель", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести отель:\n\n", "Ввод", "Отмена");
				case 3: D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""P"Объявление | Купить | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести аэропорт:\n\n", "Ввод", "Отмена");
				case 4: D(playerid, D_AUTONEWS_BUY_CAR, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Без тюнинга\n"P"2."W" FT\n"P"3."W" PT\n"P"4."W" FT and PT", "Выбрать", "Отмена");
				case 5: D(playerid, D_AUTONEWS_BUY_MOTO, DSL, ""P"Объявление | Купить | Мотоцикл", ""P"1."W" Пропустить\n"P"2."W" Bike\n"P"3."W" BMX\n"P"4."W" Fagio\n"P"5."W" FCR-900\n"P"6."W" Freeway\n"P"7."W" Mountain-Bike\n"P"8."W" NRG-500\n"P"9."W" PCJ-600\n"P"10."W" Quad\n"P"11."W" Sanchez\n"P"12."W" Wayfarer", "Выбрать", "Отмена");
				case 6: D(playerid, D_AUTONEWS_BUY_SIM, DSL, ""P"Объявление | Купить | Сим-Карту", ""P"1."W" Без формата\n"P"2."W" Указать формат", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_SELL: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_SELL_HOUSE, DSL, ""P"Объявление | Продать | Дом", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Cредний\n"P"4."W" Элитный\n"P"5."W" Особняк", "Выбрать", "Отмена");
				case 1: D(playerid, D_AUTONEWS_SELL_BIZZ, DSL, ""P"Объявление | Продать | Бизнес", ""P"1."W" Пропустить\n"P"2. "W"Закусочная\n"P"3. "W"24/7\n"P"4. "W"Бар\n"P"5. "W"Клуб\n"P"6. "W"Магазин одежды\n"P"7. "W"АММО\n"P"8. "W"АЗС\n"P"9. "W"Автосалон\n"P"10. "W"Рыболовный бизнес\n"P"11. "W"Компьютерный клуб\n"P"12. "W"Таксопарк\n"P"13. "W"Риэлторское агенство\n"P"14. "W"Спорт-Зал\n"P"15. "W"Транспортная компания\n"P"16. "W"Банк\n"P"17. "W"Рекламное агенство\n"P"18. "W"Магазин Аксессуаров\n"P"19. "W"Perfomance Tune", "Выбрать", "Отмена");
				case 2: D(playerid, D_AUTONEWS_SELL_HOTEL, DSL, ""P"Объявление | Продать | Отель", "\n\n"W"Введите стоимость, за которую Вы хотите продать отель:\n\n", "Ввод", "Отмена");
				case 3: D(playerid, D_AUTONEWS_SELL_AIRPORT, DSL, ""P"Объявление | Продать | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите продать аэропорт:\n\n", "Ввод", "Отмена");
				case 4: D(playerid, D_AUTONEWS_SELL_CAR, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Без тюнинга\n"P"2."W" FT\n"P"3."W" PT\n"P"4."W" FT and PT", "Выбрать", "Отмена");
				case 5: D(playerid, D_AUTONEWS_SELL_MOTO, DSL, ""P"Объявление | Продать | Мотоцикл", ""P"1."W" Пропустить\n"P"2."W" Bike\n"P"3."W" BMX\n"P"4."W" Fagio\n"P"5."W" FCR-900\n"P"6."W" Freeway\n"P"7."W" Mountain-Bike\n"P"8."W" NRG-500\n"P"9."W" PCJ-600\n"P"10."W" Quad\n"P"11."W" Sanchez\n"P"12."W" Wayfarer", "Выбрать", "Отмена");
				case 6: D(playerid, D_AUTONEWS_SELL_SIM, DSL, ""P"Объявление | Продать | Сим-Карту", ""P"1."W" Без формата\n"P"2."W" Указать формат", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_CHANGE: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_CHANGE_HOUSE, DSL, ""P"Объявление | Обменять | Дом", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Cредний\n"P"4."W" Элитный\n"P"5."W" Особняк", "Выбрать", "Отмена");
				case 1: D(playerid, D_AUTONEWS_CHANGE_BIZZ, DSL, ""P"Объявление | Обменять | Бизнес", ""P"1."W" Пропустить\n"P"2. "W"Закусочная\n"P"3. "W"24/7\n"P"4. "W"Бар\n"P"5. "W"Клуб\n"P"6. "W"Магазин одежды\n"P"7. "W"АММО\n"P"8. "W"АЗС\n"P"9. "W"Автосалон\n"P"10. "W"Рыболовный бизнес\n"P"11. "W"Компьютерный клуб\n"P"12. "W"Таксопарк\n"P"13. "W"Риэлторское агенство\n"P"14. "W"Спорт-Зал\n"P"15. "W"Транспортная компания\n"P"16. "W"Банк\n"P"17. "W"Рекламное агенство\n"P"18. "W"Магазин Аксессуаров\n"P"19. "W"Perfomance Tune", "Выбрать", "Отмена");
				case 2: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
					if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача объявления");

					format(gAdvert[slot][adText],100,"Обменяю отель",strval(inputtext));
					auto_news(slot,playerid);
				}
				case 3: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
					if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача объявления");

					format(gAdvert[slot][adText],100,"Обменяю аэропорт",strval(inputtext));
					auto_news(slot,playerid);
				}
				case 4: D(playerid, D_AUTONEWS_CHANGE_CAR, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Без тюнинга\n"P"2."W" FT\n"P"3."W" PT\n"P"4."W" FT and PT", "Выбрать", "Отмена");
				case 5: D(playerid, D_AUTONEWS_CHANGE_MOTO, DSL, ""P"Объявление | Обменять | Мотоцикл", ""P"1."W" Пропустить\n"P"2."W" Bike\n"P"3."W" BMX\n"P"4."W" Fagio\n"P"5."W" FCR-900\n"P"6."W" Freeway\n"P"7."W" Mountain-Bike\n"P"8."W" NRG-500\n"P"9."W" PCJ-600\n"P"10."W" Quad\n"P"11."W" Sanchez\n"P"12."W" Wayfarer", "Выбрать", "Отмена");
				case 6: D(playerid, D_AUTONEWS_CHANGE_SIM, DSL, ""P"Объявление | Обменять | Сим-Карту", ""P"1."W" Без формата\n"P"2."W" Указать формат", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_BUY_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_BUY_HOUSE_2, DSL, ""P"Объявление | Купить | Дом", ""P"1."W" г. Лос Сантос\n"P"2."W" г. Сан Фиерро\n"P"3."W" г. Лас Вентурас\n"P"4."W" Гетто\n"P"5."W" Паломино-Крик\n"P"6."W" Диллимор\n"P"7."W" Блуберри\n"P"8."W" Монтгомери\n"P"9."W" Форт Карсон\n"P"10."W" Лас-Паясадас\n"P"11."W" Энджел-Пайн\n"P"12."W" Бэйсайд\n"P"13."W" Лас-Барранкас\n"P"14."W" Валле-Окультадо\n"P"15."W" Эль-Квебрадос", "Выбрать", "Отмена");
		}
		case D_AUTONEWS_BUY_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_class");
			SetPVarInt(playerid, "auto_house_city", listitem);
			D(playerid, D_AUTONEWS_BUY_HOUSE_3, DSI, ""P"Объявление | Купить | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести дом:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_BUY_HOUSE_3: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_HOUSE_3, DSI, ""P"Объявление | Купить | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести дом:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"г. Лос Сантос","г. Сан Фиерро","г. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
 				format(gAdvert[slot][adText],100,"Куплю дом в %s. Цена: $%d",house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Куплю дом класса \"%s\" в %s. Цена: $%d",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
		case D_AUTONEWS_SELL_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_SELL_HOUSE_2, DSL, ""P"Объявление | Продать | Дом", ""P"1."W" г. Лос Сантос\n"P"2."W" г. Сан Фиерро\n"P"3."W" г. Лас Вентурас\n"P"4."W" Гетто\n"P"5."W" Паломино-Крик\n"P"6."W" Диллимор\n"P"7."W" Блуберри\n"P"8."W" Монтгомери\n"P"9."W" Форт Карсон\n"P"10."W" Лас-Паясадас\n"P"11."W" Энджел-Пайн\n"P"12."W" Бэйсайд\n"P"13."W" Лас-Барранкас\n"P"14."W" Валле-Окультадо\n"P"15."W" Эль-Квебрадос", "Выбрать", "Отмена");
		}
		case D_AUTONEWS_SELL_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_class");
			SetPVarInt(playerid, "auto_house_city", listitem);
			D(playerid, D_AUTONEWS_SELL_HOUSE_3, DSI, ""P"Объявление | Продать | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите продать дом:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_SELL_HOUSE_3: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_HOUSE_3, DSI, ""P"Объявление | Продать | Дом", "\n\n"W"Введите стоимость, за которую Вы хотите продать дом:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"г. Лос Сантос","г. Сан Фиерро","г. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
 				format(gAdvert[slot][adText],100,"Продам дом в %s. Цена: $%d",house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Продам дом класса \"%s\" в %s. Цена: $%d",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
		case D_AUTONEWS_CHANGE_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_CHANGE_HOUSE_2, DSL, ""P"Объявление | Обменять | Дом", ""P"1."W" г. Лос Сантос\n"P"2."W" г. Сан Фиерро\n"P"3."W" г. Лас Вентурас\n"P"4."W" Гетто\n"P"5."W" Паломино-Крик\n"P"6."W" Диллимор\n"P"7."W" Блуберри\n"P"8."W" Монтгомери\n"P"9."W" Форт Карсон\n"P"10."W" Лас-Паясадас\n"P"11."W" Энджел-Пайн\n"P"12."W" Бэйсайд\n"P"13."W" Лас-Барранкас\n"P"14."W" Валле-Окультадо\n"P"15."W" Эль-Квебрадос", "Выбрать", "Отмена");
		}
		case D_AUTONEWS_CHANGE_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"г. Лос Сантос","г. Сан Фиерро","г. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
 				format(gAdvert[slot][adText],100,"Обменяю дом в %s",house_city[GetPVarInt(playerid, "auto_house_city")]);
			}
			else format(gAdvert[slot][adText],100,"Обменяю дом класса %s в %s",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")]);
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
		case D_AUTONEWS_BUY_BIZZ: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_bizz_type", listitem);
			D(playerid, D_AUTONEWS_BUY_BIZZ_2, DSI, ""P"Объявление | Купить | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести бизнес:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_BUY_BIZZ_2: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_BIZZ_2, DSI, ""P"Объявление | Купить | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести бизнес:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new bizz_type[19][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Таксопарк","Риэлторское агенство","Спорт-Зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксессуаров","Perfomance Tune"};
			if(!GetPVarInt(playerid, "auto_bizz_type")) format(gAdvert[slot][adText],100,"Куплю прибыльное предприятие. Цена: $%d",strval(inputtext));
			else format(gAdvert[slot][adText],100,"Куплю предприятие \"%s\". Цена: $%d",bizz_type[GetPVarInt(playerid, "auto_bizz_type")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
		case D_AUTONEWS_SELL_BIZZ: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_bizz_type", listitem);
			D(playerid, D_AUTONEWS_SELL_BIZZ_2, DSI, ""P"Объявление | Продать | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите продать бизнес:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_SELL_BIZZ_2: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_BIZZ_2, DSI, ""P"Объявление | Продать | Бизнес", "\n\n"W"Введите стоимость, за которую Вы хотите продать бизнес:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new bizz_type[19][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Таксопарк","Риэлторское агенство","Спорт-Зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксессуаров","Perfomance Tune"};
			if(!GetPVarInt(playerid, "auto_bizz_type")) format(gAdvert[slot][adText],100,"Продам предприятие. Цена: $%d",strval(inputtext));
			else format(gAdvert[slot][adText],100,"Продам предприятие \"%s\". Цена: $%d",bizz_type[GetPVarInt(playerid, "auto_bizz_type")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
		case D_AUTONEWS_CHANGE_BIZZ: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new bizz_type[19][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бизнес","Компьютерный клуб","Таксопарк","Риэлторское агенство","Спорт-Зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксессуаров","Perfomance Tune"};
			if(!listitem) format(gAdvert[slot][adText],100,"Обменяю предприятие");
			else format(gAdvert[slot][adText],100,"Обменяю предприятие \"%s\"",bizz_type[listitem]);
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
		case D_AUTONEWS_BUY_HOTEL: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_HOTEL, DSI, ""P"Объявление | Купить | Отель", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести отель:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Куплю отель. Цена: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_AIRPORT: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""P"Объявление | Купить | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести аэропорт:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Куплю аэропорт. Цена: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_HOTEL: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_HOTEL, DSI, ""P"Объявление | Продать | Отель", "\n\n"W"Введите стоимость, за которую Вы хотите продать отель:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Продам отель. Цена: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_AIRPORT: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""P"Объявление | Продать | Аэропорт", "\n\n"W"Введите стоимость, за которую Вы хотите продать аэропорт:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Продам аэропорт. Цена: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_BUY_CAR_2, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Средний\n"P"4."W" Спорт", "Выбрать", "Отмена");
		}
		case D_AUTONEWS_BUY_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""P"Объявление | Купить | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести автомобиль:\n\n", "Ввод", "Отмена");
				case 1: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Bravura\n"P"3."W" Broadway\n"P"4."W" Clover\n"P"5."W" Emperor\n"P"6."W" Glendale\n"P"7."W" Greenwood\n"P"8."W" Hermes\n"P"9."W" Hustler\n"P"10."W" Majestic\n"P"11."W" Manana\n"P"12."W" Oceanic\n"P"13."W" Perenniel\n"P"14."W" Picador\n"P"15."W" Regina\n"P"16."W" Sadler\n"P"17."W" Stallion\n"P"18."W" Tampa\n"P"19."W" Tornado\n"P"20."W" Voodoo", "Выбрать", "Отмена");
				case 2: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Admiral\n"P"3."W" Blist-Compact\n"P"4."W" Cadrona\n"P"5."W" Club\n"P"6."W" Feltzer\n"P"7."W" Huntley\n"P"8."W" Landstalker\n"P"9."W" Mesa\n"P"10."W" Phoenix\n"P"11."W" Premier\n"P"12."W" Rancher\n"P"13."W" Remington\n"P"14."W" Sabre\n"P"15."W" Savanna\n"P"16."W" Sentinel\n"P"17."W" Slamvan\n"P"18."W" Solair\n"P"19."W" Stafford\n"P"20."W" Tahoma\n"P"20."W" Uranus\n"P"20."W" Washington\n"P"20."W" Windsor\n"P"20."W" Yosemite", "Выбрать", "Отмена");
				case 3: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""P"Объявление | Купить | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Alpha\n"P"3."W" Banshee\n"P"4."W" Buffalo\n"P"5."W" Bullet\n"P"6."W" Cheetah\n"P"7."W" Comet\n"P"8."W" Elegy\n"P"9."W" Euros\n"P"10."W" Hotknife\n"P"11."W" Hotring\n"P"12."W" Infernus\n"P"13."W" Jester\n"P"14."W" SandKing\n"P"15."W" Sultan\n"P"16."W" Super GT\n"P"17."W" Turismo\n"P"18."W" ZR-350", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_BUY_CAR_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class_2", listitem);
			D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""P"Объявление | Купить | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести автомобиль:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_BUY_CAR_4: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""P"Объявление | Купить | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести автомобиль:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Куплю автомобиль [%s]. Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Куплю автомобиль [%s] класса \"%s\". Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")],strval(inputtext));
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
					case 1: {
						new car_name[20][13] = {"No","Bravura","Broadway","Clover","Emperor","Glendale","Greenwood","Hermes","Hustler","Majestic","Manana","Oceanic","Perenniel","Picador","Regina","Sadler","Stallion","Tampa","Tornado","Voodoo"};
						format(gAdvert[slot][adText],100,"Куплю автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 2: {
						new car_name[24][15] = {"No","Admiral","Blist-Compact","Cadrona","Club","Feltzer","Huntley","Landstalker","Mesa","Phoenix","Premier","Rancher","Remington","Sabre","Savanna","Sentinel","Slamvan","Solair","Stafford","Tahoma","Uranus","Washington","Windsor","Yosemite"};
						format(gAdvert[slot][adText],100,"Куплю автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 3: {
						new car_name[18][13] = {"No","Alpha","Banshee","Buffalo","Bullet","Cheetah","Comet","Elegy","Euros","Hotknife","Hotring","Infernus","Jester","SandKing","Sultan","Super GT","Turismo","ZR-350"};
						format(gAdvert[slot][adText],100,"Куплю автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				}
			}
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_SELL_CAR_2, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Средний\n"P"4."W" Спорт", "Выбрать", "Отмена");
		}
		case D_AUTONEWS_SELL_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""P"Объявление | Продать | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите продать автомобиль:\n\n", "Ввод", "Отмена");
				case 1: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Bravura\n"P"3."W" Broadway\n"P"4."W" Clover\n"P"5."W" Emperor\n"P"6."W" Glendale\n"P"7."W" Greenwood\n"P"8."W" Hermes\n"P"9."W" Hustler\n"P"10."W" Majestic\n"P"11."W" Manana\n"P"12."W" Oceanic\n"P"13."W" Perenniel\n"P"14."W" Picador\n"P"15."W" Regina\n"P"16."W" Sadler\n"P"17."W" Stallion\n"P"18."W" Tampa\n"P"19."W" Tornado\n"P"20."W" Voodoo", "Выбрать", "Отмена");
				case 2: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Admiral\n"P"3."W" Blist-Compact\n"P"4."W" Cadrona\n"P"5."W" Club\n"P"6."W" Feltzer\n"P"7."W" Huntley\n"P"8."W" Landstalker\n"P"9."W" Mesa\n"P"10."W" Phoenix\n"P"11."W" Premier\n"P"12."W" Rancher\n"P"13."W" Remington\n"P"14."W" Sabre\n"P"15."W" Savanna\n"P"16."W" Sentinel\n"P"17."W" Slamvan\n"P"18."W" Solair\n"P"19."W" Stafford\n"P"20."W" Tahoma\n"P"20."W" Uranus\n"P"20."W" Washington\n"P"20."W" Windsor\n"P"20."W" Yosemite", "Выбрать", "Отмена");
				case 3: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""P"Объявление | Продать | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Alpha\n"P"3."W" Banshee\n"P"4."W" Buffalo\n"P"5."W" Bullet\n"P"6."W" Cheetah\n"P"7."W" Comet\n"P"8."W" Elegy\n"P"9."W" Euros\n"P"10."W" Hotknife\n"P"11."W" Hotring\n"P"12."W" Infernus\n"P"13."W" Jester\n"P"14."W" SandKing\n"P"15."W" Sultan\n"P"16."W" Super GT\n"P"17."W" Turismo\n"P"18."W" ZR-350", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_SELL_CAR_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class_2", listitem);
			D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""P"Объявление | Продать | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите продать автомобиль:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_SELL_CAR_4: {
			if(!response) return DeletePVar(playerid, "auto_car_class_2");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""P"Объявление | Продать | Автомобиль", "\n\n"W"Введите стоимость, за которую Вы хотите продать автомобиль:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Продам автомобиль [%s]. Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Продам автомобиль [%s] класса \"%s\". Цена: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")],strval(inputtext));
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
					case 1: {
						new car_name[20][13] = {"No","Bravura","Broadway","Clover","Emperor","Glendale","Greenwood","Hermes","Hustler","Majestic","Manana","Oceanic","Perenniel","Picador","Regina","Sadler","Stallion","Tampa","Tornado","Voodoo"};
						format(gAdvert[slot][adText],100,"Продам автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 2: {
						new car_name[24][15] = {"No","Admiral","Blist-Compact","Cadrona","Club","Feltzer","Huntley","Landstalker","Mesa","Phoenix","Premier","Rancher","Remington","Sabre","Savanna","Sentinel","Slamvan","Solair","Stafford","Tahoma","Uranus","Washington","Windsor","Yosemite"};
						format(gAdvert[slot][adText],100,"Продам автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 3: {
						new car_name[18][13] = {"No","Alpha","Banshee","Buffalo","Bullet","Cheetah","Comet","Elegy","Euros","Hotknife","Hotring","Infernus","Jester","SandKing","Sultan","Super GT","Turismo","ZR-350"};
						format(gAdvert[slot][adText],100,"Продам автомобиль марки \"%s\" [%s]. Цена: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				}
			}
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_CHANGE_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_CHANGE_CAR_2, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Эконом\n"P"3."W" Средний\n"P"4."W" Спорт", "Выбрать", "Отмена");
		}
		case D_AUTONEWS_CHANGE_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
				case 0: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
					if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача объявления");

					new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
					format(gAdvert[slot][adText],100,"Обменяю автомобиль [%s]",car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					auto_news(slot,playerid);
				}
				case 1: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Bravura\n"P"3."W" Broadway\n"P"4."W" Clover\n"P"5."W" Emperor\n"P"6."W" Glendale\n"P"7."W" Greenwood\n"P"8."W" Hermes\n"P"9."W" Hustler\n"P"10."W" Majestic\n"P"11."W" Manana\n"P"12."W" Oceanic\n"P"13."W" Perenniel\n"P"14."W" Picador\n"P"15."W" Regina\n"P"16."W" Sadler\n"P"17."W" Stallion\n"P"18."W" Tampa\n"P"19."W" Tornado\n"P"20."W" Voodoo", "Выбрать", "Отмена");
				case 2: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Admiral\n"P"3."W" Blist-Compact\n"P"4."W" Cadrona\n"P"5."W" Club\n"P"6."W" Feltzer\n"P"7."W" Huntley\n"P"8."W" Landstalker\n"P"9."W" Mesa\n"P"10."W" Phoenix\n"P"11."W" Premier\n"P"12."W" Rancher\n"P"13."W" Remington\n"P"14."W" Sabre\n"P"15."W" Savanna\n"P"16."W" Sentinel\n"P"17."W" Slamvan\n"P"18."W" Solair\n"P"19."W" Stafford\n"P"20."W" Tahoma\n"P"20."W" Uranus\n"P"20."W" Washington\n"P"20."W" Windsor\n"P"20."W" Yosemite", "Выбрать", "Отмена");
				case 3: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""P"Объявление | Обменять | Автомобиль", ""P"1."W" Пропустить\n"P"2."W" Alpha\n"P"3."W" Banshee\n"P"4."W" Buffalo\n"P"5."W" Bullet\n"P"6."W" Cheetah\n"P"7."W" Comet\n"P"8."W" Elegy\n"P"9."W" Euros\n"P"10."W" Hotknife\n"P"11."W" Hotring\n"P"12."W" Infernus\n"P"13."W" Jester\n"P"14."W" SandKing\n"P"15."W" Sultan\n"P"16."W" Super GT\n"P"17."W" Turismo\n"P"18."W" ZR-350", "Выбрать", "Отмена");
			}
		}
		case D_AUTONEWS_CHANGE_CAR_3: {
			if(!response) return DeletePVar(playerid, "auto_car_class_2");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Обменяю автомобиль [%s]",car_tune[GetPVarInt(playerid, "auto_car_tune")]);
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Обменяю автомобиль [%s] класса \"%s\"",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")]);
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
					case 1: {
						new car_name[20][13] = {"No","Bravura","Broadway","Clover","Emperor","Glendale","Greenwood","Hermes","Hustler","Majestic","Manana","Oceanic","Perenniel","Picador","Regina","Sadler","Stallion","Tampa","Tornado","Voodoo"};
						format(gAdvert[slot][adText],100,"Обменяю автомобиль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
					case 2: {
						new car_name[24][15] = {"No","Admiral","Blist-Compact","Cadrona","Club","Feltzer","Huntley","Landstalker","Mesa","Phoenix","Premier","Rancher","Remington","Sabre","Savanna","Sentinel","Slamvan","Solair","Stafford","Tahoma","Uranus","Washington","Windsor","Yosemite"};
						format(gAdvert[slot][adText],100,"Обменяю автомобиль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
					case 3: {
						new car_name[18][13] = {"No","Alpha","Banshee","Buffalo","Bullet","Cheetah","Comet","Elegy","Euros","Hotknife","Hotring","Infernus","Jester","SandKing","Sultan","Super GT","Turismo","ZR-350"};
						format(gAdvert[slot][adText],100,"Обменяю автомобиль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
				}
			}
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				SetPVarString(playerid, "auto_sim_format", "NONE");
				D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести сим-карту:\n\n", "Ввод", "Отмена");
			}
			else D(playerid, D_AUTONEWS_BUY_SIM_2, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_BUY_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_BUY_SIM, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
			SetPVarString(playerid, "auto_sim_format", inputtext);
			D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести сим-карту:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_BUY_SIM_3: {
			if(!response) return DeletePVar(playerid, "auto_sim_format");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""P"Объявление | Купить | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести сим-карту:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new format_sim[7];
			GetPVarString(playerid,"auto_sim_format",format_sim,15);
			if(GetString(format_sim,"NONE")) {
				format(gAdvert[slot][adText],100,"Куплю сим-карту. Цена: $%d",strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Куплю сим-карту формата \"%s\". Цена: $%d",format_sim,strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				SetPVarString(playerid, "auto_sim_format", "NONE");
				D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите продать сим-карту:\n\n", "Ввод", "Отмена");
			}
			else D(playerid, D_AUTONEWS_SELL_SIM_2, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_SELL_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_SELL_SIM, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
			SetPVarString(playerid, "auto_sim_format", inputtext);
			D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите продать сим-карту:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_SELL_SIM_3: {
			if(!response) return DeletePVar(playerid, "auto_sim_format");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""P"Объявление | Продать | Сим-Карту", "\n\n"W"Введите стоимость, за которую Вы хотите продать сим-карту:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			new format_sim[7];
			GetPVarString(playerid,"auto_sim_format",format_sim,15);
			if(GetString(format_sim,"NONE")) {
				format(gAdvert[slot][adText],100,"Продам сим-карту. Цена: $%d",strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Продам сим-карту формата \"%s\". Цена: $%d",format_sim,strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_CHANGE_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
				if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
				new slot = -1;
				for(new i;i<MAX_ADVERT_COUNT;i++) {
					if(!gAdvert[i][adBusy]) {slot = i; break;}
				}
				if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
				gAdvertCount ++;
				GiveMoney(playerid,-1000,"подача объявления");
				format(gAdvert[slot][adText],100,"Обменяю сим-карту");
				auto_news(slot,playerid);
			}
			else D(playerid, D_AUTONEWS_CHANGE_SIM_2, DSI, ""P"Объявление | Обменять | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_CHANGE_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_CHANGE_SIM_2, DSI, ""P"Объявление | Обменять | Сим-Карту", "\n\n"W"Введите формат номера сим-карты:\n"NO"*"G" Примечание: формат сим-карты: ABCDEF (6 букв)\n\n", "Ввод", "Отмена");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			format(gAdvert[slot][adText],100,"Обменяю сим-карту формата %s",inputtext);
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_MOTO: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_moto_class", listitem);
			D(playerid, D_AUTONEWS_BUY_MOTO_2, DSI, ""P"Объявление | Купить | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести мотоцикл:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_BUY_MOTO_2: {
			if(!response) return DeletePVar(playerid, "auto_moto_class");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_MOTO_2, DSI, ""P"Объявление | Купить | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите приобрести мотоцикл:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			if(!GetPVarInt(playerid, "auto_moto_class")) {
				format(gAdvert[slot][adText],100,"Куплю мотоцикл. Цена: $%d",strval(inputtext));
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Куплю мотоцикл марки \"%s\". Цена: $%d",car_name[GetPVarInt(playerid, "auto_moto_class")],strval(inputtext));
			}
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_moto_class");
		}
		case D_AUTONEWS_SELL_MOTO: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_moto_class", listitem);
			D(playerid, D_AUTONEWS_SELL_MOTO_2, DSI, ""P"Объявление | Продать | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите продать мотоцикл:\n\n", "Ввод", "Отмена");
		}
		case D_AUTONEWS_SELL_MOTO_2: {
			if(!response) return DeletePVar(playerid, "auto_moto_class");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_MOTO_2, DSI, ""P"Объявление | Продать | Мотоцикл", "\n\n"W"Введите стоимость, за которую Вы хотите продать мотоцикл:\n"NO"*"G" От $1 и до $50.000.000\n\n", "Ввод", "Отмена");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			if(!GetPVarInt(playerid, "auto_moto_class")) {
				format(gAdvert[slot][adText],100,"Продам мотоцикл. Цена: $%d",strval(inputtext));
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Продам мотоцикл марки \"%s\". Цена: $%d",car_name[GetPVarInt(playerid, "auto_moto_class")],strval(inputtext));
			}
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_moto_class");
		}
		case D_AUTONEWS_CHANGE_MOTO: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			if(PI[playerid][pCash] < 1000) return ErrorMessage(playerid,"У Вас недостаточно денег. Для публикации объяления необходимо иметь $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача объявления");

			if(!listitem) {
				format(gAdvert[slot][adText],100,"Обменяю мотоцикл");
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Обменяю мотоцикл марки \"%s\"",car_name[listitem]);
			}
			auto_news(slot,playerid);
		}
		case D_JOB_CLEAR: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда уборщик улиц");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
		    D(playerid, D_JOB_CLEAR_2, DSL,""P"Выбор маршрута",""P"1."W" Лос-Сантос №1\n"P"2."W" Лос-Сантос №2\n"P"3."W" Лос-Сантос №3", "Выбрать", "Отмена");
		}
		case D_JOB_CLEAR_2: {
		    if(!response) return D(playerid, D_JOB_CLEAR_2, DSL,""P"Выбор маршрута",""P"1."W" Лос-Сантос №1\n"P"2."W" Лос-Сантос №2\n"P"3."W" Лос-Сантос №3", "Выбрать", "Отмена");
		    SetPVarInt(playerid,"clear_id",GetPlayerVehicleID(playerid));
		    switch(listitem) {
			    case 0: SendOk(playerid,"Вы выбрали маршрут: Лос-Сантос №1. Начинайте уборку");
				case 1: SendOk(playerid,"Вы выбрали маршрут: Лос-Сантос №2. Начинайте уборку");
				case 2: SendOk(playerid,"Вы выбрали маршрут: Лос-Сантос №3. Начинайте уборку");
			}
			SetPVarInt(playerid,"route_job_cleaner",listitem);
			SetNextJobClearCP(playerid,GetPVarInt(playerid, "route_job_cleaner"));
		}
		case D_JOB_CLEAR_3: {
		    if(response) return D(playerid, D_JOB_CLEAR_2, DSL,""P"Выбор маршрута",""P"1."W" Лос-Сантос №1\n"P"2."W" Лос-Сантос №2\n"P"3."W" Лос-Сантос №3" , "Выбрать", "Отмена");
		    SetVehicleToRespawn(GetPVarInt(playerid, "clear_id"));
		}
		case D_JOB_GAZON: {
		   	if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PI[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно денег для аренды авто для продажи еды");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда газонокосильщик");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
		    SetPVarInt(playerid, "start_job_mower",1);
		    SendOk(playerid,"Вы начали рабочий день. Выберите зону для работы");
		    pc_cmd_zonestatus(playerid);
		   	SetPVarInt(playerid, "veh_id_cleaner",GetPlayerVehicleID(playerid));
		}
		case D_JOB_GAZON_2:
		{
		    if(!response) return pc_cmd_zonestatus(playerid);
		    switch(listitem)
			{
		        case 0: {
		            SendOk(playerid, "Вы выбрали таксопарк Лос-Сантос.");
		            EnableGPSForPlayer(playerid,1876.3724,-2428.0542,10.5686);
		        }
		        case 1: {
		            SendOk(playerid, "Вы выбрали пляж Verona Beach.");
		            EnableGPSForPlayer(playerid,1158.3613,-1950.5486,7.0308);
		        }
		        case 2: {
		            SendOk(playerid, "Вы выбрали белый дом.");
		            EnableGPSForPlayer(playerid,-772.3635,-2462.6445,27.7611);
		        }
		        case 3: {
		            SendOk(playerid, "Вы выбрали больницу Лос-Сантос.");
		            EnableGPSForPlayer(playerid,-1341.0259,-984.0529,52.1690);
		        }
		        case 4: {
		            SendOk(playerid, "Вы выбрали мэрию Лос-Сантос.");
		            EnableGPSForPlayer(playerid,-1715.9070,-1460.0004,50.9804);
		        }
		        case 5: {
		            SendOk(playerid, "Вы выбрали Глен-парк №1.");
		            EnableGPSForPlayer(playerid,-2449.7222,-552.7628,32.9814);
		        }
		        case 6: {
		            SendOk(playerid, "Вы выбрали Глен-парк №2.");
		            EnableGPSForPlayer(playerid, -2068.2839,2066.5081,61.5122);
		        }
			}
		}
		case D_DONATE_BANK_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "donate_bank", listitem);
			D(playerid,D_DONATE_BANK_3,DSL, ""P"Банк", ""P"1."W" Банковские услуги\n"P"2."W" Недвижимость", "Выбрать", "Назад");
		}
		case D_DONATE_BANK_3: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_BANK,DSL, ""P"Банк", "Активные счета\nОткрыть новый счет", "Выбрать", "Назад");
				case 1: D(playerid,D_BANK_OPLATA,DSL,""P"Оплата недвижимости",""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Отель\n"P"4."W" Аэропорт","Выбрать","Отмена");
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1) {
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}//диалоги
public OnPlayerEnterDynamicCP(playerid, checkpointid) {
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) return 1;
	if(checkpointid == gPlayerProdCP[playerid] && GetPVarInt(playerid,"prod_id") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 403 && !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return ErrorMessage(playerid,"У Вас нет цистерны с топливом");
		new string[286];
		new bizid = GetPVarInt(playerid,"prod_id")-1;
		format(string, sizeof(string), ""W"Бизнес: "P"%s\n\n\
										"W"Требуется продуктов: "O"%d\n\
										"W"Доступно для разгрузки: "O"%d\n\
										"W"Введите кол-во продуктов для продажи:"
										,gBusiness[bizid][bizzName],gBusiness[bizid][bizzProdOrder],GetPVarInt(playerid,"count_prod"));
		return D(playerid,dProdSell,DSI, ""P"Доставка",string,"Продать","Отмена");
	}
	if(RingCP[0] <= checkpointid <= RingCP[1]) {
		if(RingInfo[0][rgPlayer][0] != playerid && RingInfo[0][rgPlayer][1] != playerid) return ErrorMessage(playerid,"В данный момент не Ваша очередь");
		//if(RingInfo[0][rgTime]) return ErrorMessage(playerid, "В данный момент недоступно");
		if(IsPlayerInDynamicCP(RingInfo[0][rgPlayer][1], RingCP[1]) || IsPlayerInDynamicCP(RingInfo[0][rgPlayer][0], RingCP[0])) return ErrorMessage(playerid, "Данное место для Вашего соперника");
		else SendOk(playerid, "Ожидайте соперника");
		return true;
	}
	if(checkpointid == theftCheck[playerid][0]) { //угон
		if(theftCheck[playerid][1] == 1){
			DestroyDynamicCP(theftCheck[playerid][0]);
			if(theftIDveh[playerid][1] != 1010)	SendOk(theftIDveh[playerid][1],"У вашей машины сработала сигнализация!");	
			TogglePlayerControllable(playerid, false);
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 15;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
		
		}
		else if(theftCheck[playerid][1] == 4){
			DestroyDynamicCP(theftCheck[playerid][0]);
			SendOk(playerid,"Чтобы взломать дом введите /theftrob");
		}
		else {
			switch(GetPlayerState(playerid)){
				case PLAYER_STATE_ONFOOT:{
					SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Где машина? « Отправитель: Jackson_Young [т. 1218181 ]");
				}	
				case PLAYER_STATE_DRIVER:{
					if(GetPlayerVehicleID(playerid) != theftIDveh[playerid][0]) return SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Ты привез не ту машину! « Отправитель: Jackson_Young [т. 1218181]");
					theftCheck[playerid][1] = 3;
					DestroyDynamicCP(theftCheck[playerid][0]);
					A_DestroyVehicle(theftIDveh[playerid][0]);
					theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
					SendOk(playerid,"Отлично, получай свои деньги и вали от сюда, мы не хотим проблем с копами");
					thefttime[playerid] = 0;
					PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
					theftCheck[playerid][1] = 3;
					PI[playerid][ptheftExp]++;
					PI[playerid][ptheftTime] = gettime()+GetLimitTheeft(playerid);
					UpdatePlayerData(playerid,"theftTime",PI[playerid][ptheftTime]);
					UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
					GiveMoney(playerid, GetSalaryTheeft(playerid), "Получение с помощью угона");

					if(PI[playerid][pMember]) add_gang_points(PI[playerid][pMember],1);

					if(TheftSkillMax[PI[playerid][ptheftSkill]] == PI[playerid][ptheftExp] && PI[playerid][ptheftSkill] != 25){
						PI[playerid][ptheftSkill] ++, UpdatePlayerData(playerid,"theftSkill",PI[playerid][ptheftSkill]);
						PI[playerid][ptheftExp] = 0, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
						SendOk(playerid,"Ваш навык автоугонщика повысился. Просмотр своих навыков /theftprogress");
					} 
				}
				default: SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Ну и где машина? « Отправитель: Jackson_Young [т. 1218181]");
			}

		}
	}
	if(checkpointid == TI[playerid][tRaceCP]) {
		srace_end(playerid,0);
	}
	return 1;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid) {
	return true;
}
public OnPlayerEnterDynamicArea(playerid, areaid) {
	if(!TI[playerid][tLogin]) return 1;
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) return 1;
	if(GetPVarInt(playerid,"ChangingSkin")) {
		A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		cancel_skin(playerid);
	}
    new pstate = GetPlayerState(playerid);
	if(areaid >= TeleportPickup[0] && areaid <= TeleportPickup[sizeof(gTeleportsToD)-1] && pstate == PLAYER_STATE_ONFOOT) {
		new tp = areaid - TeleportPickup[0];
		switch(tp) {
			case 3,5,7: {
				if(PI[playerid][pHospital]) return ErrorMessage(playerid, "Вы не прошли полный курс лечения");
				TI[playerid][tHeal] = false;
			}
			case 8:
			{
				if(PI[playerid][pMember] != fFBI && !TI[playerid][tEnter][fFBI]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");

				SetPlayerFacingAngle(playerid, gTeleportsToD[8][tpExitPos_A]);
				
				SetPlayerPosAC(playerid, gTeleportsToD[8][tpExitPos_X], gTeleportsToD[8][tpExitPos_Y], gTeleportsToD[8][tpExitPos_Z],gTeleportsToD[8][tpExitWorld],
					gTeleportsToD[8][tpExitInt]);
					
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			case 10,12,14: {
				if(!IsAMedic(playerid)) return ErrorMessage(playerid,"Доступно для работников МЧС");
				if(PI[playerid][pHospital]) return ErrorMessage(playerid, "Вы не прошли полный курс лечения");
				TI[playerid][tHeal] = false;
			}
			case 40:
			{
				if(PI[playerid][pMember] != fFBI && !TI[playerid][tEnter][fFBI]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");

				SetPlayerFacingAngle(playerid, gTeleportsToD[40][tpExitPos_A]);
				
				SetPlayerPosAC(playerid, gTeleportsToD[40][tpExitPos_X], gTeleportsToD[40][tpExitPos_Y], gTeleportsToD[40][tpExitPos_Z],gTeleportsToD[40][tpExitWorld],
					gTeleportsToD[40][tpExitInt]);
					
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			case 41: 
			{
			    if(PI[playerid][pMember] != fFBI && !TI[playerid][tEnter][fFBI]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");

			    SetPlayerFacingAngle(playerid, gTeleportsToD[41][tpExitPos_A]);
			    
				SetPlayerPosAC(playerid, gTeleportsToD[41][tpExitPos_X], gTeleportsToD[41][tpExitPos_Y], gTeleportsToD[41][tpExitPos_Z],gTeleportsToD[41][tpExitWorld],
					gTeleportsToD[41][tpExitInt]);
					
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			case 58: if(PI[playerid][pMember] != fBALLAS && !TI[playerid][tEnter][fBALLAS]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");
			case 60: if(PI[playerid][pMember] != fVAGOS && !TI[playerid][tEnter][fVAGOS]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");
			case 62: if(PI[playerid][pMember] != fGROVE && !TI[playerid][tEnter][fGROVE]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");
			case 64: if(PI[playerid][pMember] != fAZTEC && !TI[playerid][tEnter][fAZTEC]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");
			case 66: if(PI[playerid][pMember] != fRIFA && !TI[playerid][tEnter][fRIFA]) return ErrorMessage(playerid,"Вы не состоите в данной организации/У Вас нет пропуска");
			case 68: {
				TI[playerid][tClothesWork][0] = 1;
				TI[playerid][tClothesWork][1] = 1;
				SendOk(playerid,"Можете приступать к работе");
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			case 69: {
				TI[playerid][tClothesWork][0] = 0;
				TI[playerid][tClothesWork][1] = 0;
				if(GetPVarInt(playerid,"zp_clothes")) PI[playerid][pSalary] += GetPVarInt(playerid,"zp_clothes"),SendClientMessage(playerid,CGOLD,"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)");
				DeletePVar(playerid,"zp_clothes");
				UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawHide(playerid,work_td[playerid][i]);
				}
			}
			case 75: {
				if(player_to_race_lv[playerid]) return ErrorMessage(playerid,"Участнику гонок запрещено покидать помещение");
				if(player_to_golod[playerid]) return ErrorMessage(playerid,"Участнику голодных игр запрещено покидать помещение");
			}
			case 76: {
				if(PI[playerid][pLevel] < 3) return ErrorMessage(playerid,"Вход в казино возможен с 3 уровня");
				if(!casino) return ErrorMessage(playerid, "Вход в казино временно закрыт");
			}
			case 77: if(GetPVarInt(playerid,"krup")) return ErrorMessage(playerid, "Необходимо закончить работу крупье");
			case 84,85: if(PI[playerid][pMember] != fINSTRUCTORS && TI[playerid][tMasked] != fINSTRUCTORS) return ErrorMessage(playerid,"У Вас нет доступа");
			case 92,94: if(!IsAArm(playerid) || !start_work[playerid]) return ErrorMessage(playerid,"У Вас нет доступа");
			case 93,95: if(PI[playerid][pHospital]) return ErrorMessage(playerid, "Вы не прошли полный курс лечения");
			case 96..99: if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid,"У Вас нет доступа");
			case 28,32,36: if(!IsACop(playerid)) return ErrorMessage(playerid,"У Вас нет доступа");
			case 110: if(PI[playerid][pMember] != fRM && TI[playerid][tMasked] != fRM) return ErrorMessage(playerid,"У Вас нет доступа");
			case 112,114,116: {
				//return ErrorMessage(playerid,"В разработке. Уже скоро...");
				if(!TI[playerid][tTir]) return ErrorMessage(playerid,"У Вас нет пропуска в тир. Приобрести пропуск можно на кассе");
			}
			case 113,115,117,121,123,125,127,129,131,133,135: { //тир //выход
				if(ShootingStart[playerid]) return ErrorMessage(playerid,"Вы не закончили тренировку");
			}
			case 142,143: {
			    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid,"У Вас нет доступа");
			}
		}
		if(tp > 1 && gTeleportsToD[tp][tpExitInt] != 6 && tp != 95 && tp != 89 && tp != 17 && tp != 113
		&& tp != 115 && tp != 117 && tp != 112 && tp != 114 && tp != 116) OnPlayerUpdateLoadingMode(playerid);

		if(tp == 108 || tp == 109)
		{
		    SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],
				GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid));

            SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);

			SetCameraBehindPlayer(playerid);
		}
		else
		{
			if(tp != 66 || tp != 67 || tp != 88 || tp != 89 || tp != 92 || tp != 93 || tp != 94 || tp != 95 || tp != 128 || tp != 129 || tp != 16
			|| tp != 17 || tp != 80 || tp != 81 || tp != 84 || tp != 85 || tp != 118 || tp != 119)
			{
				SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],
					gTeleportsToD[tp][tpExitWorld],gTeleportsToD[tp][tpExitInt]);

	            SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);

				SetCameraBehindPlayer(playerid);
			}
		}
		return true;
	}
	if(areaid >= gPickID[0] && areaid <= gPickID[PICKUPS_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) { // ПИКАПЫ
		new pick = areaid - gPickID[0];
		
		switch(pick) {
			case 0: {
				static const f_str[] =
					""GREEN"1.Общие положения:"W"\n\
					1.1 Участники дорожного движения обязаны знать и неукоснительно выполнять требования этих Правил,\n\
					\tа также быть взаимно вежливыми.\n\
					1.2 Обгон транспортного средства разрешен только с левой стороны, при этом водитель обязан убедиться,\n\
					\tчто встречная полоса свободна на достаточном для обгона расстоянии.\n\
					1.3 Управлять транспортным средством имеет право особа достигшая возраста 18 лет при этом имея вод.удостоверение.\n\
					1.4 При ДТП водители обязаны немедленно остановиться на месте случившегося, вызвать и дождаться полицию.\n\
					1.5 Ближний свет фар требуется включать в любое время суток.\n\
					1.6 Гос. Номера должны быть всегда видимыми спереди и сзади.\n\n\
					"GREEN"2.Скорость движения:"W"\n\
					2.1 В пределах города разрешается движение транспортных средств со скоростью не более 60 км/ч\n\
					2.2 За пределами города разрешается движение транспортных средств со скоростью не более 120 км/ч\n\n\
					"GREEN"3. Остановка и стоянка:"W"\n\
					3.1 Остановка на магистрали разрешена только на спец. площадках для стоянки\n\n\
					"GREEN"4. Спец. Сигналы:"W"\n\
					4.1 В случае приближения транспортного средства с включенным проблесковым маячком и (или)\n\
					\tспециальным звуковым сигналом водители других транспортных средств,\n\
					\tкоторые могут создавать ему препятствие для движения, обязаны уступить ему дорогу.";
				new string[sizeof(f_str)];
				format(string,sizeof(string),"%s",f_str);
				D(playerid,DIALOG_NONE,DSM, ""P"Правила Дорожного Движения",string,"Закрыть","");
			}
			case 1: D(playerid,D_JOB,DSL,""P"Трудоустройство",""W"1. Автобусник\t\t\t\t| "P"2 лвл\n"W"2. Механик\t\t\t\t| "P"3 лвл\n"W"3. Развозчик еды\t\t\t| "P"3 лвл\n"W"4. Развозчик продуктов/топлива\t| "P"4 лвл\n"W"5. Мойщик дорог\t\t\t| "P"4 лвл\n"W"6. Газонокосильщик\t\t\t| "P"5 лвл", "Выбрать", "Закрыть");
			case 2: {
				new price_car,price_gun,price_boat,price_air;
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller_car = floatround(500/100*BonusInfo[act_buylic]);
					new seller_air = floatround(15000/100*BonusInfo[act_buylic]);
					new seller_boat = floatround(10000/100*BonusInfo[act_buylic]);
					new seller_gun = floatround(20000/100*BonusInfo[act_buylic]);
					price_car = (500-seller_car);
					price_air = (15000-seller_air);
					price_boat = (10000-seller_boat);
					price_gun = (20000-seller_gun);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller_car = floatround(500/100*BonusInfo[act_buylic]);
					new seller_air = floatround(15000/100*BonusInfo[act_buylic]);
					new seller_boat = floatround(10000/100*BonusInfo[act_buylic]);
					new seller_gun = floatround(20000/100*BonusInfo[act_buylic]);
					price_car = (500-seller_car);
					price_air = (15000-seller_air);
					price_boat = (10000-seller_boat);
					price_gun = (20000-seller_gun);
				}
			    else {
					price_car = 500;
					price_air = 15000;
					price_boat = 10000;
					price_gun = 20000;
			    }
				new string[512];
				format(string,sizeof(string),""P"1."W" Водительское удостоверение [%s] - "ORANGE"$%d\n"P"2."W" Лицензия на полёты [%s] - "ORANGE"$%d\n"P"3."W" Лицензия на водный транспорт [%s] - "ORANGE"$%d\n"P"4."W" Лицензия на оружие [%s] - "ORANGE"$%d",lic[playerid][0] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_car,lic[playerid][1] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_air,lic[playerid][2] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_boat,lic[playerid][3] == 1 ? (""P"Имеется"W""):(""G"Отсутствует"W""),price_gun);
				D(playerid,D_LICENSES,DSL,""P"Покупка лицензий",string, "Купить", "Отмена");
			}
			case 3: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				new otelid = GetPVarInt(playerid,"selectedhotel");
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid,gHotels[otelid][hotelAreaX],gHotels[otelid][hotelAreaY],gHotels[otelid][hotelAreaZ],0,0);
				SetCameraBehindPlayer(playerid);
			}
			case 4: {
				new hotel = -1;
				switch(GetPlayerVirtualWorld(playerid)) {
					case 0: hotel = 1;
					case 1: hotel = 2;
					case 2: hotel = 3;
					case 3: hotel = 4;
					default: hotel = -1;
				}
				if(hotel == PI[playerid][pHotel]) return D(playerid,D_HOTEL,DSL,""P"Ресепшн",""P"1."W" Список номеров\n"P"2."W" Управление отелем","Выбрать","Отмена");
				else ShowHotelRooms(playerid);
			}
			case 5: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				D(playerid,D_HOTEL_LIFT_1,DSL,""P"Лифт","1 этаж\n2 этаж\n3 этаж\n4 этаж\n5 этаж\n6 этаж\n7 этаж","Перейти","Отмена");
			}
			case 6: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				D(playerid,D_HOTEL_LIFT_2,DSL,""P"Лифт","Ресепшн\n1 этаж\n2 этаж\n3 этаж\n4 этаж\n5 этаж\n6 этаж\n7 этаж","Перейти","Отмена");
			}
			case 7: {
				if(PI[playerid][pMedCard]) return ErrorMessage(playerid,"У Вас уже есть мед. карта");
				new price;
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(1000/100*BonusInfo[act_medcard]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств. Стоимость медкарты - $1.000");
					price = (1000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(1000/100*BonusInfo[act_medcard]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно средств. Стоимость медкарты - $1.000");
					price = (1000-seller);
				}
			    else price = 1000;
			    new string[128];
			    format(string,sizeof(string),""W"Стоимость медицинмской карты - "GREEN"$1.000\n"W"Вы действительно хотите получить мед. карту?",price);
				D(playerid,D_MEDCARD,DSM, ""P"Медицинская карта",string,"Получить","Отмена");
			}
			case 8: {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");

				new price;
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(50000/100*vip_status[PI[playerid][pVips]][vip_changesex]);
					if(GetPlayerMoneyEx(playerid) < (50000-seller)) return ErrorMessage(playerid,"У Вас недостаточно денег для операции. Стоимость операции - $50.000");
					price = (50000-seller);
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(50000/100*BonusInfo[act_changesex]);
						if(GetPlayerMoneyEx(playerid) < (50000-seller)) return ErrorMessage(playerid,"У Вас недостаточно денег для операции. Стоимость операции - $50.000");
						price = (50000-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(50000/100*BonusInfo[act_changesex]);
						if(GetPlayerMoneyEx(playerid) < (50000-seller)) return ErrorMessage(playerid,"У Вас недостаточно денег для операции. Стоимость операции - $50.000");
						price = (50000-seller);
					}
				    else price = 50000;
				}
				
				static const f_str[] = ""W"Трансгендерный переход может включать в себя социализацию в новой гендерной роли,\n\
														медицинские процедуры по коррекции пола,\n\
														смену паспортного имени и юридического пола\n\
														"W"Стоимость хирургического вмешательства - "GREEN"$%d\n\n\
														"NO"Примечание: при смене пола будет изменен Ваш скин";
				new string[sizeof(f_str) +1 + (-2 + 5)];
				format(string,sizeof(string),f_str,price);
				D(playerid,D_MEDSEX,DSM,""P"Трансгендерный переход", string ,"Операция","Отмена");
			}
			case 9: {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необходимо закончить рабочий день в организации");
				new string[105];
				format(string,sizeof(string),""W"Вы хотите "ORANGE"%s"W" работу крупье?", (GetPVarInt(playerid,"krup")) ? ("закончить") : ("начать"));
				D(playerid,D_CASINO,DSM, ""P"Казино",string,"Да","Нет");
			}
			case 10: {
				static const f_str[] =
					""GREEN"1.О проекте:"W"\n\
					"FullServName" - это место где тебя всегда рады видеть. \n\
					Только у нас Вы можете окунутся в захватывающий мир легендарной игры GTA San Andreas в жанре Role Play. \n\
					Окунувшись в игровой процесс на нашем сервере, Вы сможете попробовать себя в разных игровых ролях, \n\
					устроиться в полицию, участвовать в выборах, стать мэром или вообще президентом и руководить штатом, \n\
					пойти против закона и стать лидером опасной группировки и завоевать все территории опасных районов в Лос-Сантосе\n\
					или стать крутым мафиози, создать империю оборота наркотиков в штате и взять под контроль своей мафии все бизнесы штата!\n\
					Только у нас Вы получаете качественный игровой мод, приятную атмосферу игры максимально приближенной к реальности.\n\
					Вас ждёт увлекательные знакомства на сервере, любой игрок в дальнейшем может стать Вашим другом\n\
					на которого Вы всегда сможете положится - всё это ждёт Вас на игровом сервере "FullServName".\n\n\
					"GREEN"2.Защита аккаунта:"W"\n\
					Уважаемый игрок, помните, что аккаунт - это Ваша собственность и никто другой за неё не отвечает!\n\
					Администрация никогда не попросит пароль от Вашего аккаунта, ключ и т.д. никогда не сообщайте свои данные об аккаунте третьим лицам.\n\
					Не пользуйтесь автоматическими установками модов и прочих дополнениях для GTA San Andreas, советуем пользоваться только проверенными\n\
					и надёжными источниками, так как в посторонних модах/дополнениях может содержаться вредоносный вирус\n\
					через который злоумышленник сможет читать Ваши пароли - Ваш аккаунт в Ваших руках.\n\
					Для того чтобы максимально защитить свой аккаунт советуем зайти в настройки безопасности и установить защитный код.\n\
					( /mm - Безопасность - Защитный код )\n\n\
					"GREEN"3. Основы игры:"W"\n\
					Проводя время на нашем сервере Вы будете набираться опыта, после накопления нужного опыта для определённого уровня\n\
					Вам будет доступен переход на новый уровень, который откроет для Вас новые возможности игры на нашем сервере.\n\
					Вы можете посмотреть статистику своего персонажа войдя в меню.\n\
					( /mm - Статистика игрока )";
				new string[sizeof(f_str)];
				format(string,sizeof(string),"%s",f_str);
				D(playerid,DIALOG_NONE,DSM, ""P""FullServName"",string,"Хорошо","");
			}
   			case 11:
			{
			    ErrorMessage(playerid, "Не доступно!");

			    /*
				static const f_str[] =
					""GREEN"1.О проекте:"W"\n\
					"FullServName" - это место где тебя всегда рады видеть. \n\
					Только у нас Вы можете окунутся в захватывающий мир легендарной игры GTA San Andreas в жанре Role Play. \n\
					Окунувшись в игровой процесс на нашем сервере, Вы сможете попробовать себя в разных игровых ролях, \n\
					устроиться в полицию, участвовать в выборах, стать мэром или вообще президентом и руководить штатом, \n\
					пойти против закона и стать лидером опасной группировки и завоевать все территории опасных районов в Лос-Сантосе\n\
					или стать крутым мафиози, создать империю оборота наркотиков в штате и взять под контроль своей мафии все бизнесы штата!\n\
					Только у нас Вы получаете качественный игровой мод, приятную атмосферу игры максимально приближенной к реальности.\n\
					Вас ждёт увлекательные знакомства на сервере, любой игрок в дальнейшем может стать Вашим другом\n\
					на которого Вы всегда сможете положится - всё это ждёт Вас на игровом сервере "FullServName".\n\n\
					"GREEN"2.Защита аккаунта:"W"\n\
					Уважаемый игрок, помните, что аккаунт - это Ваша собственность и никто другой за неё не отвечает!\n\
					Администрация никогда не попросит пароль от Вашего аккаунта, ключ и т.д. никогда не сообщайте свои данные об аккаунте третьим лицам.\n\
					Не пользуйтесь автоматическими установками модов и прочих дополнениях для GTA San Andreas, советуем пользоваться только проверенными\n\
					и надёжными источниками, так как в посторонних модах/дополнениях может содержаться вредоносный вирус\n\
					через который злоумышленник сможет читать Ваши пароли - Ваш аккаунт в Ваших руках.\n\
					Для того чтобы максимально защитить свой аккаунт советуем зайти в настройки безопасности и установить защитный код.\n\
					( /mm - Безопасность - Защитный код )\n\n\
					"GREEN"3. Основы игры:"W"\n\
					Проводя время на нашем сервере Вы будете набираться опыта, после накопления нужного опыта для определённого уровня\n\
					Вам будет доступен переход на новый уровень, который откроет для Вас новые возможности игры на нашем сервере.\n\
					Вы можете посмотреть статистику своего персонажа войдя в меню.\n\
					( /mm - Статистика игрока )";
				new string[sizeof(f_str)];
				format(string,sizeof(string),"%s",f_str);
				D(playerid,DIALOG_NONE,DSM, ""P""FullServName"",string,"Хорошо","");
				*/
			}
			case 12:
			{
				if(PI[playerid][pLevel] != 1) return ErrorMessage(playerid,"Только для новичков (1 уровень)");
				if(GetPVarInt(playerid,"anti_eat") > unix) return ErrorMessage(playerid,"Можно перекусить один раз в минуту");
				SetPlayerHealth(playerid, 100);
				GiveFullness(playerid, 30);
				MeAction(playerid,"перекусил(а)");
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
				SetPVarInt(playerid, "anti_eat", unix+60);
			}
			case 13:
			{
			    ErrorMessage(playerid, "Не доступно!");

			    /*
				if(PI[playerid][pLevel] != 1) return ErrorMessage(playerid,"Только для новичков (1 уровень)");
				if(GetPVarInt(playerid,"anti_eat") > unix) return ErrorMessage(playerid,"Можно перекусить один раз в минуту");
				SetPlayerHealth(playerid, 100);
				GiveFullness(playerid, 30);
				MeAction(playerid,"перекусил(а)");
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
				SetPVarInt(playerid, "anti_eat", unix+60);
				*/
			}
			case 14: {
				if(!PI[playerid][pSearch]) return ErrorMessage(playerid,"Вы не находитесь в розыске");
				static const f_str[] = ""W"Вы собираетесь сдаться с повинной\n\
										Это укоротит Ваш срок вдвое\n\
										Ваш уровень розыска: "P"%d\n\
										"W"Примерное время заключения: "P"%d сек\n\
										"W"При добровольной сдаче время заключения составит: "GREEN"%d сек\n\n\
										"YELLOW"Вы действительно хотите сдаться добровольно?";
				new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 4) + (-2 + 5)];
				format(string,sizeof(string),f_str,PI[playerid][pSearch],PI[playerid][pSearch]*600,PI[playerid][pSearch]*600/2);
				D(playerid,D_COP_ARREST,DSM, ""P"Сдача с повинной",string,"Да","Отмена");
			}
			case 15:
			{
				new bizz = TI[playerid][tSelectedBusinessID];
				switch(gBusiness[bizz][bizzType])
				{
					case 11:
					{
						if(PI[playerid][bizz_work] == bizz)
						{
							static const f_str[] = "Таксопарк {%s}%s";
							
							new string[sizeof(f_str) +1 + (-2 + 36)];
							format(string,sizeof(string),f_str,color_td[FuncBizz[bizz][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
							D(playerid,D_BIZZ_TAXI_INFO,DSL,string,""ORANGE"1."W" Информация\n"ORANGE"2."W" Уволиться из таксопарка","Выбрать","Отмена");
						}
						else showstattaxi(playerid,bizz);
					}
					case 14:
					{
						if(PI[playerid][bizz_work] == bizz)
						{
							static const f_str[] = "Транспортная компания {%s}%s";
							
							new string[sizeof(f_str) +1 + (-2 + 36)];
							format(string,sizeof(string),f_str,color_td[FuncBizz[bizz][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
							
							D(playerid,D_BIZZ_TK_INFO,DSL,string,"\
								"ORANGE"1."W" Информация\n"ORANGE"2."W" Узнать свой доход\n"ORANGE"3."W" Уволиться из транспортной компании","Выбрать","Отмена");
						}
						else showstattk(playerid,bizz);
					}
					case 15:
					{
						static const f_str[] = "\n\n"ORANGE"Название:\t\t"W"%s\n\
											"ORANGE"Владелец:\t\t"W"%s\n\
											"ORANGE"Гос. цена\t\t"W"%d\n\n\n\
											"ORANGE"Процент комиссии за переводы:\t\t\t"W"%.1f%\n\
											"ORANGE"Процент комиссии за оплату недвижимости:\t"W"%d\n\
											"ORANGE"Процент комиссии пользования банкоматами:\t"W"%d";
											
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5)
							+ (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
						
						format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz][bizzOwner],gBusiness[bizz][bizzSellPrice],
							FuncBizz[bizz][funcbPercent2],FuncBizz[bizz][funcbPercent],FuncBizz[bizz][funcbPercent3]);
						
						D(playerid,DIALOG_NONE,DSM, ""P"Банковское отделение",string,"Закрыть","");
					}
				}
			}
			case 16: {
				switch(GetPlayerVirtualWorld(playerid)) {
					case 49: if(PI[playerid][pLeader] != fLCN) return ErrorMessage(playerid,"Доступно лидеру организации");
					case 50: if(PI[playerid][pLeader] != fYAKUZA) return ErrorMessage(playerid,"Доступно лидеру организации");
					case 51: if(PI[playerid][pLeader] != fRM) return ErrorMessage(playerid,"Доступно лидеру организации");
				}
				new string[512],member = -1;
				if(PI[playerid][pMember] == fLCN) member = 0;
				else if(PI[playerid][pMember] == fYAKUZA) member = 1;
				else if(PI[playerid][pMember] == fRM) member = 2;
				if(member == -1) return ErrorMessage(playerid,"Временно недоступно");

				new year, month, day, hour, minute, second;

				strcat(string,"Рабочий №\tСтатус\tСрок найма\n");
				for(new i; i < 8; i ++) {
					if(!l_actor[member][i]) format(string,sizeof(string),"%sРабочий №%d\t"G"Не нанят\t--\n",string,i+1);
					else {
						timestamp_to_date(l_actort[member][i]-unix, year, month, day, hour, minute, second);
						format(string,sizeof(string), "%sРабочий №%d\t"NO"Нанят\t%dд %dч %dм\n",string,i+1,day-1,hour,minute);
					}
				}
				D(playerid,D_LAB,DSTH,""P"Найм работников",string,"Выбрать","Закрыть");
			}
			case 17: return D(playerid, D_GAME_DM, DSL, ""P"Сумасшедшие войны",""P"1."W" Регистрация на сумасшедшие войны\n"P"2."W" Информация о данном мероприятии", "Выбрать", "Закрыть");
			case 18: {
				if(PI[playerid][pLeader] != fWHITEHOUSE) return ErrorMessage(playerid,"Доступно только Президенту штата");
				D(playerid,D_ECONOMY,DSL,""P"Управление штатом","\
											"P"1."W" Информация\n\
											"P"2."W" Зарплата на оружейном заводе\n\
											"P"3."W" Зарплата на нефтезаводе\n\
											"P"4."W" Зарплата яблочный сад\n\
											"P"5."W" Зарплата лесопилка\n\
											"P"6."W" Зарплата в алькатрасе\n\
											"P"7."W" Налогообложение бизнесов\n\
											"P"8."W" Налоги заработных плат гос.структур\n\
											"P"9."W" Заработные платы\n\
											"P"10."W" Переводы денежных средств организациям\n\
											"P"11."W" Управление пенсией\n\
											"P"12."W" Пополнить казну\n\
											"P"13."W" Снять деньги с казны","Выбрать","Отмена");
			}
			case 19: {
				if(!TI[playerid][tJobGun][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"сборщик оружия?\n"W"Стоимость сборки 1 ящика - "GREEN"$%d\n"W"Примерное время работы - "P"25 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[0]);
					D(playerid,D_JOB_GUNS,DSM, ""P"Сборщик оружия",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_GUNS,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
			case 20: {
				if(!TI[playerid][tJobGun][0]) return 1;
				if(TI[playerid][tJobGun][1] != 1 || TI[playerid][tJobGun][2]) return 1;
				SendOk(playerid,"Вы взяли заготовку. Пройдите к свободному столу, для сборки оружия");
				new objectmodel = GunWorkWeapon[Random(0,6)];
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,objectmodel,6);
				SetPVarInt(playerid,"pgunmodel",objectmodel);
				TI[playerid][tJobGun][1] = 2;
			}
			case 21: {
				if(!TI[playerid][tJobOil][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"нефтяника?\n"W"Стоимость переноса 1 бочки - "GREEN"$%d\n"W"Примерное время работы - "P"1мин 10 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[1]);
					D(playerid,D_JOB_OIL,DSM, ""P"Нефте-Завод",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_OIL,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
			case 22: {
				if(!TI[playerid][tJobSad][0]) return 1;
				if(GetPVarInt(playerid,"bailer_1") == 1) return ErrorMessage(playerid,"У Вас в руках лейка");
				if(GetPVarInt(playerid,"bailer_2") == 1 || GetPVarInt(playerid,"bailer_3") == 1) return ErrorMessage(playerid,"Вы уже взяли ящик");
				SetPlayerAttachedObject(playerid, 4, 19639, 5, 0.342999,-0.158999,0.041999, 0.000000,177.799957,-0.300001, 1.000000,0.520000,0.699000);
				SetPVarInt(playerid,"bailer_2",1);
			}
			case 23: {
				if(!TI[playerid][tJobSad][0]) return ErrorMessage(playerid,"Необходимо надеть рабочую форму");
				if(GetPVarInt(playerid,"bailer") == 1) return ErrorMessage(playerid,"Вы уже взяли лейку");
				SetPlayerAttachedObject(playerid, 7, 19621, 6, 0.068000, 0.040999, 0.001000, 0.000000, 0.000000, 94.299972, 1.000000, 1.000000, 1.000000); //
				SetPVarInt(playerid,"bailer",1);
			}
			case 24: {
				if(!TI[playerid][tJobSad][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу в "ORANGE"яблочневом саду?\n"W"Стоимость сбора яблок с 1 дерева - "GREEN"$%d/кг\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[3]);
					D(playerid,D_JOB_SAD,DSM, ""P"Яблочневый сад",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_SAD,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
			case 25: {
				D(playerid,D_MAYOR,DSL,""P"Информация","\
											"P"1."W" Информация о налогах\n\
											"P"2."W" Пожертвовать деньги в казну\n\
											"P"3."W" Самые щедрые жители","Выбрать","Отмена");
			}
			case 26: {
				if(!IsACop(playerid) || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
			case 27: {
				if(GetTeamID(playerid) != fFBI || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
			case 28: {
				if(!IsAArm(playerid) || !start_work[playerid]) return 1;
				switch(GetPlayerVirtualWorld(playerid)) {
					case 30: if(FI[fARMYLV][fMats] < 100) return ErrorMessage(playerid,"Недостаточно боеприпасов");
					case 31: if(FI[fARMYSF][fMats] < 100) return ErrorMessage(playerid,"Недостаточно боеприпасов");
					case 35: if(zavodsklad < 100) return ErrorMessage(playerid,"Недостаточно боеприпасов");
				}
				if(GunTickGet[playerid][0] > unix) return ErrorMessage(playerid,"Нельзя брать оружие слишком часто");
				switch(GetPlayerVirtualWorld(playerid)) {
					case 30: FI[fARMYLV][fMats] -= 100,UpdateFraction(fARMYLV,"Mats",FI[fARMYLV][fMats]);
					case 31: FI[fARMYSF][fMats] -= 100,UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
					case 35: zavodsklad -= 100;
				}
				GunTickGet[playerid][0] = unix+20;
				AC_GivePlayerWeapon(playerid,31,150);
				AC_GivePlayerWeapon(playerid,24,30);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid,100);
				SetFullness(playerid, 100);
				SendOk(playerid,"Вам выдано: M4(150пт), Deagle(30пт), бронежилет, сух.паек");
			}
			case 29: {
				new string[128];
				format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
				D(playerid,D_VEH_NUMBER,DSL,""P"Покупка гос. номера",string,"Выбрать","Закрыть");
			}
			case 30: {
				if(TI[playerid][tClothesWork][1] != 1) return 1;
				SendOk(playerid,"Вы взяли заготовку. Пройдите к свободному столу, для пошива одежды");
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 2384, 5,  0.100000, 0.100000, 0.200000,  100.000000, 170.0, 100.000000,  1.000000, 1.000000, 1.000000); // 155
				TI[playerid][tClothesWork][1] = 2;
			}
			case 31: {
				if(TI[playerid][tClothesWork][1] != 3) return 1;
				if(GetPVarInt(playerid,"pOff9") > gettime()) return 1;
				ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
				SetPVarInt(playerid,"zp_clothes",GetPVarInt(playerid,"zp_clothes") + WorkSalary[2]);

				new string[24];
				format(string,sizeof(string),"MONEY:_$%d",GetPVarInt(playerid,"zp_clothes"));
				PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 8))RemovePlayerAttachedObject(playerid,8);
				TI[playerid][tClothesWork][1] = 1;
			}
			case 32: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PI[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛС");
				if(pick == 32 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 60 && PI[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Вы не состоите в Армии г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Вы не состоите в Армии г. СФ");
				if(pick == 36 && vw == 10 && PI[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 37 && PI[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Вы не состоите в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 33: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PI[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛС");
				if(pick == 32 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 60 && PI[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Вы не состоите в Армии г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Вы не состоите в Армии г. СФ");
				if(pick == 36 && vw == 10 && PI[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 37 && PI[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Вы не состоите в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 34: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PI[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛС");
				if(pick == 32 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 60 && PI[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Вы не состоите в Армии г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Вы не состоите в Армии г. СФ");
				if(pick == 36 && vw == 10 && PI[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 37 && PI[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Вы не состоите в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 35: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PI[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛС");
				if(pick == 32 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 60 && PI[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Вы не состоите в Армии г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Вы не состоите в Армии г. СФ");
				if(pick == 36 && vw == 10 && PI[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 37 && PI[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Вы не состоите в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 36: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PI[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛС");
				if(pick == 32 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 60 && PI[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Вы не состоите в Армии г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Вы не состоите в Армии г. СФ");
				if(pick == 36 && vw == 10 && PI[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 37 && PI[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Вы не состоите в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 37: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PI[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛС");
				if(pick == 32 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				if(pick == 33 && PI[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Вы не состоите в ФБР");
				if(pick == 34 && vw == 20 && PI[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛС");
				if(pick == 34 && vw == 21 && PI[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Вы не состоите в Больнице г. СФ");
				if(pick == 34 && vw == 22 && PI[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Вы не состоите в Больнице г. ЛВ");
				if(pick == 35 && vw == 60 && PI[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Вы не состоите в Армии г. ЛВ");
				if(pick == 35 && vw == 59 && PI[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Вы не состоите в Армии г. СФ");
				if(pick == 36 && vw == 10 && PI[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛС");
				if(pick == 36 && vw == 11 && PI[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. СФ");
				if(pick == 36 && vw == 12 && PI[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Вы не состоите в Радиоцентре г. ЛВ");
				if(pick == 37 && PI[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Вы не состоите в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 38: return D(playerid,D_FAMILY_CREATE_2,DSL, ""P"Семьи",""P"1."W" ТОП Семей\n"P"2."W" Создание семьи","Выбрать","Отмена");
			case 39:
			{
				return ErrorMessage(playerid,"Поединки в разработке");
				/*static const f_str[] = ""W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n";
				new string[512];
				new name[25];
				if(RingInfo[0][rgPlayer][0] == -1) name = "None";
				else name = player_name[RingInfo[0][rgPlayer][0]];
				new name1[25];
				if(RingInfo[0][rgPlayer][1] == -1) name1 = "None";
				else name1 = player_name[RingInfo[0][rgPlayer][1]];

				new name2[25];
				if(RingInfo[1][rgPlayer][0] == -1) name2 = "None";
				else name2 = player_name[RingInfo[1][rgPlayer][0]];
				new name3[25];
				if(RingInfo[1][rgPlayer][1] == -1) name3 = "None";
				else name3 = player_name[RingInfo[1][rgPlayer][1]];

				new name4[25];
				if(RingInfo[2][rgPlayer][0] == -1) name4 = "None";
				else name4 = player_name[RingInfo[2][rgPlayer][0]];
				new name5[25];
				if(RingInfo[2][rgPlayer][1] == -1) name5 = "None";
				else name5 = player_name[RingInfo[2][rgPlayer][1]];

				new name6[25];
				if(RingInfo[3][rgPlayer][0] == -1) name6 = "None";
				else name6 = player_name[RingInfo[3][rgPlayer][0]];
				new name7[25];
				if(RingInfo[3][rgPlayer][1] == -1) name7 = "None";
				else name7 = player_name[RingInfo[3][rgPlayer][1]];

				new name8[25];
				if(RingInfo[4][rgPlayer][0] == -1) name8 = "None";
				else name8 = player_name[RingInfo[4][rgPlayer][0]];
				new name9[25];
				if(RingInfo[4][rgPlayer][1] == -1) name9 = "None";
				else name9 = player_name[RingInfo[4][rgPlayer][1]];

				format(string,sizeof(string),f_str,name,name1,name2,name3,name4,name5, name6,name7,name8,name9);
				return D(playerid,DIALOG_NONE,DSM, ""P"Информация",string,"Скрыть","");*/
			}
			case 40: {
				if(PI[playerid][pMember] != fWHITEHOUSE || !start_work[playerid]) return 1;
				if(PI[playerid][pRank] != 3 && PI[playerid][pRank] != 4) return ErrorMessage(playerid,"Доступно только охранникам");
				if(GunTickGet[playerid][0] > unix) return ErrorMessage(playerid,"Нельзя брать оружие слишком часто");
				GunTickGet[playerid][0] = unix+20;
				AC_GivePlayerWeapon(playerid,24,30);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid,100);
				SetFullness(playerid, 100);
				SendOk(playerid,"Вам выдано: Deagle(30пт), бронежилет, сух.паек");
			}
			case 41: {
				if(!TI[playerid][tJobWood][0]) {
					static const f_str[] = "\n\n"W"Вы действительно хотите начать работу "ORANGE"лесоруб?\n"W"Стоимость спила 1 дерева - "GREEN"$%d\n"W"Примерное время работы - "P"30 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[4]);
					D(playerid,D_JOB_WOOD,DSM, ""P"Лесопилка",string,"Да","Нет");
				}
				else {
					static const f_str[] = "\n\n"W"Вы хотите закончить работу и забрать "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_WOOD,DSM, ""P"Завершение работы",string,"Да","Нет");
				}
			}
			case 42: return D(playerid, D_GAME_GOLOD, DSL, ""P"Голодные игры",""P"1."W" Регистрация на голодные игры\n"P"2."W" Информация о данном мероприятии", "Выбрать", "Закрыть");
			case 43: {
				if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Вы не агент FBI");
				if(TI[playerid][tMasked]) {
					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
					TI[playerid][tMasked] = 0;
					return 1;
				}
				if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с должности Агент FBI");
				new string[1024];
				for(new i = 1;i < MAX_FRACTIONS;i ++) {
					if(i == fFBI) continue;
					if(i == fINSTRUCTORS) continue;
					format(string,sizeof(string),"%s%s\n", string, FI[i][fName]);
				}
				D(playerid, D_SPY, DSL, ""P"Выберите фракцию", string, "Выбрать", "Закрыть");
			}
			case 44: {
				switch(pick) {
					case 44: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 45: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 46: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 47: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 48: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк банды\n"P"2."W" Снять деньги с банка банды\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие\n"P"8."W" Заказать наркотики", "Выбрать", "Закрыть");
			}
			case 45: {
				switch(pick) {
					case 44: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 45: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 46: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 47: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 48: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк банды\n"P"2."W" Снять деньги с банка банды\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие\n"P"8."W" Заказать наркотики", "Выбрать", "Закрыть");
			}
			case 46: {
				switch(pick) {
					case 44: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 45: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 46: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 47: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 48: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк банды\n"P"2."W" Снять деньги с банка банды\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие\n"P"8."W" Заказать наркотики", "Выбрать", "Закрыть");
			}
			case 47: {
				switch(pick) {
					case 44: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 45: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 46: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 47: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 48: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк банды\n"P"2."W" Снять деньги с банка банды\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие\n"P"8."W" Заказать наркотики", "Выбрать", "Закрыть");
			}
			case 48: {
				switch(pick) {
					case 44: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 45: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 46: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 47: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 48: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк банды\n"P"2."W" Снять деньги с банка банды\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада\n"P"7."W" Взять оружие\n"P"8."W" Заказать наркотики", "Выбрать", "Закрыть");
			}
			case 49: {
				switch(GetPlayerVirtualWorld(playerid)) {
					case 49: if(PI[playerid][pMember] != fLCN) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					//case 50: if(PI[playerid][pMember] != fYAKUZA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				if(IsAMafia(playerid)) return D(playerid,D_MAFIA_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк мафии\n"P"2."W" Снять деньги с банка мафии\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада", "Выбрать", "Закрыть");
			}
			case 50: return bank_dialog(playerid);
			case 51: return bank_dialog(playerid);
			case 52: return D(playerid,D_BANK_OPLATA,DSL,""P"Оплата недвижимости",""P"1."W" Дом\n"P"2."W" Бизнес\n"P"3."W" Отель\n"P"4."W" Аэропорт","Выбрать","Отмена");
			case 53: return GetTickets(playerid);
			case 54: {
				new houseid = TI[playerid][tSelectHouse];
				SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				TI[playerid][tInHouse] = true;
			}
			case 55: {
				new houseid = TI[playerid][tSelectHouse];
				SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				TI[playerid][tInHouse] = true;
			}
			case 56: {
				new houseid = TI[playerid][tSelectHouse];
				SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				TI[playerid][tInHouse] = true;
			}
			case 57: {
				new houseid = TI[playerid][tSelectHouse];
				SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				TI[playerid][tInHouse] = true;
			}
			case 58:
			{
				switch(GetPlayerVirtualWorld(playerid))
				{
					case 1:
					{
					    SetPVarInt(playerid, "PageAutoSalonWorld", GetPlayerVirtualWorld(playerid));
					    
					    new autosalonstr[1024];
						format(autosalonstr, sizeof(autosalonstr), "\
							"P"%s №%d, 1-ый этаж", gBusiness[TI[playerid][tSelectedBusinessID]][bizzName], TI[playerid][tSelectedBusinessID]);
							
						D(playerid,D_AUTOSALON,DSL,autosalonstr,"2 этаж\nВыход","Перейти","Отмена");
					}
					case 2:
					{
					    new autosalonstr[1024];
						format(autosalonstr, sizeof(autosalonstr), "\
							"P"%s №%d, 2-ой этаж", gBusiness[TI[playerid][tSelectedBusinessID]][bizzName], TI[playerid][tSelectedBusinessID]);
							
						D(playerid,D_AUTOSALON,DSL,autosalonstr,"1 этаж\nВыход","Перейти","Отмена");
					}
					case 3:
					{
					    new autosalonstr[1024];
						format(autosalonstr, sizeof(autosalonstr), "\
							"P"%s №%d, 1-ый этаж", gBusiness[TI[playerid][tSelectedBusinessID]][bizzName], TI[playerid][tSelectedBusinessID]);
							
						D(playerid,D_AUTOSALON,DSL,autosalonstr,"2 этаж\nВыход","Перейти","Отмена");
					}
					case 4:
					{
					    new autosalonstr[1024];
						format(autosalonstr, sizeof(autosalonstr), "\
							"P"%s №%d, 2-ой этаж", gBusiness[TI[playerid][tSelectedBusinessID]][bizzName], TI[playerid][tSelectedBusinessID]);
							
						D(playerid,D_AUTOSALON,DSL,autosalonstr,"1 этаж\nВыход","Перейти","Отмена");
					}
					case 5..6:
					{
					    new autosalonstr[1024];
						format(autosalonstr, sizeof(autosalonstr), ""P"%s №%d", gBusiness[TI[playerid][tSelectedBusinessID]][bizzName], TI[playerid][tSelectedBusinessID]);
						D(playerid,D_AUTOSALON_MOTO,DSL,autosalonstr,"Выход","Перейти","Отмена");
					}
					default:
					{
					    if(BuySalonStatus[playerid] == 1)
						{
						    new autosalonstr[1024];
							format(autosalonstr, sizeof(autosalonstr), ""P"%s №%d", gBusiness[TI[playerid][tSelectedBusinessID]][bizzName], TI[playerid][tSelectedBusinessID]);
							D(playerid,D_AUTOSALON_BUY,DSL,autosalonstr,"Вернуться в салон\nВыход","Перейти","Отмена");
						}
					}
				}
			}
			case 59: return D(playerid, D_GAME_RACE, DSL, ""P"Гонки",""P"1."W" Регистрация на гонки\n"P"2."W" Информация о данном мероприятии", "Выбрать", "Закрыть");
			case 60: {
				SetPlayerPosAC(playerid,152.0760,-533.1956,-75.0400,GetPVarInt(playerid, "selectedhotel"),101);
				SetPlayerFacingAngle(playerid,270.1898);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
			}
			case 61: {
				SetPlayerPosAC(playerid,719.2870,599.6630,1002.9598,GetPVarInt(playerid, "selectedhotel"),79);
				SetPlayerFacingAngle(playerid,268.3608);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
			}
			case 62: {
				switch(pick) {
					case 62: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 63: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 64: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 65: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 66: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
				}
				if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
					ErrorMessage(playerid,str);
					return 1;
				}
				if(!FI[GetTeamID(playerid)][fHealth]) return ErrorMessage(playerid,"На складе недостаточно аптечек");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return ErrorMessage(playerid,"Брать аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return ErrorMessage(playerid,"Вы здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetPlayerHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[GetTeamID(playerid)][fHealth] --;
				UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
				
	         	format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
			case 63: {
				switch(pick) {
					case 62: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 63: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 64: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 65: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 66: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
				}
				if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
					ErrorMessage(playerid,str);
					return 1;
				}
				if(!FI[GetTeamID(playerid)][fHealth]) return ErrorMessage(playerid,"На складе недостаточно аптечек");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return ErrorMessage(playerid,"Брать аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return ErrorMessage(playerid,"Вы здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetPlayerHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[GetTeamID(playerid)][fHealth] --;
				UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

	         	format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
			case 64: {
				switch(pick) {
					case 62: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 63: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 64: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 65: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 66: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
				}
				if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
					ErrorMessage(playerid,str);
					return 1;
				}
				if(!FI[GetTeamID(playerid)][fHealth]) return ErrorMessage(playerid,"На складе недостаточно аптечек");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return ErrorMessage(playerid,"Брать аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return ErrorMessage(playerid,"Вы здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetPlayerHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[GetTeamID(playerid)][fHealth] --;
				UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

	         	format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
			case 65: {
				switch(pick) {
					case 62: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 63: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 64: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 65: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 66: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
				}
				if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
					ErrorMessage(playerid,str);
					return 1;
				}
				if(!FI[GetTeamID(playerid)][fHealth]) return ErrorMessage(playerid,"На складе недостаточно аптечек");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return ErrorMessage(playerid,"Брать аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return ErrorMessage(playerid,"Вы здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetPlayerHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[GetTeamID(playerid)][fHealth] --;
				UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

	         	format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
			case 66: {
				switch(pick) {
					case 62: if(PI[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 63: if(PI[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 64: if(PI[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 65: if(PI[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
					case 66: if(PI[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У Вас нет доступа к этой аптечки");
				}
				if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
				if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
					ErrorMessage(playerid,str);
					return 1;
				}
				if(!FI[GetTeamID(playerid)][fHealth]) return ErrorMessage(playerid,"На складе недостаточно аптечек");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return ErrorMessage(playerid,"Брать аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return ErrorMessage(playerid,"Вы здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetPlayerHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[GetTeamID(playerid)][fHealth] --;
				UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];

	         	format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
			case 67: IsPlayerShootingBox(playerid, 6, pick);
			case 68: {
				if(!TI[playerid][tTir]) return ErrorMessage(playerid,"У Вас нету пропуска в тир");
				SetPVarInt(playerid, "shootingpl",pick);
				if(!ShootingStart[playerid]) {
					return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите начать тренировку?", "Да", "Нет");
				}
				else return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите закончить тренировку?", "Да", "Нет");
			}
			case 69: {
				if(!TI[playerid][tTir]) return ErrorMessage(playerid,"У Вас нету пропуска в тир");
				SetPVarInt(playerid, "shootingpl",pick);
				if(!ShootingStart[playerid]) {
					return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите начать тренировку?", "Да", "Нет");
				}
				else return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите закончить тренировку?", "Да", "Нет");
			}
			case 70: {
				if(!TI[playerid][tTir]) return ErrorMessage(playerid,"У Вас нету пропуска в тир");
				SetPVarInt(playerid, "shootingpl",pick);
				if(!ShootingStart[playerid]) {
					return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите начать тренировку?", "Да", "Нет");
				}
				else return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите закончить тренировку?", "Да", "Нет");
			}
			case 71: IsPlayerShootingBox(playerid, 18, pick);
			case 72: IsPlayerShootingBox(playerid, 19, pick);
			case 73: IsPlayerShootingBox(playerid, 20, pick);
			case 74: IsPlayerShootingBox(playerid, 21, pick);
			case 75: IsPlayerShootingBox(playerid, 22, pick);
			case 76: IsPlayerShootingBox(playerid, 1, pick);
			case 77: IsPlayerShootingBox(playerid, 2, pick);
			case 78: IsPlayerShootingBox(playerid, 7, pick);
			case 79: {
				if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
				ghetto_info(playerid);
			}
			case 80: {
				if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
				ghetto_info(playerid);
			}
			case 81: {
				if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
				ghetto_info(playerid);
			}
			case 82: {
				if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
				ghetto_info(playerid);
			}
			case 83: {
				if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
				ghetto_info(playerid);
			}
			case 84: {
				if(!TI[playerid][tJobWood][1]) return 1;
		        ClearAnimations(playerid);
		        RemovePlayerAttachedObject(playerid,9);
		        DisablePlayerCheckpoint(playerid);
		        TI[playerid][tJobWood][1] = 0;
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		        SetPlayerAttachedObject(playerid,8,341,6);
		        
		        if(pick == 84) {
		        	new obj = CreateDynamicObject(1463,-539.6312, -1584.1210, 10.3435, 0.00000, 0.00000, 0.00000);
			        SetGVarInt("WoodConv",1,obj);
			        MoveDynamicObject(obj,-539.6312, -1581.4810, 10.3435,1,0.00000, 0.00000, 0.00000);
		        }
		        else if(pick == 85) {
		        	new obj = CreateDynamicObject(1463,-531.6816, -1584.0610, 10.3435,   0.00000, 0.00000, 0.00000);
			        SetGVarInt("WoodConv",1,obj);
			        MoveDynamicObject(obj,-531.6816, -1581.4810, 10.3435,1,0.00000, 0.00000, 00.00000);
		        }
		        TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] += WorkSalary[4];
				new string[24];
				format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
				PlayerTextDrawSetString(playerid,work_td[playerid][1],string);

				new rand = random(sizeof(Woods));
				EnableGPSForPlayer(playerid, Woods[rand][woodObjectPosX],Woods[rand][woodObjectPosY],Woods[rand][woodObjectPosZ]);

				if(QuestProgress[playerid][4] < 20 && AcceptQuest[playerid][4] != 0) QuestProgress[playerid][4] ++,save_quest(playerid,4);
				if(QuestProgress[playerid][4] == 20 && AcceptQuest[playerid][4] != 0) {
					D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно нарубили и перенесли 20ед древесины. Данное задание можно завершить и забрать за него награду","Закрыть","");
					NextStapQI(playerid,4);
				}
		    }
			case 85: {
				if(!TI[playerid][tJobWood][1]) return 1;
		        ClearAnimations(playerid);
		        RemovePlayerAttachedObject(playerid,9);
		        DisablePlayerCheckpoint(playerid);
		        TI[playerid][tJobWood][1] = 0;
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		        SetPlayerAttachedObject(playerid,8,341,6);
		        if(pick == 84) {
		        	new obj = CreateDynamicObject(1463,-539.6312, -1584.1210, 10.3435, 0.00000, 0.00000, 0.00000);
			        SetGVarInt("WoodConv",1,obj);
			        MoveDynamicObject(obj,-539.6312, -1581.4810, 10.3435,1,0.00000, 0.00000, 0.00000);
		        }
		        else if(pick == 85) {
		        	new obj = CreateDynamicObject(1463,-531.6816, -1584.0610, 10.3435,   0.00000, 0.00000, 0.00000);
			        SetGVarInt("WoodConv",1,obj);
			        MoveDynamicObject(obj,-531.6816, -1581.4810, 10.3435,1,0.00000, 0.00000, 00.00000);
		        }
		        TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] += WorkSalary[4];
				new string[24];
				format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
				PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
				
    			new rand = random(sizeof(Woods));
				EnableGPSForPlayer(playerid, Woods[rand][woodObjectPosX],Woods[rand][woodObjectPosY],Woods[rand][woodObjectPosZ]);

				if(QuestProgress[playerid][4] < 20 && AcceptQuest[playerid][4] != 0) QuestProgress[playerid][4] ++,save_quest(playerid,4);
				if(QuestProgress[playerid][4] == 20 && AcceptQuest[playerid][4] != 0) {
					D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно нарубили и перенесли 20ед древесины. Данное задание можно завершить и забрать за него награду","Закрыть","");
					NextStapQI(playerid,4);
				}
		    }
			case 86: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 86 && vw == 40 && PI[playerid][pMember] != fSFPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. СФ");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 87: {
				new string[128];
				format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
				D(playerid,D_VEH_NUMBER,DSL,""P"Покупка гос. номера",string,"Выбрать","Закрыть");
			}
			case 88: {
				if(!PI[playerid][pSearch]) return ErrorMessage(playerid,"Вы не находитесь в розыске");
				static const f_str[] = ""W"Вы собираетесь сдаться с повинной\n\
										Это укоротит Ваш срок вдвое\n\
										Ваш уровень розыска: "P"%d\n\
										"W"Примерное время заключения: "P"%d сек\n\
										"W"При добровольной сдаче время заключения составит: "GREEN"%d сек\n\n\
										"YELLOW"Вы действительно хотите сдаться добровольно?";
				new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 4) + (-2 + 5)];
				format(string,sizeof(string),f_str,PI[playerid][pSearch],PI[playerid][pSearch]*600,PI[playerid][pSearch]*600/2);
				D(playerid,D_COP_ARREST,DSM, ""P"Сдача с повинной",string,"Да","Отмена");
			}
			case 89: {
				if(!IsACop(playerid) || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
			case 90:
			{
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 90 && vw == 44 && PI[playerid][pMember] != fMAYOR) return ErrorMessage(playerid,"Вы не состоите в Мэрии г. ЛС");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 91: {
				if(!IsAMayor(playerid) || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
			case 92:
			{
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 92 && vw == 45 && PI[playerid][pMember] != fINSTRUCTORS) return ErrorMessage(playerid,"Вы не состоите в Автошколе");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 93: {
				switch(GetPlayerVirtualWorld(playerid)) {
					//case 50: if(PI[playerid][pMember] != fYAKUZA) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
					case 51: if(PI[playerid][pMember] != fRM) return ErrorMessage(playerid,"У Вас нет доступа к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складе недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				if(IsAMafia(playerid)) return D(playerid,D_MAFIA_STOCK,DSL,""P"Склад",""P"1."W" Положить деньги в банк мафии\n"P"2."W" Снять деньги с банка мафии\n"P"3."W" Положить боеприпасы на склад\n"P"4."W" Взять боеприпасы со склада\n"P"5."W" Положить наркотики на склад\n"P"6."W" Взять наркотики со склада", "Выбрать", "Закрыть");
			}
			case 94: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 94 && vw == 42 && PI[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Вы не состоите в Полиции г. ЛВ");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Вы действительно хотите %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"начать") : (""ORANGE"закончить"));
				D(playerid,D_WORK,DSM, ""P"Раздевалка",string,"Да","Нет");
			}
			case 95: {
				new string[128];
				format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
				D(playerid,D_VEH_NUMBER,DSL,""P"Покупка гос. номера",string,"Выбрать","Закрыть");
			}
			case 96: {
				if(!PI[playerid][pSearch]) return ErrorMessage(playerid,"Вы не находитесь в розыске");
				static const f_str[] = ""W"Вы собираетесь сдаться с повинной\n\
										Это укоротит Ваш срок вдвое\n\
										Ваш уровень розыска: "P"%d\n\
										"W"Примерное время заключения: "P"%d сек\n\
										"W"При добровольной сдаче время заключения составит: "GREEN"%d сек\n\n\
										"YELLOW"Вы действительно хотите сдаться добровольно?";
				new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 4) + (-2 + 5)];
				format(string,sizeof(string),f_str,PI[playerid][pSearch],PI[playerid][pSearch]*600,PI[playerid][pSearch]*600/2);
				D(playerid,D_COP_ARREST,DSM, ""P"Сдача с повинной",string,"Да","Отмена");
			}
			case 97: {
				if(!IsACop(playerid) || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
		}
	}
	else if(gHouseArea[0] <= areaid <= gHouseArea[gHouseCount-1] && pstate == PLAYER_STATE_ONFOOT)
    {
  		if(TI[playerid][tTPpick])
 		{
			TI[playerid][tTPpick] = false;
			return 1;
		}

		for(new houseid = 1; houseid < gHouseCount; houseid++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]))
   			{
   			    new classname[20], mes2[200];
   			    
				if(houseid < 0) return SendClientMessage(playerid,COLOR_GREY,"Ошибка (#100)");
				
				TI[playerid][tSelectHouse] = houseid;

				//TI[playerid][tTPpick] = true;

				switch(gHouses[houseid][houseClass])
				{
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
				}
				if(GetString(gHouses[houseid][houseOwner], "None"))
				{
					format(mes2,sizeof(mes2),""W"Цена: "ORANGE"$%d\n"W"Класс: "P"%s\n"W"Номер дома: "P"№%d", gHouses[houseid][housePrice], classname, houseid);
					D(playerid,D_HOUSE,DSM, ""P"Дом",mes2,"Купить","Отмена");
				}
				else
				{
					format(mes2,sizeof(mes2),""W"Владелец: "ORANGE"%s\n"W"Дом: "P"№%d\n"W"Класс: "P"%s", gHouses[houseid][houseOwner], houseid, classname);
					D(playerid,D_HOUSE,DSM, ""P"Дом",mes2,"Войти","Отмена");
				}
			}
		}
	}
	else if(areaid >= gHotelArea[0] && areaid <= gHotelArea[HOTEL_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new otelid=areaid - gHotelArea[0];
		if(otelid == -1) return true;
		SetPVarInt(playerid,"selectedhotel",otelid);
		if(!gHotels[otelid][hotelOwnerID])
		{
			new string[128];
			format(string,sizeof(string),""W"Данный отель продается за "GREEN"$%d",gHotels[otelid][hotelPrice]);
			D(playerid,D_HOTEL_BUY,DSM, ""P"Отель",string,"Купить","Войти");
		}
		else
		{
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 725.0227, 594.9494, 1002.9598, otelid, 79);
			SetPlayerFacingAngle(playerid, 360.0);
			SetCameraBehindPlayer(playerid);
			gHotels[otelid][hotelVisitors]++;
			UpdateHotelData(otelid+1,"visitors",gHotels[otelid][hotelVisitors]);
			OnPlayerUpdateLoadingMode(playerid);
		}
	}
	else if(areaid >= gAirArea[0] && areaid <= gAirArea[AIR_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new airs=areaid - gAirArea[0];
		if(airs == -1) return true;
		SetPVarInt(playerid,"selectedair",airs);
		if(!gAirs[airs][airOwnerID]) {
			new string[128];
			format(string,sizeof(string),""W"Данный аэропорт продается за "GREEN"$%d",gAirs[airs][airPrice]);
			D(playerid,D_AIRPORT_BUY,DSM, ""P"Аэропорт",string,"Купить","Отмена");
			return 1;
		}
		if(GetString(player_name[playerid],gAirs[airs][airOwner])) D(playerid,D_AIRPORT,DSL,""P"Аэропорт",""P"1."W" Баланс аэропорта\n"P"2."W" Снять деньги\n"P"3."W" Статистика аэропорта\n"P"4."W" Установить цену за аренду\n"P"5."NO" Продать аэропорт","Выбрать","Отмена");
	}
    else if(b_area[0] <= areaid <= b_area[gBusinessCount-1] && pstate == PLAYER_STATE_ONFOOT)
    {
  		if(TI[playerid][tTPpick])
 		{
			TI[playerid][tTPpick] = false;
			return 1;
		}	
		
		for(new businessid = 1; businessid < gBusinessCount; businessid++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, gBusiness[businessid][bizzX], gBusiness[businessid][bizzY], gBusiness[businessid][bizzZ]))
   			{
				new mes2[128];

				if(businessid < 0) return SendClientMessage(playerid,COLOR_GREY,"Ошибка (#100)");

				if(!gBusiness[businessid][bizzStatus]) return true;

				TI[playerid][tSelectedBusinessID] = businessid;

				if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 7) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 11) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 14) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 15)) {
					format(mes2,sizeof(mes2),""W"Данный бизнес продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Войти");
				}
				else
				{
					if(gBusiness[businessid][bizzType] == 8)
					{
					    if(IsPlayerInRangeOfPoint(playerid,10.0, 2475.11, -726.617, 12.3)) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0;
						if(IsPlayerInRangeOfPoint(playerid,10.0, 2328.85, -1804.16, 22.454)) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 2;
						if(IsPlayerInRangeOfPoint(playerid,10.0, 391.207, 789.493, 12.00)) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 4;
						if(IsPlayerInRangeOfPoint(playerid,10.0, 2135.81, -1802.5, 19.9079)) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 5;
						return D(playerid,dBuyCarSalon,DSM, ""P"Автосалон","\n\n"W"Вы хотите посмотреть список машин?\n\n","Да","Нет");
					}
					else
					{
						if(gBusiness[businessid][bizzEnter] && gBusiness[businessid][bizzOwnerID] != PI[playerid][pID])
						{
							new string[128];
							format(string,sizeof(string),""W"Стоимость входа "GREEN"$%d",gBusiness[businessid][bizzEnter]);
							D(playerid,D_BIZZ_ENTERS,DSM, ""P"Бизнес",string,"Войти","Отмена");
							return 1;
						}
						else
						{
						    D(playerid,dBizzEnter,DSM, ""P"Бизнес","\n\n"W"Вы дейстительно хотите войти в данный бизнес?\n\n","Да","Нет");
						}
					}
				}
			}
		}
	}
	else if(areaid >= car_pickup[0] && areaid <= car_pickup[78-1])
	{
		new carid = areaid - car_pickup[0];
		new model = autosaloncar[carid][autoCars];
		new modelid = model - 400;
		new classname[10]; 
		switch(autosaloncar[carid][autoClass]) {
			case 0: strcat(classname,"эконом");
			case 1: strcat(classname,"стандарт");
			case 2: strcat(classname,"спорт");
			case 3: strcat(classname,"мото");
		}
		SetPVarInt(playerid,"car_number",modelid);

		new price;
		if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(gTransport[modelid][trPrice]/100*vip_status[PI[playerid][pVips]][vip_buycar]);
			price = gTransport[modelid][trPrice]-seller;
		}
		else {
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(gTransport[modelid][trPrice]/100*BonusInfo[act_buycar]);
				price = gTransport[modelid][trPrice]-seller;
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(gTransport[modelid][trPrice]/100*BonusInfo[act_buycar]);
				price = gTransport[modelid][trPrice]-seller;
			}
		    else price = gTransport[modelid][trPrice];
		}

		new string[256];
		format(string,sizeof(string),""W"Название автомобиля: "P"%s "W"[%s класс]\n\n\
										"W"Цена автомобиля: "GREEN"$%d\n\
										"W"Вместимость бензобака: "O"%d\n\
										"W"Расход топлива на 100 КМ: "O"%d",gTransport[modelid][trName],
										classname,price,gTransport[modelid][trTank],gTransport[modelid][trConsumption]);
		D(playerid,D_BUY_CAR,DSM, ""P"Информация",string,"Купить","Отмена");
		return 1;
	}
	else if(gBintEnterArea[0] <= areaid <= gBintEnterArea[BINT_COUNT-1] && pstate == PLAYER_STATE_ONFOOT)
	{
	    if(TI[playerid][tTPpick])
 		{
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new id = TI[playerid][tSelectedBusinessID], vw, int;

		if(gBusiness[id][bizzType] == 13 && TI[playerid][tGym]) return ErrorMessage(playerid,"Необходимо закончить тренировку");
		else
		{
			switch(gBusiness[id][bizzType])
			{
				case 15: vw = 46,int = 78;
				default: vw = 0,int = 0;
			}

			TI[playerid][tTPpick] = true;

			SetPlayerPosAC(playerid,gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ],vw,int);
			SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);

			SetCameraBehindPlayer(playerid);

			OnPlayerUpdateLoadingMode(playerid);
		}
	}
	else if(gBintBuyArea[0] <= areaid <= gBintBuyArea[BINT_COUNT-1] && pstate == PLAYER_STATE_ONFOOT)
	{
	    if(TI[playerid][tTPpick])
 		{
			TI[playerid][tTPpick] = false;
			return 1;
		}

		new id = TI[playerid][tSelectedBusinessID];

		new products = gBusiness[id][bizzProduct];
		if(!products) return ErrorMessage(playerid,"К сожалению, товара не осталось");
		new type = gBusiness[id][bizzType];
		switch(type) {
			case 1: show_tavern(playerid,id);// закусочная
			case 2:	show_24(playerid,id);
			case 3..4: {
			    new string[128];
				format(string,sizeof(string),"Наименование\tСтоимость\nПиво \t$%d\nВодка \t$%d\nШампанское \t$%d\nВино \t$%d\nТекила \t$%d\nКоньяк \t$%d", gBusiness[id][bizzPrice] * 10 * gBarCosts[0],gBusiness[id][bizzPrice] * 10 * gBarCosts[1],gBusiness[id][bizzPrice] * 10 * gBarCosts[2],gBusiness[id][bizzPrice] * 10 * gBarCosts[3],gBusiness[id][bizzPrice] * 10 * gBarCosts[4],gBusiness[id][bizzPrice] * 10 * gBarCosts[5]);
				D(playerid, D_BIZZ_BAR, DSTH, "Меню", string, "Купить", "Отмена");
			}
			case 5: {
		  		if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				else {
					if(GetPVarInt(playerid,"ChangingSkin") == 0) {
						SetPVarInt(playerid,"ChangingSkin",1);
						new Float: pos[4];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerFacingAngle(playerid, pos[3]);
						SetPVarFloat(playerid, "posx", pos[0]);
						SetPVarFloat(playerid, "posy", pos[1]);
						SetPVarFloat(playerid, "posz", pos[2]);
						SetPVarFloat(playerid, "posa", pos[3]);
						SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
						TogglePlayerControllable(playerid, 0);
						SetPlayerPosAC(playerid, 891.3698, 1463.8156, 1113.0920,playerid + 1,14);
						SetPlayerFacingAngle(playerid, 180.0);
						//InterpolateCameraPos(playerid, 891.165954, 1457.373168, 1114.207153, 891.165954, 1457.373168, 1114.207153, 1000);
						//InterpolateCameraLookAt(playerid, 891.338989, 1462.311035, 1113.440673, 891.338989, 1462.311035, 1113.440673, 1000);

						SetPlayerCameraPos(playerid, 891.165954, 1457.373168, 1114.207153);
						SetPlayerCameraLookAt(playerid, 891.338989, 1462.311035, 1113.440673);
					}
					SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
					switch(PI[playerid][pSex]) {
						case 1: SetPVarInt(playerid,"join_ped_item",0);
						case 2: SetPVarInt(playerid,"join_ped_item",71);
					}
					A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);

					for(new i=0; i<9; i++) {
						TextDrawShowForPlayer(playerid,buy_skins[i]);
					}
					PlayerTextDrawShow(playerid,buy_player_skins[playerid]);

					new price;
					if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PI[playerid][pVips]][vip_chose]);
						price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
					}
					else {
				    	if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
							price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
							price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
						}
					    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
					}

					new string[12];
					format(string,sizeof(string),"$%d",price);
					PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);

					SelectTextDraw(playerid, 0x0080FFFF);
				}
			}
			case 6: {
				if(!lic[playerid][3]) return ErrorMessage(playerid,"У Вас нет лицензии на оружие");
				new gun_name[32 + 1],string[512];
				string = ""W"Оружие\t"W"Стоимость\n";
				for(new i = 0; i < 12; i++) {
					GetWeaponName(gSellGun[i],gun_name,32);
					format(string, 1500, "%s\t%s\t$%i\n",string, gun_name, gSellGunPrice[i] * gBusiness[id][bizzPrice]);
				}
				new str[90];
				format(str, sizeof(str), "Armour\t$%i\nПропуск в тир\t$%i", gSellGunPrice[12] * gBusiness[id][bizzPrice], gSellGunPrice[13] * gBusiness[id][bizzPrice]);
				strcat(string, str);
				D(playerid, D_AMMO, DSTH, "Меню аммо", string, "Далее", "Отмена");
			}
			case 7: return true;//авиа
			case 9: show_fish(playerid);
			case 10: {
			    new string[256];
				format(string,sizeof(string),""P"Наименование\t"P"Стоимость\n"W"Билет [30 мин] \t"GREEN"$%d\n"W"Билет [1 час] \t"GREEN"$%d\n\t"W"Билет [2 часа] \t"GREEN"$%d\n"W"Билет [3 часа] \t"GREEN"$%d", gBusiness[id][bizzPrice] * gCompCosts[0],gBusiness[id][bizzPrice] * gCompCosts[1],gBusiness[id][bizzPrice] * gCompCosts[2],gBusiness[id][bizzPrice] * gCompCosts[3]);
				D(playerid, D_BIZZ_COMP, DSTH, "Меню", string, "Купить", "Отмена");
			}
			case 11,14,15: {
				new businessid = TI[playerid][tSelectedBusinessID];
				if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 11) {
					new string[128];
					format(string,sizeof(string),"\n\n"W"Этот таксопарк продается за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_UPDATE,DSM, ""P"Таксопарк",string,"Купить","Отмена");
				}
				else if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 14) {
					new string[128];
					format(string,sizeof(string),"\n\n"W"Эта транспортная компания продается за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_UPDATE,DSM, ""P"Транспортная компания",string,"Купить","Отмена");
				}
				else if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 15) {
					new string[128];
					format(string,sizeof(string),"\n\n"W"Это банковское отделение продается за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_UPDATE,DSM, ""P"Банковское отделение",string,"Купить","Отмена");
				}
				else {
					switch(businessid) {
						case 1..3: {
							if(PI[playerid][pBusiness] == businessid) {
								return D(playerid, D_BIZZ_TAXI, DSL, ""P"Меню таксопарка", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Управление цветом шашки\n"P"6."W" Управление названием таксопарка\n"P"7."W" Управление текстом на автомобилях\n"P"8."W" Изменение тарифов\n"P"9."W" Изменение процента от прибыли\n"P"10."W" Покупка номера телефона\n"P"11."W" Сотрудники\n"P"12."W" Статистика\n"P"13."W" Продать таксопарк", "Выбрать", "Отмена");
							}
							else if(PI[playerid][bizz_work] == businessid && PI[playerid][bizz_status] == 5) {
								return D(playerid, D_BIZZ_TAXI_ZAM, DSL, ""P"Меню таксопарка", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
							}
							else return ErrorMessage(playerid,"Управление таксопарком доступно только руководителю бизнеса и управляющему");
						}
						case 4..6: {
							if(PI[playerid][pBusiness] == businessid) {
								return D(playerid, D_BIZZ_TK, DSL, ""P"Меню транспортной компании", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Управление названием транспортной компании\n"P"6."W" Изменение процента от прибыли\n"P"7."W" Сотрудники\n"P"8."W" Статистика\n"P"9."W" Продать транспортную компанию", "Выбрать", "Отмена");
							}
							else if(PI[playerid][bizz_work] == businessid && PI[playerid][bizz_status] == 2) {
								return D(playerid, D_BIZZ_TK_ZAM, DSL, ""P"Меню транспортной компании", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
							}
							else return ErrorMessage(playerid,"Управление транспортной компанией доступно только руководителю бизнеса и управляющему");
						}
						case 7..9: {
							if(PI[playerid][pBusiness] == businessid) {
								return D(playerid, D_BIZZ_BO, DSL, ""P"Меню банковского отделения", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление цветом\n"P"4."W" Управление названием банковского отделения\n"P"5."W" Изменение комиссии переводов\n"P"6."W" Изменение комиссии за оплату недвижимости\n"P"7."W" Изменение комиссии за пользование банкоматами\n"P"8."W" Управление банкоматами\n"P"9."W" Статистика\n"P"10."W" Продать банковское отделение", "Выбрать", "Отмена");
							}
							else if(PI[playerid][bizz_work] == businessid && PI[playerid][bizz_status] == 2) {
								return D(playerid, D_BIZZ_BO_ZAM, DSL, "Меню банковского отделения", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
							}
							else return ErrorMessage(playerid,"Управление банковским отделением доступно только руководителю бизнеса и управляющему");
						}
					}
				}
				return 1;
			}
			case 12: D(playerid, D_RIELTOR, DSL, ""P"Риэлторское агенство", ""P"1."W" Дома\n"P"2."W" Бизнесы", "Выбрать", "Отмена");
			case 13: {
				if(TI[playerid][tGym]) {
					static const f_str[] = ""P"Наименование\t"P"Стоимость\n"P"1."W" Спортивная форма\t"ORANGE"$%d\n"P"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"P"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"P"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"P"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"P"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"P"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"P"-"W" Информация\n"P"-"W" Закончить тренировку";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
					D(playerid,D_BOX_2,DSTH, "Спорт-Зал",string,"Выбрать","Отмена");
				}
				else {
					static const f_str[] = ""P"Наименование\t"P"Стоимость\n"P"1."W" Спортивная форма\t"ORANGE"$%d\n"P"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"P"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"P"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"P"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"P"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"P"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"P"-"W" Информация";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
					D(playerid,D_BOX_2,DSTH, "Спорт-Зал",string,"Выбрать","Отмена");
				}
			}
			case 16: {
				if(PI[playerid][pLevel] < 3) return ErrorMessage(playerid, "Заказ рекламного места доступен с 3 уровня");
				new string[3200] = ""P"Место размещения\t"P"Статус\t"P"Владелец", str[124];
				for(new x; x<MAX_BILLBORDS; x++) {
					if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Свободен\t"GREEN"Отсутствует",BildInfo[x][bPosText]);
					else format(str,124,"\n%s\t"NO"Арендован\t"G"%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
					strcat(string,str);
				}
				return D(playerid,D_BILL_MAIN,DSTH,""P"Заказ билборда",string,"Выбрать","Закрыть");
			}
			case 17: {//sanek228
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				if(!GetPVarInt(playerid,"buy_accses")) {
					SetPVarInt(playerid,"buy_accses",1);
					new Float: pos[4];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					GetPlayerFacingAngle(playerid, pos[3]);
					SetPVarFloat(playerid, "posx", pos[0]);
					SetPVarFloat(playerid, "posy", pos[1]);
					SetPVarFloat(playerid, "posz", pos[2]);
					SetPVarFloat(playerid, "posa", pos[3]);
					TogglePlayerControllable(playerid, 0);
					SetPlayerPosAC(playerid, 212.5107,-41.5253,1002.0234,playerid + 1,1);
					SetPlayerFacingAngle(playerid, 89.8527);
					SetPlayerCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234);
					SetPlayerCameraLookAt(playerid, 212.5107,-41.5253,1002.0234);
					buyacces(playerid);
				}
			}
		}// ПК ТРАНСПОРТ
	}
	else if(areaid == gAreas[arZavod] && TI[playerid][tJobGun][0] && TI[playerid][tJobGun][2] && pstate == PLAYER_STATE_ONFOOT) {
	    if(GetPVarInt(playerid,"pOff9") > gettime()) return ErrorMessage(playerid,"Подождите");
		ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
		TI[playerid][tJobSalary] += WorkSalary[0];

		if(QuestProgress[playerid][2] < 15 && AcceptQuest[playerid][2] != 0) QuestProgress[playerid][2] ++,save_quest(playerid,2);
		if(QuestProgress[playerid][2] == 15 && AcceptQuest[playerid][2] != 0) {
			D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно собрали 15ед оружия. Данное задание можно завершить и забрать за него награду","Закрыть","");
			NextStapQI(playerid,2);
		}

		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
		
		zavodsklad += 500;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		TI[playerid][tJobGun][2] = 0;
		SetPVarInt(playerid,"pOff9",gettime()+20);
		TI[playerid][tJobGun][1] = 1;
	}
 	else if(areaid == gAreas[arZavodSklad] && IsAGang(playerid) || areaid == gAreas[arArmyLVSklad] && IsAGang(playerid)
 	|| areaid == gAreas[arArmyLVSklad] && IsAMafia(playerid) || areaid == gAreas[arArmyLVSklad] && GetTeamID(playerid) == fARMYLV && pstate == PLAYER_STATE_ONFOOT)
 	{
		SendOk(playerid,"Нажмите "ORANGE"'ALT'"G" чтобы взять боеприпасы со склада");
	}
	else if(areaid == gAreas[arArmySFSklad] && IsAGang(playerid) || areaid == gAreas[arArmySFSklad] && IsAMafia(playerid) && pstate == PLAYER_STATE_ONFOOT)
	{
		SendOk(playerid,"Нажмите "ORANGE"'ALT'"G" чтобы взять боеприпасы со склада");
	}
	else if(areaid == gAreas[arArmySFSklad])
	{
		if(GetTeamID(playerid) == fARMYSF)
		{
			new gunamount = GetPVarInt(playerid,"carrygun")*500;
			
			if(gunamount)
			{
				DeletePVar(playerid,"carrygun");
				
				RemovePlayerAttachedObject(playerid,1);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				
				if(FI[fARMYSF][fMats] + gunamount > 1000000) return ErrorMessage(playerid,"На складе недостаточно места");
				else FI[fARMYSF][fMats] += gunamount;
			}
		}
	}
	else if((areaid == gAreas[arOil][0] || areaid == gAreas[arOil][1]) && TI[playerid][tJobOil][0] && !TI[playerid][tJobOil][1] && pstate == PLAYER_STATE_ONFOOT) {
		ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
		SetPlayerAttachedObject(playerid, 8 , 3632, 1, 0.051999,0.418000,-0.008999, -85.699913,94.600028,-5.600045, 0.701999,0.684000,0.805999);
		SetTimerEx("CarryDelay",1000,false,"i",playerid);
		RemovePlayerMapIcon(playerid, 2);
		SetPlayerMapIcon(playerid,1,2717.7539,-2370.5381,17.9660,56,-1,MAPICON_GLOBAL);
		TI[playerid][tJobOil][1] = true;
	}
	else if(areaid == gAreas[arOil][2] && TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && pstate == PLAYER_STATE_ONFOOT) {
		if(GetPVarInt(playerid,"pOff9") > gettime()) return 1;
		TI[playerid][tJobOil][1] = false;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		TI[playerid][tJobSalary] += WorkSalary[1];

		if(QuestProgress[playerid][3] < 10 && AcceptQuest[playerid][3] != 0) QuestProgress[playerid][3] ++,save_quest(playerid,3);
		if(QuestProgress[playerid][3] == 10 && AcceptQuest[playerid][3] != 0) {
			D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно перенесли 10 бочек с нефтью. Данное задание можно завершить и забрать за него награду","Закрыть","");
			NextStapQI(playerid,3);
		}
		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);

		SetPlayerMapIcon(playerid,1,2743.5747,-2200.5796,21.9503,11,-1,MAPICON_GLOBAL);
		SetPlayerMapIcon(playerid,2,2752.0374,-2197.0898,21.9503,11,-1,MAPICON_GLOBAL);
		if(PI[playerid][pProgress] <= 150) PI[playerid][pProgress]++;
		oilsklad ++;
		SetPVarInt(playerid,"pOff9",gettime()+51);
	}
	else if((areaid == gAreas[arOil][3] || areaid == gAreas[arOil][4]) && TI[playerid][tJobOil][0] && !TI[playerid][tJobOil][1] && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 50) {
		object_oil[playerid] = CreateDynamicObject(3633, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(object_oil[playerid], GetPlayerVehicleID(playerid), 0.000, 0.670, 0.400, 0.000, 0.000, 0.000);
		RemovePlayerMapIcon(playerid, 1),RemovePlayerMapIcon(playerid, 2);
		SetPlayerMapIcon(playerid,1,274.2075,1447.0771,10.6189,56,-1,MAPICON_GLOBAL);
		TI[playerid][tJobOil][1] = true;
	}
	else if(areaid == gAreas[arOil][5] && TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 50) {
		if(GetPVarInt(playerid,"pOff9") > gettime()) return 1;
		SetPVarInt(playerid,"pOff9",gettime()+40);
		TI[playerid][tJobOil][1] = false;
		DestroyDynamicObject(object_oil[playerid]);
		RemovePlayerMapIcon(playerid, 1);//удаляем склад
		SetPlayerMapIcon(playerid,1,525.7095,1470.6411,4.0315,11,-1,MAPICON_GLOBAL);
		SetPlayerMapIcon(playerid,2,481.0192,1308.8954,9.3572,11,-1,MAPICON_GLOBAL);
		TI[playerid][tJobSalary] += floatround(WorkSalary[1]*1.5);

		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
		oilsklad += 3;
	}
	else if(areaid >= sad_area[0] && areaid <= sad_area[175-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(!TI[playerid][tJobSad][0]) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
		new id = areaid - sad_area[0];
		if(SI[id][sad_temp] != 0 && !GetString(SI[id][sad_fermer],player_name[playerid])) return ErrorMessage(playerid,"Вы не ухаживаете за этим деревом");
		if(SI[id][sad_temp] == 0 || SI[id][sad_temp] == 4) {
			if(SI[id][sad_temp] == 0) {
				if(GetPVarInt(playerid,"sad_uxod") == 1) return ErrorMessage(playerid,"Вы уже ухаживаете за деревом");
				if(!GetPVarInt(playerid,"bailer")) return ErrorMessage(playerid,"У Вас нет лейки в руках");
				if(GetPVarInt(playerid,"bailer_3")) return ErrorMessage(playerid,"Вы не можете полить дерево с ящиком яблок в руках");
				JobTempProcess[playerid] = 1;
				SI[id][sad_temp] = 1;
				SetString(SI[id][sad_fermer],player_name[playerid]);
				new string[70];
				format(string,sizeof(string),"Дерево\nСтадия - сохнет\nФермер - %s",SI[id][sad_fermer]);
				UpdateDynamic3DTextLabelText(SI[id][sad_3dtext],-1,string);
			}
			if(SI[id][sad_temp] == 4 && GetString(SI[id][sad_fermer],player_name[playerid])) {
				if(!GetPVarInt(playerid,"bailer_2")) return ErrorMessage(playerid,"У Вас нет ящика для сбора яблок в руках");
				JobTempProcess[playerid] = 2;
				if(SI[id][sad_temp] == 4) {
					if(GetPVarInt(playerid,"bailer_4")) return 1;
					SetPVarInt(playerid,"bailer_4",1);
				}
			}
			TI[playerid][tJobSad][1] = id+1;
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			RandomYareNforJOBS(playerid);
		}
		else ErrorMessage(playerid,"Ожидайте стадии - сбор яблок");
	}
	else if(areaid == gAreas[arLoadProds][0]) {
		if(PI[playerid][pJob] != 3) return 1;
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 456) {
			D(playerid,dProdGet,DSI, ""P"Покупка продуктов","\n\n"W"Введите количество продуктов для покупки:\nПримечание: "ORANGE"1"W" продукт = "GREEN"$1\n\n","Купить","Отмена");
		}
	}
	else if(areaid == gAreas[arLoadProds][1]) {
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 403) {
			D(playerid,dProdGet,DSI, ""P"Покупка бензина","\n\n"W"Введите количество литров для покупки:\nПримечание: "ORANGE"1"W" литр = "GREEN"$1\n\n","Купить","Отмена");
		}
	}
	else if(areaid == theftarea[playerid][0]) { //угон
	   	DisablePlayerCheckpoint(playerid);
  		DestroyDynamicArea(areaid);
	   	if(theftCheck[playerid][1] == 1){
			new Float:vehx, Float:vehy, Float:vehz;
			GetVehiclePos(theftIDveh[playerid][0], vehx, vehy, vehz);
			if(!PlayerToPoint(5.0,playerid,vehx, vehy, vehz)){
				GetCoordDoorVehicle(theftIDveh[playerid][0], vehx, vehy, vehz);
				theftCheck[playerid][0] = CreateDynamicCP(vehx,vehy,vehz, 1.0,0,0,playerid);
			}
			else {

			}
		}
		else if(theftCheck[playerid][1] == 4){
			new houseid = PI[theftIDveh[playerid][1]][pHouse];
			theftCheck[playerid][0] = CreateDynamicCP(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 1.0,0,0,playerid);
		}
 		else {
			switch(theftarea[playerid][1]){
				case 0: theftCheck[playerid][0] = CreateDynamicCP(2415.5767,-2467.5305,13.6250, 2.0,0,0,playerid);
				case 1: theftCheck[playerid][0] = CreateDynamicCP(951.9211,2070.2153,10.8203, 2.0,0,0,playerid);
				case 2: theftCheck[playerid][0] = CreateDynamicCP(-2117.7361,-249.2475,35.3203, 2.0,0,0,playerid);
			}
		}
	}	
	else if(areaid == gAreas[arSad] && pstate == PLAYER_STATE_ONFOOT) {
		if(!TI[playerid][tJobSad][0]) return 1;
		if(!GetPVarInt(playerid,"bailer_3")) return ErrorMessage(playerid,"Вы не собрали урожай");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		DeletePVar(playerid,"bailer_3");
		TI[playerid][tJobSalary] += TI[playerid][tJobSad][2]*WorkSalary[3];
		TI[playerid][tJobSad][2] = 0;
		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
	}
	else if(areaid >= gAreas[arClothes][0] && areaid <= gAreas[arClothes][sizeof(clothes_checkpoints)-1] && TI[playerid][tClothesWork][0]) {
		if(TI[playerid][tClothesWork][1] != 2) return ErrorMessage(playerid,"Необходимо взять заготовку");
		new id;
		for(new i ;i < sizeof(clothes_checkpoints);i++) {
			if(gAreas[arClothes][i] == areaid) id = i;
		}
		SetPVarInt(playerid,"clothes_id",id);

		JobTempProcess[playerid] = 4;
		TI[playerid][tProcess][0] = 0;
		TI[playerid][tProcess][1] = 10;
		PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
		for(new YN = 0;YN < 3;YN++) {
			TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		RandomYareNforJOBS(playerid);
	}
	else if(areaid == gAreas[arPobeg][0]) {
		D(playerid,DIALOG_NONE,DSM, ""P"Побег",""W"Мысли...\n\nТак, с этого поганого места я выбрался..\nНадо где-то найти лодку, чтобы покинуть этот чёртов остров..\nДа еще и времени мало..\nПоторопиться бы...","Закрыть","");
		SetPlayerPosAC(playerid,-2255.0234,1785.5853,36.6691,0,0);
		SetPlayerFacingAngle(playerid,121.4531);
		SetCameraBehindPlayer(playerid);
		FreezePlayerForTime(playerid,3);
	}
	else if(areaid == gAreas[arPobeg][1] && TI[playerid][tAlcotraz][0] > 0) {
		D(playerid,DIALOG_NONE,DSM, ""P"Побег",""W"Мысли...\n\nУРА!! СВОБОДА!!!","Закрыть","");
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		if(PI[playerid][pMember] && start_work[playerid]) {
			A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
		}
		else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
		PI[playerid][pSearch] = 0;
		SetPlayerWantedLevel(playerid,PI[playerid][pSearch]);
		PI[playerid][pJail] = 0;
		UpdatePlayerData(playerid,"pJail",0);
		PI[playerid][pJailTime] = 0;
		UpdatePlayerData(playerid,"pJailTime",0);
		TI[playerid][tAlcotraz][0] = 0;
	}
	else if(areaid >= gAreas[arManiken][0] && areaid <= gAreas[arManiken][17] && TI[playerid][tAlcotraz][2] && TI[playerid][tAlcotraz][1]) {
		new id;
		for(new i ;i < 18;i++) {
			if(gAreas[arManiken][i] == areaid) id = i;
		}
		maniken[playerid] = CreateDynamicObject(3092,alcatraz_maniken[id][0],alcatraz_maniken[id][1],alcatraz_maniken[id][2],90.00,-90.00,90.00);
		TI[playerid][tAlcotraz][1] = 0;
	}
	else if(areaid >= gAreas[arGripp][0] && areaid <= gAreas[arGripp][2]) {
		if(PI[playerid][pDisease][0] || PI[playerid][pDDisease] || GetPlayerVirtualWorld(playerid) != 0) return 1;
		if(TI[playerid][tDMArea][0] || TI[playerid][tGunArea][0]) return 1;
		new rand = random(9);
		if(rand > 3) return 1;
		if(areaid == gAreas[arGripp][0] && disease == 0) return send_disease(playerid);
		else if(areaid == gAreas[arGripp][1] && disease == 1) return send_disease(playerid);
		else if(areaid == gAreas[arGripp][2] && disease == 2) return send_disease(playerid);
	}
	else if(areaid == gAreas[arPerfomans][0] || areaid == gAreas[arPerfomans][1])
	{
		if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
		if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
		D(playerid, D_TUNE_LIST, DSL, ""P"Perfomance Tune", ""P"1."W" Улучшение двигателя\n"P"2."W" Улучшение тормозов", "Далее", "Закрыть");
	}
	else if(WD::[0][woodZone] <= areaid <= WD::[MAX_WOODS - 1][woodZone] && pstate == PLAYER_STATE_ONFOOT) {
	    new j = areaid - WD::[0][woodZone];
		if(TI[playerid][tJobWood][1]) return 1;
	    if(TI[playerid][tJobWood][0]) {
			if(TI[playerid][tJobWood][3]) {
				if(WD::[j][woodUse] != false) return ErrorMessage(playerid,"Дерево уже кто-то пилит");
				TI[playerid][tJobWood][2] = j;
				WD::[j][woodUse] = true;
				JobTempProcess[playerid] = 5;
				TI[playerid][tProcess][0] = 0;
				TI[playerid][tProcess][1] = 10;
				PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
				
				for(new YN = 0;YN < 3;YN++) {
					TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				RandomYareNforJOBS(playerid);
			}
	    }
	}
	else if(areaid == RobPlayer[playerid][RobArea]) {
		if(RobPlayer[playerid][AttachObj]) return 1;
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		switch(random(14)) {
			case 0: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2317, 4, 0.1169, -0.4219, 0.0739, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV5" 
			case 1: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1518, 4, 0.0829, -0.4219, 0.0739, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV4" 
			case 2: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2648, 4, 0.0689, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV3" 
			case 3: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2318, 4, 0.0689, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV2" 
			case 4: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2320, 4, 0.1299, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV1" 
			case 5: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 19921, 4, 0.3669, -0.5089, 0.0979, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "yashik" 
			case 6: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1738, 4, 0.1219, -0.4249, 0.0419, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "truba" 
			case 7: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2124, 4, 0.1580, -0.4499, 0.0710, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "stul2" 
			case 8: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2120, 4, 0.2660, -0.3600, 0.1139, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "stul" 
			case 9: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2102, 4, 0.3619, -0.3669, 0.1609, -64.8999, -120.6999, -72.7999, 0.9789, 0.9900, 1.0000, 0, 0); // "muzlo" 
			case 10: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2421, 4, 0.2540, -0.1539, 0.3339, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "Mikrov" 
			case 11: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1727, 4, 0.5619, -0.2700, -0.1969, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "kreslo" 
			case 12: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 19614, 4, 0.3109, -0.2999, 0.1609, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "huyznaetcheeto" 
			case 13: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2226, 4, 0.3699, -0.3359, 0.1049, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "bumbox" 
			case 14: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 11743, 4, 0.3109, -0.2999, 0.1609, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "blender"
		}
		RobPlayer[playerid][RobRand]--;
		new string[65];
		format(string,sizeof(string),"Доступно техники: "O"%iед",RobPlayer[playerid][RobRand]);
		UpdateDynamic3DTextLabelText(RobPlayer[playerid][RobText], COLOR_WHITE, string);
		if(RobPlayer[playerid][RobRand] == 0) {
			DestroyDynamicPickup(RobPlayer[playerid][RobPickup]);
			DestroyDynamicArea(RobPlayer[playerid][RobArea]);
			DestroyDynamic3DTextLabel(RobPlayer[playerid][RobText]);
		}
	}
	else if(areaid == gz_area) {
		for(new i = 0; i < TOTALGZ; i++) {
			if(GZInfo[i][ZoneOnBattle] == 1 && !infight[playerid] && GZInfo[i][gTime] > 300) {
				if(PI[playerid][pMember] == GZInfo[i][gNapad] || PI[playerid][pMember] == GZInfo[i][gFrakVlad]) {
					TextDrawShowForPlayer(playerid, inFigh);
					infight[playerid] = true;
				}
			}
		}
	}
	if(IsAGang(playerid) || IsAArm(playerid) || IsAMafia(playerid)) {
		for(new i = GetVehiclePoolSize()+1; --i != 0;) {
			if(areaid == VG[i][vgArea]) {
				if(VG[i][vgLoading] == true && GetPVarInt(playerid,"carrygun")) {
					new gunamount = GetPVarInt(playerid,"carrygun");
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					switch(GetVehicleModel(i)) {
						case 433: if(VG[i][vgAmount][0] + gunamount > 70) return ErrorMessage(playerid,"Недостаточно места"),FI[fARMYLV][fMats] += 500;
						case 482: if(VG[i][vgAmount][0] + gunamount > 30) return ErrorMessage(playerid,"Недостаточно места"),FI[fARMYLV][fMats] += 500;
						case 573: if(VG[i][vgAmount][0] + gunamount > 200) return ErrorMessage(playerid,"Недостаточно места");
					}
					if(gunamount) VG[i][vgAmount][0] += gunamount;
					
					new string[64];
					switch(GetVehicleModel(i)) {
						case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[i][vgAmount][0]);
						case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[i][vgAmount][0]);
						case 573: format(string,sizeof(string),"Ящиков: "O"%i/200",VG[i][vgAmount][0]);
					}
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
				}
				else if(VG[i][vgUnloading] == true && !GetPVarInt(playerid,"carrygun")) {
					if(VG[i][vgAmount][0] < 1) return ErrorMessage(playerid,"В автомобиле недостаточно боеприпасов");
					VG[i][vgAmount][0] -= 1;
					SetPVarInt(playerid,"carrygun",1);
					new string[64];
					switch(GetVehicleModel(i)) {
						case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[i][vgAmount][0]);
						case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[i][vgAmount][0]);
					}
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);

					ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
					SetTimerEx("CarryDelay",1000,false,"i",playerid);
					SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				}
				else if(VG[i][vgRobHouse] == true && RobPlayer[playerid][AttachObj]) {
					new gunamount = RobPlayer[playerid][AttachObj];
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(gunamount) VG[i][vgAmount][0] += gunamount;
					RobPlayer[playerid][AttachObj] = 0;
					RemovePlayerAttachedObject(playerid, 0);
					ClearAnims(playerid);
					new string[64];
					format(string,sizeof(string),"Техника: "O"%i ед",VG[i][vgAmount][0]);
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
				}
				return true;
			}
		}
		if(areaid == invent_area && invent_zone_id != -1) {
			if(invent_mats < 5000) return ErrorMessage(playerid, "На корабле недостаточно боеприпасов");
			if(!GetPVarInt(playerid,"carrygun")) {
				invent_mats -= 5000;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
			}
		}
	}
	new state_ship = GetPlayerState(playerid);
	new state_vehicle = GetPlayerVehicleID(playerid);
	foreach(new x:Player) {
		if(!TI[x][tLogin]) continue;
		if(areaid == GetPVarInt(x,"Ships") && state_ship == PLAYER_STATE_DRIVER) {
			new panels, tires;
			GetVehicleDamageStatus(state_vehicle, panels, doors, lights, tires);
			UpdateVehicleDamageStatus(state_vehicle, panels, doors, lights, 15);
			GameTextForPlayer(playerid, "~r~stalling", 1000, 6);
			break;
		}
	}
	for(new c = 0; c < MAX_TABLES_DICE; c++) {
		if(areaid==InfoDice[c][dice_area]) GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~PRESS ENTER",3000,3);
	}
	return true;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(gHouseArea[0] <= areaid <= gHouseArea[gHouseCount-1])
	{
		if(TI[playerid][tTPpick] == false) TI[playerid][tSelectHouse] = -1;
	}
	/*
	else if(b_area[0] <= areaid <= b_area[gBusinessCount-1])
	{
		if(TI[playerid][tTPpick] == false) TI[playerid][tSelectedBusinessID] = -1;
	}
	*/
	if(areaid >= sad_area[0] && areaid <= sad_area[175-1]) {
		if(!TI[playerid][tJobSad][0] || !TI[playerid][tJobSad][1]) return 1;
		new field = TI[playerid][tJobSad][1]-1;
		if(SI[field][sad_temp] == 1) {
			UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Отсутствует");
			SI[field][sad_temp] = 0;
		}
		TI[playerid][tJobSad][1] = 0;
		DeletePVar(playerid,"bailer_4");
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		JobTempProcess[playerid] = 0;
	}
	if(areaid >= gAreas[arClothes][0] && areaid <= gAreas[arClothes][sizeof(clothes_checkpoints)-1] && TI[playerid][tClothesWork][0]) {
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		if(GetPVarInt(playerid,"id_object")) {
			DestroyDynamicObject(GetPVarInt(playerid,"id_object"));
			DeletePVar(playerid,"id_object");
		}
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		JobTempProcess[playerid] = 0;
	}
	else if(Casino_Flag[playerid][select_casino_table] != -1) {
		if(!InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start]) {
			ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
			Casino_Flag[playerid][select_casino_table] = -1;
		}
	}
	else if(areaid >= gAreas[arNews][0] && areaid <= gAreas[arNews][1] && TI[playerid][tEther]) {
		ether_closed(playerid);
		TI[playerid][tEther] = false;
		SendOk(playerid,"Вы вышли из прямого эфира");
	}
	else if(WD::[0][woodZone] <= areaid <= WD::[MAX_WOODS - 1][woodZone]) {
		if(TI[playerid][tJobWood][2] != -1) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
			TI[playerid][tProcess][0] = -1;
			TI[playerid][tProcess][1] = -1;
			for(new YN = 0;YN < 3;YN++) {
				TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			JobTempProcess[playerid] = 0;
			if(TI[playerid][tJobWood][1]) TogglePlayerControllable(playerid,true);
			TI[playerid][tJobWood][2] = -1;
		}
	}
	else if(areaid >= area_golod[0] && areaid <= area_golod[20]) {
		if(time_gamegolod && player_to_golod[playerid]) {
			new Float:POS[3];
		    GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
		    CreateExplosionForPlayer(playerid, POS[0], POS[1], POS[2], 7, 5.0);
		}
	}
	else if(areaid >= gAreas[arJob][0] && areaid <= gAreas[arJob][5]) {
		if(TI[playerid][tJobOil][0]) EndOil(playerid);
		//if(TI[playerid][tJobSad][0]) EndSad(playerid);
		if(TI[playerid][tJobGun][0]) EndGun(playerid);
		if(GetPVarInt(playerid,"fish_place")) EndFish(playerid);
		if(TI[playerid][tJobWood][0]) EndWood(playerid);
		if(TI[playerid][tDMArea][0]) pc_cmd_power(playerid);
	}
	else if(areaid == ShootingArea[playerid]) { //тир зона
		new mapshooting, maxbox;
		switch(GetPVarInt(playerid,"shootingpl")) {
			case 67: mapshooting = 0, maxbox = 4; 
			case 78: mapshooting = 11, maxbox = 8;  // lva
		}
		RemovePlayerAttachedObject(playerid, 7);
		SendOk(playerid, "Вы слишком далеко отошли от места, Ваша тренировка окончена");
		for(new i = 0; i < 2; i++)  DestroyDynamicObject(BottleObject[playerid][i]);
		ShootingStart[playerid] = 0;
		ShootingCount[playerid] = 0;
		for(new i = 0; i < maxbox; i++) {
			if(BoxPlayerID[mapshooting][i] == playerid) { 
				BoxStatus[mapshooting][i] = 0;
				BoxPlayerID[mapshooting][i] = -1;
				break;
			}
		}
	}
	else if(areaid == gz_area) {
		for(new i = 0; i < TOTALGZ; i++) {
			if(GZInfo[i][ZoneOnBattle] == 1 && infight[playerid] && GZInfo[i][gTime] > 300) {
				if(PI[playerid][pMember] == GZInfo[i][gNapad] || PI[playerid][pMember] == GZInfo[i][gFrakVlad]) {
					TextDrawHideForPlayer(playerid, inFigh);
					infight[playerid] = false;
				}
			}
		}
	}
	return 1;
}

public OnDynamicObjectMoved(objectid) {
	for(new id = 0; id < MAX_OBJECT_MOVED; id++) {
		if(objectid == moved_info[id][moved_id] && moved_info[id][status_moved]) {
			moved_info[id][status_moved]=false;
			SetTimerEx("CheckObjectBarrier", 6000, 0, "i", id);
			return 1;
		}
	}
	if(GetGVarType("WoodConv",objectid) == 1) {
    	DeleteGVar("WoodConv",objectid);
    	DestroyDynamicObject(objectid);
		new rand = Random(10,15);
		woodsklad += rand;
		new string[72];
		format(string,sizeof(string),"Древесины на складе: "ORANGE"%d кг",woodsklad);
		UpdateDynamic3DTextLabelText(wood_3dtext,-1,string);
    }
    for(new id = 0; id < sizeof(pickup_game_golod_2); id++) {
	    if(objectid == objgolod[id]) {
	    	DestroyDynamicObject(objectid);
	    	objgolod[id] = -1;
	    	pickups_game_golod_2[id] = CreateDynamicPickup(11745,23,pickup_game_golod_2[id][0],pickup_game_golod_2[id][1],pickup_game_golod_2[id][2],-1,-1);
	    }
	}
	for(new i = 0; i < sizeof(object_park_ls); i++) {
	    if(objectid == object_park_ls[i]) {
		    if(status_restore_check_job_mower[i] == false) {
		    	MoveDynamicObject(object_park_ls[i],check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2]+6,0.001,
				    	check_job_mower[i][3], check_job_mower[i][4], check_job_mower[i][5]);
	    		status_restore_check_job_mower[i] = true;
			}
			else {
			    status_check_job_mower[i] = false;
	            status_restore_check_job_mower[i] = false;
	            if(i <= 32) check_taxi_park--;
				if(i > 32 && i <= 79) check_verona_beach--;
				if(i > 79 && i <= 138) check_white_house--;
				if(i > 138 && i <= 176) check_medic_ls--;
				if(i > 176 && i <= 226) check_mayor_ls--;
				if(i > 226 && i <= 322) check_glenpark_1--;
				if(i > 322) check_glenpark_2--;
			}
		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason) {
	leave_robhouse(playerid);
	
	if (lstream[playerid]) {
		SvDeleteStream(lstream[playerid]);
		lstream[playerid] = SV_NULL;
	}
	
	if(PlayerVehicle[playerid] != -1) DestroyVehicle(PlayerVehicle[playerid]);
	
	for(new i;i<10;i++) {
	    if(ChetInfo[i][cheatid1]==playerid) {
			TextDrawSetString(CheatText[i], "-");
			Cheat1 ++;
			if(Cheat1 > 9) Cheat1 = 0;
		}
 	}
	if(actorereg[playerid][0] != -1) DestroyActor(actorereg[playerid][0]);
	if(actorereg[playerid][1] != -1) DestroyActor(actorereg[playerid][1]);
	if(maniken[playerid] != -1) DestroyDynamicObject(maniken[playerid]);
	if(TI[playerid][tRaceID] != INVALID_VEHICLE_ID) srace_end(playerid,1);
	if(player_to_game[playerid] == 1) {
		players_in_game--;
		DelGun(playerid);
	}
	if(TI[playerid][tDuel] != -1) {
		if(DI[TI[playerid][tDuel]][duel_start] == true) end_duel(playerid,1);
		else duel_delete(TI[playerid][tDuel],false);
	}
	if(TI[playerid][tCashDM]) {
		GiveMoney(playerid,TI[playerid][tCashDM],"возвращение взноса сумасшедших войн");
		TI[playerid][tCashDM] = 0;
		new query[100];
		mysql_format(connects, query, sizeof(query), "DELETE FROM `dm_arena` WHERE BINARY `Name` = '%s'", player_name[playerid]);
		mysql_tquery(connects, query, "", "");
	}
	if(player_to_race_lv[playerid] != 0) {
		players_in_race_lv--;
		player_to_race_lv[playerid] = 0;
		if(player_to_race_lv_id[playerid] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(player_car_race_lv_id[playerid]);
			player_to_race_lv_id[playerid] = INVALID_VEHICLE_ID;
		}
	}
	if(TI[playerid][tCashRace]) {
		GiveMoney(playerid,TI[playerid][tCashRace],"возвращение взноса безумных гонок");
		TI[playerid][tCashRace] = 0;
	}
	if(player_to_golod[playerid] == 1) {
		players_in_golod--;
		golod_deatch(playerid,players_in_golod);
		DelGun(playerid);
	}
	for(new i = 0; i < 14; i++) {
		if(VacancyInfo[i][VacancyCreator] == playerid) {
			VacancyInfo[i][VacancyStatus] = false;
			VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
		}
	}
	TI[playerid][tDiceID] = INVALID_PLAYER_ID;
	TI[playerid][tDiceIDs] = INVALID_PLAYER_ID;

	ether_closed(playerid);
	if(reason == 1 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) {
		arrest(playerid);
		static const f_str[] = "%s вышел из игры во время задержания и был посажен в КПЗ";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
		format(string,sizeof(string), f_str, player_name[playerid]);
		SendClientMessageToAll(CBADINFO,string);
	}
	if(car_autoschool[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(car_autoschool[playerid]);
		car_autoschool[playerid] = INVALID_VEHICLE_ID;
	}
	if(air_autoschool[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(air_autoschool[playerid]);
		air_autoschool[playerid] = INVALID_VEHICLE_ID;
	}
	if(boat_autoschool[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(boat_autoschool[playerid]);
		boat_autoschool[playerid] = INVALID_VEHICLE_ID;
	}
	if(TI[playerid][tFight] != -1) {
		GiveMoney(playerid,-RingInfo[0][rgPrice],"поражение поединок");
		GiveMoney(TI[playerid][tFight],(RingInfo[0][rgPrice]*2),"победа поединок");
		PlayerSpawn(TI[playerid][tFight]);
		TI[TI[playerid][tFight]][tFight] = -1;
		TI[playerid][tFight] = -1;
		CheckPlayerRing(playerid);
	}
	if(TI[playerid][tSpectr] != INVALID_PLAYER_ID && SERIU[TI[playerid][tSpectr]][sID] == playerid) {
	 	pc_cmd_reoff(TI[playerid][tSpectr],"");
	 	GameTextForPlayer(TI[playerid][tSpectr], "Player Disconected", 700, 3);
	}
	if(avir[playerid] != -1) {
 	    PI[playerid][pMember] = TI[playerid][preOrg];
	    PI[playerid][pRank] = TI[playerid][preOrgg];
	    avir[playerid] = -1;
	    SERIU[playerid][sID] = -1;
	    TI[playerid][preOrg] = 0;
	    TI[playerid][preOrgg] = 0;
 	}
	if(TI[playerid][tJobWood][0]) {
        RemovePlayerAttachedObject(playerid,9);
        if(TI[playerid][tJobWood][2] != -1) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
        }
    }
	if(TI[playerid][tArendKey] != -1) {
		new v = TI[playerid][tArendKey];
		if(ArendInfo[v][aPlayerID] == playerid) {
			ArendInfo[v][aPlayerID] = INVALID_PLAYER_ID;
            SetVehicleToRespawn(ArendInfo[v][aID]);
		}
    }
	if(TI[playerid][tJobSad][1]) {
		if(SI[TI[playerid][tJobSad][1]-1][sad_temp] == 1) {
			UpdateDynamic3DTextLabelText(SI[TI[playerid][tJobSad][1]-1][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Отсутствует");
			SI[TI[playerid][tJobSad][1]-1][sad_temp] = 0;
		}
	}
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
	    TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendOk(GotoInfo[playerid][gtID],"Вы были выпущены с конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	if(p_mh[playerid]!=PlayerText:-1) {
		PlayerTextDrawHide(playerid,p_mh[playerid]);
		PlayerTextDrawDestroy(playerid,p_mh[playerid]);
		p_mh[playerid]=PlayerText:-1;
	}
	CheckPlayerGoCuff(playerid);
	if(ReportID[playerid] != -1) {
		ReportSlot[ReportID[playerid]] = -1;
		ReportID[playerid] = -1;
	}
	if(ReportIDAsk[playerid] != -1) {
		ReportSlotAsk[ReportIDAsk[playerid]] = -1;
		ReportIDAsk[playerid] = -1;
	}
	for(new i;i<MAX_ASK;i++) {
		if(PlayerReportAsk[i] == -1) continue;
		if(PlayerReportAsk[i] == playerid) ReportDellAsk(i);
	}
	if(rep_system) {
		for(new i;i<MAX_REPORTS;i++) {
			if(PlayerReport[i] == -1) continue;
			if(PlayerReport[i] == playerid) ReportDell(i);
		}
	}
	if(fam_lable[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(fam_lable[playerid]);
		fam_lable[playerid] = Text3D:-1;
	}
	if(TI[playerid][tDMArea][0] || TI[playerid][tGunArea][0]) {
		pc_cmd_power(playerid);
	}
	for(new i; i<3; i++) {
		if(calls_ether[i] == playerid) {
			calls_ether[i] = INVALID_PLAYER_ID;
			SendOk(calls_news[i], "Игрок вышел из игры");
		}
		if(calls_news[i] == playerid && calls_ether[i] != INVALID_PLAYER_ID) {
			SendOk(calls_ether[i], "Ведущий вышел из игры");
			PhoneStatus(calls_ether[i],false);
			calls_ether[i] = INVALID_PLAYER_ID;
			calls_news[i] = INVALID_PLAYER_ID;
		}
	}
	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(Casino_Flag[playerid][select_casino_table] != -1 ){
		ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		Casino_Flag[playerid][select_casino_table] = -1;
	}
	if(PTD_DiceStat[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,PTD_DiceStat[playerid]);
		PTD_DiceStat[playerid]=PlayerText:-1;
	}
	if(buy_player_skins[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,buy_player_skins[playerid]);
		buy_player_skins[playerid]=PlayerText:-1;
	}
	if(skill_player_td[playerid][0]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,skill_player_td[playerid][0]);
		skill_player_td[playerid][0]=PlayerText:-1;
	}
	if(skill_player_td[playerid][1]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,skill_player_td[playerid][1]);
		skill_player_td[playerid][1]=PlayerText:-1;
	}
	if(TI[playerid][tAlcotraz][0]) {
		PI[playerid][pJailTime] = 4500;
	}
	if(GetPVarInt(playerid,"block")) {
		if(ObjectShip[playerid] != 0x7F800000) {
			DestroyDynamicObject(ObjectShip[playerid]);
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DestroyDynamic3DTextLabel(ShipText[playerid]);
	}
	if(TI[playerid][tPhoneCaller] == playerid || TI[playerid][tPhoneCalled] == playerid) {
		new id;
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];
		else return SendClientMessage(playerid,COLOR_LIGHTRED,"Ошибка (#112)");
		SendOk(id,"Абонент отключился, связь прекращена");
		PhoneStatus(id,false);
		TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[id][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[id][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[playerid][tPhone] = false;
		TI[id][tPhone] = false;
	}
	if(thefttime[playerid] != 0) { // угон
		DestroyDynamicArea(theftarea[playerid][0]);
		DisablePlayerCheckpoint(playerid);
		DestroyDynamicCP(theftCheck[playerid][0]);
		A_DestroyVehicle(theftIDveh[playerid][0]);
		theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
		if(theftplayer[theftIDveh[playerid][1]][0] != 1010) theftplayer[theftIDveh[playerid][1]][0] = 1010;
		if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(theftveh[playerid][0]);
			theftveh[playerid][0] = INVALID_VEHICLE_ID;
		}
		theftplayer[playerid][0] = 1010;
		theftplayer[playerid][1] = 0;
		theftCheck[playerid][1] = 0;
		PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
		thefttime[playerid] = 0;
		if(PI[playerid][ptheftExp] == 0) {
			if(PI[playerid][ptheftSkill] != 0) PI[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PI[playerid][ptheftSkill]);
			PI[playerid][ptheftExp] = TheftSkillMax[PI[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
		} 
		else {
			if(PI[playerid][ptheftExp] != 0) PI[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
		}
	}
	if(youtube_player[playerid] == 1){ //youtube
		youtube_player[playerid] = 0;
		for(new i = 0; i < 100; i++){
			if(youtube[i][you_uid] == PI[playerid][pID]) {
				youtube[i][you_name][0] = EOS;
				youtube[i][you_datasub][0] = EOS;
				youtube[i][you_id] = 0;
				youtube[i][you_uid] = 0;
				youtube[i][you_date] = 0;
				youtube[i][you_subsctiptions] = 0;
				youtube[i][you_timestream] = 0;
				break;
			}	
		}
	}
	if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
		gPlayerCars[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
		gPlayerCars[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
		save_car(playerid,0);
		if(theftplayer[playerid][0] == 1010) {
			A_DestroyVehicle(house_car[playerid][0]);
			house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(house_car[playerid][0]);
			house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
	}
	if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
		gPlayerCars[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
		gPlayerCars[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
		save_car(playerid,1);
	    if(theftplayer[playerid][0] == 1010) {
	    	A_DestroyVehicle(house_car[playerid][1]);
	    	house_car[playerid][1] = INVALID_VEHICLE_ID;
	    }
		if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(house_car[playerid][1]);
			house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	
	for(new i; i < 16; i++) PlayerTextDrawDestroy(playerid, speedometr[playerid][i]);
	
	if(gpss[playerid] == 1)
	{
		DisablePlayerGPS(playerid);
	}

	DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
	DMSTATUS[playerid] = Text3D:(0xFFFF);

	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	
	new year, month,day;
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	new query[558],string[128];
	
	if(speed_timer[playerid] != -1){
		KillTimer(speed_timer[playerid]);
		speed_timer[playerid] = -1;
	}

	format(query,200,"UPDATE `accounts` SET `pOnline` = '%02d-%02d-%02d' WHERE `Name` = '%s' LIMIT 1",day, month, year,GetName(playerid));
	mysql_pquery(connects, query, "", "");

	if(PI[playerid][pAdmin] > 0 && dostup[playerid] == 1 || gAdmin[playerid][7] == 1) {
		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};

		query = "";
		format(query,sizeof(query),"UPDATE `admin` SET `%s` = '%d', `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`blockadmin`='%d',`rep`='%d',online_status = '0' WHERE `Name` = '%s' LIMIT 1",Names_Days[day_week], gAdminTime[playerid],gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],gAdmin[playerid][6],gAdmin[playerid][7],gAdmin[playerid][8],player_name[playerid]);
		mysql_pquery(connects, query, "", "");

		format(string, sizeof(string), "[A-%d] «"G" %s отключился",PI[playerid][pAdmin],player_name[playerid]);
		if(gAdmin[playerid][7] != 1) SendAdminMessage(PP, string);
		dostup[playerid] = 0;
	}
	if(IsValid3DTextLabel(gPlayerBusText[playerid])) DestroyDynamic3DTextLabel(gPlayerBusText[playerid]);
	if(PlayerMehText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerMehText[playerid]);
		PlayerMehText[playerid] = Text3D:-1;
	}
	if(PlayerEatText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerEatText[playerid]);
		PlayerEatText[playerid] = Text3D:-1;
	}
	if(GetPVarInt(playerid,"veh_id_cleaner")) EndGazon(playerid);
	if(GetPVarInt(playerid,"clear_id")) EndClear(playerid);
	if(GetPVarInt(playerid,"bus_id")) EndBus(playerid);
	if(TI[playerid][tJobSad][0]) EndSad(playerid);
	if(TI[playerid][tJobOil][0]) EndOil(playerid);
	if(TI[playerid][tJobGun][0]) EndGun(playerid);
	if(GetPVarInt(playerid,"track_id")) EndTrack(playerid);
	if(GetPVarInt(playerid,"mehjob")) EndMeh(playerid);
	if(GetPVarInt(playerid,"eatjob")) EndEat(playerid);
	if(gPlayerProdText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(gPlayerProdText[playerid]);
		gPlayerProdText[playerid] = Text3D:-1;
	}
	if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);

	if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TK_Trailer[playerid]);
		TK_Trailer[playerid] = INVALID_VEHICLE_ID;
	}
	SaveServerAccount(playerid);
	
	PI[playerid][pAdmin] = 0;
	score_number[playerid] = 0;
	TI[playerid][tLogin] = false;
	TI[playerid][tSpawn] = false;
	TI[playerid][tJoined] = false;
	TI[playerid][tSelectSkin] = false;

    mysql_format(connects,query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET `online_status` = '1001' WHERE pID = '%d'",PI[playerid][pID]);
 	mysql_tquery(connects,query, "", "");

	PI[playerid][pPhone] = 0;

	if(gOnlinePlayer[playerid][0] > 1) {
		format(query,256,"SELECT * FROM online_player WHERE date >= CURDATE() AND accountid = %d",PI[playerid][pID]);
		new Cache:result = mysql_query(connects, query);
		new rows = cache_num_rows();
		if(!rows) {
			format(query,sizeof(query),"INSERT INTO online_player (accountid,date,online_sec,afk_sec) VALUES (%d, CURDATE(), %d, %d)", PI[playerid][pID], gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0]);
			mysql_tquery(connects,query);
		}
		else {
			format(query,sizeof(query),"UPDATE online_player SET online_sec = %d, afk_sec = %d WHERE accountid = %d AND date >= CURDATE()", gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0], PI[playerid][pID]);
			mysql_tquery(connects,query);
		}
		cache_delete(result);
	}
	return true;
}
public OnPlayerDeath(playerid, killerid, reason) {
    DelGun(playerid);
	DisablePlayerCheckpoint(playerid);

	DeletePVar(playerid, "SettingGraffiti");

	if(GetPVarInt(playerid,"ChangingSkin")) {
		A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		cancel_skin(playerid);
	}

	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);

	TI[playerid][tMasked] = 0;
	DeletePVar(playerid,"carrygun");
	DeletePVar(playerid,"use_mats");
	DeletePVar(playerid,"takephone");
	DeletePVar(playerid,"takeradio");

	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleAC(playerid);

	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID]!=INVALID_PLAYER_ID) {
	    TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendOk(GotoInfo[playerid][gtID],"Вы были выпущены с конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	if(p_mh[playerid]!=PlayerText:-1) {
		PlayerTextDrawHide(playerid,p_mh[playerid]);
		PlayerTextDrawDestroy(playerid,p_mh[playerid]);
		p_mh[playerid]=PlayerText:-1;
	}
	if(thefttime[playerid] != 0) { // угон
		SendOk(playerid,"Вы провалили задание, ваш навык угона понижен.");
		DestroyDynamicArea(theftarea[playerid][0]);
		DisablePlayerCheckpoint(playerid);
		DestroyDynamicCP(theftCheck[playerid][0]);
		A_DestroyVehicle(theftIDveh[playerid][0]);
		theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
		if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(theftveh[playerid][0]);
			theftveh[playerid][0] = INVALID_VEHICLE_ID;
		}
		if(theftplayer[theftIDveh[playerid][1]][0] != 1010) theftplayer[theftIDveh[playerid][1]][0] = 1010;
		theftplayer[playerid][1] = 0;
		theftCheck[playerid][1] = 0;
		PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
		thefttime[playerid] = 0;
		if(PI[playerid][ptheftExp] == 0) {
			if(PI[playerid][ptheftSkill] != 0) PI[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PI[playerid][ptheftSkill]);
			PI[playerid][ptheftExp] = TheftSkillMax[PI[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
		} 
		else {
			if(PI[playerid][ptheftExp] != 0) PI[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
		}
	}
	if(killerid != INVALID_PLAYER_ID) {
		if(TI[killerid][tDMArea][0] && TI[playerid][tDMArea][0]) {
			new Float:health;
			TI[killerid][tDMArea][1]++;
			TI[playerid][tDMArea][2]++;
			GetPlayerHealth(killerid,health);
			if(health + 25 > 100) SetPlayerHealth(killerid,100);
			else SetPlayerHealth(killerid,health+25);
			new string[156];
			format(string,sizeof(string),"{1bd12f}Убийств:{ffffff}%d\n{1bd12f}Смертей:{ffffff}%d",TI[playerid][tDMArea][1],TI[playerid][tDMArea][2]);
			UpdateDynamic3DTextLabelText(DMSTATUS[playerid],0xFF6347FF,string);

			format(string,sizeof(string),"{1bd12f}Убийств:{ffffff}%d\n{1bd12f}Смертей:{ffffff}%d",TI[killerid][tDMArea][1],TI[killerid][tDMArea][2]);
			UpdateDynamic3DTextLabelText(DMSTATUS[killerid],0xFF6347FF,string);
		}
		if(TI[killerid][tGunArea][0] && TI[playerid][tGunArea][0]) {
			new Float:health;
			TI[killerid][tGunArea][1]++;
			TI[playerid][tGunArea][2]++;
			GetPlayerHealth(killerid,health);
			if(health + 25 > 100) SetPlayerHealth(killerid,100);
			else SetPlayerHealth(killerid,health+25);
			if(TI[killerid][tGunArea][1] == 3) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[4], 5000),TI[killerid][tGunArea][3] = 2,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 6) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[3], 5000),TI[killerid][tGunArea][3] = 3,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 9) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[2], 5000),TI[killerid][tGunArea][3] = 4,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 12) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[1], 5000),TI[killerid][tGunArea][3] = 5,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 15) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[0], 5000),TI[killerid][tGunArea][3] = 6,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 18) {
				new string[100];
			    format(string, sizeof(string), "Победителем Гонки Вооружений стал - "W"%s",player_name[killerid]);
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(!TI[i][tGunArea][0]) continue;
					SendClientMessage(i,CGOLD,string);
				}
				new query[156];
				format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pWinArea = pWinArea + 1 WHERE pID = '%d'",PI[killerid][pID]);
				mysql_tquery(connects,query,"","");
			    ResetGunsArena();
			}
			new string[128];
			format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[playerid][tGunArea][1],TI[playerid][tGunArea][3]);
			UpdateDynamic3DTextLabelText(DMSTATUS[playerid],0xFF6347FF,string);

			format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[killerid][tGunArea][1],TI[killerid][tGunArea][3]);
			UpdateDynamic3DTextLabelText(DMSTATUS[killerid],0xFF6347FF,string);
		}
		if(!IsACop(killerid) && !IsAArm(killerid) && IsAGang(playerid) != IsAGang(killerid) && IsAMafia(playerid) != IsAMafia(killerid) && !TI[killerid][tDMArea][0] && !TI[killerid][tGunArea][0] && !TI[killerid][tGym] && !player_to_golod[killerid] && !player_to_game[killerid] && TI[killerid][tDuel] == -1) {
			PI[killerid][pZakonp] --;
			if(PI[killerid][pZakonp] < -100) PI[killerid][pZakonp] = -100;
			UpdatePlayerData(killerid,"pZakonp",PI[killerid][pZakonp]);
			SetPlayerCriminal(killerid,"Неизвестный", "Убийство человека");
			if(PI[killerid][pSearch] < 2) {
				PI[killerid][pSearch] = 2;
				SetPlayerWantedLevel(killerid,PI[killerid][pSearch]);
				new string[156];
				format(string,sizeof(string),"[Внимание] %s объявлен(а) в розыск. Обвинитель: неизвестно. Причина: убийство",player_name[killerid]);
				SendTeamMessage(CDEPARTMENT,string);

				format(string,sizeof(string),"Вы объявлены в розыск. Причина: убийство. Уровень: %d",PI[killerid][pSearch]);
				SendClientMessage(killerid,CBADINFO,string);
			}
		}
		if(game_start == 1 && player_to_game[playerid] == 1 && player_to_game[killerid] == 1) {
			kills_player_game[killerid]++;
			new string[128];
			mysql_format(connects, string, sizeof(string),"UPDATE `dm_arena` SET `kills_dm` = '%d' WHERE `Name` = '%e'", kills_player_game[killerid], player_name[killerid]);
			mysql_tquery(connects, string, "", "");
		}
		if(!TI[playerid][tDMArea][0] && !TI[playerid][tGunArea][0] && !TI[killerid][tGym] && !player_to_game[playerid]) {
			if(PI[playerid][pSearch] > 0) {
				if(IsACop(killerid)) {
					new search,src = PI[playerid][pSearch];
					if(PI[playerid][pSearch] <= 5) search = 600;
					else search = 750;
					arrest(playerid);

					static const f_str_1[] = "Вы были посажены в тюрьму офицером %s на %d секунд";
					new string_1[sizeof(f_str_1)  +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

					format(string_1,sizeof(string_1),f_str_1,player_name[killerid],(src * search));
					SendClientMessage(playerid,COLOR_LIGHTRED,string_1);

					static const f_str_2[] = "Вы посадили в тюрьму преступника %s на %d секунд";
					new string_2[sizeof(f_str_2) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

					format(string_2,sizeof(string_2),f_str_2,player_name[playerid],(src * search));
					SendClientMessage(killerid,COLOR_LIGHTRED,string_2);
				}
			}
		}
	}
	new bool:spawn = false;
	if(IsAGang(killerid) && IsAGang(playerid) && GetPlayerVirtualWorld(playerid) == 0) {
		for(new i = 0; i < TOTALGZ; i++) {
			if(GZInfo[i][ZoneOnBattle] == 1) {
				if(PI[killerid][pMember] != PI[playerid][pMember]) {
					if(PI[killerid][pMember] == GZInfo[i][gNapad] || PI[killerid][pMember] == GZInfo[i][gFrakVlad]) {
						if(PI[playerid][pMember] == GZInfo[i][gNapad] || PI[playerid][pMember] == GZInfo[i][gFrakVlad]) {
							if(GZInfo[i][gTime] > 600) {
								if(infight[killerid] && infight[playerid]) {
									SendDead(PI[killerid][pMember],PI[playerid][pMember],killerid,playerid,reason);
									switch(reason) {
										case 0: CountOnZone[PI[killerid][pMember]]+=10;
										case 23: CountOnZone[PI[killerid][pMember]]+=4;
										case 24,25,31,33: CountOnZone[PI[killerid][pMember]]++;
										case 29,30: CountOnZone[PI[killerid][pMember]]+=2;
										case 5: CountOnZone[PI[killerid][pMember]]+=8;
										default: CountOnZone[PI[killerid][pMember]]++;
									}
									SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot")+1);
									if(PI[killerid][pFamily]) reputation_family(PI[killerid][pFamily]-1,1);
									if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,-1);
									GameTextForPlayer(killerid, "~r~+Kill", 5000, 6);
									if(PI[killerid][pMember]) add_gang_points(PI[killerid][pMember],1);
									break;
								}
							}
							else {
								SendDead(PI[killerid][pMember],PI[playerid][pMember],killerid,playerid,reason);
								switch(reason) {
									case 0: CountOnZone[PI[killerid][pMember]]+=10;
									case 23: CountOnZone[PI[killerid][pMember]]+=4;
									case 24,25,31,33: CountOnZone[PI[killerid][pMember]]++;
									case 29,30: CountOnZone[PI[killerid][pMember]]+=2;
									case 5: CountOnZone[PI[killerid][pMember]]+=8;
									default: CountOnZone[PI[killerid][pMember]]++;
								}
								SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot")+1);
								if(PI[killerid][pFamily]) reputation_family(PI[killerid][pFamily]-1,1);
								if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,-1);
								GameTextForPlayer(killerid, "~r~+Kill", 5000, 6);
								if(PI[killerid][pMember]) add_gang_points(PI[killerid][pMember],1);
								break;
							}
						}
					}
				}
			}
		}
	}
	if(BizWarTime[1] > 0) {
		if(PI[killerid][pMember] != PI[playerid][pMember]) {
			if(PI[killerid][pMember] == MZInfo[bNapad] || PI[killerid][pMember] == MZInfo[bFrakVlad]) {
				if(PI[playerid][pMember] == MZInfo[bNapad] || PI[playerid][pMember] == MZInfo[bFrakVlad]) {
					if(PlayerToKvadrat(killerid, mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3]) && PlayerToKvadrat(playerid, mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3])) {
						SendDead(PI[killerid][pMember],PI[playerid][pMember],killerid,playerid,reason);
						MZInfo[bCountDead][PI[killerid][pMember]]++;
						SetPVarInt(killerid,"m_killed_shot",GetPVarInt(killerid,"m_killed_shot") + 1);
						if(PI[killerid][pFamily]) reputation_family(PI[killerid][pFamily]-1,1);
						if(PI[playerid][pFamily]) reputation_family(PI[playerid][pFamily]-1,-1);
					}
				}
			}
		}
	}
	if(IsAArm(killerid)) {
		if(IsAGang(playerid) || IsAMafia(playerid)) {
		    if(PlayerToKvadrat(killerid, -1544.892, 270.5747, -1232.015, 558.557) || PlayerToKvadrat(killerid, -49.979476, 1695.982177, 414.020507, 2175.982177)) {
		        if(PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.557) || PlayerToKvadrat(playerid, -49.979476, 1695.982177, 414.020507, 2175.982177)) {
		            GiveMoney(killerid,500,"Убийство бандита на территории армии");
				}
			}
		}
	}
	if(IsAGang(killerid) || IsACop(killerid) || IsAArm(killerid)) {
		if(invent_zone_id != -1) {
 			if(PlayerToKvadrat(playerid,invent_place[invent_zone_id][0], invent_place[invent_zone_id][1],invent_place[invent_zone_id][2],invent_place[invent_zone_id][3])) {
	 			if((IsACop(playerid) || IsAArm(playerid)) && IsAGang(killerid)) {
	 				GiveMoney(killerid,1500,"Убийство госника на территории корабля");
	 				if(PI[killerid][pMember]) add_gang_points(PI[killerid][pMember],2);
	 			}
	 			else if(IsAGang(playerid) && (IsACop(killerid) || IsAArm(killerid))) {
	 				GiveMoney(killerid,3000,"Убийство бандита на территории корабля");
	 			}
	 		}
 		}
	}
 	if(IsAGang(killerid) && killerid != INVALID_PLAYER_ID) {
 		if(IsAArm(playerid) && start_work[playerid]) {
			for(new i = 0; i < TOTALGZ; i++) {
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
					if(GetPlayerSkin(playerid) != 252 || PI[playerid][pFracSkin] != 252) {
						if(!PI[killerid][pArmSkin]) {
							PI[playerid][pFracSkin] = 252;
							SendOk(playerid, "Вы потеряли армейскую форму");
							SendOk(killerid, "Вы cняли с армейца форму, введите /dress, чтобы переодеться");
							PI[killerid][pZakonp] -= 2;
							if(PI[killerid][pZakonp] < -100) PI[killerid][pZakonp] = -100;
							PI[killerid][pArmSkin] = 1;
							UpdatePlayerData(killerid,"ArmSkin",1);
						}
					}
				}
			}
		}
	}
	TI[playerid][tMaskTime] = 0;
	TI[playerid][tTazers][0] = 0;

	if(!PI[playerid][pAdmin] && !TI[playerid][tDMArea][0] && !TI[playerid][tGunArea][0] && !TI[playerid][tGym] && !player_to_game[playerid] && !player_to_golod[playerid] && !IsAGang(playerid) && PI[playerid][pVips] != VIP_ECSCLUSIVE && PI[playerid][pVips] != VIP_FOREVER) SetPlayerHospital(playerid,spawn);
	//else SetPlayerHealth(playerid,100);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pAdmin] > 0 && dostup[i] && PI[i][pAdmKL]) {
			SendDeathMessageToPlayer(i, killerid, playerid, reason);
		}
	}
	SettingSpawn(playerid);
	return true;
}
public OnPlayerSpawn(playerid) {
	leave_robhouse(playerid);
	DeletePVar(playerid,"carrygun");
	DeletePVar(playerid, "SettingGraffiti");
	TI[playerid][tProcess][0] = -1;
	TI[playerid][tProcess][1] = -1;
    SetPlayerSkills(playerid);
	SetPlayerColor(playerid,0xFFFFFF11);
	TI[playerid][tSpawn] = true;
	if(!TI[playerid][tLogin] || !TI[playerid][tJoined]) return 1;
	if(TI[playerid][tClothesWork][0]) {
		for(new i = 0;i < 4;i++) {
			PlayerTextDrawHide(playerid,work_td[playerid][i]);
		}
	}
	if(GetTeamID(playerid) == 0) start_work[playerid] = 0;
	if(IsAGang(playerid) && IsAMafia(playerid)) start_work[playerid] = 1;
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	
	if(GetPlayerHP(playerid) < 10) SetPlayerHealth(playerid, 10);
	else SetPlayerHealth(playerid, GetPlayerHP(playerid));

	if(IsAGang(playerid)) {
		SetPlayerHealth(playerid, 95);
		AC_GivePlayerWeapon(playerid,5, 1);
	}

	if(TI[playerid][tLogin] == true) {
		for(new i; i < 10 ; i ++) {
			if(GunPlayer[playerid][i][0] == 0 || GunPlayer[playerid][i][1] == 0) continue;
			AC_GivePlayerWeapon(playerid,GunPlayer[playerid][i][0], GunPlayer[playerid][i][1]);
		}
		if(PI[playerid][pSearch] >= 1) SetPlayerWantedLevel(playerid,PI[playerid][pSearch]);
	}
	switch(PI[playerid][pSettings][5]) {
	    case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	    case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	    case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	    case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
	    TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendOk(GotoInfo[playerid][gtID],"Вы были выпущены с конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	else if(player_to_race_lv[playerid]) {
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		return 1;
	}
	else if(player_to_golod[playerid]) {
		players_in_golod--;
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		golod_deatch(playerid,players_in_golod);
		return 1;
	}
	else if(TI[playerid][tDuel] != -1) {
		end_duel(playerid,0);
		return 1;
	}
	SetPlayerPosAC(playerid, setX[playerid], setY[playerid], setZ[playerid], TI[playerid][tVirtualWorld], TI[playerid][tInterior], true);
	SettingSpawn(playerid);
	return true;
}
stock SettingSpawn(playerid) {
	if(TI[playerid][tDuel] != -1 || player_to_golod[playerid] || player_to_race_lv[playerid]) return 1;
	SetFullness(playerid, PI[playerid][pSatiety]);
	DollahScoreUpdate(playerid);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	new skin;
	if(PI[playerid][pMember] && start_work[playerid]) {
		skin = PI[playerid][pFracSkin];
	}
	else skin = PI[playerid][pSkin];
	/*else if(TI[playerid][tGym]) {
		if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
		else A_SetPlayerSkin(playerid,192);
		SetPlayerPosAC(playerid,762.6036,5.7514,1000.7126);
		SetPlayerFacingAngle(playerid,269.2828);
		SetPlayerInterior(playerid,5);
		SetPlayerVirtualWorld(playerid, 97);
		if(TI[playerid][tFight] != -1) {
			GiveMoney(playerid,-RingInfo[0][rgPrice],"поражение поединок");
			GiveMoney(TI[playerid][tFight],(RingInfo[0][rgPrice]*2),"победа поединок");
			PlayerSpawn(TI[playerid][tFight]);
			TI[TI[playerid][tFight]][tFight] = -1;
			TI[playerid][tFight] = -1;
			CheckPlayerRing(playerid);
		}
		return 1;
	}*/
	if(PI[playerid][pSpawn] == 3 && PI[playerid][pFamily] && gHouses[gFamily[PI[playerid][pFamily]-1][famHouse]][houseFamily]) {
		new houseid = gFamily[PI[playerid][pFamily]-1][famHouse];
		new interior, Float:r;
		new hint = gHouses[houseid][houseHint];
		TI[playerid][tSelectHouse] = houseid;
		x = hinterior_info[hint][h_pos_spawn][0];
		y = hinterior_info[hint][h_pos_spawn][1];
		z = hinterior_info[hint][h_pos_spawn][2];
		r = hinterior_info[hint][h_pos_spawn][3];
		interior = hinterior_info[hint][h_interior];
		SetSpawnInfoEx(playerid, skin, x, y, z, r);
		TI[playerid][tVirtualWorld] = houseid;
		TI[playerid][tInterior] = interior;
		TI[playerid][tInHouse] = true;
	}
	else if((PI[playerid][pHouse] > 0 && PI[playerid][pSpawn] == 1) || (PI[playerid][pTempKey] > 0 && PI[playerid][pSpawn] == 1)) {	
		if(PI[playerid][pTempKey] > 0) {
			new interior, Float:r;
			new houseid = PI[playerid][pTempKey];
			new hint = gHouses[houseid][houseHint];
			TI[playerid][tSelectHouse] = houseid;
			x = hinterior_info[hint][h_pos_spawn][0];
			y = hinterior_info[hint][h_pos_spawn][1];
			z = hinterior_info[hint][h_pos_spawn][2];
			r = hinterior_info[hint][h_pos_spawn][3];
			interior = hinterior_info[hint][h_interior];
			SetSpawnInfoEx(playerid, skin, x, y, z, r);
			TI[playerid][tVirtualWorld] = PI[playerid][pTempKey];
			TI[playerid][tInterior] = interior;
			TI[playerid][tInHouse] = true;
		}
		else {
			new interior, Float:r;
			new houseid = PI[playerid][pHouse];
			new hint = gHouses[houseid][houseHint];
			TI[playerid][tSelectHouse] = houseid;
			x = hinterior_info[hint][h_pos_spawn][0];
			y = hinterior_info[hint][h_pos_spawn][1];
			z = hinterior_info[hint][h_pos_spawn][2];
			r = hinterior_info[hint][h_pos_spawn][3];
			interior = hinterior_info[hint][h_interior];
			SetSpawnInfoEx(playerid, skin, x, y, z, r);
			TI[playerid][tVirtualWorld] = PI[playerid][pHouse];
			TI[playerid][tInterior] = interior;
			TI[playerid][tInHouse] = true;
		}
		return 1;
	}
	else if(PI[playerid][pRoom] && PI[playerid][pSpawn] == 1) {
		new hotel = PI[playerid][pRoom]-1;
		SetPVarInt(playerid, "selectedhotel",gRooms[hotel][roomsHotel]-1);
		SetSpawnInfoEx(playerid, skin, 1056.4556,-783.4918,1136.7097,90.7168);
		TI[playerid][tInterior] = 81;
        SetPlayerInterior(playerid,81);
		if(PI[playerid][pRoom] > 0) TI[playerid][tVirtualWorld] = gRooms[hotel][roomsID];
		else TI[playerid][tVirtualWorld] = 0;
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(PI[playerid][pMember] && PI[playerid][pSpawn] == 2 && start_work[playerid]) {
		new fractionid = PI[playerid][pMember];
		SetSpawnInfoEx(playerid, skin, gFractionSpawn[fractionid][fracCoordsX],gFractionSpawn[fractionid][fracCoordsY],gFractionSpawn[fractionid][fracCoordsZ], gFractionSpawn[fractionid][fracCoordsA]);
		TI[playerid][tVirtualWorld] = gFractionSpawn[fractionid][fracWorld];
		TI[playerid][tInterior] = gFractionSpawn[fractionid][fracInt];
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,gFractionSpawn[fractionid][fracColor]);
		return 1;
	}
	else
	{
		if(PI[playerid][pAdminLevel] > 0)
	    {
	        if(SERIU[playerid][sID] != INVALID_PLAYER_ID && PI[playerid][pAdmin] != 0)
	 		{
				HideMenuForPlayer(specmenu,playerid);
				PlayerTextDrawHide(playerid,RECON[playerid]);
				TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
				SERIU[playerid][sID] = INVALID_PLAYER_ID;
				if(avir[playerid] != -1) {
			 	    PI[playerid][pMember] = TI[playerid][preOrg];
				    PI[playerid][pRank] = TI[playerid][preOrgg];
				    SetSpawnInfoEx(playerid, TI[playerid][pOldSkin], TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z], 0);
					TI[playerid][tVirtualWorld] = avir[playerid];
					TI[playerid][tInterior] = aint[playerid];
					SetCameraBehindPlayer(playerid);
					//A_SetPlayerSkin(playerid, TI[playerid][pOldSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				    avir[playerid]=-1;
					TI[playerid][preOrg]=0;
				    TI[playerid][preOrgg]=0;
					if(!PI[playerid][pMember]) start_work[playerid] = false;
			 	    if(Lastspec[playerid]!=-1) {
			 	        new str[10];
			 	        format(str,10,"%d",Lastspec[playerid]);
				  		pc_cmd_goto(playerid,str);
			 	        Lastspec[playerid]=-1;
			 	    }
			 	}
				TogglePlayerControllable(playerid,true);
			}
			else if(game_start == 1 && player_to_game[playerid] == 1)
			{
			    /*
			    new random_spawn = random(sizeof spawns_pos_game);
				SetPlayerPosAC(playerid, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,10);
				SetPlayerFacingAngle(playerid, spawns_pos_game[random_spawn][4]);
				*/
				if(PI[playerid][pAdminLevel] > 0)
			    {
			        SetPlayerPosAC(playerid, 151.3463,747.4334,28.4552, 0,0);
					SetPlayerFacingAngle(playerid, 251.6314);

					TI[playerid][tVirtualWorld] = 0;
					TI[playerid][tInterior] = 0;
					SetCameraBehindPlayer(playerid);
				}
				else
				{
					if(PI[playerid][pLevel] < 3)
					{
					    SetPlayerPosAC(playerid, 2514.3108,-1812.9263,22.2100, 0,0);
						SetPlayerFacingAngle(playerid, 85.2798);

						SetSpawnInfoEx(playerid, skin, 2514.3108,-1812.9263,22.2100,85.2798);
					}
					else if(PI[playerid][pLevel] >= 3 && PI[playerid][pLevel] <= 6)
					{
					    SetPlayerPosAC(playerid, 1890.2421,2038.2003,17.2723, 0,0);
						SetPlayerFacingAngle(playerid, 357.8569);
					}
					else if(PI[playerid][pLevel] >= 7 && PI[playerid][pLevel] <= 10)
					{
					    SetPlayerPosAC(playerid, 197.2227,838.5482,12.3272, 0,0);
						SetPlayerFacingAngle(playerid, 173.6492);
					}
					else if(PI[playerid][pLevel] >= 11)
					{
					    SetPlayerPosAC(playerid, 2516.3171,-1846.0875,1002.0050, 0,0);
						SetPlayerFacingAngle(playerid, 355.9490);
					}
					TI[playerid][tVirtualWorld] = 0;
					TI[playerid][tInterior] = 0;
					SetCameraBehindPlayer(playerid);
				}
				SetPlayerHealth(playerid,100.0);

				new random_weapon = random(sizeof weapon_id_game);

				AC_GivePlayerWeapon(playerid, weapon_id_game[random_weapon], 999);

				SetPlayerColor(playerid,0xBC2C2CFF);
				return 1;
			}
			else if(TI[playerid][tDMArea][0]) {
				AC_GivePlayerWeapon(playerid, PaintGun[random(sizeof(PaintGun))], 3000);
				new rand = random(sizeof(DmArenaSpawns));
				SetSpawnInfoEx(playerid, skin, DmArenaSpawns[rand][0], DmArenaSpawns[rand][1], DmArenaSpawns[rand][2], 180.0);//куды
				TI[playerid][tVirtualWorld] = 8;
				TI[playerid][tInterior] = 0;
				SetPlayerColor(playerid,0x56FB4EFF);
				SetPlayerHealth(playerid,100);
				return 1;
			}
			else if(TI[playerid][tGunArea][0]) {
				if(TI[playerid][tGunArea][1] < 3) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[5], 3000);
				else if(TI[playerid][tGunArea][1] < 6) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[4], 3000);
				else if(TI[playerid][tGunArea][1] < 9) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[3], 3000);
				else if(TI[playerid][tGunArea][1] < 12) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[2], 3000);
				else if(TI[playerid][tGunArea][1] < 15) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[1], 3000);
				else if(TI[playerid][tGunArea][1] < 18) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[0], 3000);
				new rand = random(sizeof(DMPositions));
				SetSpawnInfoEx(playerid, skin, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2], 180.0);
				TI[playerid][tVirtualWorld] = 141;
				TI[playerid][tInterior] = 141;
				SetPlayerColor(playerid,0x56FB4EFF);
				SetPlayerHealth(playerid,100);
				return 1;
			}
			else if(PI[playerid][pJailTime] > 0) {
				switch(PI[playerid][pJail]) {
					case 0..3: {
						new rand = random(sizeof(PoliceSpawn));
						SetSpawnInfoEx(playerid, skin, PoliceSpawn[rand][0], PoliceSpawn[rand][1], PoliceSpawn[rand][2], PoliceSpawn[rand][3]);
						TI[playerid][tVirtualWorld] = PI[playerid][pJail] + 39;
						TI[playerid][tInterior] = 99;
					}
					case 4: {
						new rand = random(sizeof(AlcatrazSpawns));
						SetSpawnInfoEx(playerid, 8, AlcatrazSpawns[rand][0], AlcatrazSpawns[rand][1], AlcatrazSpawns[rand][2], AlcatrazSpawns[rand][3]);
						TI[playerid][tVirtualWorld] = 203;
						TI[playerid][tInterior] = 85;
					}
					case 5: {
						SetSpawnInfoEx(playerid, 8, 5512.2275,1248.5988,8.8505, 90.0);
						TI[playerid][tVirtualWorld] = 999;
						TI[playerid][tInterior] = 999;
					}
				}
				DelGun(playerid);
				SetCameraBehindPlayer(playerid);
				return 1;
			}
		 	else if(PI[playerid][pHospital] != 0) {
				new hosp = PI[playerid][pHospital];
				switch(PI[playerid][pHospital]) {
					case 1,2,3: {
						new rand = random(sizeof(HospitalSpawns));
						SetSpawnInfoEx(playerid, skin, HospitalSpawns[rand][0], HospitalSpawns[rand][1], HospitalSpawns[rand][2], HospitalSpawns[rand][3]);
						TI[playerid][tVirtualWorld] = hosp + 19;
						TI[playerid][tInterior] = 92;
					}
					case 4,5: {
						new rand = random(sizeof(HospitalArmSpawns));
						SetSpawnInfoEx(playerid, skin, HospitalArmSpawns[rand][0], HospitalArmSpawns[rand][1], HospitalArmSpawns[rand][2], HospitalArmSpawns[rand][3]);
						TI[playerid][tVirtualWorld] = hosp + 29;
						TI[playerid][tInterior] = 90;
					}
				}
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			else
			{
		        SetSpawnInfoEx(playerid, skin, 151.3463,747.4334,28.4552,251.6314);

		        TI[playerid][tVirtualWorld] = 0;
				TI[playerid][tInterior] = 0;
				SetCameraBehindPlayer(playerid);
			}
		}
		else
		{
		 	if(SERIU[playerid][sID] != INVALID_PLAYER_ID && PI[playerid][pAdmin] != 0)
	 		{
				HideMenuForPlayer(specmenu,playerid);
				PlayerTextDrawHide(playerid,RECON[playerid]);
				TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
				SERIU[playerid][sID] = INVALID_PLAYER_ID;
				if(avir[playerid] != -1) {
			 	    PI[playerid][pMember] = TI[playerid][preOrg];
				    PI[playerid][pRank] = TI[playerid][preOrgg];
				    SetSpawnInfoEx(playerid, TI[playerid][pOldSkin], TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z], 0);
					TI[playerid][tVirtualWorld] = avir[playerid];
					TI[playerid][tInterior] = aint[playerid];
					SetCameraBehindPlayer(playerid);
					//A_SetPlayerSkin(playerid, TI[playerid][pOldSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				    avir[playerid]=-1;
					TI[playerid][preOrg]=0;
				    TI[playerid][preOrgg]=0;
					if(!PI[playerid][pMember]) start_work[playerid] = false;
			 	    if(Lastspec[playerid]!=-1) {
			 	        new str[10];
			 	        format(str,10,"%d",Lastspec[playerid]);
				  		pc_cmd_goto(playerid,str);
			 	        Lastspec[playerid]=-1;
			 	    }
			 	}
				TogglePlayerControllable(playerid,true);
			}
			else if(game_start == 1 && player_to_game[playerid] == 1)
			{
			    /*
			    new random_spawn = random(sizeof spawns_pos_game);
				SetPlayerPosAC(playerid, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,10);
				SetPlayerFacingAngle(playerid, spawns_pos_game[random_spawn][4]);
				*/
				if(PI[playerid][pAdminLevel] > 0)
			    {
			        SetPlayerPosAC(playerid, 151.3463,747.4334,28.4552, 0,0);
					SetPlayerFacingAngle(playerid, 251.6314);
					
					TI[playerid][tVirtualWorld] = 0;
					TI[playerid][tInterior] = 0;
					SetCameraBehindPlayer(playerid);
				}
				else
				{
					if(PI[playerid][pLevel] < 3)
					{
					    SetPlayerPosAC(playerid, 2514.3108,-1812.9263,22.2100, 0,0);
						SetPlayerFacingAngle(playerid, 85.2798);

						SetSpawnInfoEx(playerid, skin, 2514.3108,-1812.9263,22.2100,85.2798);
					}
					else if(PI[playerid][pLevel] >= 3 && PI[playerid][pLevel] <= 6)
					{
					    SetPlayerPosAC(playerid, 1890.2421,2038.2003,17.2723, 0,0);
						SetPlayerFacingAngle(playerid, 357.8569);
					}
					else if(PI[playerid][pLevel] >= 7 && PI[playerid][pLevel] <= 10)
					{
					    SetPlayerPosAC(playerid, 197.2227,838.5482,12.3272, 0,0);
						SetPlayerFacingAngle(playerid, 173.6492);
					}
					else if(PI[playerid][pLevel] >= 11)
					{
					    SetPlayerPosAC(playerid, 2516.3171,-1846.0875,1002.0050, 0,0);
						SetPlayerFacingAngle(playerid, 355.9490);
					}
					TI[playerid][tVirtualWorld] = 0;
					TI[playerid][tInterior] = 0;
					SetCameraBehindPlayer(playerid);
				}
				SetPlayerHealth(playerid,100.0);

				new random_weapon = random(sizeof weapon_id_game);

				AC_GivePlayerWeapon(playerid, weapon_id_game[random_weapon], 999);

				SetPlayerColor(playerid,0xBC2C2CFF);
				return 1;
			}
			else if(TI[playerid][tDMArea][0]) {
				AC_GivePlayerWeapon(playerid, PaintGun[random(sizeof(PaintGun))], 3000);
				new rand = random(sizeof(DmArenaSpawns));
				SetSpawnInfoEx(playerid, skin, DmArenaSpawns[rand][0], DmArenaSpawns[rand][1], DmArenaSpawns[rand][2], 180.0);//куды
				TI[playerid][tVirtualWorld] = 8;
				TI[playerid][tInterior] = 0;
				SetPlayerColor(playerid,0x56FB4EFF);
				SetPlayerHealth(playerid,100);
				return 1;
			}
			else if(TI[playerid][tGunArea][0]) {
				if(TI[playerid][tGunArea][1] < 3) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[5], 3000);
				else if(TI[playerid][tGunArea][1] < 6) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[4], 3000);
				else if(TI[playerid][tGunArea][1] < 9) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[3], 3000);
				else if(TI[playerid][tGunArea][1] < 12) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[2], 3000);
				else if(TI[playerid][tGunArea][1] < 15) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[1], 3000);
				else if(TI[playerid][tGunArea][1] < 18) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[0], 3000);
				new rand = random(sizeof(DMPositions));
				SetSpawnInfoEx(playerid, skin, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2], 180.0);
				TI[playerid][tVirtualWorld] = 141;
				TI[playerid][tInterior] = 141;
				SetPlayerColor(playerid,0x56FB4EFF);
				SetPlayerHealth(playerid,100);
				return 1;
			}
			else if(PI[playerid][pJailTime] > 0) {
				switch(PI[playerid][pJail]) {
					case 0..3: {
						new rand = random(sizeof(PoliceSpawn));
						SetSpawnInfoEx(playerid, skin, PoliceSpawn[rand][0], PoliceSpawn[rand][1], PoliceSpawn[rand][2], PoliceSpawn[rand][3]);
						TI[playerid][tVirtualWorld] = PI[playerid][pJail] + 39;
						TI[playerid][tInterior] = 99;
					}
					case 4: {
						new rand = random(sizeof(AlcatrazSpawns));
						SetSpawnInfoEx(playerid, 8, AlcatrazSpawns[rand][0], AlcatrazSpawns[rand][1], AlcatrazSpawns[rand][2], AlcatrazSpawns[rand][3]);
						TI[playerid][tVirtualWorld] = 203;
						TI[playerid][tInterior] = 85;
					}
					case 5: {
						SetSpawnInfoEx(playerid, 8, 5512.2275,1248.5988,8.8505, 90.0);
						TI[playerid][tVirtualWorld] = 999;
						TI[playerid][tInterior] = 999;
					}
				}
				DelGun(playerid);
				SetCameraBehindPlayer(playerid);
				return 1;
			}
		 	else if(PI[playerid][pHospital] != 0) {
				new hosp = PI[playerid][pHospital];
				switch(PI[playerid][pHospital]) {
					case 1,2,3: {
						new rand = random(sizeof(HospitalSpawns));
						SetSpawnInfoEx(playerid, skin, HospitalSpawns[rand][0], HospitalSpawns[rand][1], HospitalSpawns[rand][2], HospitalSpawns[rand][3]);
						TI[playerid][tVirtualWorld] = hosp + 19;
						TI[playerid][tInterior] = 92;
					}
					case 4,5: {
						new rand = random(sizeof(HospitalArmSpawns));
						SetSpawnInfoEx(playerid, skin, HospitalArmSpawns[rand][0], HospitalArmSpawns[rand][1], HospitalArmSpawns[rand][2], HospitalArmSpawns[rand][3]);
						TI[playerid][tVirtualWorld] = hosp + 29;
						TI[playerid][tInterior] = 90;
					}
				}
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			else
			{
				if(PI[playerid][pLevel] < 3)
				{
					SetSpawnInfoEx(playerid, skin, 2514.3108,-1812.9263,22.2100,85.2798);
				}
				else if(PI[playerid][pLevel] >= 3 && PI[playerid][pLevel] <= 6)
				{
					SetSpawnInfoEx(playerid, skin, 1890.2421,2038.2003,17.2723,357.8569);
				}
				else if(PI[playerid][pLevel] >= 7 && PI[playerid][pLevel] <= 10)
				{
					SetSpawnInfoEx(playerid, skin, 197.2227,838.5482,12.3272,173.6492);
				}
				else if(PI[playerid][pLevel] >= 11)
				{
					SetSpawnInfoEx(playerid, skin, 2516.3171,-1846.0875,1002.0050,355.9490);
				}
				TI[playerid][tVirtualWorld] = 0;
				TI[playerid][tInterior] = 0;
				SetCameraBehindPlayer(playerid);
			}
		}
	}
	return 1;
}
public OnPlayerEnterCheckpoint(playerid) {
    if(TI[playerid][tJobGun][0]) {
		if(TI[playerid][tJobGun][1] != 2) return ErrorMessage(playerid,"Необходимо взять заготовку");
		for(new id = 0;id < sizeof(gun_checkpoints);id++) {
			if(IsPlayerInDynamicCP(playerid, gun_pickup[id])) {
		        SetPVarInt(playerid,"loadid",id);

				JobTempProcess[playerid] = 3;
				TI[playerid][tProcess][0] = 0;
				TI[playerid][tProcess][1] = 10;
				PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
				for(new YN = 0;YN < 3;YN++) {
					TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				RandomYareNforJOBS(playerid);
			}
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	switch(GetPVarInt(playerid,"MatsArmyCar")) {
		case 1..4: {
			DisablePlayerCheckpoint(playerid);
			if(GetPVarInt(playerid,"MatsArmyCar") == 1 && !IsPlayerInRangeOfPoint(playerid, 10.0, -573.9612,489.6738,11.0655)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 2 && !IsPlayerInRangeOfPoint(playerid, 10.0, 2748.9746,-2456.9094,21.6890)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 3 && !IsPlayerInRangeOfPoint(playerid, 10.0, 2586.9053,-2435.4187,21.8047)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 4 && !IsPlayerInRangeOfPoint(playerid, 10.0, 2388.8442,-1867.5363,21.8193)) return 1;
			new string[96];
			if(VG[vehicleid][vgAmount][0] <= 0) return ErrorMessage(playerid,"Грузовик пуст");
			switch(GetPVarInt(playerid,"MatsArmyCar")) {
				case 1: {
					FI[fLSPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fLSPD][fMats] > 500000) FI[fLSPD][fMats] = 500000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе Полиции ЛС: "W"%i",FI[fLSPD][fMats]);
					SendOk(playerid,string);
				}
				case 2: {
					FI[fSFPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fSFPD][fMats] > 500000) FI[fSFPD][fMats] = 500000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе Полиции СФ: "W"%i",FI[fSFPD][fMats]);
					SendOk(playerid,string);
				}
				case 3: {
					FI[fLVPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fLVPD][fMats] > 500000) FI[fLVPD][fMats] = 500000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе Полиции ЛВ: "W"%i",FI[fLVPD][fMats]);
					SendOk(playerid,string);
				}
				case 4: {
					FI[fFBI][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fFBI][fMats] > 500000) FI[fFBI][fMats] = 500000;
					format(string,sizeof(string),"Боеприпасы успешно выгружены! На складе ФБР: "W"%i",FI[fFBI][fMats]);
					SendOk(playerid,string);
				}
			}
			GiveMoney(playerid,1500,"доставка боеприпасов");
			VG[vehicleid][vgAmount][0] = 0;
			DeletePVar(playerid,"MatsArmyCar");
		}
		case 5: {
			static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,zavodsklad,30000-VG[vehicleid][vgAmount][0]);
			D(playerid, D_ARMY_CARM_SF_4, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 6: {
			static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите загрузить в матолёт:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"В матолёт поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,FI[fARMYSF][fMats],30000-VG[vehicleid][vgAmount][0]);
			D(playerid, D_ARMY_CARM_SF_5, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 7: {
			static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYSF][fMats]);
			D(playerid, D_ARMY_CARM_SF_6, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 8: {
			static const f_str[] = ""W"Введите кол-во боеприпасов, которое хотите разгрузить на склад:\n\n\
									Доступно боеприпасов: "ORANGE"%d\n\
									"W"На склад поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLV][fMats]);
			D(playerid, D_ARMY_CARM_SF_7, DSI, ""P"Загрузка боеприпасов",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 10: {
			if(VG[vehicleid][vgAmount][0]) return ErrorMessage(playerid,"В автомобиле уже есть боеприпасы");
			if(FI[fARMYLV][fMats] < 12500) return ErrorMessage(playerid,"На складе армии недостаточно боеприпасов");
			VG[vehicleid][vgAmount][0] = 25;
			FI[fARMYLV][fMats] -= 500*25;
			SendOk(playerid,"Боеприпасы успешно загружены! Доступно ящиков: "W"25");
			SendOk(playerid,"Для разгрузки боеприпасов введите: "W"/unload");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 11: {
			if(VG[vehicleid][vgAmount][0]) return ErrorMessage(playerid,"В автомобиле уже есть боеприпасы");
			if(FI[fARMYSF][fMats] < 12500) return ErrorMessage(playerid,"На складе армии недостаточно боеприпасов");
			VG[vehicleid][vgAmount][0] = 25;
			FI[fARMYSF][fMats] -= 500*25;
			SendOk(playerid,"Боеприпасы успешно загружены! Доступно ящиков: "W"25");
			SendOk(playerid,"Для разгрузки боеприпасов введите: "W"/unload");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
	}
	switch(GetPVarInt(playerid,"DrugsMafiaCar")) {
		case 1: {
			if(VG[vehicleid][vgDrugs] >= 500) return ErrorMessage(playerid,"Грузовик полон");
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите загрузить в грузовик:\n\n\
									Доступно наркотиков: "ORANGE"%d\n\
									"W"В грузовик поместится: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fDrugs],500-VG[vehicleid][vgDrugs]);
			D(playerid, D_MAFIA_CARM_2, DSI, ""P"Загрузка наркотиков",string, "Загрузить", "Отмена");
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 2: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fBALLAS][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Ballas:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fBALLAS][fDrugs],FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",1);
		}
		case 3: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fVAGOS][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Vagos:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fVAGOS][fDrugs],FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",2);
		}
		case 4: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fGROVE][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Grove:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fGROVE][fDrugs],FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",3);
		}
		case 5: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fAZTEC][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Aztec:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fAZTEC][fDrugs],FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",4);
		}
		case 6: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fRIFA][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиков") ;
			static const f_str[] = ""W"Введите кол-во наркотиков, которое хотите продать The Rifa:\n\n\
									Доступно наркотиков: "ORANGE"%d"W"\n\
									Склад банды: "ORANGE"%d\n\
									"W"Заказ банды: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fRIFA][fDrugs],FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""P"Продажа наркотиков",string, "Продать", "Отмена");
			SetPVarInt(playerid,"sell_gdrugs",5);
		}
	}
	if(TI[playerid][tTrucker][0]) {
		SendOk(playerid,"Посигнальте для разгрузки груза");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	if(gpss[playerid])
	{
		DisablePlayerGPS(playerid);
		return 1;
	}
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid) {
	if(TI[playerid][tJobGun][0]) {
		if(TI[playerid][tProcess][0] == -1) return 1;
		for(new id = 0;id < sizeof(gun_checkpoints);id++) {
			if(!IsPlayerInDynamicCP(playerid, gun_pickup[id])) {
				TI[playerid][tProcess][0] = -1;
				TI[playerid][tProcess][1] = -1;
				for(new YN = 0;YN < 3;YN++) {
					TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				JobTempProcess[playerid] = 0;
			}
		}
	}
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid) {
	if(gpss[playerid]) gpss[playerid] = 0;
	if(!GetPVarInt(playerid,"route") && !GetPVarInt(playerid,"check_job_cleaner")) DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid,"WaitExam")) {
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlot");
		if(slot == AUTO_CP_COUNT) {
			new Float:health;
			GetVehicleHealth(GetPlayerVehicleID(playerid),health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Поздравляем с получением водительского удостоверения");
				lic[playerid][0] = 1;
				UpdateLicenses(playerid);
				
				DeletePVar(playerid,"error_test");
				DeletePVar(playerid,"use_test");
				DeletePVar(playerid,"pTestQNumber");
				
				A_DestroyVehicle(car_autoschool[playerid]);
				car_autoschool[playerid] = INVALID_VEHICLE_ID;
				DisablePlayerRaceCheckpoint(playerid);
				
				DeletePVar(playerid,"LessonSlot");
				DeletePVar(playerid,"WaitExam");
				DeletePVar(playerid,"pWaitingExam");
				
				SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
				TI[playerid][tAutoSchool] = 0;
			}
			else
			{
				SendOk(playerid,"Тест по вождению завален, Вы еще плохо водите автомобиль");

				A_DestroyVehicle(air_autoschool[playerid]);
				air_autoschool[playerid] = INVALID_VEHICLE_ID;
				DisablePlayerRaceCheckpoint(playerid);
				
				DeletePVar(playerid,"LessonSlot");
				DeletePVar(playerid,"WaitExam");
				DeletePVar(playerid,"pWaitingExam");
				
				SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
				TI[playerid][tAutoSchool] = 0;
			}
		}
		else if(slot >= AUTO_CP_COUNT - 1) SetPlayerRaceCheckpoint(playerid, 1, AutoCP[AUTO_CP_COUNT - 1][0], AutoCP[AUTO_CP_COUNT - 1][1], AutoCP[AUTO_CP_COUNT - 1][2], AutoCP[AUTO_CP_COUNT - 1][3], AutoCP[AUTO_CP_COUNT - 1][4], AutoCP[AUTO_CP_COUNT - 1][5], 3.0);
		else SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot][3], AutoCP[slot][4], AutoCP[slot][5], 3.0);
		SetPVarInt(playerid,"LessonSlot", slot + 1);
		return 1;
	}
	if(TI[playerid][tAutoSchool] == 2) {
		if(air_autoschool[playerid] == INVALID_VEHICLE_ID) return 1;
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlotMav");
		if(slot == 16) {
			new Float:health;
			GetVehicleHealth(air_autoschool[playerid],health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Поздравляем с получением лицензии на полёты");
				lic[playerid][1] = 1;
				UpdateLicenses(playerid);
				
				DeletePVar(playerid,"error_test");
				DeletePVar(playerid,"use_test");
				DeletePVar(playerid,"pTestQNumber");

				A_DestroyVehicle(air_autoschool[playerid]);
				air_autoschool[playerid] = INVALID_VEHICLE_ID;
				DisablePlayerRaceCheckpoint(playerid);
				
				DeletePVar(playerid,"LessonSlotMav");
				DeletePVar(playerid,"WaitExam");
				DeletePVar(playerid,"pWaitingExam");
				
				SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
				TI[playerid][tAutoSchool] = 0;
			}
			else
			{
				SendOk(playerid,"Тест по завален, Вы еще плохо управляете воздушным транспортом");

				A_DestroyVehicle(air_autoschool[playerid]);
				air_autoschool[playerid] = INVALID_VEHICLE_ID;
				DisablePlayerRaceCheckpoint(playerid);

				DeletePVar(playerid,"LessonSlotMav");
				DeletePVar(playerid,"WaitExam");
				DeletePVar(playerid,"pWaitingExam");
				
				SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
				TI[playerid][tAutoSchool] = 0;
			}
		}
		else if(slot >= 13 - 1) SetPlayerRaceCheckpoint(playerid, 4, AutoCPMav[13 - 1][0], AutoCPMav[13 - 1][1], AutoCPMav[13 - 1][2], 0.0,0.0,0.0, 5.0);
		else SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[slot][0], AutoCPMav[slot][1], AutoCPMav[slot][2], AutoCPMav[slot+1][0], AutoCPMav[slot+1][1], AutoCPMav[slot+1][2], 5.0);
		SetPVarInt(playerid,"LessonSlotMav", slot + 1);
		return 1;
	}
	if(TI[playerid][tAutoSchool] == 3) {
		if(boat_autoschool[playerid] == INVALID_VEHICLE_ID) return 1;
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlotBoat");
		if(slot == 17) {
			new Float:health;
			GetVehicleHealth(boat_autoschool[playerid],health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Поздравляем с получением лицензии на водный транспорт");
				lic[playerid][2] = 1;
				UpdateLicenses(playerid);
				
				DeletePVar(playerid,"error_test");
				DeletePVar(playerid,"use_test");
				DeletePVar(playerid,"pTestQNumber");

				A_DestroyVehicle(boat_autoschool[playerid]);
				boat_autoschool[playerid] = INVALID_VEHICLE_ID;
				DisablePlayerRaceCheckpoint(playerid);

				DeletePVar(playerid,"LessonSlotBoat");
				
				SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
				TI[playerid][tAutoSchool] = 0;
			}
			else
			{
				SendOk(playerid,"Тест по завален, Вы еще плохо управляете водным транспортом");

				A_DestroyVehicle(boat_autoschool[playerid]);
				boat_autoschool[playerid] = INVALID_VEHICLE_ID;
				DisablePlayerRaceCheckpoint(playerid);
				
				DeletePVar(playerid,"LessonSlotBoat");
				
				SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76,true);
				TI[playerid][tAutoSchool] = 0;
			}
		}
		else if(slot >= 14 - 1) SetPlayerRaceCheckpoint(playerid, 1, AutoCPBoat[14 - 1][0], AutoCPBoat[14 - 1][1], AutoCPBoat[14 - 1][2], 0.0,0.0,0.0, 4.5);
		else SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[slot][0], AutoCPBoat[slot][1], AutoCPBoat[slot][2], AutoCPBoat[slot+1][0], AutoCPBoat[slot+1][1], AutoCPBoat[slot+1][2], 4.5);
		SetPVarInt(playerid,"LessonSlotBoat", slot + 1);
		return 1;
	}
	else if(GetPlayerState(playerid) == 2 && GetPlayerVehicleID(playerid) != 0 && GetPVarInt(playerid, "id_cp") && GetPVarInt(playerid,"route") && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 1) {
		//if(!IsPlayerInRangeOfPoint(playerid,30,gBusCPs[GetPVarInt(playerid,"route")][GetPVarInt(playerid, "id_cp")][1],gBusCPs[GetPVarInt(playerid,"route")][GetPVarInt(playerid, "id_cp")][2],gBusCPs[GetPVarInt(playerid,"route")][GetPVarInt(playerid, "id_cp")][3])) Kick(playerid);
		SetNextBusCP(playerid);
		return 1;
	}
	if(GetPVarInt(playerid,"RaceCP") != 0) {
		SetNextRaceCP(playerid,race_type);
		return 1;
	}
	if(GetPVarInt(playerid,"check_job_cleaner") && GetPVarInt(playerid, "check_job_cleaner") && GetPlayerState(playerid) == 2 && GetPlayerVehicleID(playerid) != 0 && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 5) {
		SetNextJobClearCP(playerid,GetPVarInt(playerid, "route_job_cleaner"));
		return 1;
	}
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid) {
	return 1;
}
public OnRconCommand(cmd[]) {
	return true;
}
CB: CarryDelay(playerid) ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
CB: PlayerDelayBailer(playerid) {
	SendClientMessage(playerid,CGOLD,"Вы полили дерево. Ожидайте стадии - сбор яблок");
	ClearAnimations(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid, 7);
	SetPVarInt(playerid,"sad_uxod",1);
}
CB: PlayerUdostover(playerid) {
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2))RemovePlayerAttachedObject(playerid, 2);
}
public OnRconLoginAttempt(ip[], password[], success) return false;

public OnPlayerPickUpPickup(playerid, pickupid)
{

	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid) {
	if(!TI[playerid][tLogin]) return 1;
	if(pickupid == oldpickup[playerid]) return true;
	oldpickup[playerid] = pickupid;
	timepickup[playerid] = 3;
	new Float:zx;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], zx);
	if(pickupid == pickups_game_dm[0]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[1]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[2]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[3]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[4]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[5]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[6]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[7]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[8]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[9]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[10]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[11]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[12]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[13]) return SetPlayerArmour(playerid,100);

	else if(golod_start) {
		for(new id; id <= 20; id++) {
			if(pickups_game_golod[id] == -1) continue;
			if(pickupid == pickups_game_golod[id]) {
				if(golod_use_pickup[playerid]) return ErrorMessage(playerid,"Вы уже брали начальный пикап");
				DestroyDynamicPickup(pickups_game_golod[id]);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				pickups_game_golod[id] = -1;
				golod_use_pickup[playerid] = 1;
				return 1;
			}
		}
		for(new id; id <= 20; id++) {
			if(pickups_game_golod_2[id] == -1) continue;
			if(pickupid == pickups_game_golod_2[id]) {
				DestroyDynamicPickup(pickups_game_golod_2[id]);
				pickups_game_golod_2[id] = -1;
				new random_weapon = random(sizeof weapon_id_game);
				new random_ammo = Random(10,35);
				AC_GivePlayerWeapon(playerid, weapon_id_game[random_weapon], random_ammo);
				return 1;
			}
		}
	}
	else if(g_arena_created) {
		for(new blockid; blockid < 64; blockid++) {
			if(pickupid == b_pickupid[blockid]) return OnPlayerCaptureBlock(playerid, blockid);
		}
	}
	else if(pickupid == fork_pickup) {
		fork_pickups = 0;
		DestroyDynamicPickup(fork_pickup);
		TI[playerid][tAlcotraz][2] = 1;
		D(playerid,DIALOG_NONE,DSM, ""P"Побег",""W"Мысли...\n\nТак-так, вилка..\nИнтересно, где ее можно использовать..\nМожет попробовать открыть что-то..","Закрыть","");
		return 1;
	}
	else if(pickupid == election) {
		if(PI[playerid][pLevel] < 3) return ErrorMessage(playerid,"Голосовать можно с 3 уровня");
		if(PI[playerid][pGolos]) return ErrorMessage(playerid,"Вы уже голосовали");
		new string[1024];
		for(new i = 0; i < MAX_VOTES; i++) {
			if(strlen(vote_name[i])) {
				format(string,sizeof(string), "%s%i. %s (Голосов: %i)\n", string, i+1, vote_name[i],vote_count[i]);
			}
			else format(string,sizeof(string),"%s%i. -\n",string, i+1);
		}
		return D(playerid,D_ELECTION_2,DSL,""P"Список кандидатов",string,"Выбрать","Закрыть");
	}
	else if(pickupid == gameint[0])
	{
	    if(GetPVarInt(playerid,"comp_game") <= unix) return ErrorMessage(playerid,"Купите билет для игры");
	    
	    SetPlayerPosAC(playerid, -632.1804,2205.1189,1003.4985,76,45);
		SetPlayerFacingAngle(playerid, 90.9408);

		SetCameraBehindPlayer(playerid);
		
		SetPVarInt(playerid, "GamePlayerInterior", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "GamePlayerVirtualWorld", GetPlayerVirtualWorld(playerid));
		return 1;
	}
	else if(pickupid == gameint[1])
	{
	    SetPlayerPosAC(playerid, 190.1699,2271.4661,1001.5000, GetPVarInt(playerid, "GamePlayerVirtualWorld"), GetPVarInt(playerid, "GamePlayerInterior"));
		SetPlayerFacingAngle(playerid, 175.6118);

		SetCameraBehindPlayer(playerid);
		
		DeletePVar(playerid, "GamePlayerInterior");
		DeletePVar(playerid, "GamePlayerVirtualWorld");
		return 1;
	}
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row) {
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == specmenu) {
		switch(row) {
			case 0: SpecPlayer(playerid,SERIU[playerid][sID]);
			case 1: return D(playerid,D_REC_KICK,DSI, ""P"KICK","\n\n"W"Введите причину, по которой хотите кикнуть игрока с сервера:\n\n","Кикнуть","Отмена"),ShowMenuForPlayer(specmenu,playerid);
			//case 2: return D(playerid,D_REC_WARN,DSI, ""P"WARN","\n\n"W"Введите причину, по которой хотите выдать Warn игроку:\n\n","Варн","Отмена"),ShowMenuForPlayer(specmenu,playerid);
			case 3: return D(playerid,D_REC_BAN,DSI, ""P"BAN","\n\n"W"Введите причину, по которой хотите заблокировать аккаунт игроку:\n"NO"ВНИМАНИЕ!"W" Введите время и причину через запятую без пробелов (15,читер)\nВремя блокировки аккаунта: от 7 до 30 дней\n\n","Бан","Отмена"),ShowMenuForPlayer(specmenu,playerid);
			case 4: {
				new stm[11];
				format(stm,10,"%d",SERIU[playerid][sID]);
				pc_cmd_slap(playerid,stm);
				ShowMenuForPlayer(specmenu,playerid);
				return 1;
			}
			case 5: return ShowStats(playerid,SERIU[playerid][sID],1),ShowMenuForPlayer(specmenu,playerid);//stats
			case 6: {
				for(new plid = SERIU[playerid][sID]+1; plid<MAX_PLAYERS; plid++) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				for(new plid; plid<=SERIU[playerid][sID]; plid++) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				return 1;
			}
			case 7:  {
				for(new plid = SERIU[playerid][sID]-1; plid>=0; plid--) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				for(new plid=MAX_PLAYERS-1; plid>=SERIU[playerid][sID]; plid--) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				return 1;
			}
			case 8: Lastspec[playerid] = SERIU[playerid][sID],pc_cmd_reoff(playerid,"");//exit
		}
	}
	return true;
}
public OnPlayerExitedMenu(playerid) {
	if(!IsValidMenu(GetPlayerMenu(playerid))) return true;
	ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
	TogglePlayerControllable(playerid,0);
	return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate) {
	if(newstate == PLAYER_STATE_PASSENGER && (GetPlayerWeapon( playerid ) == 24 || GetPlayerWeapon( playerid ) == 25)) SetPlayerArmedWeapon(playerid, 0);
	if(!ac_1{playerid} && newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_NONE) return Kick(playerid),printf("%d",55555);
	if(newstate == oldstate) return Kick(playerid),printf("%d",333333);

	if(newstate == PLAYER_STATE_DRIVER) {
		LastVeh[playerid] = GetPlayerVehicleID(playerid);
		new tr = GetVehicleTrailer(LastVeh[playerid]);
		if(tr != 0) VehTrailer[playerid] = tr;
	}
	if(oldstate == PLAYER_STATE_DRIVER) {
		LastVeh[playerid] = INVALID_VEHICLE_ID;
		VehTrailer[playerid] = INVALID_VEHICLE_ID;

		if(player_to_race_lv[playerid] == 1) {
			A_DestroyVehicle(player_car_race_lv_id[playerid]);
			player_car_race_lv_id[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			player_to_race_lv[playerid] = 0;
			for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
			new random_spawn = random(sizeof spawns_pos_game_end);
			SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
			SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
			ErrorMessage(playerid,"Вы вышли из автомобиля и были дисквалифицированы с гонки");
		}
		if(theftveh[playerid][0] != INVALID_VEHICLE_ID && theftveh[playerid][2] == 1){ //угон
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
		}
		if(TI[playerid][tRaceID] != INVALID_VEHICLE_ID) srace_end(playerid,2);
	}
	if((oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER) && newstate == PLAYER_STATE_WASTED) {
		new vid = GetPlayerVehicleID(playerid);
		if(vid) {
			new Float:x, Float:y, Float:z;
			GetVehiclePos(vid, x, y, z),
			SetPlayerPosAC(playerid, x, y, z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER) {
	    new carid = GetPlayerVehicleID(playerid);
		if(VehicleInfo[carid][vFuel] <= 0 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid)) {
			ErrorMessage(playerid, "В автомобиле закончился бензин");
			VehicleInfo[carid][vFuel] = 0;
		}
		if(IsAVelik(carid)) {
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
		}
		if(IsAPlane(carid) || IsABoat(carid)) SendClientMessage(playerid,COLOR_GREY, "Завести/заглушить двигатель, используйте: "P"/en");
  		if(!IsABoat(carid) && !IsAPlane(carid) && !IsABikeSped(carid)) {
			SendClientMessage(playerid, COLOR_GREY, "Для того чтобы завести/заглушить, нажмите кнопку "P"\"CTRL\""G", управление фарами: "P"\"ALT\"");
			if(!IsABike(carid) && !IsAVelik(carid)) SendClientMessage(playerid, COLOR_GREY, "Управление поворотниками "P"\"NUM4 | NUM6\"");
			SendClientMessage(playerid, COLOR_GREY, "Установка ограничения скорости: "P"\"/slimit\"");
			update_speedometer(playerid);
			speed_timer[playerid] = SetTimerEx("update_speedometer", 300, true, "i",playerid);
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			for(new i; i != 16; i++) {
				if(i == 10) {
					if(engine) PlayerTextDrawColor(playerid, speedometr[playerid][10], 780799999);
					else PlayerTextDrawColor(playerid, speedometr[playerid][10], -1523963137);
				}
				if(i == 11) {
					if(lights) PlayerTextDrawColor(playerid, speedometr[playerid][11], 780799999);
					else PlayerTextDrawColor(playerid, speedometr[playerid][11], -1523963137);
				}
				if(i == 15) {
					if(doors) PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
					else PlayerTextDrawColor(playerid, speedometr[playerid][15], 780799999);
				}
				PlayerTextDrawShow(playerid, speedometr[playerid][i]);
			}
		}
		if(theftveh[playerid][0] == GetPlayerVehicleID(playerid)){ //угон
			theftveh[playerid][1] = 0;
			theftveh[playerid][2] = 1;
			PlayerTextDrawHide(playerid, theft_PTD[playerid][1]);
		}
		if(TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && GetVehicleModel(carid) != 530) {
			SendOk(playerid,"Вы уронили бочку");
			ClearAnimations(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			SetPlayerMapIcon(playerid,1,2743.5747,-2200.5796,21.9503,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,2752.0374,-2197.0898,21.9503,11,-1,MAPICON_GLOBAL);
			TI[playerid][tJobOil][1] = false;
		}
		if(GetVehicleModel(carid) == 433) {
		    static const f_str[] = "Загружено боеприпасов: "W"%d/40"G" ящиков";
		    new string[sizeof(f_str) +4];
		    
			format(string,sizeof(string),f_str,VG[carid][vgAmount][0]);
			SendOk(playerid,string);
			if(PI[playerid][pMember] == fARMYLV) {
				SendOk(playerid,"Для загрузки/разгрузки боеприпасов введите: "W"/load | /unload");
				SendOk(playerid,"Для транспортировки боеприпасов на склады фракций: "W"/carm");
			}
			if(PI[playerid][pMember] == fARMYSF) SendOk(playerid,"Используйте: "W"/carm");
			if(IsAGang(playerid)) SendOk(playerid,"Для загрузки боеприпасов введите: "W"/load");
		} 
		if(GetVehicleModel(carid) == 548) {
		    static const f_str[] = "Загружено боеприпасов: "W"%d";
		    new string[sizeof(f_str) +7];

			format(string,sizeof(string),f_str,VG[carid][vgAmount][0]);
			SendOk(playerid,string);
			SendOk(playerid,"Используйте: "W"/carm");
		}
		if(VehicleInfo[carid][vTeam] != 0) {
			if(GetTeamID(playerid) != VehicleInfo[carid][vTeam] && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) {
				ErrorMessage(playerid, "У Вас нет ключей");
				RemovePlayerFromVehicleAC(playerid);
				return false;
			}
			if(!start_work[playerid]) {
		        ErrorMessage(playerid, "Служебный транспорт Вам недоступен");
	   			RemovePlayerFromVehicleAC(playerid);
				return false;
			}
			else {
			    if(PI[playerid][pRank] < VehicleInfo[carid][vRank]) {
			        ErrorMessage(playerid, "Недоступно для Вашего ранга");
					RemovePlayerFromVehicleAC(playerid);
			    }
			}
		}
		if(VG[carid][vgLoading] || VG[carid][vgUnloading]) {
			if((VehicleInfo[carid][vTeam] == fARMYSF && GetTeamID(playerid) == fARMYSF) || 
				(VehicleInfo[carid][vTeam] == fARMYLV && GetTeamID(playerid) == fARMYLV) || 
				(VehicleInfo[carid][vTeam] == fBALLAS && GetTeamID(playerid) == fBALLAS)	||
				(VehicleInfo[carid][vTeam] == fVAGOS && GetTeamID(playerid) == fVAGOS)	||
				(VehicleInfo[carid][vTeam] == fGROVE && GetTeamID(playerid) == fGROVE)	||
				(VehicleInfo[carid][vTeam] == fAZTEC && GetTeamID(playerid) == fAZTEC)	||
				(VehicleInfo[carid][vTeam] == fRIFA && GetTeamID(playerid) == fRIFA)		||
				(VehicleInfo[carid][vTeam] == fLCN && GetTeamID(playerid) == fLCN)		||
				(VehicleInfo[carid][vTeam] == fYAKUZA && GetTeamID(playerid) == fYAKUZA)	||
				(VehicleInfo[carid][vTeam] == fRM && GetTeamID(playerid) == fRM)			||
				(IsAGang(playerid) || IsAArm(playerid) || IsAMafia(playerid) || GetPlayerSkin(playerid) == 191) && (IsAGang(playerid) || GetPlayerSkin(playerid) == 287)) {
				D(playerid,D_STOP_LOAD,DSM, ""P"Погрузка","\n\n"W"Вы хотите прекратить загрузку/разгрузку боеприпасов?\n\n","Да","Нет");
			}
		}
		if(VG[carid][vgRobHouse]) D(playerid,D_STOP_LOAD_ROBHOUSE,DSM, ""P"Погрузка","\n\n"W"Вы хотите прекратить загрузку награбленной техники?\n\n","Да","Нет");
		/*if(VehicleInfo[carid][vType] == VEHICLE_TYPE_SPAWN) {
			if(PI[playerid][pLevel] > 1) {
				ErrorMessage(playerid,"Данный транспорт только для новичков (1 уровень)");
				return RemovePlayerFromVehicleAC(playerid);
			}
		}*/
		if(VehicleInfo[carid][vType] == VEHICLE_TYPE_INVENT) {
			if(!IsAGang(playerid) && !IsAMafia(playerid) && !IsAArm(playerid)) {
				ErrorMessage(playerid,"Данный транспорт доступен только: бандам/мафиям/армиям");
				return RemovePlayerFromVehicleAC(playerid);
			}
			SendOk(playerid,"Для загрузки/разгрузки боеприпасов введите: "W"/load | /unload");
		}
	    if(VehicleInfo[carid][vJob] > 0) {
		    switch(VehicleInfo[carid][vJob]) {
				case 1: {
					if((VehicleInfo[carid][vPlayer] !=-1 ) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Вы не работаете водителем автобуса"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < BUS_PRICE_RENT) {
							ErrorMessage(playerid,"Для аренды автобуса необходимо $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать этот автобус за "GREEN"$%i"W"?",BUS_PRICE_RENT);
						D(playerid,dBusRent,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 2: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Вы не работаете механиком"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать буксир за "GREEN"$%i"W"?",500);
						D(playerid,D_BUKSIR,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 3: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Вы не работаете развозчиком продуктов/топлива"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать авто для развозки продуктов за "GREEN"$%i"W"?",500);
						D(playerid,dProdRent,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 4: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Вы не работаете развозчиком еды"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать авто для развозки еды за "GREEN"$%i"W"?",500);
						D(playerid,dEatRent,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 5: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Вы не работаете мойщиком"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							ErrorMessage(playerid,"Для аренды рабочего транспорта необходимо $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[124];
						format(string,sizeof(string),""W"Вы хотите арендовать авто для мойки улиц за "GREEN"$%i"W"?\n\nСостояние дорог: "P"%s",500,condition_of_roads[condition_of_roads_]);
						D(playerid,D_JOB_CLEAR,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 6: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим игроком"),RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Вы не работаете газонокосильщиком"), RemovePlayerFromVehicleAC(playerid);
					if(PI[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							ErrorMessage(playerid,"Для аренды рабочего транспорта необходимо $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Вы хотите арендовать авто для скашивания травы за "GREEN"$%i"W"?",500);
						D(playerid,D_JOB_GAZON,DSM, ""P"Аренда",string,"Да","Нет");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 50: {
					if(!TI[playerid][tJobOil][0]) return RemovePlayerFromVehicleAC(playerid), ErrorMessage(playerid,"Вы не начали работу на нефтезаводе");
					if(PI[playerid][pProgress] < 150) return RemovePlayerFromVehicleAC(playerid),ErrorMessage(playerid,"Уровень мастерства мал. Введите: /progress");
					if((VehicleInfo[carid][vPlayer]!=-1) && VehicleInfo[carid][vPlayer] != playerid) return RemovePlayerFromVehicleAC(playerid),ErrorMessage(playerid,"Транспорт занят другим игроком");
					if(GetPVarInt(playerid,"track_id") != 0 && GetPVarInt(playerid,"track_id") != carid) {
						ErrorMessage(playerid,"Вы уже арендуете рабочий транспорт");
						return RemovePlayerFromVehicleAC(playerid);
					}
					DisablePlayerRaceCheckpoint(playerid);

					SetPlayerMapIcon(playerid,1,525.7095,1470.6411,4.0315,11,-1,MAPICON_GLOBAL);
					SetPlayerMapIcon(playerid,2,481.0192,1308.8954,9.3572,11,-1,MAPICON_GLOBAL);
					TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
					SetPVarInt(playerid,"track_id",carid);
					TI[playerid][tSpcarTime] = 0;
				}
				case 70: {
					if(!GetPVarInt(playerid,"fish_yes")) return ErrorMessage(playerid,"У Вас нет билета для ловли рыбы. Купить его можно в рыболовном магазине"),RemovePlayerFromVehicleAC(playerid);
					SendOk(playerid,"Для ловли рыбы отправляйтесь в указанный квадрат на карте");
					SendOk(playerid,"Используй команду - "W"/fish");
					if(!GetPVarInt(playerid,"fish_place")) {
						new rand = random(sizeof(fish_place));
						GangZoneShowForPlayer(playerid,fish_zone[rand],COLOR_RED);
						SetPVarInt(playerid,"fish_place",rand+1);
					}
				}
				case 71: {
					if(!TI[playerid][tAlcotraz][0]) return ErrorMessage(playerid,"Лодка доступна только для побега с алькатраса"),RemovePlayerFromVehicleAC(playerid);
					D(playerid,DIALOG_NONE,DSM, ""P"Побег",""W"Мысли...\n\nВот я и в лодке..\nГлавно не свалиться в воду, иначе замерзну и меня быстро поймают..\nВремени в обрез..\nЯ близок к свободе...","Закрыть","");
					EnableGPSForPlayer(playerid, -2412.9822,2314.3362,0.3909);
				}
		        case 99: {
					for(new i = 1; i <= gPlaneCount; i++) {
						if(carid == gAirplanes[i][aCar]) {
							if(GetString(gAirplanes[i][aOwner],"State")) {
								SetPVarInt(playerid,"SelectPlane", gAirplanes[i][aID]);
								static const f_str[] = ""W"Стоимость аренды данного воздушного транспорта: "GREEN"$%d"W"\n\
								Вы действительно хотите взять под аренду воздушный транспорт на 10 дней?";
								new string[sizeof(f_str) +1 + 11];
								format(string,sizeof(string),f_str,gAirs[gAirplanes[i][aAirport]-1][airCoast] * gAirplanes[i][aPrice]);
								return D(playerid,D_ARENDA,DSM, ""P"Аренда",string,"Аренда","Отмена");
							}
							else {
								if(GetString(gAirplanes[i][aOwner],player_name[playerid])) return SendOk(playerid,"Для отказа от аренды, введите: "W"/norent");
								else if(!GetString(player_name[playerid],gAirplanes[i][aOwner])) {
									ErrorMessage(playerid, "Вы не арендуете данный самолёт");
									return RemovePlayerFromVehicleAC(playerid);
								}
							}
						}
					}
				}
			}
		}
  		if(IsABoat(carid))
  		{
            if(boat_autoschool[playerid] == carid)
		    {
				if(VehicleInfo[carid][vType] == VEHICLE_TYPE_AUTOSCHOOL && GetVehicleModel(carid) == 446)
				{
				    if(TI[playerid][tAutoSchool] == 3)
					{
					    if(gpss[playerid]) DisablePlayerGPS(playerid);

						SendClientMessage(playerid, COLOR_BLUE, ""cPS"Следуйте по чекпоинтам, соблюдая правила езды на водном транспорте");

						ShowPlayerDialog(playerid, D_NULL, 0, " ", "\n\n{ffffff}Ваша задача следовать по чекпоинтам. Вперед\n\n", "Закрыть", "");
						
						new slot = pPressed[playerid];

						if(!slot)
						{
							SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[slot][0], AutoCPBoat[slot][1], AutoCPBoat[slot][2], AutoCPBoat[slot+1][3], AutoCPBoat[slot+1][4],
								AutoCPBoat[slot+1][5], 3.0);
						}
						else
						{
							SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[slot - 1][0], AutoCPBoat[slot - 1][1], AutoCPBoat[slot - 1][2], AutoCPBoat[slot - 1][3],
								AutoCPBoat[slot - 1][4], AutoCPBoat[slot - 1][5], 3.0);
						}
					}
                }
				else
				{
				    ErrorMessage(playerid,"Данный транспорт вам не доступен!");
				    RemovePlayerFromVehicleAC(playerid);
				}
			}
			else
			{
				if(VehicleInfo[carid][vType] == VEHICLE_TYPE_ALCATRAZ) return 1;
			
				if(lic[playerid][2] < 1) {
					ErrorMessage(playerid, "У Вас нет лицензии на водный транспорт");
					RemovePlayerFromVehicleAC(playerid);
					return true;
				}
			}
		}
		if(IsAPlane(carid))
		{
			if(air_autoschool[playerid] == carid)
		    {
				if(VehicleInfo[carid][vType] == VEHICLE_TYPE_AUTOSCHOOL && GetVehicleModel(carid) == 487)
				{
				    if(TI[playerid][tAutoSchool] == 2)
					{
					    if(gpss[playerid]) DisablePlayerGPS(playerid);

						SendClientMessage(playerid, COLOR_BLUE, ""cPS"Следуйте по чекпоинтам, соблюдая правила полёта");

						ShowPlayerDialog(playerid, D_NULL, 0, " ", "\n\n{ffffff}Ваша задача следовать по чекпоинтам. Вперед\n\n", "Закрыть", "");
						
						new slot = pPressed[playerid];
						
						if(!slot)
						{
							SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[slot][0], AutoCPMav[slot][1], AutoCPMav[slot][2], AutoCPMav[slot+1][3], AutoCPMav[slot+1][4],
								AutoCPMav[slot+1][5], 3.0);
						}
						else
						{
							SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[slot - 1][0], AutoCPMav[slot - 1][1], AutoCPMav[slot - 1][2], AutoCPMav[slot - 1][3],
								AutoCPMav[slot - 1][4], AutoCPMav[slot - 1][5], 3.0);
						}
						return 1;
					}
				}
				else
				{
				    ErrorMessage(playerid,"Данный транспорт вам не доступен!");
				    RemovePlayerFromVehicleAC(playerid);
				}
			}
			else
			{
				if(lic[playerid][1] < 1) {
					ErrorMessage(playerid,"У Вас нет лицензии на воздушный транспорт");
					RemovePlayerFromVehicleAC(playerid);
					return true;
				}
			}
		}
		if(CarLic(carid))
		{
		    if(car_autoschool[playerid] == carid)
		    {
				if(VehicleInfo[carid][vType] == VEHICLE_TYPE_AUTOSCHOOL && GetVehicleModel(carid) == 426)
				{
					if(GetPVarInt(playerid,"WaitExam"))
					{
					    if(gpss[playerid]) DisablePlayerGPS(playerid);

						SendClientMessage(playerid, COLOR_BLUE, ""cPS"Следуйте по чекпоинтам, соблюдая правила дорожного движения");

						ShowPlayerDialog(playerid, D_NULL, 0, " ", "\n\n{ffffff}Ваша задача следовать по чекпоинтам. Вперед\n\n", "Закрыть", "");

						new slot = GetPVarInt(playerid,"LessonSlot");
						if(!slot) SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][3], AutoCP[slot+1][4], AutoCP[slot+1][5], 3.0);
						else SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot - 1][0], AutoCP[slot - 1][1], AutoCP[slot - 1][2], AutoCP[slot - 1][3], AutoCP[slot - 1][4], AutoCP[slot - 1][5], 3.0);
						return 1;
					}
				}
				else
				{
				    ErrorMessage(playerid,"Данный транспорт вам не доступен!");
				    RemovePlayerFromVehicleAC(playerid);
				}
			}
			else
			{
				if(lic[playerid][0] == 0)
				{
					ErrorMessage(playerid,"У Вас нет водительских прав");
					RemovePlayerFromVehicleAC(playerid);
					return true;
				}
			}
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER) {
		new carid = GetPlayerVehicleID(playerid);
	    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);

	    if(doors == 1) return RemovePlayerFromVehicleAC(playerid);

		if(VehicleInfo[carid][vJob] == 1 && VehicleInfo[carid][vPlayer] != -1) {
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(GetPlayerVehicleID(i) != carid) continue;
				if(GetPlayerMoneyEx(playerid) < 100) {
					MeAction(playerid,"показал(а) проездной водителю");
					return 1;
				}
				GiveMoney(playerid,-100,"оплата за проезд автобус");
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) GiveMoney(i,100,"оплата за проезд автобус");
				break;
			}
		}
		if(TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && GetVehicleModel(carid) != 530) {
			SendOk(playerid,"Вы уронили бочку");
			ClearAnimations(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			SetPlayerMapIcon(playerid,1,2743.5747,-2200.5796,21.9503,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,2752.0374,-2197.0898,21.9503,11,-1,MAPICON_GLOBAL);
			TI[playerid][tJobOil][1] = false;
		}
	}
	else if(newstate == PLAYER_STATE_ONFOOT) {
		if(speed_timer[playerid] != -1) {
			KillTimer(speed_timer[playerid]);
			speed_timer[playerid] = -1;
		}
		for(new i; i < 16; i++) PlayerTextDrawHide(playerid, speedometr[playerid][i]);

		if(TI[playerid][tJobOil][0]) {
			SetPlayerMapIcon(playerid,1,2743.5747,-2200.5796,21.9503,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,2752.0374,-2197.0898,21.9503,11,-1,MAPICON_GLOBAL);
		}
		if(TI[playerid][tEther]) {
			TI[playerid][tEther] = false;
			SendOk(playerid,"Вы вышли из прямого эфира");
		}
	}
	return true;
}
stock lights_status(carid,status, playerid=-1) {
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,status,alarm,doors,bonnet,boot,objective);

    VehicleInfo[carid][vLights] = status;

    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        if(status) {
			PlayerTextDrawHide(playerid,speedometr[playerid][11]);
			PlayerTextDrawColor(playerid, speedometr[playerid][11], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][11]);
		}
		else {
			PlayerTextDrawHide(playerid,speedometr[playerid][11]);
			PlayerTextDrawColor(playerid, speedometr[playerid][11], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][11]);
		}
    }
    return true;
}
stock doors_status(carid, playerid = -1) {
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(doors == 1) SetVehicleParamsEx(carid,engine,lights,alarm,0,bonnet,boot,objective),GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3);
	else SetVehicleParamsEx(carid,engine,lights,alarm,1,bonnet,boot,objective),GameTextForPlayer(playerid, "~r~LOCK", 5000, 3);
    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	    if(doors) {
			PlayerTextDrawHide(playerid,speedometr[playerid][15]);
			PlayerTextDrawColor(playerid, speedometr[playerid][15], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][15]);
		}
		else {
			PlayerTextDrawHide(playerid,speedometr[playerid][15]);
			PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][15]);
		}
	}
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid) {
	if(VehicleInfo[vehicleid][vBizz]) {
		for(new i = 0; i < 20; i++) {
			if(vehicleid == FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i]) FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCarID][i] = -1;
		}
	}
	if(GetPVarInt(playerid, "Patrul") == 1) {
		DeletePVar(playerid, "Patrul");
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Вы закончили патрулирование");
		return 1;
	}
	if(vehicleid == car_autoschool[playerid])
	{
	    if(lic[playerid][0] == 1)
		{
			A_DestroyVehicle(car_autoschool[playerid]);
			car_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			ErrorMessage(playerid,"Экзамен завален");
			TI[playerid][tAutoSchool] = 0;
			DeletePVar(playerid,"LessonSlotMav");
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
		}
		else
		{
			A_DestroyVehicle(car_autoschool[playerid]);
			car_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			TI[playerid][tAutoSchool] = 0;
			DeletePVar(playerid,"LessonSlotMav");
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
		}
	}
	else if(vehicleid == air_autoschool[playerid])
	{
	    if(lic[playerid][1] == 1)
		{
			A_DestroyVehicle(air_autoschool[playerid]);
			air_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			ErrorMessage(playerid,"Экзамен завален");
			TI[playerid][tAutoSchool] = 0;
			DeletePVar(playerid,"LessonSlotMav");
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
		}
		else
		{
			A_DestroyVehicle(air_autoschool[playerid]);
			air_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			TI[playerid][tAutoSchool] = 0;
			DeletePVar(playerid,"LessonSlotMav");
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
		}
	}
	else if(vehicleid == boat_autoschool[playerid])
	{
	    if(lic[playerid][1] == 1)
		{
			A_DestroyVehicle(boat_autoschool[playerid]);
			boat_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			ErrorMessage(playerid,"Экзамен завален");
			TI[playerid][tAutoSchool] = 0;
			DeletePVar(playerid,"LessonSlotMav");
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
		}
		else
		{
			A_DestroyVehicle(boat_autoschool[playerid]);
			boat_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			TI[playerid][tAutoSchool] = 0;
			DeletePVar(playerid,"LessonSlotMav");
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
		}
	}
	if(GetPVarInt(playerid,"bus_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У Вас есть 30 секунд чтобы вернуться в автобус");
	}
	if(GetPVarInt(playerid,"track_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У Вас есть 30 секунд чтобы вернуться в погрузчик");
	}
	if(GetPVarInt(playerid,"mehjob") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У Вас есть 30 секунд чтобы вернуться в буксир");
	}
	if(GetPVarInt(playerid,"eatjob") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У Вас есть 30 секунд чтобы вернуться в автомобиль для продажи еды");
	}
	if(GetPVarInt(playerid,"clear_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У Вас есть 30 секунд чтобы вернуться в автомобиль для чистки улиц");
	}
	if(GetPVarInt(playerid,"veh_id_cleaner") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У Вас есть 30 секунд чтобы вернуться в автомобиль для скашивания травы");
	}
	return true;
}
public OnPlayerRequestSpawn(playerid) {
    if(!TI[playerid][tLogin]) {
	    ErrorMessage(playerid, "Для игры на нашем сервере введите пароль");
	    Kick(playerid);
	    return false;
	}
	return false;
}
public OnPlayerRequestClass(playerid, classid) {
	SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
    if(TI[playerid][tLogin]) {
		SetTimerEx("PlayerSpawn", 200, false, "i", playerid);
		return false;
	}
	else if(!PI[playerid][pID]) {
		TI[playerid][tJoined] = true;
		ac_1{playerid} = true;
		new query[137];
		format(query,sizeof query,"SELECT `pID`, `pKey`, `pKeyip`, `GoogleCode`, `pGoogle`, `pvIp` FROM `accounts` WHERE `Name` = '%s' LIMIT 1",player_name[playerid]);
		mysql_tquery(connects, query, "OnPlayerRequestDetect", "d", playerid);
	}
	return true;
}
CB: OnPlayerRequestDetect(playerid,race_check) {
	if(!IsPlayerConnected(playerid)) return 1;
	if(cache_num_rows())
	{
		SpecPl(playerid, true);

    	InterpolateCameraPos(playerid, 1326.426269, -818.895751, 79.194717, 6.976511, -2162.627197, 122.978126, 120000);
		InterpolateCameraLookAt(playerid, 1323.296020, -822.777343, 78.827857, 10.913708, -2159.674072, 122.096046, 120000);

		cache_get_value_name_int(0, "pID", PI[playerid][pID]);
		cache_get_value_name(0, "pKey", player_pass[playerid], 64);
		cache_get_value_name(0, "pKeyip", PI[playerid][pKeyip],5);
		cache_get_value_name(0, "GoogleCode", PI[playerid][pGoogle],63);
		cache_get_value_name_int(0, "pGoogle", PI[playerid][pGoogleSec]);
		cache_get_value_name(0, "pvIp", player_ip[playerid],17);
		
		if(!strlen(player_pass[playerid])) {
			printf("ОШИБКА: Длина пароля игрока равна 0. Name: %s",player_name[playerid]);
			SendClientMessage(playerid,-1,"В Ваш аккаунт возможно войти под любым паролем. (После авторизации, измените его)");
		}
		static const f_str[] = ""W"С возвращением на сервер "P""FullServName"!"W"\n\n\
			Аккаунт "P"%s"W" успешно найден.\n\
			Для авторизации, пожалуйста, введите пароль от аккаунта.\n\n\
			Восстановить пароль можно на сайте: "P""NameSite"";
		new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

		format(string,sizeof(string),f_str,player_name[playerid]);
		D(playerid,D_LOGIN,DSP, ""P"Авторизация",string, "Войти", "Отмена");
	}
	else
	{
		SpecPl(playerid, true);
		
		actorereg[playerid][0] = -1;
		/*
		actorereg[playerid][1] = -1;
		*/

        InterpolateCameraPos(playerid, 1074.122192, 49.144104, 1114.458007, 1074.122192, 49.144104, 1114.458007, 1000);
		InterpolateCameraLookAt(playerid, 1074.269897, 53.895549, 1112.908203, 1074.269897, 53.895549, 1112.908203, 1000);

		/*
		InterpolateCameraPos(playerid, 236.732818, -30.712516, 1206.453979, 236.732818, -30.712516, 1206.453979, 1000);
		InterpolateCameraLookAt(playerid, 236.744140, -25.728492, 1206.054809, 236.744140, -25.728492, 1206.054809, 1000);
		*/

		PreloadAnimLib(playerid,"MISC");
		SetPlayerDrunkLevel(playerid, 2500);

        actorereg[playerid][0] = CreateActor(142,1074.1667,58.7888,1112.5420,180.6046);
		SetActorVirtualWorld(actorereg[playerid][0],playerid+1);
		/*
		actorereg[playerid][0] = CreateActor(90,1074.0121,53.1893,1112.4810,175.3759);
		SetActorVirtualWorld(actorereg[playerid][0],playerid+1);
		ApplyActorAnimation(actorereg[playerid][0],"MISC","seat_LR",4,1,0,0,1,0);
		
  		actorereg[playerid][1] = CreateActor(142,237.0683,-27.1575,1206.2128,107.3760);
		SetActorVirtualWorld(actorereg[playerid][1],playerid+1);
		ApplyActorAnimation(actorereg[playerid][1],"MISC","seat_LR",4,1,0,0,1,0);
		*/

	   	static const f_str[] = "\
		   "NO"Общие положения:"G"\n\
			"NO"- "G"Любой игрок,посетивший ресурс "FullServName" в своих же инетресах должен быть ознакомлен с данными правилами.\n\
			"NO"- "G"Администратор вправе менять степень наказания на своё усмотрение.\n\
			"NO"- "G"Правила действуют для всех игроков,независимо от игрового статуса на сервере.\n\
			"NO"- "G"Правила могут быть изменены/отредактированы основателями сервера.\n\n\
			"NO"Игровые аккаунты:"W"\n\
			"NO"- "G"Игроки самостоятельно отвечают за сохранность своего игрового аккаунта,а также имущества закреплённого за ним.\n\
			"NO"- "G"Для защиты аккаунта от взлома,помимо пароля,применяйте дополнительные средства,как защита по IP.\n\n\
			"NO"Ник в игре:"W"\n\
			"NO"- "G"Ник в игре должен иметь следующий вид: 'Имя_Фамилия'.\n\
			"NO"- "G"Ник должен содержать полное имя,написанное на английском языке.\n\
			"NO"- "G"Запрещено использовать чужие (уже кем-то занятые) ники.\n\
			"NO"- "G"Запрещено использовать ники, содержащие нецензурные или оскорбительные слова.\n\n\
			"NO"Игровой процесс:"W"\n\
			"NO"- "G"Запрещено использование любых программ скриптов читов и.т.п. дающие нечестное преимущество в игре.\n\
			"NO"- "G"Запрещено использование багов (Ошибок, Неисправностей мода).\n\
			"NO"- "G"Запрещено использовать ESC в целях ухода от погони/смерти.\n\
			"NO"- "G"Запрещено убивать игроков на спавне (Место возрождения, базы организаций).\n\
			"NO"- "G"Запрещено убивать игроков при помощи транспорта (Давить, Стрелять с водительского места).\n\
			"NO"- "G"Запрещено убийство/нанесение физического вреда игрокам без причины (ДМ - Death Match).\n\
			"NO"- "G"Запрещено злоупотребление игровыми возможностями для создания неудобств игрокам.";
			
		new string[sizeof(f_str)];
		format(string,sizeof(string), "%s",f_str);
		D(playerid,D_REG,DSM, ""P"Правила сервера", string, "Согласен", "Выйти");
		
		//PlayAudioStreamForPlayer(playerid, MusicReg);
	}
	return true;
}
stock SetPlayerCriminal(playerid, const killerid[], const reason[]) {
	PI[playerid][pCrimes]++;
	UpdatePlayerData(playerid,"pCrimes",PI[playerid][pCrimes]);
	strmid(PI[playerid][pVictim], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(PI[playerid][pAccusedof], reason, 0, strlen(reason), 43);
	if(PI[playerid][pSearch] > 6) PI[playerid][pSearch] = 6;
	return 1;
}
CB: Timer_Unix() {
	new tickcount1 = GetTickCount();
	if(timers_unix > -1) {
		unix = gettime(tmphour, tmpminute, tmpsecond);//узнаём время.
		if(unix_hour <= unix) {// прошел час
			new string[128];
			format(string, sizeof(string), "Текущее время %d:00", tmphour);
			SendClientMessageToAll(COLOR_WHITE, string);
			PayDay();
			SetWorldTime(tmphour);
			unix_hour = unix+3600;
		}
		if(unix_min <= unix) {//прошла минута
			minute_timer();
			TimeReportBot();
			unix_min = unix+60;
		}
		if(unix_sec <= unix) {//прошла секунда
			second_timer();
			game_dm();
			race_game();
			golod_game();
			//start_invets();
			OnUpdateCheatPlayers();
			OnUpdateTimePlayers();
			if(BizWarTime[1]) BizWarTimer();
			unix_sec = unix+1;
		}
		if(unix_three_sec <= unix) {//прошло 3 секунды
			other_timer();
			unix_three_sec = unix + 3;
		}
		if(unix_heal <= unix) {
			heal_timer();
			unix_heal = unix+240;
		}
	}
	time_grandtimer = GetTickCount() - tickcount1;
	if(time_grandtimer > time_grandtimer_max) time_grandtimer_max = time_grandtimer;
	return 1;
}
stock other_timer() {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(SERIU[i][sID] != INVALID_PLAYER_ID) continue;
		if(PlayerToPoint(1.2,i,-60.9071,1876.9545,1120.3975) && IsAGang(i))
		{
			StealMats(i);
		}
		if(PI[i][pHouse] && gHouses[PI[i][pHouse]][houseImprove][2]) {
			if(PlayerToPoint(10,i,gHouses[PI[i][pHouse]][houseParkX], gHouses[PI[i][pHouse]][houseParkY], gHouses[PI[i][pHouse]][houseParkZ]) && ((house_car[i][0] != INVALID_VEHICLE_ID && GetPlayerVehicleID(i) == house_car[i][0]) || (house_car[i][1] != INVALID_VEHICLE_ID && GetPlayerVehicleID(i) == house_car[i][1]))) {
				GameTextForPlayer(i,"~g~PRESS CAPS LOCK",1300,4);
			}
		}
		if(Sounds == 1) {
			new distance = floatround(GetPlayerDistanceFromPoint( i, streampos[0], streampos[1], streampos[2]) );
			if(UseSound[i] == 0 && distance <= rads) {
				PlayAudioStreamForPlayer(i, stream, streampos[0], streampos[1], streampos[2], rads, 1);
				UseSound[i] = 1;
			}
			if(UseSound[i] == 1 && distance > rads) {
				UseSound[i] = 0;
			}
		}
	}
	if(invent_time < unix && invent_zone_id != -1) {
		for(new i; i < 13;i++) {
			if(invent_object[i] != INVALID_OBJECT_ID) DestroyDynamicObject(invent_object[i]);
		}
		DestroyDynamic3DTextLabel(invent_text);
		DestroyDynamicPickup(invent_pickup);
		DestroyDynamicArea(invent_area);
		GangZoneDestroy(invent_zone);
		invent_zone_id = -1;
		invent_time_car = unix + 600*3;
		start_invent = 5;
	}
	if(invent_time_car < unix && start_invent == 5) {
		if(invent_car[0] != INVALID_VEHICLE_ID) A_DestroyVehicle(invent_car[0]),invent_car[0] = INVALID_VEHICLE_ID;
		if(invent_car[1] != INVALID_VEHICLE_ID) A_DestroyVehicle(invent_car[1]),invent_car[1] = INVALID_VEHICLE_ID;
		if(invent_car[2] != INVALID_VEHICLE_ID) A_DestroyVehicle(invent_car[2]),invent_car[2] = INVALID_VEHICLE_ID;
	}
	update3dtext();
	return 1;
}
stock heal_timer() {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pHospital]) continue;
		if(!PI[i][pDisease][0] && !PI[i][pDisease][1]) continue;
		new Float:health;
		GetPlayerHealth(i,health);
		if(health > 10) SetPlayerHealth(i, GetPlayerHP(i)-3.0);
	}
	return 1;
}
stock minute_timer()
{
	new hour, minute, second;
	
	gettime(hour, minute, second);
	
	if(minute == 30) fork_start();
	/*
	if(hour >= 11) {
		for(new i; i < 18;i++) {
			if(alcatraz[i][alc_posRZ] != 0) MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX]+1.5,alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
			else MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX]-1.5,alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
		}
	}
	else {
		for(new i; i < 18;i++) {
			MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX],alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
		}
	}
	*/
	for(new gang = 0; gang < 8; gang ++) {
		if(fracmoroz[gang]) {
			if(fracmoroz[gang] <= unix) {
				new string[128];
				format(string,sizeof(string),"Заморозка с %s %s снята",(gang<5) ? ("банды"):("мафии"),fracmorozName[gang]);
				SendClientMessageToAll(COLOR_LIGHTRED,string);
				fracmoroz[gang]=0;
				UpdateMorozed();
			}
		}
		if(l_actor[0][gang] && l_actort[0][gang] <= unix) l_actor[0][gang] = 0,UseLabrary(0,gang,0);
		if(l_actor[1][gang] && l_actort[1][gang] <= unix) l_actor[1][gang] = 0,UseLabrary(1,gang,0);
		if(l_actor[2][gang] && l_actort[2][gang] <= unix) l_actor[2][gang] = 0,UseLabrary(2,gang,0);
		if(l_actor[0][gang] && l_actort[0][gang] > unix && FI[fLCN][fDrugs] < 20000) FI[fLCN][fDrugs] += 1;
		if(l_actor[1][gang] && l_actort[1][gang] > unix && FI[fYAKUZA][fDrugs] < 20000) FI[fYAKUZA][fDrugs] += 1;
		if(l_actor[2][gang] && l_actort[2][gang] > unix && FI[fRM][fDrugs] < 20000) FI[fRM][fDrugs] += 1;
	}
	for(new i = 1; i < gHouseCount; i ++)
	{
	    if(!GetString(gHouses[i][houseOwner], "None"))
	    {
			if(gHouses[i][houseOwnerID] != 0)
			{
			    if((GetElapsedTime(gHouses[i][houseDay], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
				{
					new query[512];
					for(new z;z<9;z++) {
						if(z < 3) {
							gHouses[i][houseImprove][z] = 0,gHouses[i][houseSkin][z] = 0;
						}
						gHouses[i][houseGun][z] = 0;
					}
					gHouses[i][houseDay] = 0;
					gHouses[i][houseSafeCode] = 0;
					gHouses[i][houseSafeMoney] = 0;
					gHouses[i][houseDrugs] = 0;
					gHouses[i][houseHealth] = 0;
					gHouses[i][houseProducts] = 0;
					gHouses[i][houseFamily] = 0;
					DestroyDynamicPickup(gHousePickup[i]);
					gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
					DestroyDynamicMapIcon(gHouseIcon[i]);
					gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);

					FI[fWHITEHOUSE][fBank] += floatround(gHouses[i][housePrice]/100*20);
					UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

					new ID = GetCheckID(gHouses[i][houseOwner]);
					if(ID != INVALID_PLAYER_ID) {
						if(!strcmp(player_name[ID],gHouses[i][houseOwner],true)) {
							PI[ID][pHouse] = 0;
							UpdatePlayerData(ID,"house",0);
							GiveMoney(ID, floatround(gHouses[i][housePrice]/100*80),"продажа дома");
							SendClientMessage(ID,COLOR_REDD,"Ваш дом продан государству за неуплату");
							if(house_car[ID][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][0]),house_car[ID][0] = INVALID_VEHICLE_ID;
							if(house_car[ID][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][1]),house_car[ID][1] = INVALID_VEHICLE_ID;
						}
					}
					else {
						format(query,sizeof(query),"\
							UPDATE `accounts` SET `house` = '0',`pBank` = `pBank` + %d,`homesell` = '1' WHERE `Name` = '%s'\
							",floatround(gHouses[i][housePrice]/100*80),gHouses[i][houseOwner]);

						mysql_tquery(connects, query);
					}
					gHouses[i][houseOwnerID] = 0;
					strdel(gHouses[i][houseOwner],0,24);
					arendaor_closed(i);
					strmid(gHouseArendator[i][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
					strmid(gHouseArendator[i][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
					strmid(gHouseArendator[i][2],"None",0,strlen("None"),MAX_PLAYER_NAME);
					gHouses[i][houseHabitID][0] = 0;
					gHouses[i][houseHabitID][1] = 0;
					gHouses[i][houseHabitID][2] = 0;

		            SaveHouse(i);
                }
            }
		}
	}
	for(new i = 1; i < gBusinessCount; i ++)
	{
	    if(!GetString(gBusiness[i][bizzOwner], "None"))
	    {
			if(gBusiness[i][bizzOwnerID] != 0)
			{
			    if((GetElapsedTime(gBusiness[i][bizzDay], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
				{
					new sum = floatround(gBusiness[i][bizzSellPrice]/100*80);
					new query[282];

					FI[fWHITEHOUSE][fBank] += floatround(gBusiness[i][bizzSellPrice]/100*20);
					UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

					new ID = GetCheckID(gBusiness[i][bizzOwner]);
					if(ID != INVALID_PLAYER_ID) {
						if(!strcmp(player_name[ID],gBusiness[i][bizzOwner],true)) {
							PI[ID][pBusiness] = 0;
							UpdatePlayerData(ID,"bussiness",0);
							GiveMoney(ID, sum,"продажа бизнеса");
							SendClientMessage(ID,COLOR_REDD,"Ваш бизнес продан государству за неуплату");
						}
					}
					else {
						format(query,156,"UPDATE `accounts` SET `bussiness` = '0',`pBank` = `pBank` + '%d',`bizzsell` = '1' WHERE `Name` = '%s'",sum,gBusiness[i][bizzOwner]);
						mysql_tquery(connects, query);
					}
					if(gBusiness[i][bizzType] == 11 || gBusiness[i][bizzType] == 14) sell_bizztaxi(i);
					gBusiness[i][bizzOwnerID] = 0;
					gBusiness[i][bizzStatus] = 1;
					gBusiness[i][bizzDay] = gettime() + (random(169200) + 3600);
					gBusiness[i][bizzMafia] = 0;
					gBusiness[i][bizzPrice] = 5;
					gBusiness[i][bizzUpgrade][0] = 5000;
					gBusiness[i][bizzUpgrade][1] = 0;
					gBusiness[i][bizzUpgrade][2] = 0;
					SetString(gBusiness[i][bizzOwner],"");
					SaveBusiness(i);
					UpdateBusinessText(i);
				}
			}
		}
	}
	for(new i = 0; i < gHotelCount; i ++) 
    {
	    if(!GetString(gHotels[i][hotelOwner], "None"))
	    {
			if(gHotels[i][hotelOwnerID] != 0)
			{
			    if((GetElapsedTime(gHotels[i][hotelDay], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
				{
					new sum = floatround(gHotels[i][hotelPrice]/100*80);

					FI[fWHITEHOUSE][fBank] += floatround(gHotels[i][hotelPrice]/100*20);
					UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

					new query[156];

					new ID = GetCheckID(gHotels[i][hotelOwner]);
					if(ID != INVALID_PLAYER_ID) {
						if(!strcmp(player_name[ID],gHotels[i][hotelOwner],true)) {
							PI[ID][pHotel] = 0;
							UpdatePlayerData(ID,"hotelid",0);
							GiveMoney(ID, sum,"продажа отеля");
							SendClientMessage(ID,COLOR_REDD,"Ваш отель продан государству за неуплату");
						}
					}
					else {
						format(query,sizeof(query),"UPDATE `accounts` SET `hotelid` = '0',`pBank` = `pBank` + '%d',`hotelsell` = '1' WHERE `Name` = '%s'",sum,gHotels[i][hotelOwner]);
						mysql_tquery(connects, query);
					}
					format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '0', `owner` = '', `bank` = '0',`coast` = '400' WHERE `id` = '%d'",i+1);
					mysql_tquery(connects, query,"","");
					gHotels[i][hotelOwnerID] = 0;
					SetString(gHotels[i][hotelOwner],"");
					UpdateHotelText(i);
				}
			}
		}
	}
	for(new i = 0; i < gRoomsCount; i ++)
    {
	    if(!GetString(gRooms[i][roomsOwner], "None"))
	    {
	        if((GetElapsedTime(gRooms[i][roomsDay], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
			{
				new query[128];

				new ID = GetCheckID(gRooms[i][roomsOwner]);
				if(ID != INVALID_PLAYER_ID) {
					if(!strcmp(player_name[ID],gRooms[i][roomsOwner],true)) {
						PI[ID][pRoom] = 0;
						UpdatePlayerData(ID,"hotelroom",0);
						SendClientMessage(ID,COLOR_REDD,"Аренда номера в отеле истекла");
						if(house_car[ID][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][0]),house_car[ID][0] = INVALID_VEHICLE_ID;
						if(house_car[ID][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][1]),house_car[ID][1] = INVALID_VEHICLE_ID;
					}
				}
				else {
					format(query,sizeof(query),"UPDATE `accounts` SET `hotelroom` = '0',`roomsell` = '1' WHERE `Name` = '%s'",gRooms[i][roomsOwner]);
					mysql_tquery(connects, query, "","");
				}
				format(query,sizeof(query),"UPDATE `rooms` SET `owner` = 'None' WHERE `id` = '%d'",i+1);
				mysql_tquery(connects, query,"","");

				SetString(gRooms[i][roomsOwner], "None");
			}
		}
	}
	for(new i = 0; i < gAirCount; i ++)
    {
	    if(!GetString(gAirs[i][airOwner], "None"))
	    {
			if(gAirs[i][airOwnerID] != 0)
			{
			    if((GetElapsedTime(gAirs[i][airDay], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
				{
					new sum = floatround(gAirs[i][airPrice]/100*80);

					FI[fWHITEHOUSE][fBank] += floatround(gAirs[i][airPrice]/100*80);
					UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

					new query[156];

					new ID = GetCheckID(gAirs[i][airOwner]);
					if(ID != INVALID_PLAYER_ID) {
						if(!strcmp(player_name[ID],gAirs[i][airOwner],true)) {
							PI[ID][pAirport] = 0;
							UpdatePlayerData(ID,"airport",0);
							GiveMoney(ID, sum,"продажа аэропорта");
							SendClientMessage(ID,COLOR_REDD,"Ваш аэропорт продан государству за неуплату");
						}
					}
					else {
						format(query,sizeof(query),"UPDATE `accounts` SET `airport` = '0',`pBank` = `pBank` + '%d',`airsell` = '1' WHERE `Name` = '%s'",sum,gAirs[i][airOwner]);
						mysql_tquery(connects, query);
					}
					format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '0', `owner` = '', `bank` = '0' WHERE `id` = '%d'",i+1);
					mysql_tquery(connects, query,"","");
					gAirs[i][airOwnerID] = 0;
					SetString(gAirs[i][airOwner],"");
					UpdateAirportsText(i);
				}
			}
		}
	}
	for(new i = 1; i <= gPlaneCount; i ++)
    {
	    if(!GetString(gAirplanes[i][aOwner], "State"))
	    {
	        if((GetElapsedTime(gAirplanes[i][aTime], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
			{
				SetString(gAirplanes[i][aOwner], "State");
				gAirplanes[i][aTime] = 0;
				UpdateDynamic3DTextLabelText(gAirplanes[i][aText],-1,"Не арендован");
				SavePlane(i);
				SetVehicleParamsEx(gAirplanes[i][aCar],engine,lights,alarm,0,bonnet,boot,objective);
			}
		}
	}
	for(new i = 1; i < 16; i ++)
    {
		if(ATMData[i][atm_Bank])
		{
		    if((GetElapsedTime(ATMData[i][atm_BankTime], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
			{
				ATMData[i][atm_Bank] = 0;
				ATMData[i][atm_BankTime] = 0;
				UpdateAtmData(i,"ATM_BANK",ATMData[i][atm_Bank]);
				UpdateAtmData(i,"ATM_BANKTIME",ATMData[i][atm_BankTime]);
			}
		}
	}
	for(new i; i<MAX_BILLBORDS; i++)
	{
		if(BildInfo[i][bOwned])
		{
		    if((GetElapsedTime(BildInfo[i][bDay], gettime(), CONVERT_TIME_TO_DAYS)) < 1)
			{
				BildInfo[i][bFontSize] = 0;
			    BildInfo[i][bBackColor] = 0;
				BildInfo[i][bFontFace] = 0;
				BildInfo[i][bOwned] = 0;
				BildInfo[i][bDay] = 0;
				format(BildInfo[i][bOwner],1,"-");
			    UpdateBuildText(i);
				new query[256];
			    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",i);
				mysql_tquery(connects,query,"","");
			}
		}
	}
	for(new i=0;i<MAX_DROP_GUNS;i++) {
		if(drop_gun[i][dg_object] == -1) continue;
		if(drop_gun[i][dg_time] < 1) continue;
		drop_gun[i][dg_time] --;
		if(drop_gun[i][dg_time]<=0){
			DestroyDynamicObject(drop_gun[i][dg_object]);
			drop_gun[i][dg_object]=-1;
			if(drop_gun[i][dg_text] != Text3D:-1) {
				DestroyDynamic3DTextLabel(drop_gun[i][dg_text]);
				drop_gun[i][dg_text] = Text3D:-1;
			}
		}
	}
	for(new i=0;i<50;i++) {
		if(FracVehicle[i][fvehModelNew] == 0) continue;
		if(FracVehicle[i][fvehModelNew] && FracVehicle[i][fvehTime] < unix) {
			FracVehicle[i][fvehTime] = 0;
			FracVehicle[i][fvehModelNew] = 0;
			save_fracveh(i);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(TI[i][tAFK] <= 5) {
			PI[i][pPlayTime][1]++;
			if(PI[i][pVips] == VIP_PLATINA || PI[i][pVips] == VIP_ECSCLUSIVE || PI[i][pVips] == VIP_FOREVER) {
				if(PI[i][pPlayTime][1] >= vip_status[PI[i][pVips]][vip_rulet]) {
					new query[156];
					format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET lotteryfree = lotteryfree + '1' WHERE pID = '%d'",PI[i][pID]);
					mysql_tquery(connects,query,"","");
					PI[i][pPlayTime][1] = 0;
					SendClientMessage(i,COLOR_YELLOW,"Доступно бесплатное вращение кейса на нашем сайте "P""NameSite"");
				}
			}
			else {
				if(PI[i][pPlayTime][1] >= BonusInfo[act_timerullet]) {
					new query[156];
					format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET lotteryfree = lotteryfree + '1' WHERE pID = '%d'",PI[i][pID]);
					mysql_tquery(connects,query,"","");
					PI[i][pPlayTime][1] = 0;
					SendClientMessage(i,COLOR_YELLOW,"Доступно бесплатное вращение кейса на нашем сайте "P""NameSite"");
				}
			}
		}
		PI[i][pPlayTime][0]++;
		if(TI[i][tMaskTime] > 0) {
			TI[i][tMaskTime]--;
		    if(TI[i][tMaskTime] == 0) {
			    if(PI[i][pMember] && start_work[i]) SetPlayerColor(i,gFractionSpawn[PI[i][pMember]][fracColor]);
			    else SetPlayerColor(i,0xFFFFFF11);
				if(TI[i][tMasked]) SetPlayerColor(i,gFractionSpawn[TI[i][tMasked]][fracColor]);
			    SendOk(i,"По истечению 10 минут, маска была снята");
				RemovePlayerAttachedObject(i, 8);
		    }
		}
		if(PI[i][pSatiety] >= 1) {
			if(PI[i][pDSatiety]) continue;
			SetPVarFloat(i,"timer_satiety",GetPVarFloat(i,"timer_satiety") + vip_status[PI[i][pVips]][vip_satiety]);
			if(GetPVarFloat(i,"timer_satiety") >= 2) {
				GiveFullness(i,-1);
				DeletePVar(i,"timer_satiety");
			}
		}
		if(PI[i][pSatiety] == 15 && !PI[i][pDisease][1] && TI[i][tLogin] && PI[i][pLevel] > 2) {
			if(PI[i][pDDisease]) continue;
			SendOk(i,"Вы очень голодны. Чтобы не заболеть, советуем посетить закусочную");
			SendOk(i,"Следите за своим состоянием голода на прогресс баре");
		}
		if(PI[i][pSatiety] < 5 && !PI[i][pDisease][1] && TI[i][tLogin] && PI[i][pLevel] > 2) {
			if(PI[i][pDDisease]) continue;
			new rand = random(5);
			if(rand != 2) continue;
			SendOk(i,"Вы заболели от недостатка питания (анорексия)");
			SendOk(i,"Советуем Вам обратиться к медикам в любой из пунктов МЧС");
			SendOk(i,"(( Внимание! Состояние Вашей жизни (HP) будет падать значительно быстрее ))");
			PI[i][pDisease][1] = 1;
			UpdatePlayerData(i,"pDisease_1",1);
		}
		if(TI[i][tArendKey] != -1) {
			new rc = TI[i][tArendKey];
			if(ArendInfo[rc][aPlayerID] != i) {
				TI[i][tArendKey] = -1;
				continue;
			}
			if(!IsPlayerInVehicle(i, ArendInfo[rc][aID])) {
				new Float:x, Float:y, Float:z;
				GetVehiclePos(ArendInfo[rc][aID], x, y, z);
				if(!IsPlayerInRangeOfPoint(i, 2000.0, x, y, z) && GetPlayerVirtualWorld(i) == 0 && GetPlayerInterior(i) == 0) {
					SendClientMessage(i, COLOR_REDD, "Вы отошли слишком далеко от арендованного Вами транспорта");
					ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
					SetVehicleToRespawn(ArendInfo[rc][aID]);
					TI[i][tArendKey] = -1;
					continue;
				}
			}
		}
	}
}
CB: OnUpdateTimePlayers() {
	foreach(new playerid:Player) {
		if(!TI[playerid][tLogin]) continue;
		if(TI[playerid][tAFK] >= 3) continue;
		if(AC_GunCheattime[playerid] > unix) break;
	    if(gpss[playerid] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30.0, GetPlayerGPSInfo(playerid, G_POS_X), GetPlayerGPSInfo(playerid, G_POS_Y), GetPlayerGPSInfo(playerid, G_POS_Z)))
			{
				DisablePlayerGPS(playerid);
			}
		}
	}
	return 1;
}
CB: OnUpdateCheatPlayers() {
	foreach(new playerid:Player) {
		if(!TI[playerid][tLogin]) continue;
		if(TI[playerid][tAFK] >= 3) continue;
		if(AC_GunCheattime[playerid] > unix) break;
		for (new i=0;i<10;i++) {
			new weaponid,ammo;
			GetPlayerWeaponData(playerid,i,weaponid,ammo);
			GunPlayer[playerid][i][1] = ammo;
			GunPlayer[playerid][i][0] = weaponid;
		}
	}
	return 1;
}
stock second_timer() {
	if(second_timerlog > 0) {
		new grandstr[256]; 
		format(grandstr, 256, "Потерялся конец second_timerlog. Этап: %d", second_timerlog);
		printf("%s",grandstr);
	}
	new tickcount1 = GetTickCount();
	new string[156];
	FuelTmier();
	second_timerlog = 1;
	for(new i = 0; i < 175; i ++) {
		if(SI[i][sad_temp] != 4) continue;
		if(SI[i][sad_temp] == 4 && SI[i][sad_time] <= unix) {
			sad_delete(i);
		}
	}
	if(BizWarTime[0] > 0) {
		BizWarTime[0]--;
		if(BizWarTime[0] == 600) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"До начала встречи осталось 10 минут");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"До начала встречи осталось 10 минут");
		}
		if(BizWarTime[0] == 300) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"До начала встречи осталось 5 минут");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"До начала встречи осталось 5 минут");
		}
		if(BizWarTime[0] == 180) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"Приготовьтесь! До начала встречи осталось 3 минуты");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"Приготовьтесь! До начала встречи осталось 3 минуты");
		}
		if(BizWarTime[0] == 60) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"Внимание! До начала встречи осталась 1 минута");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"Внимание! До начала встречи осталась 1 минута");
		}
		if(BizWarTime[0] == 0) MafiaTimeCapture(MZInfo[bFrakVlad],MZInfo[bNapad]);
	}
	second_timerlog = 2;
	/*if(RingInfo[0][rgState] == 1 && TOTALSTYLELIST) {
		if(RingInfo[0][rgTime] > 0) {
			RingInfo[0][rgTime] --;
			new player1 = RingInfo[0][rgPlayer][0];
			new player2 = RingInfo[0][rgPlayer][1];
			format(string, sizeof(string), "~r~%i", RingInfo[0][rgTime]);
			GameTextForPlayer(player1, string, 3000, 5);
			GameTextForPlayer(player2, string, 3000, 5);
			if(RingInfo[0][rgTime] <= 0) {
				if((IsPlayerInDynamicCP(RingInfo[0][rgPlayer][0], RingCP[1]) && IsPlayerInDynamicCP(RingInfo[0][rgPlayer][1], RingCP[0])) ||
				(PI[RingInfo[0][rgPlayer][1]][pCash] < RingInfo[0][rgPrice] && PI[RingInfo[0][rgPlayer][0]][pCash] < RingInfo[0][rgPrice])) {
					format(string, sizeof(string), ""W"[РЭФЕРИ] "G"Поединок между "ORANGE"%s"G" и "ORANGE"%s"G" начался", player_name[player1], player_name[player2]);
					ProxDetector(15.0,player1, string, 0xFFFFFFFF);
					RingInfo[0][rgState] = 2;
					DestroyDynamicCP(RingCP[0]);
		            DestroyDynamicCP(RingCP[1]);
					TOTALSTYLELIST--;

					SetPlayerPosAC(RingInfo[0][rgPlayer][1],762.7578,2.3013,1001.5942);
					SetPlayerFacingAngle(RingInfo[0][rgPlayer][1],130);
					SetPlayerPosAC(RingInfo[0][rgPlayer][0],758.9441,-1.7533,1001.5942);
					SetPlayerFacingAngle(RingInfo[0][rgPlayer][0],315);
					TogglePlayerControllable(RingInfo[0][rgPlayer][1],false);
					TogglePlayerControllable(RingInfo[0][rgPlayer][0],false);
					SetTimerEx("StartFight" , 5000, false, "ii",RingInfo[0][rgPlayer][0],RingInfo[0][rgPlayer][1]);
					SetCameraBehindPlayer(RingInfo[0][rgPlayer][0]);
					SetCameraBehindPlayer(RingInfo[0][rgPlayer][1]);

					TI[RingInfo[0][rgPlayer][0]][tFight] = RingInfo[0][rgPlayer][1];
					TI[RingInfo[0][rgPlayer][1]][tFight] = RingInfo[0][rgPlayer][0];
				}
				else {
					TOTALSTYLELIST--;
					dell_arena();
				}
			}
		}
	}*/
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		new Float:xw, Float:yw, Float:zw;
		GetPlayerVelocity(i,xw,yw,zw);
		if(!TI[i][tLogin] && (xw > 0 || yw > 0 || zw > 0)) {
   			Kick(i),printf("%d",999999);
		}
		if(!TI[i][tLogin]) {
     		if(TI[i][tLoginTime] > 0) {
				if(GetPlayerVirtualWorld(i) != i+1 && TI[i][tSelectSkin] == false) Kick(i),print("NOP AC SOB");
				TI[i][tLoginTime]--;
         		if(TI[i][tLoginTime] == 0) {
           			ErrorMessage(i,"Время на авторизацию вышло");
              		Kick(i);
				}
           	}
	    }
		else {
			new hour, minute, second;
			gettime(hour, minute, second);
			if(hour == 0 && minute == 0 && second == 0) {
				if(getDayEx() == 2) {
					if(!PI[i][pAdmin]) continue;
					gAdminTime[i] = 0;
					mysql_tquery(connects, "UPDATE admin SET online_monday = 0, online_tuesday = 0, online_wednesday = 0, online_thursday = 0, online_friday = 0, online_saturday = 0, online_sunday = 0, lastpm = pm, lastrep = rep", "", "");
				}
				gOnlinePlayer[i][1] = gOnlinePlayer[i][0];
				gOnlinePlayerAFK[i][1] = gOnlinePlayerAFK[i][0];
				gOnlinePlayer[i][0] = 0;
				gOnlinePlayerAFK[i][0] = 0;
			}
			second_timerlog = 3;
			if(spaned[i]==0) ReloadAllAnims(i);
			//if((GetPlayerWeapon(i) == 4 || GetPlayerWeapon(i) == 9 || GetPlayerWeapon(i) == 16 || GetPlayerWeapon(i) == 18 || GetPlayerWeapon(i) == 28 || GetPlayerWeapon(i) == 34 || GetPlayerWeapon(i) == 36 || GetPlayerWeapon(i) == 38 || GetPlayerWeapon(i) == 37 || GetPlayerWeapon(i) == 35 || GetPlayerWeapon(i) == 44 || GetPlayerWeapon(i) == 45) && !player_to_game[i]) DelGun(i),Kick(i),print("AC GUN");
			if(PI[i][pHospital] || TI[i][tHeal]) {
				SetPVarInt(i,"timer_heal",GetPVarInt(i,"timer_heal") + 1);
			    if(GetPVarInt(i,"timer_heal") >= 3 && TI[i][tAFK] <= 3) {
					if(TI[i][tHeal]) SetPlayerHealth(i, GetPlayerHP(i) + vip_status[PI[i][pVips]][vip_healtime]*3);
					else SetPlayerHealth(i, GetPlayerHP(i) + vip_status[PI[i][pVips]][vip_healtime]);
					DeletePVar(i,"timer_heal");
				}
				if(GetPlayerHP(i) >= 75) {
					if(PI[i][pHospital]) SendOk(i,"Вы прошли курс лечения. Можете покинуть больницу");
					PI[i][pHospital] = 0;
					DeletePVar(i,"timer_heal");
				}
			}
			if(GetPVarInt(i,"taxi_time") <= gettime()) {
				DeletePVar(i,"taxi_bizz");
				DeletePVar(i,"taxi_class");
				DeletePVar(i,"taxi_time");
			}
			if(TI[i][tGagTime]) {
				TI[i][tGagTime] --;
				if(TI[i][tGagTime] == 1) {
					TI[i][tGag] = false;
					TI[i][tGagTime] = 0;
					SendOk(i, "Кляп стал мокрым и выпал, Вы снова можете говорить");
				}
			}
			if(TI[i][tCuffed] == 1) {
				if(!TI[i][tCuffedTime]) {
					TogglePlayerControllable(i, true);
					TI[i][tCuffed] = 0;
					TI[i][tCuffedTime] = 0;
				}
				else if(TI[i][tCuffedTime]) {
					TI[i][tCuffedTime] --;
					if(TI[i][tCuffedTime] == 1) {
						TI[i][tCuffedTime] = 0;
					}
				}
			}
			if(GotoInfo[i][gtID] != INVALID_PLAYER_ID) {
				new cuffed = GotoInfo[i][gtID];
				if(!IsPlayerConnected(cuffed) || !TI[cuffed][tLogin]) {
					GotoInfo[i][gtID] = INVALID_PLAYER_ID;
					GotoInfo[i][gtTPX] = 0.0;
					GotoInfo[i][gtTPY] = 0.0;
					GotoInfo[i][gtTPZ] = 0.0;
					GotoInfo[cuffed][gtState] = 0;
					GotoInfo[cuffed][gtStayed] = 0;
					GotoInfo[cuffed][gtGoID] = INVALID_PLAYER_ID;
					GotoInfo[cuffed][gtX] = 0.0;
					GotoInfo[cuffed][gtY] = 0.0;
					GotoInfo[cuffed][gtZ] = 0.0;
				}
			}
			if(GotoInfo[i][gtGoID] != INVALID_PLAYER_ID) {
				new goid = GotoInfo[i][gtGoID];
				if(IsPlayerConnected(goid) && TI[goid][tLogin]) {
					new Float:xX, Float:xY, Float:xZ,Float:agle;
					GetPlayerPos(goid, xX, xY, xZ);
					GetPlayerFacingAngle(i, agle);
					if(!IsPlayerInRangeOfPoint(i, 20, xX, xY, xZ)) {
						TI[i][tVirtualWorld] = GetPlayerVirtualWorld(goid);
						TI[i][tInterior] = GetPlayerInterior(goid);
						SetPlayerFacingAngle(i,agle);
						SetPlayerPosAC(i, xX,xY,xZ,TI[i][tVirtualWorld],TI[i][tInterior]);
					}
					if(GetPlayerState(goid)==1) {
						new ANIMATION;
						if(GotoInfo[goid][gtTPX] != 0.0 || GotoInfo[goid][gtTPY] != 0.0) {
							SetPlayerFaceToPoint(i, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY]);
							ANIMATION = GoPlayerAnimation(i, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY], GotoInfo[goid][gtTPZ]);
						}
						else {
							TurnPlayerFaceToPlayer(i, goid);
							ANIMATION = GoPlayerAnimation(i, xX, xY, xZ);
						}
						if(ANIMATION != 1) {
							if(IsPlayerInRangeOfPoint(i, 0.05, GotoInfo[i][gtX], GotoInfo[i][gtY], GotoInfo[i][gtZ])) {
								GotoInfo[i][gtStayed] ++;
								if(GotoInfo[i][gtStayed] >= 10) {
									new Float:xA;
									GetPlayerPos(i, xX, xY, xZ);
									GetPlayerFacingAngle(i, xA);
									ShiftCords(0, xX, xY, xZ, xA, 1.5);
									SetPlayerPosAC(i, xX, xY, xZ,TI[i][tVirtualWorld],TI[i][tInterior]);
									GotoInfo[i][gtStayed] = 0;
								}
							}
							else GotoInfo[i][gtStayed] = 0;
							GetPlayerPos(i, GotoInfo[i][gtX], GotoInfo[i][gtY], GotoInfo[i][gtZ]);
						}
					}
				}
				else {
					GotoInfo[i][gtGoID] = INVALID_PLAYER_ID;
					GotoInfo[i][gtX] = 0.0;
					GotoInfo[i][gtY] = 0.0;
					GotoInfo[i][gtZ] = 0.0;
				}
			}
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK) {
				Kick(i);
			}
			if(SERIU[i][sID] != INVALID_PLAYER_ID) {
				recon_update(i,SERIU[i][sID]);
			}
			second_timerlog = 4;
			AdvertTimer();
			if(PlayerTrailer[i] != INVALID_VEHICLE_ID && !GetPVarInt(i,"attach_trailer")) {
		        if(PlayerTrailerTime[i]) PlayerTrailerTime[i]--;
          		else if(PlayerTrailerTime[i] < 1) {
					A_DestroyVehicle(PlayerTrailer[i]);
			       	PlayerTrailer[i] = INVALID_VEHICLE_ID;

					if(gPlayerProdText[i] != Text3D:-1) {
						DestroyDynamic3DTextLabel(gPlayerProdText[i]);
						gPlayerProdText[i] = Text3D:-1;
					}
					if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);
					DeletePVar(i,"count_prod2");
					DeletePVar(i,"count_prod");
					DeletePVar(i,"attach_trailer");
				}
		    }
			
			if(IsPlayerInAnyVehicle(i)) {
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) {
					new veh = GetPlayerVehicleID(i);
					if(veh == LastVeh[i]) {
						new tr = GetVehicleTrailer(veh);
						if(tr != 0) {
							if(VehTrailer[i] != INVALID_VEHICLE_ID) {
								if(VehTrailer[i] != tr) {
									OnPlayerDeattachTrailer(i,veh,VehTrailer[i]);
									VehTrailer[i] = tr;
									OnPlayerAttachTrailer(i,veh,tr);
								}
							}
							else {
								VehTrailer[i] = tr;
								OnPlayerAttachTrailer(i,veh,tr);
							}
						}
						else {
							if(VehTrailer[i] != INVALID_VEHICLE_ID) {
								OnPlayerDeattachTrailer(i,veh,VehTrailer[i]);
								VehTrailer[i] = INVALID_VEHICLE_ID;
							}
						}
					}
					else {
						LastVeh[i] = veh;
						new tr = GetVehicleTrailer(veh);
						if(tr != 0) VehTrailer[i] = tr;
						else VehTrailer[i] = INVALID_VEHICLE_ID;
					}
				}
			}
			if(TI[i][tTrucker][3] != 0 && TK_Trailer[i] != INVALID_VEHICLE_ID) {
				TI[i][tTrucker][3]--;
				format(string,sizeof(string),"%d",TI[i][tTrucker][3]);
				GameTextForPlayer(i, string, 1000, 6);
				if(TI[i][tTrucker][3] == 0) {
					TI[i][tTrucker][3] = 0;
					TI[i][tTrucker][2] = 0;
					TI[i][tTrucker][1] = 0;
					TI[i][tTrucker][0] = 0;
					A_DestroyVehicle(TK_Trailer[i]);
			       	TK_Trailer[i] = INVALID_VEHICLE_ID;
			       	SendOk(i,"Груз удален");
				}
			}
			gOnlinePlayer[i][0]++;
			NoRoof(i);
			second_timerlog = 5;
		    if(TI[i][tAntiDM] > 0) {
			    if(GetPlayerAnimationIndex(i) != 471) ApplyAnimation(i, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
			    TI[i][tAntiDM]--;
			    if(TI[i][tAntiDM] == 0) ClearAnims(i);
			}
			if(PI[i][pFamily]) {
				if(fam_lable[i] == Text3D:-1 && PI[i][pSettings][9]) {
					format(string,sizeof(string),"{%s}%s",FamilyColor[gFamily[PI[i][pFamily]-1][famColor]],gFamily[PI[i][pFamily]-1][famName]);
					fam_lable[i] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.025, 5.0, i,INVALID_VEHICLE_ID,1, -1, -1);
				}
			}
			else if((fam_lable[i] != Text3D:-1 && !PI[i][pFamily]) || (fam_lable[i] != Text3D:-1 && !PI[i][pSettings][9])) {
				DestroyDynamic3DTextLabel(fam_lable[i]);
				fam_lable[i] = Text3D:-1;
			}
			second_timerlog = 6;
			TI[i][tAFK] ++;
			if(TI[i][tAFK] >= 3) {
				string = "";
				format(string,sizeof(string),""W"На паузе: "NO"%s",Convert(TI[i][tAFK]));
				SetPlayerChatBubble(i,string,0x7FB151AA,10.0,1600);
				gOnlinePlayerAFK[i][0]++;
			}
			if(TI[i][tAFK] <= 15) {
				if(PI[i][pAdmin] > 0) {
					new reps = 0;
					for(new z;z<MAX_REPORTS;z++) {
						if(PlayerReport[z] != -1) reps++;
					}
					if(reps <= 5) gAdminTime[i]++;
				} 
			}
	   	    if(oldpickup[i] != -1) {
				new Float:z;
				GetPlayerPos(i, z, z, z);
				if(timepickup[i] > 0) timepickup[i]--;
				if(!IsPlayerInRangeOfPoint(i,5.0,PickupX[i],PickupY[i],z) && timepickup[i] == 0) oldpickup[i] = -1;
			}
			second_timerlog = 7;
		    if(CountFloodForPlayer[i] > 0) CountFloodForPlayer[i] = 0;

			if(PI[i][pMute] > 0 && TI[i][tAFK] <= 3) {
				PI[i][pMute] -= vip_status[PI[i][pVips]][vip_mute];
				if(PI[i][pMute] <= 0) {
					SendOk(i, "Срок действия бана чата закончился");
					UpdatePlayerData(i,"mute",0);
				}
			}
			if(PI[i][pFMute] > 0 && TI[i][tAFK] <= 3) {
				PI[i][pFMute] --;
				if(!PI[i][pFMute]) {
					UpdatePlayerData(i,"pFMute",0);
					SendOk(i,"Срок действия заглушки в организации закончился");
				}
			}
			if(thefttime[i] > 0) { //угон
				thefttime[i]--;
				new tdstring[10];
				format(tdstring, sizeof(tdstring), "%02d:%02d", thefttime[i]/60,thefttime[i]%60);
				PlayerTextDrawSetString(i, theft_PTD[i][0], tdstring); 
				if(thefttime[i] == 0) {
					SendOk(i,"Вы отменили задание, ваш навык угона понижен.");
					DestroyDynamicArea(theftarea[i][0]);
					DisablePlayerCheckpoint(i);
					DestroyDynamicCP(theftCheck[i][0]);
					A_DestroyVehicle(theftIDveh[i][0]);
					theftIDveh[i][0] = INVALID_VEHICLE_ID;
					if(theftveh[i][0] != INVALID_VEHICLE_ID) {
						A_DestroyVehicle(theftveh[i][0]); 
						theftveh[i][0] = INVALID_VEHICLE_ID;
					}
					theftplayer[i][0] = 1010;
					theftplayer[i][1] = 0;
					theftCheck[i][1] = 0;
					PlayerTextDrawHide(i, theft_PTD[i][0]);
					thefttime[i] = 0;
					if(PI[i][ptheftExp] == 0) {
						if(PI[i][ptheftSkill] != 0) PI[i][ptheftSkill]--, UpdatePlayerData(i,"theftSkill",PI[i][ptheftSkill]);
						PI[i][ptheftExp] = TheftSkillMax[PI[i][ptheftSkill]]-1, UpdatePlayerData(i,"theftExp",PI[i][ptheftExp]);
					} 
					else {
						if(PI[i][ptheftExp] != 0) PI[i][ptheftExp]--, UpdatePlayerData(i,"theftExp",PI[i][ptheftExp]);
					}
				}
			}
			if(theftveh[i][1] > 0) { //угон
				theftveh[i][1]--;
				new tdstring[10];
				format(tdstring, sizeof(tdstring), "%02d:%02d", theftveh[i][1]/60,theftveh[i][1]%60);
				PlayerTextDrawSetString(i, theft_PTD[i][1], tdstring); 
				if(theftveh[i][1] == 0) {
					SendOk(i,"Ваш временный транспорт уничтожен.");
					if(theftveh[i][0] != INVALID_VEHICLE_ID) {
						A_DestroyVehicle(theftveh[i][0]);
						theftveh[i][0] = INVALID_VEHICLE_ID;
					}
					PlayerTextDrawHide(i, theft_PTD[i][1]);
				}
			}
			if(PI[i][pAskmute] > 0 && TI[i][tAFK] <= 3) {
				PI[i][pAskmute]--;
				if(PI[i][pAskmute] == 0) {
					UpdatePlayerData(i,"pAskMute",0);
				}
			}
			if(PI[i][pJailTime] > 0) {
				PI[i][pJailTime] -= vip_status[PI[i][pVips]][vip_arrest];
				if(PI[i][pJailTime] <= 0) {
					SetPlayerPosAC(i,camExit[PI[i][pJail]-1][0],camExit[PI[i][pJail]-1][1],camExit[PI[i][pJail]-1][2],0,0);
					SetPlayerFacingAngle(i,camExit[PI[i][pJail]-1][3]);
					SendClientMessage(i, CGOLD, "Вы заплатили свой долг обществу, теперь Вы свободны");
					PI[i][pJailTime] = 0;
					PI[i][pJail] = 0;
					UpdatePlayerData(i,"pJailTime",0);
					UpdatePlayerData(i,"pJail",0);
					SetCameraBehindPlayer(i);
					GameTextForPlayer(i,"~g~Freedom", 5000, 1);
				}
			}
			second_timerlog = 8;
			if(PI[i][pCash] >= 1000000) {
				if(!TI[i][tShowKeys]) {
					SetPlayerAttachedObject(i,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
					TI[i][tShowKeys] = true;
				}
				if(TI[i][tShowKeys]) {
					if(GetPlayerWeapon(i) > 0 || GetPlayerState(i) != PLAYER_STATE_ONFOOT || !PI[i][pSettings][7] || TI[i][tJobSad][0] || GetPVarInt(i,"fish_place") || TI[i][tJobGun][0] || TI[i][tJobOil][0] || TI[i][tClothesWork][0]) {
						if(IsPlayerAttachedObjectSlotUsed(i, 9))
							RemovePlayerAttachedObject(i, 9);
					}
					else {
						if(!IsPlayerAttachedObjectSlotUsed(i, 9))
							SetPlayerAttachedObject(i,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
					}
				}
			}
			else if(PI[i][pCash] < 1000000) {
				if(IsPlayerAttachedObjectSlotUsed(i, 9)) {
					if(TI[i][tShowKeys]) {
						RemovePlayerAttachedObject(i, 9);
						TI[i][tShowKeys] = false;
					}
				}
			}
			if(TI[i][tSpcarTime]) {
				TI[i][tSpcarTime]--;
				format(string,sizeof(string), "~r~~h~%i",TI[i][tSpcarTime]);
				GameTextForPlayer(i, string, 1000, 6);
				if(TI[i][tSpcarTime] == 1) {
					switch(PI[i][pJob]) {
						case 1: if(GetPVarInt(i,"bus_id")) SetVehicleToRespawn(GetPVarInt(i,"bus_id"));
						case 2: if(GetPVarInt(i,"mehjob")) SetVehicleToRespawn(GetPVarInt(i,"mehjob"));
						case 3: if(GetPVarInt(i,"prod_vehicle_id")) SetVehicleToRespawn(GetPVarInt(i,"prod_vehicle_id"));
						case 4: if(GetPVarInt(i,"eatjob")) SetVehicleToRespawn(GetPVarInt(i,"eatjob"));
						case 5: if(GetPVarInt(i,"clear_id")) SetVehicleToRespawn(GetPVarInt(i,"clear_id"));
						case 6: if(GetPVarInt(i,"veh_id_cleaner")) SetVehicleToRespawn(GetPVarInt(i,"veh_id_cleaner"));
					}
					if(GetPVarInt(i,"track_id")) EndTrack(i);
					TI[i][tSpcarTime] = 0;
				}
			}
			if(TI[i][tAlcotraz][0]) {
				TI[i][tAlcotraz][0]--;
				format(string,sizeof(string), "~r~~h~%i",TI[i][tAlcotraz][0]);
				GameTextForPlayer(i, string, 1000, 6);
				if(TI[i][tAlcotraz][0] == 1) {
					SendClientMessage(i,COLOR_REDD,"Побег не удался. Время заключение увеличено на 20 минут");
					PI[i][pJailTime] += 1200;
					if(GetPlayerState(i) == PLAYER_STATE_DRIVER) SetVehicleToRespawn(GetPlayerVehicleID(i));
					DisablePlayerRaceCheckpoint(i);
					TI[i][tAlcotraz][2] = 0;
					TI[i][tAlcotraz][1] = 0;
					PlayerSpawn(i);
				}
			}
			if(TI[i][tDMArea][0] || TI[i][tGunArea][0]) UpdateInfoTD(i);
			if(TI[i][tDuel] != -1) {
				if(TI[i][tAFK] >= 20) {
					if(DI[TI[i][tDuel]][duel_start] == true) {
						end_duel(i,1);
					}
				}
			}
			if(PI[i][pJob] == 6 && GetPVarInt(i, "start_job_mower") && GetPlayerVehicleID(i) == TI[i][tArendaCar]) {
				if(timer_job_mower[i] > 1) {
			        timer_job_mower[i]--;
			        new str[10];
			        format(str, sizeof(str), "~g~ %d", timer_job_mower[i]);
					GameTextForPlayer(i, str, 800, 3);
			    }
			    if(timer_job_mower[i] == 1) {
			        timer_job_mower[i] = 0;
			        TogglePlayerControllable(i, true);
			        SendOk(i,"Вы убрали куст. Продолжайте дальше");
			        SetPVarInt(i,"gazon_salary", GetPVarInt(i,"gazon_salary") + 300);
				}
			    for(new x = 0; x < sizeof(object_park_ls); x++) {
				    if(IsPlayerInRangeOfPoint(i, 5.0, check_job_mower[x][0], check_job_mower[x][1], check_job_mower[x][2])) {
				        if(status_check_job_mower[x] == false)  {
							if(i <= 32) check_taxi_park++;
							if(i > 32 && i <= 79) check_verona_beach++;
							if(i > 79 && i <= 138) check_white_house++;
							if(i > 138 && i <= 176) check_medic_ls++;
							if(i > 176 && i <= 226) check_mayor_ls++;
							if(i > 226 && i <= 322) check_glenpark_1++;
							if(i > 322) check_glenpark_2++;
							timer_job_mower[i] = 11;
							//PlayerPlaySound(i,17800,0.0,0.0,0.0);
							TogglePlayerControllable(i, false);
					    	MoveDynamicObject(object_park_ls[x],check_job_mower[x][0], check_job_mower[x][1], check_job_mower[x][2]+2,0.07,
					    	check_job_mower[x][3], check_job_mower[x][4], check_job_mower[x][5]);
		                    status_check_job_mower[x] = true;
		                    status_restore_check_job_mower[x] = false;
						}
			        }
				}
		    }
		}
	}
	checkhour();
	second_timerlog = 9;
	for(new i;i<MAX_ACTORSS;i++) {
		if(actortime[i]>0) {
			actortime[i]--;
			if(actortime[i] == 0) {
				Update3DTextLabelText(tActor[i], COLOR_GREY, "");
				ApplyActorAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
				if(i == 6 || i == 7 || i == 8 || i == 9 || i == 10 || i == 11 || i == 12) ApplyActorAnimation(i,"DEALER","Dealer_idle",4.1,0,0,0,1,1);
			}
		}
	}
	second_timerlog = 10;
	GetMoney();
	time_second = GetTickCount() - tickcount1;
	if(time_second > time_second_max) time_second_max = time_second;
	second_timerlog = 0;
	return true;
}
stock GetElapsedTime(time, to_time, type = CONVERT_TIME_TO_HOURS)
{
	new result;

	switch(type)
	{
		case CONVERT_TIME_TO_MINUTES:
		{
			result = ((time - (time % 60)) - (to_time - (to_time % 60))) / 60;
		}
		case CONVERT_TIME_TO_HOURS:
		{
			result = ((time - (time % 3600)) - (to_time - (to_time % 3600))) / 3600;
		}
		case CONVERT_TIME_TO_DAYS:
		{
			result = ((time - (time % 86400)) - (to_time - (to_time % 86400))) / 86400;
		}
		default:
			result = -1;
	}
	return result;
}

stock ConvertUnixTime(time, type = CONVERT_TIME_TO_SECONDS)
{
	switch(type)
	{
		case CONVERT_TIME_TO_SECONDS:
		{
			time %= 60;
		}
		case CONVERT_TIME_TO_MINUTES:
		{
			time = (time / 60) % 60;
		}
		case CONVERT_TIME_TO_HOURS:
		{
			time = (time / 3600) % 24;
		}
		case CONVERT_TIME_TO_DAYS:
		{
			time = (time / 86400) % 30;
		}
		case CONVERT_TIME_TO_MONTHS:
		{
			time = (time / 2629743) % 12;
		}
		case CONVERT_TIME_TO_YEARS:
		{
			time = (time / 31556926) + 1970;
		}
		default:
			time %= 60;
	}
	return time;
}
stock checkhour() {
	new hour, minute, second;
	gettime(hour, minute, second);
	if(hour == 05 && minute == 03 && second == 00) {
		SendClientMessageToAll(COLOR_YELLOW, "Через две минуты произойдет автоматическая перезагрузка сервера");
		SendClientMessageToAll(COLOR_YELLOW, "Просьба закончить все свои работы. Спасибо за понимание");
	}
	if(hour == 05 && minute == 05 && second == 00)
	{
		SendClientMessageToAll(COLOR_REDD,HostNameRestart);
		
		SaveServer();
		
		foreach(new i:Player)
		{
			if(!TI[i][tLogin]) continue;
			kick(i);
		}
		SendRconCommand("gmx");
		
		printf("Auto Restart - Reloading...");
		return 1;
	}
	return 1;
}
public OnGameModeExit()
{
    SaveServer();
	mysql_close(connects);
	print("Gamemode ended.");
	return true;
}
public OnGameModeInit()
{
    AntiDeAMX();
	LoadMySQLSettings();
	
	gCurDay = GetDayNumber();
	
	//SvDebug(SV_TRUE);
	gstream = SvCreateGStream(0xffff0000, "G"); // blue color
	
	SetGameModeText(GameModeName);
	
	new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, true);
	
	SendRconCommand("hostname "HostName"");
	
	SELECT_SERVER = CONTYPE_SERVER;
	
	connects = mysql_connect(MySQLSettings[MYSQL_HOST],MySQLSettings[MYSQL_USERNAME],MySQLSettings[MYSQL_PASSWORD],MySQLSettings[MYSQL_DATABASE], option_id);

	mysql_log(ERROR | WARNING);
	
	print(" ");

	switch(SELECT_SERVER) {
		case 1: printf("[Загрузка ...] БД MYSQL успешно соединено! (СЕРВЕР [ОСНОВНОЙ] | %i)",SELECT_SERVER);
		case 2: printf("[Загрузка ...] БД MYSQL успешно соединено! (СЕРВЕР [ТЕСТОВЫЙ] | %i)",SELECT_SERVER);
		case 3: printf("[Загрузка ...] БД MYSQL успешно соединено! (СЕРВЕР [ЛОКАЛЬНЫЙ] | %i)",SELECT_SERVER);
	}
	/*============================================================================*/
	
	Streamer_TickRate(30);

	mysql_set_charset("cp1251");
	mysql_tquery(connects, !"SET CHARACTER SET 'utf8'", "", "");
	mysql_tquery(connects, !"SET NAMES 'utf8'", "", "");
	mysql_tquery(connects, !"SET character_set_client = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET character_set_connection = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET character_set_results = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET SESSION collation_connection = 'utf8_general_ci'", "", "");
	
	mysql_tquery(connects,"UPDATE `accounts` SET `online_status` = '1001'", "", "");

	load_fracfreez();
 	load_house();
 	load_information();
 	load_fullaccess();
	load_pickup();
	load_hotels();
	load_airports();
	load_airplane();
	load_family();
	load_rooms();
	load_bint();
	load_funcbizz();
	load_carsbizz();
	load_business();
    load_greenzone();
	load_gangzone();
    load_fractions();
    load_diplomation();
    load_others();
	load_anticheat();
	load_market();
	load_labrary();
	load_economy();
	load_atm();
	load_vote();
	load_fracgun();
	load_bilboards();
	load_bonuses();
	load_graffity();
	load_vip();
	
//	CreateObjects();
    CreateSpheres();
    CreateCheckPoints();
    CreateMapIcons();
	CreatePickups();
	Create3dTextLabels();
	CreateTexdraw();
	CreateActors();
	CreateGangZones();
	CreateOthers();
	CreateTimers();
	
	load_heal();
	load_advert();
	
	load_fors();

	cars_load();
	
	Streamer_SetTickRate(55);
	Streamer_SetVisibleItems(STREAMER_TYPE_MAP_ICON, CountDynamicMapIcons());
	Streamer_SetVisibleItems(STREAMER_TYPE_3D_TEXT_LABEL, CountDynamic3DTextLabels());
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,MAX_OBJECTS+TotalObject+TotalDynObject);

	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));

	ADD_ALL_VEHICLES = ADD_VEHICLES_LASTS+ADD_VEHICLES_BIZES+ADD_VEHICLES_ORGS+ADD_VEHICLES_JOBS+ADD_VEHICLES_SPAWNS+ADD_VEHICLES_BUS+ADD_VEHICLES_SALONS+ADD_VEHICLES_STATICS;

	printf(" ");
	printf ("-> Динамических объектов: %d",TotalDynObject);
	printf ("-> Динамических пикапов: %d",CountDynamicPickups());
	printf ("-> Динамических 3D-Текстов: %d",CountDynamic3DTextLabels());
	printf ("-> Динамических иконок сервера: %d",CountDynamicMapIcons());
	printf ("-> Динамических зон сервера: %d",CountDynamicAreas());
	printf ("-> Статических объектов: %d",TotalObject);
	printf ("-> Видимых объектов (стример): %d",Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
 	printf ("-> Количество гос транспортов: %d", ADD_VEHICLES_ORGS);
	printf ("-> Количество бизнес транспортов: %d", ADD_VEHICLES_BIZES);
	printf ("-> Количество рабочих транспортов: %d", ADD_VEHICLES_JOBS);
	printf ("-> Количество спавн транспортов: %d", ADD_VEHICLES_SPAWNS);
	printf ("-> Количество автобусов сервера: %d", ADD_VEHICLES_BUS);
	printf ("-> Количество салон транспортов: %d", ADD_VEHICLES_SALONS);
	printf ("-> Количество статических транспортов: %d", ADD_VEHICLES_STATICS);
	printf ("-> Количество обычных(CreateVehicle) транспортов: %d", ADD_VEHICLES_LASTS);
	printf ("-> Количество всего транспорта: %d", ADD_ALL_VEHICLES);
	return true;
}
// /getherecar 45 /save ?????????? ??? 5
stock CreateVehicless()
{
//	CreateSpawnCar(462, 2908.9734,-1353.4625,0.8894,92.9713,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
//	CreateSpawnCar(462, 2908.9771,-1352.1372,0.8853,93.5448,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
//	CreateSpawnCar(462, 2908.9429,-1350.9321,0.8825,91.7396,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
//	CreateSpawnCar(462, 2908.7942,-1349.7159,0.8785,91.7630,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
//	CreateSpawnCar(462, 2906.6719,-1356.1431,0.8504,90.7105,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД

//	CreateSpawnCar(462,2744.6536,-2272.7024,17.4800,182.7101,1,1,60);//НЕФТЕЗАВОД
//	CreateSpawnCar(462,2743.1750,-2272.7815,17.4804,177.7837,1,1,60);//НЕФТЕЗАВОД
//	CreateSpawnCar(462,2746.0576,-2272.7517,17.4804,177.7179,1,1,60);//НЕФТЕЗАВОД
//	CreateSpawnCar(462,2747.7407,-2272.9539,17.4803,177.3282,1,1,60);//НЕФТЕЗАВОД
//	CreateSpawnCar(462,2749.2974,-2273.1047,17.4805,173.6517,1,1,60);//НЕФТЕЗАВОД

//	CreateSpawnCar(462, 1647.2574,2242.2310,14.1133,91.8619,1,1,60);//ЯБЛОЧНЫЙ САД
//	CreateSpawnCar(462, 1647.8236,2240.5520,14.1134,88.0147,1,1,60);//ЯБЛОЧНЫЙ САД
//	CreateSpawnCar(462, 1647.3817,2238.6526,14.1135,89.9709,1,1,60);//ЯБЛОЧНЫЙ САД
//	CreateSpawnCar(462, 1647.5444,2236.6780,14.1122,91.4380,1,1,60);//ЯБЛОЧНЫЙ САД
//	CreateSpawnCar(462, 1648.0464,2234.5144,14.1134,89.0799,1,1,60);//ЯБЛОЧНЫЙ САД

//	CreateSpawnCar(462,1835.3926,1463.0696,9.5224,87.2800,1,1,60);//ЛЕСОПИЛКА
//	CreateSpawnCar(462,1836.1154,1461.2411,9.5234,87.7214,1,1,60);//ЛЕСОПИЛКА
//	CreateSpawnCar(462,1836.2653,1459.4443,9.5234,91.3917,1,1,60);//ЛЕСОПИЛКА
//	CreateSpawnCar(462,1836.0676,1457.8975,9.5235,92.6159,1,1,60);//ЛЕСОПИЛКА
//	CreateSpawnCar(462,1835.9839,1455.6979,9.5228,89.7781,1,1,60);//ЛЕСОПИЛКА

//	CreateSpawnCar(462,166.0083,837.1751,11.6139,339.2522,1,1,60); // Велик СПАВН ЛС 1
//	CreateSpawnCar(462,164.7659,837.2294,11.6084,340.2135,1,1,60); // Велик СПАВН ЛС 2
//	CreateSpawnCar(462,163.7765,837.5125,11.6083,340.1951,1,1,60); // Велик СПАВН ЛС 3
//	CreateSpawnCar(462,162.7074,838.1339,11.6111,336.3002,1,1,60); // Велик СПАВН ЛС 4
//	CreateSpawnCar(462,161.1993,838.2649,11.6064,336.5056,1,1,60); // Велик СПАВН ЛС 5
/*	CreateSpawnCar(462,160.0689,838.8685,11.6086,337.5728,1,1,60); // Велик СПАВН ЛС 6
	CreateSpawnCar(462,159.2265,839.4716,11.6105,337.1177,1,1,60); // Велик СПАВН ЛС 7
	CreateSpawnCar(462,158.1261,839.4824,11.6071,334.5206,1,1,60); // Велик СПАВН ЛС 8
	CreateSpawnCar(462,157.1240,840.3127,11.6120,341.4205,1,1,60); // Велик СПАВН ЛС 9
	CreateSpawnCar(462,156.2549,840.6396,11.6122,338.5495,1,1,60); // Велик СПАВН ЛС 10
	CreateSpawnCar(462,155.1948,840.7293,11.6083,345.4034,1,1,60); // Велик СПАВН ЛС 11
	
	CreateSpawnCar(462,195.6685,822.2009,11.6421,339.6425,1,1,60); // Велики СПАВН СФ 1
	CreateSpawnCar(462,196.9593,821.7522,11.6450,337.8337,1,1,60); // Велики СПАВН СФ 2
	CreateSpawnCar(462,198.4643,821.5178,11.6379,341.4020,1,1,60); // Велики СПАВН СФ 3
	CreateSpawnCar(462,199.4955,820.8328,11.6517,344.1889,1,1,60); // Велики СПАВН СФ 4
	CreateSpawnCar(462,200.9417,820.4788,11.6556,339.6008,1,1,60); // Велики СПАВН СФ 5
	CreateSpawnCar(462,202.1502,819.9088,11.6701,341.5096,1,1,60); // Велики СПАВН СФ 6
	CreateSpawnCar(462,203.6013,819.4940,11.6836,338.6515,1,1,60); // Велики СПАВН СФ 7
	CreateSpawnCar(462,204.8347,819.0656,11.6946,343.7141,1,1,60); // Велики СПАВН СФ 8
	CreateSpawnCar(462,206.2296,818.5852,11.7029,336.3491,1,1,60); // Велики СПАВН СФ 9
	CreateSpawnCar(462,207.3138,817.7731,11.7033,337.1624,1,1,60); // Велики СПАВН СФ 10
	CreateSpawnCar(462,208.7890,817.3005,11.7029,335.4887,1,1,60); // Велики СПАВН СФ 11
	CreateSpawnCar(462,209.8662,816.9254,11.7027,341.9709,1,1,60); // Велики СПАВН СФ 12

	CreateSpawnCar(462,1898.0612,2045.6733,15.6720,0.6912,1,1,60); // спавн lv 1
	CreateSpawnCar(462,1896.9741,2045.4584,15.6722,1.2878,1,1,60); // спавн lv 2
	CreateSpawnCar(462,1896.1046,2045.4915,15.6725,3.1514,1,1,60); // спавн lv 3
	CreateSpawnCar(462,1895.1256,2045.6627,15.6722,359.1863,1,1,60); // спавн lv 4
	CreateSpawnCar(462,1894.5620,2044.9515,15.6728,2.2737,1,1,60); // спавн lv 5
	CreateSpawnCar(462,1893.9344,2045.5690,15.6717,356.8965,1,1,60); // спавн lv 6
	CreateSpawnCar(462,1892.9413,2045.1187,15.6728,1.8600,1,1,60); // спавн lv 7
	CreateSpawnCar(462,1887.7998,2045.2611,15.6664,1.0755,1,1,60); // спавн lv 8
	CreateSpawnCar(462,1886.9794,2045.2477,15.6691,0.5552,1,1,60); // спавн lv 9
	CreateSpawnCar(462,1886.1290,2045.6941,15.6682,1.7413,1,1,60); // спавн lv 10
	CreateSpawnCar(462,1885.2490,2045.6967,15.6712,358.8304,1,1,60); // спавн lv 11
	CreateSpawnCar(462,1883.8059,2045.3671,15.6720,0.4333,1,1,60); // спавн lv 12
	
	CreateSpawnCar(462,2481.4126,-1813.6975,21.7628,88.5854,1,1,60); // спавн южный 1
	CreateSpawnCar(462,2482.2705,-1810.6567,21.7691,86.8157,1,1,60); // спавн южный 2
	CreateSpawnCar(462,2481.8455,-1808.4542,21.7634,90.7848,1,1,60); // спавн южный 3
	CreateSpawnCar(462,2482.2698,-1805.3981,21.7629,90.9714,1,1,60); // спавн южный 4
	CreateSpawnCar(462,2482.0378,-1803.7242,21.7628,90.5067,1,1,60); // спавн южный 5
	CreateSpawnCar(462,2482.2476,-1801.7108,21.7633,90.2620,1,1,60); // спавн южный 6
	CreateSpawnCar(462,2482.2891,-1799.1300,21.7630,88.4770,1,1,60); // спавн южный 7
	CreateSpawnCar(462,2482.2507,-1796.7257,21.7631,90.5405,1,1,60); // спавн южный 8
	CreateSpawnCar(462,2483.3335,-1793.7212,21.7634,89.3196,1,1,60); // спавн южный 9
	CreateSpawnCar(462,2482.3965,-1790.6858,21.7632,88.6962,1,1,60); // спавн южный 10
	CreateSpawnCar(462,2481.9651,-1789.2441,21.7633,88.9927,1,1,60); // спавн южный 11
	CreateSpawnCar(462,2482.1255,-1786.3923,21.7628,88.0048,1,1,60); // спавн южный 12

	CreateSpawnCar(462,2110.0020,-2391.3096,21.4964,3.6156,1,1,60); // мчс лс 1
	CreateSpawnCar(462,2108.4304,-2391.6897,21.4965,357.7771,1,1,60); // мчс лс 2
	CreateSpawnCar(462,2107.3235,-2391.6426,21.4964,357.9686,1,1,60); // мчс лс 3
	CreateSpawnCar(462,2105.8979,-2391.6604,21.4965,358.5222,1,1,60); // мчс лс 4
	CreateSpawnCar(462,2104.1082,-2391.6052,21.4964,357.9455,1,1,60); // мчс лс 5
	CreateSpawnCar(462,2103.0898,-2391.5000,21.4965,0.1662,1,1,60); // мчс лс 6
	CreateSpawnCar(462,2101.5901,-2391.7727,21.4964,354.8505,1,1,60); // мчс лс 7
	CreateSpawnCar(462,2099.7485,-2391.6936,21.4964,1.4421,1,1,60); // мчс лс 8
	CreateSpawnCar(462,2098.6138,-2391.4556,21.4965,356.5399,1,1,60); // мчс лс 9
	CreateSpawnCar(462,2097.7283,-2391.5496,21.4957,357.5897,1,1,60); // мчс лс 10
	CreateSpawnCar(462,2117.2153,-2391.5967,21.4965,0.2525,1,1,60); // мчс лс 11
	CreateSpawnCar(462,2118.3938,-2391.8684,21.4964,3.0988,1,1,60); // мчс лс 12
	CreateSpawnCar(462,2120.1951,-2391.4548,21.4964,2.9354,1,1,60); // мчс лс 13
	CreateSpawnCar(462,2121.3835,-2391.8362,21.4955,1.5446,1,1,60); // мчс лс 14
	CreateSpawnCar(462,2122.9893,-2391.7532,21.4953,1.9893,1,1,60); // мчс лс 15
	CreateSpawnCar(462,2124.1938,-2391.7192,21.4964,354.9260,1,1,60); // мчс лс 16
	CreateSpawnCar(462,2125.6230,-2391.7510,21.4954,354.8193,1,1,60); // мчс лс 17
	CreateSpawnCar(462,2127.3276,-2391.6150,21.4965,358.6472,1,1,60); // мчс лс 18
	CreateSpawnCar(462,2129.2432,-2391.9756,21.4964,358.9405,1,1,60); // мчс лс 19
	CreateSpawnCar(462,2130.9138,-2391.6389,21.4964,356.9626,1,1,60); // мчс лс 20

    ///////////////////////////////////////////////////////////////////////////////////////
	CreateBusVehicle(1,JOB_BUS,437, 2240.4067,-1990.0903,19.1928,91.7251, 229, 229, RES_CAR_TIME);//автобусы лс 1
	CreateBusVehicle(1,JOB_BUS,437, 2239.9541,-1984.9436,19.1907,93.000, 229, 229, RES_CAR_TIME);//автобусы лс 2
	CreateBusVehicle(1,JOB_BUS,437, 2240.7002,-1979.8966,19.1925,92.0679, 229, 229, RES_CAR_TIME);//автобусы лс 3
	CreateBusVehicle(1,JOB_BUS,437, 2239.5466,-1974.8362,19.1947,92.2568, 229, 229, RES_CAR_TIME);//автобусы лс 4
	CreateBusVehicle(1,JOB_BUS,437, 2241.3335,-1969.2507,19.1941,90.9602, 229, 229, RES_CAR_TIME);//автобусы лс 5
	CreateBusVehicle(1,JOB_BUS,437, 2240.8333,-1963.3317,19.1922,91.0467, 229, 229, RES_CAR_TIME);//автобусы лс 6

	CreateBusVehicle(2,JOB_BUS,431, 440.1483,780.9370,12.2075,159.2144, 162, 162, RES_CAR_TIME);//автобусы сф 1
	CreateBusVehicle(2,JOB_BUS,431, 446.0569,778.7650,12.2065,158.9648, 162, 162, RES_CAR_TIME);//автобусы сф 2
	CreateBusVehicle(2,JOB_BUS,431, 453.2252,775.9988,12.2083,158.5913, 162, 162, RES_CAR_TIME);//автобусы сф 3
	CreateBusVehicle(2,JOB_BUS,431, 460.5088,772.5591,12.2079,159.7596, 162, 162, RES_CAR_TIME);//автобусы сф 4
	CreateBusVehicle(2,JOB_BUS,431, 467.1714,771.5192,12.2083,158.6511, 162, 162, RES_CAR_TIME);//автобусы сф 5
	CreateBusVehicle(2,JOB_BUS,431, 562.7083,735.1998,12.2063,159.0735, 162, 162, RES_CAR_TIME);//автобусы сф 6
	CreateBusVehicle(2,JOB_BUS,431, 567.4869,731.1993,12.2058,160.5263, 162, 162, RES_CAR_TIME);//автобусы сф 7
	CreateBusVehicle(2,JOB_BUS,431, 574.8344,730.4225,12.2056,159.1622, 162, 162, RES_CAR_TIME);//автобусы сф 8
	CreateBusVehicle(2,JOB_BUS,431, 581.9388,726.3524,12.2062,158.6993, 162, 162, RES_CAR_TIME);//автобусы сф 9
	CreateBusVehicle(2,JOB_BUS,431, 588.2059,724.5959,12.2045,159.5138, 162, 162, RES_CAR_TIME);//автобусы сф 10
	CreateBusVehicle(2,JOB_BUS,431, 592.4321,723.3796,12.2077,159.1167, 162, 162, RES_CAR_TIME);//автобусы сф 11
	CreateBusVehicle(2,JOB_BUS,431, 599.6553,721.8488,12.2056,159.0586, 162, 162, RES_CAR_TIME);//автобусы сф 12
	
	CreateBusVehicle(3,JOB_BUS,437, 1866.7524,2256.3406,15.6502,271.2346, 136, 136, RES_CAR_TIME);// автобусы лв 1
	CreateBusVehicle(3,JOB_BUS,437, 1867.4364,2259.7200,15.6503,270.8093, 136, 136, RES_CAR_TIME);// автобусы лв 2
	CreateBusVehicle(3,JOB_BUS,437, 1868.9700,2263.9102,15.6589,268.7891, 136, 136, RES_CAR_TIME);// автобусы лв 3
	CreateBusVehicle(3,JOB_BUS,437, 1867.3047,2244.7925,15.6430,270.8682, 136, 136, RES_CAR_TIME);// автобусы лв 4
	CreateBusVehicle(3,JOB_BUS,437, 1867.0718,2241.2312,15.6550,271.3999, 136, 136, RES_CAR_TIME);// автобусы лв 5

	///////////////////////////////////////////////////////////////////////////////////////
	CreateJobVehicle(JOB_MECH,525, 1748.7462,2415.6511,15.2189,305.9001, -1, -1, RES_CAR_TIME);//механики сф 1 1
	CreateJobVehicle(JOB_MECH,525, 1752.0887,2412.4624,15.2134,307.4393, -1, -1, RES_CAR_TIME);//механики сф 1 2
	CreateJobVehicle(JOB_MECH,525, 1754.4270,2408.2302,15.2052,307.4895, -1, -1, RES_CAR_TIME);//механики сф 1 3
	CreateJobVehicle(JOB_MECH,525, 1757.1262,2403.0627,15.2106,307.6860, -1, -1, RES_CAR_TIME);//механики сф 1 4
	CreateJobVehicle(JOB_MECH,525, 1759.3977,2398.8481,15.2000,306.7807, -1, -1, RES_CAR_TIME);//механики сф 1 5
	CreateJobVehicle(JOB_MECH,525, 1762.3009,2394.4692,15.1766,307.9431, -1, -1, RES_CAR_TIME);//механики сф 1 6
	CreateJobVehicle(JOB_MECH,525, 1765.0724,2390.9609,15.1581,308.2880, -1, -1, RES_CAR_TIME);//механики сф 1 7
	CreateJobVehicle(JOB_MECH,525, 1768.4929,2386.9160,15.1376,306.5283, -1, -1, RES_CAR_TIME);//механики сф 1 8
	CreateJobVehicle(JOB_MECH,525, 1771.9655,2383.7551,15.1237,306.3872, -1, -1, RES_CAR_TIME);//механики сф 1 9
	CreateJobVehicle(JOB_MECH,525, 1773.2510,2379.8157,15.1188,305.6539, -1, -1, RES_CAR_TIME);//механики сф 1 10

	CreateJobVehicle(JOB_MECH,525, 1757.9291,2254.8174,15.7046,271.7143, -1, -1, RES_CAR_TIME);//механики сф 2 11
	CreateJobVehicle(JOB_MECH,525, 1756.7533,2259.7002,15.7051,268.2661, -1, -1, RES_CAR_TIME);//механики сф 2 12
	CreateJobVehicle(JOB_MECH,525, 1756.0920,2264.8462,15.7127,271.2322, -1, -1, RES_CAR_TIME);//механики сф 2 13
	CreateJobVehicle(JOB_MECH,525, 1788.3695,2255.3743,15.6070,88.2033, -1, -1, RES_CAR_TIME);//механики сф 2 14
	CreateJobVehicle(JOB_MECH,525, 1789.7089,2260.5918,15.6220,89.2775, -1, -1, RES_CAR_TIME);//механики сф 2 15
	
	//Механики ЛС
	CreateJobVehicle(JOB_MECH,525, 2242.1938,-1947.0865,18.6859,87.3157, -1, -1, RES_CAR_TIME);//механики лс 1 1
	CreateJobVehicle(JOB_MECH,525, 2242.6760,-1941.8235,18.6579,86.6985, -1, -1, RES_CAR_TIME);//механики лс 1 2
	CreateJobVehicle(JOB_MECH,525, 2242.6794,-1936.5883,18.6630,91.5100, -1, -1, RES_CAR_TIME);//механики лс 1 3
	CreateJobVehicle(JOB_MECH,525, 2242.3572,-1931.1438,18.6621,92.6346, -1, -1, RES_CAR_TIME);//механики лс 1 4
	CreateJobVehicle(JOB_MECH,525, 2241.9219,-1925.7913,18.6678,94.4017, -1, -1, RES_CAR_TIME);//механики лс 1 5
	CreateJobVehicle(JOB_MECH,525, 2241.7666,-1919.8472,18.6621,90.5154, -1, -1, RES_CAR_TIME);//механики лс 1 6
	CreateJobVehicle(JOB_MECH,525, 2241.4731,-1913.6249,18.6621,92.7285, -1, -1, RES_CAR_TIME);//механики лс 1 7
	CreateJobVehicle(JOB_MECH,525, 2240.9861,-1906.3302,18.6562,91.9500, -1, -1, RES_CAR_TIME);//механики лс 1 8
	CreateJobVehicle(JOB_MECH,525, 2240.5415,-1899.7074,18.6565,92.9766, -1, -1, RES_CAR_TIME);//механики лс 1 9
	CreateJobVehicle(JOB_MECH,525, 2240.0952,-1892.5050,18.6600,90.7536, -1, -1, RES_CAR_TIME);//механики лс 1 10

	CreateJobVehicle(JOB_MECH,525, 2526.3804,-2174.6660,21.8266,180.2267, -1, -1, RES_CAR_TIME);//механики лс 2 11
	CreateJobVehicle(JOB_MECH,525, 2530.0225,-2174.8254,21.8241,179.7518, -1, -1, RES_CAR_TIME);//механики лс 2 12
	CreateJobVehicle(JOB_MECH,525, 2533.5820,-2175.1497,21.8273,179.8994, -1, -1, RES_CAR_TIME);//механики лс 2 13
	CreateJobVehicle(JOB_MECH,525, 2537.5291,-2175.2271,21.8221,180.2565, -1, -1, RES_CAR_TIME);//механики лс 2 14
	CreateJobVehicle(JOB_MECH,525, 2541.0759,-2175.0715,21.8155,179.2188, -1, -1, RES_CAR_TIME);//механики лс 2 15
	
	//Механики ЛВ
	CreateJobVehicle(JOB_MECH,525, -414.9926,1028.0667,11.9188,89.2407, -1, -1, RES_CAR_TIME);//механики лв 1 1
	CreateJobVehicle(JOB_MECH,525, -414.8374,1022.4378,11.9223,88.7334, -1, -1, RES_CAR_TIME);//механики лв 1 2
	CreateJobVehicle(JOB_MECH,525, -414.9628,1016.6174,11.9118,92.0659, -1, -1, RES_CAR_TIME);//механики лв 1 3
	CreateJobVehicle(JOB_MECH,525, -414.7231,1011.5448,11.9140,92.1181, -1, -1, RES_CAR_TIME);//механики лв 1 4
	CreateJobVehicle(JOB_MECH,525, -414.6428,1006.8099,11.9192,91.0184, -1, -1, RES_CAR_TIME);//механики лв 1 5
	CreateJobVehicle(JOB_MECH,525, -473.1953,1027.5535,11.8733,270.9128, -1, -1, RES_CAR_TIME);//механики лв 1 6
	CreateJobVehicle(JOB_MECH,525, -473.1011,1022.0198,11.8434,272.9048, -1, -1, RES_CAR_TIME);//механики лв 1 7
	CreateJobVehicle(JOB_MECH,525, -473.1146,1016.7502,11.8519,271.9171, -1, -1, RES_CAR_TIME);//механики лв 1 8
	CreateJobVehicle(JOB_MECH,525, -473.1158,1012.2057,11.8496,270.8224, -1, -1, RES_CAR_TIME);//механики лв 1 9
	CreateJobVehicle(JOB_MECH,525, -473.0537,1007.4214,11.8517,270.5094, -1, -1, RES_CAR_TIME);//механики лв 1 10

	CreateJobVehicle(JOB_MECH,525, 216.4308,1649.8011,11.8486,350.3244, -1, -1, RES_CAR_TIME);//механики лв 2 11
	CreateJobVehicle(JOB_MECH,525, 220.8118,1649.2097,11.8499,351.7759, -1, -1, RES_CAR_TIME);//механики лв 2 12
	CreateJobVehicle(JOB_MECH,525, 225.3889,1648.4413,11.8495,351.8855, -1, -1, RES_CAR_TIME);//механики лв 2 13
	CreateJobVehicle(JOB_MECH,525, 231.3791,1654.6809,11.8468,84.9978, -1, -1, RES_CAR_TIME);//механики лв 2 14
	CreateJobVehicle(JOB_MECH,525, 231.8596,1660.7648,11.8408,85.0730, -1, -1, RES_CAR_TIME);//механики лв 2 15

	CreateJobVehicle(JOB_FISH,473, 2014.3424,997.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,992.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,987.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,982.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,977.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,972.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,967.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,962.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,957.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,952.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,947.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,942.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	CreateJobVehicle(JOB_FISH,473, 2014.3424,937.9380,11.6711,92.7143, -1, -1, 900);//бизнес рыбалки
	
	CreateJobVehicle(JOB_NEFT,530,2709.3511,-2395.7415,17.6798,1.1844,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 1
	CreateJobVehicle(JOB_NEFT,530,2705.8806,-2395.4058,17.9276,0.5565,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 2
	CreateJobVehicle(JOB_NEFT,530,2702.2615,-2395.9641,17.6801,2.4295,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 3
	CreateJobVehicle(JOB_NEFT,530,2699.7419,-2395.9905,17.6753,358.8326,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 4
	CreateJobVehicle(JOB_NEFT,530,2696.5288,-2396.4773,17.6768,0.9878,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 5
	CreateJobVehicle(JOB_NEFT,530,2693.8303,-2396.0608,17.6783,0.5464,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 6
	CreateJobVehicle(JOB_NEFT,530,2691.1145,-2395.7271,17.6784,0.6032,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 7
	CreateJobVehicle(JOB_NEFT,530,2688.1125,-2396.4236,17.6780,359.9085,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 8
	CreateJobVehicle(JOB_NEFT,530,2684.9658,-2396.1809,17.6792,359.0677,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 9
	CreateJobVehicle(JOB_NEFT,530,2681.5422,-2396.3225,17.6785,0.8363,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 10
	CreateJobVehicle(JOB_NEFT,530,2678.5940,-2396.1821,17.6772,359.8479,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 11
	CreateJobVehicle(JOB_NEFT,530,2675.9546,-2396.0283,17.6801,2.3987,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 12
	CreateJobVehicle(JOB_NEFT,530,2673.1316,-2396.0806,17.6795,0.2055,1,1, RES_CAR_TIME); // Погрузочник нефтезавода 13

    ///////////////////////////////////////////////////////////////////////////////////////
    CreateOrgsVehicle(fMAYOR,1,487, 1930.6404,-2222.8701,31.1919,269.7936, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,415, 1945.5637,-2211.3787,11.0017,0.6254, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,409, 1942.5256,-2211.5876,11.3204,0.4168, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,415, 1939.1964,-2210.8586,11.1707,359.5601, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1935.9845,-2211.2522,10.8541,359.4253, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1932.5649,-2211.2476,10.8542,359.1320, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1929.1521,-2211.3196,10.8540,359.2715, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1925.6078,-2211.0066,10.8541,0.1979, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1922.5321,-2210.9846,10.8541,359.1588, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1919.2574,-2211.0535,10.8542,357.6313, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1915.5887,-2210.9033,10.8540,1.0108, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1898.9473,-2210.8816,10.8488,358.9325, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1895.6587,-2210.7722,10.8486,359.5372, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1892.4822,-2210.9941,10.8488,358.0126, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1889.5391,-2210.9204,10.8488,358.9595, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1886.3932,-2210.8511,10.8488,0.4070, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1883.2954,-2211.0330,10.8489,359.1241, 1, 1, RES_CAR_TIME);//правительство
	CreateOrgsVehicle(fMAYOR,1,507, 1880.1047,-2211.3701,10.8488,359.7696, 1, 1, RES_CAR_TIME);//правительство
	
    CreateOrgsVehicle(fARMYSF,11,520, 801.5170,-427.2453,4.6798,329.5839, 77, 77, RES_CAR_TIME);//армия сф 1
    CreateOrgsVehicle(fARMYSF,11,520, 811.9030,-431.2856,4.6798,347.2521, 77, 77, RES_CAR_TIME);//армия сф 2
    CreateOrgsVehicle(fARMYSF,11,520, 826.3878,-435.4267,4.6798,339.1080, 77, 77, RES_CAR_TIME);//армия сф 3
    CreateOrgsVehicle(fARMYSF,1,500, 833.0776,-437.8978,4.0835,355.2085, 77, 77, RES_CAR_TIME);//армия сф 4
    CreateOrgsVehicle(fARMYSF,1,500, 837.1567,-438.6335,4.0866,353.8392, 77, 77, RES_CAR_TIME);//армия сф 5
    CreateOrgsVehicle(fARMYSF,1,470, 841.1741,-438.3194,3.9684,1.1621, 77, 77, RES_CAR_TIME);//армия сф 6
    CreateOrgsVehicle(fARMYSF,1,470, 845.8903,-437.9879,3.9657,5.6682, 77, 77, RES_CAR_TIME);//армия сф 7
    CreateOrgsVehicle(fARMYSF,1,470, 850.6024,-437.3076,3.9672,12.7744, 77, 77, RES_CAR_TIME);//армия сф 8
    CreateOrgsVehicle(fARMYSF,1,470, 856.7748,-436.4214,3.9647,8.3434, 77, 77, RES_CAR_TIME);//армия сф 9
    CreateOrgsVehicle(fARMYSF,1,470, 861.8775,-435.4196,3.9670,13.8340, 77, 77, RES_CAR_TIME);//армия сф 10
    CreateOrgsVehicle(fARMYSF,1,437, 867.4603,-434.8203,4.3873,15.2786, 77, 77, RES_CAR_TIME);//армия сф 11
    CreateOrgsVehicle(fARMYSF,1,433, 872.6668,-432.7680,4.0500,10.2213, 77, 77, RES_CAR_TIME);//армия сф 12
    CreateOrgsVehicle(fARMYSF,3,487, 878.7599,-431.9328,4.1841,7.5354, 77, 77, RES_CAR_TIME);//армия сф 13
    CreateOrgsVehicle(fARMYSF,3,487, 889.1403,-431.8580,4.1821,2.9854, 77, 77, RES_CAR_TIME);//армия сф 14
    CreateOrgsVehicle(fARMYSF,3,548, 905.8105,-434.7529,5.5398,9.5247, 77, 77, RES_CAR_TIME);//армия сф 15
	CreateOrgsVehicle(fARMYSF,3,548, 930.9634,-437.0985,5.6300,0.0380, 77, 77, RES_CAR_TIME);//армия сф 16
	//CreateOrgsVehicle(fARMYSF,3,452, -1439.9626, 507.3423, -0.2277, 90.0000, 77, 77, RES_CAR_TIME);//армия сф 17
	//CreateOrgsVehicle(fARMYSF,3,452, -1444.6266, 495.3742, 0.0307, 90.0000, 77, 77, RES_CAR_TIME);//армия сф 18

	CreateOrgsVehicle(fLSNEWS,1, 582, 1983.7920,-2707.6184,10.8917,176.7387,152,155,RES_CAR_TIME);//сми лс
	CreateOrgsVehicle(fLSNEWS,1, 582, 1991.7920,-2708.6184,10.8917,182.7387,152,155,RES_CAR_TIME);//сми лс
	CreateOrgsVehicle(fLSNEWS,1, 582, 1998.7920,-2709.6184,10.8917,188.7387,152,155,RES_CAR_TIME);//сми лс
	CreateOrgsVehicle(fLSNEWS,1, 582, 2006.7920,-2710.6184,10.8917,194.7387,152,155,RES_CAR_TIME);//сми лс
	CreateOrgsVehicle(fLSNEWS,1, 582, 2014.7920,-2711.6184,10.8917,200.7387,152,155,RES_CAR_TIME);//сми лс
	CreateOrgsVehicle(fLSNEWS,1, 488, 2025.5554,-2709.7258,10.7756,83.7391,152,155,RES_CAR_TIME);//сми лс

	CreateOrgsVehicle(fFBI,1, 415, 2403.7563,-1796.2510,18.8365,178.4888,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 415, 2408.1519,-1796.6201,18.8364,180.9194,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 415, 2412.2258,-1795.9939,18.8357,180.0321,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 522, 2416.5444,-1796.7874,18.8360,177.5794,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 522, 2420.5515,-1796.5579,18.8361,179.0934,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 522, 2420.4395,-1809.4617,18.8374,180.7912,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 490, 2416.5159,-1809.3567,18.8359,180.1678,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 490, 2412.3435,-1809.2382,18.8380,179.3109,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 490, 2407.7654,-1809.5183,18.8361,182.1189,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 490, 2403.6675,-1809.7268,18.8362,178.9026,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 490, 2403.5369,-1816.9542,18.8367,179.1145,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 482, 2408.2583,-1816.8297,18.8372,182.7917,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 482, 2412.4763,-1817.3550,18.8373,181.9284,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 482, 2442.1064,-1804.2301,18.8372,90.7530,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 421, 2416.8184,-1816.9709,18.8376,180.0855,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 421, 2420.7766,-1816.6249,18.8358,179.7190,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 421, 2441.8770,-1808.0426,18.8361,90.4027,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 487, 2417.5984,-1824.3063,40.9250,266.9767,0,0,RES_CAR_TIME);//фбр
	CreateOrgsVehicle(fFBI,1, 487, 2419.4304,-1804.4532,40.8794,270.0364,0,0,RES_CAR_TIME);//фбр

	CreateOrgsVehicle(fRM,1, 409, 374.4874,1546.7568,12.0004,84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 579, 373.4874,1541.7568,12.0004,84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 468, 372.4874, 1536.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 468, 371.4874, 1531.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 579, 370.4874, 1526.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 555, 368.4874, 1516.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 555, 367.4874, 1511.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 562, 366.4874, 1506.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 562, 365.4874, 1501.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 579, 364.4874, 1496.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 579, 363.4874, 1491.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 559, 362.4874, 1486.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 559, 361.4874, 1481.7568, 12.0004, 84.4072, 0, 0,RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 482, 360.4874, 1476.7568, 12.0004, 84.4072, 0, 0, RES_CAR_TIME);//русская мафия
	CreateOrgsVehicle(fRM,1, 487, 356.1958,1465.4517,12.1151,352.0464, 0, 0,RES_CAR_TIME);//русская мафия

    CreateOrgsVehicle(fLCN,1,579, 472.7374,766.3555,11.8850,160.8897, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,579, 476.3407,764.9677,11.8876,158.8537, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,579, 480.4160,763.5181,11.8901,158.9205, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,579, 484.4505,761.7186,11.8899,160.9909, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,559, 488.0661,760.7132,11.6192,158.2926, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,559, 491.8498,759.0991,11.6139,159.1995, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,562, 491.1628,748.6381,11.6351,68.3037, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,409, 489.1423,744.7469,12.0738,69.0764, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,555, 488.6513,740.3884,11.7949,69.6266, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,555, 487.3865,736.9818,11.7942,69.1073, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,468, 493.4826,752.5983,11.7012,67.1864, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,468, 467.3828,755.4104,11.7013,159.5820, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,482, 495.6137,757.6398,11.6354,159.8498, 0, 0, RES_CAR_TIME);//LCN
	CreateOrgsVehicle(fLCN,1,487, 497.2124,745.2455,15.4188,160.2700, 0, 0, RES_CAR_TIME);//LCN

	CreateOrgsVehicle(fLVPD,1,601, 2544.2441,-2446.9446,21.6074,269.6812, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,601, 2567.2849,-2429.5901,21.9935,269.0172, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,523, 2543.9453,-2440.3560,21.6076,270.8412, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,523, 2544.0178,-2434.2495,21.6075,268.2964, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,599, 2544.4756,-2427.7720,21.6076,270.0603, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,599, 2543.5522,-2421.3245,21.6073,271.6472, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,427, 2544.0762,-2415.0762,21.6074,270.0461, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,427, 2543.3479,-2408.7969,21.6075,269.4432, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,598, 2552.9517,-2445.9819,21.6074,359.6407, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,598, 2556.6707,-2446.0261,21.6075,358.8506, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,528, 2560.1460,-2446.0000,21.6073,359.6587, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,528, 2563.8840,-2445.6892,21.6075,0.1126, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,560, 2567.3535,-2445.8081,21.6074,0.8960, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,560, 2571.1479,-2445.7002,21.6074,0.1238, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,541, 2574.5435,-2445.6306,21.6074,0.8256, 0, 1, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,541, 2559.2166,-2412.2561,21.9968,176.8729, 0, 0, RES_CAR_TIME);//полиция лв
	CreateOrgsVehicle(fLVPD,1,497, 2549.5349,-2389.2986,36.3706,268.5154, 0, 1, RES_CAR_TIME);//полиция лв - вертолёт
	
	CreateOrgsVehicle(fSFPD,1,528, 2709.3499,-2471.0007,22.4217,270.5126, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,528, 2709.3767,-2445.9404,22.4206,272.1291, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,601, 2709.2097,-2466.4404,22.4199,272.6295, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,523, 2709.2307,-2462.8442,22.4216,270.8863, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,523, 2708.6460,-2442.3770,22.4207,270.0822, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,427, 2716.7781,-2423.0237,22.2706,180.0689, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,427, 2708.5293,-2437.7957,22.4207,270.5318, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,560, 2709.1001,-2458.4604,22.4216,272.9079, 0, 0, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,560, 2708.1931,-2433.4141,22.4205,270.7661, 0, 0, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,597, 2709.2485,-2454.3105,22.4201,270.1403,  0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,597, 2708.5359,-2429.6414,22.4218,269.9486, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,599, 2732.5842,-2469.7258,22.0463,2.2459, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,599, 2708.3438,-2425.1309,22.4262,270.5876, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,541, 2709.2180,-2450.0913,22.4212,269.5440, 0, 0, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,541, 2708.2373,-2421.2637,22.4271,270.3180, 0, 0, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,497, 2701.4041,-2427.8901,25.2885,2.4894, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,597, 2714.9285,-2469.6191,21.5731,1.7550, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,597, 2718.6230,-2469.8416,21.5727,3.0545, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,597, 2723.2854,-2469.5603,21.5727,359.9016, 0, 1, RES_CAR_TIME);//полиция сф
	CreateOrgsVehicle(fSFPD,1,597, 2728.2173,-2469.6470,21.5739,1.9653, 0, 1, RES_CAR_TIME);//полиция сф

	CreateOrgsVehicle(fLSPD,1,596, -529.7057,470.1251,12.5826,82.2713, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,596, -530.1655,465.8705,12.7773,84.3007, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,596, -530.3653,461.7343,12.9704,88.2001, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,596, -530.1528,457.6556,13.1799,91.4910, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,596, -530.0804,453.3674,13.4093,93.0355, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,596, -529.7129,448.7674,13.6621,95.3599, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,596, -529.1890,443.7740,13.9491,97.3201, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,560, -521.7234,469.4461,12.7018,86.6897, 0, 0, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,560, -522.1600,465.1429,12.7578,86.0754, 0, 0, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,523, -522.3729,461.4478,12.9277,88.4798, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,523, -522.0767,457.9608,13.1626,90.8311, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,523, -521.1570,454.1983,13.3749,88.7466, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,427, -520.3405,449.8061,13.6033,99.2322, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,427, -519.7031,445.3417,14.4777,100.3298, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,601, -513.8058,469.4285,13.3173,89.8084, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,528, -513.2951,465.0906,12.8572,85.6985, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,528, -514.1619,460.9465,13.8621,85.6572, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,599, -514.1353,456.9966,14.0551,90.2787, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,599, -513.3947,452.6410,13.9033,90.7595, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,497, -499.0266,456.0743,13.6996,85.0631, 0, 1, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,541, -512.8757,448.1208,14.1275,93.1591, 0, 0, RES_CAR_TIME);//полиция лс
	CreateOrgsVehicle(fLSPD,1,541, -512.5870,443.7352,13.7921,98.7576, 0, 0, RES_CAR_TIME);//полиция лс

	CreateOrgsVehicle(fMEDICLS,1,416, 2099.2136,-2412.2344,21.8774,86.1815, 3, 1, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,416, 2098.8342,-2419.1182,21.8631,85.8682, 3, 1, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,416, 2098.6145,-2426.4036,21.8672,89.9415, 3, 1, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,416, 2098.3853,-2434.0857,21.8554,89.9415, 3, 1, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,416, 2084.4587,-2434.8325,21.7399,268.8979, 3, 1, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,416, 2084.8867,-2408.9363,21.7399,269.5246, 3, 1, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,487, 2102.7708,-2401.0161,32.7836,269.2112, 1, 3, RES_CAR_TIME);//больница лс
	CreateOrgsVehicle(fMEDICLS,1,487, 2115.6707,-2400.2383,32.7836,270.6096, 1, 3, RES_CAR_TIME);//больница лс

	CreateOrgsVehicle(fINSTRUCTORS,1,426,2114.3550,-2218.8855,21.3586,0.5642,79,70, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2181.5742,-2214.3491,22.0695,1.4690,79,70, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2185.6350,-2214.2029,22.0696,0.9903,79,70, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2189.8091,-2214.2766,22.0688,357.4026,79,70, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2193.6208,-2214.4124,22.0671,359.2857,79,70, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2109.5928,-2218.9270,21.3589,1.9046,79,70, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2105.3206,-2219.1851,21.3587,4.0772,79,79, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2101.0403,-2219.3174,21.3586,2.7672,79,79, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2096.8701,-2219.6184,21.3583,3.8355,79,79, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2092.6426,-2219.2456,21.3587,1.4404,79,79, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,426,2088.0247,-2219.4038,21.3556,1.8003,79,79, RES_CAR_TIME); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,487,2181.9619,-2177.8823,22.1166,177.0968,79,79, RES_CAR_TIME-200); // Автошкола
	CreateOrgsVehicle(fINSTRUCTORS,1,487,2205.2200,-2201.5500,22.1173,88.3908,79,79, RES_CAR_TIME-200); // Автошкола

	CreateOrgsVehicle(fBALLAS,1,433,-297.5261,1039.4471,12.1366,178.5855,147,147, RES_CAR_TIME); // Баллас
	CreateOrgsVehicle(fBALLAS,1,482,-302.5888,1040.3850,12.1686,177.8146,147,147, RES_CAR_TIME); // Баллас
	CreateOrgsVehicle(fBALLAS,1,573,-308.9101,1040.1860,12.6746,180.4693,147,147, RES_CAR_TIME); // Баллас
	
	CreateOrgsVehicle(fVAGOS,1,433,174.8607,1028.1985,13.7035,27.9692,194,194, RES_CAR_TIME); // Вагос
	CreateOrgsVehicle(fVAGOS,1,482,169.7850,1025.8411,13.7935,28.4865,194,194, RES_CAR_TIME); // Вагос
	CreateOrgsVehicle(fVAGOS,1,573,164.0842,1023.4436,14.2990,28.3173,194,194, RES_CAR_TIME); // Вагос
	
	CreateOrgsVehicle(fGROVE,1,433,-660.8522,876.8356,12.0000,91.7215,128,128, RES_CAR_TIME); // Грув
	CreateOrgsVehicle(fGROVE,1,482,-661.8522,871.8356,12.0000,91.7215,128,128, RES_CAR_TIME); // Грув
	CreateOrgsVehicle(fGROVE,1,573,-662.8522,866.8356,12.0000,91.7215,128,128, RES_CAR_TIME); // Грув

	CreateOrgsVehicle(fAZTEC,1,433,299.4485,1860.7020,11.7500,175.5740,135,135, RES_CAR_TIME); // Азтек
	CreateOrgsVehicle(fAZTEC,1,482,306.4485,1859.7020,11.7500,176.5740,135,135, RES_CAR_TIME); // Азтек
	CreateOrgsVehicle(fAZTEC,1,573,313.4485,1858.7020,11.7500,176.5740,135,135, RES_CAR_TIME); // Азтек
	
	CreateOrgsVehicle(fRIFA,1,433,795.2445,2451.0166,12.0000,352.6701,77,77, RES_CAR_TIME); // Рифа
	CreateOrgsVehicle(fRIFA,1,482,800.2445,2451.0166,12.0000,352.6701,77,77, RES_CAR_TIME); // Рифа
	CreateOrgsVehicle(fRIFA,1,573,805.2445,2451.0166,12.0000,352.6701,77,77, RES_CAR_TIME); // Рифа*/

    for(new i; i < sizeof(autosaloncar); i ++)
	{
		aSellCar[i] = CreateSalonVehicle(autosaloncar[i][autoCars], 2221.7827,778.4454,1116.4797,307.3579, -1, -1, RES_CAR_TIME, 82, i+50);//автосалон демонстрация авто
	}
	

/*	//Развозчик еды ЛС
	CreateJobVehicle(JOB_REAT,440, 2490.9099,-648.2442,12.3685,359.5280, -1, -1, RES_CAR_TIME);//продажа еды лс 1
	CreateJobVehicle(JOB_REAT,440, 2482.9287,-648.7803,12.3815,358.6940, -1, -1, RES_CAR_TIME);//продажа еды лс 2
	CreateJobVehicle(JOB_REAT,440, 2475.6614,-648.7895,12.3788,359.6038, -1, -1, RES_CAR_TIME);//продажа еды лс 3
	CreateJobVehicle(JOB_REAT,440, 2467.3774,-648.5403,12.3746,0.2078, -1, -1, RES_CAR_TIME);//продажа еды лс 4
	CreateJobVehicle(JOB_REAT,440, 2459.1089,-648.7708,12.3802,359.7561, -1, -1, RES_CAR_TIME);//продажа еды лс 5
	CreateJobVehicle(JOB_REAT,440, 2450.9995,-648.7854,12.3558,0.6178, -1, -1, RES_CAR_TIME);//продажа еды лс 6
	
	//Развозчик еды СФ
	CreateJobVehicle(JOB_REAT,440, 1844.6685,2504.5200,15.7554,125.2785, -1, -1, RES_CAR_TIME);//продажа еды лв 1
	CreateJobVehicle(JOB_REAT,440, 1841.9939,2507.7415,15.7455,127.3273, -1, -1, RES_CAR_TIME);//продажа еды лв 2
	CreateJobVehicle(JOB_REAT,440, 1839.7882,2510.9736,15.7613,125.5634, -1, -1, RES_CAR_TIME);//продажа еды лв 3
	CreateJobVehicle(JOB_REAT,440, 1837.7698,2513.9241,15.7535,126.2141, -1, -1, RES_CAR_TIME);//продажа еды лв 4
	CreateJobVehicle(JOB_REAT,440, 1835.7156,2516.9036,15.7581,126.9241, -1, -1, RES_CAR_TIME);//продажа еды лв 5
	CreateJobVehicle(JOB_REAT,440, 1826.1569,2529.0215,15.7538,126.8448, -1, -1, RES_CAR_TIME);//продажа еды лв 6

	CreateJobVehicle(JOB_CLEAN,574,1975.4589,-2580.0439,10.5228,178.7334, -1, -1, RES_CAR_TIME);//уборщик дорог 1
	CreateJobVehicle(JOB_CLEAN,574,1978.8698,-2580.4407,10.5228,179.7810, -1, -1, RES_CAR_TIME);//уборщик дорог 2
	CreateJobVehicle(JOB_CLEAN,574,1982.1958,-2580.5176,10.5229,179.3152, -1, -1, RES_CAR_TIME);//уборщик дорог 3
	CreateJobVehicle(JOB_CLEAN,574,1985.6603,-2580.4241,10.5228,179.3062, -1, -1, RES_CAR_TIME);//уборщик дорог 4
	CreateJobVehicle(JOB_CLEAN,574,1989.1664,-2580.6917,10.5228,178.7316, -1, -1, RES_CAR_TIME);//уборщик дорог 5

	CreateJobVehicle(JOB_CLEAR,572,1995.7321,-2581.0605,10.3822,179.8517, -1, -1, RES_CAR_TIME);//газонокосильщик 1
	CreateJobVehicle(JOB_CLEAR,572,1998.9729,-2580.2627,10.3822,181.1538, -1, -1, RES_CAR_TIME);//газонокосильщик 2
	CreateJobVehicle(JOB_CLEAR,572,2002.5325,-2580.6350,10.3822,179.5241, -1, -1, RES_CAR_TIME);//газонокосильщик 3
	CreateJobVehicle(JOB_CLEAR,572,2005.9553,-2580.2637,10.3822,179.7796, -1, -1, RES_CAR_TIME);//газонокосильщик 4
	CreateJobVehicle(JOB_CLEAR,572,2009.4086,-2580.6851,10.3822,180.4417, -1, -1, RES_CAR_TIME);//газонокосильщик 5

	CreateJobVehicle(JOB_RAZV,456, 2016.1737,-2580.9812,10.9211,179.9870, -1, -1, RES_CAR_TIME);//развозчики продуктов 1
	CreateJobVehicle(JOB_RAZV,456, 2019.6481,-2581.0698,10.9231,179.7967, -1, -1, RES_CAR_TIME);//развозчики продуктов 2
	CreateJobVehicle(JOB_RAZV,456, 2023.0771,-2580.8967,10.9209,179.6746, -1, -1, RES_CAR_TIME);//развозчики продуктов 3
	CreateJobVehicle(JOB_RAZV,456, 2026.5233,-2580.5969,10.9201,180.4844, -1, -1, RES_CAR_TIME);//развозчики продуктов 4
	CreateJobVehicle(JOB_RAZV,456, 2029.7034,-2580.8801,10.9232,179.3875, -1, -1, RES_CAR_TIME);//развозчики продуктов 5
	CreateJobVehicle(JOB_RAZV,456, 2033.1283,-2580.8225,10.9200,180.4992, -1, -1, RES_CAR_TIME);//развозчики продуктов 6
	CreateJobVehicle(JOB_RAZV,456, 2036.4802,-2580.8049,10.9212,180.1129, -1, -1, RES_CAR_TIME);//развозчики продуктов 7
	CreateJobVehicle(JOB_RAZV,456, 2040.1113,-2580.6956,10.9206,180.2498, -1, -1, RES_CAR_TIME);//развозчики продуктов 8
	CreateJobVehicle(JOB_RAZV,456, 2043.3766,-2581.0537,10.9219,179.5838, -1, -1, RES_CAR_TIME);//развозчики продуктов 9
	CreateJobVehicle(JOB_RAZV,456, 2046.8341,-2581.0273,10.9217,178.5758, -1, -1, RES_CAR_TIME);//развозчики продуктов 10

	CreateJobVehicle(JOB_RAZV,403, 2065.7434,-2579.3811,11.0783,90.3221, -1, -1, RES_CAR_TIME);//развозчики АЗС 1
	CreateJobVehicle(JOB_RAZV,403, 2065.6389,-2582.5232,11.0751,89.3956, -1, -1, RES_CAR_TIME);//развозчики АЗС 2
	CreateJobVehicle(JOB_RAZV,403, 2066.2229,-2585.9077,11.0839,91.1237, -1, -1, RES_CAR_TIME);//развозчики АЗС 3
	CreateJobVehicle(JOB_RAZV,403, 2066.6055,-2589.2944,11.0634,90.2421, -1, -1, RES_CAR_TIME);//развозчики АЗС 4
	CreateJobVehicle(JOB_RAZV,403, 2066.2673,-2592.7026,11.0826,90.8706, -1, -1, RES_CAR_TIME);//развозчики АЗС 5
	CreateJobVehicle(JOB_RAZV,403, 2066.3237,-2595.9019,11.0801,88.8315, -1, -1, RES_CAR_TIME);//развозчики АЗС 6
	CreateJobVehicle(JOB_RAZV,403, 2066.7078,-2599.3672,11.0874,90.4867, -1, -1, RES_CAR_TIME);//развозчики АЗС 7
	CreateJobVehicle(JOB_RAZV,403, 2066.5544,-2602.9104,11.0831,90.7794, -1, -1, RES_CAR_TIME);//развозчики АЗС 8
	CreateJobVehicle(JOB_RAZV,403, 2065.9619,-2605.8733,11.0932,90.1880, -1, -1, RES_CAR_TIME);//развозчики АЗС 9
	CreateJobVehicle(JOB_RAZV,403, 2066.3176,-2609.5740,11.0840,89.2179, -1, -1, RES_CAR_TIME);//развозчики АЗС 10

	CreateOrgsVehicle(fWHITEHOUSE,1,487, -289.5614,761.7963,12.8154,358.6386, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,415, -293.5216,762.1524,13.1331,359.4893, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,409, -297.5836,762.1123,12.8171,357.2426, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,415, -301.5552,762.7047,12.9856,357.7574, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,507, -305.6210,762.8693,12.9849,357.4745, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,507, -309.6328,763.1602,12.9848,355.9782, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,507, -313.6620,763.1879,12.9859,357.5580, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,507, -317.8218,763.3839,12.9853,355.2298, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,507, -321.9629,763.8171,12.9854,354.3480, 1, 1, RES_CAR_TIME);//белый дом
	CreateOrgsVehicle(fWHITEHOUSE,1,507, -329.5631,766.5930,13.2456,359.5641, 1, 1, RES_CAR_TIME);//белый дом


	CreateJobVehicle(CAR_ALCATRASS,473, -2334.9319, 1689.5669, 0.1308, 180.0000, -1, -1, 100);//побек с алкатрасса
	CreateJobVehicle(CAR_ALCATRASS,473, -2331.0867, 1691.3357, 0.1308, 180.0000, -1, -1, 100);//побек с алкатрасса

 	CreateOrgsVehicle(fARMYLV,1,470, 268.4419, 1935.4885, 17.6347, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,470, 272.1119, 1932.7533, 17.6353, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,470, 276.4181, 1929.5566, 17.6389, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,470, 280.4232, 1926.5811, 17.6347, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,470, 284.5529, 1923.7101, 17.6331, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,470, 288.6778, 1920.7625, 17.6336, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,470, 292.8157, 1917.9739, 17.6323, 324.9113, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,500, 301.2961, 1948.4688, 17.7460, 180.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,500, 296.3886, 1948.4688, 17.7501, 180.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,500, 291.2571, 1948.4688, 17.7447, 180.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1989.0564, 18.2781, 90.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1954.8677, 18.3227, 90.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1931.3804, 18.2753, 90.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1896.3716, 18.2595, 90.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,437, 304.9612, 2003.3536, 17.7745, 180.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,487, 280.1958, 1966.1233, 17.7227, 270.0000, 77, 77, RES_CAR_TIME);//армия лв
    CreateOrgsVehicle(fARMYLV,1,487, 108.6494, 1958.2063, 21.2978, 90.0000, 77, 77, RES_CAR_TIME);//армия лв

	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1167.1061,10.8768,90.0000,152,3,RES_CAR_TIME);//сми лв
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1171.3126,10.8746,90.0000,152,3,RES_CAR_TIME);//сми лв
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1175.4086,10.8823,90.0000,152,3,RES_CAR_TIME);//сми лв
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1179.3368,10.8770,90.0000,152,3,RES_CAR_TIME);//сми лв
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1183.3915,10.8770,90.0000,152,3,RES_CAR_TIME);//сми лв
	CreateOrgsVehicle(fLVNEWS,1, 488, 2645.8816,1209.9844,27.3821,270.0000,0,3,RES_CAR_TIME);//сми лв

	CreateOrgsVehicle(fSFNEWS,1, 582, -2520.5928,-602.0733,132.6188,180.0000,152,128,RES_CAR_TIME);//сми сф
	CreateOrgsVehicle(fSFNEWS,1, 582, -2524.4219,-602.0733,132.6191,180.0000,152,128,RES_CAR_TIME);//сми сф
	CreateOrgsVehicle(fSFNEWS,1, 582, -2528.0747,-602.0733,132.6203,180.0000,152,128,RES_CAR_TIME);//сми сф
	CreateOrgsVehicle(fSFNEWS,1, 582, -2531.8828,-602.0733,132.6212,180.0000,152,128,RES_CAR_TIME);//сми сф
	CreateOrgsVehicle(fSFNEWS,1, 582, -2535.6157,-602.0733,132.6185,180.0000,152,128,RES_CAR_TIME);//сми сф
	CreateOrgsVehicle(fSFNEWS,1, 488, -2500.6589,-665.8373,139.3712,90.0000,1,128,RES_CAR_TIME);//сми сф

	CreateOrgsVehicle(fYAKUZA,1, 555, 2631.4116,1845.6924,10.5046,90.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 562, 2631.4116,1842.4629,10.4791,90.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 559, 2631.4116,1838.8984,10.4766,90.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 409, 2618.6370,1824.6866,10.6878,358.9127,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1836.9595,10.8429,270.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1833.6537,10.7534,270.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1815.0563,10.8306,270.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1811.7317,10.7547,270.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 555, 2631.7671,1801.2444,10.5043,90.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 562, 2631.7671,1804.4651,10.4790,90.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 559, 2631.7671,1807.6177,10.4976,90.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 468, 2602.4468,1808.6140,10.4892,270.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 468, 2602.4468,1840.2695,10.4893,270.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 487, 2621.6028, 1885.4277, 11.0703, 180.0000,0,0,RES_CAR_TIME);//якудза
	CreateOrgsVehicle(fYAKUZA,1, 482, 2603.1814, 1859.4486, 10.9412, 270.0000,0,0, 300);//якудза

	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 622.3234, 14.4929, 270.0000, 3, 1, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 627.3912, 14.6536, 270.0000, 3, 1, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 632.8304, 14.6029, 270.0000, 3, 1, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 637.8122, 14.4868, 270.0000, 3, 1, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 642.8408, 14.6423, 270.0000, 3, 1, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 647.9203, 14.4876, 270.0000, 3, 1, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,487, -2727.4817, 615.3436, 34.0142, 90.0000, 1, 3, RES_CAR_TIME);//больница сф
	CreateOrgsVehicle(fMEDICSF,1,487, -2727.4817, 594.9642, 34.0142, 90.0000, 1, 3, RES_CAR_TIME);//больница сф

	CreateOrgsVehicle(fMEDICLV,1,416, 1610.7651, 1848.9933, 10.9895, 180.0000, 3, 1, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,416, 1606.3879, 1848.9933, 10.9216, 180.0000, 3, 1, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,416, 1602.1953, 1848.9933, 10.9086, 180.0000, 3, 1, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,416, 1598.0675, 1848.9933, 10.9138, 180.0000, 3, 1, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,416, 1593.6991, 1848.9933, 11.0052, 180.0000, 3, 1, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,416, 1589.5984, 1848.9933, 11.0115, 180.0000, 3, 1, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,487, 1594.7169, 1799.4476, 31.2183, 0.0000, 1, 3, RES_CAR_TIME);//больница лв
	CreateOrgsVehicle(fMEDICLV,1,487, 1622.0305, 1799.4476, 31.1707, 0.0000, 1, 3, RES_CAR_TIME);//больница лв
   */
	
	for(new i = 0; i < sizeof(ArendInfo); i ++)
	{
	    ArendInfo[i][aID] = AJ_AddStaticVehicleEx(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A],
			ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000,VEHICLE_TYPE_RENT);//аренда каров возле автосалона

		SetVehicleParamsEx(ArendInfo[i][aID],false,false,false,false,false,false,false);

		VehicleInfo[ArendInfo[i][aID]][vFuel] = gTransport[GetVehicleModel(ArendInfo[i][aID])-400][trTank];
	}

	for(new i = GetVehiclePoolSize()+1; --i != 0;)
	{
		SignalTick[i][1] = -1;
		LightsObject[i][0] = -1;
		LightsObject[i][1] = -1;

		SetVehicleParamsEx(i,false,false,false,false,false,false,false);

		if(!VehicleInfo[i][vJob] && !VehicleInfo[i][vTeam]) continue;

		VehicleInfo[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];

		VehicleInfo[i][vPlayer] = -1;
	}
	return 1;
}

stock CreateOthers()
{
	components_name();

	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	ManualVehicleEngineAndLights();
	LimitGlobalChatRadius(13.0);
	LimitPlayerMarkerRadius(12.0);
	SetNameTagDrawDistance(30.0);
	
	for(new i; i <= 311; i++) AddPlayerClass(i,2034.6799,1346.5522,10.8203,271.7093,0,0,0,0,-1,-1);
	
	new mi,h;
	gettime(h,mi,gCurHour);

	advertise_price = 2;
	condition_of_roads_ = 1;

	calls_news[0] = INVALID_PLAYER_ID;
	calls_news[1] = INVALID_PLAYER_ID;
	calls_news[2] = INVALID_PLAYER_ID;
	calls_ether[0] = INVALID_PLAYER_ID;
	calls_ether[1] = INVALID_PLAYER_ID;
	calls_ether[2] = INVALID_PLAYER_ID;

	check_taxi_park = 0;
	check_verona_beach = 0;
	check_white_house = 0;
	check_medic_ls = 0;
	check_mayor_ls = 0;
	check_glenpark_1 = 0;
	check_glenpark_2 = 0;
	
	SetGravity(0.010);
	/*
    SetWeather(2);
	SetWorldTime(h);
	*/
	
	print("[Загрузка ...] Функций мода сервера");
	return 1;
}

stock CreateTimers()
{
	// Синхронизация времени для Timer_Unix

	unix = gettime(tmphour, tmpminute, tmpsecond); // обнволяем unix и tmphour, tmpminute, tmpsecond
	new sunix = unix; // sunix равна unix

	sunix -= tmpminute*60; // в sunix обнуляем минуты
	sunix -= tmpsecond; // в sunix обнуляем минуты

	unix_hour = sunix+3600; // добавляем в unix_h - час чтобы Timer_Unix сработал кореектно в 00 мин
	unix_min = sunix+60; // добавляем в unix_m - минуту чтобы Timer_Unix сработал кореектно в 00 сек
	unix_heal = sunix+240;
	unix_sec = sunix;
	unix_three_sec = sunix+3;

	if(timers_unix != -1) {
		KillTimer(timers_unix);
		timers_unix = -1;
	}
	if(timers_unix == -1) timers_unix = SetTimer("Timer_Unix",125,true); // 250 ms

	capture_kd[fBALLAS] = capture_kd[fVAGOS] = capture_kd[fGROVE] = capture_kd[fAZTEC] = capture_kd[fRIFA] = unix;
	
	print("[Создание ...] Таймеров сервера");
	return 1;
}

stock CreateGangZones()
{
	fish_zone[0] = GangZoneCreate(2048.938720, 1050.329101, 2168.938720, 1162.329101);
	fish_zone[1] = GangZoneCreate(2047.706054, 974.713073, 2135.706054, 1070.713134);
	fish_zone[2] = GangZoneCreate(2040.054687, 880.763305, 2112.054687, 968.763305);
	
	SFa = GangZoneCreate(-1544.892, 270.5747, -1232.015, 558.5571);
	Army = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);
	
	print("[Создание ...] Гангзон сервера");
	return 1;
}

stock CreateObjects()
{

	for(new i = 0; i < sizeof(object_park_ls); i++)
	{
	    /*
	    10140
	    872
	    873
	    5380
	    5381
	    */
     //  object_park_ls[i] = CreateDynamicObject(1760, check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2]+4, check_job_mower[i][3],
	//						check_job_mower[i][4], check_job_mower[i][5], -1, -1);

        status_check_job_mower[i] = false;
	}
	print(" ");
	print("[Создание ...] Объектов сервера");
	return 1;
}

stock CreateActors()
{
	actor[4] = CreateActor(29, 520.4355,880.2479,1000.6400,0.0309);//[притон] продажа нарко
	SetActorVirtualWorld(actor[4],32);

	actor[5] = CreateActor(289, 187.3752,2270.5552,1001.5000,176.4303);//[комп клуб]
	SetActorVirtualWorld(actor[5],6);

	actor[6] = CreateActor(291, 2512.5093,-1806.9425,22.2100,173.9957);//[КВЕСТ] гетто спавн
	SetActorVirtualWorld(actor[6],0);

	ApplyActorAnimation(actor[6],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[7] = CreateActor(291, 1873.1093,2047.8470,15.9397,267.1299);//[КВЕСТ] ЖД ЛС спавн
	SetActorVirtualWorld(actor[7],0);

	ApplyActorAnimation(actor[7],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[8] = CreateActor(104, -292.9807,1037.1306,12.1227,179.4064);//[КВЕСТ] Ballas
	SetActorVirtualWorld(actor[8],0);

	ApplyActorAnimation(actor[8],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[9] = CreateActor(110, 171.5725,1033.9640,13.7109,119.2951);//[КВЕСТ] Vagos
	SetActorVirtualWorld(actor[9],0);

	ApplyActorAnimation(actor[9],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[10] = CreateActor(270, -667.6210,876.9438,12.0000,275.7224);//[КВЕСТ] Grove
	SetActorVirtualWorld(actor[10],0);

	ApplyActorAnimation(actor[10],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[11] = CreateActor(115, 319.9991,1870.6096,11.9936,357.9123);//[КВЕСТ] Aztec
	SetActorVirtualWorld(actor[11],0);

	ApplyActorAnimation(actor[11],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[12] = CreateActor(273, 791.0714,2459.1028,12.0000,172.6466);//[КВЕСТ] Rifa
	SetActorVirtualWorld(actor[12],0);

	ApplyActorAnimation(actor[12],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[13] = CreateActor(86, 2308.2451,-1713.0253,21.9609,89.7211);//[Дуэль]
	SetActorVirtualWorld(actor[13],0);

	ApplyActorAnimation(actor[13],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[14] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[14],1);

	actor[15] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[15],2);

	actor[16] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[16],3);

	actor[17] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[17],4);

	actor[18] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[18],5);

	actor[19] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[19],6);

	actor[20] = CreateActor(91, 2227.6587,769.0693,1116.8480,0.2677);//[автосалоны]
	SetActorVirtualWorld(actor[20],7);

	actor[21] = CreateActor(240, 2261.9131,2711.4761,1122.4604,0.3892);//[АШ] покупка лицензий (регистратура)
	SetActorVirtualWorld(actor[21],45);

	actor[22] = CreateActor(148, 2275.9768,2710.1675,1122.4604,174.8709);//[АШ] правила дорожного движения
	SetActorVirtualWorld(actor[22],45);

	actor[23] = CreateActor(6, 2557.5496,-1844.5068,2522.8401,264.5274);//[Итальяснкая мафия] босс нарко
	SetActorVirtualWorld(actor[23],49);

	ApplyActorAnimation(actor[23],"MISC","seat_LR",4.1,0,0,0,1,1);

	actor[25] = CreateActor(6, 2557.5496,-1844.5068,2522.8401,264.5274);//[Русская мафия] босс нарко
	SetActorVirtualWorld(actor[25],51);

	ApplyActorAnimation(actor[25],"MISC","seat_LR",4.1,0,0,0,1,1);

	actor[26] = CreateActor(217,1257.9722,1480.9333,1114.8402,90.1593);//[LsNews] бот объявы
	SetActorVirtualWorld(actor[26],10);

	actor[29] = CreateActor(30, -2197.0615,-127.4219,26.3851,78.8381);//Квест для ГЕТТО //Ограбление
	SetActorVirtualWorld(actor[29],0);
	
	ApplyActorAnimation(actor[29],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[30] = CreateActor(6, -2297.7026,-90.4445,24.9665,258.6958);//угон
	SetActorVirtualWorld(actor[30],0); //угон

	actor[31] = CreateActor(6, 2436.6270,-1903.8416,22.0043,175.2305);//угон
	SetActorVirtualWorld(actor[31],0); //угон
	
	actor[32] = CreateActor(6, 1932.6353,2031.9141,15.8694,177.8233);//угон
	SetActorVirtualWorld(actor[32],0); //угон
	
	actor[33] = CreateActor(6, 391.4835,1031.3553,12.1406,351.9569);//угон
	SetActorVirtualWorld(actor[33],0); //угон
	
	actor[34] = CreateActor(133, 1998.3276,1338.2335,26.1509,175.6121);//продажа рыбы
	SetActorVirtualWorld(actor[34],0);

	ApplyActorAnimation(actor[34],"DEALER","Dealer_Deal",4.1,0,0,0,0,1);
	
	actor[35] = CreateActor(291, 193.9168,825.0530,12.0422,341.0772);//[КВЕСТ] ЖД ЛВ спавн
	SetActorVirtualWorld(actor[35],0);

	ApplyActorAnimation(actor[35],"DEALER","Dealer_idle",4.1,0,0,0,1,1);
	
	actor[36] = CreateActor(29, -2183.8330,-95.7784,26.3851,256.0033);//продажа боеприпасов
	SetActorVirtualWorld(actor[36],0);

	/*
	actor[24] = CreateActor(6, 2557.5496,-1844.5068,2522.8401,264.5274);//[Японская мафия] босс нарко
	SetActorVirtualWorld(actor[24],50);

	ApplyActorAnimation(actor[24],"MISC","seat_LR",4.1,0,0,0,1,1);
	
	actor[27] = CreateActor(217,1908.7913,-2245.7930,1001.0859,271.6743);//[SfNews] бот объявы - DELETE
	SetActorVirtualWorld(actor[27],11);

	actor[28] = CreateActor(217,1908.7913,-2245.7930,1001.0859,271.6743);//[LvNews] бот объявы - DELETE
	SetActorVirtualWorld(actor[28],12);
	*/
	
	for(new i;i<MAX_ACTORSS;i++) {
	    new Float: x,Float:y,Float:z;
	    GetActorPos(i,x,y,z);
	    tActor[i] = CreateDynamic3DTextLabel("",COLOR_GREY,x, y, z+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,GetActorVirtualWorld(i),-1);
	}
	
	print("[Создание ...] Актеров(NPC Ботов) сервера");
	return 1;
}

stock CreatePickups()
{
	CreateDynamicPickup(3632,23,2743.5747,-2200.5796,21.9503,0,0);//[нефть] пикап бочки
	CreateDynamicPickup(3632,23,2752.0374,-2197.0898,21.9503,0,0);//[нефть] пикап бочки
	
	CreateDynamicPickup(3633,23,2753.9700,-2379.3713,22.7394,0,0);//Бочки для погрузчика
	CreateDynamicPickup(3633,23,2754.5212,-2389.3406,22.7394,0,0);//Бочки для погрузчика
	
	CreateDynamicPickup(1239,23,2226.8894,770.8658,1116.8480,1,82);//Автосалон эконом класс 1 этаж
	CreateDynamicPickup(1239,23,2226.8894,770.8658,1116.8480,2,82);//Автосалон эконом класс 2 этаж
	CreateDynamicPickup(1239,23,2226.8894,770.8658,1116.8480,3,82);//Автосалон средний класс 1 этаж
	CreateDynamicPickup(1239,23,2226.8894,770.8658,1116.8480,4,82);//Автосалон средний класс 2 этаж
	CreateDynamicPickup(1239,23,2226.8894,770.8658,1116.8480,5,82);//Автосалон элитный класс
	CreateDynamicPickup(1239,23,2226.8894,770.8658,1116.8480,6,82);//Мотосалон
	
	new strings[72], exitstrings[72];
	strcat(strings, "Игровая комната"), strcat(strings,"\n\n"G"Вcтаньте на пикап, чтобы войти/выйти");
	strcat(exitstrings, "Выход из игровой комнаты"), strcat(exitstrings,"\n\n"G"Вcтаньте на пикап, чтобы войти/выйти");
	
	CreateDynamic3DTextLabel(strings, PP, 190.4797,2273.3984,1001.5000, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, 79);
	CreateDynamic3DTextLabel(exitstrings, PP, -630.1927,2205.0029,1003.4985, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 76, 45);

	gameint[0] = CreateDynamicPickup(1318, 1, 190.4797,2273.3984,1001.5000, -1, 79);
	gameint[1] = CreateDynamicPickup(1318, 1, -630.1927,2205.0029,1003.4985, 76,45);
	
	for(new i; i < sizeof(pickup_game_dm); i ++) {
		if(i < 7) pickups_game_dm[i] = CreateDynamicPickup(1580, 2, pickup_game_dm[i][0],pickup_game_dm[i][1],pickup_game_dm[i][2],201);
		else pickups_game_dm[i] = CreateDynamicPickup(19131, 2, pickup_game_dm[i][0],pickup_game_dm[i][1],pickup_game_dm[i][2],201);
	}
	
	print("[Создание ...] Пикапов сервера");
	return 1;
}

stock CreateSpheres()
{
	//ID 987
	gAreas[arJob][0] = CreateDynamicSphere(1654.6044,2226.4363,15.1801,1000.0);//[ферма]
	gAreas[arJob][1] = CreateDynamicSphere(2738.1997,-2276.4375,17.9269,210.0);//[нефтезавод]
	gAreas[arJob][2] = CreateDynamicSphere(2894.0498,-1361.3005,1.3278,70.0);//[оружейный]
	gAreas[arJob][3] = CreateDynamicSphere(1987.4982,991.9432,15.4402,350.0);//[рыбалка]
	gAreas[arJob][4] = CreateDynamicSphere(1831.2653,1459.9362,9.9700,350.0);//[лесопилка]
	gAreas[arJob][5] = CreateDynamicSphere(112.5036,2519.1624,16.3037,250.0,8);//[комп зал] DM арена

	gAreas[arPerfomans][0] = CreateDynamicSphere(2152.4443,-1852.4095,18.4234,1.5);//[Perfomans] Стойка 1
	gAreas[arPerfomans][1] = CreateDynamicSphere(2158.3752,-1839.7059,19.8816,1.5);//[Perfomans] Стойка 2

	gAreas[arSpawn] = CreateDynamicSphere(2516.3171,-1846.0875,1002.0050,80.0,-1,-1); // спавн инт

	gAreas[arLoadProds][0] = CreateDynamicSphere(1964.0625,-2605.9001,11.0764,2.0);//[Развозчик продуктов] 24-7
	gAreas[arLoadProds][1] = CreateDynamicSphere(1964.0625,-2605.9001,11.0764,2.0);//[Развозчик продуктов] АЗС

	gAreas[arSad] = CreateDynamicSphere(1627.9961,2264.3284,14.5600,2.0);//[Сад] склад

	gAreas[arNews][0] = CreateDynamicSphere(1259.7885,1457.6029,1114.8402,5.0);//[News] студия
	gAreas[arNews][1] = CreateDynamicSphere(1263.1019,1461.2659,1114.8625,5.0);//[News] студия зеленая

    gAreas[arZavod] = CreateDynamicSphere(267.9811,-202.7967,1006.5694,1.5);//склад
	gAreas[arZavodSklad] = CreateDynamicSphere(2902.6968,-1288.8588,1.3119,1.3);//склад
	
    gAreas[arArmySFSklad] = CreateDynamicSphere(-60.9071,1876.9545,1120.3975,1.9,31,6);//склад армии сф
    
    gAreas[arArmyLVSklad] = CreateDynamicSphere(308.1984,-168.6314,999.5938,1.3,30,6);//склад армии лв для банд

	gAreas[arOil][0] = CreateDynamicSphere(2743.5747,-2200.5796,21.9503,2.0);//[Нефтяник] работа
	gAreas[arOil][1] = CreateDynamicSphere(2752.0374,-2197.0898,21.9503,2.0);//[Нефтяник] работа
	gAreas[arOil][2] = CreateDynamicSphere(2717.7539,-2370.5381,17.9660,3.0);//[Нефтяник] склад

	gAreas[arOil][3] = CreateDynamicSphere(525.7095,1470.6411,4.0315,4.0);//[Нефтяник] работа на погрузчике
	gAreas[arOil][4] = CreateDynamicSphere(481.0192,1308.8954,9.3572,4.0);//[Нефтяник] работа на погрузчике

	gAreas[arOil][5] = CreateDynamicSphere(274.2075,1447.0771,10.6189,4.0);//[Нефтяник] склад на погрузчике
	
	/*
	gAreas[arGripp][0] = CreateDynamicSphere(2339.7805,-2048.8184,13.3750,100.0);//[болезнь] гетто
	gAreas[arGripp][1] = CreateDynamicSphere(248.5707,2508.2429,16.5046,200.0);//[болезнь] заброшеный аэро
	gAreas[arGripp][2] = CreateDynamicSphere(619.0365,856.9022,-42.9534,350.0);//[болезнь] карьер

	gAreas[arPobeg][0] = CreateDynamicSphere(341.8165,539.8337,808.2199,0.7,202,0);//[побег] шахта
	gAreas[arPobeg][1] = CreateDynamicSphere(-2412.9822,2314.3362,0.3909,5.0);//[побег] место назначения
	*/
	for(new i; i < sizeof(spawns_pos_golod); i ++) area_golod[i] = CreateDynamicSphere(spawns_pos_golod[i][0],spawns_pos_golod[i][1],spawns_pos_golod[i][2],2.5);
	for(new i; i < sizeof(alcatraz_maniken); i ++) gAreas[arManiken][i] = CreateDynamicSphere(alcatraz_maniken[i][0],alcatraz_maniken[i][1],alcatraz_maniken[i][2],1.2);
	
	print("[Создание ...] Арей сервера");
	return 1;
}

stock CreateCheckPoints()
{
	RingCP[0] = CreateDynamicCP(2178.6475,-1592.4519,1130.7090, 1.0, 97);
	RingCP[1] = CreateDynamicCP(2183.7693,-1586.4208,1130.7090, 1.0, 97);
	
	CreateDynamicCP(-60.9071,1876.9545,1120.3975,1.5, 31, 6, -1,10.0);//[АРМИЯ] склад

	CreateDynamicCP(1964.0625,-2605.9001,11.0764,5.0, 0, 0, -1,10.0);//[развозчики продуктов] ПРОЧЕЕ
	CreateDynamicCP(1964.0625,-2605.9001,11.0764,5.0, 0, 0, -1,10.0);//[развозчики продуктов] АЗС
	
	print("[Создание ...] Чекпоинтов сервера");
	return 1;
}

stock CreateMapIcons()
{
	CreateDynamicMapIcon(-590.3571,483.6214,11.3306,30,0); // LSPD
	CreateDynamicMapIcon(2749.0156,-2443.0854,21.6890,30,0); // SFPD
	CreateDynamicMapIcon(2580.9338,-2416.3247,21.9867,30,0); // LVPD
	CreateDynamicMapIcon(2411.1892,-1849.9241,21.8507,16,0); // FBI
	CreateDynamicMapIcon(1907.9858,-2238.4570,11.2050,19,0); // Mayor
	CreateDynamicMapIcon(-318.0214,1038.9666,12.1027,59,0); // Ballas
	CreateDynamicMapIcon(167.3047,1036.4716,13.7035,60,0); // Vagos
	CreateDynamicMapIcon(-667.2883,859.4575,12.0000,62,0); // Grove
	CreateDynamicMapIcon(313.4897,1876.3822,12.0000,58,0); // Aztec
	CreateDynamicMapIcon(791.7193,2455.8838,12.0000,61,0); // Rifa
	CreateDynamicMapIcon(380.4172,1549.5542,12.0004,43,0); // LCN
	CreateDynamicMapIcon(482.6457,743.8377,12.0000,43,0); // RM
	CreateDynamicMapIcon(2185.2351,-2196.7532,22.0478,36,0); // АШ
	CreateDynamicMapIcon(1976.7444,-2701.0562,10.9763,56,0);//LSn
	CreateDynamicMapIcon(2379.4739,-1885.2361,21.9619,52,0); // bank ls
	CreateDynamicMapIcon(-191.8627,630.2276,12.0010,25,0); // casino
	
	//CreateDynamicMapIcon(2634.7048,1824.2144,11.0161,43,0); // YAKUZA
	//CreateDynamicMapIcon(-2521.1753,-624.5951,132.7827,56,0);//SFn
	//CreateDynamicMapIcon(2645.2136,1185.2959,10.8203,56,0);//LVn
	//CreateDynamicMapIcon(-2351.1323,492.5963,30.8144,52,0); // bank sf
	//CreateDynamicMapIcon(2577.4541,1325.8289,10.8203,52,0); // bank lv
	//CreateDynamicMapIcon(1907.9858,-2238.4570,11.2050,19,0); // WhiteHouse
	
	print("[Создание ...] Иконок сервера");
	return 1;
}

stock Create3dTextLabels()
{
	new string[128];

	army_text = CreateDynamic3DTextLabel("\
		Для объявления чрезвычайной ситуации, введите:\n"P"/fhelp",-1,788.9785,-414.2781,4.0025,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

    CreateDynamic3DTextLabel("{EF9B15}Используйте: ALT", COLOR_WHITE, 2226.8894,770.8658,1116.8480,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 1, 82);
    CreateDynamic3DTextLabel("{EF9B15}Используйте: ALT", COLOR_WHITE, 2226.8894,770.8658,1116.8480,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 2, 82);
    CreateDynamic3DTextLabel("{EF9B15}Используйте: ALT", COLOR_WHITE, 2226.8894,770.8658,1116.8480,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 3, 82);
    CreateDynamic3DTextLabel("{EF9B15}Используйте: ALT", COLOR_WHITE, 2226.8894,770.8658,1116.8480,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 4, 82);
    CreateDynamic3DTextLabel("{EF9B15}Используйте: ALT", COLOR_WHITE, 2226.8894,770.8658,1116.8480,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5, 82);
    CreateDynamic3DTextLabel("{EF9B15}Используйте: ALT", COLOR_WHITE, 2226.8894,770.8658,1116.8480,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 6, 82);
    
	labrary_text = CreateDynamic3DTextLabel("-",-1,-1144.7168,2537.3015,1138.5670,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	gamedm_text = CreateDynamic3DTextLabel("Общий взнос: "ORANGE"$0",-1,187.7980,2264.4397,1001.5000+0.7,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 200, 3);
	gamerace_text = CreateDynamic3DTextLabel("Общий взнос: "ORANGE"$0",-1,186.9202,2264.4324,1001.5000+0.7,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 200, 3);
	golod_text = CreateDynamic3DTextLabel("Общий взнос: "ORANGE"$0",-1,187.5670,2269.0300,1001.5000+0.7,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 200, 3);

	format(string,sizeof(string),"Рыбы на складе: "O"%.1f кг\n\n"W"Для продажи рыбы - "P"/sellfish\n"W"Стоимость 1кг рыбы - "ORANGE"$160",fish_sklad);
 	fish_text = CreateDynamic3DTextLabel(string,-1,1998.3097,1337.8351,26.1508,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

 	format(string,sizeof(string),"Боеприпасов на складе: "ORANGE"%d",zavodsklad);
 	gun_3dtext[0] = CreateDynamic3DTextLabel(string,-1,267.9811,-202.7967,1006.5694,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Боеприпасов доступно: "ORANGE"%d",zavodsklad);
 	gun_3dtext[1] = CreateDynamic3DTextLabel(string,-1,2902.6968,-1288.8588,1.3119,35.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Бочек на складе: "ORANGE"%d",oilsklad);
 	oil_3dtext = CreateDynamic3DTextLabel(string,-1,2717.7539,-2370.5381,17.9660,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Древесины на складе: "ORANGE"%d кг",woodsklad);
 	wood_3dtext = CreateDynamic3DTextLabel(string,-1,1812.1732,1424.6583,9.9600,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

 	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYSF][fMats]);
 	sklad_armysf[0] = CreateDynamic3DTextLabel(string,-1,-60.9071,1876.9545,1120.3975,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 31, 6);

 	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYSF][fMats]);
 	sklad_armysf[1] = CreateDynamic3DTextLabel(string,-1,756.1727,-419.0354,4.0000,45.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, -1);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYSF][fMats]);
 	sklad_armysf[2] = CreateDynamic3DTextLabel(string,-1,1065.4248,2957.7522,1112.8621,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, -1);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLSPD][fMats]);
 	sklad_cops[0] = CreateDynamic3DTextLabel(string,-1,706.1370,912.4185,1112.9851,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 40);
	
	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fSFPD][fMats]);
 	sklad_cops[1] = CreateDynamic3DTextLabel(string,-1,798.1885,154.6387,1502.0000,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 41);
	
	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLVPD][fMats]);
 	sklad_cops[2] = CreateDynamic3DTextLabel(string,-1,1331.9938,887.5827,1115.4399,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 42);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fFBI][fMats]);
 	sklad_cops[3] = CreateDynamic3DTextLabel(string,-1,-82.3000,1800.3126,2022.6899,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 43);

	CreateDynamic3DTextLabel("Эфир:"P" /ether",0xFFFFFFFF,1259.7885,1457.6029,1114.8402-0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Эфир:"P" /ether",0xFFFFFFFF,1263.1019,1461.2659,1114.8625-0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Вход:\n"P" ALT",0xFFFFFFFF,803.8372,149.2769,1502.0000+0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Выход:\n"P" ALT",0xFFFFFFFF,806.6146,149.2710,1502.0000+0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Продажа техники\n1ед = "ORANGE"$250\n\n"P" Сигнал (H)",0xFFFFFFFF,-2246.3052,-98.3381,26.2346,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Тюнинг-центр\n"P" Сигнал (H)",0xFFFFFFFF,2168.1770,-1846.9131,18.8117,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Тюнинг-центр\n"P" Сигнал (H)",0xFFFFFFFF,2168.1631,-1852.4401,18.8117,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,2512.5093,-1806.9425,22.2100,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,1873.1093,2047.8470,15.9397,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,193.9168,825.0530,12.0422,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,-292.9807,1037.1306,12.1227,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,171.5725,1033.9640,13.7109,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,-667.6210,876.9438,12.0000,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,319.9991,1870.6096,11.9936,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовый персонаж:\n"P" ALT",0xFFFFFFFF,791.0714,2459.1028,12.0000,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Waka_Encore\n\nКвестовый персонаж:\n"P" ALT",0xFFFFFFFF,-2198.2781,-127.1819,26.3851,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Отправить объявление:\n"P" ALT",0xFFFFFFFF,1256.4078,1480.8704,1114.8402,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Место проведения дуэлей\n[BETA]\n"P" ALT",-1,2307.5144,-1713.0509,21.9609,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Jackson Young\n\n"P"Нажмите ALT для получения задания или транспорта",0xFFFFFFFF,-2297.7026,-90.4445,24.9665,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон
	CreateDynamic3DTextLabel("Jeremiah Williams\n"P" Нажмите ALT для получения транспорта",0xFFFFFFFF,2436.6270,-1903.8416,22.0043,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон
	CreateDynamic3DTextLabel("John Thompson\n"P" Нажмите ALT для получения транспорта",0xFFFFFFFF,1932.6353,2031.9141,15.8694,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон
	CreateDynamic3DTextLabel("Julian Garcia\n"P" Нажмите ALT для получения транспорта",0xFFFFFFFF,391.4835,1031.3553,12.1406,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон

	CreateDynamic3DTextLabel("Место загрузки\n Посигнальте (H) чтобы загрузиться",CGOLD,1833.4160,1452.2003,9.9700,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//лесопилка
	CreateDynamic3DTextLabel("Место загрузки\n Посигнальте (H) чтобы загрузиться",CGOLD,1729.8444,3459.0908,2.6100,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//оружейный завод LOAD
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузиться",CGOLD,1713.8218,3504.8047,2.6100,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//оружейный завод UNLOAD
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузиться",CGOLD,1789.7302,3467.2896,2.6100,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//порт ЛС
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) чтобы разгрузиться",CGOLD,2943.0398,-1286.9751,1.3162,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//порт СФ

	CreateDynamic3DTextLabel("База данных:"P" /scan",0xFFFFFFFF,-98.9768,1790.1069,2022.6899,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, -1, -1);
	CreateDynamic3DTextLabel("База данных:"P" /scan",0xFFFFFFFF,-85.1121,1800.2982,2022.6899,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Сделать предложение: "W"/propose",CGOLD,-11.0080,1250.0342,1003.9500, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	med_turn_text[0] = CreateDynamic3DTextLabel("Лучшие работники:",-1,408.5558,1498.2417,1113.4723+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 20, -1);

	med_turn_text[3] = CreateDynamic3DTextLabel("Зона заражения:",-1,415.8916,1499.4640,1113.4723+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	advert_turn_text[0] = CreateDynamic3DTextLabel("Лучшие работники:",-1,1259.2476,1479.7800,1114.8402+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 10, -1);

	CreateDynamic3DTextLabel(""P"Для ареста преступника, используйте: "NO"/arrest [id]",-1,-552.5079,487.7885,11.5739, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//lspd
	CreateDynamic3DTextLabel(""P"Для ареста преступника, используйте: "NO"/arrest [id]",-1,2726.6501,-2459.1362,21.8844, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//sfpd
	CreateDynamic3DTextLabel(""P"Для ареста преступника, используйте: "NO"/arrest [id]",-1,2559.8887,-2424.3572,22.0044, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//sfpd

	//-533.1027,2121.7495,1002.8218
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 2578.8252,2501.5007,1112.4916,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//низкий класс
	
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, -877.9473,2708.2549,1144.9087,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//средний класс
	
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1980.9282,2093.7712,1101.1250,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//высокий класс 1
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 1980.9001,2086.5647,1101.1250,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//высокий класс 2
	
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 2194.9187,2851.6250,1117.7094,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//элитный класс 1
	
	CreateDynamic3DTextLabel("Выезд из гаража: "GREEN"H",-1, 152.0760,-533.1956,-75.0400,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//выезд из отеля

	CreateDynamic3DTextLabel("Для выезда: "GREEN"H",-1,-137.9268,994.9813,1144.1937,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Покраска: "GREEN"H",-1,-134.0801,986.3956,1144.1937,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Тюнинг: "GREEN"H",-1,-142.1190,985.7707,1144.1937,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Для выхода нажмите:\n"GREEN"ENTER",-1, 1060.8322,-791.6619,1136.7097+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//выход из номера отеля

	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 571.1072,-695.6106,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 574.9941,-695.6027,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 575.0890,-696.3566,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 571.1873,-696.3592,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	
	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 571.0538,-698.8820,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 575.0101,-698.8852,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 575.0218,-699.6780,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Игра 1x1:\n"GREEN"/dice",-1, 571.1284,-699.6791,1126.6760+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	gMenu[0] = CreateDynamic3DTextLabel("-", 0x339966AA, -1141.6290,2532.0586,1138.5670, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 52);//Ballas
	gMenu[1] = CreateDynamic3DTextLabel("-", 0x339966AA, -1503.2030,-630.6912,1001.0062, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 53);//Vagos
	gMenu[2] = CreateDynamic3DTextLabel("-", 0x339966AA, -1141.6290,2532.0586,1138.5670, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 54);//Grove
	gMenu[3] = CreateDynamic3DTextLabel("-", 0x339966AA, -2622.8501,2912.3767,2738.6201, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Aztec
	gMenu[4] = CreateDynamic3DTextLabel("-", 0x339966AA, -1503.2030,-630.6912,1001.0062, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 56);//Rifa

	gHealth[0] = CreateDynamic3DTextLabel("-", 0x339966AA, -1135.5950,2556.5059,1141.9373+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 52);//Ballas
	gHealth[1] = CreateDynamic3DTextLabel("-", 0x339966AA, -1510.8998,-633.6291,1001.0062+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 53);//Vagos
	gHealth[2] = CreateDynamic3DTextLabel("-", 0x339966AA, -1135.5950,2556.5059,1141.9373+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 54);//Grove
	gHealth[3] = CreateDynamic3DTextLabel("-", 0x339966AA, -2628.7898,2902.3396,2738.6201+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Aztec
	gHealth[4] = CreateDynamic3DTextLabel("-", 0x339966AA, -1510.8998,-633.6291,1001.0062+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 56);//Rifa

	mMenu[0] = CreateDynamic3DTextLabel("-",0x339966AA, 2567.3157,-1847.8822,2522.8401,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 49, -1);
	
	mMenu[2] = CreateDynamic3DTextLabel("-",0x339966AA, 2567.3157,-1847.8822,2522.8401,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 51, -1);

	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,-2152.1694,-93.3639,27.3811,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,-2148.1326,-108.3923,27.3381,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,-2145.1804,-123.4797,27.3381,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""W"Нажмите "O"'ALT'",-1,-2196.9797,-120.2523,26.3851,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel(""G"Покупка боеприпасов\n "O"'ALT'",-1,-2183.4431,-95.8424,26.3851,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel(""G"Покупка наркотиков\n "O"'ALT'",-1,520.3056,880.0745,1000.6400,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

    black_market = CreateDynamic3DTextLabel("-", 0x339966AA, -2174.2544,-123.9014,26.3851, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    
	/*
	CreateDynamic3DTextLabel("Место для разгрузки боеприпасов",CGOLD,310.7923,1801.0048,17.6406, 25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

 	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYLV][fMats]);
 	sklad_armylv[0] = CreateDynamic3DTextLabel(string,-1,308.1984,-168.6314,999.5938,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 30);

	med_turn_text[1] = CreateDynamic3DTextLabel("Лучшие работники:",-1,408.5558,1498.2417,1113.4723+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 21, -1);
	med_turn_text[2] = CreateDynamic3DTextLabel("Лучшие работники:",-1,408.5558,1498.2417,1113.4723+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 22, -1);

	advert_turn_text[1] = CreateDynamic3DTextLabel("Лучшие работники:",-1,1259.2476,1479.7800,1114.8402+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 11, -1);
	advert_turn_text[2] = CreateDynamic3DTextLabel("Лучшие работники:",-1,1259.2476,1479.7800,1114.8402+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 12, -1);

	mMenu[1] = CreateDynamic3DTextLabel("-",0x339966AA, 2567.3157,-1847.8822,2522.8401,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 50, -1);
	*/
	
	for(new i; i < sizeof(med_heal); i ++) CreateDynamic3DTextLabel("Лечь:"P" ENTER",0xFFFFFFFF,med_heal[i][0],med_heal[i][1],med_heal[i][2],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    for(new i; i < sizeof(news_edit); i ++) CreateDynamic3DTextLabel("Объявления:"P" /edit",0xFFFFFFFF,news_edit[i][0],news_edit[i][1],news_edit[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	for(new i; i < sizeof(comp_club); i ++) CreateDynamic3DTextLabel("Начать играть:"P" ALT",0xFFFFFFFF,comp_club[i][0],comp_club[i][1],comp_club[i][2]+0.9,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 76, 45);

	for(new i; i < sizeof(auto_exam); i ++) CreateDynamic3DTextLabel("Экзамен:"P" ALT",0xFFFFFFFF,auto_exam[i][0],auto_exam[i][1],auto_exam[i][2]+0.3,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 45, 76);
	for(new i; i < sizeof(auto_page_exam); i ++) CreateDynamic3DTextLabel("Экзамен:"P" ALT",0xFFFFFFFF,auto_page_exam[i][0],auto_page_exam[i][1],auto_page_exam[i][2]+0.3,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 45, 76);

    print("[Создание ...] 3D Текстов сервера");
	return 1;
}

stock CreateTexdraw()
{
	td_game[0] = TextDrawCreate(629.555114, 288.220062, "usebox");
	TextDrawLetterSize(td_game[0], 0.000000, 3.759377);
	TextDrawTextSize(td_game[0], 518.444030, 0.000000);
	TextDrawAlignment(td_game[0], 1);
	TextDrawColor(td_game[0], 0);
	TextDrawUseBox(td_game[0], true);
	TextDrawBoxColor(td_game[0], -112);
	TextDrawSetShadow(td_game[0], 0);
	TextDrawSetOutline(td_game[0], 0);
	TextDrawFont(td_game[0], 0);

	td_game[1] = TextDrawCreate(628.221618, 289.713439, "usebox");
	TextDrawLetterSize(td_game[1], 0.000000, 3.403820);
	TextDrawTextSize(td_game[1], 519.777282, 0.000000);
	TextDrawAlignment(td_game[1], 1);
	TextDrawColor(td_game[1], 0);
	TextDrawUseBox(td_game[1], true);
	TextDrawBoxColor(td_game[1], -668447489);
	TextDrawSetShadow(td_game[1], 0);
	TextDrawSetOutline(td_game[1], -156);
	TextDrawFont(td_game[1], 0);

	td_game[2] = TextDrawCreate(525.778076, 291.697692, "time:");
	TextDrawLetterSize(td_game[2], 0.280221, 1.326221);
	TextDrawAlignment(td_game[2], 1);
	TextDrawColor(td_game[2], -1);
	TextDrawSetShadow(td_game[2], 1);
	TextDrawSetOutline(td_game[2], 0);
	TextDrawBackgroundColor(td_game[2], 255);
	TextDrawFont(td_game[2], 2);
	TextDrawSetProportional(td_game[2], 1);

	td_game[3] = TextDrawCreate(526.666931, 304.639923, "bank:");
	TextDrawLetterSize(td_game[3], 0.280221, 1.326221);
	TextDrawAlignment(td_game[3], 1);
	TextDrawColor(td_game[3], -1);
	TextDrawSetShadow(td_game[3], 1);
	TextDrawSetOutline(td_game[3], 0);
	TextDrawBackgroundColor(td_game[3], 255);
	TextDrawFont(td_game[3], 2);
	TextDrawSetProportional(td_game[3], 1);

	td_game[4] = TextDrawCreate(567.555969, 292.195465, "10:00");
	TextDrawLetterSize(td_game[4], 0.280221, 1.326221);
	TextDrawAlignment(td_game[4], 1);
	TextDrawColor(td_game[4], -1);
	TextDrawSetShadow(td_game[4], 1);
	TextDrawSetOutline(td_game[4], 0);
	TextDrawBackgroundColor(td_game[4], 255);
	TextDrawFont(td_game[4], 2);
	TextDrawSetProportional(td_game[4], 1);

	td_game[5] = TextDrawCreate(567.111572, 305.137664, "250000$");
	TextDrawLetterSize(td_game[5], 0.280221, 1.326221);
	TextDrawAlignment(td_game[5], 1);
	TextDrawColor(td_game[5], -1);
	TextDrawSetShadow(td_game[5], 1);
	TextDrawSetOutline(td_game[5], 0);
	TextDrawBackgroundColor(td_game[5], 255);
	TextDrawFont(td_game[5], 2);
	TextDrawSetProportional(td_game[5], 1);

	buy_skins[0] = TextDrawCreate(258.666656, 423.608856, "LD_SPAC:white");
	TextDrawLetterSize(buy_skins[0], 0.000000, 0.000000);
	TextDrawTextSize(buy_skins[0], 40.444458, 14.933320);
	TextDrawAlignment(buy_skins[0], 1);
	TextDrawColor(buy_skins[0], -668447489);
	TextDrawSetShadow(buy_skins[0], 0);
	TextDrawSetOutline(buy_skins[0], 0);
	TextDrawFont(buy_skins[0], 4);
	TextDrawSetSelectable(buy_skins[0], true);

	buy_skins[1] = TextDrawCreate(322.333404, 423.115509, "LD_SPAC:white");
	TextDrawLetterSize(buy_skins[1], 0.000000, 0.000000);
	TextDrawTextSize(buy_skins[1], 40.444458, 14.933320);
	TextDrawAlignment(buy_skins[1], 1);
	TextDrawColor(buy_skins[1], -668447489);
	TextDrawSetShadow(buy_skins[1], 0);
	TextDrawSetOutline(buy_skins[1], 0);
	TextDrawFont(buy_skins[1], 4);
	TextDrawSetSelectable(buy_skins[1], true);

	buy_skins[2] = TextDrawCreate(268.666656, 424.115631, "buy");
	TextDrawLetterSize(buy_skins[2], 0.217999, 1.316264);
	TextDrawAlignment(buy_skins[2], 1);
	TextDrawColor(buy_skins[2], -1);
	TextDrawSetShadow(buy_skins[2], 1);
	TextDrawSetOutline(buy_skins[2], 0);
	TextDrawBackgroundColor(buy_skins[2], 255);
	TextDrawFont(buy_skins[2], 2);
	TextDrawSetProportional(buy_skins[2], 1);

	buy_skins[3] = TextDrawCreate(332.777709, 424.120086, "exit");
	TextDrawLetterSize(buy_skins[3], 0.217999, 1.316264);
	TextDrawAlignment(buy_skins[3], 1);
	TextDrawColor(buy_skins[3], -1);
	TextDrawSetShadow(buy_skins[3], 1);
	TextDrawSetOutline(buy_skins[3], 0);
	TextDrawBackgroundColor(buy_skins[3], 255);
	TextDrawFont(buy_skins[3], 2);
	TextDrawSetProportional(buy_skins[3], 1);

	buy_skins[4] = TextDrawCreate(364.222229, 406.691101, "usebox");
	TextDrawLetterSize(buy_skins[4], 0.000000, 1.066050);
	TextDrawTextSize(buy_skins[4], 256.666656, 0.000000);
	TextDrawAlignment(buy_skins[4], 1);
	TextDrawColor(buy_skins[4], 0);
	TextDrawUseBox(buy_skins[4], true);
	TextDrawBoxColor(buy_skins[4], -668447594);
	TextDrawSetShadow(buy_skins[4], 0);
	TextDrawSetOutline(buy_skins[4], 0);
	TextDrawFont(buy_skins[4], 0);

	buy_skins[5] = TextDrawCreate(361.333221, 398.720062, "LD_BEAT:chit");
	TextDrawLetterSize(buy_skins[5], 0.009777, 0.199110);
	TextDrawTextSize(buy_skins[5], 39.555564, 45.297744);
	TextDrawAlignment(buy_skins[5], 1);
	TextDrawColor(buy_skins[5], -668447489);
	TextDrawSetShadow(buy_skins[5], 0);
	TextDrawSetOutline(buy_skins[5], 0);
	TextDrawFont(buy_skins[5], 4);
	TextDrawSetSelectable(buy_skins[5], true);
	TextDrawSetPreviewModel(buy_skins[5], 19134);
	TextDrawSetPreviewRot(buy_skins[5], 100.000000, -100.000000, 0.000000, 1.000000);

	buy_skins[6] = TextDrawCreate(220.555435, 398.724517, "LD_BEAT:chit");
	TextDrawLetterSize(buy_skins[6], 0.009777, 0.199111);
	TextDrawTextSize(buy_skins[6], 39.555564, 45.297744);
	TextDrawAlignment(buy_skins[6], 1);
	TextDrawColor(buy_skins[6], -668447489);
	TextDrawSetShadow(buy_skins[6], 0);
	TextDrawSetOutline(buy_skins[6], 0);
	TextDrawFont(buy_skins[6], 4);
	TextDrawSetSelectable(buy_skins[6], true);
	TextDrawSetPreviewModel(buy_skins[6], 19134);
	TextDrawSetPreviewRot(buy_skins[6], 100.000000, -100.000000, 0.000000, 1.000000);

	buy_skins[7] = TextDrawCreate(376.889007, 409.191223, ">");
	TextDrawLetterSize(buy_skins[7], 0.494888, 2.754842);
	TextDrawAlignment(buy_skins[7], 1);
	TextDrawColor(buy_skins[7], -1);
	TextDrawSetShadow(buy_skins[7], 1);
	TextDrawSetOutline(buy_skins[7], 0);
	TextDrawBackgroundColor(buy_skins[7], 255);
	TextDrawFont(buy_skins[7], 2);
	TextDrawSetProportional(buy_skins[7], 1);

	buy_skins[8] = TextDrawCreate(233.000167, 408.697814, "<");
	TextDrawLetterSize(buy_skins[8], 0.494888, 2.754842);
	TextDrawAlignment(buy_skins[8], 1);
	TextDrawColor(buy_skins[8], -1);
	TextDrawSetShadow(buy_skins[8], 1);
	TextDrawSetOutline(buy_skins[8], 0);
	TextDrawBackgroundColor(buy_skins[8], 255);
	TextDrawFont(buy_skins[8], 2);
	TextDrawSetProportional(buy_skins[8], 1);


	skill_td[0] = TextDrawCreate(570.444763, 349.944427, "usebox");
	TextDrawLetterSize(skill_td[0], 0.000000, 3.724817);
	TextDrawTextSize(skill_td[0], 454.444458, 0.000000);
	TextDrawAlignment(skill_td[0], 1);
	TextDrawColor(skill_td[0], 0);
	TextDrawUseBox(skill_td[0], true);
	TextDrawBoxColor(skill_td[0], 471604424);
	TextDrawSetShadow(skill_td[0], 0);
	TextDrawSetOutline(skill_td[0], 0);
	TextDrawFont(skill_td[0], 0);

	skill_td[1] = TextDrawCreate(570.555847, 349.948852, "usebox");
	TextDrawLetterSize(skill_td[1], 0.000000, 0.880373);
	TextDrawTextSize(skill_td[1], 454.444458, 0.000000);
	TextDrawAlignment(skill_td[1], 1);
	TextDrawColor(skill_td[1], 0);
	TextDrawUseBox(skill_td[1], true);
	TextDrawBoxColor(skill_td[1], -668447489);
	TextDrawSetShadow(skill_td[1], 0);
	TextDrawSetOutline(skill_td[1], 0);
	TextDrawFont(skill_td[1], 0);

	skill_td[2] = TextDrawCreate(476.110992, 348.448944, "skill information");
	TextDrawLetterSize(skill_td[2], 0.194444, 1.142044);
	TextDrawAlignment(skill_td[2], 1);
	TextDrawColor(skill_td[2], 471604479);
	TextDrawSetShadow(skill_td[2], 0);
	TextDrawSetOutline(skill_td[2], 0);
	TextDrawBackgroundColor(skill_td[2], 51);
	TextDrawFont(skill_td[2], 2);
	TextDrawSetProportional(skill_td[2], 1);

	skill_td[3] = TextDrawCreate(570.666870, 386.291137, "usebox");
	TextDrawLetterSize(skill_td[3], 0.000000, -0.319626);
	TextDrawTextSize(skill_td[3], 454.444396, 0.000000);
	TextDrawAlignment(skill_td[3], 1);
	TextDrawColor(skill_td[3], 0);
	TextDrawUseBox(skill_td[3], true);
	TextDrawBoxColor(skill_td[3], -668447489);
	TextDrawSetShadow(skill_td[3], 0);
	TextDrawSetOutline(skill_td[3], 0);
	TextDrawFont(skill_td[3], 0);

	LoadTextures[0] = TextDrawCreate(641.555297, 1.499999, LogoNameOne);
	TextDrawLetterSize(LoadTextures[0], 0.000000, 49.405799);
	TextDrawTextSize(LoadTextures[0], -2.000000, 0.000000);
	TextDrawAlignment(LoadTextures[0], 1);
	TextDrawColor(LoadTextures[0], 0);
	TextDrawUseBox(LoadTextures[0], true);
	TextDrawBoxColor(LoadTextures[0], 255);
	TextDrawSetShadow(LoadTextures[0], 0);
	TextDrawSetOutline(LoadTextures[0], 0);
	TextDrawFont(LoadTextures[0], 2);

	LoadTextures[1] = TextDrawCreate(213.777755, 179.200042, LogoNameTwo);
	TextDrawLetterSize(LoadTextures[1], 0.472220, 2.466133);
	TextDrawAlignment(LoadTextures[1], 1);
	TextDrawColor(LoadTextures[1], -130386177);
	TextDrawSetShadow(LoadTextures[1], 1);
	TextDrawSetOutline(LoadTextures[1], 0);
	TextDrawBackgroundColor(LoadTextures[1], 51);
	TextDrawFont(LoadTextures[1], 2);
	TextDrawSetProportional(LoadTextures[1], 1);

	LoadTextures[2] = TextDrawCreate(212.999877, 196.128921, LogoNameThree);
	TextDrawLetterSize(LoadTextures[2], 0.399776, 1.988263);
	TextDrawAlignment(LoadTextures[2], 1);
	TextDrawColor(LoadTextures[2], -1);
	TextDrawSetShadow(LoadTextures[2], 1);
	TextDrawSetOutline(LoadTextures[2], 0);
	TextDrawBackgroundColor(LoadTextures[2], 51);
	TextDrawFont(LoadTextures[2], 2);
	TextDrawSetProportional(LoadTextures[2], 1);

	LoadTextures[3] = TextDrawCreate(396.666687, 220.024444, LogoNameFour);
	TextDrawLetterSize(LoadTextures[3], 0.000000, 0.402345);
	TextDrawTextSize(LoadTextures[3], 210.000000, 0.000000);
	TextDrawAlignment(LoadTextures[3], 1);
	TextDrawColor(LoadTextures[3], 0);
	TextDrawUseBox(LoadTextures[3], true);
	TextDrawBoxColor(LoadTextures[3], -130386177);
	TextDrawSetShadow(LoadTextures[3], 0);
	TextDrawSetOutline(LoadTextures[3], 0);
	TextDrawFont(LoadTextures[3], 0);

	AnimDraw = TextDrawCreate(401.00, 419.00, "~w~Press ~g~ENTER~w~ to stop animation");
	TextDrawBackgroundColor(AnimDraw, 0x000000FF);
	TextDrawFont(AnimDraw, 2);
	TextDrawSetOutline(AnimDraw, 1);
	TextDrawLetterSize(AnimDraw, 0.300000, 1.250000);
	TextDrawColor(AnimDraw, 0x0095B6FF);
	TextDrawSetProportional(AnimDraw, 1);

	HungerFon[0] = TextDrawCreate(547.500000, 58.000000, "_");TextDrawBackgroundColor(HungerFon[0], 255);TextDrawFont(HungerFon[0], 1);TextDrawLetterSize(HungerFon[0], 0.500000, 0.399999);
	TextDrawColor(HungerFon[0], -1);TextDrawSetOutline(HungerFon[0], 0);TextDrawSetProportional(HungerFon[0], 1);TextDrawSetShadow(HungerFon[0], 1);
	TextDrawUseBox(HungerFon[0], 1);TextDrawBoxColor(HungerFon[0], 255);TextDrawTextSize(HungerFon[0], 606.000000, 40.000000);TextDrawSetSelectable(HungerFon[0], 0);

	HungerFon[1] = TextDrawCreate(549.500000, 60.000000, "_");TextDrawBackgroundColor(HungerFon[1], 255);TextDrawFont(HungerFon[1], 1);
	TextDrawLetterSize(HungerFon[1], 0.490000, -0.000000);TextDrawColor(HungerFon[1], -1);TextDrawSetOutline(HungerFon[1], 0);TextDrawSetProportional(HungerFon[1], 1);
	TextDrawSetShadow(HungerFon[1], 1);TextDrawUseBox(HungerFon[1], 1);TextDrawBoxColor(HungerFon[1], 1787344480);TextDrawTextSize(HungerFon[1], 604.000000, 40.000000);TextDrawSetSelectable(HungerFon[1], 0);

	YandNsysTD[0] = TextDrawCreate(356.507568, 318.333465, "usebox");
	TextDrawLetterSize(YandNsysTD[0], -0.023426, 4.082155);
	TextDrawTextSize(YandNsysTD[0], 277.000000, 0.000000);
	TextDrawAlignment(YandNsysTD[0], 1);
	TextDrawColor(YandNsysTD[0], 0);
	TextDrawUseBox(YandNsysTD[0], true);
	TextDrawBoxColor(YandNsysTD[0], 102);
	TextDrawSetShadow(YandNsysTD[0], 0);
	TextDrawSetOutline(YandNsysTD[0], 0);
	TextDrawFont(YandNsysTD[0], 0);

	YandNsysTD[1] = TextDrawCreate(285.415283, 334.916687, "LD_SPAC:white");
	TextDrawLetterSize(YandNsysTD[1], 0.000000, 0.000000);
	TextDrawTextSize(YandNsysTD[1], 63.000000, 0.583343);
	TextDrawAlignment(YandNsysTD[1], 1);
	TextDrawColor(YandNsysTD[1], -1061109505);
	TextDrawSetShadow(YandNsysTD[1], 0);
	TextDrawSetOutline(YandNsysTD[1], 0);
	TextDrawFont(YandNsysTD[1], 4);

	YandNsysTD[2] = TextDrawCreate(285.415283, 346.999816, "LD_SPAC:white");
	TextDrawLetterSize(YandNsysTD[2], 0.000000, 0.000000);
	TextDrawTextSize(YandNsysTD[2], 63.000000, 0.583343);
	TextDrawAlignment(YandNsysTD[2], 1);
	TextDrawColor(YandNsysTD[2], -1061109505);
	TextDrawSetShadow(YandNsysTD[2], 0);
	TextDrawSetOutline(YandNsysTD[2], 0);
	TextDrawFont(YandNsysTD[2], 4);

	Bizwar[0] = TextDrawCreate(95.00000, 290.00000, "__");
    TextDrawBackgroundColor(Bizwar[0], 255);
    TextDrawAlignment(Bizwar[0], 2);
    TextDrawLetterSize(Bizwar[0], 0.330000, 1.000000);
    TextDrawFont(Bizwar[0],2);
    TextDrawColor(Bizwar[0], CGREEN);
    TextDrawSetOutline(Bizwar[0],1);
    TextDrawSetProportional(Bizwar[0],1);
    TextDrawSetShadow(Bizwar[0],1);
    //
    Bizwar[2] = TextDrawCreate(95.00000, 300.00000, "__");
    TextDrawBackgroundColor(Bizwar[2], 255);
    TextDrawAlignment(Bizwar[2], 2);
    TextDrawLetterSize(Bizwar[2], 0.330000, 1.000000);
    TextDrawFont(Bizwar[2],2);
    TextDrawColor(Bizwar[2], CGREEN);
    TextDrawSetOutline(Bizwar[2],1);
    TextDrawSetProportional(Bizwar[2],1);
    TextDrawSetShadow(Bizwar[2],1);
    //
    Bizwar[1] = TextDrawCreate(95.00000, 310.00000, "__");
    TextDrawBackgroundColor(Bizwar[1], 255);
    TextDrawAlignment(Bizwar[1], 2);
    TextDrawLetterSize(Bizwar[1], 0.330000, 1.000000);
    TextDrawFont(Bizwar[1],2);
    TextDrawColor(Bizwar[1], CGREEN);
    TextDrawSetOutline(Bizwar[1],1);
    TextDrawSetProportional(Bizwar[1],1);
    TextDrawSetShadow(Bizwar[1],1);

	BG[1] = TextDrawCreate(0, 0, "LD_OTB:bckgrnd");
	TextDrawFont(BG[1], 4);
	TextDrawColor(BG[1],0xFFFFFFFF);
	TextDrawTextSize(BG[1],640,200);
	BG[0] = TextDrawCreate(0, 0, "LD_OTB:trees");
	TextDrawFont(BG[0], 4);
	TextDrawColor(BG[0],0xFFFFFFFF);
	TextDrawTextSize(BG[0],640,480);
	Start2 = TextDrawCreate(-170, 145, "LD_OTB:pole2");
	TextDrawFont(Start2, 4);
	TextDrawColor(Start2,0xFFFFFFFF);
	TextDrawTextSize(Start2,256,200);
	Finish2 = TextDrawCreate(365, 145, "LD_OTB:pole2");
 	TextDrawFont(Finish2, 4);
  	TextDrawColor(Finish2,0xFFFFFFFF);
   	TextDrawTextSize(Finish2,256,200);
	new string[24];
	for(new po = 0;po < 4;po++) {
    	Horse[po] = TextDrawCreate(0, 200+50*po, "LD_OTB:hrs8");
		HorseInfo(Horse[po]);
		HorsePosX[po] = 0;
		format(string,30,"LD_OTB2:Ric%d",po+1);
		HorseNum[po] = TextDrawCreate(15, 204+50*po,string);
    	HorseNumInfo(HorseNum[po]);
	}
   	Start = TextDrawCreate(-170, 338, "LD_OTB:pole2");
    TextDrawFont(Start, 4);
    TextDrawColor(Start,0xFFFFFFFF);
    TextDrawTextSize(Start,256,200);
   	Finish = TextDrawCreate(365, 338, "LD_OTB:pole2");
   	TextDrawFont(Finish, 4);
    TextDrawColor(Finish,0xFFFFFFFF);
    TextDrawTextSize(Finish,256,200);

	Casino_TD[Casino_TD_Box] = TextDrawCreate(612.014221, 161.916656, "usebox");
	TextDrawLetterSize(Casino_TD[Casino_TD_Box], 0.000000, 26.097074);
	TextDrawTextSize(Casino_TD[Casino_TD_Box], 457.150817, 0.000000);
	TextDrawAlignment(Casino_TD[Casino_TD_Box], 1);
	TextDrawColor(Casino_TD[Casino_TD_Box], 0);
	TextDrawUseBox(Casino_TD[Casino_TD_Box], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Box], 877622186);
	TextDrawSetShadow(Casino_TD[Casino_TD_Box], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Box], 0);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Box], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Box], 0);
	
	for(new c = 0; c < MAX_TABLES_DICE; c++)
	{
		format(casino_formatted_string,500,CASINO_TEXT_STRING, c+1, "-", "-", "-", "-", "-", "-", 0, 0, "Игра не начата");
		InfoDice[c][dice_text] = CreateDynamic3DTextLabel(casino_formatted_string,-1,dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2]+1.8,2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
		InfoDice[c][dice_area] = CreateDynamicSphere(dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2],2.0);
		format(casino_formatted_string,144,"Table %d", c+1);
		Casino_TD[Casino_TD_TableName][c] = TextDrawCreate(534.582946, 162.750000, casino_formatted_string);
		TextDrawLetterSize(Casino_TD[Casino_TD_TableName][c], 0.449999, 1.600000);
		TextDrawTextSize(Casino_TD[Casino_TD_TableName][c], -213.645767, 146.999969);
		TextDrawAlignment(Casino_TD[Casino_TD_TableName][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableName][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableName][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableName][c], -255913558);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableName][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableName][c], 255);
		TextDrawFont(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableName][c], 1);
		///
		Casino_TD[Casino_TD_TableNicks][c] = TextDrawCreate(480.234466, 190.749984, "-~n~-~n~-~n~-~n~-");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableNicks][c], 0.317877, 1.862500);
		TextDrawAlignment(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawColor(Casino_TD[Casino_TD_TableNicks][c], -1);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableNicks][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableNicks][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableNicks][c], 1);

		Casino_TD[Casino_TD_TableScore][c] = TextDrawCreate(593.616333, 191.916687, "0~n~0~n~0~n~0~n~0");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableScore][c], 0.444846, 1.815833);
		TextDrawTextSize(Casino_TD[Casino_TD_TableScore][c], 36.544651, 20.416666);
		TextDrawAlignment(Casino_TD[Casino_TD_TableScore][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableScore][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableScore][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableScore][c], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableScore][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableScore][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableScore][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableScore][c], 3);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableScore][c], 1);

		InfoDice[c][dice_gamer][0] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][1] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][2] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][3] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][4] = INVALID_PLAYER_ID;
		InfoDice[c][dice_score][0] = 0;
		InfoDice[c][dice_score][1] = 0;
		InfoDice[c][dice_score][2] = 0;
		InfoDice[c][dice_score][3] = 0;
		InfoDice[c][dice_score][4] = 0;
		InfoDice[c][dice_stavka] = 0;
		InfoDice[c][dice_bank] = 0;
		InfoDice[c][dice_game_start] = false;
		InfoDice[c][dice_crup] = INVALID_PLAYER_ID;
		UpdateTextCasino(c);
	}

	Casino_TD[Casino_TD_Enum] = TextDrawCreate(464.304626, 192.500000, "1~n~2~n~3~n~4~n~5");
	TextDrawLetterSize(Casino_TD[Casino_TD_Enum], 0.449531, 1.833333);
	TextDrawAlignment(Casino_TD[Casino_TD_Enum], 1);
	TextDrawColor(Casino_TD[Casino_TD_Enum], -1);
	TextDrawSetShadow(Casino_TD[Casino_TD_Enum], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Enum], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Enum], 255);
	TextDrawFont(Casino_TD[Casino_TD_Enum], 3);
	TextDrawSetProportional(Casino_TD[Casino_TD_Enum], 1);

	Casino_TD[Casino_TD_Set_Bet] = TextDrawCreate(534.583007, 329.583190, "SET_BET");
	TextDrawLetterSize(Casino_TD[Casino_TD_Set_Bet], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Set_Bet], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Set_Bet], 2);
	TextDrawColor(Casino_TD[Casino_TD_Set_Bet], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Set_Bet], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Set_Bet], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Set_Bet], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Set_Bet], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Set_Bet], true);

	Casino_TD[Casino_TD_Dice] = TextDrawCreate(534.583007, 352.749877, "DICE");
	TextDrawLetterSize(Casino_TD[Casino_TD_Dice], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Dice], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Dice], 2);
	TextDrawColor(Casino_TD[Casino_TD_Dice], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Dice], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Dice], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Dice], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Dice], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Dice], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Dice], true);

	Casino_TD[Casino_TD_Exit] = TextDrawCreate(534.583007, 377.083251, "EXIT");
	TextDrawLetterSize(Casino_TD[Casino_TD_Exit], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Exit], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Exit], 2);
	TextDrawColor(Casino_TD[Casino_TD_Exit], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Exit], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Exit], -348178774);
	TextDrawSetShadow(Casino_TD[Casino_TD_Exit], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Exit], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Exit], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Exit], true);


	Casino_TD[Casino_TD_Lines][0] = TextDrawCreate(466.179138, 211.166641, "_____________");
	Casino_TD[Casino_TD_Lines][1] = TextDrawCreate(466.710601, 227.333297, "_____________");
	Casino_TD[Casino_TD_Lines][2] = TextDrawCreate(465.836486, 244.083312, "_____________");
	Casino_TD[Casino_TD_Lines][3] = TextDrawCreate(466.367919, 259.666656, "_____________");
	Casino_TD[Casino_TD_Lines][4] = TextDrawCreate(465.962280, 276.416717, "_____________");
	for(new i = 0; i < 5; i++) {
		TextDrawLetterSize(Casino_TD[Casino_TD_Lines][i], 0.444846, -0.336666);
		TextDrawTextSize(Casino_TD[Casino_TD_Lines][i], 579.560363, -1988.000122);
		TextDrawAlignment(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Lines][i], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_Lines][i], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_Lines][i], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_Lines][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Lines][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_Lines][i], 1);
	}
	Casino_TD[Casino_TD_Modeled][0] = TextDrawCreate(588.462707, 148.166671, "PreviewModel");
	Casino_TD[Casino_TD_Modeled][1] = TextDrawCreate(581.966247, 146.833297, "PreviewModel");
	for(new i = 0;i<2; i++) {
		TextDrawLetterSize(Casino_TD[Casino_TD_Modeled][i], 0.000000, 0.000000);
		TextDrawTextSize(Casino_TD[Casino_TD_Modeled][i], 28.579849, 34.416690);
		TextDrawAlignment(Casino_TD[Casino_TD_Modeled][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Modeled][i], -86);
		TextDrawSetShadow(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Modeled][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Modeled][i], 5);
		TextDrawSetPreviewModel(Casino_TD[Casino_TD_Modeled][i], 1851);
	}
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][0], 0.000000, 111.000000, 124.000000, 1.000000);
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][1], 247.000000, 134.000000, 0.000000, 1.000000);

	load_tune();

	inFigh = TextDrawCreate(569.333679, 96.071090, "In Fight"); // Text element
	TextDrawLetterSize(inFigh, 0.247332, 1.316266);
	TextDrawAlignment(inFigh, 1);
	TextDrawColor(inFigh, -16776961);
	TextDrawSetShadow(inFigh, 0);
	TextDrawSetOutline(inFigh, 0);
	TextDrawBackgroundColor(inFigh, 51);
	TextDrawFont(inFigh, 2);
	TextDrawSetProportional(inFigh, 1);
	TextDrawSetPreviewModel(inFigh, 0);
	TextDrawSetPreviewRot(inFigh, 0.000000, 0.000000, 0.000000, 0.000000);

	Capture[0] = TextDrawCreate(117.724746, 246.500000, "usebox");
	TextDrawLetterSize(Capture[0], 0.000000, 3.585549);
	TextDrawTextSize(Capture[0], 2.216691, 0.000000);
	TextDrawAlignment(Capture[0], 1);
	TextDrawColor(Capture[0], 0);
	TextDrawUseBox(Capture[0], true);
	TextDrawBoxColor(Capture[0], 102);
	TextDrawSetShadow(Capture[0], 0);
	TextDrawSetOutline(Capture[0], 0);
	TextDrawFont(Capture[0], 0);

	Capture[1] = TextDrawCreate(16.866767, 253.750030, "43");
	TextDrawLetterSize(Capture[1], 0.424229, 2.124998);
	TextDrawAlignment(Capture[1], 1);
	TextDrawColor(Capture[1], -1);
	TextDrawSetShadow(Capture[1], 0);
	TextDrawSetOutline(Capture[1], 1);
	TextDrawBackgroundColor(Capture[1], 51);
	TextDrawFont(Capture[1], 3);
	TextDrawSetProportional(Capture[1], 1);

	Capture[2] = TextDrawCreate(78.243041, 253.750045, "39");
	TextDrawLetterSize(Capture[2], 0.448592, 2.084166);
	TextDrawAlignment(Capture[2], 1);
	TextDrawColor(Capture[2], -1);
	TextDrawSetShadow(Capture[2], 0);
	TextDrawSetOutline(Capture[2], 1);
	TextDrawBackgroundColor(Capture[2], 51);
	TextDrawFont(Capture[2], 3);
	TextDrawSetProportional(Capture[2], 1);

	Capture[3] = TextDrawCreate(58.691062, 258.750030, "usebox");
	TextDrawLetterSize(Capture[3], 0.000000, 1.042042);
	TextDrawTextSize(Capture[3], 50.942890, 0.000000);
	TextDrawAlignment(Capture[3], 1);
	TextDrawColor(Capture[3], 1017789500);
	TextDrawUseBox(Capture[3], true);
	TextDrawBoxColor(Capture[3], 579543807);
	TextDrawSetShadow(Capture[3], 0);
	TextDrawSetOutline(Capture[3], 0);
	TextDrawBackgroundColor(Capture[3], 41215);
	TextDrawFont(Capture[3], 0);

	Capture[4] = TextDrawCreate(65.718879, 258.750030, "usebox");
	TextDrawLetterSize(Capture[4], 0.000000, 1.044443);
	TextDrawTextSize(Capture[4], 57.970710, 0.000000);
	TextDrawAlignment(Capture[4], 1);
	TextDrawColor(Capture[4], 0);
	TextDrawUseBox(Capture[4], true);
	TextDrawBoxColor(Capture[4], 531556863);
	TextDrawSetShadow(Capture[4], 0);
	TextDrawSetOutline(Capture[4], 0);
	TextDrawFont(Capture[4], 0);

	Capture[5] = TextDrawCreate(117.724731, 285.000061, "usebox");
	TextDrawLetterSize(Capture[5], 0.000000, 1.142035);
	TextDrawTextSize(Capture[5], 2.216691, 0.000000);
	TextDrawAlignment(Capture[5], 1);
	TextDrawColor(Capture[5], 0);
	TextDrawUseBox(Capture[5], true);
	TextDrawBoxColor(Capture[5], 102);
	TextDrawSetShadow(Capture[5], 0);
	TextDrawSetOutline(Capture[5], 0);
	TextDrawFont(Capture[5], 0);

	Capture[6] = TextDrawCreate(47.789161, 282.333282, "4:02");
	TextDrawLetterSize(Capture[6], 0.208241, 1.506664);
	TextDrawAlignment(Capture[6], 1);
	TextDrawColor(Capture[6], -1);
	TextDrawSetShadow(Capture[6], 0);
	TextDrawSetOutline(Capture[6], 1);
	TextDrawBackgroundColor(Capture[6], 51);
	TextDrawFont(Capture[6], 2);
	TextDrawSetProportional(Capture[6], 1);

	Capture[7] = TextDrawCreate(73.557823, 282.916656, "Aztecas");
	TextDrawLetterSize(Capture[7], 0.186691, 1.320000);
	TextDrawAlignment(Capture[7], 1);
	TextDrawColor(Capture[7], -1);
	TextDrawSetShadow(Capture[7], 0);
	TextDrawSetOutline(Capture[7], 1);
	TextDrawBackgroundColor(Capture[7], 51);
	TextDrawFont(Capture[7], 2);
	TextDrawSetProportional(Capture[7], 1);

	Capture[8] = TextDrawCreate(37.013221, 238.583312, "capture");
	TextDrawLetterSize(Capture[8], 0.226045, 1.354998);
	TextDrawAlignment(Capture[8], 1);
	TextDrawColor(Capture[8], -1);
	TextDrawSetShadow(Capture[8], 0);
	TextDrawSetOutline(Capture[8], 1);
	TextDrawBackgroundColor(Capture[8], 51);
	TextDrawFont(Capture[8], 2);
	TextDrawSetProportional(Capture[8], 1);

	Capture[9] = TextDrawCreate(23.894615, 282.333404, "grove");
	TextDrawLetterSize(Capture[9], 0.215268, 1.372498);
	TextDrawAlignment(Capture[9], 2);
	TextDrawColor(Capture[9], -1);
	TextDrawSetShadow(Capture[9], 0);
	TextDrawSetOutline(Capture[9], -1);
	TextDrawBackgroundColor(Capture[9], 51);
	TextDrawFont(Capture[9], 2);
	TextDrawSetProportional(Capture[9], 1);

	select_skins[0] = TextDrawCreate(352.666778, 366.970367, "");
	TextDrawLetterSize(select_skins[0], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[0], 81.000000, 44.000000);
	TextDrawAlignment(select_skins[0], 1);
	TextDrawColor(select_skins[0], 255);
	TextDrawSetShadow(select_skins[0], 0);
	TextDrawSetOutline(select_skins[0], 0);
	TextDrawBackgroundColor(select_skins[0], 0);
	TextDrawFont(select_skins[0], 5);
	TextDrawSetProportional(select_skins[0], 0);
	TextDrawSetShadow(select_skins[0], 0);
	TextDrawSetPreviewModel(select_skins[0], 806);
	TextDrawSetPreviewRot(select_skins[0], 138.000000, 90.000000, 199.000000, 1.000000);

	select_skins[1] = TextDrawCreate(404.666961, 361.577819, "");
	TextDrawLetterSize(select_skins[1], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[1], 29.000000, 34.000000);
	TextDrawAlignment(select_skins[1], 1);
	TextDrawColor(select_skins[1], 255);
	TextDrawSetShadow(select_skins[1], 0);
	TextDrawSetOutline(select_skins[1], 0);
	TextDrawBackgroundColor(select_skins[1], 0);
	TextDrawFont(select_skins[1], 5);
	TextDrawSetProportional(select_skins[1], 0);
	TextDrawSetShadow(select_skins[1], 0);
	TextDrawSetPreviewModel(select_skins[1], 806);
	TextDrawSetPreviewRot(select_skins[1], 180.000000, 125.000000, 36.000000, 1.000000);

	select_skins[2] = TextDrawCreate(418.333526, 362.822265, "");
	TextDrawLetterSize(select_skins[2], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[2], 38.000000, 36.000000);
	TextDrawAlignment(select_skins[2], 1);
	TextDrawColor(select_skins[2], 255);
	TextDrawSetShadow(select_skins[2], 0);
	TextDrawSetOutline(select_skins[2], 0);
	TextDrawBackgroundColor(select_skins[2], 0);
	TextDrawFont(select_skins[2], 5);
	TextDrawSetProportional(select_skins[2], 0);
	TextDrawSetShadow(select_skins[2], 0);
	TextDrawSetSelectable(select_skins[2], true);
	TextDrawSetPreviewModel(select_skins[2], 19605);
	TextDrawSetPreviewRot(select_skins[2], 0.000000, 87.000000, 0.000000, 1.689259);

	select_skins[3] = TextDrawCreate(406.333648, 378.585327, "");
	TextDrawLetterSize(select_skins[3], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[3], 29.000000, 34.000000);
	TextDrawAlignment(select_skins[3], 1);
	TextDrawColor(select_skins[3], 255);
	TextDrawSetShadow(select_skins[3], 0);
	TextDrawSetOutline(select_skins[3], 0);
	TextDrawBackgroundColor(select_skins[3], 0);
	TextDrawFont(select_skins[3], 5);
	TextDrawSetProportional(select_skins[3], 0);
	TextDrawSetShadow(select_skins[3], 0);
	TextDrawSetPreviewModel(select_skins[3], 806);
	TextDrawSetPreviewRot(select_skins[3], 180.000000, 51.000000, 169.000000, 1.000000);

	select_skins[4] = TextDrawCreate(357.999908, 348.718719, "");
	TextDrawLetterSize(select_skins[4], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[4], 54.000000, 40.000000);
	TextDrawAlignment(select_skins[4], 1);
	TextDrawColor(select_skins[4], 255);
	TextDrawSetShadow(select_skins[4], 0);
	TextDrawSetOutline(select_skins[4], 0);
	TextDrawBackgroundColor(select_skins[4], 0);
	TextDrawFont(select_skins[4], 5);
	TextDrawSetProportional(select_skins[4], 0);
	TextDrawSetShadow(select_skins[4], 0);
	TextDrawSetPreviewModel(select_skins[4], 19836);
	TextDrawSetPreviewRot(select_skins[4], 90.000000, 360.000000, 138.000000, 1.000000);

	select_skins[5] = TextDrawCreate(375.666717, 364.637084, "Next");
	TextDrawLetterSize(select_skins[5], 0.184999, 0.840888);
	TextDrawAlignment(select_skins[5], 1);
	TextDrawColor(select_skins[5], -91);
	TextDrawSetShadow(select_skins[5], 0);
	TextDrawSetOutline(select_skins[5], 0);
	TextDrawBackgroundColor(select_skins[5], 255);
	TextDrawFont(select_skins[5], 2);
	TextDrawSetProportional(select_skins[5], 1);
	TextDrawSetShadow(select_skins[5], 0);

	select_skins[6] = TextDrawCreate(205.622894, 367.780822, "");
	TextDrawLetterSize(select_skins[6], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[6], 102.000000, 37.000000);
	TextDrawAlignment(select_skins[6], 1);
	TextDrawColor(select_skins[6], 255);
	TextDrawSetShadow(select_skins[6], 0);
	TextDrawSetOutline(select_skins[6], 0);
	TextDrawBackgroundColor(select_skins[6], 0);
	TextDrawFont(select_skins[6], 5);
	TextDrawSetProportional(select_skins[6], 0);
	TextDrawSetShadow(select_skins[6], 0);
	TextDrawSetPreviewModel(select_skins[6], 806);
	TextDrawSetPreviewRot(select_skins[6], 173.000000, 270.000000, 199.000000, 1.000000);

	select_skins[7] = TextDrawCreate(209.622924, 361.558685, "");
	TextDrawLetterSize(select_skins[7], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[7], 30.000000, 34.000000);
	TextDrawAlignment(select_skins[7], 1);
	TextDrawColor(select_skins[7], 255);
	TextDrawSetShadow(select_skins[7], 0);
	TextDrawSetOutline(select_skins[7], 0);
	TextDrawBackgroundColor(select_skins[7], 0);
	TextDrawFont(select_skins[7], 5);
	TextDrawSetProportional(select_skins[7], 0);
	TextDrawSetShadow(select_skins[7], 0);
	TextDrawSetPreviewModel(select_skins[7], 806);
	TextDrawSetPreviewRot(select_skins[7], 180.000000, 238.000000, 169.000000, 1.000000);

	select_skins[8] = TextDrawCreate(184.622894, 363.217895, "");
	TextDrawLetterSize(select_skins[8], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[8], 39.000000, 36.000000);
	TextDrawAlignment(select_skins[8], 1);
	TextDrawColor(select_skins[8], 255);
	TextDrawSetShadow(select_skins[8], 0);
	TextDrawSetOutline(select_skins[8], 0);
	TextDrawBackgroundColor(select_skins[8], 0);
	TextDrawFont(select_skins[8], 5);
	TextDrawSetProportional(select_skins[8], 0);
	TextDrawSetShadow(select_skins[8], 0);
	TextDrawSetSelectable(select_skins[8], true);
	TextDrawSetPreviewModel(select_skins[8], 19605);
	TextDrawSetPreviewRot(select_skins[8], 0.000000, 270.000000, 0.000000, 1.689259);

	select_skins[9] = TextDrawCreate(209.622985, 376.906890, "");
	TextDrawLetterSize(select_skins[9], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[9], 30.000000, 34.000000);
	TextDrawAlignment(select_skins[9], 1);
	TextDrawColor(select_skins[9], 255);
	TextDrawSetShadow(select_skins[9], 0);
	TextDrawSetOutline(select_skins[9], 0);
	TextDrawBackgroundColor(select_skins[9], 0);
	TextDrawFont(select_skins[9], 5);
	TextDrawSetProportional(select_skins[9], 0);
	TextDrawSetShadow(select_skins[9], 0);
	TextDrawSetPreviewModel(select_skins[9], 806);
	TextDrawSetPreviewRot(select_skins[9], 180.000000, 297.000000, 195.000000, 1.000000);

	select_skins[10] = TextDrawCreate(229.598800, 353.281768, "");
	TextDrawLetterSize(select_skins[10], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[10], 55.000000, 33.000000);
	TextDrawAlignment(select_skins[10], 1);
	TextDrawColor(select_skins[10], 255);
	TextDrawSetShadow(select_skins[10], 0);
	TextDrawSetOutline(select_skins[10], 0);
	TextDrawBackgroundColor(select_skins[10], 0);
	TextDrawFont(select_skins[10], 5);
	TextDrawSetProportional(select_skins[10], 0);
	TextDrawSetShadow(select_skins[10], 0);
	TextDrawSetPreviewModel(select_skins[10], 19836);
	TextDrawSetPreviewRot(select_skins[10], 90.000000, 360.000000, 0.000000, 1.000000);

	select_skins[11] = TextDrawCreate(247.598953, 364.222320, "Back");
	TextDrawLetterSize(select_skins[11], 0.184999, 0.840888);
	TextDrawAlignment(select_skins[11], 1);
	TextDrawColor(select_skins[11], -91);
	TextDrawSetShadow(select_skins[11], 0);
	TextDrawSetOutline(select_skins[11], 0);
	TextDrawBackgroundColor(select_skins[11], 255);
	TextDrawFont(select_skins[11], 2);
	TextDrawSetProportional(select_skins[11], 1);
	TextDrawSetShadow(select_skins[11], 0);

	select_skins[12] = TextDrawCreate(256.133697, -20.614786, "");
	TextDrawLetterSize(select_skins[12], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[12], 166.000000, 59.000000);
	TextDrawAlignment(select_skins[12], 1);
	TextDrawColor(select_skins[12], 255);
	TextDrawSetShadow(select_skins[12], 0);
	TextDrawSetOutline(select_skins[12], 0);
	TextDrawBackgroundColor(select_skins[12], 0);
	TextDrawFont(select_skins[12], 5);
	TextDrawSetProportional(select_skins[12], 0);
	TextDrawSetShadow(select_skins[12], 0);
	TextDrawSetPreviewModel(select_skins[12], 19837);
	TextDrawSetPreviewRot(select_skins[12], 0.000000, 270.000000, 0.000000, 1.131386);

	select_skins[13] = TextDrawCreate(224.133743, -21.029598, "");
	TextDrawLetterSize(select_skins[13], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[13], 166.000000, 59.000000);
	TextDrawAlignment(select_skins[13], 1);
	TextDrawColor(select_skins[13], 255);
	TextDrawSetShadow(select_skins[13], 0);
	TextDrawSetOutline(select_skins[13], 0);
	TextDrawBackgroundColor(select_skins[13], 0);
	TextDrawFont(select_skins[13], 5);
	TextDrawSetProportional(select_skins[13], 0);
	TextDrawSetShadow(select_skins[13], 0);
	TextDrawSetPreviewModel(select_skins[13], 19837);
	TextDrawSetPreviewRot(select_skins[13], 0.000000, 90.000000, 0.000000, 1.131386);

	select_skins[14] = TextDrawCreate(255.065704, -11.488560, "");
	TextDrawLetterSize(select_skins[14], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[14], 134.000000, 63.000000);
	TextDrawAlignment(select_skins[14], 1);
	TextDrawColor(select_skins[14], 255);
	TextDrawSetShadow(select_skins[14], 0);
	TextDrawSetOutline(select_skins[14], 0);
	TextDrawBackgroundColor(select_skins[14], 0);
	TextDrawFont(select_skins[14], 5);
	TextDrawSetProportional(select_skins[14], 0);
	TextDrawSetShadow(select_skins[14], 0);
	TextDrawSetPreviewModel(select_skins[14], 19836);
	TextDrawSetPreviewRot(select_skins[14], 90.000000, 360.000000, 117.000000, 1.000000);

	select_skins[15] = TextDrawCreate(292.800354, 12.311112, "Select_a_person");
	TextDrawLetterSize(select_skins[15], 0.345999, 1.205924);
	TextDrawAlignment(select_skins[15], 1);
	TextDrawColor(select_skins[15], -92);
	TextDrawSetShadow(select_skins[15], 0);
	TextDrawSetOutline(select_skins[15], 0);
	TextDrawBackgroundColor(select_skins[15], 255);
	TextDrawFont(select_skins[15], 0);
	TextDrawSetProportional(select_skins[15], 1);
	TextDrawSetShadow(select_skins[15], 0);

	select_skins[16] = TextDrawCreate(274.467041, 341.518493, "");
	TextDrawLetterSize(select_skins[16], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[16], 94.000000, 39.000000);
	TextDrawAlignment(select_skins[16], 1);
	TextDrawColor(select_skins[16], 255);
	TextDrawSetShadow(select_skins[16], 0);
	TextDrawSetOutline(select_skins[16], 0);
	TextDrawBackgroundColor(select_skins[16], 0);
	TextDrawFont(select_skins[16], 5);
	TextDrawSetProportional(select_skins[16], 0);
	TextDrawSetShadow(select_skins[16], 0);
	TextDrawSetPreviewModel(select_skins[16], 19837);
	TextDrawSetPreviewRot(select_skins[16], 0.000000, 270.000000, 0.000000, 1.131386);

	select_skins[17] = TextDrawCreate(373.800354, 343.177764, "");
	TextDrawLetterSize(select_skins[17], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[17], -95.000000, 37.000000);
	TextDrawAlignment(select_skins[17], 1);
	TextDrawColor(select_skins[17], 255);
	TextDrawSetShadow(select_skins[17], 0);
	TextDrawSetOutline(select_skins[17], 0);
	TextDrawBackgroundColor(select_skins[17], 0);
	TextDrawFont(select_skins[17], 5);
	TextDrawSetProportional(select_skins[17], 0);
	TextDrawSetShadow(select_skins[17], 0);
	TextDrawSetPreviewModel(select_skins[17], 19837);
	TextDrawSetPreviewRot(select_skins[17], 0.000000, 270.000000, 0.000000, 1.131386);

	select_skins[18] = TextDrawCreate(311.133819, 364.074035, "Select");
	TextDrawLetterSize(select_skins[18], 0.186998, 0.940442);
	TextDrawAlignment(select_skins[18], 1);
	TextDrawColor(select_skins[18], -99);
	TextDrawSetShadow(select_skins[18], 0);
	TextDrawSetOutline(select_skins[18], 0);
	TextDrawBackgroundColor(select_skins[18], 255);
	TextDrawFont(select_skins[18], 2);
	TextDrawSetProportional(select_skins[18], 1);
	TextDrawSetShadow(select_skins[18], 0);
	TextDrawSetSelectable(select_skins[18], true);

	select_skins[19] = TextDrawCreate(302.333496, 384.392730, "");
	TextDrawLetterSize(select_skins[19], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[19], 29.000000, 29.000000);
	TextDrawAlignment(select_skins[19], 1);
	TextDrawColor(select_skins[19], 255);
	TextDrawSetShadow(select_skins[19], 0);
	TextDrawSetOutline(select_skins[19], 0);
	TextDrawBackgroundColor(select_skins[19], 0);
	TextDrawFont(select_skins[19], 5);
	TextDrawSetProportional(select_skins[19], 0);
	TextDrawSetShadow(select_skins[19], 0);
	TextDrawSetPreviewModel(select_skins[19], 806);
	TextDrawSetPreviewRot(select_skins[19], 138.000000, 151.000000, 200.000000, 1.000000);

	select_skins[20] = TextDrawCreate(309.333404, 364.481567, "");
	TextDrawLetterSize(select_skins[20], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[20], 34.000000, 54.000000);
	TextDrawAlignment(select_skins[20], 1);
	TextDrawColor(select_skins[20], 255);
	TextDrawSetShadow(select_skins[20], 0);
	TextDrawSetOutline(select_skins[20], 0);
	TextDrawBackgroundColor(select_skins[20], 0);
	TextDrawFont(select_skins[20], 5);
	TextDrawSetProportional(select_skins[20], 0);
	TextDrawSetShadow(select_skins[20], 0);
	TextDrawSetPreviewModel(select_skins[20], 806);
	TextDrawSetPreviewRot(select_skins[20], 138.000000, 213.000000, 146.000000, 1.000000);

	reg_td[0] = TextDrawCreate(459.633117, 160.962966, "box");
	TextDrawLetterSize(reg_td[0], 0.000000, 19.900018);
	TextDrawTextSize(reg_td[0], 631.000000, 0.000000);
	TextDrawAlignment(reg_td[0], 1);
	TextDrawColor(reg_td[0], -1);
	TextDrawUseBox(reg_td[0], 1);
	TextDrawBoxColor(reg_td[0], 108);
	TextDrawSetShadow(reg_td[0], 0);
	TextDrawSetOutline(reg_td[0], 0);
	TextDrawBackgroundColor(reg_td[0], 255);
	TextDrawFont(reg_td[0], 1);
	TextDrawSetProportional(reg_td[0], 1);
	TextDrawSetShadow(reg_td[0], 0);

	reg_td[1] = TextDrawCreate(435.633148, 95.266685, "");
	TextDrawLetterSize(reg_td[1], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[1], 219.000000, 110.000000);
	TextDrawAlignment(reg_td[1], 1);
	TextDrawColor(reg_td[1], -1);
	TextDrawSetShadow(reg_td[1], 0);
	TextDrawSetOutline(reg_td[1], 0);
	TextDrawBackgroundColor(reg_td[1], 0);
	TextDrawFont(reg_td[1], 5);
	TextDrawSetProportional(reg_td[1], 0);
	TextDrawSetShadow(reg_td[1], 0);
	TextDrawSetPreviewModel(reg_td[1], 1011);
	TextDrawSetPreviewRot(reg_td[1], 90.000000, 0.000000, 180.000000, 1.000000);

	reg_td[2] = TextDrawCreate(433.633148, 292.303833, "");
	TextDrawLetterSize(reg_td[2], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[2], 223.000000, 110.000000);
	TextDrawAlignment(reg_td[2], 1);
	TextDrawColor(reg_td[2], -1);
	TextDrawSetShadow(reg_td[2], 0);
	TextDrawSetOutline(reg_td[2], 0);
	TextDrawBackgroundColor(reg_td[2], 0);
	TextDrawFont(reg_td[2], 5);
	TextDrawSetProportional(reg_td[2], 0);
	TextDrawSetShadow(reg_td[2], 0);
	TextDrawSetPreviewModel(reg_td[2], 1011);
	TextDrawSetPreviewRot(reg_td[2], 270.000000, 0.000000, 180.000000, 1.000000);

	reg_td[3] = TextDrawCreate(494.633178, 289.970581, "A");
	TextDrawLetterSize(reg_td[3], -1.104665, 6.718811);
	TextDrawAlignment(reg_td[3], 1);
	TextDrawColor(reg_td[3], -668439399);
	TextDrawSetShadow(reg_td[3], -1);
	TextDrawSetOutline(reg_td[3], 0);
	TextDrawBackgroundColor(reg_td[3], 255);
	TextDrawFont(reg_td[3], 0);
	TextDrawSetProportional(reg_td[3], 0);
	TextDrawSetShadow(reg_td[3], -1);

	reg_td[4] = TextDrawCreate(495.966461, 334.355743, "URORA");
	TextDrawLetterSize(reg_td[4], 0.587997, 2.139259);
	TextDrawAlignment(reg_td[4], 1);
	TextDrawColor(reg_td[4], -668439399);
	TextDrawSetShadow(reg_td[4], 0);
	TextDrawSetOutline(reg_td[4], 0);
	TextDrawBackgroundColor(reg_td[4], 255);
	TextDrawFont(reg_td[4], 1);
	TextDrawSetProportional(reg_td[4], 1);
	TextDrawSetShadow(reg_td[4], 0);

	reg_td[5] = TextDrawCreate(559.633728, 341.407562, "state");
	TextDrawLetterSize(reg_td[5], 0.213666, 1.226665);
	TextDrawAlignment(reg_td[5], 1);
	TextDrawColor(reg_td[5], -1);
	TextDrawSetShadow(reg_td[5], 0);
	TextDrawSetOutline(reg_td[5], 0);
	TextDrawBackgroundColor(reg_td[5], 255);
	TextDrawFont(reg_td[5], 2);
	TextDrawSetProportional(reg_td[5], 1);
	TextDrawSetShadow(reg_td[5], 0);

	reg_td[6] = TextDrawCreate(564.967163, 282.348205, "");
	TextDrawLetterSize(reg_td[6], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[6], 60.000000, 47.000000);
	TextDrawAlignment(reg_td[6], 1);
	TextDrawColor(reg_td[6], -668439399);
	TextDrawSetShadow(reg_td[6], 0);
	TextDrawSetOutline(reg_td[6], 0);
	TextDrawBackgroundColor(reg_td[6], 0);
	TextDrawFont(reg_td[6], 5);
	TextDrawSetProportional(reg_td[6], 0);
	TextDrawSetShadow(reg_td[6], 0);
	TextDrawSetPreviewModel(reg_td[6], 1316);
	TextDrawSetPreviewRot(reg_td[6], 156.000000, 180.000000, 0.000000, 1.000000);


	reg_td[7] = TextDrawCreate(468.433166, 200.574737, "");
	TextDrawLetterSize(reg_td[7], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[7], 34.000000, 38.000000);
	TextDrawAlignment(reg_td[7], 1);
	TextDrawColor(reg_td[7], -16777217);
	TextDrawSetShadow(reg_td[7], 0);
	TextDrawSetOutline(reg_td[7], 0);
	TextDrawBackgroundColor(reg_td[7], 0);
	TextDrawFont(reg_td[7], 5);
	TextDrawSetProportional(reg_td[7], 0);
	TextDrawSetShadow(reg_td[7], 0);
	TextDrawSetPreviewModel(reg_td[7], 1316);
	TextDrawSetPreviewRot(reg_td[7], 90.000000, 180.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(reg_td[7],true);

	reg_td[8] = TextDrawCreate(479.433135, 205.708587, "<");
	TextDrawLetterSize(reg_td[8], 0.603999, 3.002074);
	TextDrawAlignment(reg_td[8], 1);
	TextDrawColor(reg_td[8], -1);
	TextDrawSetShadow(reg_td[8], 1);
	TextDrawSetOutline(reg_td[8], 0);
	TextDrawBackgroundColor(reg_td[8], 255);
	TextDrawFont(reg_td[8], 1);
	TextDrawSetProportional(reg_td[8], 1);
	TextDrawSetShadow(reg_td[8], 1);

	reg_td[9] = TextDrawCreate(513.033081, 200.574737, "");
	TextDrawLetterSize(reg_td[9], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[9], 34.000000, 38.000000);
	TextDrawAlignment(reg_td[9], 1);
	TextDrawColor(reg_td[9], -1);
	TextDrawSetShadow(reg_td[9], 0);
	TextDrawSetOutline(reg_td[9], 0);
	TextDrawBackgroundColor(reg_td[9], 0);
	TextDrawFont(reg_td[9], 5);
	TextDrawSetProportional(reg_td[9], 0);
	TextDrawSetShadow(reg_td[9], 0);
	TextDrawSetPreviewModel(reg_td[9], 1316);
	TextDrawSetPreviewRot(reg_td[9], 90.000000, 180.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(reg_td[9],true);

	reg_td[10] = TextDrawCreate(525.733215, 205.708587, ">");
	TextDrawLetterSize(reg_td[10], 0.603999, 3.002074);
	TextDrawAlignment(reg_td[10], 1);
	TextDrawColor(reg_td[10], -1);
	TextDrawSetShadow(reg_td[10], 1);
	TextDrawSetOutline(reg_td[10], 0);
	TextDrawBackgroundColor(reg_td[10], 255);
	TextDrawFont(reg_td[10], 1);
	TextDrawSetProportional(reg_td[10], 1);
	TextDrawSetShadow(reg_td[10], 1);

	reg_td[11] = TextDrawCreate(905.967102, 168.274093, "");
	TextDrawLetterSize(reg_td[11], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[11], -467.000000, -13.000000);
	TextDrawAlignment(reg_td[11], 1);
	TextDrawColor(reg_td[11], -9136385);
	TextDrawSetShadow(reg_td[11], 0);
	TextDrawSetOutline(reg_td[11], 0);
	TextDrawBackgroundColor(reg_td[11], 0);
	TextDrawFont(reg_td[11], 5);
	TextDrawSetProportional(reg_td[11], 0);
	TextDrawSetShadow(reg_td[11], 0);
	TextDrawSetPreviewModel(reg_td[11], 1591);
	TextDrawSetPreviewRot(reg_td[11], 255.000000, 360.000000, 90.000000, 1.000000);

	reg_td[12] = TextDrawCreate(486.299804, 236.873992, "back");
	TextDrawLetterSize(reg_td[12], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[12], 2);
	TextDrawColor(reg_td[12], -513);
	TextDrawSetShadow(reg_td[12], 1);
	TextDrawSetOutline(reg_td[12], 0);
	TextDrawBackgroundColor(reg_td[12], 255);
	TextDrawFont(reg_td[12], 2);
	TextDrawSetProportional(reg_td[12], 1);
	TextDrawSetShadow(reg_td[12], 1);

	reg_td[13] = TextDrawCreate(530.799865, 236.873992, "next");
	TextDrawLetterSize(reg_td[13], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[13], 2);
	TextDrawColor(reg_td[13], -1);
	TextDrawSetShadow(reg_td[13], 1);
	TextDrawSetOutline(reg_td[13], 0);
	TextDrawBackgroundColor(reg_td[13], 255);
	TextDrawFont(reg_td[13], 2);
	TextDrawSetProportional(reg_td[13], 1);
	TextDrawSetShadow(reg_td[13], 1);

	reg_td[14] = TextDrawCreate(544.133178, 147.688796, "Select_a_person");
	TextDrawLetterSize(reg_td[14], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[14], 2);
	TextDrawColor(reg_td[14], -668439399);
	TextDrawSetShadow(reg_td[14], 0);
	TextDrawSetOutline(reg_td[14], 0);
	TextDrawBackgroundColor(reg_td[14], 255);
	TextDrawFont(reg_td[14], 2);
	TextDrawSetProportional(reg_td[14], 1);
	TextDrawSetShadow(reg_td[14], 0);

	reg_td[15] = TextDrawCreate(490.699218, 242.471084, "");
	TextDrawLetterSize(reg_td[15], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[15], 34.000000, 38.000000);
	TextDrawAlignment(reg_td[15], 1);
	TextDrawColor(reg_td[15], -1);
	TextDrawSetShadow(reg_td[15], 0);
	TextDrawSetOutline(reg_td[15], 0);
	TextDrawBackgroundColor(reg_td[15], 0);
	TextDrawFont(reg_td[15], 5);
	TextDrawSetProportional(reg_td[15], 0);
	TextDrawSetShadow(reg_td[15], 0);
	TextDrawSetPreviewModel(reg_td[15], 1316);
	TextDrawSetPreviewRot(reg_td[15], 90.000000, 180.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(reg_td[15],true);

	reg_td[16] = TextDrawCreate(508.132629, 279.185241, "select");
	TextDrawLetterSize(reg_td[16], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[16], 2);
	TextDrawColor(reg_td[16], -1);
	TextDrawSetShadow(reg_td[16], 1);
	TextDrawSetOutline(reg_td[16], 0);
	TextDrawBackgroundColor(reg_td[16], 255);
	TextDrawFont(reg_td[16], 2);
	TextDrawSetProportional(reg_td[16], 1);
	TextDrawSetShadow(reg_td[16], 1);

	reg_td[17] = TextDrawCreate(507.132690, 259.588806, "V");
	TextDrawLetterSize(reg_td[17], 0.480666, 1.230810);
	TextDrawTextSize(reg_td[17], 516.779052, 21.000001);
	TextDrawAlignment(reg_td[17], 2);
	TextDrawColor(reg_td[17], -1);
	TextDrawSetShadow(reg_td[17], 1);
	TextDrawSetOutline(reg_td[17], 0);
	TextDrawBackgroundColor(reg_td[17], 255);
	TextDrawFont(reg_td[17], 1);
	TextDrawSetProportional(reg_td[17], 1);
	TextDrawSetShadow(reg_td[17], 1);
	//TextDrawSetSelectable(reg_td[17],true);

	reg_td[18] = TextDrawCreate(511.466064, 253.881393, "/");
	TextDrawLetterSize(reg_td[18], 0.882999, 1.894515);
	TextDrawTextSize(reg_td[18], 520.995727, -13.999999);
	TextDrawAlignment(reg_td[18], 2);
	TextDrawColor(reg_td[18], -1);
	TextDrawSetShadow(reg_td[18], 1);
	TextDrawSetOutline(reg_td[18], 0);
	TextDrawBackgroundColor(reg_td[18], 255);
	TextDrawFont(reg_td[18], 1);
	TextDrawSetProportional(reg_td[18], 1);
	TextDrawSetShadow(reg_td[18], 1);
	//TextDrawSetSelectable(reg_td[18],true);

	LOGO[0] = TextDrawCreate(547.111389, 0.497772, "A");
	TextDrawLetterSize(LOGO[0], 0.562889, 3.501513);
	TextDrawAlignment(LOGO[0], 1);
	TextDrawColor(LOGO[0], -668439399);
	TextDrawUseBox(LOGO[0], true);
	TextDrawBoxColor(LOGO[0], 0);
	TextDrawSetShadow(LOGO[0], -3);
	TextDrawSetOutline(LOGO[0], 0);
	TextDrawBackgroundColor(LOGO[0], 51);
	TextDrawFont(LOGO[0], 2);
	TextDrawSetProportional(LOGO[0], 1);

	LOGO[1] = TextDrawCreate(562.778381, 9.462216, "RolePlay");
	TextDrawLetterSize(LOGO[1], 0.181111, 1.156979);
	TextDrawAlignment(LOGO[1], 1);
	TextDrawColor(LOGO[1], 471604479);
	TextDrawUseBox(LOGO[1], true);
	TextDrawBoxColor(LOGO[1], 0);
	TextDrawSetShadow(LOGO[1], 0);
	TextDrawSetOutline(LOGO[1], 0);
	TextDrawBackgroundColor(LOGO[1], 51);
	TextDrawFont(LOGO[1], 2);
	TextDrawSetProportional(LOGO[1], 1);

	LOGO[2] = TextDrawCreate(562.444885, 14.444438, "urora");
	TextDrawLetterSize(LOGO[2], 0.299777, 1.644801);
	TextDrawAlignment(LOGO[2], 1);
	TextDrawColor(LOGO[2], -668439399);
	TextDrawUseBox(LOGO[2], true);
	TextDrawBoxColor(LOGO[2], 0);
	TextDrawSetShadow(LOGO[2], 0);
	TextDrawSetOutline(LOGO[2], 0);
	TextDrawBackgroundColor(LOGO[2], 471604324);
	TextDrawFont(LOGO[2], 2);
	TextDrawSetProportional(LOGO[2], 1);

	LOGO[3] = TextDrawCreate(603.777770, 30.371112, "usebox");
	TextDrawLetterSize(LOGO[3], 0.000000, -0.316666);
	TextDrawTextSize(LOGO[3], 545.555541, 0.000000);
	TextDrawAlignment(LOGO[3], 1);
	TextDrawColor(LOGO[3], 471604479);
	TextDrawUseBox(LOGO[3], true);
	TextDrawBoxColor(LOGO[3], -668439399);
	TextDrawSetShadow(LOGO[3], 0);
	TextDrawSetOutline(LOGO[3], 0);
	TextDrawBackgroundColor(LOGO[3], 471604479);
	TextDrawFont(LOGO[3], 0);

	CheatPanel[0] = TextDrawCreate(644.666503, 435.562164, "usebox");
	TextDrawLetterSize(CheatPanel[0], 0.000000, 1.010738);
	TextDrawTextSize(CheatPanel[0], 457.110839, 0.000000);
	TextDrawAlignment(CheatPanel[0], 1);
	TextDrawColor(CheatPanel[0], 0);
	TextDrawUseBox(CheatPanel[0], true);
	TextDrawBoxColor(CheatPanel[0], 471604479);
	TextDrawSetShadow(CheatPanel[0], 0);
	TextDrawSetOutline(CheatPanel[0], 0);
	TextDrawFont(CheatPanel[0], 0);

	CheatPanel[1] = TextDrawCreate(484.777862, 435.566650, "usebox");
	TextDrawLetterSize(CheatPanel[1], 0.000000, 1.010738);
	TextDrawTextSize(CheatPanel[1], 457.110961, 0.000000);
	TextDrawAlignment(CheatPanel[1], 1);
	TextDrawColor(CheatPanel[1], 0);
	TextDrawUseBox(CheatPanel[1], true);
	TextDrawBoxColor(CheatPanel[1], -668439399);
	TextDrawSetShadow(CheatPanel[1], 0);
	TextDrawSetOutline(CheatPanel[1], 0);
	TextDrawFont(CheatPanel[1], 1);

	CheatPanel[2] = TextDrawCreate(460.999816, 436.057586, "CHECK");
	TextDrawLetterSize(CheatPanel[2], 0.158000, 0.918043);
	TextDrawAlignment(CheatPanel[2], 1);
	TextDrawColor(CheatPanel[2], -1);
	TextDrawUseBox(CheatPanel[2], true);
	TextDrawBoxColor(CheatPanel[2], 0);
	TextDrawSetShadow(CheatPanel[2], 0);
	TextDrawSetOutline(CheatPanel[2], 0);
	TextDrawBackgroundColor(CheatPanel[2], 51);
	TextDrawFont(CheatPanel[2], 2);
	TextDrawSetProportional(CheatPanel[2], 1);

	for(new i;i<10;i++) ChetInfo[i][cheatid1]=-1;
	new Float:DrawPos = 485.111267;
	Cheat1 = 0;
	for(new i;i<10;i++) {
		if(i > 0) DrawPos+=16.0;
		CheatText[i] = TextDrawCreate(DrawPos, 435.564666,"-");
		TextDrawColor(CheatText[i], -668439399);
		TextDrawSetShadow(CheatText[i], 0);
		TextDrawFont(CheatText[i], 2);
		TextDrawSetOutline(CheatText[i], 0);
		TextDrawLetterSize(CheatText[i],0.161109, 0.997685);
		TextDrawAlignment(CheatText[i], 1);
		TextDrawSetProportional(CheatText[i], 1);
	}
	
	specmenu = CreateMenu("Recon", 1, 15.0, 200.0, 100.0);
    AddMenuItem(specmenu,0,"Refresh");
    AddMenuItem(specmenu,0,"Kick");
    AddMenuItem(specmenu,0,"Warn");
    AddMenuItem(specmenu,0,"Ban");
    AddMenuItem(specmenu,0,"Slap");
    AddMenuItem(specmenu,0,"Stats");
    AddMenuItem(specmenu,0,"Next");
	AddMenuItem(specmenu,0,"Back");
    AddMenuItem(specmenu,0,"-EXIT-");
    
    print("[Создание ...] Текстдравов сервера");
	return 1;
}
stock PayChecks(i) {
	if(!IsAGang(i) && !IsAMafia(i)) {
		if(FI[fWHITEHOUSE][fBank] < 100000) return SendOk(i,"Казна штата пуста. Зарплаты нет");
	}
	new nalog = 0;

	new price;
	if(PI[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) price = BonusInfo[act_payday];
	else if(BonusInfo[act_select] == 2) price = BonusInfo[act_payday];
    else price = 1;

	switch(PI[i][pMember]) {
		case fLSPD,fSFPD,fLVPD: nalog = floatround((FracSalary[0][PI[i][pRank]-1])/100*Nalog[0]),PI[i][pSalary] += (FracSalary[0][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[0][PI[i][pRank]-1]-nalog);
		case fFBI: nalog = floatround(FracSalary[1][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[1][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[1][PI[i][pRank]-1]-nalog);
		case fMEDICLS,fMEDICSF,fMEDICLV: nalog = floatround(FracSalary[4][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[4][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[4][PI[i][pRank]-1]-nalog);
		case fLSNEWS,fSFNEWS,fLVNEWS: nalog = floatround(FracSalary[5][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[5][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[5][PI[i][pRank]-1]-nalog);
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: PI[i][pSalary] += FracSalary[7][PI[i][pRank]-1]*price;
		case fLCN,fYAKUZA,fRM: PI[i][pSalary] += FracSalary[6][PI[i][pRank]-1]*price;
		case fMAYOR: nalog = floatround(FracSalary[2][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[2][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[2][PI[i][pRank]-1]-nalog);
		case fWHITEHOUSE: nalog = floatround(FracSalary[8][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[8][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[8][PI[i][pRank]-1]-nalog);
		case fARMYSF,fARMYLV: nalog = floatround(FracSalary[3][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[3][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[3][PI[i][pRank]-1]-nalog);
		case fINSTRUCTORS: nalog = floatround(FracSalary[9][PI[i][pRank]-1]/100*Nalog[0]),PI[i][pSalary] += (FracSalary[9][PI[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[9][PI[i][pRank]-1]-nalog);
	}
	return 0;
}
stock PayDay() {
	load_heal();
	load_advert();
	save_other();

	condition_of_roads_ = random(3);

	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == fBALLAS) TotalGZ[0]++;
		if(GZInfo[i][gFrakVlad] == fVAGOS) TotalGZ[1]++;
		if(GZInfo[i][gFrakVlad] == fGROVE) TotalGZ[2]++;
		if(GZInfo[i][gFrakVlad] == fAZTEC) TotalGZ[4]++;
		if(GZInfo[i][gFrakVlad] == fRIFA) TotalGZ[3]++;
	}
	FI[fBALLAS][fBank] += TotalGZ[0]*65;
	FI[fVAGOS][fBank] += TotalGZ[1]*65;
	FI[fGROVE][fBank] += TotalGZ[2]*65;
	FI[fAZTEC][fBank] += TotalGZ[4]*65;
	FI[fRIFA][fBank] += TotalGZ[3]*65;
	UpdateFraction(fBALLAS,"Bank",FI[fBALLAS][fBank]);
	UpdateFraction(fVAGOS,"Bank",FI[fVAGOS][fBank]);
	UpdateFraction(fGROVE,"Bank",FI[fGROVE][fBank]);
	UpdateFraction(fAZTEC,"Bank",FI[fAZTEC][fBank]);
	UpdateFraction(fRIFA,"Bank",FI[fRIFA][fBank]);

	BizHourTime = 0;

	new bool:newday, day = GetDayNumber(), h, m, s;
	if(gCurDay != day)	{gCurDay = day; newday = true;}
	gettime(h,m,s);
	SetWorldTime(h);
	if(newday) {
		for(new i = 1; i < gBusinessCount; i ++) {
			if(gBusiness[i][bizzOwnerID] == 0) continue;
			bizz_update(i);
		}
		for(new i = 0; i < gHotelCount; i ++) {
			if(gHotels[i][hotelOwnerID] == 0) continue;
			gHotels[i][hotelBankDay] = 0,gHotels[i][hotelVisitors] = 0,SaveHotels(i);
		}
		for(new i = 1;i < MAX_FRACTIONS;i ++) {
			FI[i][fBankCash] = 0;
			mysql_pquery(connects, "UPDATE `fractions` SET `BankCash` = '0'", "", "");
		}
		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		if(day_week == 1) {
			gangtops();
		}
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;

			if(PI[i][pAdmin] > 0 && dostup[i] == 1 || gAdmin[i][7] == 1) {
				static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};

				new query[256];
				format(query,sizeof(query),"UPDATE `admin` SET `%s` = '%d', `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`blockadmin`='%d',`rep`='%d',online_status = '0' WHERE `Name` = '%s' LIMIT 1",Names_Days[day_week], gAdminTime[i],gAdmin[i][0],gAdmin[i][1],gAdmin[i][2],gAdmin[i][3],gAdmin[i][4],gAdmin[i][5],gAdmin[i][6],gAdmin[i][7],gAdmin[i][8],player_name[i]);
				mysql_pquery(connects, query, "", "");
				gAdminTime[i] = 0;
			}

			if(!PI[i][bizz_lcash]) continue;
			PI[i][bizz_lcash] = 0;
		}
		mysql_pquery(connects, "UPDATE `accounts` SET `bizz_lcash` = '0'", "", "");
	}
	for(new i = 1; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] == 0) continue;
		gHouses[i][houseRob] = false;
	}

	if(FI[fARMYLV][fMats] < 0) FI[fARMYLV][fMats] = 0;
	if(FI[fARMYSF][fMats] < 0) FI[fARMYSF][fMats] = 0;
	new string[128];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pPlayTime][0] < 20) {
			SendClientMessage(i,COLOR_LIGHTRED, "Для получения зарплаты необходимо находиться в игре минимум 20 минут");
			continue;
		}
		if(!PI[i][pAdmin] && PI[i][pRank] && PI[i][pMember] && start_work[i]) PayChecks(i);
		if(!PI[i][pVips] || PI[i][pVips] == VIP_KING) {
			if(PI[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) PI[i][pExp] += BonusInfo[act_exp];
			else if(BonusInfo[act_select] == 2) PI[i][pExp] += BonusInfo[act_exp];
		    else PI[i][pExp] += 1;
		}
		else PI[i][pExp] += vip_status[PI[i][pVips]][vip_payday];

		SendClientMessage(i, COLOR_BLUE, "[БАНКОВСКИЙ ЧЕК]");
		SendClientMessage(i, COLOR_WHITE, "=======================");

		format(string,sizeof(string),"Баланс сот.связи: "GREEN"$%i", PI[i][pMobile]);
		SendClientMessage(i,-1,string);

		if(PI[i][pVips]) {
			new zp = PI[i][pSalary]/100*vip_status[PI[i][pVips]][vip_percent_job];
			PI[i][pSalary] += zp;
		}

		format(string, sizeof(string), "Зарплата: "GREEN"$%i", PI[i][pSalary]);
		SendClientMessage(i,-1, string);

		if(PI[i][pAdmin] > 0) {
			format(string, sizeof(string), "Админ зарплата: "GREEN"$%i", 15000);
			SendClientMessage(i,-1, string);
			PI[i][pBank] += 15000;
		}
		if(PI[i][pHelper] > 0) {
			format(string, sizeof(string), "Game Support's зарплата: "GREEN"$%i", 4000);
			SendClientMessage(i,-1, string);
			PI[i][pBank] += 4000;
		}

		if(IsAArm(i) || IsACop(i) || IsANews(i) || PI[i][pMember] == fINSTRUCTORS || PI[i][pMember] == fWHITEHOUSE || PI[i][pMember] == fMAYOR) {
			format(string, sizeof(string), "Налог государству: "GREEN"%d%s", Nalog[0],"%%");
			SendClientMessage(i,-1, string);
		} 

		PI[i][pBank] += PI[i][pSalary];
		PI[i][pSalary] = 0;

		format(string,sizeof(string),"Баланс: "GREEN"$%i",PI[i][pBank]);
		SendClientMessage(i,-1,string);
		if(PI[i][pLevel] >= Nalog[1]) {
			format(string,sizeof(string),"Пенсия: "GREEN"$%i",Nalog[2]);
			SendClientMessage(i,-1,string);
			PI[i][pBank] += Nalog[2];
		}
  		SendClientMessage(i,COLOR_WHITE, "=======================");
		if(PI[i][pExp] >= (PI[i][pLevel])*6) {
			PI[i][pLevel] += 1; 
			PI[i][pExp] = 0; 
			DollahScoreUpdate(i); 
			SendClientMessage(i, CGOLD, "Поздравляем! Ваш уровень повышен");
			if(PI[i][pVips] != VIP_NONE && PI[i][pVips] != VIP_KING) {
				GiveMoney(i,vip_status[PI[i][pVips]][vip_lvl],"VIP lvl UP");
			}
		}

		PI[i][pPlayTime][0] = 0;
		PI[i][pZakonp]++;
		if(PI[i][pZakonp] > 100) PI[i][pZakonp] = 100;
		if(PI[i][pSearch] >= 1) {
			PI[i][pSearch] -= vip_status[PI[i][pVips]][vip_search];
			if(PI[i][pSearch] < 0) PI[i][pSearch] = 0;
			SetPlayerWantedLevel(i, PI[i][pSearch]);
		}
		SaveServerAccount(i);
		if(PI[i][pLevel] >= 4 && PI[i][pMPromo]) {
			new price;
			if(PI[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) price = BonusInfo[act_promocode];
			else if(BonusInfo[act_select] == 2) price = BonusInfo[act_promocode];
		    else price = 1;

			new str[128];
			format(str, sizeof(str), "Вам было зачислено: "ORANGE"$%d"G" за введённый ранее промокод",PI[i][pMPromo]*price);
			SendOk(i,str);
			GiveMoney(i,PI[i][pMPromo]*price,"промокод");
			PI[i][pMPromo] = 0;
			UpdatePlayerData(i,"pMPromo",0);
		}
		if(PI[i][pLevel] >= 4 && !PI[i][pDrugInv]) {
			PI[i][pDrugInv] = 1;
			UpdatePlayerData(i,"drunginv",1);
			new query[128];
			format(query, sizeof(query), "SELECT pDrug FROM `"TABLE_ACCOUNTS"` WHERE pID = '%d'",PI[i][pID]);
			mysql_tquery(connects,query,"reg_friend","i",i);
		}
		if(PI[i][pFamily])
		{
			if((PI[i][pGoogle] && PI[i][pRank] == FI[PI[i][pMember]][fInviteRang] && IsAGang(i))
			|| (PI[i][pGoogle] && PI[i][pRank] == FI[PI[i][pMember]][fInviteRang] && IsAMafia(i))) reputation_family(PI[i][pFamily]-1,2);
			
			if(PI[i][pGoogle] && PI[i][pRank] == FI[PI[i][pMember]][fInviteRang] && !IsAGang(i) && !IsAMafia(i)) reputation_family(PI[i][pFamily]-1,3);
			if(PI[i][pLeader]) reputation_family(PI[i][pFamily]-1,4);
			if(PI[i][pAdmin]) reputation_family(PI[i][pFamily]-1,5);
			if(PI[i][pBusiness]) reputation_family(PI[i][pFamily]-1,1);
			if(PI[i][pHotel]) reputation_family(PI[i][pFamily]-1,2);
			if(PI[i][pAirport]) reputation_family(PI[i][pFamily]-1,3);
			if(PI[i][pVips]) reputation_family(PI[i][pFamily]-1,vip_status[PI[i][pVips]][vip_fam_point]);
		}
	}
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
	SendClientMessageToAll(COLOR_YELLOW,"Список доступных вакансий: "W"/vacancy");

	return true;
}
stock split(const strsrc[], strdest[][], delimiter) {
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)) {
		if(strsrc[i] == delimiter || i == strlen(strsrc)) {
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}
stock AdmMSG(color,const str[],level) {
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
        if(PI[i][pAdmin] < level || !dostup[i]) continue;
		if(!PI[i][pAdmMSG]) continue;
        SendClientMessage(i, color, str);
    }
}
stock SendTeamMessage(color, const string[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!start_work[i]) continue;
		if(!PI[i][pSettings][1]) continue;
		if(!IsACop(i)) continue;
		SendClientMessage(i, color, string);
	}
	return true;
}
stock SendDepMessage(color, const string[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!start_work[i]) continue;
		if(!PI[i][pSettings][1]) continue;
		if(IsACop(i) || IsAArm(i) || IsAMedic(i) || IsANews(i) || IsAMayor(i) || PI[i][pMember] == fINSTRUCTORS || PI[i][pMember] == fWHITEHOUSE) {
			SendClientMessage(i, color, string);
		}
	}
	return true;
}
stock SendRadioMessage(member, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pSettings][1]) {
			if((PI[i][pMember] == member || PI[i][pLeader] == member) && start_work[i]) SendClientMessage(i, color, str);
		}
	}
}
stock SendFamilyMessage(family, color, const str[]) {
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
        if(start_work[i]) {
            if(PI[i][pSettings][1]) {
                if(PI[i][pMember] == family) {
                    SendClientMessage(i, color, str);
                }
            }
        }
    }
}
stock SendGSMessage(color, const str[]) {
    foreach(new i:Player) {
	   if(!TI[i][tLogin]) continue;
       if(!PI[i][pHelper] || !TI[i][tHelperDuty]) continue;
       SendClientMessage(i, color, str);
    }
}
stock SendDJMessage(color, const str[]) {
    foreach(new i:Player) {
	   if(!TI[i][tLogin]) continue;
       if(!DJlvl[i]) continue;
       SendClientMessage(i, color, str);
    }
}
stock SendAdminMessage(color, const str[]) {
    foreach(new i:Player) {
	   if(!TI[i][tLogin]) continue;
       if(!PI[i][pAdmin] || !dostup[i]) continue;
       SendClientMessage(i, color, str);
    }
}
stock SendFullAccessMessage(message[], color)
{
 	new count;
	foreach(new i : Player)
	{
		if(!TI[i][tLogin]) continue;
		if(IsPlayerGrandAdmin(i)) continue;

		SendClientMessage(i, color, message);
		count ++;
	}
	return count;
}
stock BizzMSG(bizz, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][bizz_work] != bizz) continue;
		if(!PI[i][pSettings][3]) continue;
		SendClientMessage(i, color, str);
    }
}
stock FamMSG(fam, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pFamily] != fam) continue;
		SendClientMessage(i, FamilyColorG[gFamily[fam-1][famColor]], str);
    }
}
CMD:referals(playerid, params[]) {
    new string[1024], Nick[24], Level,query[156];
    format(query, sizeof(query), "SELECT `Name`, `pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT 10", player_name[playerid]);
	new Cache:result = mysql_query(connects, query);
	new rows;
	string[0] = 0; FirstReferal[playerid] = 0;
   	rows = cache_num_rows();
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", Nick, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pLevel",Level);
			if(Level < 4) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+1, Nick, Level);
			else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+1, Nick, Level);
		}
		if(!D(playerid, D_REFERALS, 0, "Приглашенные", string, "Далее", "Назад")) ErrorMessage(playerid, "Недоступно, попробуйте повторить заного");
	}
	else ErrorMessage(playerid,"Вас никто не указывал как пригласившего на сервер");
	cache_delete(result);
	return true;
}
CMD:areferals(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new text = strlen(params);
	if(!text) return SendEsp(playerid, "/areferals [Nick Name]");
	if(text < 3 || text > 24) return ErrorMessage(playerid, "От 3 до 24 символов");
	new query[156];
	format(query,sizeof(query),"SELECT `Name`,`pLevel`,`pIpReg` FROM `accounts` WHERE `pDrug` = '%s'", params);
	mysql_pquery(connects, query, "all_referals", "is", playerid, params);
	return 1;
}
CMD:taxilist(playerid) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PI[playerid][bizz_work]) return ErrorMessage(playerid,"Вы должны быть за рулем такси");
	new string[650],str[128],number = 0;
	strcat(string,"№. Имя\tВызываемый класс\tНомер телефона\tРасстояние\n");
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPVarInt(i,"taxi_bizz") != PI[playerid][bizz_work]) continue;
		switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
			case 426,438: if(GetPVarInt(i,"taxi_class") != 1) continue;
			case 450,550: if(GetPVarInt(i,"taxi_class") != 2) continue;
			case 560,580: if(GetPVarInt(i,"taxi_class") != 4) continue;
			case 483: if(GetPVarInt(i,"taxi_class") != 3) continue;
		}
		number++;
		format(str,sizeof(str),""ORANGE"%d. "W"%s\t%s\t%d\t%.1f\n",number,player_name[i],taxi_class[GetPVarInt(i,"taxi_class")-1],PI[i][pPhone],GetDistanceBetweenPlayers(i,playerid)),strcat(string,str);
	}
	if(!number) return ErrorMessage(playerid,"Нет доступных заказов");
	D(playerid, D_TAXIST, DSTH, "Заказы", string, "Далее", "Закрыть");
	return 1;
}
CMD:count(playerid) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PI[playerid][bizz_work]) return ErrorMessage(playerid,"Вы должны быть за рулем такси");
	new veh = GetPlayerVehicleID(playerid),id = 0,string[200],str[56];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!IsPlayerInVehicle(i,veh)) continue;
		if(!IsPlayerGrandAdmin(playerid))
		{
			if(GetPlayerVehicleSeat(i) == 0) continue;
		}
		id++;
		format(str,sizeof(str),""ORANGE"%d. "W"%s\n",id,player_name[i]),strcat(string,str);
	}
	if(!id) return ErrorMessage(playerid,"В автомобиле нет пассажиров");
	D(playerid, D_TAXI_COUNT, DSL, ""P"Список пассажиров", string, "Принять", "Закрыть");
	return 1;
}
CMD:dice(playerid, params[])
{
	if(!PlayerToPoint(2.5,playerid,571.1072,-695.6106,1126.6760) && !PlayerToPoint(2.5,playerid,574.9941,-695.6027,1126.6760)
 	&& !PlayerToPoint(2.5,playerid,575.0890,-696.3566,1126.6760) && !PlayerToPoint(2.5,playerid,571.1873,-696.3592,1126.6760)
 	&& !PlayerToPoint(2.5,playerid,571.0538,-698.8820,1126.6760) && !PlayerToPoint(2.5,playerid,575.0101,-698.8852,1126.6760)
 	&& !PlayerToPoint(2.5,playerid,575.0218,-699.6780,1126.6760) && !PlayerToPoint(2.5,playerid,571.1284,-699.6791,1126.6760))
		return ErrorMessage(playerid, "Вы не у стола для игры 1x1");

    if(!IsPlayerGrandAdmin(playerid))
	{
		if(PI[playerid][pAdmin] >= 1) return ErrorMessage(playerid,"РЕПОРТЫ ЮЗАЙТЕ");
	}

	if(sscanf(params, "ud", params[0],params[1])) return SendEsp(playerid, "/dice [id] [ставка]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pAdmin] >= 1) return ErrorMessage(playerid,"Администратору нельзя предложить играть");
	if(params[1] < 1000 || params[1] > 1000000) return ErrorMessage(playerid, "От $1000 до $1.000.000");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(6.0, playerid, params[0])) return ErrorMessage(playerid,"Игрок далеко от Вас");
	if(TI[params[0]][tDiceClosed]) return ErrorMessage(playerid, "Данный игрок уже играет с кем то");
	if(GetPlayerMoneyEx(playerid) < params[1]) return ErrorMessage(playerid, "У Вас недостаточно средств");
	if(GetPlayerMoneyEx(params[0]) < params[1]) return ErrorMessage(playerid, "У игрока недостаточно средств");
	if(TI[playerid][tDiceTime] > unix) return ErrorMessage(playerid, "Можно играть 1 раз в 10 секунд");
	if(TI[params[0]][tDiceTime] > unix) return ErrorMessage(playerid, "Игрок недавно играл. Можно играть 1 раз в 10 секунд");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Нельзя предлагать ставку, пока не примите/отклоните запрос на игру в кости (Y N)");

	new string[1024];
	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам бросить кости. Ставка: "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);

	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"бросить кости. Ставка: "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	TI[params[0]][tDiceID] = playerid;
	TI[playerid][tDiceIDs] = params[0];
	TI[params[0]][tDiceMoney] = params[1];

	TI[playerid][tDiceClosed] = true;
	return true;
}

CMD:time(playerid, params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new string[800];
	if(PI[playerid][pFMute] > 0) {
		format(string, 128, "Заглушка: "P"%d секунд", PI[playerid][pFMute]);
		SendOk(playerid, string);
	}
	if(PI[playerid][pMute] > 0) {
		format(string, 128, "Осталось молчать: "P"%d секунд", PI[playerid][pMute]);
		SendOk(playerid, string);
	}
	if(PI[playerid][pJailTime] > 0) {
		format(string, 128, "Осталось сидеть: "P"%d секунд", PI[playerid][pJailTime]);
		SendUse(playerid, string);
	}
	if(GetPVarInt(playerid,"comp_club") > 0) {
		format(string, 128, "Осталось играть в комп. клубе: "P"%d секунд", GetPVarInt(playerid,"comp_club")/3600);
		SendUse(playerid, string);
	}
	if(PI[playerid][pHelper]) {
		format(string, 128, "Количество ответов: %d ", PI[playerid][pAsk]);
		SendUse(playerid, string);
	}
	if(!PI[playerid][pWatch]) return ErrorMessage(playerid,"У Вас нет часов. Приобрести их можно в 24-7");
	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"};
    static const Names_Days[7][12] = {"суббота","воскресенье","понедельник","вторник","среда","четверг","пятница"};
    new time_rulet;
    if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
    	time_rulet = vip_status[PI[playerid][pVips]][vip_rulet]-PI[playerid][pPlayTime][1];
    }
    else time_rulet = BonusInfo[act_timerullet]-PI[playerid][pPlayTime][1];
    format(string, sizeof(string), "\
		"W"Текущее время: "P"%02d:%02d\n\
		"W"Сегодняшняя дата: {33AA33}%s, %d %s %04d г.\n\n\
		"W"Время в игре за час:\t\t"YELLOW"%d мин\n\
		"W"Время в игре за сегодня:\t"P"%s\n\
		"W"Время в игре за вчера:\t"P"%s\n\
		"W"AFK за сегодня:\t\t"ORANGE"%s\n\
		"W"AFK за вчера:\t\t\t"ORANGE"%s\n\n\
		"W"Осталось отыграть до бесплатной прокрутки кейсов: "ORANGE"%d мин",
		hour, minuite,
		Names_Days[day_week], day, Names_Months[month-1], year,
		PI[playerid][pPlayTime][0],
		ConvertsCmdTime(gOnlinePlayer[playerid][0]),
		ConvertsCmdTime(gOnlinePlayer[playerid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][0]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][1]),
		time_rulet);
	D(playerid, DIALOG_NONE, DSM, ""P"Точное время", string, "Закрыть", "");

	format(string,sizeof(string),"~w~%02d:%02d:%02d~n~~b~%d-%s%d-%s%d",hour,minuite,second,day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	GameTextForPlayer(playerid,string,5000,1);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	if(PI[playerid][pSex] == 1) MeAction(playerid, "взглянул на часы");
	else MeAction(playerid, "взглянула на часы");
	return 1;
}
alias:animlist("anims","anim");
CMD:animlist(playerid,params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в машине");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Нельзя использовать на дуэлях");
	if(TI[playerid][tHeal]) return 1;
	if(TI[playerid][tTazer]) {
		ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1,0);
		ErrorMessage(playerid,"Вы оглушены. Действие не возможно");
		return 1;
	}
	new id;
	static const f_str[] = "1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Надеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n\
		25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n\
		45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться";
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	if(sscanf(params,"i",id)) {
		D(playerid,D_ANIM,DSL, ""P"Список анимаций", string, "Выбрать", "Отмена");
	}
	switch(id) {
		case 0: return D(playerid,D_ANIM,DSL, ""P"Список анимаций", string, "Выбрать", "Отмена");
		case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
		case 6: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
		case 7: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
		case 8: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
		case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
		case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
		case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
		case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
		case 13: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
		case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
		case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
		case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
		case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
		case 18: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
		case 19: GoAnim(playerid,"PED","handsup",4.1,0,0,0,0,0,1);
		case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
		case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
		case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
		case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
		case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
		case 25: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		case 26: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
		case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
		case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
		case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
		case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
		case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
		case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
		case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
		case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
		case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
		case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
		case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
		case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
		case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
		case 40: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
		case 41: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
		case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
		case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
		case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
		case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
		case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
		case 47: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
		case 48: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
		case 49: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
		case 50: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
		case 51: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
		case 52: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
		case 53: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
		case 54: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
		case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
		case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
		case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
		case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
		case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
		case 60: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
		case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
		case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
		case 63: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
		default: return 1;
	}
	SetPVarInt(playerid,"Animation", 2);
	TextDrawShowForPlayer(playerid, AnimDraw);
	return 1;
}
CMD:id(playerid, params[]) {
	new id = 0;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/id [Ник игрока]");
	SendClientMessage(playerid,COLOR_BLUE,"Игроки онлайн:");
	new string[144];
	if(!isNumeric(params)) {
		if(!IsPlayerConnected(strval(params))) return ErrorMessage(playerid,not_id);
		format(string, sizeof(string),"%s (%i) | LVL: %d | ID: %d",player_name[strval(params)],strval(params),PI[strval(params)][pLevel],PI[strval(params)][pID], (TI[strval(params)][tAFK] > 3) ? (""P"[AFK]"):(""));
		SendClientMessage(playerid,-1,string);
		return 1;
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(strfind(player_name[i],params, true) != -1) {
			if(id > 10) break;
			format(string, sizeof(string),"%s (%i) | LVL: %d | ID: %d",player_name[i],i,PI[i][pLevel],PI[i][pID],(TI[i][tAFK] > 3) ? (""P"[AFK]"):(""));
			SendClientMessage(playerid,-1,string);
			id++;
		}
	}
	return 1;
}
CMD:s(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(GetPVarInt(playerid,"FloodByPlayer") > unix && PI[playerid][pExp] < 3) return ErrorMessage(playerid,"Пожалуйста подождите");
	else if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/s [текст]");
	new string[145];
	format(string, sizeof(string), "%s[%d] кричит: %s", player_name[playerid],playerid,params);
	ProxDetector(35.0,playerid,string,COLOR_WHITE);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !TI[playerid][tCuffed]) ApplyAnimation(playerid,"ON_LOOKERS","shout_in",9000.999,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid, params, COLOR_WHITE, 60.0, 10000);
	SetPVarInt(playerid,"FloodByPlayer", unix+7);
	return 1;
}
CMD:kiss(playerid,params[]) {
	new kiss;
	if(PI[playerid][pJailTime] > 0) return ErrorMessage(playerid, "Нельзя использовать эту команду в тюрьме");
	if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return 1;
	if(sscanf(params,"i",kiss)) return SendEsp(playerid, "/kiss [playerid]");
	if(kiss == playerid) return ErrorMessage(playerid, "Нельзя поцеловать самого себя");
	if(!IsPlayerConnected(kiss)) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(4.0, playerid, kiss)) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(PI[kiss][pJailTime] > 0) return ErrorMessage(playerid, "Игрок в тюрьме");
	if(active_accept(kiss)) return ErrorMessage(playerid,"У игрока есть активное предложение");

	new string[128];

	format(string, sizeof(string), "Вы предложили "P"%s"G" поцелуй",player_name[kiss]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"%s"G" предложил(а) вам поцелуй",player_name[playerid]);
	SendUse(kiss, string);
	SendClientMessage(kiss,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(kiss,"kiss", playerid+1);
	return 1;
}
alias:w("whisper");
CMD:w(playerid,params[]) {
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	else if(PI[playerid][pMute] > 0) return	ErrorMessage(playerid, "У Вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/w(hisper) [сообщение]");
	new string[144];
	format(string, sizeof(string), "%s[%d] шепчет: %s", player_name[playerid],playerid, params);
	SendStreamMessage(2.0, playerid, string,0x6E6E6E6E);
	SetPlayerChatBubble(playerid,params,0x6E6E6E6E,30.0,10000);
	return 1;
}
CMD:flip(playerid) {
    if(PI[playerid][pCash] <= 0) return ErrorMessage(playerid, "У Вас недостаточно средств");

    static const  	coin_str0[] = "подбросил(а) монетку, выпал",
                    coin_str1[] = "а \"решка\".", coin_str2[] = " \"орёл\".";

	new string[MAX_PLAYER_NAME + ( sizeof ( coin_str0 ) - 1 ) + ( sizeof ( coin_str1 ) - 1 ) + 1 ] ;

    strcat(string, coin_str0);
    strcat(string, (random(2)) ? (coin_str1) : (coin_str2));

	MeAction(playerid, string);
    return 1;
}
CMD:ame(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
  	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/ame [действие]");
	//MeAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:ado(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
  	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/ado [действие]");
	//DoAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:me(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/me [действие]");
	MeAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return true;
}
CMD:do(playerid, params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/do [действие]");
	DoAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:try(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/try [действие]");
	TryAction(playerid,params);
	return 1;
}
CMD:todo(playerid,params[]) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	new Text_[129], Deistvie_[129];
	if(sscanf(params, "p<*>s[128]s[128]", Text_,Deistvie_)) return SendEsp(playerid,"/todo [текст]*[действие]");
	new string[156];
	format(string, sizeof(string), "\""W"%s{E75480}\", - сказал %s, %s",Text_,player_name[playerid],Deistvie_);
	SendStreamMessage(15.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:b(playerid,params[]) {
    if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
    new mes[128];
    if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/b [текст]");
	format(mes,sizeof(mes),"(( %s[%d]: %s ))",player_name[playerid],playerid,params);
	ProxDetector(15.0,playerid, mes, 0xcecf9cFF);
	return true;
}
CMD:stats(playerid, params[]) {
	ShowStats(playerid,playerid,0);
	return 1;
}
/*CMD:fight(playerid, params[]) {
    if(!TI[playerid][tGym]) return ErrorMessage(playerid,"Необходимо переодеться");
    if(TOTALSTYLELIST > 4) return ErrorMessage(playerid,"Очередь на бой заполнена");
    if(sscanf(params, "ui",params[0],params[1])) return SendEsp(playerid, "/fight [playerid] [ставка]");
    if(params[0] == playerid) return ErrorMessage(playerid,not_id);
    if(!TI[params[0]][tGym]) return ErrorMessage(playerid,"Игрок должен находиться в спортзале и одет в спортивную форму");
    if(params[1] < 1000 || params[1] > 10000) return ErrorMessage(playerid,"Ставка не должна быть меньше $1000 и больше $10000");
	if(PI[playerid][pCash] < params[1]) return ErrorMessage(playerid,"У Вас недостаточно средств");
	if(PI[params[0]][pCash] < params[1]) return ErrorMessage(playerid,"У игрока недостаточно средств");

	new string[144];
	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам участвовать в бою. Ставка: "ORANGE"$%d", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"участвовать в бою. Ставка: "ORANGE"$%d", player_name[params[0]],params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"fight_offer",playerid+1), SetPVarInt(params[0],"fight_price",params[1]);
	return 1;
}
CB:StartFight(playerid,i) {
	SetPlayerHealth(playerid,100);
	SetPlayerHealth(i,100);
	GameTextForPlayer(playerid,"~r~fight",1000,0);
	GameTextForPlayer(i,"~r~fight",1000,0);

	TogglePlayerControllable(playerid,true);
	return TogglePlayerControllable(i,true);
}*/
alias:skills("skill","myskills","myskill");
CMD:skills(playerid, params[]) {
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/skills [id игрока]");
    if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
    if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(params[0] == playerid) ShowSkill(playerid,params[0]),MeAction(playerid,"просматривает свои навыки оружия");
	else {
	    if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	
		new string[144];
			
		format(string, sizeof(string), ""P"%s "G"хочет показать Вам свои навыки владения оружием", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "G"показать Ваши навыки владения оружием", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"skillss", playerid + 1);
 	}
	return 1;
}
CMD:find(playerid) {
	if(PI[playerid][pMember] != fWHITEHOUSE) return 1;
	switch(PI[playerid][pRank]) {
		case MINISTRE_NEWS: D(playerid, D_FIND, DSL,""P"Выберите организацию", ""P"1."W" Радиоцентр г. ЛС\n"P"2."W" Радиоцентр г. СФ\n"P"3."W" Радиоцентр г. ЛВ", "Выбрать", "Отмена");
		case MINISTRE_MEDICS: D(playerid, D_FIND, DSL,""P"Выберите организацию", ""P"1."W" Больница г. ЛС\n"P"2."W" Больница г. СФ\n"P"3."W" Больница г. ЛВ", "Выбрать", "Отмена");
		case MINISTRE_ARMY: D(playerid, D_FIND, DSL,""P"Выберите организацию", ""P"1."W" Армия г. СФ\n"P"2."W" Армия г. ЛВ", "Выбрать", "Отмена");
		case MINISTRE_PD: D(playerid, D_FIND, DSL,""P"Выберите организацию", ""P"1."W" Полиция г. ЛС\n"P"2."W" Полиция г. СФ\n"P"3."W" Полиция г. ЛВ\n"P"4."W" ФБР", "Выбрать", "Отмена");
		default: return 1;
	}
	return 1;
}
CMD:showall(playerid) {
	if(!PI[playerid][pLeader] && PI[playerid][pMember] != fWHITEHOUSE) return 1;
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] >= MINISTRE_NEWS) {
		switch(PI[playerid][pRank]) {
			case MINISTRE_NEWS: D(playerid, D_SHOWALL_2, DSL,""P"Выберите организацию", ""P"1."W" Радиоцентр г. ЛС\n"P"2."W" Радиоцентр г. СФ\n"P"3."W" Радиоцентр г. ЛВ", "Выбрать", "Отмена");
			case MINISTRE_MEDICS: D(playerid, D_SHOWALL_2, DSL,""P"Выберите организацию", ""P"1."W" Больница г. ЛС\n"P"2."W" Больница г. СФ\n"P"3."W" Больница г. ЛВ", "Выбрать", "Отмена");
			case MINISTRE_ARMY: D(playerid, D_SHOWALL_2, DSL,""P"Выберите организацию", ""P"1."W" Армия г. СФ\n"P"2."W" Армия г. ЛВ", "Выбрать", "Отмена");
			case MINISTRE_PD: D(playerid, D_SHOWALL_2, DSL,""P"Выберите организацию", ""P"1."W" Полиция г. ЛС\n"P"2."W" Полиция г. СФ\n"P"3."W" Полиция г. ЛВ\n"P"4."W" ФБР", "Выбрать", "Отмена");
			default: {
				SALLROWS[playerid] = 0;
				new query[200];
				format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT 0, 20", PI[playerid][pMember]);
				mysql_pquery(connects, query, "showall_callback", "i", playerid);
			}
		}
	}
	else {
		SALLROWS[playerid] = 0;
		new query[200];
		format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT 0, 20", PI[playerid][pMember]);
		mysql_pquery(connects, query, "showall_callback", "i", playerid);
	}
	return 1;
}
CMD:fam(playerid,params[]) {
	if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return SendEsp(playerid, "/fam [текст]");
	new fam = PI[playerid][pFamily] - 1,string[128];
	
	format(string,sizeof(string),"%s %s: %s",GetFamName(fam,PI[playerid][pFamRank]),player_name[playerid],params[0]);
	FamMSG(fam+1,string);
	return 1;
}
CMD:finvite(playerid,params[]) {
	if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
	new string[144];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famInvRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famInvRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/finvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pFamily]) return ErrorMessage(playerid,"Игрок состоит в семье");
	if(!ProxDetectorS(3.0, playerid,params[0])) return ErrorMessage(playerid, "Вы далеко друг от друга");

	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам вступить в семью "ORANGE"%s", player_name[playerid], gFamily[PI[playerid][pFamily]-1][famName]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"вступить в вашу семью", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"family_invite",playerid + 1);
	return 1;
}
CMD:funinvite(playerid,params[]) {
	if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
	new string[144];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famUninvRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famUninvRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/funinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pFamily] != PI[playerid][pFamily]) return ErrorMessage(playerid,"Игрок не состоит в Вашей семье");
	if(params[0] == playerid) return ErrorMessage(playerid, not_id);
	if(PI[playerid][pFamRank] <= PI[params[0]][pFamRank]) return ErrorMessage(playerid,"Ваш ранг недостаточен");
	//if(!ProxDetectorS(3.0, playerid,params[0])) return ErrorMessage(playerid, "Вы далеко друг от друга");

	new fam = PI[playerid][pFamily]-1;

	format(string,128,""W"%s{%s} выгнал Вас из семьи "W"%s", player_name[playerid],FamilyColor[gFamily[fam][famColor]],gFamily[fam][famName]);
	SendClientMessage(params[0],FamilyColorG[gFamily[fam][famColor]],string);
	PI[params[0]][pFamily] = 0;
	UpdatePlayerData(params[0],"family",0);
	PI[params[0]][pFamRank] = 0;
	UpdatePlayerData(params[0],"pFamRank",0);

	format(string,128,""W"%s{%s} выгнал "W"%s{%s} из семьи", player_name[playerid],FamilyColor[gFamily[fam][famColor]],player_name[params[0]],FamilyColor[gFamily[fam][famColor]]);
	FamMSG(fam+1,string);
	return 1;
}
CMD:foffuninvite(playerid,params[]) {
	if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
	new string[144],query[144],giveplayerid;
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famUninvRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famUninvRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/foffuninvite [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");

	new member,rank;

	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", params);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid, "Данный игрок не состит в Вашей семье");
	cache_get_value_int(0,"family",member);
	cache_get_value_int(0,"pFamRank",rank);
	if(PI[playerid][pFamily] == member) {
		if(PI[playerid][pFamRank] <= rank) return ErrorMessage(playerid,"Ваш ранг недостаточен");
		new query_str[128];
		format(query_str, sizeof(query_str), "UPDATE `accounts` SET family = '0',pFamRank = '0' WHERE BINARY Name = '%s'",params);
		mysql_tquery(connects,query_str);
	}
	else ErrorMessage(playerid, "Данный игрок не состит в Вашей семье");
	cache_delete(result);

	format(string,128,""W"%s{%s} выгнал "W"%s{%s} из семьи", player_name[playerid],FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]],params,FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]]);
	FamMSG(PI[playerid][pFamily],string);
	return 1;
}
CMD:frang(playerid, params[]) {
	if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
	new string[512];
	if(PI[playerid][pFamRank] < gFamily[PI[playerid][pFamily]-1][famGiveRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", gFamily[PI[playerid][pFamily]-1][famGiveRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/frang [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pFamRank] >= 8) return ErrorMessage(playerid, not_id);
	if(PI[playerid][pFamily] != PI[params[0]][pFamily]) return ErrorMessage(playerid,"Игрок не состоит в Вашей семье");
	if(PI[playerid][pFamRank] <= PI[params[0]][pFamRank]) return ErrorMessage(playerid, "Ваш ранг недостаточен");

	if(PI[playerid][pFamRank] == 8) {
		for(new i = 1; i <= 8; i++) {
			if(i>= PI[playerid][pFamRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pFamRank] == i) ? (""P"") : (""),GetFamName(PI[playerid][pFamily]-1,i),i);
			D(playerid,D_FAM_RANK,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_fgiverank",params[0]);
	}
	else if(PI[playerid][pFamRank] == 8-(8-PI[playerid][pFamRank])) {
		for(new i = 1; i <= 8; i++) {
			if(i>= PI[playerid][pFamRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pFamRank] == i) ? (""P"") : (""),GetFamName(PI[playerid][pFamily]-1,i),i);
			D(playerid,D_FAM_RANK,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_fgiverank",params[0]);
	}
	return 1;
}
CMD:fmenu(playerid) {
	if(!PI[playerid][pFamily]) return ErrorMessage(playerid,"Вы не состоите в семье");
	family_dialog(playerid);
	return 1;
}
CMD:radio(playerid) return D(playerid, D_NEWS_SELECT_2, DSL, ""P"Эфиры", ""P"1."W" Радиоцентр LS\n"P"2."W" Радиоцентр SF\n"P"3."W" Радиоцентр LV\n"P"-"W" Выключить", "Выбрать", "Назад");
CMD:vad(playerid, params[]) {
	if(PI[playerid][pVips] != VIP_PLATINA && PI[playerid][pVips] != VIP_ECSCLUSIVE && PI[playerid][pVips] != VIP_FOREVER) return 1;
	D(playerid, D_AUTONEWS, DSL, ""P"Объявление",""P"1."W" Купить\n"P"2."W" Продать\n"P"3."W" Обменять\n"P"4."W" Услуги", "Выбрать", "Отмена");
	return 1;
}
CMD:ad(playerid, params[]) {
	if(!PI[playerid][pPhone]) return ErrorMessage(playerid,"У Вас нет телефона/SIM-карты");
	if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"К сожалению, очередь на объявления занята, попробуйте позже");
	if(GetPVarInt(playerid, #pAdvertTime) > gettime()) return ErrorMessage(playerid,"Нельзя посылать чаще одного объявления в минуту");
	if(isnull(params) || strlen(params) > 90) return SendEsp(playerid, "/ad [текст объявления]");
	SetPVarString(playerid,"advert",params);
	new price = strlen(params) * advertise_price;
	SetPVarInt(playerid,"ad_price",price);
	
	static const f_str[] = ""W"Цена объявления: "ORANGE"$%d.\n"W"Вы действительно хотите отправить объявление?";
	new string[sizeof(f_str) +1 + (-2 + 6)];
	
	format(string,sizeof(string),f_str,price);
	D(playerid,D_ADVERT_START,DSM, ""P"Объявление",string,"Да","Нет");
	return 1;
}
CMD:audience(playerid, params[]) {
    new radioall = 0,points[3],string[900],ratingLS = 0,ratingSF = 0,ratingLV = 0,procLS = 0, procSF = 0, procLV = 0;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pSettings][2] == fSFNEWS) ratingSF++, radioall++;
		if(PI[i][pSettings][2] == fLSNEWS) ratingLS++, radioall++;
		if(PI[i][pSettings][2] == fLVNEWS) ratingLV++, radioall++;
	}
	if(!radioall) return ErrorMessage(playerid,"Никто не подключен к радиостанции");
	procLS = 100 / radioall * ratingLS;
	procSF = 100 / radioall * ratingSF;
	procLV = 100 / radioall * ratingLV;
	points[0] = 100 - procLS;
	points[1] = 100 - procSF;
	points[2] = 100 - procLV;
	format(string,sizeof(string),""W"Радиоцентр г. ЛС:\t["P"%s"W"] %i%% ("ORANGE"%i"W") человек\nРадиоцентр г. СФ:\t["P"%s"W"] %i%% ("ORANGE"%i"W") человек\nРадиоцентр г. ЛВ:\t["P"%s"W"] %i%% ("ORANGE"%i"W") человек",
	ToDevelopSkills(procLS,points[0]),procLS,ratingLS,
	ToDevelopSkills(procSF,points[1]),procSF,ratingSF,
	ToDevelopSkills(procLV,points[2]),procLV,ratingLV);
	D(playerid,DIALOG_NONE,DSM,""P"Рейтинг слушателей",string,"Закрыть","");
	return true;
}
CMD:edit(playerid)
{
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Вы не сотрудник новостей");
 	if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");

	new veh = GetPlayerVehicleID(playerid), num = 0;
	
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(VehicleInfo[veh][vTeam] == fLSNEWS || VehicleInfo[veh][vTeam] == fSFNEWS || VehicleInfo[veh][vTeam] == fLVNEWS)
		{
        	ShowAdvertList(playerid);
        }
        else return ErrorMessage(playerid,"Необходимо находиться на служебном автомобиле");
	}
	else
	{
	    for(new i; i < sizeof(news_edit); i ++)
	    {
			if(IsPlayerInRangeOfPoint(playerid,3.0,news_edit[i][0],news_edit[i][1],news_edit[i][2]))
			{
			    ShowAdvertList(playerid);
			    
			    num++;
			}
		}
		
		if(num == 0) return ErrorMessage(playerid,"Необходимо находиться на рабочем месте!");
	}
	return 1;
}
CMD:ether(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Вы не сотрудник новостей");
	if(PI[playerid][pRank] < 5) return ErrorMessage(playerid, "Доступно с 5 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] == fLSNEWS || VehicleInfo[veh][vTeam] == fSFNEWS || VehicleInfo[veh][vTeam] == fLVNEWS
	|| PlayerToPoint(5.0,playerid,1263.1019,1461.2659,1114.8625)) {
		if(!TI[playerid][tEther]) {
			TI[playerid][tEther] = true;
			SendClientMessage(playerid,COLOR_GREEN,"Вы в прямом эфире");		
			PI[playerid][pSettings][2] = PI[playerid][pMember];	
			save_settings(playerid);
		}
		else {
			TI[playerid][tEther] = false;
			SendClientMessage(playerid,COLOR_GREEN,"Вы вышли из прямого эфира");
		}
	}
	else if(PlayerToPoint(5.0,playerid,1259.7885,1457.6029,1114.8402)) {
		new str[10];
		switch(TI[playerid][tEther]) {
			case 0: str = "Начать";
			case 1: str = "Завершить";
		}
		new string[128];
		format(string,sizeof(string),"1. %s прямой эфир\n2. Приём звонков",str);
		D(playerid,D_NEWS, DSL, ""P"Меню эфира", string, "Далее", "Отмена");
	}
	else ErrorMessage(playerid,"Вы не в офисе/служебном автомобиле");
	return 1;
}
CMD:skip(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Вы не сотрудник новостей");

	switch(PI[playerid][pMember]) {
		case fLSNEWS: {
			if(calls_ether[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Никого нет на линии");
			SendClientMessage(calls_ether[0],COLOR_GREY,"Вы были отсоединены ведущим");
			PhoneStatus(calls_ether[0],false);
			TI[calls_ether[0]][tPhoneNews] = true;
			calls_ether[0] = INVALID_PLAYER_ID;
		}
		case fSFNEWS: {
			if(calls_ether[1] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Никого нет на линии");
			SendClientMessage(calls_ether[1],COLOR_GREY,"Вы были отсоединены ведущим");
			PhoneStatus(calls_ether[1],false);
			TI[calls_ether[1]][tPhoneNews] = true;
			calls_ether[1] = INVALID_PLAYER_ID;
		}
		case fLVNEWS: {
			if(calls_ether[2] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Никого нет на линии");
			SendClientMessage(calls_ether[2],COLOR_GREY,"Вы были отсоединены ведущим");
			PhoneStatus(calls_ether[2],false);
			TI[calls_ether[2]][tPhoneNews] = true;
			calls_ether[2] = INVALID_PLAYER_ID;
		}
	}
	SendClientMessage(playerid,COLOR_GREY,"Игрок отсоединен");
	return 1;
}
CMD:srace(playerid,params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не состоите в банде");
	new giveplayerid,money;
	if(sscanf(params,"dd", giveplayerid,money)) return SendEsp(playerid,"/race [id игрока] [ставка]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(!IsAGang(giveplayerid)) return ErrorMessage(playerid,"Игрок не состоит в банде");
	if(!IsPlayerStream(10.0, playerid, giveplayerid) || GetPlayerVirtualWorld(giveplayerid) != GetPlayerVirtualWorld(playerid)) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(money < 1000 || money > 50000) return ErrorMessage(playerid,"Ставка должна быть не меньше $1.000 и не больше $50.000");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Вы не за рулем Т/С");
	if(GetPlayerState(giveplayerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Игрок не за рулем Т/С");
	if(active_accept(giveplayerid)) return ErrorMessage(playerid,"У игрока есть активное предложение");

	SetPVarInt(giveplayerid,"race_offer",playerid+1);
	TI[playerid][tRaceMoney] = TI[giveplayerid][tRaceMoney] = money;

	new string[144];

	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам уличные гонки на сумму "ORANGE"$%i", player_name[playerid], money);
	SendUse(giveplayerid, string);
	SendClientMessage(giveplayerid,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"уличные гонки на сумму "ORANGE"$%i", player_name[giveplayerid], money);
	SendUse(playerid, string);
	return 1;
}
stock buyacces(playerid) {
	new string[512];
	format(string,sizeof(string),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",acces_name_all[0],acces_name_all[1],acces_name_all[2],acces_name_all[3],acces_name_all[4],acces_name_all[5],acces_name_all[6],acces_name_all[7],acces_name_all[8],acces_name_all[9],acces_name_all[10],acces_name_all[11],acces_name_all[12]);
	D(playerid, D_BUYACS, DSL,""P"Покупка аксесуаров",string, "Выбрать", "Отмена");
	return true;
}
CMD:sellfish(playerid) {
	//if(PI[playerid][pLevel] < 99999) return ErrorMessage(playerid,"Временно недоступно");
	if(!PlayerToPoint(7.0,playerid,1998.3097,1337.8351,26.1508)) return ErrorMessage(playerid,"Вы не у склада для продажи рыбы");
	if(!PI[playerid][pFish]) return ErrorMessage(playerid,"У Вас нет рыбы");
	new string[128];
	format(string,sizeof(string),"Вы успешно продали "P"%.1f"G" кг. рыбы за "ORANGE"$%d",PI[playerid][pFish],floatround(PI[playerid][pFish])*160);
	SendUse(playerid,string);
	fish_sklad += PI[playerid][pFish];
	GiveMoney(playerid,floatround(PI[playerid][pFish])*160,"продажа рыбы");
	PI[playerid][pFish] = 0;
	return 1;
}
CMD:fish(playerid) {
	if(!GetPVarInt(playerid,"fish_place")) return 1;
	new place = GetPVarInt(playerid,"fish_place")-1;
	if(!PlayerToKvadrat(playerid,fish_place[place][0], fish_place[place][1],fish_place[place][2],fish_place[place][3])) return ErrorMessage(playerid,"Вы не в точке для ловли рыбы");
	if(Fishing[playerid] == true) return ErrorMessage(playerid,"Вы уже ловите рыбу");
	if(PI[playerid][pRod] == 0) return ErrorMessage(playerid,"У Вас нет удочки");
	if(PI[playerid][pRopes] == 0) return ErrorMessage(playerid,"У Вас нет снастей для удочки");
	if(PI[playerid][pWorms] == 0) return ErrorMessage(playerid,"У Вас нет наживки на удочку");
	SetPlayerArmedWeapon(playerid, 0);
	if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	TogglePlayerControllable(playerid, false);
	ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
	Fishing[playerid] = true;
	static const f_str[] = "Доступно червей: %d";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	format(string,sizeof(string),f_str,PI[playerid][pWorms]);
	SendOk(playerid,string);
	JobTempProcess[playerid] = 7;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	return 1;
}
CB: fish_player(playerid) {
	new rand_fish = random(sizeof(FishName) + 3);
	new string[150];
	TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObject(playerid, 7);
	ClearAnims(playerid);
	Fishing[playerid] = false;
	switch(rand_fish) {
		case 0..7: {
			new str[12];
			format(str,sizeof(str),"%i.%i",random(3),random(98)+1);
			new Float:fish_massa = floatstr(str);
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) fish_massa = floatround(fish_massa*BonusInfo[act_fish]);
			else if(BonusInfo[act_select] == 2) fish_massa = floatround(fish_massa*BonusInfo[act_fish]);
		    else fish_massa = floatstr(str);

			PI[playerid][pFish] += fish_massa;
			format(string,sizeof(string),"Вы поймали рыбу - "P"%s"G", масса которой - "ORANGE"%.1f"G" кг",FishName[rand_fish],fish_massa);
			SendUse(playerid,string);
			PI[playerid][pWorms] --;
		}
		case 8..9: {
			SendOk(playerid,"Рыба сорвалась");
			PI[playerid][pWorms] --;
		}
		default: SendOk(playerid,"Вы ничего не поймали. Наживка осталась цела");
	}
	return true;
}
CMD:fill(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Вы не за рулем");
	new i = GetNearestTrunckFuel(playerid);
	if(i==-1) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(vehicleid) - 400;
	if(!gTransport[modelid][trFuelable]) return ErrorMessage(playerid,"Ваше Т/С не имеет бензобака");
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(GetEngineStat(vehicleid)) return ErrorMessage(playerid,"Прежде чем заправиться, заглушите двигатель");
	if(gBusiness[i][bizzProduct] <= 0) return ErrorMessage(playerid, "На заправке нет топлива");
	static const f_str[] = "\n"W"Укажите на сколько литров заправить ваше Т/С:\n\nДоступно литров в баке: {FF9968}%.0f"W"\nВместимость бака: {FF9968}%d"W"\nМожно заправить на: {FF9968}%.0fл"W"\nСтоимость 1л: "ORANGE"$%d\n";
	new string[sizeof(f_str) +1 + 30];
	format(string, sizeof(string), f_str, VehicleInfo[vehicleid][vFuel],gTransport[modelid][trTank],gTransport[modelid][trTank]-VehicleInfo[vehicleid][vFuel],gBusiness[i][bizzPrice]);
	D(playerid,D_FUEL,DSI, ""P"Заправка",string,"Заправить", "Отмена");
	return 1;
}
CMD:buyair(playerid) {
	if(PI[playerid][pAirport]) return ErrorMessage(playerid,"У Вас уже есть аэропорт");
	new i = GetNearestAirport(playerid), string[1024];
	if(i == -1) return ErrorMessage(playerid,"Вы должны быть около аэропорта");

	if(!gAirs[i][airOwnerID]) {
		format(string,sizeof(string),""W"Данный аэропорт продается за "ORANGE"$%d",gAirs[i][airCoast]);
		D(playerid,D_AIRPORT_BUY,DSM, ""P"Аэропорт",string,"Купить","Отмена");
	}
	else ErrorMessage(playerid, "Данный аэропорт уже приобретен кем-то");
	return 1;
}
CMD:buyfuel(playerid) {
	if(PI[playerid][pFuel] == vip_status[PI[playerid][pVips]][vip_fuel]) return ErrorMessage(playerid,"Вам не поместится слишком много канистр с бензином");
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return ErrorMessage(playerid,"Вы должны быть на АЗС");
	static const f_str[] = ""W"Вы собираетесь купить канистру, стоимостью: "ORANGE"$%d\n"W"С ее помощью Вы можеет заправить свое Т/С на "P"10 литров"W"\n\n\
						  Вы действительно хотите купить канистру?";
	new string[sizeof(f_str) +1 + (-2 + 5)];
	format(string,sizeof(string),f_str,gBusiness[i][bizzPrice]*10);
	D(playerid,D_BUY_FUEL,DSM, ""P"Покупка канистры",string,"Да","Нет");
	return true;
}
CMD:fillcar(playerid, params[]) {
    if(!IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid,"Необходимо находиться в Т/С");
 	new car = GetPlayerVehicleID(playerid);
 	if(!PI[playerid][pFuel]) return ErrorMessage(playerid, "У Вас нет канистры с бензином");
	if(VehicleInfo[car][vFuel]+10 > gTransport[GetVehicleModel(car) - 400][trTank]) return ErrorMessage(playerid,"В машине, которую Вы хотите заправить достаточно топлива");
 	SendOk(playerid, "Вы дозаправили свой автомобиль 10 литрами бензина");
 	VehicleInfo[car][vFuel] += 10;
 	PI[playerid][pFuel] --;
	UpdatePlayerData(playerid,"pFuel",PI[playerid][pFuel]);
 	return true;
}
CMD:buyint(playerid) {
	if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
	if(GetPVarInt(playerid, "buy_interior") > 0) {
		new string[128];
		format(string,sizeof(string),"\n\n"W"Вы действительно хотите приобрести данный интерьер за "ORANGE"$%i\n\n",150000);
		return D(playerid, D_HOUSE_BUYINT_2, DSM,""P"Покупка интерьера",string, "Купить", "Отмена");
	}
	return 1;
}
CMD:fixcar(playerid) {
	if(!PI[playerid][pRoom] && !PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома/номера в отеле");
	new string[144];
	if(PI[playerid][pVips] != VIP_GOLD || PI[playerid][pVips] != VIP_PLATINA || PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
		format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
		D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
	}
	else {
		format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]"W" - "ORANGE"$500\n"W"2. Автомобиль №2 "P"[%s]"W" - "ORANGE"$500",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
		D(playerid,D_FIXCAR,DSL,""P"Доставить транспорт",string,"Выбрать","Закрыть");
	}
	return 1;
}
CMD:hhealme(playerid) {
	new hint = gHouses[PI[playerid][pHouse]][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return ErrorMessage(playerid,"Необходимо находиться в своём доме");
	new houseid = PI[playerid][pHouse];
	if(!gHouses[houseid][houseHealth]) return ErrorMessage(playerid, "В сейфе дома нет аптечек");
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + 60.0 < 160.0 ) health += 60.0;
	else health = 160.0;
	SetPlayerHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	gHouses[houseid][houseHealth] -= 1;
	SaveHouse(houseid);
	new string[60];
	format(string,sizeof(string),"Доступно аптечек в доме: "W"%d",gHouses[houseid][houseHealth]);
	SendOk(playerid,string);
	return 1;
}
CMD:safe(playerid) {
	if(!PI[playerid][pHouse]) return 1;
	new hint = gHouses[PI[playerid][pHouse]][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PI[playerid][pHouse]) return ErrorMessage(playerid,"Необходимо находиться в своём доме");
	new houseid = PI[playerid][pHouse];
	new mes[1024];
	format(mes,sizeof(mes),""P"1."W" Наркотики "P"[%d г.]\n"P"2."W" Аптечки "P"[%d шт.]\n"P"3."W" Деньги "P"[$%d]\n"P"4."W" Sniper Rifle "P"[%d пт.]\n"P"5."W" Country Rifle "P"[%d пт.]\n"P"6."W" M4 "P"[%d пт.]\n"P"7."W" AK-47 "P"[%d пт.]\n"P"8."W" MP5 "P"[%d пт.]\n"P"9."W" Shotgun "P"[%d пт.]\n"P"10."W" Desert Eagle "P"[%d пт.]\n"P"11."W" SD Pistol "P"[%d пт.]\n"P"12."W" Baseball Bat "P"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
	D(playerid,dSafeAction,DSL,"Сейф",mes,"Далее","Отмена");
	return 1;
}
CMD:room(playerid)
{
	if(!PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет номера в отеле");
	D(playerid, D_HOTEL_RECEPTION_2, DSL, ""P"Отель", ""P"1."W" Информация\n"P"2."W" Продлить аренду\n"P"3."W" Отказаться от аренды\n"P"4."W" Автопарк", "Выбрать", "Отмена");
	return 1;
}
CMD:hotel(playerid)
{
	if(PI[playerid][pHotel] < 1) return ErrorMessage(playerid,"У Вас нет отеля");

	D(playerid,D_HOTEL_OWNER,DSL,""P"Отель","\
		"P"1."W" Баланс отеля\n\
		"P"2."W" Снять деньги\n\
		"P"3."W" Статистика отеля\n\
		"P"4."W" Установить цену за сутки проживания\n\
		"P"5."NO" Продать отель","Выбрать","Отмена");

	return 1;
}
CMD:airport(playerid)
{
	if(PI[playerid][pAirport] < 1) return ErrorMessage(playerid,"У Вас нет аэропорта");

	D(playerid,D_AIRPORT,DSL,""P"Аэропорт","\
		"P"1."W" Баланс аэропорта\n\
		"P"2."W" Снять деньги\n\
		"P"3."W" Статистика аэропорта\n\
		"P"4."W" Установить цену за аренду\n\
		"P"5."NO" Продать аэропорт","Выбрать","Отмена");

	return 1;
}
CMD:house(playerid) {
	if(PI[playerid][pTempKey] > 0) {
		D(playerid, dRentMenu, DSL, ""P"Панель жителя", "Выселиться из дома", "Выбрать", "Закрыть");
		return 1;
	}
	if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
	SetPVarInt( playerid, "Hpanel:HId", PI[playerid][pHouse]);
	new status[24];
	if(!gHouses[PI[playerid][pHouse]][houseClose]) status = ""NO"Закрыть";
	else status = "{33AA33}Открыть";
	static const f_str[] = ""P"1."W" %s"W" дом\n"P"2."W" Информация о доме\n"P"3."W" Улучшения\n"P"4."W" Жители\n"P"5."W" Сейф\n"P"6."W" Гардероб\n"P"7."W" Доставить домашний транспорт\n"P"8."W" Продать домашний транспорт\n"P"9."W" Покупка интерьера\n"P"10."W" Отметить дом в GPS\n"P"11."NO" Продать дом";
	new string[sizeof(f_str) +1 + (-2 + 24)];
	format(string,sizeof(string),f_str,status);
	return D(playerid,D_HOUSE_MENU,2,"Управление домом",string,"Выбрать","Отмена");
}
CMD:exit(playerid) {
	if(TI[playerid][tInHouse]) {
		new houseid = TI[playerid][tSelectHouse];
		new hint = gHouses[houseid][houseHint];
		new Float:x, Float:y, Float:z;
		x = hinterior_info[hint][h_pos_exit][0];
		y = hinterior_info[hint][h_pos_exit][1];
		z = hinterior_info[hint][h_pos_exit][2];
		if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z)) {
			if(gHouses[houseid][houseImprove][2]) {
				D(playerid,D_HOUSE_EXIT,DSL,""P"Выход",""P"1."W" На улицу\n"P"2."W" В гараж","Выбрать","Отмена");
			}
			else {
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
				TI[playerid][tInHouse] = false;
				SetCameraBehindPlayer(playerid);
			}
		}
	}
	return 1;	
}
CMD:power(playerid) {
	if(TI[playerid][tDMArea][0]) {
	    SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_comp_x"),GetPVarFloat(playerid,"pos_comp_y"),GetPVarFloat(playerid,"pos_comp_z"),GetPVarInt(playerid,"comp_vw"),GetPVarInt(playerid,"comp_int"));
  		DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
		DMSTATUS[playerid] = Text3D:(0xFFFF);
		PlayerTextDrawHide(playerid,DmArenaTextDraw[playerid]);
		new query[156];
		format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pKills = pKills + '%d' WHERE pID = '%d'",TI[playerid][tDMArea][1],PI[playerid][pID]);
		mysql_tquery(connects,query,"","");
		TI[playerid][tDMArea][0] = 0;
		TI[playerid][tDMArea][1] = 0;
		TI[playerid][tDMArea][2] = 0;
		if(PI[playerid][pMember] && start_work[playerid]) {
			A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
		}
		else SetPlayerColor(playerid,0xFFFFFF11);
		DelGun(playerid);
	}
 	else if(TI[playerid][tGunArea][0]) {
	    SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_comp_x"),GetPVarFloat(playerid,"pos_comp_y"),GetPVarFloat(playerid,"pos_comp_z"),GetPVarInt(playerid,"comp_vw"),GetPVarInt(playerid,"comp_int"));
	 	DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
		DMSTATUS[playerid] = Text3D:(0xFFFF);
		PlayerTextDrawHide(playerid,DmArenaTextDraw[playerid]);
		TI[playerid][tGunArea][0] = 0;
		TI[playerid][tGunArea][1] = 0;
		TI[playerid][tGunArea][2] = 0;
		TI[playerid][tGunArea][3] = 0;
		if(PI[playerid][pMember] && start_work[playerid]) {
			A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
		}
		else SetPlayerColor(playerid,0xFFFFFF11);
		DelGun(playerid);
	}
	return 1;
}
CMD:sellhouse(playerid,const params[]) {
	if(!PI[playerid][pHouse]) return ErrorMessage(playerid,"У Вас нет дома");
	new houseid = PI[playerid][pHouse];
	if(!GetString(gHouses[houseid][houseOwner], GetName(playerid))) return ErrorMessage(playerid,"Вы не являетесь владельцем дома");
	if(!GetString(player_name[playerid],gHouses[houseid][houseOwner])) return ErrorMessage(playerid,"Вы не являетесь владельцем дома");
	if(!PlayerToPoint(4,playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ])) return ErrorMessage(playerid, "Необходимо находиться рядом со своим домом");
	if(!params[0]) {
		new string[156];
		format(string,sizeof(string),""W"Вы хотите продать дом государству за "ORANGE"$%d?\n\n"G"Для продажи дома игроку введите: /sellhouse [ID игрока] [Цена]",floatround(gHouses[houseid][housePrice]/100*80));
		D(playerid,D_HOUSE_SELL,DSM, ""P"Продажа дома",string,"Да","Нет");
		return true;
	}
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellhouse [ID игрока] [Сумма]");
	new price,price2;
	price = gHouses[houseid][housePrice];
	price2 = gHouses[houseid][housePrice]*10;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Цена за дом не может быть меньше $%d и больше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Вы далеко друг от друга");
	if(PI[params[0]][pHouse]) return ErrorMessage(playerid,"У игрока уже есть дом");
	if(PI[params[0]][pRoom]) return ErrorMessage(playerid,"У игрока уже есть номер в отеле");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new string[144];
	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам купить его дом за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Вы предложили "P"%s "G"купить Ваш дом за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"houseSeller",playerid + 1);
	SetPVarInt(playerid,"houseBuyer",params[0] + 1);
	SetPVarInt(params[0],"housePrices",params[1]);
	SetPVarInt(params[0],"houseIDs",houseid);
	return 1;
}
CMD:sellcar(playerid) {
	if(GetPVarInt(playerid,"carPokupaet")) return ErrorMessage(playerid,"У Вас активный обмен Т/С с игроком");
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет Т/С");
	new string[128];
	format(string,sizeof(string),""W"1. Автомобиль №1 "P"[%s]\n"W"2. Автомобиль №2 "P"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
	D(playerid,D_HOUSE_CARSELL,DSL,""P"Продать домашний транспорт",string,"Выбрать","Закрыть");
	return 1;
}
CMD:changecar(playerid,params[]) {
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return ErrorMessage(playerid,"У Вас нет Т/С");
	new giveplayerid,car_1,car_2,price;
	if(sscanf(params, "dddd",giveplayerid,car_1,car_2,price)) {
		SendEsp(playerid, "/changecar [ID игрока] [слот авто] [слот авто игрока] [Доплата]");
		new string[144];
		format(string,sizeof(string),"Слот №1 [%s] | Слот №2 [%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
	if(!PI[giveplayerid][pHouse] && !PI[giveplayerid][pRoom]) return ErrorMessage(playerid,"У игрока нет Т/С");
	if((car_1 < 1 && car_1 > 2) || (car_2 < 1 && car_2 > 2)) return 1;
	new model = GetVehicleModel(house_car[playerid][car_1-1]);
	if(!house_car[playerid][car_1-1] || model == 481) return ErrorMessage(playerid, "Нельзя предлагать на обмен BMX");
	if(!model) return ErrorMessage(playerid, "Выгоните автомобиль на улицу");
	if(price < 1 || price > 15000000) return ErrorMessage(playerid, "Нельзя меньше $1 и больше $15.000.000");
	if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(giveplayerid == playerid) return ErrorMessage(playerid,not_id);
	
	SetPVarInt(giveplayerid,"carProdaet",playerid + 1);
	SetPVarInt(playerid,"carPokupaet",giveplayerid + 1);
	SetPVarInt(giveplayerid,"carCena",price);
	SetPVarInt(playerid,"numbercar1",car_1);
	SetPVarInt(playerid,"numbercar2",car_2);
	SetPVarInt(playerid,"sellcar_type",1);
	
	new improve[256];
	if(gPlayerCars[giveplayerid][carVehcom_1][car_2-1]) strcat(improve,"\t\t\t[Спойлер]\n");
	if(gPlayerCars[giveplayerid][carVehcom_2][car_2-1]) strcat(improve,"\t\t\t[Капот]\n");
	if(gPlayerCars[giveplayerid][carVehcom_3][car_2-1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
	if(gPlayerCars[giveplayerid][carVehcom_4][car_2-1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
	if(gPlayerCars[giveplayerid][carVehcom_5][car_2-1]) strcat(improve,"\t\t\t[Фары]\n");
	if(gPlayerCars[giveplayerid][carVehcom_6][car_2-1]) strcat(improve,"\t\t\t[Нитро]\n");
	if(gPlayerCars[giveplayerid][carVehcom_7][car_2-1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
	if(gPlayerCars[giveplayerid][carVehcom_8][car_2-1]) strcat(improve,"\t\t\t[Диски]\n");
	if(gPlayerCars[giveplayerid][carVehcom_9][car_2-1]) strcat(improve,"\t\t\t[Стерео]\n");
	if(gPlayerCars[giveplayerid][carVehcom_10][car_2-1]) strcat(improve,"\t\t\t[Гидравлика]\n");
	if(gPlayerCars[giveplayerid][carVehcom_11][car_2-1]) strcat(improve,"\t\t\t[Передний бампер]\n");
	if(gPlayerCars[giveplayerid][carVehcom_12][car_2-1]) strcat(improve,"\t\t\t[Задний бампер]\n");

	new improve2[256];
	if(gPlayerCars[playerid][carVehcom_1][car_1-1]) strcat(improve2,"\t\t\t[Спойлер]\n");
	if(gPlayerCars[playerid][carVehcom_2][car_1-1]) strcat(improve2,"\t\t\t[Капот]\n");
	if(gPlayerCars[playerid][carVehcom_3][car_1-1]) strcat(improve2,"\t\t\t[Воздухозаборник]\n");
	if(gPlayerCars[playerid][carVehcom_4][car_1-1]) strcat(improve2,"\t\t\t[Боковая юбка]\n");
	if(gPlayerCars[playerid][carVehcom_5][car_1-1]) strcat(improve2,"\t\t\t[Фары]\n");
	if(gPlayerCars[playerid][carVehcom_6][car_1-1]) strcat(improve2,"\t\t\t[Нитро]\n");
	if(gPlayerCars[playerid][carVehcom_7][car_1-1]) strcat(improve2,"\t\t\t[Выхлопная труба]\n");
	if(gPlayerCars[playerid][carVehcom_8][car_1-1]) strcat(improve2,"\t\t\t[Диски]\n");
	if(gPlayerCars[playerid][carVehcom_9][car_1-1]) strcat(improve2,"\t\t\t[Стерео]\n");
	if(gPlayerCars[playerid][carVehcom_10][car_1-1]) strcat(improve2,"\t\t\t[Гидравлика]\n");
	if(gPlayerCars[playerid][carVehcom_11][car_1-1]) strcat(improve2,"\t\t\t[Передний бампер]\n");
	if(gPlayerCars[playerid][carVehcom_12][car_1-1]) strcat(improve2,"\t\t\t[Задний бампер]\n");

	new model1 = gPlayerCars[playerid][carModel][car_1-1]-400;
	new model2 = gPlayerCars[giveplayerid][carModel][car_2-1]-400;
	new classname[12];
	new classname2[12];
	GetCarClassName(gTransport[model1][trClass],classname);
	GetCarClassName(gTransport[model2][trClass],classname2);
	static const f_str[] = "\t\t\t"ORANGE"==== ИНФОРМАЦИЯ ====\n\n\
							"YELLOW"\t\t\tВаше авто:\n\n\
							"W"Марка авто: \t\t"P"%s\n\
							"W"Класс: \t\t\t"P"%s\n\
							"W"Пробег: \t\t"P"%.0fкм\n\
							"W"Бензобак: \t\t"P"%dл\n\
							"W"Расход: \t\t"P"%dл/100км\n\
							"W"Тюнинг:\n\
							"GREEN"%s\n\n\
							"YELLOW"\t\t\tОбмен на авто:\n\n\
							"W"Марка авто: \t\t"P"%s\n\
							"W"Класс: \t\t\t"P"%s\n\
							"W"Пробег: \t\t"P"%.0fкм\n\
							"W"Бензобак: \t\t"P"%dл\n\
							"W"Расход: \t\t"P"%dл/100км\n\
							"W"Тюнинг:\n\
							"GREEN"%s\n\n\
							"NO"Вы действительно хотите предложить обмен с его доплатой:"ORANGE" $%d?";
	new string[900];
	format(string,sizeof(string),f_str,gTransport[model1][trName],classname,gPlayerCars[playerid][carDrived][car_1-1],gTransport[model1][trTank],gTransport[model1][trConsumption],improve2,
		gTransport[model2][trName],classname2,gPlayerCars[giveplayerid][carDrived][car_2-1],gTransport[model2][trTank],gTransport[model2][trConsumption],improve,price);
	D(playerid,D_CHANGECAR,DSM, ""P"Обмен авто",string,"Да","Отмена");
	return 1;
}
CMD:free(playerid,params[]) {
	if(PI[playerid][pMember] != fWHITEHOUSE || !start_work[playerid]) return 1;
	if(PI[playerid][pRank] != 5) return ErrorMessage(playerid, "Вы не адвокат");
	if(sscanf(params,"dd",params[0],params[1])) return SendEsp(playerid, "/free [id] [цена]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!PI[params[0]][pJailTime]) return ErrorMessage(playerid, "Игрок не нуждается в Ваших услугах");
	if(params[1] < 500 || params[1] > 10000) return ErrorMessage(playerid, "От $500 до $10.000"); 
	if(!IsPlayerStream(10.0, playerid, params[0])) return ErrorMessage(playerid, "Вы далеко от игрока");
	if(GetPVarInt(params[0],"FreePrice")) return ErrorMessage(playerid,"У игрока уже есть предложение о услугах адвоката");
	if(PI[params[0]][pJail] == 5) return ErrorMessage(playerid,"Данный человек в ДеМоргане");
	new string[144];
	format(string, sizeof(string), "Вы предложили "P"%s"G" выпустить его за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid, string);
	format(string, sizeof(string), "С учётом налога государству, Вы получите: "ORANGE"$%d",floatround(params[1]/100*15));
	SendUse(playerid, string);
	format(string, sizeof(string), "Адвокат "P"%s"G" предлагает Вам воспользоваться его услугами за "ORANGE"$%d",player_name[playerid],params[1]);
	SendUse(params[0], string);
	D(params[0],D_FREE,DSL,""P"Оплата услуг адвоката", "1. Наличные\n2. Банк", "Оплатить", "Отмена");
	SetPVarInt(params[0],"FreeOffer", playerid + 1);
	SetPVarInt(params[0],"FreePrice", params[1]);
	return 1;
}

CMD:htpanel(playerid)
{
	if(PI[playerid][pHotel] < 1) return ErrorMessage(playerid,"У Вас нет отеля");
	
	D(playerid,D_HOTEL_OWNER,DSL,""P"Отель","\
		"P"1."W" Баланс отеля\n\
		"P"2."W" Снять деньги\n\
		"P"3."W" Статистика отеля\n\
		"P"4."W" Установить цену за сутки проживания\n\
		"P"5."NO" Продать отель","Выбрать","Отмена");
		
	return 1;
}

CMD:airpanel(playerid)
{
	if(PI[playerid][pAirport] < 1) return ErrorMessage(playerid,"У Вас нет аэропорта");

	if(GetString(player_name[playerid],gAirs[PI[playerid][pAirport]][airOwner]))
	{
		D(playerid,D_AIRPORT,DSL,""P"Аэропорт","\
			"P"1."W" Баланс аэропорта\n\
			"P"2."W" Снять деньги\n\
			"P"3."W" Статистика аэропорта\n\
			"P"4."W" Установить цену за аренду\n\
			"P"5."NO" Продать аэропорт","Выбрать","Отмена");
	}
	return 1;
}

CMD:bpanel(playerid) {
	if(PI[playerid][pBusiness] < 1) return ErrorMessage(playerid,"У Вас нет бизнеса");
	new bizz = PI[playerid][pBusiness];
	new status[24];
	if(gBusiness[bizz][bizzStatus]) status = ""NO"Закрыть";
	else status = "{33AA33}Открыть";
	switch(gBusiness[bizz][bizzType]) {
		case 1,2,6,7,9,17: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Улучшения\n"P"6."W" Установить цену за товар\n"P"7."W" Статистика доходов\n"P"8."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
		case 8: {
			D(playerid,D_BIZZ_5,DSL,""P"Управление бизнесом",""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4."W" Улучшения\n"P"5."W" Установить цену за товар\n"P"6."W" Статистика доходов\n"P"7."NO" Продать бизнес","Выбрать","Отмена");
		}
		case 5,18: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Улучшения\n"P"6."W" Статистика доходов\n"P"7."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_4,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
		case 3,4,13: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Заказать продукты\n"P"3."W" Информация о бизнесе\n"P"4. %s "W"бизнес\n"P"5."W" Улучшения\n"P"6."W" Установить цену за товар\n"P"7."W" Установить цену за вход\n"P"8."W" Статистика доходов\n"P"9."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_2,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
		case 10,12,16: {
			static const f_str[] = ""P"1."W" Управление кассой\n"P"2."W" Информация о бизнесе\n"P"3. %s "W"бизнес\n"P"4."W" Установить цену за товар\n"P"5."W" Установить цену за вход\n"P"6."W" Статистика доходов\n"P"7."NO" Продать бизнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_3,DSL,""P"Управление бизнесом",string,"Выбрать","Отмена");
		}
 		case 11: {
			if(PI[playerid][pBusiness] == bizz) {
				return D(playerid, D_BIZZ_TAXI, DSL, ""P"Меню таксопарка", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Управление цветом шашки\n"P"6."W" Управление названием таксопарка\n"P"7."W" Управление текстом на автомобилях\n"P"8."W" Изменение тарифов\n"P"9."W" Изменение процента от прибыли\n"P"10."W" Покупка номера телефона\n"P"11."W" Сотрудники\n"P"12."W" Статистика\n"P"13."W" Продать таксопарк", "Выбрать", "Отмена");
			}
			else if(PI[playerid][bizz_work] == bizz && PI[playerid][bizz_status] == 5) {
				return D(playerid, D_BIZZ_TAXI_ZAM, DSL, ""P"Меню таксопарка", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
			}
			else return ErrorMessage(playerid,"Управление таксопарком доступно только руководителю бизнеса и управляющему");
		}
		case 14: {
			if(PI[playerid][pBusiness] == bizz) {
    			return D(playerid, D_BIZZ_TK, DSL, ""P"Меню транспортной компании", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Управление названием транспортной компании\n"P"6."W" Изменение процента от прибыли\n"P"7."W" Сотрудники\n"P"8."W" Статистика\n"P"9."W" Продать транспортную компанию", "Выбрать", "Отмена");
			}
			else if(PI[playerid][bizz_work] == bizz && PI[playerid][bizz_status] == 2) {
				return D(playerid, D_BIZZ_TK_ZAM, DSL, ""P"Меню транспортной компании", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
			}
			else return ErrorMessage(playerid,"Управление транспортной компанией доступно только руководителю бизнеса и управляющему");
		}
		case 15: {
			if(PI[playerid][pBusiness] == bizz) {
				return D(playerid, D_BIZZ_BO, DSL, ""P"Меню банковского отделения", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление цветом\n"P"4."W" Управление названием банковского отделения\n"P"5."W" Изменение комиссии переводов\n"P"6."W" Изменение комиссии за оплату недвижимости\n"P"7."W" Изменение комиссии за пользование банкоматами\n"P"8."W" Управление банкоматами\n"P"9."W" Статистика\n"P"10."W" Продать банковское отделение", "Выбрать", "Отмена");
			}
			else if(PI[playerid][bizz_work] == bizz && PI[playerid][bizz_status] == 2) {
				return D(playerid, D_BIZZ_BO_ZAM, DSL, "Меню банковского отделения", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
			}
			else return ErrorMessage(playerid,"Управление банковским отделением доступно только руководителю бизнеса и управляющему");
		}
		default: return 1;
	}
	return 1;
}
CMD:buyfueling(playerid) {
	if(PI[playerid][pBusiness]) return ErrorMessage(playerid,"У Вас уже есть бизнес");
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return ErrorMessage(playerid,"Вы должны быть на АЗС");
	SetPVarInt(playerid,"bfillingid",i);
	new string[128];
	if(!gBusiness[i][bizzOwnerID]) {
		format(string,sizeof(string),""W"Данная АЗС продается за "ORANGE"$%d",gBusiness[i][bizzSellPrice]);
		D(playerid,D_BIZZ_BUY_FILL,DSM, ""P"Бизнес",string,"Купить","Отмена");
	}
	else ErrorMessage(playerid, "Данная Автозаправочная станция уже приобретена кем-то");
	return 1;
}
CMD:norent(playerid,params[]) {
	new plane = -1;
	for(new i=1;i<=gPlaneCount;i++) {
		if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
	}
	if(plane == -1) return ErrorMessage(playerid,"Вы не арендуете воздушный транспорт");
	SetVehicleParamsEx(gAirplanes[plane][aCar],engine,lights,alarm,0,bonnet,boot,objective);
	SetString(gAirplanes[plane][aOwner], "State");
	gAirplanes[plane][aTime] = 0;
	UpdateDynamic3DTextLabelText(gAirplanes[plane][aText],-1,"Не арендован");
	SavePlane(plane);
	SendOk(playerid,"Вы отказались от аренды воздушного транспорта");
	return 1;
}
CMD:p(playerid) {
	if(TI[playerid][tPhoneOnline]) return ErrorMessage(playerid,"Ваш телефон выключен");
	if(TI[playerid][tPhoneCalled] != INVALID_PLAYER_ID && TI[playerid][tPhoneCaller] != INVALID_PLAYER_ID && TI[playerid][tPhone] == false) {
		new id = TI[playerid][tPhoneCaller];
		if(TI[playerid][tPhoneCalled] != playerid) {
			TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
			TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
			PhoneStatus(playerid,false);
			return SendOk(playerid,"Телефон абонента вне зоны действия сети");
		}
		SendOk(id,"Игрок ответил на Ваш звонок");
		TI[playerid][tPhone] = true;
		TI[id][tPhone] = true;
		PhoneStatus(playerid,true);
	}
	return 1;
}
CMD:h(playerid) {
	for(new i; i<sizeof(calls_ether); i++) {
		if(calls_ether[i] == playerid) {
			SendOk(playerid,"Вы положили трубку");
			PhoneStatus(playerid,false);
			TI[calls_ether[i]][tPhoneNews] = true;
			calls_ether[i] = INVALID_PLAYER_ID;
			SendOk(calls_news[i],"Игрок положил трубку");
			return 1;
		}
	}
	if(TI[playerid][tPhoneCalled] != INVALID_PLAYER_ID && TI[playerid][tPhoneCaller] != INVALID_PLAYER_ID) {
		new id;
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];
		TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[id][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[id][tPhoneCaller] = INVALID_PLAYER_ID;
		SendOk(playerid,"Вы положили трубку");
		SendOk(id,"Игрок положил трубку");
		if(TI[playerid][tPhone] == true) PhoneStatus(playerid,false);
		if(TI[id][tPhone] == true) PhoneStatus(id,false);
		TI[playerid][tPhone] = false;
		TI[id][tPhone] = false;
	}
	return 1;
}
CMD:sms(playerid, params[]) {
	if(!PI[playerid][pPhone]) return ErrorMessage(playerid,"У Вас нет мобильного телефона");
	if(sscanf(params,"ds[128]",params[0],params[1])) return SendEsp(playerid, "/sms [номер телефона] [текст]");
	if(params[0] == PI[playerid][pPhone]) return ErrorMessage(playerid,"Телефон абонента вне зоны действия сети");
	if(PI[playerid][pVips] != VIP_PLATINA || PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
		if(PI[playerid][pMobile] < 5) return ErrorMessage(playerid,"Недостаточно средств на счету телефона");
	}
	if(GetPVarInt(playerid,"takephone")) return ErrorMessage(playerid, "У Вас нет телефона");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(PI[playerid][pMute]) return ErrorMessage(playerid,"У Вас бан чата");
	new bool:isnumber = false,string[156];
	if(params[0] == 0) return ErrorMessage(playerid, "Телефон абонента вне зоны действия сети");
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(params[0] == PI[i][pPhone]) {
			if(TI[i][tPhoneOnline]) return ErrorMessage(playerid, "Телефон абонента выключен");
			format(string, sizeof(string), "SMS: %s » Получатель: %s(%i) [т. %i]",params[1], player_name[i],i,PI[i][pPhone]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "SMS: %s « Отправитель: %s(%i) [т. %i]",params[1],player_name[playerid],playerid, PI[playerid][pPhone]);
			SendClientMessage(i,  COLOR_YELLOW, string);
			SetPlayerChatBubble(playerid, "Отправил СМС", COLOR_PURPLE, 10.0, 3000);

			foreach(new x:Player) {
				if(GetPVarInt(x, "BigEarSms") != 1) continue;
				format(string, 120, "[A] SMS: %s | отправил %s(%i) игроку %s(%d)", params[1],player_name[playerid],playerid,player_name[i],i);
				SendClientMessage(x, COLOR_GREY, string);
			}

			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			if(PI[playerid][pVips] != VIP_PLATINA && PI[playerid][pVips] != VIP_ECSCLUSIVE && PI[playerid][pVips] != VIP_FOREVER) PI[playerid][pMobile] -= 5;
			isnumber = true;
			break;
		}
	}
	if(!isnumber) return ErrorMessage(playerid, "Телефон абонента вне зоны действия сети");
	return 1;
}
alias:call("c");
CMD:call(playerid,params[]) {
	if(PI[playerid][pPhone] == 0) return ErrorMessage(playerid,"У Вас нет мобильного телефона");
	if(TI[playerid][tPhone] == true) return ErrorMessage(playerid,"Вы уже разговариваете по телефону");
	else if(GetPVarInt(playerid,"takephone")) return ErrorMessage(playerid, "У Вас нет телефона");
	if(PI[playerid][pMute]) return ErrorMessage(playerid,"У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	new number;
	if(sscanf(params,"i",number)) {
		new str[100];
		for(new i = 1; i < gFuncBusinessCount;i++)
		{
			if(FuncBizz[FuncBizz[i][funcbID]][funcbNum] == 0) continue;
			
			switch(gBusiness[FuncBizz[i][funcbID]][bizzType])
			{
				case 11,14: format(str, sizeof(str), "Таксопарк %s - %d\n", FuncBizz[FuncBizz[i][funcbID]][funcbName],FuncBizz[FuncBizz[i][funcbID]][funcbNum]);
			}
			SendClientMessage(playerid,COLOR_GREY,str);
		}
		SendClientMessage(playerid,COLOR_GREY,"Служба спасения - 911");
		return 1;
	}
	if(number == PI[playerid][pPhone]) return ErrorMessage(playerid,"Телефон абонента вне зоны действия сети");
	new ids[4];
	for(new i = 1; i < gFuncBusinessCount;i++)
	{
		if(FuncBizz[FuncBizz[i][funcbID]][funcbNum] == 0) continue;
		if(number == FuncBizz[FuncBizz[i][funcbID]][funcbNum]) {
			for(new x = GetVehiclePoolSize()+1; --x != 0;) {
				if(!IsValidVehicle(x)) continue;
				if(!IsVehicleOccupied(x)) continue;
				if(VehicleInfo[x][vBizz] != FuncBizz[i][funcbID]) continue;
				switch(GetVehicleModel(x)) {
					case 426,438: ids[0] ++;
					case 540,550: ids[1] ++;
					case 560,580: ids[3] ++;
					case 483: ids[2] ++;
				}
			}
			static const f_str[] = ""W"Вы дозвонились в таксопарк {%s}%s\n\
									"W"Выберите класс такси который хотите вызвать:\n\
									"ORANGE"1. "W"Эконом\t\t- "GREEN"$%d/1км.	"W"Водителей: "P"%d\n\
									"ORANGE"2. "W"Комфорт\t\t- "GREEN"$%d/1км.	"W"Водителей: "P"%d\n\
									"ORANGE"3. "W"Микроавтобус\t- "GREEN"$%d/1км.	"W"Водителей: "P"%d\n\
									"ORANGE"4. "W"Бизнес\t\t- "GREEN"$%d/1км.	"W"Водителей: "P"%d";
			new string[sizeof(f_str) +1 + (-2 + 16) + (-2 + 20) + (-2 + 7) + (-2 + 7) + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,color_td[FuncBizz[FuncBizz[i][funcbID]][funcbColor]][col_rgb],FuncBizz[FuncBizz[i][funcbID]][funcbName],FuncBizz[FuncBizz[i][funcbID]][funcbTarif][0],ids[0],
												FuncBizz[FuncBizz[i][funcbID]][funcbTarif][1],ids[1],
												FuncBizz[FuncBizz[i][funcbID]][funcbTarif][2],ids[2],
												FuncBizz[FuncBizz[i][funcbID]][funcbTarif][3],ids[3]);
			D(playerid,D_TAXI_CALL,DSL,""P"Таксопарк",string,"ОК","Отмена");
			SetPVarInt(playerid,"taxi_call_bizz",FuncBizz[i][funcbID]);
			return 1;
		}
	}
	switch(number) {
		case 0000: {
			if(!PI[playerid][pDonateBank]) return 1;
			return D(playerid, D_DONATE_BANK_2, DSL, ""P"Выберите банк", ""P"1."W" Банк г.ЛС\n"P"2."W" Банк г.СФ\n"P"3."W" Банк г.ЛВ", "Выбрать", "Отмена");
		}
		case 911: return D(playerid, D_CALL_SERVICESS, DSL, ""P"Выберите сервис", ""P"1."W" Полиция\n"P"2."W" Скорая помощь\n"P"3."W" Механик", "Выбор", "Отмена");
		case 111: {
			if(PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
				if(PI[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно средств на счету телефона");
			}
			if(calls_news[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Приём звонков отключен");
			if(calls_ether[0] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Линия занята");
			if(PI[playerid][pMember] == fLSNEWS) return ErrorMessage(playerid,"Вы не можете звонить в свою студию");
			if(random(3)) return ErrorMessage(playerid,"Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Вы в прямом эфире");
			SendOk(calls_news[0],"Игрок дозвонился в прямой эфир");
			SendOk(calls_news[0],"Чтобы закончить разговор, введите: "W"/skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			PhoneStatus(playerid,true);
			calls_ether[0] = playerid;
			PI[playerid][pSettings][2] = fLSNEWS;
			TI[playerid][tPhoneNews] = true;
		}
		case 222: {
			if(PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
				if(PI[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно средств на счету телефона");
			}
			if(calls_news[1] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Приём звонков отключен");
			if(calls_ether[1] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Линия занята");
			if(PI[playerid][pMember] == fSFNEWS) return ErrorMessage(playerid,"Вы не можете звонить в свою студию");
			if(random(3)) return ErrorMessage(playerid,"Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Вы в прямом эфире");
			SendOk(calls_news[1],"Игрок дозвонился в прямой эфир");
			SendOk(calls_news[1],"Чтобы закончить разговор, введите: "W"/skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,330,6);
			calls_ether[1] = playerid;
			PI[playerid][pSettings][2] = fSFNEWS;
			TI[playerid][tPhoneNews] = true;
		}
		case 333: {
			if(PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
				if(PI[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно средств на счету телефона");
			}
			if(calls_news[2] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Приём звонков отключен");
			if(calls_ether[2] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Линия занята");
			if(PI[playerid][pMember] == fLVNEWS) return ErrorMessage(playerid,"Вы не можете звонить в свою студию");
			if(random(3)) return ErrorMessage(playerid,"Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Вы в прямом эфире");
			SendOk(calls_news[2],"Игрок дозвонился в прямой эфир");
			SendOk(calls_news[2],"Чтобы закончить разговор, введите: "W"/skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,330,6);
			calls_ether[2] = playerid;
			PI[playerid][pSettings][2] = fLVNEWS;
			TI[playerid][tPhoneNews] = true;
		}
		default: {
			if(PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
				if(PI[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно средств на счету телефона");
			}
			new bool:isnumber = false ;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(PI[i][pPhone] == number) {
					if(SERIU[i][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Телефон абонента выключен");
					if(TI[i][tPhoneOnline]) return ErrorMessage(playerid, "Телефон абонента выключен");
					if(TI[i][tPhone]) return ErrorMessage(playerid, "Абонент занят");
					TI[playerid][tPhoneCaller] = playerid;
					TI[playerid][tPhoneCalled] = i;
					TI[i][tPhoneCaller] = playerid;
					TI[i][tPhoneCalled] = i;
					new string[128];
					format(string,sizeof(string),"Исходящий вызов "P"» "GREEN"[т. %d]"G" | сбросить вызов - "NO"/h",PI[i][pPhone]);
					SendClientMessage(playerid,COLOR_GREY,string);
					
					format(string,sizeof(string),"Входящий вызов "P"« "GREEN"[т. %d]",PI[playerid][pPhone]);
					SendClientMessage(i,COLOR_GREY,string);
					SendClientMessage(i,-1,"Введите "YES"/p "W"чтобы принять вызов, "NO"/h "W"для отказа");

					MeAction(i,"звонит мобильный телефон");
					
					PhoneStatus(playerid,true);
					if(PI[playerid][pVips] != VIP_ECSCLUSIVE || PI[playerid][pVips] != VIP_FOREVER) {
						if(PI[playerid][pMobile] > 10) PI[playerid][pMobile] -= 10;
					}
					isnumber = true;
					break;
				}
			}
			if(!isnumber) return ErrorMessage(playerid, "Телефон абонента вне зоны действия сети");
		}
	}
	return 1;
}
CMD:togphone(playerid) {
	if(PI[playerid][pPhone] == 0) return ErrorMessage(playerid,"У Вас нет мобильного телефона");
	if(!TI[playerid][tPhoneOnline]) TI[playerid][tPhoneOnline] = true,SendOk(playerid, "Телефон выключен");
	else if(TI[playerid][tPhoneOnline]) TI[playerid][tPhoneOnline] = false,SendOk(playerid, "Телефон включен");
	return 1;
}
CMD:book(playerid) {
	if(!PI[playerid][pBook]) return ErrorMessage(playerid,"У Вас нет телефонной книги");
	new string[1512],str[128],status[25];
	strcat(string,"Номер\tИмя\tСтатус\n");
	for(new i; i < 25; i ++) {
		new id = GetPlayerID(pPhoneName[playerid][i]);
		if(IsPlayerConnected(id)) status = "{33AA33}Online";
		else status = "{AA3333}Offline";
		if(PI[playerid][pPhoneNumber][i] == 0) strcat(string,"--\t--\t--\n");
		else format(str, sizeof(str), "%d\t%s\t%s\n", PI[playerid][pPhoneNumber][i],pPhoneName[playerid][i],status),strcat(string,str);
	}
	D(playerid, D_BOOK, DSTH, "Телефонная книга", string, "Выбрать", "Отмена");
	return true;
}
/*CMD:healme(playerid) {
	if(!PI[playerid][pMedKit]) return ErrorMessage(playerid, "У Вас нет аптечки");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Нельзя использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Нельзя использовать на дуэлях");
	//if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + 60.0 < 160.0 ) health += 60.0;
	else health = 160.0;
	SetPlayerHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	//SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	PI[playerid][pMedKit] -= 1;
	UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
	return 1;
}*/
CMD:healme(playerid) {
	if(!PI[playerid][pMedKit]) return ErrorMessage(playerid, "У Вас нет аптечки");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Нельзя использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Нельзя использовать на дуэлях");
	//if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + vip_status[PI[playerid][pVips]][vip_useheal] < vip_status[PI[playerid][pVips]][vip_hp]) health += vip_status[PI[playerid][pVips]][vip_useheal];
	else health = vip_status[PI[playerid][pVips]][vip_hp];
	if(health > vip_status[PI[playerid][pVips]][vip_hp]) health = vip_status[PI[playerid][pVips]][vip_hp];
	SetPlayerHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	new string[13];
	format(string,sizeof(string),"+%d HP",vip_status[PI[playerid][pVips]][vip_useheal]);
	SetPlayerChatBubble(playerid,string,COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	//SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	PI[playerid][pMedKit] -= 1;
	UpdatePlayerData(playerid,"pMedKit",PI[playerid][pMedKit]);
	return 1;
}
CMD:mask(playerid) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(!PI[playerid][pMask]) return ErrorMessage(playerid, "У Вас нет маски");
	if(TI[playerid][tMaskTime]) return ErrorMessage(playerid, "Вы уже одели маску");
	if(TI[playerid][tDMArea][0]) return ErrorMessage(playerid, "Нельзя использовать на данном мероприятии");
	if(TI[playerid][tGunArea][0]) return ErrorMessage(playerid, "Нельзя использовать на данном мероприятии");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Нельзя использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Нельзя использовать на дуэлях");
	SetPlayerColor(playerid, 0x7a766700);
	new mask_time[] = {10,15,17,20,25,30,40,20};
	new string[64];
	format(string,sizeof(string),"Вы надели маску. Ваше местоположение скрыто на %d минут",mask_time[PI[playerid][pVips]]);
	SendOk(playerid, string);
	GameTextForPlayer(playerid, "~b~Invisible on", 5000, 3);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);

	ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetPlayerAttachedObject(playerid, 8, 19801, 2, 0.064999, 0.028999, 0.000000, 0.000000, 80.300003, 178.900009, 1.330000, 1.25, 1.125000);

	TI[playerid][tMaskTime] = mask_time[PI[playerid][pVips]];
	SetPlayerChatBubble(playerid, "Надевает маску", COLOR_ORANGE, 30.0, 10000);
	PI[playerid][pMask] -= 1;
	UpdatePlayerData(playerid,"pMask",PI[playerid][pMask]);
	return 1;
}
CMD:maskoff(playerid) {
	if(!TI[playerid][tMaskTime]) return ErrorMessage(playerid, "Вы не в маске");
	if(PI[playerid][pMember] && start_work[playerid]) SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	else SetPlayerColor(playerid,0xFFFFFF11);
	if(TI[playerid][tMasked]) SetPlayerColor(playerid,gFractionSpawn[TI[playerid][tMasked]][fracColor]);
	RemovePlayerAttachedObject(playerid, 8);
	SendOk(playerid,"Вы сняли маску");
	TI[playerid][tMaskTime] = 0;
	return 1;
}
CMD:unmask(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(sscanf(params, "i", params[0])) return SendEsp(playerid,"/unmask [playerid]");
	if(TI[params[0]][tMaskTime] <= 0) return ErrorMessage(playerid,"На игроке нет маски");
	SetPlayerColor(params[0],gFractionSpawn[PI[params[0]][pMember]][fracColor]);
	TI[params[0]][tMaskTime] = 0;
	RemovePlayerAttachedObject(params[0], 8);
	new string[128];
	format(string,sizeof(string),"снял(а) маску с %s",player_name[params[0]]);
	MeAction(playerid, string);
	return 1;
}
CMD:flowers(playerid, params[]) {
	if(sscanf(params, "i", params[0])) return SendEsp(playerid,"/flowers [playerid]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Вы далеко друг от друга");
	if(GetPlayerWeapon(playerid) != 14) return ErrorMessage(playerid,"У Вас нет цветов");
	if(params[0] == playerid)  return  ErrorMessage(playerid,"Вы указали свой ID");
	new weapons[13][2],string[64];
	for(new S = 0; S<13; S++) GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
	ResetPlayerWeapons(playerid) ;
	for(new S = 0; S<13 ; S++) if(weapons[S][0] != 14 && weapons[S][0] != 0) AC_GivePlayerWeapon (playerid,weapons[S][0],weapons[S][1]);
	AC_GivePlayerWeapon(params[0], 14, 1);
	format(string,sizeof(string),"подарил(а) цветы %s",player_name[params[0]]);
	MeAction(playerid, string);
	MeAction(params[0], "принял(а) цветы");
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return 1;
}
CB: RemovePlayerAttachedObjectDelay(playerid,slot) {
	RemovePlayerAttachedObject(playerid,slot);
}
CMD:zonestatus(playerid) {
	if(PI[playerid][pJob] != 6) return ErrorMessage(playerid, "Вы не работаете косильщиком");
	static const f_str[] =
	    "Зона\t\t\tПрогресс\n\
    	"P"1."W" Зона таксопарк Лос-Сантос\t\t\t"G"[%d / 33]\n\
    	"P"2."W" Зона пляж Verona Beach\t\t\t"G"[%d / 46]\n\
    	"P"3."W" Зона белый дом\t\t\t"G"[%d / 58]\n\
    	"P"4."W" Зона больница Лос-Сантос\t\t\t"G"[%d / 37]\n\
    	"P"5."W" Зона мэрия Лос-Сантос\t\t\t"G"[%d / 49]\n\
    	"P"6."W" Зона Глен-парк №1\t\t\t"G"[%d / 95]\n\
    	"P"7."W" Зона Глен-парк №2\t\t\t"G"[%d / 80]";
    new string[sizeof(f_str) + 20];
    format(string, sizeof(string), f_str, check_taxi_park, check_verona_beach, check_white_house, check_medic_ls, check_mayor_ls,check_glenpark_1,check_glenpark_2);
    D(playerid, D_JOB_GAZON_2, DSTH, ""P"Зоны для скашивания", string, "Выбрать","");
    return 1;

}
CMD:endrent(playerid) {
	if(TI[playerid][tArendaCar] == -1) return ErrorMessage(playerid,"Вы не арендовывали рабочее Т/С");
	if(GetPVarInt(playerid,"bus_id")) SetVehicleToRespawn(GetPVarInt(playerid,"bus_id"));
	else if(GetPVarInt(playerid,"mehjob")) SetVehicleToRespawn(GetPVarInt(playerid,"mehjob"));
	else if(GetPVarInt(playerid,"prod_vehicle_id")) SetVehicleToRespawn(GetPVarInt(playerid,"prod_vehicle_id"));
	else if(GetPVarInt(playerid,"eatjob")) SetVehicleToRespawn(GetPVarInt(playerid,"eatjob"));
	else if(GetPVarInt(playerid,"clear_id")) SetVehicleToRespawn(GetPVarInt(playerid,"clear_id"));
	else if(GetPVarInt(playerid,"veh_id_cleaner")) SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_cleaner"));
	else ErrorMessage(playerid,"Вы не арендовывали рабочее Т/С");
	return 1;
}
CMD:prods(playerid) {
	if(GetPVarInt(playerid,"prod_vehicle_id") == GetPlayerVehicleID(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		D(playerid,dProdList,DSL,""P"Продукты",""P"1."W" Список бизнесов\n"P"2."W" Купить продукты","Выбрать","Отмена");
		return 1;
	}
	else ErrorMessage(playerid,"Вы не в машине для развозки продуктов/топлива");
	return 1;
}
CMD:sanek3(playerid) {
	D(playerid,D_CHOOSE,DSI, ""P"Скачки","{ffffff}Вы можете поставить деньги на любую лошадь.\nНапишите номер лошади [1-4] и ставку [50-200] через точку, чтобы сделать ставку\nНапример: 1.100 [Вы поставите на лошадь №1 - 100$]","Поставить","Отмена");
	return 1;
}
CMD:sanek(playerid) {
	UpdateDynamic3DTextLabelText(Horses3D, 0xFFFFFFFF,"Информационный экран по лошадиным скачкам\nСтатус: {9ACD32}Начало{ffffff}\nНажмите: `H`");
	SetTimer("HorseStartTimer", 2000, 0);
	RaceStarted = 1;
	HorseCD = 3;
	HorseStop = 0;
	HorseAnimCount = 1;
	return 1;
}
CMD:sanek2(playerid) {
	if(GetPVarInt(playerid,"Watching") == 0) {
		SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(playerid, 318.7538, -1998.8700, 17.8250, 1);
		TogglePlayerControllable(playerid, 0);
		TextDrawShowForPlayer(playerid,BG[1]);
		TextDrawShowForPlayer(playerid,BG[0]);
		TextDrawShowForPlayer(playerid,Start2);
		TextDrawShowForPlayer(playerid,Finish2);
		for(new po = 0;po < 4;po++) {
			TextDrawShowForPlayer(playerid,Horse[po]);
			TextDrawShowForPlayer(playerid,HorseNum[po]);
		}
		TextDrawShowForPlayer(playerid,Start);
		TextDrawShowForPlayer(playerid,Finish);
		SetPVarInt(playerid,"Watching",1);
		SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(playerid, 318.7538, -1998.8700, 17.8250, 1);
		SendClientMessage(playerid, -1, "Вы начали просмотр лошадинных гонок! Чтобы закончить просмотр нажмите `H`!");
	}
	else {
		TogglePlayerControllable(playerid, 1);
		TextDrawHideForPlayer(playerid,BG[1]);
		TextDrawHideForPlayer(playerid,BG[0]);
		SetCameraBehindPlayer(playerid);
		TextDrawHideForPlayer(playerid,Start2);
		TextDrawHideForPlayer(playerid,Finish2);
		for(new po = 0;po < 4;po++) {
			TextDrawHideForPlayer(playerid,Horse[po]);
			TextDrawHideForPlayer(playerid,HorseNum[po]);
		}
		TextDrawHideForPlayer(playerid,Start);
		TextDrawHideForPlayer(playerid,Finish);
		SetPVarInt(playerid,"Watching",0);
	}
	return 1;
}
CMD:setspawn(playerid) {
	if(PI[playerid][pFamily] && gHouses[gFamily[PI[playerid][pFamily]-1][famHouse]][houseFamily] == gFamily[PI[playerid][pFamily]-1][famHouse]) D(playerid, D_SPAWN, DSL, ""P"Выбор спавна", ""P"1."W" Вокзал\n"P"2."W" В доме/отеле\n"P"3."W" На базе организации\n"P"4."W" В доме семьи", "Выбрать", "Отмена");
	else D(playerid, D_SPAWN, DSL, ""P"Выбор спавна", ""P"1."W" Вокзал\n"P"2."W" В доме/отеле\n"P"3."W" На базе организации", "Выбрать", "Отмена");
	return 1;
}
CMD:progress(playerid) {
	static const f_str[] = ""O"_________________________________________________________________________\n\n\
							"W"Работа Нефтяника:\n\n\
							"W"Имя: "P"%s\n\
							"W"Прогресс: "P"%d/150\n\n\
							"W"Примечание:\n\
							1. Прогресс меньше 150 - зарплата [$%d / бочка]\n\
							2. Прогресс больше 150 - зарплата [$%d / бочка] (только на погрузчике)\n\n\
							"O"_________________________________________________________________________";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
	format(string,sizeof(string),f_str,player_name[playerid],PI[playerid][pProgress],WorkSalary[1],floatround(WorkSalary[1]*1.5));

	D(playerid,DIALOG_NONE,DSM, ""P"Работа нефтяника",string, "Готово", "");
	return 1;
}
CMD:sellbusiness(playerid,params[]) {
	if(PI[playerid][pBusiness] < 1) return ErrorMessage(playerid,"У Вас нет бизнеса");
	new bizid = PI[playerid][pBusiness];
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellbusiness [ID игрока] [Сумма]");
	if(!PlayerToPoint(3,playerid,gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ])) return ErrorMessage(playerid, "Необходимо находиться рядом со своим бизнесом");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pBusiness]) return ErrorMessage(playerid,"У игрока уже есть бизнес");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new price,price2;
	price = gBusiness[bizid][bizzSellPrice];
	price2 = gBusiness[bizid][bizzSellPrice]*20;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Цена за бизнес не может быть меньше $%d и больше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Вы далеко друг от друга");

	new businessid = -1;
	for(new i = 1;i<gBusinessCount;i++) {
	    if(GetString(player_name[playerid],gBusiness[i][bizzOwner])) {businessid = i; break;}
	}
	if(businessid == -1) return ErrorMessage(playerid,"Бизнес не найден");

	SetPVarInt(params[0],"bizzProdaet",playerid + 1);
	SetPVarInt(playerid,"bizzPokupaet",params[0] + 1);
	SetPVarInt(params[0],"bizzCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам купить его бизнес за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	SendOk(params[0],"Для просмотра доходов бизнеса, введите: "W"/binfo");
	format(string, sizeof(string), "Вы предложили "P"%s "G"купить Ваш бизнес за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:binfo(playerid,params[]) {
    if(!GetPVarInt(playerid,"bizzProdaet")) return ErrorMessage(playerid,"Вам не предлагали купить бизнес");
	new bizz = PI[GetPVarInt(playerid,"bizzProdaet")-1][pBusiness];
	new query[156];
	format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", bizz);
	mysql_tquery(connects, query, "bizz_stats", "ii", playerid,bizz);
	return true;
}
CMD:sellhotel(playerid,params[]) {
	if(PI[playerid][pHotel] < 1) return ErrorMessage(playerid,"У Вас нет отеля");
	new bizid = PI[playerid][pHotel]-1;
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellhotel [ID игрока] [Сумма]");
	if(!PlayerToPoint(3,playerid,gHotels[bizid][hotelAreaX], gHotels[bizid][hotelAreaY], gHotels[bizid][hotelAreaZ])) return ErrorMessage(playerid, "Необходимо находиться рядом со своим отелем");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pHotel]) return ErrorMessage(playerid,"У игрока уже есть отель");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new price,price2;
	price = gHotels[bizid][hotelPrice];
	price2 = gHotels[bizid][hotelPrice]*40;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Цена не может быть меньше $%d и больше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Вы далеко друг от друга");

	new hotelid = -1;
	for(new i;i<gHotelCount;i++) {
	    if(GetString(player_name[playerid],gHotels[i][hotelOwner])) {hotelid = i; break;}
	}
	if(hotelid == -1) return ErrorMessage(playerid,"Отель не найден");

	SetPVarInt(params[0],"hotelProdaet",playerid + 1);
	SetPVarInt(playerid,"hotelPokupaet",params[0] + 1);
	SetPVarInt(params[0],"hotelCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам купить его отель за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Вы предложили "P"%s "G"купить Ваш отель за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:sellairport(playerid,params[]) {
	if(PI[playerid][pAirport] < 1) return ErrorMessage(playerid,"У Вас нет аэропорта");
	new airid = PI[playerid][pAirport]-1;
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellairport [ID игрока] [Сумма]");
	if(!PlayerToPoint(3,playerid,gAirs[airid][airAreaX], gAirs[airid][airAreaY], gAirs[airid][airAreaZ])) return ErrorMessage(playerid, "Необходимо находиться рядом со своим аэропортом");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pAirport]) return ErrorMessage(playerid,"У игрока уже есть аэропорт");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new price,price2;
	price = gAirs[airid][airPrice];
	price2 = gAirs[airid][airPrice]*8;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Цена не может быть меньше $%d и больше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Вы далеко друг от друга");

	new airport = -1;
	for(new i;i<gAirCount;i++) {
	    if(GetString(player_name[playerid],gAirs[i][airOwner])) {airport = i; break;}
	}
	if(airport == -1) return ErrorMessage(playerid,"Отель не найден");

	SetPVarInt(params[0],"airProdaet",playerid + 1);
	SetPVarInt(playerid,"airPokupaet",params[0] + 1);
	SetPVarInt(params[0],"airCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам купить его аэропорт за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Вы предложили "P"%s "G"купить Ваш аэропорт за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:sellsim(playerid,params[]) {
	if(!PI[playerid][pPhone]) return ErrorMessage(playerid,"У Вас нет SIM-карты");
	new numbet_str[7];
	format(numbet_str,sizeof(numbet_str),"%d",PI[playerid][pPhone]);
	if(strlen(numbet_str) < 6) return ErrorMessage(playerid,"Данный номер нельзя продать");
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid,"/sellsim [ID] [цена]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(playerid == params[0]) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(3.0, playerid,params[0])) return ErrorMessage(playerid, "Вы далеко друг от друга");
	if(params[1] < 1 || params[1] > 1000000) return ErrorMessage(playerid,"Цена не может быть меньше $1 и больше $1.000.000");
	if(PlayerToPoint(30.0,playerid,318.2156,387.3739,1002.7944)) return ErrorMessage(playerid, "Запрещена продажа SIM карты в казино");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new string[144];

	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам купить SIM-карту за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"купить SIM-карту за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0], "sim_id_sell", playerid + 1); 
	SetPVarInt(params[0], "sim_summ", params[1]);
	return 1;
}
alias:usedrugs("drugs");
CMD:usedrugs(playerid,params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(TI[playerid][tDuel] != -1) return 1;
	if(PI[playerid][pDrugs] <= 0) return ErrorMessage(playerid, "У Вас нет наркотиков");
	if(GetPVarInt(playerid, "DrugsTime") > gettime()) return ErrorMessage(playerid, "Нельзя употреблять наркотики слишком часто");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Нельзя использовать на голодных играх");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(PI[playerid][pAddiction] < 500) health += 20;
	else if(PI[playerid][pAddiction] < 1500) health += 30;
	else if(PI[playerid][pAddiction] < 3000) health += 40;
	if(health > 160) health = 160;
	SetPlayerHealth(playerid,health);
	PI[playerid][pDrugs] -= 1;
	UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
	if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	else ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetTimerEx("drug_effect", 30000, false, "i", playerid);
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	new rand = random(6);
	PI[playerid][pAddiction] += rand+1;
	UpdatePlayerData(playerid,"pAddiction",PI[playerid][pAddiction]);
	MeAction(playerid, "употребил(а) наркотик");
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	SetPVarInt(playerid, "DrugsTime", gettime()+60);
	return 1;
}
CMD:selldrugs(playerid, params[]) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return ErrorMessage(playerid,"Доступно только бандам/мафиям");
	new id,drugs,price;
    if(sscanf(params,"ddd",id,drugs,price)) return SendEsp(playerid, "/selldrugs [id игрока] [количество] [цена]");
	if(!IsPlayerConnected(id) || playerid == id) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return ErrorMessage(playerid,"Вы далеко друг от друга");
    if(drugs > 50 || drugs < 1) return ErrorMessage(playerid, "Неверное количество наркотиков. От 1 до 50");
	if(drugs > PI[playerid][pDrugs]) return ErrorMessage(playerid, "У Вас недостаточно грамм наркотиков");
	if(price > 5000 || price < 1) return ErrorMessage(playerid, "Цена должна быть от 1 до 5000$");
    if(price > GetPlayerMoneyEx(id)) return ErrorMessage(playerid, "У игрока недостаточно денег");
	if(PlayerToPoint(15.5,playerid,318.2156,387.3739,1002.7944)) return ErrorMessage(playerid, "Запрещена продажа наркотиков в казино");
	if(active_accept(id)) return ErrorMessage(playerid,"У игрока есть активное предложение");
	SetPVarInt(playerid,"drugoffee",id);
	SetPVarInt(id,"drugoffee",id);
	SetPVarInt(id,"drugoffer",playerid);
	SetPVarInt(id,"drugprice",price);
	SetPVarInt(id,"drugvalue",drugs);

	new string[170];
	format(string, sizeof(string), "Вы предложили "P"%s"G" купить "W"%d"G" грамм наркотиков за "ORANGE"$%d",player_name[id],drugs,price);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"%s"G" предложил Вам купить "W"%d"G" грамм наркотиков за "ORANGE"$%d",player_name[playerid],drugs,price);
	SendUse(id, string);
	SendClientMessage(id,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return 1;
}
CMD:pay(playerid, params[]) {
    if(sscanf(params, "ud", params[0],params[1])) return SendEsp(playerid, "/pay [id] [сумма]");
	if(params[1] < 1 || params[1] > vip_status[PI[playerid][pVips]][vip_pay]) {
		new string[64];
		format(string,sizeof(string),"Нельзя передать меньше $1 и больше $%d",vip_status[PI[playerid][pVips]][vip_pay]);
		return 1;
	}
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(playerid == params[0]) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return ErrorMessage(playerid, "Вы слишком далеко");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(PI[playerid][pCash] < params[1]) return ErrorMessage(playerid, "У Вас недостаточно денег");
	//if(GetPVarInt(playerid,"pay_timer") > unix) return ErrorMessage(playerid, "Нельзя передавать деньги чаще чем 1 раз в 30 секунд");  
	if(TI[playerid][tFight] != -1) return ErrorMessage(playerid, "Запрещена передача денег во время поединка");
	//SetPVarInt(playerid, "pay_timer", unix+30);
	new string[128];
	format(string,64,"Получение с помощью /pay от %s",player_name[playerid]);
	GiveMoney(params[0], params[1], string);
	string = "";
	format(string,64,"Передача с помощью /pay %s",player_name[params[0]]);
	GiveMoney(playerid, -params[1], string);
	format(string, sizeof(string), "Вы передали %s[%i] %i вирт",player_name[params[0]],params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	format(string, sizeof(string), "Вы получили %i вирт от %s[%i]",params[1],player_name[playerid], playerid);
	SendClientMessage(params[0], COLOR_GRAD1, string);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(string,sizeof(string),"достал(а) деньги и передал(а) их %s",player_name[params[0]]);
	MeAction(playerid,string);
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return true;
}
CMD:number(playerid, params[]) {
    if(sscanf(params, "u",params[0])) return SendEsp(playerid, "/number [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	new string[156];
	format(string, sizeof(string), "Владелец: "W"%s."G" Телефон: "ORANGE"%i",player_name[params[0]],PI[params[0]][pPhone]);
	SendClientMessage(playerid, COLOR_GREY, string);
	return true;
}
CMD:gnews(playerid, params[]) {
	new count_player_row = GetPVarInt(playerid,"count_row");
	new max_rows = GetPVarInt(playerid, "max_rows");
	new get_goverment_text[100];
	new set_pvar_string[15];
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsANews(playerid) && !IsAMedic(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fWHITEHOUSE) return 1;
	else if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid, "Вам недоступна эта команда");
	else if(!start_work[playerid]) return ErrorMessage(playerid, "Вам необходимо начать рабочий день");
	else if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(GetSVarInt("gnews_timer") > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(GetSVarInt("gnews_timer") - unix, year, month, day, hour, minute, second);
		new string[128];
		format(string,sizeof(string),"До подачи гос.новостей осталось: "W"%02d:%02d", minute, second);
		ErrorMessage(playerid, string);
		return 1;
	}
	new string[262];
	if(!max_rows) {
		if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/gnews [количество строк]");
		if(params[0] < 1 || params[0] > 4) return ErrorMessage(playerid, "от 1 до 4 строк");
		SetPVarInt(playerid,"max_rows", params[0] + 1);
		SetPVarInt(playerid, "count_row", 1);
		format(string, sizeof(string), "Вы выбрали для гос. новостей строк: %d "G"| Используйте: /gnews [строка 1]", params[0]);
		SendClientMessage(playerid, 0x489191C8, string);
	}
	else {
		if(max_rows == count_player_row) {
			if(!isnull(params)) {
				DeletePVar(playerid,"max_rows");
				DeletePVar(playerid,"count_row");
				SendOk(playerid,"Гос.Новости успешно сброшены");
				return 1;
			}
			SendClientMessageToAll(0x2641EDFF,"================== {C0C0C0}[ Государственные новости ]{2641ED} ==================");

			for(new i = 1; i < max_rows; i++) {
				format(set_pvar_string, 15, "gnews%d", i);
				GetPVarString(playerid, set_pvar_string, get_goverment_text, 100);
				format(string, sizeof(string), "{%s}%s: "W"%s", GetColor(playerid), FI[PI[playerid][pMember]][fName], get_goverment_text);
				SendClientMessageToAll(0xD6D6D6C8, string);
			}
			SendClientMessageToAll(0x2641EDFF, "=============================================================");
			format(string, sizeof(string), "[A] %s %s[%d] - Использовал /gnews", FI[PI[playerid][pMember]][fName], player_name[playerid], playerid);
			AdmMSG(COLOR_YELLOW, string, 1);
			SetSVarInt("gnews_timer", gettime() + 60*3);
			DeletePVar(playerid,"max_rows");
			DeletePVar(playerid,"count_row");
			return 1;
		}
		format(string, 64, "/gnews [строка %d]",count_player_row);
		if (isnull(params)) return SendEsp(playerid, string);
		format(set_pvar_string, 15, "gnews%d", count_player_row);
		SetPVarString(playerid, set_pvar_string, params);

		if(count_player_row + 1 == max_rows) {
			format(string, sizeof(string), "Строка %d : %s", count_player_row, params);
			SendClientMessage(playerid,0xD6D6D6C8, string);
			SendOk(playerid, "Используйте команду /gnews еще раз. Чтобы опубликовать новости");
			SendOk(playerid, "В случае опечатки, используйте: /gnews 0");
		}
		else {
			format(string, sizeof(string), "Строка %d : %s "G"| Используйте: /gnews [строка %d]", count_player_row, params, count_player_row + 1);
			SendClientMessage(playerid, 0xD6D6D6C8, string);
		}
		SetPVarInt(playerid,"count_row", count_player_row + 1);
	}
	return 1;
}
CMD:trunk(playerid) {
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в машине");
	new Float:x,Float:y,Float:z,Float:a;
	if(idaofcar[playerid] != -1) {
		GetVehicleShiftPos(idaofcar[playerid],1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
			static const f_str[] = "Наименование\tКоличество\n\
				"W"Багажник:\t%s\n\
				"W"Канистры:\t"P"%d/2\n\
				"W"Наркотики:\t"P"%d/200\n\
				"W"Боеприпасы:\t"P"%d/1000\n\
				"W"Deagle:\t"P"%d/50\n\
				"W"AK47:\t"P"%d/50\n\
				"W"M4:\t"P"%d/50\n\
				"W"ShotGun:\t"P"%d/50";
			new string[sizeof(f_str) +20];
			new oper[30];
			if(TrunkInfo[idaofcar[playerid]][tOpen] == 0) oper = "{C62929}Закрыт"W"";
			else oper = "{56A736}Открыт"W"";
			format(string,sizeof(string), f_str,oper,TrunkInfo[idaofcar[playerid]][tKanistra],TrunkInfo[idaofcar[playerid]][tNarko],
				TrunkInfo[idaofcar[playerid]][tMats],TrunkInfo[idaofcar[playerid]][tGun][0],TrunkInfo[idaofcar[playerid]][tGun][1],TrunkInfo[idaofcar[playerid]][tGun][2],TrunkInfo[idaofcar[playerid]][tGun][3]);
			return D(playerid,D_TRUNK_LIST,DSTH,"Багажник",string,"Принять","Отмена");
		}
		else trunk_close(playerid);
	}
	for(new c = GetVehiclePoolSize()+1; --c != 0;) {
		if(!IsValidVehicle(c)) continue;
		if(IsABike(c) || IsAVelik(c) || IsABoat(c)) continue;
		GetVehicleShiftPos(c,1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
			if(!TrunkInfo[c][tOpen] && c != house_car[playerid][0] && c != house_car[playerid][1]) return ErrorMessage(playerid,"Багажник закрыт");
			GetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, boot, objective);
			new Float:pos_y,Float:pos_z;
			GetPlayerPos(playerid,pos_y,pos_y,pos_z);
			GetVehicleZAngle(c, a);
			if(boot != VEHICLE_PARAMS_ON) {
				AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
				SetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
			}
			else AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
			idaofcar[playerid]=c;
			static const f_str[] = "Наименование\tКоличество\n\
				"W"Багажник:\t%s\n\
				"W"Канистры:\t"P"%d/2\n\
				"W"Наркотики:\t"P"%d/200\n\
				"W"Боеприпасы:\t"P"%d/1000\n\
				"W"Deagle:\t"P"%d/50\n\
				"W"AK47:\t"P"%d/50\n\
				"W"M4:\t"P"%d/50\n\
				"W"ShotGun:\t"P"%d/50";
			new string[sizeof(f_str) +20];
			new oper[30];
			if(TrunkInfo[c][tOpen] == 0) oper = "{C62929}Закрыт"W"";
			else oper = "{56A736}Открыт"W"";
			format(string,sizeof(string), f_str,oper,TrunkInfo[c][tKanistra],TrunkInfo[c][tNarko],
				TrunkInfo[c][tMats],TrunkInfo[c][tGun][0],TrunkInfo[c][tGun][1],TrunkInfo[c][tGun][2],TrunkInfo[c][tGun][3]);
			D(playerid,D_TRUNK_LIST,DSTH,"Багажник",string,"Принять","Отмена");
			break;
		}
	}
	return 1;
}
CMD:slimit(playerid,params[]) {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Вы должны быть за рулем Т/С");
	if(sscanf(params,"d",params[0])) {
		if(TI[playerid][tSLimit]) {
			TI[playerid][tSLimit] = 0;
			SendOk(playerid,"Ограничение скорости снято");
		}
		else SendEsp(playerid,"/slimit [скорость]");
		return 1;
	}
	if(params[0] < 10 || params[0] > 150) return ErrorMessage(playerid,"От 10 до 150");
	TI[playerid][tSLimit] = params[0];
	SendOk(playerid,"Ограничение скорости установлено");
	return true;
}
CMD:engine(playerid, const params[]) {
    new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid) || IsABoat(carid)) return false;
	/*if(VehicleInfo[carid][vType] == VEHICLE_TYPE_SPAWN) {
		if(PI[playerid][pLevel] > 1) {
			ErrorMessage(playerid,"Данный транспорт только для новичков (1 уровень)");
			return RemovePlayerFromVehicleAC(playerid);
		}
	}*/

    if(carid == INVALID_VEHICLE_ID) return true;
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
    new Float:Health;
	GetVehicleHealth(carid,Health);
    if(VehicleInfo[carid][vFuel] <= 0.5 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid) && Health <= 320) {
		ErrorMessage(playerid, "Не удалось завести двигатель");
		return true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ToggleEngine(GetPlayerVehicleID(playerid),playerid);
    return true;
}
CMD:en(playerid, params[]) {
    new carid = GetPlayerVehicleID(playerid);
	if(!IsAPlane(carid) && !IsABoat(carid)) return false;

    if(carid == INVALID_VEHICLE_ID) return true;

    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ToggleEngine(carid,playerid);
    return true;
}
CMD:hi(playerid,params[]) {
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в машине");
	if(sscanf(params, "u", params[0])) return SendEsp(playerid, "/hi [ид]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(!IsPlayerStream(2.0, playerid, params[0])) return ErrorMessage(playerid, "Игрок далеко от Вас");
	if(params[0] == playerid)  return  ErrorMessage(playerid,"Вы указали свой ID");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new string[144];

	format(string, sizeof(string), ""P"%s "G"предложил(а) Вам пожать руку", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"пожать руку", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"hi", playerid+1);
	return 1;
}
CMD:givelic(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/givelic [id игрока]");
    lic[params[0]][0] =
    lic[params[0]][1] =
    lic[params[0]][2] =
    lic[params[0]][3] = 1;
	UpdateLicenses(params[0]);
	SendOk(params[0],"Лицензии получены");
	SendOk(playerid,"Лицензии выданы");
    return 1;
}
CMD:lic(playerid,params[]) {
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/lic [id игрока]");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(params[0] == playerid) ShowLic(playerid,params[0]), MeAction(playerid,"просматривает свои лицензии");
	else {
		if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
		new string[144];
		
		format(string, sizeof(string), ""P"%s "G"хочет показать Вам лицензии", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "G"показать Ваши лицензии", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"lices", playerid + 1);
 	}
	return 1;
}
CMD:pass(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/pass [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	
	new string[144];
		
	format(string, sizeof(string), ""P"%s "G"хочет показать Вам паспорт", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"показать Ваш паспорт", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"pass", playerid + 1);
	return 1;
}
CMD:fakepass(playerid, params[]) {
	if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Вы не агент FBI");
	if(!TI[playerid][tMasked]) return ErrorMessage(playerid,"На Вас нет маскировочной формы");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/fakepass [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new string[512];
	for(new i = 1; i <= FI[TI[playerid][tMasked]][fMaxRang]; i++) {
		format(string,sizeof(string),"%s%s (%i)\n",string,GetRankName(TI[playerid][tMasked],i),i);
		D(playerid,D_FAKEPASS,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
	}
	SetPVarInt(playerid,"fpass2", params[0]);
	return 1;
}
alias:suspect("su");
CMD:suspect(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/su [ID игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pJailTime]) return ErrorMessage(playerid, "Данный игрок в тюрьме");
	if(PI[params[0]][pSearch] >= 6) return ErrorMessage(playerid, "У данного игрока уже 6 уровней розыска");
	if(IsACop(params[0])) return ErrorMessage(playerid, "Вы не можете давать розыск законникам");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Вы связаны");
	new string[1000]; 
	strcat(string, ""W"");
	for(new i=0; i<13; i++) {
		format(string,sizeof(string),"%s%s\n",string,suspect_player[i][suspect_name_folder]);
	}
	D(playerid,D_SU,DSL,""P"Преступление",string,"Выбрать","Закрыть");
	SetPVarInt(playerid,"su_player",params[0]);
	return 1;
}
CMD:clear(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(IsAPD(playerid)) if(PI[playerid][pRank] < 6) return ErrorMessage(playerid, "Доступно с 6 ранга");
	if(GetTeamID(playerid) == fFBI) if(PI[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 6) return ErrorMessage(playerid, "Доступно с 6 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/clear [ID игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fSFPD && VehicleInfo[veh][vTeam] != fLVPD && VehicleInfo[veh][vTeam] != fFBI) return ErrorMessage(playerid, "Вы не в полицейской машине");
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return ErrorMessage(playerid, "Игрок далеко от вас");
	if(!PI[params[0]][pSearch]) return ErrorMessage(playerid,"Игрок не находится в розыске");
	new string[128];
	format(string,sizeof(string),"Вы сняли розыск у %s", player_name[params[0]]);
	SendClientMessage(playerid, CDEPARTMENT, string);
	format(string,sizeof(string), "%s %s снял с Вас розыск", GetRankName(GetTeamID(playerid),PI[playerid][pRank]),player_name[playerid]);
	SendClientMessage(params[0], CDEPARTMENT, string);
	PI[params[0]][pSearch] = 0;
	SetPlayerWantedLevel(params[0], 0);
	return 1;
}
CMD:tipster(playerid,params[]) {
	if(PI[playerid][pMember] != fFBI) return ErrorMessage(playerid, "Доступно только ФБР");
	if(PI[playerid][pRank] < 5 && PI[playerid][pMember] == fFBI) return ErrorMessage(playerid,"Доступно с 5 ранга");
	if(!GetPVarInt(playerid,"tipster")) return ErrorMessage(playerid, "У Вас нет жучка. Подойдите к багажнику машины и нажмите "GREEN"ALT");
	new param[40],string[200];
	if(sscanf(params, "s[32]S()[64]", param, params)) {
		SendEsp(playerid,"/tipster [действие]");
		SendClientMessage(playerid,COLOR_GREY, 	"- "W"SET Прикрепить жучок к игроку");
		SendClientMessage(playerid,COLOR_GREY, 	"- "W"REMOVE Деактивировать жучок");
		SendClientMessage(playerid,COLOR_GREY, 	"- "W"LISTEN Начать прослушивание чата фракции");
		return 1;
	}
	else if(!strcmp(param, "set",true)) {
		new giveplayerid;
		if(sscanf(params, "i", giveplayerid)) return SendEsp(playerid, "/tipster set [ид игрока]");
		if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
		if(!PI[giveplayerid][pMember]) return ErrorMessage(playerid, "Игрок не состоит в организации");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid,X,Y,Z);
		if(!PlayerToPoint(10.0,playerid,X,Y,Z)) return ErrorMessage(playerid, "Игрок не рядом с Вами");
		SetPVarInt(playerid,"tipster_set", giveplayerid + 1);
		format(string,sizeof(string),"Вы поставили жучок на "W"%s. "G"Используйте "W"/tipster listen "G"для прослушки",player_name[giveplayerid]);
		SendOk(playerid,string);
	}
	else if(!strcmp(param, "listen",true)) {
		if(!GetPVarInt(playerid,"tipster_set")) return ErrorMessage(playerid, "Сначала поставьте на игрока жучок /tipster set");
		new giveplayerid = GetPVarInt(playerid,"tipster_set")-1;
		format(string,sizeof(string), "Вы начали прослушку за игроком "W"%s",player_name[giveplayerid]);
		SendOk(playerid,string);
		SetPVarInt(playerid,"tipster_listen", PI[giveplayerid][pMember]);
		DeletePVar(playerid,"tipster_set");
	}
	else if(!strcmp(param, "remove",true)) {
		if(GetPVarInt(playerid,"tipster_set"))		DeletePVar(playerid,"tipster_set");
		if(GetPVarInt(playerid,"tipster_listen"))	DeletePVar(playerid,"tipster_listen");
		if(GetPVarInt(playerid,"tipster"))			DeletePVar(playerid,"tipster");
		SendOk(playerid, "Вы деактивировали жучок");
	}
	return 1;
}
CMD:push(playerid, params[]) {
    if((!IsACop(playerid) || !start_work[playerid]) && !IsAMafia(playerid)) return ErrorMessage(playerid, "Вам недоступна данная команда");
	if(sscanf(params, "u",params[0])) return SendEsp(playerid, "/push [playerid]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Вы должны быть за рулем автомобиля");
	if(!IsPlayerStream(5.0, playerid,params[0])) return ErrorMessage(playerid,"Игрок не рядом с Вами");
	if(!IsAMafia(playerid)) if((!TI[params[0]][tCuffed]) && IsACop(playerid)) return ErrorMessage(playerid, "Игрок без наручников");
 	if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0])) return ErrorMessage(playerid, "Игрок уже в Т/C");
	PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), GetVehicleFreeSeat(GetPlayerVehicleID(playerid)));
	SetPlayerArmedWeapon(params[0],0);

	if(TI[params[0]][tCuffed] && GotoInfo[playerid][gtID] == params[0]) {
		CheckPlayerGoCuff(params[0]);
		CheckPlayerGoCuff(params[0]);
		//return 1;
	}

	TogglePlayerControllable(params[0], false);
	new string[64];
	format(string,sizeof(string), "%s затащил вас в автомобиль",player_name[playerid]);
	SendOk(params[0],string);

	format(string,sizeof(string), "Вы затащили в автомобиль %s",player_name[params[0]]);
	SendOk(playerid,string);
	return true;
}
CMD:udjur(playerid, params[]) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только сотрудникам новостей");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/udjur [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(params[0] == playerid) return ErrorMessage(playerid, "Вы указали свой ID");
	
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	
	new string[144];
		
	format(string, sizeof(string), ""P"%s "G"хочет показать Вам удостоверение журналиста", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"показать Ваше удостоверение журналиста", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"udjur", playerid + 1);
	return 1;
}
CMD:ud(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/ud [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(params[0] == playerid) return ErrorMessage(playerid, "Вы указали свой ID");
	
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	
	new string[144];
		
	format(string, sizeof(string), ""P"%s "G"хочет показать Вам удостоверение", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Вы предложили "P"%s "G"показать Ваше удостоверение", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"uds", playerid + 1);
	return 1;
}
CMD:gotome(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	new id, string[150];
	if(sscanf(params,"d",id)) return SendEsp(playerid, "/gotome [id]");
	if(TI[id][tCuffed] && GotoInfo[playerid][gtID] == id) {
		format(string,sizeof(string),"%s перестал тащить за собой игрока %s",player_name[playerid], player_name[id]);
		ProxDetector(25,playerid,string,COLOR_PURPLE);
		TogglePlayerControllable(id, TI[id][tCuffed]);
		CheckPlayerGoCuff(id);
		CheckPlayerGoCuff(playerid);
		return 1;
	}
	if(!ProxDetectorS(2.0, playerid, id)) return ErrorMessage(playerid,"Игрок далеко от Вас");
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Вы уже кого-то ведете за собой");
	if(GotoInfo[id][gtGoID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Этого игрока уже кто-то ведет за собой");
	if(!TI[id][tCuffed]) return ErrorMessage(playerid, "Игрок не в наручниках");
	CheckPlayerGoCuff(playerid);
	CheckPlayerGoCuff(id);
	GotoInfo[playerid][gtID] = id;
	GotoInfo[id][gtGoID] = playerid;
	GotoInfo[id][gtState] = GetPlayerState(playerid);
	GetPlayerPos(id, GotoInfo[id][gtX], GotoInfo[id][gtY], GotoInfo[id][gtZ]);
	format(string, sizeof(string), "%s потащил игрока %s за собой", player_name[playerid], player_name[id]);
	ProxDetector(25.0, playerid, string, COLOR_PURPLE);
	TogglePlayerControllable(id, true);
	return true;
}
CMD:fences(playerid, const params[]) {
   	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(PI[playerid][pRank] < 7) return ErrorMessage(playerid,"Доступно с 7 ранга");
    if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
    D(playerid,D_OBJ,DSL,""P"Ограждения",""P"1."W" Ограждения\n"P"2."W" Дорожные знаки\n"P"3."W" Остальное\n"P"4."W" Убрать ближайшее ограждение","Выбрать","Отмена");
    return 1;
}
CMD:cuff(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid,"/cuff [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(IsACop(params[0])) return ErrorMessage(playerid, "Вы не можете надеть наручники на законника");
	if(TI[params[0]][tCuffed]) return ErrorMessage(playerid, "На этого человека уже одеты наручники");
	if(!PI[params[0]][pSearch]) return  ErrorMessage(playerid,"Вы не можете надеть наручники на этого человека (он не в розыске)");
	if(!IsPlayerStream(2.0, playerid, params[0])) return ErrorMessage(playerid,"Игрок не рядом с Вами");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Вы связаны");
	MeAction(playerid,"одел(а) наручники на преступника");
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
	TI[params[0]][tCuffed] = 2;
	SendOk(playerid,"Чтобы тащить игрока за собой используйте команду: "W"/gotome [playerid]");
	return 1;
}
CMD:uncuff(playerid,params[]) {
	if(IsACop(playerid) && start_work[playerid] || PI[playerid][pAdmin] >= 2 && dostup[playerid] == 1) {
		if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/uncuff [id]");
		if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
		if(!IsPlayerStream(5.0, playerid, params[0])) return ErrorMessage(playerid, "Рядом с Вами никого нет");
		if(params[0] == playerid) return ErrorMessage(playerid, "Вы не можете снять наручники с самого себя");
		if(TI[params[0]][tCuffed]) {
			if(PI[playerid][pAdmin]) SendOk(params[0],"Администратор снял с Вас наручники");
			MeAction(playerid,"снял(а) наручники с преступника");
			SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0],0);
			TogglePlayerControllable(params[0], true);
			TI[params[0]][tCuffed] = 0;
			if(GotoInfo[playerid][gtID] == params[0]) {
				CheckPlayerGoCuff(params[0]);
				CheckPlayerGoCuff(playerid);
			}
		}
	}
	else return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	return 1;
}
CMD:tazer(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	new string[256];
	if(GetPVarInt(playerid,"tazershoottime") > unix) {
		format(string,sizeof(string),"Дождитесь перезарядки тазера [%d секунд]",GetPVarInt(playerid ,"tazershoottime") - unix);
		SendOk(playerid,string);
		return 1;
	}
	if(TI[playerid][tTazers][0] > 0) return ErrorMessage(playerid,"Оружие уже заряжено");
	for(new i; i <= 11; i++) {
		new gunid, ammo, storeslot = -1;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		switch(gunid) {
			case 24 : storeslot = 1;
			case 25 : storeslot = 1;
		}
		if(!gunid || !ammo || storeslot == -1) continue;
		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		format(string,sizeof(string),"%s\n%s [%d]",string,gunname,ammo);
	}
	if(!strlen(string)) return ErrorMessage(playerid,"У Вас нет оружия");
	D(playerid,D_TAZER,DSL,""P"Оружие",string,"Зарядить","Отмена");
	return 1;
}
alias:megaphone("m");
CMD:megaphone(playerid,params[]) {
	if((!IsACop(playerid) || !start_work[playerid]) && (!PI[playerid][pAdmin] || dostup[playerid] == 0)) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(PI[playerid][pMute]) return ErrorMessage(playerid,"У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return SendEsp(playerid, "/m [текст]");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fSFPD && VehicleInfo[veh][vTeam] != fLVPD && VehicleInfo[veh][vTeam] != fFBI && PI[playerid][pAdmin] == 0) return ErrorMessage(playerid, "Вы не в полицейской машине");
	new string[220];
	if(PI[playerid][pAdmin] >= 1 || dostup[playerid] != 0) {
		format(string,sizeof(string),"[АДМИНИСТРАТОР] %s(%d): %s",player_name[playerid],playerid,params[0]);
		SendStreamMessage(100.0, playerid, string,COLOR_YELLOW);
	}
	else {
		format(string,sizeof(string),"[Рупор] %s %s(%d): %s",GetRankName(GetTeamID(playerid),PI[playerid][pRank]),player_name[playerid],playerid,params[0]);
		SendStreamMessage(80.0, playerid, string,COLOR_YELLOW);
	}
	return true;
}
CMD:look(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(IsAPD(playerid)) if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(GetTeamID(playerid) == fFBI) if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/look [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(3.0, playerid, params[0])) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	new text1[20], text2[20],string[128];
	if(PI[params[0]][pDrugs] > 0) { text1 = "| Наркотики"; } else { text1 = "| Пустой карман"; }
	if(PI[params[0]][pMats] > 0) { text2 = "| Боеприпасы"; } else { text2 = "| Пустой карман"; }
	format(string, sizeof(string), ":::: Вещи %s ::::", player_name[params[0]]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, text1);
	SendClientMessage(playerid, COLOR_WHITE, text2);
	
	format(string, sizeof(string), "обыскал(а) %s", player_name[params[0]]);
	MeAction(playerid, string);
	return 1;
}
/*
CMD:demote(playerid, params[]) {
	if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Вы не агент FBI");
	new string[144];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fInviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	new giveplayerid;
	if(sscanf(params,"u",giveplayerid)) return  SendEsp(playerid, "/demote [id]");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PI[giveplayerid][pLeader]) return ErrorMessage(playerid,"Невозможно применить на лидере");
	new giveplayer_member = PI[giveplayerid][pMember];
	switch(giveplayer_member) {
		case fLSPD, fSFPD, fLVPD,fARMYSF,fARMYLV: {}
		default: return ErrorMessage(playerid, "Данный игрок не состоит в правоохранительных органах/армии");
	}
	new rankdemote = PI[giveplayerid][pRank];
	rankdemote --;
	if(!rankdemote) { */
		/*switch(giveplayer_member) {
			case fLSPD, fSFPD, fLVPD: {
				PI[giveplayerid][pMember] = fARMYSF;
				PI[giveplayerid][pRank] = 3;
				DelGun(giveplayerid);
				PI[giveplayerid][pJob] = 0;
				PI[giveplayerid][pFracSkin] = GetPVarInt(giveplayerid,"InviteSkin");

				UpdatePlayerData(giveplayerid,"pMember",PI[giveplayerid][pMember]);
				UpdatePlayerData(giveplayerid,"pRank",PI[giveplayerid][pRank]);
				SetPVarInt(giveplayerid,"InviteSkin", (PI[giveplayerid][pSex] == 1) ? (287) : (141));
				SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				A_SetPlayerSkin(giveplayerid, GetPVarInt(giveplayerid,"InviteSkin"));

				format(string, sizeof(string), ""W"%s [%s]"G" перевел Вас в армию", player_name[playerid],GetRankName(PI[playerid][pMember],PI[playerid][pRank]));
				SendOk(giveplayerid, string);
				format(string, sizeof(string), "Вы перевели "W"%s"G" в армию", player_name[giveplayerid],rankdemote);
				SendOk(playerid, string);
				return 1;
			}
		}*/
/*		PI[giveplayerid][pRank] = 0;
		UpdatePlayerData(giveplayerid,"pRank",PI[giveplayerid][pRank]);

		PI[giveplayerid][pMember] = 0;
		UpdatePlayerData(giveplayerid,"pMember",PI[giveplayerid][pMember]);

		SetPlayerArmour(giveplayerid,0);
		DelGun(giveplayerid);
		SetPlayerColor(giveplayerid, TEAM_HIT_COLOR);
		if(PI[giveplayerid][pHouse] > 0) PI[giveplayerid][pSpawn] = 1;
		else PI[giveplayerid][pSpawn] = 0;
		A_SetPlayerSkin(giveplayerid, PI[giveplayerid][pSkin]);

		format(string, sizeof(string), ""W"%s"G" уволил Вас из организации", player_name[playerid]);
		SendOk(giveplayerid, string);

		format(string, sizeof(string), "Вы уволили "W"%s"G" из организации", player_name[giveplayerid]);
		SendOk(playerid, string);
		return 1;
	}
	PI[giveplayerid][pRank] = rankdemote;
	UpdatePlayerData(giveplayerid,"pRank",PI[giveplayerid][pRank]);

	format(string, sizeof(string), ""W"%s"G" понизил Вас до "ORANGE"%s[%d]", player_name[playerid],GetRankName(PI[giveplayerid][pMember],rankdemote), rankdemote);
	SendOk(giveplayerid, string);

	format(string, sizeof(string), "Вы понизили "W"%s"G" до "ORANGE"%s[%d]", player_name[giveplayerid],GetRankName(PI[giveplayerid][pMember],rankdemote), rankdemote);
	SendOk(playerid, string);
	return 1;
} 
*/
CMD:arrest(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(!PlayerToPoint(10.0, playerid, -552.5079,487.7885,11.5739) &&
		!PlayerToPoint(10.0, playerid, 2726.6501,-2459.1362,21.8844) &&
		!PlayerToPoint(10.0, playerid, 2559.8887,-2424.3572,22.0044)) return ErrorMessage(playerid, "Вы далеко от полицейского участка");
	new suspect;
	if(sscanf(params,"i",suspect)) return SendEsp(playerid,"/arrest [playerid]");
	if(!IsPlayerConnected(suspect)) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(4.0, playerid, suspect)) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(PI[suspect][pSearch] < 1) return ErrorMessage(playerid, "Игрок не имеет розыск");

	new search;
	if(PI[suspect][pSearch] <= 5) search = 600;
	else search = 750;

	if(TI[suspect][tCuffed] && GotoInfo[playerid][gtID] == suspect) {
		TogglePlayerControllable(suspect, TI[suspect][tCuffed]);
		CheckPlayerGoCuff(suspect);
		CheckPlayerGoCuff(suspect);
		//return 1;
	}

	new string[128];
	format(string, sizeof(string), "Вы посадили в тюрьму %s на %d секунд", player_name[suspect], (PI[suspect][pSearch] * search));
	SendClientMessage(playerid, 0x6ab1ffaa, string);

	format(string, sizeof(string), "Вас посадил в тюрьму %s на %d секунд", player_name[playerid], (PI[suspect][pSearch] * search));
	SendClientMessage(suspect, CBADINFO, string);

	format(string, sizeof(string), "%s %s(%d) арестовал(а) преступника %s(%d)", GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid],playerid, player_name[suspect],suspect);
	SendTeamMessage(COLOR_ALLDEPT, string);

	ResetPlayerWeapons(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	TogglePlayerControllable(suspect, true);
	TI[suspect][tCuffed] = 0;
	arrest(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	TogglePlayerControllable(suspect, true);
	PlayerSpawn(suspect);
	return 1;
}
CMD:ticket(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(sscanf(params, "uds[128]",params[0],params[1],params[2])) return SendEsp(playerid, "/ticket [id] [цена] [причина]");
	if(IsACop(params[0]) && start_work[params[0]]) return ErrorMessage(playerid, "Вы не можете выписать штраф сотруднику првоохранительных органов");
	if(GetTeamID(playerid) == fFBI) if(PI[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[1] < 1 || params[1] > 10000) return ErrorMessage(playerid, "Сумма штрафа не должна превышать $10.000");
	if(!IsPlayerStream(4.0, playerid, params[0])) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	new day, month, year;
	getdate(year,month,day);
	new query[300];
	mysql_format(connects,query,sizeof(query), "INSERT INTO `"TABLE_TICKETS"` (`name`, `give_name`, `total`, `reason`, `date`) VALUES ('%s', '%s', '%i','%s','%02i/%02i/%02i')",player_name[params[0]],player_name[playerid],params[1],params[2],day,month,year);
	mysql_tquery(connects,query,"","");
	new string[156];
	format(string,sizeof(string),"Вы выписали штраф в размере "ORANGE"$%i"W" %s."G" Причина: "W"%s",params[1],player_name[params[0]],params[2]);
	SendUse(playerid,string);
	format(string,sizeof(string),"Офицер "P"%s"G" выписал вам штраф в размере "ORANGE"$%i."G" Причина: "W"%s",player_name[playerid],params[1],params[2]);
	SendUse(params[0],string);
	return SendOk(params[0], "Оплатить штраф Вы можете в банке");
}
CMD:take(playerid,params[]) {
	if(PI[playerid][pMember] != fINSTRUCTORS && !IsACop(playerid)) return ErrorMessage(playerid, "Вам недоступна данная команда");
	if(!start_work[playerid]) return ErrorMessage(playerid,"Вам необходимо начать рабочий день");
	if(PI[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Вы связаны");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/take [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[playerid][pAdmin] < 1)
	{
		if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	}
	if(!IsPlayerStream(5.0, playerid, params[0])) return ErrorMessage(playerid, "Игрок не рядом с Вами");
	if(GetTeamID(playerid) == fINSTRUCTORS) D(playerid,D_TAKE, DSL,""P"Забрать лицензию", "Водительские права\nЛицензия пилота\nЛицензия водного транспорта\nЛицензия на оружие", "Выбрать", "Закрыть");
	else D(playerid,D_TAKE, DSL,""P"Забрать лицензию", "Водительские права\nЛицензия пилота\nЛицензия водного транспорта\nЛицензия на оружие\nНаркотики\nБоеприпасы", "Выбрать", "Закрыть");
	SetPVarInt(playerid,"takelic", params[0]);
	return 1;
}
CMD:hack(playerid, params[]) {
    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(GetTeamID(playerid) == fFBI) if(PI[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new idx = -1;
	for(new i = 1; i < gHouseCount; i ++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, gHouses[i][houseX], gHouses[i][houseY], gHouses[i][houseZ])) {
			idx = i;
			break;
		}
	}
	if(idx == -1) return ErrorMessage(playerid, "Вы должны находиться рядом с домом");	
	SetPlayerPosAC(playerid,hinterior_info[gHouses[idx][houseHint]][h_pos_exit][0],hinterior_info[gHouses[idx][houseHint]][h_pos_exit][1],hinterior_info[gHouses[idx][houseHint]][h_pos_exit][2],idx+1,hinterior_info[gHouses[idx][houseHint]][h_interior]);
	SetPlayerFacingAngle(playerid,hinterior_info[gHouses[idx][houseHint]][h_pos_exit][3]);
	TI[playerid][tInHouse] = true;
	return 1;
}
CMD:spikes(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(GetTeamID(playerid) == fFBI) if(PI[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(veh) != 490 && GetVehicleModel(veh) != 560 && GetVehicleModel(veh) != 596 && GetVehicleModel(veh) != 597 && GetVehicleModel(veh) != 598 && GetVehicleModel(veh) != 599) return ErrorMessage(playerid,"Недоступно в данном автомобиле");
	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	if(GetPlayerInterior(playerid) != 0) return 1;
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	new string[128];
	if(!GetPVarInt(playerid,"block")) {
		if(ObjectShip[playerid] == 0x7F800000) {
			if(IsValidDynamicObject(ObjectShip[playerid])) DestroyDynamicObject(ObjectShip[playerid]);

			GetVehiclePos(veh, X, Y, Z);
			GetVehicleZAngle(veh, ANGLE);

			X -= (5.0 * floatsin(-ANGLE, degrees));
			Y -= (5.0 * floatcos(-ANGLE, degrees));
			Z -= 0.8;

			ObjectShip[playerid] = CreateDynamicObject(2899, X, Y, Z, 0, 0, ANGLE - 90.0);
			SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
			string = "";
			format(string,sizeof(string),"Установил(а) шипы: %s(%i)",player_name[playerid],playerid);
			ShipText[playerid] = CreateDynamic3DTextLabel(string,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			//ShipText[playerid] =  CreateDynamic3DTextLabel(string, -1, X,Y,Z, 5.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0, 0, -1, 15.0,-1,0);
		}
		SetPVarInt(playerid,"block", true);
		SendOk(playerid, "Вы установили шипы новейшей технологии. Они имеют радиуправляемый интерфейс.");
		SendOk(playerid, "Этот интерфейс даёт возможность деактивировать шипы на приличном расстоянии от них. (/spikes)");
	}
	else {
		DestroyDynamic3DTextLabel(ShipText[playerid]);
		if(ObjectShip[playerid] != 0x7F800000) {
			DestroyDynamicObject(ObjectShip[playerid]);
			ObjectShip[playerid] = 0x7F800000;
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DeletePVar(playerid,"block");
		DeletePVar(playerid,"Ships");
		SendOk(playerid, "Шипы деактивированы");
	}
	return 1;
}
CMD:rights(playerid) {
    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	if(GetPVarInt(playerid, "rightstext") > gettime()) return ErrorMessage(playerid,"Использовать данную команду можно один раз в 20 секунд");
	new string[158];
	format(string,sizeof(string),"- Вы имеете право хранить молчание. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Всё, что вы скажете, может и будет использовано против вас в суде. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Если вы не можете оплатить услуги адвоката, он будет предоставлен вам государством. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Вы понимаете свои права? (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	SetPVarInt(playerid, "rightstext", gettime()+20);
	return 1;
}
CMD:obc(playerid) {
    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только правоохранительным органам");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fSFPD && VehicleInfo[veh][vTeam] != fLVPD && VehicleInfo[veh][vTeam] != fFBI) return ErrorMessage(playerid, "Вы не в полицейской машине");
    if(GetPVarInt(playerid, "Patrul") == 1) {
		DeletePVar(playerid, "Patrul");
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Вы закончили патрулирование");
		return 1;
	}
    D(playerid, D_OBC_LIST,DSL, ""P"Бортовой компьютер", ""P"1."W" Список разыскиваемых\n"P"2."W" База данных\n"P"3."W" Поступившие вызовы", "Выбрать", "Закрыть");
	return 1;
}
CMD:scan(playerid,params[]) {
    if(GetTeamID(playerid) != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только сотрудникам FBI");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(!PlayerToPoint(3.0,playerid,-85.1121,1800.2982,2022.6899) &&
		!PlayerToPoint(3.0,playerid,-98.9768,1790.1069,2022.6899)) return ErrorMessage(playerid,"Необходимо находиться на рабочем месте");
    new giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/scan [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок оффлайн");
    ShowPass(giveplayerid,playerid);
	return 1;
}
CMD:hbject(playerid, params[]) {
	if((PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) && (!GetString(player_name[playerid],"Fankyo_Web"))) return true;
	new giveplayerid,
		slot = -1, 
		objectid = -1, 
		bone = -1, 
		Float:oX, 
		Float:oY, 
		Float:oZ, 
		Float:rX, 
		Float:rY, 
		Float:rZ, 
		Float:sX, 
		Float:sY, 
		Float:sZ;
	if(sscanf(params, "udddfffffffff", giveplayerid, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ)) 
		return SendEsp(playerid, "Используйте: /hbject [playerid] [слот 0-9] [id объект] [1-18]  [x][y][z]  [rx][ry][rz] [sx][sy][sz]");
	
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!IsPlayerAttachedObjectSlotUsed(giveplayerid, slot)) return SetPlayerAttachedObject(giveplayerid, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ);
	else {
		RemovePlayerAttachedObject(giveplayerid, slot), 
		SendOk(playerid, "Слот удален");
	}
	return 1;
}
CMD:hbjectedit(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new slot_id;
	if(sscanf(params, "d", slot_id)) return SendEsp(playerid, "/hbedit [слот]");
	if(IsPlayerAttachedObjectSlotUsed(playerid, slot_id)) EditAttachedObject(playerid, slot_id);
	return 1;
}
alias:hbjectedit("hbedit");
CMD:getobjectpos(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new Float:x1,Float:y1,Float:z1,string[128],slot;
    if(sscanf(params, "d",slot)) return SendEsp(playerid, "/getobjectpos [Слот]");
	GetObjectPos(SlotObject[slot],x1,y1,z1);
	format(string, sizeof(string), "GetDynamicObjectPos %f,%f,%f",x1,y1,z1);
	SendClientMessage(playerid,COLOR_GREY,string);
	return true;
}
CMD:cobj(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new float:x1,float:y1,float:z1,float:rx1,float:ry1,float:rz1;
	if(sscanf(params, "ddp<,>ffffff", params[0],params[1],x1,y1,z1,rx1,ry1,rz1)) return SendEsp(playerid, "/cobj [слот] [id объекта] [X] [Y] [Z] [rX] [rY] [rZ]");
	if(SlotCObject[params[0]] != 0) return 1;
	if(params[0] >= 499) return 1;
	SlotCObject[params[0]] = CreateDynamicObject(params[1],Float:x1,Float:y1,Float:z1,Float:rx1,Float:ry1,Float:rz1);
	new string[128];
	format(string,sizeof(string),"Объект создан. ID: "ORANGE"%d"G" | Слот: "ORANGE"%d",params[1],params[0]);
	SendOk(playerid,string);
	return 1;
}
CMD:dcobject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/dcobject [слот]");
	if(SlotCObject[params[0]] != 0) {
		DestroyDynamicObject(SlotCObject[params[0]]);
		SlotCObject[params[0]] = 0;
		new string[128];
		format(string,sizeof(string),"Объект удален. Слот: "ORANGE"%d",params[0]);
		SendOk(playerid,string);
	}
	else ErrorMessage(playerid,"Слот не найден");
	return 1;
}
CMD:obj(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "dd", params[0],params[1])) return SendEsp(playerid, "/obj [слот] [id объекта]");
	if(SlotObject[params[0]] != 0) return 1;
	if(params[0] >= 99) return 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	SlotObject[params[0]] = CreateDynamicObject(params[1],x1,y1,z1,0.00,0.00,0.00);
	new string[128];
	format(string,sizeof(string),"Объект создан. ID: "ORANGE"%d"G" | Слот: "ORANGE"%d",params[1],params[0]);
	SendOk(playerid,string);
	return 1;
}
CMD:dobject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/dobject [слот]");
	if(SlotObject[params[0]] != 0) {
		DestroyDynamicObject(SlotObject[params[0]]);
		SlotObject[params[0]] = 0;
		new string[128];
		format(string,sizeof(string),"Объект удален. Слот: "ORANGE"%d",params[0]);
		SendOk(playerid,string);
	}
	else ErrorMessage(playerid,"Слот не найден");
	return 1;
}
CMD:eobject(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) { SelectObject(playerid); } else {
		if(SlotObject[params[0]] != 0) {
			EditObject(playerid,SlotObject[params[0]]);
		}
	}
	return 1;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid) {
	if(!IsPlayerConnected(playerid)) return 0;
	new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,PX,PY,PZ);
	GetVehiclePos(vehicleid, X,Y,Z);
	new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	if(Distance <= radi*radi) return 1;
	return 0;
}
CMD:divorce(playerid) {
	if(strlen(PI[playerid][pMarried]) < 10) return ErrorMessage(playerid, "Вы не женаты/замужем");
	SendOk(playerid, "Вы развелись");

	new query[156];
	format(query, sizeof(query), "UPDATE `accounts` SET `pMarried` = '-' WHERE `Name` = '%s' LIMIT 1",GetName(playerid));
	mysql_pquery(connects, query, "", "");

	strmid(PI[playerid][pMarried], "-", 0, 10);
	return 1;
}

CMD:propose(playerid,params[]) {
	if(strlen(PI[playerid][pMarried]) > 10) return ErrorMessage(playerid, "Вы уже женаты/замужем");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/propose [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(strlen(PI[params[0]][pMarried]) > 10) return ErrorMessage(playerid, "Игрок уже состоит в браке");
	if (!IsPlayerStream(8.0, playerid, params[0])) return ErrorMessage(playerid, "Игрок далеко от Вас");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!PlayerToPoint(10.0, playerid, -11.0080,1250.0342,1003.9500)) return ErrorMessage(playerid, "Вы не у церкви");
	new string[144];
	format(string, sizeof(string), "Вы предложили выйти замуж/пожениться: "W"%s", player_name[params[0]]);
	SendOk(playerid, string);
	format(string, sizeof(string), ""ORANGE"%s"W" предлагает вам руку и сердце\n\n"YELLOW"Вы хотите принять предложение?", player_name[playerid]);
	D(params[0],D_MARRIED,DSM, ""P"Свадьба",string,"Да","Нет");
	SetPVarInt(params[0],"ProposeOffer",playerid+1);
	return 1;
}
CMD:wbook(playerid, params[]) {
 	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/wbook [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(params[0] == playerid) ShowWBook(playerid,params[0]),MeAction(playerid,"просматривает свою трудовую книжку");
	else {
	    if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	
		new string[144];
			
		format(string, sizeof(string), ""P"%s "G"хочет показать Вам свою трудовую книжку", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "G"показать Вашу трудовую книжку", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"wbook", playerid + 1);
 	}
	return 1 ;
}
CMD:medcard(playerid,params[]) {
	if(!PI[playerid][pMedCard]) return ErrorMessage(playerid,"У Вас нет медицинской карты. Получить её можно в любой из больниц");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/medcard [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(params[0] == playerid) MeAction(playerid,"просматривает свою мед. карту"),ShowMedcard(playerid, playerid);
	else {
		if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	    new string[144];

		format(string, sizeof(string), ""P"%s "G"хочет показать Вам мед.карту", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Вы предложили "P"%s "G"показать Вашу мед. карту", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"medcard", playerid + 1);
 	}
	return 1;
}
CMD:medics(playerid) {
    if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только здравоохранительным органам");
	if(PI[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fMEDICLS && VehicleInfo[veh][vTeam] != fMEDICSF && VehicleInfo[veh][vTeam] != fMEDICLV) return ErrorMessage(playerid, "Вы не в Т/С МЧС");
	new Float:pos[3];
    GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
	new bool:callers = false;
	new string[700],str[30];
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!GetPVarInt(i,"call_medics")) continue;
		if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
		format(string,sizeof(string),"%s\n",player_name[i]),strcat(string,str);
		callers = true;
	}
	if(!callers) return ErrorMessage(playerid,"Вызовы не поступали");
	D(playerid,D_MEDICS,DSL,""P"Поступившие вызовы",string,"Выбрать","Отмена");
	return 1;
}
CMD:tow(playerid, params[]) {
	if(PI[playerid][pJob] != 2) return ErrorMessage(playerid,"Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Вы должны быть за рулем своего буксира");
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return	SendEsp(playerid, "/tow [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,giveplayerid) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid,"Вы далеко друг от друга");
	SetPVarInt(playerid,"towoffer",playerid);
	SetPVarInt(playerid,"towoffee",giveplayerid);
	SetPVarInt(giveplayerid,"towoffer",playerid);
	SetPVarInt(giveplayerid,"towoffee",giveplayerid);
	new string[156];
	format(string,sizeof(string),"Вы предложили "P"%s"G" отбуксировать транспортное средство",player_name[giveplayerid]);
	SendOk(playerid,string);

	format(string,sizeof(string),""W"Механик "P"%s"W" предлагает отбуксировать Ваше транспортное средство\n\nДля буксировки нажмите "YELLOW"'ПРИНЯТЬ'",player_name[playerid]);
	D(giveplayerid,D_TOW,DSM, ""P"Буксировка",string,"Принять","Отмена");
	return 1;
}
CMD:untow(playerid, params[]) {
	if(GetPVarInt(playerid,"towvid")) {
		new vehicleid = GetPVarInt(playerid,"towvid");
		new trailer = GetPVarInt(playerid,"towactvid");
		SetPVarInt(playerid,"towvid",0);
		SetPVarInt(playerid,"towactvid",0);
		if(GetVehicleTrailer(vehicleid) == trailer)  {
			DetachTrailerFromVehicle(vehicleid);
			SendOk(playerid,"Ваша машины была отцеплена от авто механика");
			return true;
		}
	}
	if(PI[playerid][pJob] != 2) return ErrorMessage(playerid,"Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Вы должны быть за рулем своего буксира");
	new vehicleid = GetPlayerVehicleID(playerid);
	new trailer = GetVehicleTrailer(vehicleid);
	if(!trailer) return ErrorMessage(playerid,"Вы не буксируете авто");
	DetachTrailerFromVehicle(vehicleid);
	SendOk(playerid,"Вы отсоединили авто");
	return 1;
}
CMD:bhd(playerid)
{
	if(PI[playerid][pJob] != 4) return ErrorMessage(playerid,"Вы не работаете развозчиком еды");
	
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar])
		return ErrorMessage(playerid,"Вы должны быть за рулем своего автомобиля по развозки еды");

	new ni = GetNearestTrunckEat(playerid), max_distance = 100000, id_biz = -1, string[1024];

	if(ni==-1)
	{
		for(new i = 1; i < gBusinessCount; i ++)
		{
			if(gBusiness[i][bizzType] != 1) continue;

			new here_distance = (!IsPlayerInAnyVehicle(playerid))
				? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]))
				: floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));

			if(here_distance < max_distance)
			{
				id_biz = i;

				max_distance = here_distance;
			}
		}
		SendClientMessage(playerid, CGOLD, "Местоположение ближайшей закусочной отмечено на вашем GPS навигаторе");

		EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
	}
	else
	{
		format(string, sizeof(string), "\n\n\
			"W"Стоимость "P"1"W" хот-дога: "GREEN"$%d\nИспользуйте количество хот-догов, которое хотите закупить:\n\n",gBusiness[ni][bizzPrice]*50);
			
		D(playerid,dEContract,DSI, ""P"Покупка хот-догов",string,"Купить","Отмена");

		SetPVarInt(playerid,"e_biz",ni);
	}
	return 1;
}
CMD:shd(playerid,params[])
{
	if(PI[playerid][pJob] != 4) return ErrorMessage(playerid,"Вы не работаете развозчиком еды");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Вы должны быть за рулем своего автомобиля по развозки еды");
	if(sscanf(params,"ii",params[0],params[1])) return SendEsp(playerid,"/shd [ид игрока] [цена]");
	if(params[1] < 50 || params[1] > 3000) return ErrorMessage(playerid,"Цена не может быть больше $3000 и меньше $50");
	if(GetPVarInt(playerid,"eatcolvo") < 1) return ErrorMessage(playerid,"В автомобили закончились хот-доги");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(10.0, playerid, params[0])) return ErrorMessage(playerid,"Игрок далеко от Вас");

	new string[170];
	format(string, sizeof(string), "Вы предложили "P"%s"G" купить хот-дог за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid, string);
	
	format(string, sizeof(string), ""P"Продавец хот-догов "W"%s"P" предложил купить Вам хот-дог за "GREEN"$%d\n\nВы согласны?",player_name[playerid],params[1]);
	D(params[0],dEHotDog,DSM, ""P"Покупка хот-дога",string,"Да","Нет");

	SetPVarInt(playerid,"id_hotdog",params[0] + 1);
	SetPVarInt(playerid,"price_hotdog", params[1]);
	SetPVarInt(params[0],"id_hotdog",playerid + 1);
	return 1;
}
CMD:contract(playerid) {
	if(PI[playerid][pJob] != 2) return ErrorMessage(playerid,"Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Вы должны быть за рулем своего буксира");
	new i = GetNearestTrunckFuel(playerid);
	if(i==-1) return 1;
	new string[156];
	format(string, sizeof(string), "\n\n"W"Стоимость "P"1"W" литра: "GREEN"$%d\nИспользуйте количество бензина, которое хотите закупить:\n\n",gBusiness[i][bizzPrice]);
	D(playerid,dFContract,DSI, ""P"Покупка топлива",string,"Купить","Отмена");
	SetPVarInt(playerid,"f_biz",i);
	return 1;
}
CMD:refill(playerid,params[]) {
	if(PI[playerid][pJob] != 2) return ErrorMessage(playerid,"Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Вы должны быть за рулем своего буксира");
	if(sscanf(params,"iii",params[0],params[1],params[2])) return SendEsp(playerid,"/refill [ид игрока] [бензин] [цена]");
	if(params[2] < 50 || params[2] > 3000) return ErrorMessage(playerid,"Цена не может быть больше $3000 и меньше $50");
	if(GetPVarInt(playerid,"toplivo") < params[1]) return ErrorMessage(playerid,"У Вас нет столько топлива");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(10.0, playerid, params[0])) return ErrorMessage(playerid,"Игрок далеко от Вас");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Игрок должен быть в машине");
	if(VehicleInfo[GetPlayerVehicleID(params[0])][vFuel]+params[1] > gTransport[GetVehicleModel(GetPlayerVehicleID(params[0])) - 400][trTank]) return ErrorMessage(playerid,"В машине, которую Вы хотите заправить полный бак");

	new string[170];
	format(string, sizeof(string), "Вы предложили "P"%s"G" заправить его т.с. на "W"%d"G" литров за "ORANGE"$%d",player_name[params[0]],params[1],params[2]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"Механик "W"%s"P" предложил заправить ваше т.с. на "W"%d"P" литров за "GREEN"$%d\n\nВы согласны?",player_name[playerid],params[1],params[2]);
	D(params[0],dRefill,DSM, ""P"Заправка",string,"Да","Нет");

	SetPVarInt(playerid,"id_refill",params[0] + 1);
	SetPVarInt(playerid,"price_refill", params[2]);
	SetPVarInt(playerid,"litres_refill", params[1]);
	SetPVarInt(params[0],"id_refill",playerid + 1);
	return 1;
}
cmd:remp(playerid, const params[]) {
    if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в Т/С");
	new Float:X,Float:Y,Float:Z;
	new car = GetNearestVehicle(playerid);
	GetVehiclePos(car, X, Y, Z);
	if(IsPlayerInRangeOfPoint(playerid,4,X, Y, Z)) {
		new str[50];
		format(str, sizeof(str),"Осмотр автомобиля %s", gTransport[GetVehicleModel(car)-400][trName]);
		SetPVarInt(playerid,"MechOsmotrVEHID",car);
		SetPVarInt(playerid,"JOBOSMOTR",0);
		new Float:vhealth;
		GetVehicleHealth(car, vhealth);
		new panels_job,doors_job,lights_job,tires_job;
		GetVehicleDamageStatus(car,panels_job,doors_job,lights_job,tires_job);
		
		static const f_str[] = "№ Наименование\tСостоятние\n"P"1."W" Двери\t%s\n"P"2."W" Кузов\t%s\n"P"3."W" Фары\t%s\n"P"4."W" Колёса\t%s\n"P"5."W" Двигатель\t%s\nИнструментов "ORANGE"%d";
		new string[sizeof(f_str) +128];
		
		format(string,sizeof(string),f_str,!doors_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!panels_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!lights_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!tires_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),vhealth >= 1000?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),PI[playerid][pInstrument]);
		D(playerid,D_REPAIR_LIST,DSTH,str,string,"Осмотреть","Отмена");
		return 1;
	}
	else return ErrorMessage(playerid,"Вы далеко от Т/С");
}
CMD:repair(playerid,params[]) {
    if(PI[playerid][pJob] != 2) return ErrorMessage(playerid,"Вы не работаете механиком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Вы должны быть за рулем своего буксира");
	new price,giveplayerid;
	if(sscanf(params,"ud",giveplayerid,price)) return SendEsp(playerid,"/repair [playerid] [сумма]");
	if(price < 100 || price > 1000) return ErrorMessage(playerid,"Цена не должна быть ниже $100 и выше $1000");
	if(!IsPlayerConnected(giveplayerid) || giveplayerid == playerid) return ErrorMessage(playerid,not_id);
	if(GetPlayerState(giveplayerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Игрок должен быть за рулем автомобиля");
	if(GetPlayerDistanceToPlayer(playerid,giveplayerid) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid,"Вы далеко друг от друга");
	if(active_accept(giveplayerid)) return ErrorMessage(playerid,"У игрока есть активное предложение");
	SetPVarInt(playerid,"repairoffee",giveplayerid);
	SetPVarInt(giveplayerid,"repairoffer",playerid);
	SetPVarInt(giveplayerid,"repairoffee",giveplayerid);
	SetPVarInt(giveplayerid,"repairprice",price);
	new string[142];
	format(string, sizeof(string), "Вы предложили "P"%s"G" отремонтировать его т.с. за "ORANGE"$%d",player_name[giveplayerid],price);
	SendUse(playerid, string);
	format(string, sizeof(string), "Механик "P"%s"G" предложил отремонтировать ваше т.с. за "ORANGE"$%d",player_name[playerid],price);
	SendUse(giveplayerid, string);
	SendClientMessage(giveplayerid,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return true;
}
CMD:repairs(playerid) {
    if(PI[playerid][pJob] != 2) return ErrorMessage(playerid,"Вы не работаете механиком");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vJob] != 2) return ErrorMessage(playerid, "Вы не в автомобиле механиков");
	new Float:pos[3];
    GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
	new bool:callers = false;
	new string[700],str[30];
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!GetPVarInt(i,"call_mechanics")) continue;
		if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
		format(string,sizeof(string),"%s\n",player_name[i]),strcat(string,str);
		callers = true;
	}
	if(!callers) return ErrorMessage(playerid,"Вызовы не поступали");
	D(playerid,D_REPAIRS,DSL,""P"Поступившие вызовы",string,"Выбрать","Отмена");
	return 1;
}
CMD:stream(playerid) {  //youtube
	new string[2000], status;
	format(string, sizeof(string),""W"№\t"ORANGE"Название канала\t"W"Ник\n");
	for(new i = 0; i < 100; i++){
		if(youtube[i][you_uid] == 0) continue;
		format(string, sizeof(string),"%s"W"%i\t"ORANGE"%s\t"W"%s\n",string,i+1,youtube[i][you_name],player_name[youtube[i][you_id]]);
		status = 1;
	}
	if(status == 1) D(playerid, DIALOG_NONE, DSTH, ""P"Стримеры онлайн",string, "Закрыть", "");
	else D(playerid, DIALOG_NONE, DSM, ""P"Стримеры онлайн",""W"В данный момент никто не ведет стрим", "Закрыть", "");
	return 1;
}
CMD:live(playerid) {  //youtube
	new idyoutube = 0,rows;
	new query[100], string[100];
	if(!youtube_player[playerid]){
		if(youtube_time[playerid] > gettime()) return ErrorMessage(playerid,"Команду можно использовать раз в 5 минут!");
		format(query,sizeof(query),"SELECT * FROM `streamers` WHERE `uid` = '%i' LIMIT 1 ",PI[playerid][pID]);
		new Cache:result = mysql_query(connects, query);
		rows = cache_num_rows();
		if(rows) {
			for(new i = 0; i < 100; i++){
				if(youtube[i][you_uid] != 0) continue;
				idyoutube = i;
				break;
			}
			cache_get_value_name(0, "name",youtube[idyoutube][you_name],18);
			youtube[idyoutube][you_uid] = PI[playerid][pID];
			youtube[idyoutube][you_id] = playerid;
			youtube_player[playerid] = 1;
			format(string, sizeof(string),""ORANGE"Вы вышли в режим стрима, ваш канал %s",youtube[idyoutube][you_name]);
			SendClientMessage(playerid, -1, string);
			youtube_time[playerid] = gettime()+300;
		}
		else ErrorMessage(playerid,"Вы не стример!");
		cache_delete(result);
	}
	else {
		SendClientMessage(playerid, -1, ""ORANGE"Вы завершили стрим");
		youtube_player[playerid] = 0;
		for(new i = 0; i < 100; i++){
			if(youtube[i][you_uid] == PI[playerid][pID]) {
				youtube[i][you_name][0] = EOS;
				youtube[i][you_datasub][0] = EOS;
				youtube[i][you_id] = 0;
				youtube[i][you_uid] = 0;
				youtube[i][you_date] = 0;
				youtube[i][you_subsctiptions] = 0;
				youtube[i][you_timestream] = 0;
				break;
			}	
		}
	}
	return 1;
}

CMD:offgettime(playerid, const params[])  {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params,"p< >s[24]",params)) return SendEsp(playerid,"/offgettime [ник]");
	new rows;
	new query[250], string[550],header[64];
	new b_date[15], online[15], afk[15];
//	if(youtube_time[playerid] > gettime()) return ErrorMessage(playerid,"Команду можно использовать раз в 5 минут!");
	format(header, sizeof(header),""P"Оффлайн статистика: %s",params);
	format(string, sizeof(string),""ORANGE"Дата\t"ORANGE"Онлайн за день\t"ORANGE"АФК за день\n");
	format(string, sizeof(string),"%s"ORANGE"Год-Месяц-Число\t"ORANGE"ЧЧ:ММ:СС\t"ORANGE"ЧЧ:ММ:СС\n",string);
	mysql_format(connects, query, sizeof(query), "\
		SELECT `date`, SEC_TO_TIME(`online_sec`-`afk_sec`) as online, SEC_TO_TIME(`afk_sec`) as afk FROM `online_player` WHERE \
		`accountid` = (SELECT `pID` FROM `accounts` WHERE `Name` LIKE '%e') ORDER BY `id` DESC LIMIT 7",params);
		
	new Cache:result = mysql_query(connects, query);
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++){
			cache_get_value_name(i, "date",b_date,sizeof(b_date));
			cache_get_value_name(i, "online",online,sizeof(online));
			cache_get_value_name(i, "afk",afk,sizeof(afk));
			format(string, sizeof(string),"%s"W"%s\t"W"%s\t"W"%s\n",string,b_date,online,afk);
		}
		D(playerid, DIALOG_NONE, DSTH, header,string, "Закрыть", "");
	}
	else ErrorMessage(playerid,"Такого аккаунта не существует");
	cache_delete(result);
	return 1;
}
CMD:leaders(playerid) {
	new countleader = 0;
	new string[1650];
	new leader[25];
	format(string, sizeof(string),""W"Фракция\t"ORANGE"Лидер\t"W"Номер\t"W"Статус\n");
	format(string, sizeof(string),"%s"ORANGE"Заместители организаций - /subleaders\n",string);
	for(new i = 1;i < MAX_FRACTIONS;i ++) {
		if(i == fMAYOR || i == fINSTRUCTORS) continue;
	
		if(!strcmp(FI[i][fLeader],"None",true)) strmid(leader,"Отсутствует", 0, strlen("Отсутствует"), 25);
		else strmid(leader,"Отсутствует", 0, strlen("Отсутствует"), 25);

		new idFrac = GetCheckID(FI[i][fLeader]);
		if(idFrac != INVALID_PLAYER_ID) {
			format(string, sizeof(string),"%s"W"%s\t"W"%s[%d]%s\t"W"т. %d\t"GREEN"Онлайн\n",string,FI[i][fName],player_name[idFrac],idFrac,TI[idFrac][tAFK]>=3?("{ffa800}[AFK]"):(""),PI[idFrac][pPhone]);
			countleader++;
		}
		else{
			if(!strcmp(FI[i][fLeader],"None",true)) format(string, sizeof(string),"%s"W"%s\t"W"\t"ORANGE"Отсутствует лидер\n",string,FI[i][fName]);
			else format(string, sizeof(string),"%s"W"%s\t"W"%s\t"W"-\t"NO"Оффлайн\n",string,FI[i][fName],FI[i][fLeader]);
		}
	}
	format(string, sizeof(string), "%s\n"ORANGE"В сети %i лидер(ов)", string,countleader);
	D(playerid, DIALOG_NONE, DSTH, ""P"Лидеры организаций",string, "Закрыть", "");
	return 1;
}
CMD:subleaders(playerid) {
	new countleader = 0;
	new string[2000];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] == 0) continue;
		if(PI[i][pLeader] != 0) continue;
		if(PI[i][pRank] < FI[GetTeamID(i)][fInviteRang]) continue;
		if(PI[i][pAdmin]) continue;
		format(string, sizeof(string), "%s"G"%s [%d] - [т. %d] - %s %s\n", string, player_name[i], i,PI[i][pPhone], FI[PI[i][pMember]][fName],TI[i][tAFK]>=3?("{ffa800}[AFK]"):(""));
		countleader++;
	}
	if(countleader > 0) {
		format(string, sizeof(string), "%s\n"ORANGE"В сети %i заместителей", string,countleader);
		D(playerid, DIALOG_NONE, DSM, ""P"Заместители организаций",string, "Закрыть", "");
	}
	else D(playerid, DIALOG_NONE, DSM, ""P"Заместители организаций",""W"Нет заместителей в сети", "Закрыть", "");
	return 1;
}
CMD:fwarn(playerid, params[]) {
	if(!PI[playerid][pMember]) return 1;
	new string[156];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendEsp(playerid, "/fwarn [id] [причина]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pMember] != PI[playerid][pMember] || PI[playerid][pRank] <= PI[params[0]][pRank]) return ErrorMessage(playerid,"Игрок не в Вашей организации / выше в должности");
    if(IsAIP(params[1])) return 1;
	PI[params[0]][pfWarn] ++;
	UpdatePlayerData(params[0],"fwarn",PI[params[0]][pfWarn]);
	FracLog(LOGS_FWARN,player_name[playerid],player_name[params[0]],params[1]);

	if(PI[params[0]][pfWarn]>=3) {
		if(start_work[params[0]]) {
			SendOk(params[0],"Рабочий день окончен");
			start_work[params[0]] = 0;
		}
		add_jobinfo(params[0],params[1]);
		PI[params[0]][pRank] = 0;
		PI[params[0]][pMember] = 0;
		PI[params[0]][pJob] = 0;
		PI[params[0]][pFracSkin] = 0;
		SetPlayerColor(params[0],0xFFFFFF11);
		skin_player(params[0]);
		SaveAccount(params[0]);
		PI[params[0]][pfWarn] = 0;
		UpdatePlayerData(params[0],"fwarn",0);
		format(string, sizeof(string), "[F] %s выдал выговор и уволил игрока %s (3/3). Причина: %s",player_name[playerid],player_name[params[0]],params[1]);
		SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED,string);
		FracLog(LOGS_UNINVITE,player_name[playerid],player_name[params[0]],params[1]);
		return 1;
	}
	format(string, sizeof(string), "[F] %s выдал выговор игроку %s (%i/3). Причина: %s",player_name[playerid],player_name[params[0]],PI[params[0]][pfWarn],params[1]);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED,string);
	return 1;
}

CMD:funwarn(playerid, params[]) {
	if(!PI[playerid][pMember]) return 1;
	new string[156];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendEsp(playerid, "/funwarn [id] [причина]");
	if(!PI[params[0]][pfWarn]) return ErrorMessage(playerid, "У данного игрока нет выговоров");
	if(PI[params[0]][pMember] != PI[playerid][pMember] || PI[playerid][pRank] <= PI[params[0]][pRank]) return ErrorMessage(playerid,"Игрок не в Вашей организации / выше в должности");
	PI[params[0]][pfWarn]--;
	UpdatePlayerData(params[0],"fwarn",PI[params[0]][pfWarn]);
	format(string, sizeof(string), "[F] %s снял выговор игроку %s. Причина: %s",player_name[playerid],player_name[params[0]],params[1]);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED,string);
	FracLog(LOGS_FUNWARN,player_name[playerid],player_name[params[0]],params[1]);
	return 1;
}
CMD:members(playerid) {
	if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
	new ids = 0;
	new string[3000],str[128];
	strcat(str,"ID\tРанг\tТелефон\tВыговоры\tИмя"W"\n\n");
	strcat(string,str);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] != PI[playerid][pMember])continue;
		if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
		if(PI[i][pAdmin]) continue;
		format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PI[i][pRank],PI[i][pPhone],PI[i][pfWarn],player_name[i],(start_work[i]) ? ("[На работе]") : ("[Не на работе]"),(TI[i][tAFK] > 3) ? (""P"[AFK]"W""):(""));
		strcat(string,str);
		ids++;
	}
	D(playerid, DIALOG_NONE, DSM, ""P"Члены организации онлайн", string, "Закрыть", "");
	new strr[128];
	format(strr,sizeof(strr),"Всего игроков в организации: "ORANGE"%d",ids);
	SendOk(playerid,strr);
	return 1;
}
CMD:invite(playerid, params[]) {
	if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день");
	new string[128];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fInviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"d",params[0])) return	SendEsp(playerid, "/invite [ID]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(IsPlayerInAnyVehicle(params[0])) return ErrorMessage(playerid, "Игрок в машине");
	if(GetTeamID(params[0]) > 0) return ErrorMessage(playerid, "Игрок уже состоит в организации");
	if(PI[params[0]][pWarns] >= 1) return ErrorMessage(playerid, "У игрока имеются предупреждения");
	//if(PI[params[0]][pLevel] < 2) return ErrorMessage(playerid, "У игрока должен быть 2 уровень");
	if(bl_info[params[0]][bl_fraction][PI[playerid][pMember]]) return ErrorMessage(playerid, "Игрок в ЧС Вашей организации");
	if(!IsPlayerStream(7.0, playerid, params[0])) return ErrorMessage(playerid, "Вы далеко от игрока");
	if(GetPVarInt(params[0],"krup")) return ErrorMessage(playerid, "Данный игрок работает крупье");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	switch(PI[playerid][pMember]) {
		case fLSPD,fSFPD,fLVPD: {
			if(PI[params[0]][pLevel] < invite_frac[0]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[0]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fFBI: {
			if(PI[params[0]][pLevel] < invite_frac[1]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[1]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fARMYSF,fARMYLV: {
			if(PI[params[0]][pLevel] < invite_frac[2]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[2]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fMEDICLS,fMEDICSF,fMEDICLV: {
			if(PI[params[0]][pLevel] < invite_frac[3]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[3]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fLSNEWS,fSFNEWS,fLVNEWS: {
			if(PI[params[0]][pLevel] < invite_frac[4]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[4]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fLCN,fYAKUZA,fRM: {
			if(PI[params[0]][pLevel] < invite_frac[5]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[5]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
			if(PI[params[0]][pLevel] < invite_frac[6]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[6]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fWHITEHOUSE: {
			if(PI[params[0]][pLevel] < invite_frac[7]) {
				format(string,sizeof(string),"У игрока должен быть %i уровень", invite_frac[7]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
	}
	new mes[400];
	for(new i;i<10;i++) {
		new skinid = gFractionSkin[PI[playerid][pMember]][i];
		if(!skinid) break;
		if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
		else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
	}
	D(playerid,dInviteSkin,DSL,player_name[params[0]],mes,"Принять","");
	SetPVarInt(playerid,"invkot",params[0]);
	return 1;
}
CMD:uninvite(playerid, params[]) {
	if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день");
	new string[156];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendEsp(playerid, "/uninvite [playerid] [причина]");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
    if(IsAIP(params[1])) return 1;
	if(PI[params[0]][pLeader] >= 1) return ErrorMessage(playerid, "Вы не можете уволить лидера");
	if(PI[playerid][pLeader] <= 0 && PI[playerid][pRank] <= PI[params[0]][pRank]) return ErrorMessage(playerid,"Ваш ранг недостаточен");
	if(PI[params[0]][pMember] == 0) return ErrorMessage(playerid,"Игрок не состоит в Вашей организации");
	if(PI[params[0]][pMember] == PI[playerid][pLeader] || PI[params[0]][pMember] == PI[playerid][pMember]) {
		if(PI[params[0]][pMember] > 0) {
			format(string, sizeof(string),""P"%s"G" уволил Вас из организации. Причина: "W"%s", player_name[playerid],params[1]);
			SendUse(params[0],string);
			format(string, sizeof(string),""P"%s"G" был уволен из организации. Причина: "W"%s", player_name[params[0]],params[1]);
			SendUse(playerid, string);
			if(start_work[params[0]]) {
				SendOk(params[0],"Рабочий день окончен");
				start_work[params[0]] = 0;
			}
			if(GetPlayerState(params[0]) == PLAYER_STATE_DRIVER) RemovePlayerFromVehicleAC(params[0]);
			add_jobinfo(params[0],params[1]);
			PI[params[0]][pRank] = 0;
			PI[params[0]][pMember] = 0;
			PI[params[0]][pJob] = 0;
			PI[params[0]][pFracSkin] = 0;
			SetPlayerColor(params[0],0xFFFFFF11);
			skin_player(params[0]);
			SaveAccount(params[0]);
			SetPlayerArmour(params[0], 0);
			ResetPlayerWeapons(params[0]);
			FracLog(LOGS_INVITE,player_name[playerid],player_name[params[0]],params[1]);
		}
	}
	return 1;
}
CMD:leave(playerid) {
	if(PI[playerid][pLeader]) return ErrorMessage(playerid,"Лидеру запрещено");
	if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в машине");
	D(playerid,D_LEAVE,DSM, ""P"Увольнение", "\n\n"W"Вы действительно хотите покинуть организацию по собственному желанию?\n\n", "Покинуть", "Отмена");
	return 1;
}
CMD:taxispcar(playerid) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Вы не сотрудник транспортной компании");
	if(PI[playerid][bizz_status] < 3) return ErrorMessage(playerid,"Данная функция доступна руководителю таксопарка и управляющему");
	new string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vBizz] != PI[playerid][bizz_work]) continue;
		if(IsVehicleOccupied(i)) continue;
		LinkVehicleToInterior(i, 0);
		SetVehicleVirtualWorld(i, 0);
		SetVehicleToRespawn(i);
	}
	format(string, sizeof(string), "[TAXI] [%s] %s заспавнил незанятые машины",taxi_class[PI[playerid][bizz_status]-1],player_name[playerid]);
	BizzMSG(PI[playerid][bizz_work],COLOR_YELLOW,string);
	return 1;
}
CMD:trspcar(playerid) {
	if(!IsATK(playerid)) return ErrorMessage(playerid,"Вы не сотрудник транспортной компании");
	if(PI[playerid][bizz_status] < 2) return ErrorMessage(playerid,"Данная функция доступна руководителю транспортной компании и управляющему");
	new string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vBizz] != PI[playerid][bizz_work]) continue;
		if(IsVehicleOccupied(i)) continue;
		LinkVehicleToInterior(i, 0);
		SetVehicleVirtualWorld(i, 0);
		SetVehicleToRespawn(i);
	}
	format(string, sizeof(string), "[TRUCK] [%s] %s заспавнил незанятые машины",tk_class[PI[playerid][bizz_status]-1],player_name[playerid]);
	BizzMSG(PI[playerid][bizz_work],COLOR_YELLOW,string);
	return 1;
}
CMD:trinvite(playerid, params[]) {
	if(!IsATK(playerid)) return ErrorMessage(playerid,"Вы не сотрудник транспортной компании");
	if(PI[playerid][bizz_status] < 2) return ErrorMessage(playerid,"Данная функция доступна руководителю транспортной компании и управляющему");
	new taxi = PI[playerid][bizz_work];
	if(info_funcmembers(taxi) >= 50) return ErrorMessage(playerid,"В транспортной компании недостаточно свободных мест");
	if(sscanf(params,"d",params[0])) return	SendEsp(playerid, "/trinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(7.0, playerid, params[0])) return ErrorMessage(playerid, "Вы далеко от игрока");
	if(PI[params[0]][pLevel] < 4) return ErrorMessage(playerid, "У игрока недостаточный уровень для данной работы. Необходим 4 уровень");
	if(IsPlayerInAnyVehicle(params[0])) return ErrorMessage(playerid, "Игрок в машине");
	if(PI[params[0]][bizz_work] == 2 || PI[params[0]][bizz_work] == 3 || PI[params[0]][bizz_work] == 4) return ErrorMessage(playerid, "Данный игрок работает в таксопарке");
	if(PI[params[0]][bizz_work] == 5 || PI[params[0]][bizz_work] == 6 || PI[params[0]][bizz_work] == 7) return ErrorMessage(playerid, "Данный игрок уже работает в транспортной компании");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new mes[128];
	format(mes,sizeof(mes),"Вы предложили "P"%s"G" вступить в транспортную компанию",player_name[params[0]]);
	SendUse(playerid,mes);
	format(mes,sizeof(mes),""P"%s"G" хочет устроить Вас в транспортную компанию: "W"%s",player_name[playerid],FuncBizz[taxi][funcbName]);
	SendUse(params[0],mes);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(params[0], "tk_id", taxi); 
	return 1;
}
CMD:tinvite(playerid, params[]) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Вы не сотрудник таксопарка");
	if(PI[playerid][bizz_status] <= 4) return ErrorMessage(playerid,"Данная функция доступна руководителю таксопарка и управляющему");
	new taxi = PI[playerid][bizz_work];
	if(info_funcmembers(taxi) >= 50) return ErrorMessage(playerid,"В таксопарке недостаточно свободных мест");
	if(sscanf(params,"d",params[0])) return	SendEsp(playerid, "/tinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(7.0, playerid, params[0])) return ErrorMessage(playerid, "Вы далеко от игрока");
	if(PI[params[0]][pLevel] < 2) return ErrorMessage(playerid, "У игрока недостаточный уровень для данной работы");
	if(IsPlayerInAnyVehicle(params[0])) return ErrorMessage(playerid, "Игрок в машине");
	if(PI[params[0]][bizz_work] == 2 || PI[params[0]][bizz_work] == 3 || PI[params[0]][bizz_work] == 4) return ErrorMessage(playerid, "Данный игрок уже работает в таксопарке");
	if(PI[params[0]][bizz_work] == 5 || PI[params[0]][bizz_work] == 6 || PI[params[0]][bizz_work] == 7) return ErrorMessage(playerid, "Данный игрок работает в транспортной компании");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У игрока есть активное предложение");
	new mes[128];
	format(mes,sizeof(mes),"Вы предложили "P"%s"G" вступить в Ваш таксопарк",player_name[params[0]]);
	SendUse(playerid,mes);
	format(mes,sizeof(mes),""P"%s"G" хочет устроить Вас в таксопарк: "W"%s",player_name[playerid],FuncBizz[taxi][funcbName]);
	SendUse(params[0],mes);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(params[0], "taxi_id", taxi); 
	return 1;
}
alias:tr("trs");
CMD:tr(playerid, params[]) {
	if(PI[playerid][bizz_work] != 2 && PI[playerid][bizz_work] != 3 && PI[playerid][bizz_work] != 4 && PI[playerid][bizz_work] != 5 && PI[playerid][bizz_work] != 6 && PI[playerid][bizz_work] != 7) return 1;
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(!PI[playerid][pSettings][3]) return ErrorMessage(playerid,"Для начала включите чат компании. /mm > личные настройки > чат компании");
	new string[144];
	if(isnull(params) || strlen(params) > 100) return SendEsp(playerid,"/tr [введите текст]");
	switch(PI[playerid][bizz_work]) {
		case 2..4: format(string, sizeof(string), "[TAXI] [%s] %s: %s",taxi_class[PI[playerid][bizz_status]-1],player_name[playerid],params);
		case 5..7: format(string, sizeof(string), "[TRUCK] [%s] %s: %s",tk_class[PI[playerid][bizz_status]-1],player_name[playerid],params);
	}
	BizzMSG(PI[playerid][bizz_work],COLOR_YELLOW,string);
	return true;
}
CMD:taxi(playerid,params[]) {
    if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Вы не водитель такси");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PI[playerid][bizz_work]) return ErrorMessage(playerid,"Вы должны быть за рулем такси");
	if(sscanf(params,"u",params[0])) return SendEsp(playerid,"/taxi [ID игрока]");
	if(!IsPlayerGrandAdmin(playerid))
	{
		if(params[0] == playerid) return ErrorMessage(playerid,"Вы не можете запросить место назначения у себя");
	}
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerGrandAdmin(playerid))
	{
		if(GetPlayerState(params[0]) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(params[0]) != GetPlayerVehicleID(playerid)) return ErrorMessage(playerid,"Игрок должен сидеть на пассажирском месте в Вашем такси");
	}
	new mes[128];
	format(mes,sizeof(mes),"%s'y отправлен запрос на получение данных о месте назначения",player_name[params[0]]);
	SendClientMessage(playerid,0x3399FFFF,mes);
	format(mes,sizeof(mes),"Водитель такси "W"%s {"#269BD8"}запросил данные о месте назначения",player_name[playerid]);
	SendClientMessage(params[0],0x3399FFFF,mes);
	SendClientMessage(params[0],0x3399FFFF,"Зайдите в карту и поставьте правой кнопкой мыши метку там, куда хотите отправиться");
	SetPVarInt(params[0],"selectpoint",1);
	SetPVarInt(params[0],"taxidriver",playerid);
	return true;
}

CMD:untaxi(playerid,params[]) {
    if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Вы не водитель такси");
	RemovePlayerMapIcon(playerid,iconTaxi);
	return true;
}
CMD:bl( playerid ) {
	if(!PI[playerid][pMember]) return 1;
	else if(PI[playerid][pRank] < FI[PI[playerid][pMember]][fInviteRang]) return 1;
	D(playerid,D_BL,DSL,""P"Чёрный список", ""P"1."W" Внести в ЧС\n"P"2."W" Вычеркнуть из ЧС\n"P"3."W" Просмотреть ЧС\n"P"4."W" Просмотреть ЧС{33AA33} [онлайн]", "Выбрать", "Закрыть");
	return 1;
}
CMD:vacancy(playerid) {
    new vacancies = 0;
    new str[1024];
    new string[6 + 28 + 24];
	for(new i = 0; i < 14; i++) {
	    if(VacancyInfo[i][VacancyStatus]) {
			format(string, sizeof(string), ""W"%d. {%s}%s\n", vacancies + 1, GetColorFrac(VacancyInfo[i][VacancyFraction]), FI[VacancyInfo[i][VacancyFraction]][fName]);
			strcat(str, string);
	        vacancies++;
	    }
	}
	if(vacancies != 14 && PI[playerid][pMember] && PI[playerid][pRank] >= FI[GetTeamID(playerid)][fInviteRang]) {
	    strcat(str, "Добавить вакансию");
	  	return D(playerid,D_VACANCY, DSL, ""P"Вакансии", str, "Далее", "Закрыть");
	}
	if(vacancies == 0) return ErrorMessage(playerid, "Сейчас нет доступных вакансий");
	return D(playerid, D_VACANCY, DSL, ""P"Вакансии", str, "Далее", "Закрыть");
}
CMD:lmenu(playerid) {
	if(!PI[playerid][pLeader]) return 1;
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день");
	if(!IsAGang(playerid)) {
		static const f_str[] = ""P"1."W" Может принимать:\t"ORANGE"%s(%i)"W"\n\
								"P"2."W" Может увольнять:\t"ORANGE"%s(%i)"W"\n\
								"P"3."W" Может повышать:\t"ORANGE"%s(%i)\n\
								"P"4."W" Установить сообщение фракции\n\
								"P"5."W" Банк фракции\n\
								"P"6."W" Респавн незанятых авто\n\
								"P"7."W" Анти Team-Kill\t%s";
		new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + (-2 + 33) + 40];
		format(string,sizeof(string),f_str,GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fInviteRang]),FI[GetTeamID(playerid)][fInviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fUninviteRang]),FI[GetTeamID(playerid)][fUninviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fGiveRang]),FI[GetTeamID(playerid)][fGiveRang],FI[GetTeamID(playerid)][fAntiTK]?(""GREEN"Вкл"):(""NO"Выкл"));
		D(playerid,D_LMENU,DSL,""P"Панель лидера", string, "Выбрать", "Закрыть");
	}
	else {
		static const f_str[] = ""P"1."W" Может принимать:\t"ORANGE"%s(%i)"W"\n\
								"P"2."W" Может увольнять:\t"ORANGE"%s(%i)"W"\n\
								"P"3."W" Может повышать:\t"ORANGE"%s(%i)\n\
								"P"4."W" Доступ к складу:\t"ORANGE"%s(%i)\n\
								"P"5."W" Установить сообщение фракции\n\
								"P"6."W" Банк фракции\n\
								"P"7."W" Респавн незанятых авто\n\
								"P"8."W" Анти Team-Kill\t%s\n\
								"P"9."W" Названия рангов\n\
								"P"10."W" Дипломатия\n\
								"P"11."W" G-POINTS";
		new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + (-2 + 33) + 40];
		format(string,sizeof(string),f_str,GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fInviteRang]),FI[GetTeamID(playerid)][fInviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fUninviteRang]),FI[GetTeamID(playerid)][fUninviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fGiveRang]),FI[GetTeamID(playerid)][fGiveRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fUseStock]),FI[GetTeamID(playerid)][fUseStock],FI[GetTeamID(playerid)][fAntiTK]?(""GREEN"Вкл"):(""NO"Выкл"));
		D(playerid,D_LMENU_2,DSL,""P"Панель лидера", string, "Выбрать", "Закрыть");
	}
	return 1;
}
CMD:spawncars(playerid) {
	if(!IsAGang(playerid)) return 1;
	new string[128];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) {
		format(string,sizeof(string),"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fInviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vTeam] != PI[playerid][pMember]) continue;
		if(IsVehicleOccupied(i)) continue;
		SetVehicleToRespawn(i);
	}
	format(string,sizeof(string),"[F] %s %s заспавнил незанятые машины", GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid],playerid);
	SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED, string);
	return 1;
}
CMD:give(playerid, params[]) {
	if(sscanf(params, "u", params[0])) return SendEsp(playerid, "/give [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return ErrorMessage(playerid, "Вы слишком далеко");
	static const f_str[] = "Название предмета\tКоличество\n"P"1."W" Аптечки\t"ORANGE"%d\n"P"2."W" Маски\t"ORANGE"%d\n"P"3."W" Боеприпасы\t"ORANGE"%d\n"P"4."W" Наркотики\t"ORANGE"%d\n"P"5."W" Ремкомплект\t"ORANGE"%d";
	new string[sizeof f_str + 1 + (-2 + 5) + (-2 + 5)+ (-2 + 5) + (-2 + 5) + (-2 + 5)];
	format(string,sizeof(string),f_str,PI[playerid][pMedKit],PI[playerid][pMask],PI[playerid][pMats],PI[playerid][pDrugs],PI[playerid][pInstrument]);
	D(playerid, D_GIVE, DSTH, ""P"Передача предмета",string,"Выбрать", "Отмена");
	SetPVarInt(playerid, "Give_ID",params[0]);
	return 1;
}
CMD:dropgun(playerid, param[]) {
    if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(TI[playerid][tDuel] != -1) return 0;
	if(TI[playerid][tGunArea][0] != 0) return 0; 
	if(TI[playerid][tDMArea][0] != 0) return 0;
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Нельзя использовать на голодных играх");
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	new slot = GetWeaponSlot(weapon);
	if(GunPlayer[playerid][GetWeaponSlot(weapon)][0] != weapon) return 0;
	if(GunPlayer[playerid][slot][1]!=ammo) return 0;
	if(weapon < 1 || weapon > 47) return ErrorMessage(playerid, "Оружие должно находиться в руках");
	DropGun(playerid,weapon,ammo);
    return 1;
}
CMD:changeskin(playerid,params[]) {
    new mes[400];
    if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день");
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(mes,128,"Данная функция доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,mes);
		return 1;
	}
	if(sscanf(params,"u",params[0])) return SendEsp(playerid,"/changeskin [ID]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pMember] != PI[playerid][pMember]) return ErrorMessage(playerid,"Игрок не состоит в Вашей организации");
	if(PI[params[0]][pRank] >= PI[playerid][pRank] && params[0] != playerid) return ErrorMessage(playerid,"Ваш ранг недостаточен");
	SetPVarInt(playerid,"params[0]",params[0]);
	for(new i; i < 10;i++) {
		new skinid = gFractionSkin[PI[playerid][pMember]][i];
		if(!skinid) break;
		if(skinid == PI[params[0]][pFracSkin]) {
			if(!i) format(mes,sizeof(mes),""P"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\n"P"Скин %d [%d]",mes,i+1,skinid);
		}
		else {
			if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
		}
	}
	D(playerid,dFractionSkin,2,player_name[params[0]],mes,"Сменить","Отмена");
	return true;
}
CMD:rang(playerid, params[]) {
	if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необходимо начать рабочий день");
	new string[512];
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fGiveRang]) {
		format(string,128,"Доступно с %i ранга", FI[PI[playerid][pMember]][fGiveRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/rang [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PI[params[0]][pLeader] >= 1) return ErrorMessage(playerid, not_id);
	if(PI[playerid][pMember] != PI[params[0]][pMember]) return ErrorMessage(playerid,"Игрок не состоит в Вашей организации");
	if(PI[playerid][pRank] <= PI[params[0]][pRank]) return ErrorMessage(playerid, "Ваш ранг недостаточен");

	if(PI[playerid][pRank] == FI[PI[playerid][pMember]][fMaxRang]) {
		for(new i = 1; i <= FI[PI[playerid][pMember]][fMaxRang]; i++) {
			if(i>= PI[playerid][pRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pRank] == i) ? (""P"") : (""),GetRankName(PI[playerid][pMember],i),i);
			D(playerid,dRank,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	else if(PI[playerid][pRank] == FI[PI[playerid][pMember]][fMaxRang]-(FI[PI[playerid][pMember]][fMaxRang]-PI[playerid][pRank])) {
		for(new i = 1; i <= FI[PI[playerid][pMember]][fMaxRang]; i++) {
			if(i>= PI[playerid][pRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PI[params[0]][pRank] == i) ? (""P"") : (""),GetRankName(PI[playerid][pMember],i),i);
			D(playerid,dRank,DSL,""P"Выберите ранг",string,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	return 1;
}
CMD:f(playerid, params[]) {
	if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/f [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");

	static const f_str[] = "[F] %s %s[%d]: %s";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x6699ccFF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:fb(playerid, params[]) {
	if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/fb [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");

	static const f_str[] = "[F] %s %s[%d]: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x6699ccFF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:rb(playerid,params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fMAYOR && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/rb [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;

	static const f_str[] = "[R] %s %s[%d]: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];
	
	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x31cf63FF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return 1;
}
CMD:r(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fMAYOR && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(GetPVarInt(playerid,"takradio")) return ErrorMessage(playerid, "У Вас нет рации");
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/r [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;

	static const f_str[] = "[R] %s %s[%d]: %s";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];
	
	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PI[playerid][pMember], 0x31cf63FF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PI[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:rr(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && !IsAMafia(playerid)) return true;
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/rr [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;
	new string[156];
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[GetTeamID(playerid)][fName],GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid, result);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_NEWS) SendNews(0x54548CFF,string);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_PD) SendCop(0x54548CFF,string);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_MEDICS) SendMedic(0x54548CFF,string);
	if(PI[playerid][pMember] == fWHITEHOUSE && PI[playerid][pRank] == MINISTRE_ARMY) SendArmy(0x54548CFF,string);

	if(IsACop(playerid)) SendCop(0x54548CFF,string);
	if(IsAArm(playerid)) SendArmy(0x54548CFF,string);
	if(IsAMedic(playerid)) SendMedic(0x54548CFF,string);
	if(IsANews(playerid)) SendNews(0x54548CFF,string);
	if(IsAMafia(playerid)) SendMafia(0x54548CFF,string);
	return true;
}
CMD:d(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fMAYOR && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(GetPVarInt(playerid,"takradio")) return ErrorMessage(playerid, "У Вас нет рации");
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/d [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;
	new string[156];
	if(PI[playerid][pAdmin] >= 1 || dostup[playerid] != 0) {
		format(string,sizeof(string),"[АДМИНИСТРАТОР] %s(%d): %s",player_name[playerid],playerid,params[0]);
	}
	else {
		if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
		if(GetSVarInt("d_timer") > gettime()) return ErrorMessage(playerid, "Пользоваться рацией департамента можно раз в 15 секунд");
		SetSVarInt("d_timer", gettime() + 15);
		format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[GetTeamID(playerid)][fName],GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid, result);
	}
	SendDepMessage(COLOR_ALLDEPT, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	foreach(new i:Player) {
	    if(PI[i][pAdmin] < 1 || dostup[i] == 0) continue;
		switch(GetPVarInt(i,"admin_tipster")) {
			case 1-13,23: SendClientMessage(i, COLOR_ALLDEPT, string);
		}
	}
	return true;
}
CMD:db(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PI[playerid][pMember] != fINSTRUCTORS && PI[playerid][pMember] != fMAYOR && PI[playerid][pMember] != fWHITEHOUSE) return true;
	if(!PI[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат организации. /mm > личные настройки > чат организации");
	if(PI[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/db [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(GetSVarInt("d_timer") > gettime()) return ErrorMessage(playerid, "Пользоваться рацией департамента можно раз в 15 секунд");
	SetSVarInt("d_timer", gettime() + 15);

	static const f_str[] = "[%s] %s %s: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
	
	format(string, sizeof(string), f_str,FI[GetTeamID(playerid)][fName],GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid], result);
    SendDepMessage(COLOR_ALLDEPT, string);
	SendSpyMessage(PI[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:vipchat(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid, "adm_vip")) {
		DeletePVar(playerid, "adm_vip");
		SendOk(playerid,"Прослушка VIP чата отключена");
	}
	else SetPVarInt(playerid, "adm_vip", 1),SendOk(playerid,"Прослушка VIP чата включена");
	return 1;
}
CMD:v(playerid,params[]) {
	if(PI[playerid][pVips] != VIP_ECSCLUSIVE && PI[playerid][pVips] != VIP_FOREVER) return 1;
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У вас бан чата");
	if(isnull(params) || strlen(params) > 144) return SendEsp(playerid,"/v [текст]");
	new string[128];
	foreach(new i:Player) {
		if(PI[i][pVips] != VIP_ECSCLUSIVE && PI[i][pVips] != VIP_FOREVER && !GetPVarInt(i, "adm_vip")) continue;
		format(string, sizeof(string), "[VIP] %s [%d]: %s", player_name[playerid],playerid,params);
		SendClientMessage(i, COLOR_BLUE, string);
	}
	return 1;
}
CMD:bheal(playerid,params[0]) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Вы не медик");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/bheal [id]");
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Вы далеко друг от друга");
	get_disease(playerid, params[0]);
	new string[128];
	format(string,sizeof(string),"осматривает пациента %s",player_name[params[0]]);
	MeAction(playerid,string);
	return 1;
}
CMD:gmed(playerid,params[0])
{
	if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Вы не медик");
	if(PI[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/gmed [id]");
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PI[playerid][pAdmin] < 1)
	{
		if(!IsPlayerConnected(params[0]) || playerid == params[0]) return ErrorMessage(playerid, not_id);
	}
	else
	{
	    if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Вы далеко друг от друга");
	if(PI[params[0]][pGunLic]) return ErrorMessage(playerid,"Игрок уже получил печать о допуске в получении лицензии");
	MeAction(playerid,"поставил(а) печать о получении лицензии на оружие");
	new string[136];
	format(string,sizeof(string),"Медик %s поставил печать о допуске в получении лицензии на оружие",player_name[playerid]);
	SendOk(params[0],string);
	PI[params[0]][pGunLic] = 1;
	UpdatePlayerData(params[0],"GunLic",1);
	return 1;
}
CMD:heal(playerid, params[]) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Вы не медик");

	new veh = GetPlayerVehicleID(playerid), model = GetVehicleModel(veh), num = 0;

	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(VehicleInfo[veh][vTeam] == fMEDICLS || VehicleInfo[veh][vTeam] == fMEDICSF || VehicleInfo[veh][vTeam] == fMEDICLV)
		{
        	if(model == 416 || model == 487)
        	{
				if(sscanf(params,"ud",params[0],params[1])) return SendEsp(playerid, "/heal [id] [цена]");
				if(params[1] < 50 || params[1] > 150) return ErrorMessage(playerid,"Цена должна быть от $50 до $150");
				if (!ProxDetectorS(5.0,playerid, params[0])) return ErrorMessage(playerid, "Игрок слишком далеко от вас");
				//if(playerid == params[0]) return ErrorMessage(playerid,"Вы не можете вылечить самого себя");
				if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Этот игрок не в вашей машине");
				if(HealOffer[params[0]] == playerid) return ErrorMessage(playerid, "Вы уже предложили лечение данному игроку");
				new Float:health;
				GetPlayerHealth(params[0],health);
				if(health == 100) return ErrorMessage(playerid,"Игрок здоров");
				HealOffer[params[0]] = playerid;
				HealPrice[params[0]] = params[1];
				new string[128];
				format(string,sizeof(string),"Вы предложили лечение игроку "P"%s"G" за "ORANGE"$%d",player_name[params[0]],params[1]);
				SendUse(playerid,string);
				format(string,sizeof(string),"Доктор "P"%s"G" хочет Вас вылечить за "ORANGE"$%d",player_name[playerid],params[1]);
				SendUse(params[0],string);
				SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
        	}
        	else ErrorMessage(playerid,"Необходимо находиться в служебном транспорте больницы");
        }
        else return ErrorMessage(playerid,"Необходимо находиться в служебном транспорте больницы");
	}
	else
	{
	    for(new i; i < sizeof(medic_heal); i ++)
	    {
			if(IsPlayerInRangeOfPoint(playerid,70.0,medic_heal[i][0],medic_heal[i][1],medic_heal[i][2]))
			{
				if(sscanf(params,"ud",params[0],params[1])) return SendEsp(playerid, "/heal [id] [цена]");
				if(params[1] < 50 || params[1] > 150) return ErrorMessage(playerid,"Цена должна быть от $50 до $150");
				if (!ProxDetectorS(5.0,playerid, params[0])) return ErrorMessage(playerid, "Игрок слишком далеко от вас");
				//if(playerid == params[0]) return ErrorMessage(playerid,"Вы не можете вылечить самого себя");
				if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Этот игрок не в вашей машине");
				if(HealOffer[params[0]] == playerid) return ErrorMessage(playerid, "Вы уже предложили лечение данному игроку");
				new Float:health;
				GetPlayerHealth(params[0],health);
				if(health == 100) return ErrorMessage(playerid,"Игрок здоров");
				HealOffer[params[0]] = playerid;
				HealPrice[params[0]] = params[1];
				new string[128];
				format(string,sizeof(string),"Вы предложили лечение игроку "P"%s"G" за "ORANGE"$%d",player_name[params[0]],params[1]);
				SendUse(playerid,string);
				format(string,sizeof(string),"Доктор "P"%s"G" хочет Вас вылечить за "ORANGE"$%d",player_name[playerid],params[1]);
				SendUse(params[0],string);
				SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
				
			    num++;
			}
		}

		if(num == 0) return ErrorMessage(playerid,"Необходимо находиться в больнице или в служебном транспорте!");
	}
	return 1;
}
CMD:game(playerid, params[]) {
	if(GetPVarInt(playerid,"anti_game") > unix) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в машине");
    if(PI[playerid][pJailTime] >= 1) return ErrorMessage(playerid, "Вы в тюрьме");
    if(PI[playerid][pHospital]) return ErrorMessage(playerid, "Вы в больнице");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid,"/game [№]");
	if(params[0] > 2 || params[0] < 0) return ErrorMessage(playerid,"Используйте № от 0 до 2");
	if(!game_players[params[0]]) return ErrorMessage(playerid,"Свободных мест больше нету");
	game_players[params[0]]--;
	SetPlayerPosAC(playerid,2221.6768,1837.3529,10.8203,0,0);
	SetPlayerFacingAngle(playerid, 267.9986);
	SetCameraBehindPlayer(playerid);
	SetPVarInt(playerid, "anti_game", unix+30);
	return true;
}
CMD:tune(playerid) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	D(playerid, D_TUNE_LIST, DSL, ""P"Perfomance Tune", ""P"1."W" Улучшение двигателя\n"P"2."W" Улучшение тормозов", "Далее", "Закрыть");
	return 1;
}
CMD:mode(playerid) {
	if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
    if(!VehicleInfo[GetPlayerVehicleID(playerid)][vEngineBoost] && !VehicleInfo[GetPlayerVehicleID(playerid)][vBrakeBoost]) return 1;
	if(!VehicleInfo[GetPlayerVehicleID(playerid)][vPerfStatus]) {
        VehicleInfo[GetPlayerVehicleID(playerid)][vPerfStatus] = 1;
        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Sport",3000,3);
	}
	else {
        VehicleInfo[GetPlayerVehicleID(playerid)][vPerfStatus] = 0;
        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Standart",3000,3);
	}
 	return true;
}

CMD:lock(playerid, params[]) {	
	new type = 1;
	if(sscanf(params,"d",params[0])) type = 1;
	else type = params[0];
	if(type > 4 || type < 1) type = 1;
	else if(type == 2) {
		new plane = -1;
		new Float:check_pos[3];
		for(new i=1;i<=gPlaneCount;i++) {
			if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
			GetVehiclePos(gAirplanes[i][aCar]+1, check_pos[0],check_pos[1],check_pos[2]);
		}
		if(plane == -1) return ErrorMessage(playerid,"Вы не арендуете воздушный транспорт");
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			doors_status(gAirplanes[plane][aCar], playerid);
			return 1;
		}
		else return ErrorMessage(playerid,"Вы далеко от арендованого воздушного транспорта");
	}
	else if(type == 3) {
		if(TI[playerid][tArendKey] == -1) return ErrorMessage(playerid,"Вы не арендуете транспорт");
		new rc = TI[playerid][tArendKey];
		if(ArendInfo[rc][aPlayerID] != playerid) return ErrorMessage(playerid,"Вы не арендуете транспорт");
		new Float:check_pos[3];
		GetVehiclePos(ArendInfo[rc][aID], check_pos[0],check_pos[1],check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			doors_status(ArendInfo[rc][aID], playerid);
			return 1;
		}
		else return ErrorMessage(playerid,"Вы далеко от арендованого Т/С");
	}
	else if(type == 4) {
		if(!PI[playerid][pMember]) return ErrorMessage(playerid,"Вы не состоите в организации");
		new Float:check_pos[3];
		new car = GetNearestVehicle(playerid);
		if(VehicleInfo[car][vTeam] == PI[playerid][pMember]) {
			GetVehiclePos(car, check_pos[0], check_pos[1], check_pos[2]);
			if(IsPlayerInRangeOfPoint(playerid,4.5,check_pos[0],check_pos[1],check_pos[2])) {
				doors_status(car, playerid);
				return 1;
			}
		}
		else return ErrorMessage(playerid,"Вы далеко от Т/С Вашей организации");
	}
	new id = GetNearestCar(playerid);
	if(id == -1) return ErrorMessage(playerid,"Вы далеко от своего Т/С");
	doors_status(house_car[playerid][id], playerid);
	return true;
}
CMD:unrent(playerid, params[]) {
	if(TI[playerid][tArendKey] == -1) return ErrorMessage(playerid,"Вы не арендуете транспорт");
	new rc = TI[playerid][tArendKey];
	if(ArendInfo[rc][aPlayerID] != playerid) return ErrorMessage(playerid,"Вы не арендуете транспорт");
	TI[playerid][tArendKey] = -1;
	SendOk(playerid, "Вы отказались от аренды транспорта");
	ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
	SetVehicleToRespawn(ArendInfo[rc][aID]);
	return true;
}
CMD:lights(playerid, const params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return false;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return false;
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid) || IsABoat(carid)) return false;
	lights_status(carid, !getlight_status(carid), playerid);
	return true;
}
CMD:namestore(playerid, params []) {
	if(sscanf(params, "s[30]", params[0])) return SendEsp(playerid, "/namestore [имя]");
	new query[110];
	mysql_format(connects, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `Name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(connects, query, "namestore_callback", "i", playerid);
	return 1;
}


CB: namestore_callback(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Данный игрок не зарегистрирован на сервере");
	else
	{
		new db_increment[32], query[1024];
		cache_get_value_name(0,"Name",db_increment);
		
		format(query, sizeof(query), "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%s'", db_increment);
		mysql_tquery(connects, query, "_namestore_callback", "i", playerid);
	}
	return 1 ;
}

CB: _namestore_callback(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "История смены ника данного игрока пуста");
	 
	new string[1024];
	strcat(string, ""P"№ Старый ник\t"P"Новый ник\t"P"Дата изменения\n"W"");
	for(new j = 0; j < rows; j ++) {
		new oldname[MAX_PLAYER_NAME],
			newname[MAX_PLAYER_NAME],
			dates[20],
			str[68];
		
		cache_get_value(j,"nh_oldname",oldname, MAX_PLAYER_NAME);
		cache_get_value(j,"nh_newname",newname, MAX_PLAYER_NAME);
		cache_get_value(j,"nh_date",dates, 20);

		format(str, sizeof(str), "%d. %s\t%s\t%s\n",j+1, oldname, newname, dates);
		strcat(string, str);
	}	
	D(playerid, DIALOG_NONE, DSTH, ""P"История смены ника", string, "Закрыть", "");		
	return 1 ;
}
CMD:donate(playerid) {
	UpdateDonate(playerid);
	static const f_str[] = "\
							"P"-"W" Игровая валюта:\t"ORANGE"1 рубль = $3000\n\
							"P"-"W" Смена игрового имени:\t"ORANGE"20 рублей\n\
							"P"-"W" Снять предупреждение:\t"ORANGE"100 рублей\n\
							"P"-"W" Законопослушность:\t"ORANGE"10 рублей\n\
							"P"-"W" Лицензии:\t"ORANGE"От 20 рублей\n\
							"P"-"W" Навыки владения оружием:\t"ORANGE"1 рубль\n\
							"P"-"W" Анти-Голод:\t"ORANGE"150 рублей\n\
							"P"-"W" Иммунитет\t"ORANGE"150 рублей\n\
							"P"-"W" VIP привелегия\t"ORANGE"От 60 рублей\n\
							"P"-"W" Донат автомобиль\t"ORANGE"От 180 рублей\n\
							"P"-"W" EXP + Поинты в семью:\t"ORANGE"1 рубль = 10\n\
							"P"-"W" Мобильный банк:\t"ORANGE"150 рублей\n\
							"P"-"W" Уникальный скин:\t"ORANGE"200 рублей\n\
							"P"-"W" Убрать уровень розыска:\t"ORANGE"1 ЗВ = 10 рублей\n\
							"P"-"W" Анти Банни Хоп:\t"ORANGE"100 рублей\n\
							"P"-"W" Навыки боевых исскуств:\t"ORANGE"1 рубль\n\
							"P"-"W" Убрать тюнинг с личного Т/С:\t"ORANGE"50 рублей\n\
							"P"-"W" Номер телефона:\t"ORANGE"От 200 рублей\n\
							"P"-"W" Выход из ЧС:\t"ORANGE"От 50 рублей\n\
							"P"-"W" Снять наркозависимость:\t"ORANGE"100 рублей\n\
							"P"-"W" Новая трудовая книжка:\t"ORANGE"50 рублей\n\
							Донат: "P"%d\n\
							Информация о пополнениях";
	new string[sizeof(f_str) + 56];
	format(string,sizeof(string),f_str,PI[playerid][pRouble]);
	D(playerid, D_DONATE, DST, "Донат",string,"Выбрать", "Закрыть");
	return 1;
}
CMD:label(playerid) {
	if(GetPVarInt(playerid,"hrieltor")) {
		new houseid = GetPVarInt(playerid,"hrieltor")-1;
		EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
		SendUse(playerid,"Вы установили метку на Вашей карте");
		SendUse(playerid,"Для отключения метки введите: "W"/gps");
	}
	else if(GetPVarInt(playerid,"bizzrielor")) {
		new bizzid = GetPVarInt(playerid,"bizzrielor")-1;
		EnableGPSForPlayer(playerid,gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ]);
		SendUse(playerid,"Вы установили метку на Вашей карте");
		SendUse(playerid,"Для отключения метки введите: "W"/gps");
	}
	return 1;
}
CMD:gps(playerid)
{
	if(gpss[playerid]) DisablePlayerGPS(playerid);
	
	static const f_str[] = ""P"-"W" Найти ближайшую заправку\n\
							"P"-"W" Найти ближайшую закусочную\n\
							"P"-"W" Найти ближайший 24-7\n\
							"P"-"W" Найти ближайший банкомат\n\
							"P"-"W" Найти ближайший магазин одежды\n\
							"P"1."W" Общественные места\n\
							"P"2."W" Работы\n\
							"P"3."W" Автосалоны и тюнинги\n\
							"P"4."W" Государственные организации\n\
							"P"5."W" Нелегальные организации\n\
							"P"6."W" Банки\n\
							"P"7."W" Бизнесы\n\
							"P"8."W" Отели\n\
							"P"9."W" Аэропорты\n\
							"P"10."W" Таксопарки\n\
							"P"11."W" Транспортные компании\n\
							"P"12."W" Развлечения\n\
							"P"13."W" Риэлторские агенства";
							
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	
	D(playerid, D_GPS, DSL, ""P"GPS", string, "Выбрать", "Отмена");
	return 1;
}
alias:menu("mm","mn");
CMD:menu(playerid,const params[]) return D(playerid, D_MENU, DSL, ""P"Меню игрока",""P"1."W" Статистика персонажа\n"P"2."W" Личные настройки\n"P"3."W" Команды сервера\n"P"4. Задать вопрос Game Support\n"P"5."W" Связь с администрацией\n"P"6."W" Безопасность\n"P"7."W" Смена нонРП ника\n"P"8."W" Донат\n"P"9."W" Промокод", "Выбрать", "Отмена");

CMD:bonuses(playerid,params[]) {
	if(!BonusInfo[act_select]) return ErrorMessage(playerid,"Бонусы отключены");
	if(PI[playerid][pLevel] > BonusInfo[act_level] && BonusInfo[act_select] == 1) return ErrorMessage(playerid,"В данный момент бонусы действуют только для новичков (1-5 уровень)");
	static const f_str[] = "Наименование\tФактор\n\
	"W"Ускоренная прокачка опыта\t"P"%d x\n\
	"W"Ускоренная прокачка скилла оружия\t"P"%d x\n\
	"W"Ускоренная прокачка скилла удара по груше\t"P"%d x\n\
	"W"Приз в мероприятиях развл. центра\t"P"%d x\n\
	"W"Создание оружия\t"P"%d x\n\
	"W"Повышенный улов рыбы\t"P"%d x\n\
	"W"Скидка на аренду номера в отеле\t"P"%d %%\n\
	"W"Скидка на покупку скина\t"P"%d %%\n\
	"W"Скидка на покупку транспорта\t"P"%d %%\n\
	"W"Скидка на аренду транспорта\t"P"%d %%\n\
	"W"Скидка на покупку лицензий\t"P"%d %%\n\
	"W"Скидка на покупку улучшений в дома\t"P"%d %%\n\
	"W"Скидка на лечение болезней\t"P"%d %%\n\
	"W"Скидка на смену пола в больнице\t"P"%d %%\n\
	"W"Скидка на получение мед. карты\t"P"%d %%\n\
	"W"Скидка на покупку номеров ТС\t"P"%d %%\n\
	"W"Скидка на улучшения в Perfomance Tune\t"P"%d %%\n\
	"W"Скидка на тюнинг в Автомастерской\t"P"%d %%\n\
	"W"Время для получения бонусных кейсов\t"P"%d мин\n\
	"W"Промокод\t"P"%d x\n\
	"W"Pay Day (ЗП)\t"P"%d x\n\
	"W"Донат\t"P"%d x\n\
	\
	";
	new string[sizeof(f_str) + 50];
	format(string,sizeof(string),f_str,
		BonusInfo[act_exp],
		BonusInfo[act_skill],
		BonusInfo[act_sport],
		BonusInfo[act_mp],
		BonusInfo[act_gun],
		BonusInfo[act_fish],
		BonusInfo[act_renthotel],
		BonusInfo[act_buyskin],
		BonusInfo[act_buycar],
		BonusInfo[act_rentcar],
		BonusInfo[act_buylic],
		BonusInfo[act_buyimprove],
		BonusInfo[act_disease],
		BonusInfo[act_changesex],
		BonusInfo[act_medcard],
		BonusInfo[act_buynubmbercar],
		BonusInfo[act_perfomance],
		BonusInfo[act_tune],
		BonusInfo[act_timerullet],
		BonusInfo[act_promocode],
		BonusInfo[act_payday],
		BonusInfo[act_donate]);
	D(playerid, DIALOG_NONE, DSTH, ""P"Бонусы",string, "Закрыть", "");
	return 1;
}
alias:report("rep");
CMD:report(playerid,params[]) {
	D(playerid,D_REPORT,DSI, ""P"Связь с администрацией", "{d8284c}В{DCDCDC}ы собираетесь отправить запрос администрации.\n\
		{d8284c}П{DCDCDC}ожалуйста, чётко и грамотно сформулируйте запрос.\n\
		{d8284c}Т{DCDCDC}акже, при подаче жалобы на игрока, укажите его ID.\n\n\
		{d8284c}» Запрещён оффтоп, исп. CapsLock, оскорбления и нецензурная брань.", "Отправить", "Назад");
	return 1;
}
CMD:ask(playerid,params[]) {
	if(PI[playerid][pAskmute]) return ErrorMessage(playerid,"У вас закрыт доступ к подаче вопросов");
	D(playerid,D_ASK,DSI, ""P"Связь с Game Support", "{d8284c}В{DCDCDC}ы собираетесь задать вопрос Game Support.\n\
		{d8284c}П{DCDCDC}ожалуйста, чётко и грамотно сформулируйте вопрос.\n\n\
		{d8284c}» Запрещён оффтоп, исп. CapsLock, оскорбления и нецензурная брань.", "Задать", "Назад");
	return 1;
}
CMD:dress(playerid, params[]) {
    if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
	if(PI[playerid][pArmSkin] == 0) return ErrorMessage(playerid, "У Вас нет армейской формы");
	if(PI[playerid][pSex] == 1) A_SetPlayerSkin(playerid,287);
	else A_SetPlayerSkin(playerid,191);
	SetPlayerColor(playerid, COLOR_GREEN);
	PI[playerid][pArmSkin] = 0;
	UpdatePlayerData(playerid,"ArmSkin",0);
	SendUse(playerid,"Вы надели армейскую форму");
	return true;
}
CMD:play(playerid, params[]) return D(playerid, D_RADIO, DSL, ""P"Онлайн радио", ""P"1."W" "RadioSite"\n"P"2."W" Love Radio\n"P"3."W" Radio Record\n"P"4."W" Radio Energy\n"P"5."W" Retro FM\n"P"6."W" Радио Шансон\n"P"7."W" Выключить", "Принять", "Отмена");
CMD:eject(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return true;
	new State = GetPlayerState(playerid);
	if(State!=PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Вы не за рулем");
	if(sscanf(params, "u", params[0])) return SendEsp(playerid, "/eject [id]");
	new test = GetPlayerVehicleID(playerid);
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid, "Вы указали свой ID");
	if(!IsPlayerInVehicle(params[0],test)) return true;
	new string[128];
	format(string, sizeof(string), "Вы выкинули из машины - "W"%s",player_name[params[0]]);
	SendOk(playerid, string);
	format(string, sizeof(string), "Вас выкинул из машины - "W"%s",player_name[playerid]);
	SendOk(params[0], string);
	RemovePlayerFromVehicleAC(params[0]);
	return true;
}
CMD:dcarm(playerid, params[]) {
    if(!IsAMafia(playerid)) return true;
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Вы не в фургоне для развозки наркотиков");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] == fLCN || VehicleInfo[veh][vTeam] == fYAKUZA || VehicleInfo[veh][vTeam] == fRM)
	{
		D(playerid, D_MAFIA_CARM, DSL, ""P"Развозка наркотиков","\
			"P"1."W" Загрузить наркотики\n"P"2."W" Разгрузить на склад Ballas\n"P"3."W" Разгрузить на склад Vagos\n\
			"P"4."W" Разгрузить на склад Grove\n"P"5."W" Разгрузить на склад Aztec\n"P"6."W" Разгрузить на склад Rifa\n"P"7."W" Заказы", "Выбрать", "Отмена");
	}
	return true;
}
CMD:fhelp(playerid, params[]) {
    if(!IsAArm(playerid)) return true;
    if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Ваш ранг недостаточен");
    new string[128];
    if(IsPlayerInRangeOfPoint(playerid,7,788.9785,-414.2781,4.0025) && PI[playerid][pMember] == fARMYSF) {
    	if(army_chs[0] == false) {
    		format(string, sizeof(string), "Внимание! %s %s[%d] объявил(а) о Чрезвычайной Ситуации в Армии СФ!",GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid);
    		SendDepMessage(COLOR_ALLDEPT, string);
    		SendDepMessage(COLOR_ALLDEPT, "Просим поддержки всех силовых структур!");
    		GangZoneFlashForAll(SFa,COLOR_RED);
    		UpdateDynamic3DTextLabelText(army_text,-1,""NO"Объявлена Чрезвычайная Ситуация"W"\nДля отключения, введите: "P"/fhelp");
    		army_chs[0] = true;
    	}
    	else {
    		format(string, sizeof(string), "Внимание! %s %s[%d] объявил(а) об устранении Чрезвычайной Ситуации в Армии СФ",GetRankName(GetTeamID(playerid),PI[playerid][pRank]), player_name[playerid],playerid);
    		SendDepMessage(COLOR_ALLDEPT, string);
    		GangZoneStopFlashForAll(SFa);
			UpdateDynamic3DTextLabelText(army_text,-1,"Для объявления чрезвычайной ситуации, введите:\n"P"/fhelp");
			army_chs[0] = false;
    	}
    }
	return true;
}
CMD:carm(playerid, params[]) {
    if(!IsAArm(playerid)) return true;
	new veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(veh) == 433)
	{
		if(VehicleInfo[veh][vTeam] == fARMYLV) D(playerid, D_ARMY_CARM, DSL, ""P"Развозка боеприпасов",""P"1."W" Разгрузить на склад Полиции ЛС\n"P"2."W" Разгрузить на склад Полиции СФ\n"P"3."W" Разгрузить на склад Полиции ЛВ\n"P"4."W" Разгрузить на склад ФБР\n"P"5."W" Состояние складов", "Выбрать", "Отмена");
		else if(VehicleInfo[veh][vTeam] == fARMYSF) D(playerid, D_ARMY_CARM_SF, DSL, ""P"Развозка боеприпасов",""P"1."W" Загрузка боеприпасов\n"P"2."W" Разгрузка боеприпасов", "Выбрать", "Отмена");
	}
	return true;
}
CMD:load(playerid, params[]) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAArm(playerid) && !IsAGang(playerid) && !IsAMafia(playerid) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) return 1;
		//if(IsAArm(playerid)) if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
		switch(GetVehicleModel(vehicleid)) {
			case 433,482,573: {
				if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return ErrorMessage(playerid,"Авто уже стоит на загрузке / разгрузке");
				if((IsAGang(playerid) && GetPlayerSkin(playerid) == 191 && GetVehicleModel(vehicleid) == 433) || (IsAGang(playerid) && GetPlayerSkin(playerid) == 287 && GetVehicleModel(vehicleid) == 433)) {
					switch(VehicleInfo[vehicleid][vTeam]) {
						case fARMYLV: SetPlayerCheckpoint(playerid, 255.0845,1831.5399,18.1076,5.0),SetPVarInt(playerid,"MatsArmyCar",10);
						case fARMYSF: SetPlayerCheckpoint(playerid, -1325.2426,407.5635,7.0743,5.0),SetPVarInt(playerid,"MatsArmyCar",11);
					}
					return 1;
				}
				VG[vehicleid][vgID] = vehicleid;
				VG[vehicleid][vgLoading] = true;

				RemovePlayerFromVehicleAC(playerid);
				new Float:x, Float:y, Float:z, Float:a;
				GetVehiclePos(vehicleid,x,y,z);
				GetVehicleZAngle(vehicleid,a);
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);

				VG[vehicleid][vgPickup] = CreateDynamicPickup(19133,1,x,y,z-0.5);
				VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);

				new string[64];
				switch(GetVehicleModel(vehicleid)) {
					case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[vehicleid][vgAmount][0]);
					case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[vehicleid][vgAmount][0]);
					case 573: format(string,sizeof(string),"Ящиков: "O"%i/200",VG[vehicleid][vgAmount][0]);
				}
				VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
			}
			default: return ErrorMessage(playerid,"Вы должны быть за рулем т.с. для перевозки оружия");
		}
	}
	return 1;
}
CMD:unload(playerid, params[]) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAArm(playerid) && !IsAGang(playerid) && !IsAMafia(playerid) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) return 1;
		//if(IsAArm(playerid)) if(PI[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
		switch(GetVehicleModel(vehicleid)) {
			case 433,482: {
				if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return ErrorMessage(playerid,"Авто уже стоит на загрузке / разгрузке");
				VG[vehicleid][vgID] = vehicleid;
				VG[vehicleid][vgUnloading] = true;
				RemovePlayerFromVehicleAC(playerid);
				new Float:x, Float:y, Float:z, Float:a;
				GetVehiclePos(vehicleid,x,y,z);
				GetVehicleZAngle(vehicleid,a);
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);
				VG[vehicleid][vgPickup] = CreateDynamicPickup(19133,1,x,y,z-0.5);
				VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);
				new string[64];
				switch(GetVehicleModel(vehicleid)) {
					case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[vehicleid][vgAmount][0]);
					case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[vehicleid][vgAmount][0]);
				}
				VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
			}
			case 573: {
				if(!VG[vehicleid][vgAmount][0]) return ErrorMessage(playerid,"В Т/С недостаточно боеприпасов для разгрузки");
				switch(GetTeamID(playerid)) {
					case fBALLAS: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, -276.7214,1038.1322,12.0932)) return ErrorMessage(playerid,"Вы далеко от The Ballas");
					}
					case fVAGOS: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 166.7479,1036.2742,13.7035)) return ErrorMessage(playerid,"Вы далеко от The Vagos");
					}
					case fGROVE: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, -677.3030,869.4465,12.0000)) return ErrorMessage(playerid,"Вы далеко от The Grove");
					}
					case fAZTEC: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 323.3650,1876.8451,12.0000)) return ErrorMessage(playerid,"Вы далеко от The Aztec");
					}
					case fRIFA: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 794.8054,2465.8638,12.0000)) return ErrorMessage(playerid,"Вы далеко от The Rifa");
					}
					case fARMYSF: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 797.3829,-411.8266,4.0025)) return ErrorMessage(playerid,"Вы далеко от склада Армии СФ");
					}
					case fARMYLV:
					{
					    ErrorMessage(playerid, "Не доступно!");
						//if(!IsPlayerInRangeOfPoint(playerid, 100, armylv_mats_pos)) return ErrorMessage(playerid,"Вы далеко от склада Армии ЛВ");
					}
					case fLCN: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 475.8626,747.5419,12.0000)) return ErrorMessage(playerid,"Вы далеко от Итальянской Мафии");
					}
					case fYAKUZA:
					{
					    ErrorMessage(playerid, "Не доступно!");
						//if(!IsPlayerInRangeOfPoint(playerid, 100, yakuza_mats_pos)) return ErrorMessage(playerid,"Вы далеко от Японской Мафии");
					}
					case fRM: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 362.0920,1549.6415,12.0004)) return ErrorMessage(playerid,"Вы далеко от Русской Мафии");
					}
				}
				if(!IsAArm(playerid)) {
					new mats = floatround(FI[GetTeamID(playerid)][fMats]/500);//ящиков на складе банды
					new mats_2 = mats+(VG[vehicleid][vgAmount][0]*5000/500);//сколько будет всего ящиков
					if(mats_2 > 600) {
						new mats_3 = 600-mats_2;
						VG[vehicleid][vgAmount][0] = mats_3;
					}
					else {
						FI[GetTeamID(playerid)][fMats] += VG[vehicleid][vgAmount][0]*5000;
						VG[vehicleid][vgAmount][0] = 0;
					}
					if(FI[GetTeamID(playerid)][fMats] > 300000) FI[GetTeamID(playerid)][fMats] = 300000;
					else if(FI[GetTeamID(playerid)][fMats] < 0) FI[GetTeamID(playerid)][fMats] = 300000;
				}
				else {
					new mats = floatround(FI[GetTeamID(playerid)][fMats]/500);
					new mats_2 = mats+(VG[vehicleid][vgAmount][0]*5000/500);
					if(mats_2 > 2000) {
						new mats_3 = 2000-mats_2;
						VG[vehicleid][vgAmount][0] = mats_3;
					}
					else {
						FI[GetTeamID(playerid)][fMats] += VG[vehicleid][vgAmount][0]*5000;
						VG[vehicleid][vgAmount][0] = 0;
					}
					if(FI[GetTeamID(playerid)][fMats] > 1000000) FI[GetTeamID(playerid)][fMats] = 1000000;
					else if(FI[GetTeamID(playerid)][fMats] < 0) FI[GetTeamID(playerid)][fMats] = 1000000;
				}
				UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
				new string[144];
				format(string,sizeof(string),"Боеприпасы успешно рагружены. Боеприпасов на складе: "W"%d"G". Ящиков в фургоне: "W"%d",FI[GetTeamID(playerid)][fMats],VG[vehicleid][vgAmount][0]);
			}
			default: return ErrorMessage(playerid,"Вы должны быть за рулем т.с. для перевозки оружия");
		}
	}
	return 1;
}
stock ProxDetector(Float:radi,playerid, const string[], color) {
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(IsPlayerInRangeOfPoint(i,radi,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) SendClientMessage(i, color, string);
	}
    return true;
}
stock ProxDetectorS(Float:radi, playerid, targetid) {
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid)) {
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public OnPlayerText(playerid, text[]) {
    if(!TI[playerid][tLogin]) return 0;
	new string[150];
	if(PI[playerid][pMute] > 0) { 
		ErrorMessage(playerid, "У Вас бан чата"); 
		SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_REDD, 30.0, 10000);
		return 0; 
	}
	if(TI[playerid][tGag]) {
		ErrorMessage(playerid, "У Вас кляп");
		SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_REDD, 30.0, 10000);
		return 0;
	}
    if(CountFloodForPlayer[playerid] >= 2) {
		ErrorMessage(playerid, "Пожалуйста, не флудите");
		return 0;
	}
	CountFloodForPlayer[playerid]++;
	if(TI[playerid][tEther]) {
		format(string,sizeof(string),"[%s] %s: %s",FI[PI[playerid][pMember]][fName],player_name[playerid],text);
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(PI[i][pSettings][2] != PI[playerid][pMember]) continue;
			SendClientMessage(i,0xFF9900AA,string);
		}
		return 0;		
	}
	if(TI[playerid][tPhoneNews]) {
		for(new i; i<sizeof(calls_ether); i++) {
			if(calls_ether[i] == playerid && calls_news[i]) {
				new mes[128];
				format(mes,sizeof(mes),"[%s] %s [тел.]: %s",FI[PI[calls_news[i]][pMember]][fName],player_name[playerid],text);
				new subid = PI[calls_news[i]][pMember];
				foreach(new r:Player) {
					if(!TI[r][tLogin]) continue;
					if(PI[r][pSettings][2] == subid || r == playerid) SendClientMessage(r, 0xFF9900AA, mes);
				}
				return false;
			}
		}
	}		
	if(TI[playerid][tPhone] == true) {
		new id,mes[128];
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];

		format(mes,sizeof(mes),"[тел] %s: %s",player_name[playerid], text);
		SendClientMessage(playerid, COLOR_YELLOW, mes);

		format(mes,sizeof(mes),"[тел] %s: %s",player_name[playerid], text);
		SendClientMessage(id, COLOR_YELLOW, mes);

		SetPlayerChatBubble(playerid, mes, COLOR_WHITE, 10.0, 10000);
		return false;
	}
	if(GetString(text,")")) {
		MeAction(playerid,"улыбается");
		return false;
	}
	if(GetString(text,"))")) {
		MeAction(playerid,"смеётся");
		return false;
	}
	if(GetString(text,"xD")) {
		MeAction(playerid,"хохочет во весь голос");
		return false;
	}
	if(GetString(text,"(")) {
		if(PI[playerid][pSex] == 1) MeAction(playerid,"расстроился");
		else MeAction(playerid,"расстроилась");
		return false;
	}
	if(GetString(text,"((")) {
		if(PI[playerid][pSex] == 1) MeAction(playerid,"сильно расстроился");
		else MeAction(playerid,"сильно расстроилась");
		return false;
	}
	if(GetString(text,":D")) {
		MeAction(playerid,"хохочет");
		return false;
	}
	if(GetString(text,"O_o")) 	{
		MeAction(playerid,"удивлен(а)");
		return false;
	}
	if(GetString(text,">_<")) {
		if(PI[playerid][pSex] == 1) MeAction(playerid,"сморщился от злости");
		else MeAction(playerid,"сморщилась от злости");
		return false;
	}
	if(GetString(text,";)")) {
		MeAction(playerid,"подмигивает");
		return false;
	}
	if(GetString(text, "q")) {
		if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
		if(PI[playerid][pAdmin] >= 1) {
			MeAction(playerid,"показал(а) распальцовку {33AA33}Admins Team");
			ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
			return false;
		}
		new member[20];
		switch(PI[playerid][pMember]) {
			case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
				format(string,sizeof(string),"показал(а) распальцовку %s",member);
				MeAction(playerid,string);
				ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,1,1);
			}
			case fARMYSF,fARMYLV: {
				MeAction(playerid,"выполнил(а) воинское приветствие");
				ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P",4.0,0,0,0,0,1000,1);
			}
		}
		return false;
	}
	if(PI[playerid][pMember] == 0 || start_work[playerid] == 0) { 
		format(string,sizeof(string),"- %s "W"(%s) [%d]",text,player_name[playerid],playerid); 
	}
	else if(TI[playerid][tMasked]) {
		format(string,sizeof(string),"- %s {%s}(%s) [%d]",text,GetColorFrac(TI[playerid][tMasked]),player_name[playerid],playerid); 
	}
	else if(TI[playerid][tMaskTime]) {
		format(string,sizeof(string),"- %s {7a7667}(%s) [%d]",text,player_name[playerid],playerid); 
	}
	else {
		format(string,sizeof(string),"- %s {%s}(%s) [%d]",text,GetColor(playerid),player_name[playerid],playerid);
	}
	ProxDetector(25.0,playerid,string,-1);
	if(!TI[playerid][tTazer] && !TI[playerid][tCuffedTime] && GetPVarInt(playerid,"anti_sbiv_time") < unix && !TI[playerid][tTied] && !GetPVarInt(playerid,"Animation")) {
		if(PI[playerid][pSettings][4] == 0) {
			ApplyAnimation(playerid,"PED",Talk[PI[playerid][pSettings][4]],8.1,0,1,1,1,1,0);
			SetTimerEx("ClearAnim",100*strlen(text),false,"i",playerid);	
		}
		else if(PI[playerid][pSettings][4] != 0) {
			ApplyAnimation(playerid,"GANGS",Talk[PI[playerid][pSettings][4]],4.1,1,1,1,1,1,1);
			SetTimerEx("ClearAnim",100*strlen(text),false,"i",playerid);	
		}
	}
	SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
	return false;
}
stock GetColor(playerid) {
    new str[8];
	format(str,8,"%06x",gFractionSpawn[PI[playerid][pMember]][fracColor] >>> 8);
	return str;
}
stock GetColorFrac(id) {
    new str[8];
	format(str,8,"%06x",gFractionSpawn[id][fracColor] >>> 8);
	return str;
}
public OnPlayerUpdate(playerid) {
	new tickcount1 = GetTickCount();
	if(!TI[playerid][tLogin]) return false;
	//TI[playerid][tUpdate] = GetTickCount();
	TI[playerid][tAFK] = 0;
	time_update = GetTickCount() - tickcount1;
	if(time_update > time_update_max) time_update_max = time_update;
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
	if(!TI[playerid][tLogin]) return 1;
	new tickcount1 = GetTickCount();

	if(TI[playerid][tTazer]) ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1,0);
	if ((oldkeys & KEY_SECONDARY_ATTACK) && !(newkeys & KEY_SECONDARY_ATTACK)) {
		if(SERIU[playerid][sID] != INVALID_PLAYER_ID) {
			 SpecPlayer(playerid,SERIU[playerid][sID]);
			 TogglePlayerControllable(playerid, 1);
		}
		if(!TI[playerid][tHeal]) {
			for(new i = 0; i < 12; i++) {
				if(PlayerToPoint(1.7,playerid,med_heal[i][0],med_heal[i][1],med_heal[i][2])) {
					new Float: health;
					GetPlayerHealth(playerid,health);
					if(health >= 75) return ErrorMessage(playerid,"Вы не нуждаетесь в лечении");
					SetPlayerPosAC(playerid,med_heal[i][0],med_heal[i][1],med_heal[i][2],TI[playerid][tVirtualWorld], TI[playerid][tInterior],false);
					SetPlayerFacingAngle(playerid,med_heal[i][3]);
					ApplyAnimation(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
					TI[playerid][tHeal] = true;
					break;
				}
			}
		}
		else {
			TI[playerid][tHeal] = false;
			ClearAnimations(playerid);
		}
        for(new i; i < gRoomsCount; i++)
		{
            if(IsPlayerInRangeOfPoint(playerid, 2, gRooms[i][roomsEnterX],gRooms[i][roomsEnterY],gRooms[i][roomsEnterZ])
			&& gRooms[i][roomsWorld] == GetPlayerVirtualWorld(playerid))
			{
                if(gRooms[i][roomsDoors] == 1) return ErrorMessage(playerid, "Номер закрыт. У Вас нет ключей");
                SetPlayerPosAC(playerid,1060.8322,-791.6619,1136.7097,i+1,81);
				SetPlayerFacingAngle(playerid,89.2540);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
                return true;
            }
            else if(IsPlayerInRangeOfPoint(playerid, 3, 1060.8322,-791.6619,1136.7097))
			{
                new x = GetPlayerVirtualWorld(playerid)-1;
                SetPlayerPosAC(playerid,gRooms[x][roomsEnterX],gRooms[x][roomsEnterY],gRooms[x][roomsEnterZ],gRooms[x][roomsWorld],80);
				SetPlayerFacingAngle(playerid,gRooms[x][roomsEnterR]);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
                return true;
            }
        }
		if(GetPVarInt(playerid,"Animation") == 2) {
			ClearAnimationsEX(playerid);
			DeletePVar(playerid,"Animation");
			TextDrawHideForPlayer(playerid, AnimDraw);
		}
    }
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        switch(GetPlayerWeapon(playerid)) {
            case 23..25, 29..31: {
                if(newkeys == 132 || newkeys == 4 || newkeys == 65410 || newkeys == 130) GUARD_TICK_C_BUG[playerid] = GetTickCount();
                if(GetTickCount() - GUARD_TICK_C_BUG[playerid] < 500 && newkeys == 2) {
                	if(GetPlayerVirtualWorld(playerid) == 0 && (PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.5571) || PlayerToKvadrat(playerid, -49.979476, 1695.982177, 414.020507, 2175.982177))) {
                    	SetPlayerArmedWeapon(playerid,0);
                    	ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
                    }
                }
            }
        }
    }
	if(PRESSED(262144) || GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PRESSED(KEY_CROUCH)) {
	    if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 2455) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
	}
	if(PRESSED(4)) {
		pc_cmd_lights(playerid,"");
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		new Float:face_angle; GetPlayerFacingAngle(playerid, face_angle);
		for(new i; i<CountGraffity; i++) {
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, GrafInfo[i][gr_x][0],GrafInfo[i][gr_x][1],GrafInfo[i][gr_x][2])) continue;
			if(GetPVarInt(playerid, "SettingGraffiti")) continue;
			//if(!(face_angle >= GrafInfo[i][gr_x][5] - 20.0 && face_angle < GrafInfo[i][gr_x][5] + 20.0)) continue;
			if(!IsAGang(playerid)) continue;
			if(PI[playerid][pMember] != GrafInfo[i][gFrak]) {
				if(GetPlayerWeapon(playerid) != 41) return ErrorMessage(playerid,"У Вас нет балончика");
				SetPVarInt(playerid,"Grafity",i);
				StartDrawing(playerid);
			}
		}
	}
	else if(RELEASED(4)) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(!GetPVarInt(playerid, "SettingGraffiti")) return 1;
		GraffitiFailed(playerid);
		KillTimer(graf_timer[playerid]);
	}
	if((newkeys & KEY_JUMP) || (newkeys == KEY_FIRE)) {
		if((TI[playerid][tJobGun][0] && TI[playerid][tJobGun][2])) {
			SendOk(playerid,"Вы уронили ящик");
			TI[playerid][tJobGun][2] = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			TI[playerid][tJobGun][1] = 1;
			DisablePlayerRaceCheckpoint(playerid);
		}
		else if(TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && !IsPlayerInAnyVehicle(playerid)) {
			SendOk(playerid,"Вы уронили бочку");
			ClearAnimations(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			SetPlayerMapIcon(playerid,1,2743.5747,-2200.5796,21.9503,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,2752.0374,-2197.0898,21.9503,11,-1,MAPICON_GLOBAL);
			TI[playerid][tJobOil][1] = false;
		}
		else if(GetPVarInt(playerid,"carrygun")) {
			SendOk(playerid,"Вы уронили ящик");
			DeletePVar(playerid,"carrygun");
			if(GetPVarInt(playerid,"use_mats") == 1) FI[fARMYLV][fMats] += 500,DeletePVar(playerid,"use_mats");
			if(GetPVarInt(playerid,"use_mats") == 2) FI[fARMYSF][fMats] += 500,DeletePVar(playerid,"use_mats");
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
			ClearAnimations(playerid);
		}
		else if((TI[playerid][tJobWood][0] && TI[playerid][tJobWood][1])) {
			SendOk(playerid,"Вы уронили древесину");
	        TI[playerid][tJobWood][1] = 0;
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			SetPlayerAttachedObject(playerid,8,341,6);
			TI[playerid][tJobWood][3] = 1;
			TI[playerid][tJobWood][2] = -1;
		}
	}
	if(newkeys & KEY_LOOK_RIGHT) pc_cmd_mode(playerid);
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK ) {
		new animname[32];
  		GetAnimationName(GetPlayerAnimationIndex(playerid),animname,32,animname,32);
		if((PlayerToPoint(2.0,playerid,2183.1362,-1581.2454,1129.9301) || PlayerToPoint(2.0,playerid,2180.0513,-1581.3043,1129.9301))) {
  			if((strcmp(animname,"FIGHTB_1",true) == 0 || strcmp(animname,"FIGHTB_2",true) == 0 || strcmp(animname,"FIGHTB_3",true) == 0 || strcmp(animname,"FIGHTA_1",true) == 0
		  		|| strcmp(animname,"FIGHTC_1",true) == 0 || strcmp(animname,"FIGHTC_2",true) == 0 || strcmp(animname,"FIGHTC_3",true) == 0 || strcmp(animname,"FIGHTA_2",true) == 0
			  	|| strcmp(animname,"FIGHTD_1",true) == 0 || strcmp(animname,"FIGHTD_2",true) == 0 || strcmp(animname,"FIGHTD_3",true) == 0 || strcmp(animname,"FIGHTA_3",true) == 0)
		  	&& TI[playerid][tGym]) {
				if(PI[playerid][pBox] == 3) return ErrorMessage(playerid,"Вы изучили все навыки владения боем");
				if(!TI[playerid][tGymSkill]) return ErrorMessage(playerid,"Для начала проиобретите абонемент");
				if(floatround(PI[playerid][pSnow]) < 1000) {
					new skill;
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) skill = BonusInfo[act_sport];
					else if(BonusInfo[act_select] == 2) skill = BonusInfo[act_sport];
				    else skill = 1;

					if(TI[playerid][tGyms] <= 0) PI[playerid][pSnow] += (0.2*skill);
					else {
						if(TI[playerid][tGyms] - 0.4 <= 0) TI[playerid][tGyms] = 0;
						PI[playerid][pSnow] += (0.4*skill);
						TI[playerid][tGyms] -= 0.4;
					}
				}
				else if(floatround(PI[playerid][pSnow]) >= 1000) {
					PI[playerid][pBox] ++;
					UpdatePlayerData(playerid,"pBox",PI[playerid][pBox]);
					PI[playerid][pSnow] = 0;
					TI[playerid][tGymSkill] = 0;
					SendOk(playerid,"Вы изучили новый стиль боя. Для переключения введите: "W"/mm > личные настройки > стиль боя");
				}
				new string[33];
				format(string,32,"~g~NEED: ~w~%i",1000-floatround(PI[playerid][pSnow]));
				GameTextForPlayer(playerid,string, 5000, 3);
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK) {
		if(GetPVarInt(playerid,"hrieltor") || GetPVarInt(playerid,"bizzrielor")) {
			TogglePlayerControllable(playerid,1);
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"rielX"),GetPVarFloat(playerid,"rielY"),GetPVarFloat(playerid,"rielZ"),GetPVarInt(playerid,"rielVW"),1);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"rielX");
			DeletePVar(playerid,"rielY");
			DeletePVar(playerid,"rielZ");
			DeletePVar(playerid,"rielVW");
			DeletePVar(playerid,"hrieltor");
			DeletePVar(playerid,"bizzrielor");
		}
	}
	if(newkeys == KEY_CROUCH) {
        new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
		
		else if((IsPlayerInRangeOfPoint(playerid,  20.0, 1980.9282,2093.7712,1101.1250) ||
                IsPlayerInRangeOfPoint(playerid,  20.0, 1980.9001,2086.5647,1101.1250) ||
                
				IsPlayerInRangeOfPoint(playerid,  20.0, 2194.9187,2851.6250,1117.7094) ||
				
				IsPlayerInRangeOfPoint(playerid,  20.0, -877.9473,2708.2549,1144.9087) ||
				
				IsPlayerInRangeOfPoint(playerid,  20.0, 2578.8252,2501.5007,1112.4916)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			
			new i = TI[playerid][tSelectHouse];
			new Veh = GetPlayerVehicleID(playerid);
			SetVehiclePos(Veh, gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
			SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
			exit_garage(Veh,0);
			SetCameraBehindPlayer(playerid);
			TI[playerid][tInHouse] = false;
		}
		else if((IsPlayerInRangeOfPoint(playerid,  20.0, 152.0760,-533.1956,-75.0400)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    /*
			new Veh = GetPlayerVehicleID(playerid),rand;
			switch(PI[playerid][pRoom]) {
				case 1..60: rand = Random(0,9);
				case 61..120: rand = Random(10,18);
				case 121..180: rand = Random(24,33);
				case 181..240: rand = Random(19,23);
				default: return ErrorMessage(playerid,"Вы не снимаете комнату в данном отеле");
			}
			SetVehiclePos(Veh, hotel_spawncar[rand][0], hotel_spawncar[rand][1], hotel_spawncar[rand][2]);
			SetVehicleZAngle(Veh, hotel_spawncar[rand][3]);
			*/
			new Veh = GetPlayerVehicleID(playerid), hotel = GetPVarInt(playerid, "selectedhotel");
			SetVehiclePos(Veh, gHotels[hotel][hotelParkX], gHotels[hotel][hotelParkY], gHotels[hotel][hotelParkZ]);
			SetVehicleZAngle(Veh, gHotels[hotel][hotelParkR]);
			exit_garage(Veh,0);
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.0, -134.0801,986.3956,1144.1937))
		{
		    if(PI[playerid][pAdmin] == 0)
  			{
  			    if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1])
				  	return ErrorMessage(playerid, "Вы не за рулём своего Т/С");
			}
			if(!GetPVarInt(playerid,"TunningSaluna")) {
				SetPVarInt(playerid,"VehicleTunnSALON",GetPlayerVehicleID(playerid));
				SetPVarInt(playerid,"TunningSaluna",1);
				
				for(new i = 0; i < 11; i++) TextDrawShowForPlayer(playerid,ColorTD[i]);
				new curcol,vehicleid = GetPlayerVehicleID(playerid);
				for(new i = 0; i < 2; i++) {
					curcol = VehicleInfo[vehicleid][vColor][i];
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][2+3*i], RGBArray[curcol]);
					curcol--;
					if(curcol < 0) curcol = 255;
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][1+3*i], RGBArray[curcol]);
					curcol += 2;
					if(curcol > 255) curcol = 0;
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][3+3*i], RGBArray[curcol]);
				}
				for(new i = 0; i < 6; i++) PlayerTextDrawShow(playerid,ColorTDPl[playerid][1+i]);
				for(new i = 0, b = VehicleModelToPaintjobNum(GetVehicleModel(GetPlayerVehicleID(playerid)))+1; i < b; i++) TextDrawShowForPlayer(playerid,ColorTD[11+i]);
				VinylJob[playerid] = 0;
				TextDrawShowForPlayer(playerid,ColorTD[16]);
				PrimaryColor[playerid] = VehicleInfo[vehicleid][vColor][0];
				SecondaryColor[playerid] = VehicleInfo[vehicleid][vColor][1];
				RepaintValue[playerid] = 0;
				DeletePVar(playerid, "PaintJob");
				ChangedPrimaryColor[playerid] = false;
				ChangedSecondaryColor[playerid] = false;
				ChangedVinylJob[playerid] = false;
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
				PlayerTextDrawShow(playerid,ColorTDPl[playerid][0]);
				TextDrawShowForPlayer(playerid,ColorTD[15]);
				SelectTextDraw(playerid,0xAA3333AA);
			}
			else {
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid,"TunningSaluna",0);
				for(new h = 0;h < 20;h++) {
					if(h < 7)PlayerTextDrawHide(playerid,ColorTDPl[playerid][h]);
					TextDrawHideForPlayer(playerid,ColorTD[h]);
				}
				new cartune = GetPVarInt(playerid,"VehicleTunnSALON");
				ChangeVehicleColor(cartune,VehicleInfo[cartune][vColor][0],VehicleInfo[cartune][vColor][1]);
				ChangeVehiclePaintjob(cartune, VehicleInfo[cartune][vPaintJob]);
			}
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,  2.0, -142.1190,985.7707,1144.1937))
		{
		    if(PI[playerid][pAdmin] == 0)
  			{
  			    if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1])
				  	return ErrorMessage(playerid, "Вы не за рулём своего Т/С");
			}
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return ErrorMessage(playerid, "Недоступно для данного Т/С");
			if(!GetPVarInt(playerid,"TunningSalun")) {
				SetPVarInt(playerid,"VehicleTunnSALON",GetPlayerVehicleID(playerid));
				SetPVarInt(playerid,"TunningSalun",1);
				new str[64],value;
				for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid,CustomTD[i]);
				CustomType[playerid] = 0;
				CustomListNum[playerid] = 0;
				CustomLimitNum[playerid] = 0;
				for(new i = 0; i < 5; i++) {
					if(i > TypeBorder[CustomType[playerid]]-1) break;
					TextDrawShowForPlayer(playerid,CustomTD[5+i]);
					format(str,64,"TUN[%d][Value]",i);
					value = GetGVarInt(str,CustomType[playerid]);

					new price;
					if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
						price = (value-seller);
					}
					else {
						if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(value/100*BonusInfo[act_tune]);
							price = (value-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(value/100*BonusInfo[act_tune]);
							price = (value-seller);
						}
					    else price = value;
					}

					format(str,64,"TUN[%d][Name]",i);
					GetGVarString(str,str,64,CustomType[playerid]);
					format(str,64,"%s~n~$%d",str,price);
					PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
					PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
					format(str,64,"TUN[%d][ModelID]",i);
					if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),GetGVarInt(str,CustomType[playerid]))) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
					else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],GetGVarInt(str,CustomType[playerid]));
				}
				TextDrawShowForPlayer(playerid,CustomTD[10]);
				TextDrawShowForPlayer(playerid,CustomTD[20]);
				TextDrawShowForPlayer(playerid,CustomTD[21]);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[0]);
				PlayerTextDrawShow(playerid,CustomTDPl[playerid][0]);
				CameraViewChange(playerid,CustomType[playerid]);
				SelectTextDraw(playerid,0xAA3333AA);
			}
			else {
				SetCameraBehindPlayer(playerid);
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid,"TunningSalun",0);
				for(new h = 0;h < 22;h++) {
					if(h < 6)PlayerTextDrawHide(playerid,CustomTDPl[playerid][h]);
					TextDrawHideForPlayer(playerid,CustomTD[h]);
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,  2.0, -137.9268,994.9813,1144.1937))
		{
			if(PI[playerid][pAdmin] == 0)
  			{
  			    if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1])
				  	return ErrorMessage(playerid, "Вы не за рулём своего Т/С");
			}
				
			new Veh = GetPlayerVehicleID(playerid);//, id = random(2);
			
			switch(GetPlayerInterior(playerid))
			{
				case 1:
				{
				    SetVehiclePos(Veh, 2229.4290,-1802.2118,21.7119);
					SetVehicleZAngle(Veh, 91.3269);
				    /*
					SetVehiclePos(Veh, tuning_exit_1[id][0],tuning_exit_1[id][1],tuning_exit_1[id][2]);
					SetVehicleZAngle(Veh, tuning_exit_1[id][3]);
					*/
				}
				case 2:
				{
				    SetVehiclePos(Veh, 1906.5868,2925.8508,12.0000);
					SetVehicleZAngle(Veh, 87.8802);
				    /*
					SetVehiclePos(Veh, tuning_exit_3[id][0],tuning_exit_3[id][1],tuning_exit_3[id][2]);
					SetVehicleZAngle(Veh, tuning_exit_3[id][3]);
					*/
				}
				case 3:
				{
				    SetVehiclePos(Veh, -392.3500,1009.5259,12.1453);
					SetVehicleZAngle(Veh, 268.3385);
				    /*
					SetVehiclePos(Veh, tuning_exit_2[id][0],tuning_exit_2[id][1],tuning_exit_2[id][2]);
					SetVehicleZAngle(Veh, tuning_exit_2[id][3]);
					*/
				}
			}
			exit_garage(Veh,0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 1729.8444,3459.0908,2.6100) && (gBusiness[PI[playerid][bizz_work]][bizzType] == 14)) {
			new Veh = GetPlayerVehicleID(playerid);
			if((gBusiness[VehicleInfo[Veh][vBizz]][bizzType] != 14)
				&& GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необходимо находиться за рулём тягоча");
				
			if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"У Вас уже есть груз");
			if(GetVehicleFreeSeat(Veh) == -1) return ErrorMessage(playerid,"Начать загрузку можно без пассажиров");
			SetVehiclePos(Veh, 2628.4819,-589.2004,2768.9805);
			SetVehicleZAngle(Veh, 200.1132);
			
			SetPlayerVirtualWorld(playerid,playerid+1);

			SetVehicleVirtualWorld(Veh,playerid+1);

			SetPlayerCameraPos(playerid, 2635.027099, -597.102844, 2768.397460);
			SetPlayerCameraLookAt(playerid, 2632.648681, -592.704895, 2768.367431);

			TogglePlayerControllable(playerid, false);

			TK_Trailer[playerid] = A_CreateVehicle(450,2624.5708,-578.5069,2768.5903,200.0733,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
			SetVehicleVirtualWorld(TK_Trailer[playerid],playerid+1);

			new prods;
			switch(GetVehicleModel(Veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}

			static const f_str[] = ""W"Сколько боеприпасов вы хотите загрузить?\n\n\
								Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
								Боеприпасов на складе: "ORANGE"%d"W" ед\n\n\
								"W"Количество загружаемых боеприпасов должно быть кратное: "ORANGE"1000"W" кг";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
			format(string,sizeof(string),f_str,prods,zavodsklad);

			D(playerid,D_TRUCK,DSI, ""P"Оружейный завод",string,"Загрузить","Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, -2246.3052,-98.3381,26.2346) && rob_veh[playerid] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(!VG[rob_veh[playerid]][vgAmount][0]) return ErrorMessage(playerid,"Фургон пуст");
			GiveMoney(playerid,250*VG[rob_veh[playerid]][vgAmount][0],"ограбление дома");
			VG[rob_veh[playerid]][vgAmount][0] = 0;
			SendOk(playerid,"Вы успешно продали награбленную технику");
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 1833.4160,1452.2003,9.9700) && (gBusiness[PI[playerid][bizz_work]][bizzType] != 14)) {
			new Veh = GetPlayerVehicleID(playerid);
			if((gBusiness[VehicleInfo[Veh][vBizz]][bizzType] != 14)
				&& GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необходимо находиться за рулём тягоча");
				
			if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"У Вас уже есть груз");
			if(GetVehicleFreeSeat(Veh) == -1) return ErrorMessage(playerid,"Начать загрузку можно без пассажиров");
			SetVehiclePos(Veh, 2628.4819,-589.2004,2768.9805);
			SetVehicleZAngle(Veh, 200.1132);
			SetPlayerVirtualWorld(playerid,playerid+1);
			
			SetVehicleVirtualWorld(Veh,playerid+1);

			/*
			SetPlayerCameraPos(playerid, 2635.027099, -597.102844, 2768.397460);
			SetPlayerCameraLookAt(playerid, 2632.648681, -592.704895, 2768.367431);

			TogglePlayerControllable(playerid, false);
			*/

			TK_Trailer[playerid] = A_CreateVehicle(584,1825.1855,1454.6405,9.9700,86.4638,color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PI[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
			SetVehicleVirtualWorld(TK_Trailer[playerid],playerid+1);

			new prods;
			switch(GetVehicleModel(Veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}

			static const f_str[] = ""W"Сколько тонн нефти вы хотите загрузить?\n\n\
								Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
								Нефти на складе: "ORANGE"%d"W" т.\n\n\
								"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
			format(string,sizeof(string),f_str,prods,oilsklad*10000);

			D(playerid,D_TRUCK_2,DSI, ""P"Нефтезавод",string,"Загрузить","Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 2943.0398,-1286.9751,1.3162)
		&& (gBusiness[PI[playerid][bizz_work]][bizzType] != 14) && TI[playerid][tTrucker][1] == 1)
		{//порт сф
			new Veh = GetPlayerVehicleID(playerid);
			if((gBusiness[VehicleInfo[Veh][vBizz]][bizzType] != 14)
				&& GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необходимо находиться за рулём тягоча");
				
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(Veh)) return ErrorMessage(playerid,"У Вас нет груза");
			
			new percent = floatround(TI[playerid][tTrucker][0]/1000*TI[playerid][tTrucker][2]);//общая сумма
			new price_1 = floatround(percent/100*FuncBizz[PI[playerid][bizz_work]][funcbPercent]);//процент который идёт в ТК
			new price_2 = percent-price_1;//сумма которая идёт игроку

			static const f_str[] = ""W"%d"G" кг груза было продано за "ORANGE"$%d. "G"Доход: $%d ($%d доставлено в кассу компании)";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,TI[playerid][tTrucker][0],percent,price_2,price_1);
			SendOk(playerid,string);
			GiveMoney(playerid,price_2,"разгрузка ТК");
			bizz_pay(PI[playerid][bizz_work],price_1);

			PI[playerid][bizz_lcash] += price_1;
			PI[playerid][bizz_cash] += price_1;

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			TI[playerid][tTrucker][3] = 0;
			TI[playerid][tTrucker][2] = 0;
			TI[playerid][tTrucker][1] = 0;
			TI[playerid][tTrucker][0] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 1789.7302,3467.2896,2.6100)
		&& (gBusiness[PI[playerid][bizz_work]][bizzType] != 14) && TI[playerid][tTrucker][1] == 2)
		{//порт ЛС
			new Veh = GetPlayerVehicleID(playerid);
			if((gBusiness[VehicleInfo[Veh][vBizz]][bizzType] != 14)
				&& GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необходимо находиться за рулём тягоча");
				
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(Veh)) return ErrorMessage(playerid,"У Вас нет груза");
			
			new percent = floatround(TI[playerid][tTrucker][0]/1000*TI[playerid][tTrucker][2]);//общая сумма
			new price_1 = floatround(percent/100*FuncBizz[PI[playerid][bizz_work]][funcbPercent]);//процент который идёт в ТК
			new price_2 = percent-price_1;//сумма которая идёт игроку

			static const f_str[] = ""W"%d"G" кг груза было продано за "ORANGE"$%d. "G"Доход: $%d ($%d доставлено в кассу компании)";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,TI[playerid][tTrucker][0],percent,price_2,price_1);
			SendOk(playerid,string);
			GiveMoney(playerid,price_2,"разгрузка ТК");
			bizz_pay(PI[playerid][bizz_work],price_1);

			PI[playerid][bizz_lcash] += price_1;
			PI[playerid][bizz_cash] += price_1;

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			TI[playerid][tTrucker][3] = 0;
			TI[playerid][tTrucker][1] = 0;
			TI[playerid][tTrucker][0] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 1713.8218,3504.8047,2.6100)
		&& (gBusiness[PI[playerid][bizz_work]][bizzType] != 14) && TI[playerid][tTrucker][1] == 3)
		{//оружейка
			new Veh = GetPlayerVehicleID(playerid);
			if((gBusiness[VehicleInfo[Veh][vBizz]][bizzType] != 14)
				&& GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необходимо находиться за рулём тягоча");
				
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(Veh)) return ErrorMessage(playerid,"У Вас нет груза");
			
			new percent = floatround(TI[playerid][tTrucker][0]/1000*TI[playerid][tTrucker][2]);//общая сумма
			new price_1 = floatround(percent/100*FuncBizz[PI[playerid][bizz_work]][funcbPercent]);//процент который идёт в ТК
			new price_2 = percent-price_1;//сумма которая идёт игроку

			static const f_str[] = ""W"%d"G" кг груза было продано за "ORANGE"$%d. "G"Доход: $%d ($%d доставлено в кассу компании)";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,TI[playerid][tTrucker][0],percent,price_2,price_1);
			SendOk(playerid,string);
			GiveMoney(playerid,price_2,"разгрузка ТК");
			bizz_pay(PI[playerid][bizz_work],price_1);

			PI[playerid][bizz_lcash] += price_1;
			PI[playerid][bizz_cash] += price_1;

			UpdatePlayerData(playerid,"bizz_lcash",PI[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			TI[playerid][tTrucker][3] = 0;
			TI[playerid][tTrucker][1] = 0;
			TI[playerid][tTrucker][0] = 0;
		}
		else if(PI[playerid][pHouse] && gHouses[PI[playerid][pHouse]][houseImprove][2]) {
			if(PlayerToPoint(10,playerid,gHouses[PI[playerid][pHouse]][houseParkX], gHouses[PI[playerid][pHouse]][houseParkY], gHouses[PI[playerid][pHouse]][houseParkZ]) && ((house_car[playerid][0] != INVALID_VEHICLE_ID && GetPlayerVehicleID(playerid) == house_car[playerid][0]) || (house_car[playerid][1] != INVALID_VEHICLE_ID && GetPlayerVehicleID(playerid) == house_car[playerid][1]))) {
				new id = -1,house = PI[playerid][pHouse],car;
				switch(gHouses[house][houseClass]) {
					case 0: id = 0;
					case 1: id = 1;
					case 2: id = 2;
					case 3: id = 3;
				}
				new hint = gHouses[house][houseHint];
				new interior = hinterior_info[hint][h_interior];
				new Veh = GetPlayerVehicleID(playerid);
				if(GetPlayerVehicleID(playerid) == house_car[playerid][0]) car = 0;
				else car = 1;
				switch(car) {
					case 0: {
						SetVehiclePos(Veh, cargarage[id][0],cargarage[id][1],cargarage[id][2]);
						SetVehicleZAngle(Veh,cargarage[id][3]);
						enter_garage(Veh,interior,PI[playerid][pHouse]);
						SetCameraBehindPlayer(playerid);
					}
					case 1: {
						SetVehiclePos(Veh, cargarage[id+1][0],cargarage[id+1][1],cargarage[id+1][2]);
						SetVehicleZAngle(Veh,cargarage[id+1][3]);
						enter_garage(Veh,interior,PI[playerid][pHouse]);
						SetCameraBehindPlayer(playerid);
					}
				}
			}
		}
		for(new i;i < sizeof(tuning_enter);i ++)
		{
			if((IsPlayerInRangeOfPoint(playerid,  10.0, tuning_enter[i][0],tuning_enter[i][1],tuning_enter[i][2])) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    if(PI[playerid][pAdmin] == 0)
			    {
					if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1])
						return ErrorMessage(playerid, "Вы не за рулём своего Т/С");
				}
				new Veh = GetPlayerVehicleID(playerid);
				
				if(GetVehicleFreeSeat(Veh) == -1) return ErrorMessage(playerid,"У Вас в Т/C пассажиры");
				
				switch(GetNearestTune(playerid))
				{
					case 1: exit_garage(Veh,1,true);
					case 2: exit_garage(Veh,2,true);
					case 3: exit_garage(Veh,3,true);
				}
				SetVehiclePos(Veh, -137.6594,991.3000,1143.8412);
				SetVehicleZAngle(Veh, 180.0);
			}
		}
    }
    if(newkeys == KEY_WALK && !IsPlayerInAnyVehicle(playerid)) {
		new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
		
		if(IsPlayerInRangeOfPoint(playerid, 2.3, -2152.1694,-93.3639,27.3811)) {//наркобот
			static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
                "O"Примечание:"W"\n\
                \tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
                \tДоступно грамм на складе: "P"%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

   			format(string,sizeof(string),f_str,black_prods[5],black_prods[1],vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs]);
			D(playerid,D_MARKET_NARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2226.8894,770.8658,1116.8480))
		{
            new autosalonstr[1024], vw = GetPlayerVirtualWorld(playerid);
            
		    if(vw == 1 || vw == 2 || vw == 3 || vw == 4 || vw == 5 || vw == 6)
			{
				format(autosalonstr, sizeof(autosalonstr), ""P"Автосалон №%d", TI[playerid][tSelectedBusinessID]);
				D(playerid,D_AUTOSALON_CAR,DSL,autosalonstr,"Посмотреть список транспортов","Перейти","Отмена");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, -2145.1804,-123.4797,27.3381)) {//армоур
			D(playerid,D_MARKET,DSL, ""P"Черный рынок", ""P"1."W" Бронежилет\n"P"2."W" Армейская форма", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, -2196.9797,-120.2523,26.3851)) {//материалы
			static const f_str[] = ""W"Укажите количество боеприпасов для покупки:\n\n\
                "O"Примечание:"W"\n\
                \tСтоимость "P"1"W" боеприпаса: "GREEN"$%d"W"\n\
                \tДоступно боеприпасов на складе: "P"%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

   			format(string,sizeof(string),f_str,black_prods[6],black_prods[2],vip_status[PI[playerid][pVips]][vip_mats]-PI[playerid][pMats]);
			D(playerid, D_MARKET_GUN, DSI, ""P"Покупка оружия",string, "Купить", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, -2148.1326,-108.3923,27.3381)) {//бот скупка
			D(playerid,D_MARKET_BUY,DSL, ""P"Черный рынок [СКУПКА]", ""P"1."W" Бронежилет\n"P"2."W" Армейская форма\n"P"3."W" Наркотики\n"P"4."W" Материалы", "Выбрать", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, -2198.2781,-127.1819,26.3851)) {
			if(PI[playerid][pLevel] < 3) return SendBotMessage(playerid,"Ты еще совсем мал, подработать можно с 3 лет в штате");
			if(!IsAGang(playerid)) return SendBotMessage(playerid,"Не на тот район зашёл, вали-ка отсюда");
			if(rob_veh[playerid] != INVALID_VEHICLE_ID) return SendBotMessage(playerid,"Ты уже брал тачку, вали-ка отсюда");
			D(playerid,D_ROB_CAR,DSM, ""P"Ограбление домов", "\n\n"W"Ты действительно хочешь грабить дома?\n\n", "Да", "Нет");
		}
		else if(IsAAlca(playerid) && maniken[playerid] != -1 && TI[playerid][tAlcotraz][2]) {
			TI[playerid][tAlcotraz][2] = 0;
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1, 1, 1, 1, 1, 0, 0);
			SetTimerEx("alcatraz_timer",10000,false,"i",playerid);
			return 1;
		}
  		else if(IsAGang(playerid) && IsPlayerInDynamicArea(playerid,gAreas[arZavodSklad])) {
		    if(GetPVarInt(playerid,"carrygun")) return ErrorMessage(playerid,"У Вас уже есть ящик с боеприпасами");
			if(zavodsklad < 500) return ErrorMessage(playerid, "На складе недостаточно боеприпасов");
			if(!GetPVarInt(playerid,"carrygun")) {
				zavodsklad -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
			}
		}
  		else if((IsAGang(playerid) || GetTeamID(playerid) == fARMYLV || IsAMafia(playerid)) && IsPlayerInDynamicArea(playerid,gAreas[arArmyLVSklad])) {
		    if(GetPVarInt(playerid,"carrygun")) return ErrorMessage(playerid,"У Вас уже есть ящик с боеприпасами");
			if(FI[fARMYLV][fMats] < 500) return ErrorMessage(playerid, "На складе недостаточно боеприпасов");
			if(!GetPVarInt(playerid,"carrygun")) {
				FI[fARMYLV][fMats] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
				SetPVarInt(playerid,"use_mats",1);
			}
		}
		else if((IsAGang(playerid) || IsAMafia(playerid)) && IsPlayerInDynamicArea(playerid,gAreas[arArmySFSklad])) {
			if(GetPVarInt(playerid,"carrygun")) return ErrorMessage(playerid,"У Вас уже есть ящик с боеприпасами");
			if(FI[fARMYSF][fMats] < 500) return ErrorMessage(playerid, "На складе недостаточно боеприпасов");
			if(!GetPVarInt(playerid,"carrygun")) {
				FI[fARMYSF][fMats] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
				SetPVarInt(playerid,"use_mats",2);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.7, -2183.4431,-95.8424,26.3851)) {
			if(!IsAMafia(playerid)) return ErrorMessage(playerid,"Вы не мафиози");
			static const f_str[] = ""W"Стоимость "P"10.000"W" боеприпасов: "GREEN"$%d"W"\n\
                					Доступно боеприпасов на складе мафии: "P"%d"W"\n\n\
									"YELLOW"Вы действительно хотите купить "P"10.000"YELLOW" боеприпасов за "GREEN"$%d?";
			new string[sizeof(f_str) +1 + (-2 +6) + (-2 + 7) + (-2 + 7)];

   			format(string,sizeof(string),f_str,50000,FI[GetTeamID(playerid)][fMats],50000);
			D(playerid, D_MATERIALS_BUY, DSM, ""P"Покупка боеприпасов",string, "Купить", "Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.7, 520.3056,880.0745,1000.6400)) {
			if(!IsAMafia(playerid) && !IsAGang(playerid)) return ErrorMessage(playerid,"Вы не мафиози/бандит");
			static const f_str[] = ""W"Укажите количество наркотиков для покупки:\n\n\
                "O"Примечание:"W"\n\
                \tСтоимость "P"1г"W" наркотиков: "GREEN"$%d"W"\n\
				\tВ карман поместится: "P"%d"W"\n";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];

			format(string,sizeof(string),f_str,pricedrugs,vip_status[PI[playerid][pVips]][vip_drugs]-PI[playerid][pDrugs]);
			D(playerid,D_BUYNARKO,DSI, ""P"Покупка наркотиков", string, "Купить", "Отмена");
		}
		else if(PlayerToPoint(1.5,playerid,2436.6270,-1903.8416,22.0043)){ //угон
			if(theftCheck[playerid][1] != 3) return ErrorMessage(playerid, "Нужно сначала взять задание");
			if(PI[playerid][ptheftSkill] == 0) return ErrorMessage(playerid, "Доступно только со 2 уровня угона");
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) return ErrorMessage(playerid, "Вы уже получили машину");
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
			new car;
			switch(PI[playerid][ptheftSkill]){
				case 1: car = 462; 
				case 2: car = 509; 
				case 3..25: car = 461; 
			}
			switch (random(5)){
					case 0: theftveh[playerid][0] = A_CreateVehicle(car, 2434.6057,-1919.0759,22.0043,266.0219, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 1: theftveh[playerid][0] = A_CreateVehicle(car, 2434.6057,-1919.0759,22.0043,266.0219, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 2: theftveh[playerid][0] = A_CreateVehicle(car, 2434.6057,-1919.0759,22.0043,266.0219, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 3: theftveh[playerid][0] = A_CreateVehicle(car, 2434.6057,-1919.0759,22.0043,266.0219, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 4: theftveh[playerid][0] = A_CreateVehicle(car, 2434.6057,-1919.0759,22.0043,266.0219, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
			}
			if(car == 461) VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;
		}
		else if(PlayerToPoint(1.5,playerid,1932.6353,2031.9141,15.8694)){ //угон
			if(theftCheck[playerid][1] != 3) return ErrorMessage(playerid, "Нужно сначала взять задание");
			if(PI[playerid][ptheftSkill] == 0) return ErrorMessage(playerid, "Доступно только со 2 уровня угона");
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) return ErrorMessage(playerid, "Вы уже получили машину");
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
			new car;
			switch(PI[playerid][ptheftSkill]){
				case 1: car = 462; 
				case 2: car = 509; 
				case 3..25: car = 461; 
			}
			switch (random(5)){
					case 0: theftveh[playerid][0] = A_CreateVehicle(car, 1923.4921,2030.6003,15.8694,2.1927, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 1: theftveh[playerid][0] = A_CreateVehicle(car, 1923.4921,2030.6003,15.8694,2.1927, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 2: theftveh[playerid][0] = A_CreateVehicle(car, 1923.4921,2030.6003,15.8694,2.1927, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 3: theftveh[playerid][0] = A_CreateVehicle(car, 1923.4921,2030.6003,15.8694,2.1927, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 4: theftveh[playerid][0] = A_CreateVehicle(car, 1923.4921,2030.6003,15.8694,2.1927, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
			}
			if(car == 461) VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;
		}
		else if(PlayerToPoint(1.5,playerid,391.4835,1031.3553,12.1406)){ //угон
			if(theftCheck[playerid][1] != 3) return ErrorMessage(playerid, "Нужно сначала взять задание");
			if(PI[playerid][ptheftSkill] == 0) return ErrorMessage(playerid, "Доступно только со 2 уровня угона");
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) return ErrorMessage(playerid, "Вы уже получили машину");
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
			new car;
			switch(PI[playerid][ptheftSkill]){
				case 1: car = 462; 
				case 2: car = 509; 
				case 3..25: car = 461; 
			}
			switch (random(5)){
					case 0: theftveh[playerid][0] = A_CreateVehicle(car, 390.7594,1035.7509,12.1406,91.2036, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 1: theftveh[playerid][0] = A_CreateVehicle(car, 390.7594,1035.7509,12.1406,91.2036, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 2: theftveh[playerid][0] = A_CreateVehicle(car, 390.7594,1035.7509,12.1406,91.2036, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 3: theftveh[playerid][0] = A_CreateVehicle(car, 390.7594,1035.7509,12.1406,91.2036, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 4: theftveh[playerid][0] = A_CreateVehicle(car, 390.7594,1035.7509,12.1406,91.2036, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
			}
			if(car == 461)VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;
		}
		else if(PlayerToPoint(1.5,playerid,-2297.7026,-90.4445,24.9665)){ //угон //коорды
			if(PI[playerid][ptheftSkill] < 15) {
				if(!IsAGang(playerid)) return ErrorMessage(playerid, "Ты не с нашего района!");
			}
			if(PI[playerid][ptheftTime] > gettime()) {
				new string[80];
				format(string,sizeof(string),"Пошел вон, ты слишком часто сюда приходишь, возвращайся через %02d:%02d", (PI[playerid][ptheftTime]-gettime())/60,(PI[playerid][ptheftTime]-gettime())%60);
				return ErrorMessage(playerid,string);
			}
			if(PI[playerid][ptheftSkill] == 0){
				if(thefttime[playerid] > 0) return ErrorMessage(playerid, "Вы уже начали задание, для отмены введите команду /theftcancel");
			 	D(playerid,D_THEFT,DSM, ""P"Угон транспорта",""W"Здарова, я Jackson Young, наш общий знакомый сказал,\nчто ты не против заработать на нелегальной работенке.\nСуть моего задания в том, что я передаю на GPS координаты тачки, которая мне нужна.\nПеред тем, как берешься за работу, нужно купить в магазине отмычки.\nНичего сложного нет, крадешь тачку и получаешь - легкие деньги.\nБудешь браться за дело?","Да","Нет");
			}
			else {
				D(playerid,D_THEFT_LIST,DSL, ""P"Угон транспорта",""W"Взять задание\nВзять транспорт","Выбрать","Отмена");
			}
		}
		else if(PlayerToPoint(1.5,playerid,2512.5093,-1806.9425,22.2100) || PlayerToPoint(1.5,playerid,1873.1093,2047.8470,15.9397)
	 	|| PlayerToPoint(1.5,playerid,193.9168,825.0530,12.0422)) {//квест спавны
			new mas[4] = {1,2,3,4},num=0,string[300];
			new skr[124];
			string = ""P"Задание\t"P"Статус\n";
			for(new i;i<4;i++) {
				if(AcceptQuest[playerid][mas[i]]==0) skr = "\t"GREEN"Доступно"W"";
				else if(QuestProgress[playerid][mas[i]] == 100) skr = "\t"NO"Выполнено"W"";
				else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "\t"ORANGE"Можно завершить"W"";
				else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = "\t"G"В процессе"W"";

				format(string,sizeof(string),"%s%s%s\n",string,QI[mas[i]][QuestName],skr);
				QuestShow[playerid][num] = mas[i];
				num++;
			}
			D(playerid,D_QUEST,DSTH,"Квесты",string,"Выбрать","Отмена");
		}
		else if(PlayerToPoint(2.5,playerid,1256.4078,1480.8704,1114.8402)) {//актер news
			if(!PI[playerid][pPhone]) return SendBotMessage(playerid,"У Вас нет мобильного телефона");
			new bool:online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(IsANews(i) && start_work[playerid]) continue;
				online = true;
			}
			if(!online) return ErrorMessage(playerid,"На сервере присутвутют редакторы. Отправьте объявление: /ad [текст]");
			D(playerid, D_AUTONEWS, DSL, ""P"Объявление",""P"1."W" Купить\n"P"2."W" Продать\n"P"3."W" Обменять\n"P"4."W" Услуги", "Выбрать", "Отмена");
			return 1;
		}
		else if(PlayerToPoint(1.5,playerid,803.8372,149.2769,1502.0000) && IsACop(playerid) && start_work[playerid]) {//пд вход в регистратуру
			SetPlayerPosAC(playerid,806.4077,147.7162,1502.0000,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			SetPlayerFacingAngle(playerid,269.8491);
			SetCameraBehindPlayer(playerid);
		}
		else if(PlayerToPoint(1.5,playerid,806.6146,149.2710,1502.0000) && IsACop(playerid) && start_work[playerid]) {//пд выход из регистратуры
			SetPlayerPosAC(playerid,803.9016,147.5252,1502.0000,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			SetPlayerFacingAngle(playerid,295.5193);
			SetCameraBehindPlayer(playerid);
		}
		else if(PlayerToPoint(2.0,playerid,2307.5144,-1713.0509,21.9609)) {
			if(!duels) return SendBotMessage(playerid,"Временно недоступно");
			if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendBotMessage(playerid,"Вы не состоите в банде/мафии");
			D(playerid,D_DUEL,DSL,""P"Дуэли",""P"1."W" Доступные лобби\n"P"2."W" Создать лобби","Выбрать","Отмена");
		}
		else if(PlayerToPoint(1.5,playerid,-292.9807,1037.1306,12.1227)
		|| PlayerToPoint(1.5,playerid,171.5725,1033.9640,13.7109)
		|| PlayerToPoint(1.5,playerid,-667.6210,876.9438,12.0000)
		|| PlayerToPoint(1.5,playerid,319.9991,1870.6096,11.9936)
		|| PlayerToPoint(3,playerid,791.0714,2459.1028,12.0000))
		{//квест банды
			if((PlayerToPoint(1.5,playerid,-292.9807,1037.1306,12.1227) && PI[playerid][pMember] != fBALLAS)
			|| (PlayerToPoint(1.5,playerid,171.5725,1033.9640,13.7109) && PI[playerid][pMember] != fVAGOS)
			|| (PlayerToPoint(1.5,playerid,-667.6210,876.9438,12.0000) && PI[playerid][pMember] != fGROVE)
			|| (PlayerToPoint(1.5,playerid,319.9991,1870.6096,11.9936) && PI[playerid][pMember] != fAZTEC)
			|| (PlayerToPoint(1.5,playerid,791.0714,2459.1028,12.0000) && PI[playerid][pMember] != fRIFA))
				return SendBotMessage(playerid,"Не на тот район зашёл, вали-ка отсюда");
				
			new mas[5] = {5,6,7,8,9},num=0,string[300];
			new skr[124];
			string = ""P"Задание\t"P"Статус\n";
			for(new i;i<5;i++) {
				if(AcceptQuest[playerid][mas[i]]==0) skr = "\t"GREEN"Доступно"W"";
				else if(QuestProgress[playerid][mas[i]] == 100) skr = "\t"NO"Выполнено"W"";
				else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "\t"ORANGE"Можно завершить"W"";
				else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = "\t"G"В процессе"W"";

				format(string,sizeof(string),"%s%s%s\n",string,QI[mas[i]][QuestName],skr);
				QuestShow[playerid][num] = mas[i];
				num++;
			}
			D(playerid,D_QUEST_GANG,DSTH,""P"Квесты",string,"Выбрать","Отмена");
		}
		else if(TI[playerid][tInHouse]) {
			new houseid = TI[playerid][tSelectHouse];
			new hint = gHouses[houseid][houseHint];
			new Float:x, Float:y, Float:z;
			x = hinterior_info[hint][h_pos_exit][0];
			y = hinterior_info[hint][h_pos_exit][1];
			z = hinterior_info[hint][h_pos_exit][2];
			if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z)) {
			    if(gHouses[houseid][houseImprove][0]) {
					pc_cmd_exit(playerid);
				}
				else ErrorMessage(playerid, "Улучшение 'Автоматические двери' не установлено");
			}
		}
		else if(PI[playerid][pMember] == fFBI) {
			 for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(VehicleInfo[i][vTeam] == fFBI) {
					new Float:X,Float:Y,Float:Z;
					GetVehicleShiftPos(i,1,X,Y,Z,3.0);

					if(IsPlayerInRangeOfPoint(playerid,3,X,Y,Z)) {
						new string[256];
						SetPVarInt(playerid,"veh", i);
						string = "Название\tК-во"W"\n";
						format(string,sizeof(string), "%sЖучок\t{CFFF4D}1\n",string);
						D(playerid,D_TIPSTER,DSTH,"{ffff00}Багажник", string, "Взять", "Закрыть");
						GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,true,objective);
						break;
					}
				}
			}
		}
		for (new i = 0; i < MAX_ATM + 1; i ++)
		{
			if(ATMData[i][atm_Taken] && IsPlayerInRangeOfPoint(playerid, 2.0, ATMData[i][ATM_Pos][0], ATMData[i][ATM_Pos][1], ATMData[i][ATM_Pos][2]))
			{
			    new string[1024];

				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);

				if(ATMData[i][atm_Bank])
				{
					format(string,sizeof(string),"\
						"P"Банкомат №%d "W"| {%s}%s "W"| Комиссия: "ORANGE"%d%\
						",i,color_td[FuncBizz[ATMData[i][atm_Bank]][funcbColor]][col_rgb],FuncBizz[ATMData[i][atm_Bank]+1][funcbName],
						FuncBizz[ATMData[i][atm_Bank]][funcbPercent3]);
				}
				else format(string,sizeof(string),""P"Банкомат №%d "W"| Комиссия: "ORANGE"1%", i);

				D(playerid, D_ATM, DSL, string,
					""GREEN"1."W" Снять наличные\n\
					 "GREEN"2."W" Положить наличные\n\
					 "GREEN"3."W" Пополнить счет телефона", "Далее", "Закрыть");

			}
		}
        for(new i; i < sizeof(auto_exam); i ++)
        {
	  		if(PlayerToPoint(1.5,playerid,auto_exam[i][0],auto_exam[i][1],auto_exam[i][2]) && GetPlayerInterior(playerid) == 76 && GetPlayerVirtualWorld(playerid) == 45) {
				if(TI[playerid][tAutoSchool] != 1) return ErrorMessage(playerid,"Вы не оплатили данный вид экзамена. Оплатить можно в кассе");
				if(GetPVarInt(playerid,"use_test") == 1) return 1;
				if(GetPVarInt(playerid,"pWaitingExam") == 1) return ErrorMessage(playerid,"Вы уже сдали теоретическую часть");
				static const f_str[] = ""W"Добро пожаловать в автошколу!\n\n\
					Для получения доступа к практическому экзамену,\n\
					Вам необходимо ответить "P"ВЕРНО"W" на 5 теоретических вопросов.\n\
					Стоимость прохождения теста составит - "ORANGE"$%d\n\n\
					"W"Вы хотите приступить к решению теста?";
				new string[sizeof(f_str) +1 + (-2 + 5)];
				format(string,sizeof(string),f_str,500);
				D(playerid,D_AUTOSCHOOL_1,DSM, ""P"ЭКЗАМЕН",string,"Да","Отмена");
				SetPVarInt(playerid,"use_test", 1);
				DeletePVar(playerid,"error_test");
				DeletePVar(playerid,"pTestQNumber");
				TestASKMassive[playerid] = { 0, 1, 2, 3 , 4, 5, 6};
				RandomMassive(TestASKMassive[playerid], 7);
			}
		}
		for(new i; i < sizeof(auto_page_exam); i ++)
        {
			if(PlayerToPoint(1.5,playerid,auto_page_exam[i][0],auto_page_exam[i][1],auto_page_exam[i][2]) && GetPlayerInterior(playerid) == 76 && GetPlayerVirtualWorld(playerid) == 45)
			{
				if(TI[playerid][tAutoSchool] != 2 && TI[playerid][tAutoSchool] != 3) return ErrorMessage(playerid,"Вы не оплатили данный вид экзамена. Оплатить можно в кассе");
				D(playerid,D_AUTOSCHOOL_3,DSM, ""P"ЭКЗАМЕН","\n\n"W"Вы действительно хотите приступить к экзамену?\n\n","Да","Отмена");
			}
		}
		for(new i; i < sizeof(comp_club); i ++)
        {
			if(PlayerToPoint(1.5,playerid,comp_club[i][0],comp_club[i][1],comp_club[i][2]) && GetPlayerInterior(playerid) == 45 && GetPlayerVirtualWorld(playerid) == 76)
			{
			    if(GetPVarInt(playerid,"comp_game") <= unix) return ErrorMessage(playerid,"Купите билет для игры");
				D(playerid,D_COMP_GAME,DSL,""P"Game Menu",""P"1."W" Capture Blocks\n"P"2."W" DM - Арена\n"P"3."W" Гонка Вооружений", "Выбрать", "Закрыть");
			}
		}
		for(new houseid = 1; houseid < gHouseCount; houseid++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]))
   			{
				TI[playerid][tSelectHouse] = houseid;

				//TI[playerid][tTPpick] = true;

				new classname[20], mes2[200];
				switch(gHouses[houseid][houseClass]) {
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
				}
				if(GetString(gHouses[houseid][houseOwner], "None"))
				{
					format(mes2,sizeof(mes2),""W"Цена: "ORANGE"$%d\n\
											"W"Класс: "P"%s\n\
											"W"Номер дома: "P"№%d",
											gHouses[houseid][housePrice],
											classname,
											gHouses[houseid][houseID]);
					D(playerid,D_HOUSE,DSM, ""P"Дом",mes2,"Купить","Отмена");
				}
				else
				{
					format(mes2,sizeof(mes2),""W"Владелец: "ORANGE"%s\n\
											"W"Дом: "P"№%d\n\
											"W"Класс: "P"%s",
											gHouses[houseid][houseOwner],
											gHouses[houseid][houseID],
											classname);
					D(playerid,D_HOUSE,DSM, ""P"Дом",mes2,"Войти","Отмена");
				}
			}
		}
		for(new businessid = 1; businessid < gBusinessCount; businessid++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, gBusiness[businessid][bizzX], gBusiness[businessid][bizzY], gBusiness[businessid][bizzZ]))
   			{
				new mes2[128];

				if(businessid < 0) return SendClientMessage(playerid,COLOR_GREY,"Ошибка (#100)");

				if(!gBusiness[businessid][bizzStatus]) return true;

				TI[playerid][tSelectedBusinessID] = businessid;

				if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 7)
				&& (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 11)
				&& (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 14)
				&& (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 15)) {
					format(mes2,sizeof(mes2),""W"Данный бизнес продается за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_BUY,DSM, ""P"Бизнес",mes2,"Купить","Войти");
				}
				else
				{
					if(gBusiness[businessid][bizzType] == 8)
					{
					    if(IsPlayerInRangeOfPoint(playerid,10.0, 2475.11, -726.617, 12.3)) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0;
						if(IsPlayerInRangeOfPoint(playerid,10.0, 2328.85, -1804.16, 22.454)) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 2;
						if(IsPlayerInRangeOfPoint(playerid,10.0, 391.207, 789.493, 12.00)) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 4;
						if(IsPlayerInRangeOfPoint(playerid,10.0, 2135.81, -1802.5, 19.9079)) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 5;
						return D(playerid,dBuyCarSalon,DSM, ""P"Автосалон","\n\n"W"Вы хотите посмотреть список машин?\n\n","Да","Нет");
					}
					else
					{
						if(gBusiness[businessid][bizzEnter] && gBusiness[businessid][bizzOwnerID] != PI[playerid][pID])
						{
							new string[128];
							format(string,sizeof(string),""W"Стоимость входа "GREEN"$%d",gBusiness[businessid][bizzEnter]);
							D(playerid,D_BIZZ_ENTERS,DSM, ""P"Бизнес",string,"Войти","Отмена");
							return 1;
						}
						else
						{
						    D(playerid,dBizzEnter,DSM, ""P"Бизнес","\n\n"W"Вы дейстительно хотите войти в данный бизнес?\n\n","Да","Нет");
						}
					}
				}
			}
		}
		for(new bs = 1; bs < gBintsCount; bs++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, gBints[bs][bintX], gBints[bs][bintY], gBints[bs][bintZ]))
			{
				new id = TI[playerid][tSelectedBusinessID], vw, int;

				if(gBusiness[id][bizzType] == 13 && TI[playerid][tGym]) return ErrorMessage(playerid,"Необходимо закончить тренировку");
				else
				{
					switch(gBusiness[id][bizzType])
					{
						case 15: vw = 46,int = 78;
						default: vw = 0,int = 0;
					}

					TI[playerid][tTPpick] = true;

					SetPlayerPosAC(playerid,gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ],vw,int);
					SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);

					SetCameraBehindPlayer(playerid);

					OnPlayerUpdateLoadingMode(playerid);
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 1.0, gBints[bs][bintXB], gBints[bs][bintYB], gBints[bs][bintZB]))
			{
				new id = TI[playerid][tSelectedBusinessID];

				new products = gBusiness[id][bizzProduct];
				if(!products) return ErrorMessage(playerid,"К сожалению, товара не осталось");
				new type = gBusiness[id][bizzType];
				switch(type) {
					case 1: show_tavern(playerid,id);// закусочная
					case 2:	show_24(playerid,id);
					case 3..4: {
					    new string[128];
						format(string,sizeof(string),"Наименование\tСтоимость\nПиво \t$%d\nВодка \t$%d\nШампанское \t$%d\nВино \t$%d\nТекила \t$%d\nКоньяк \t$%d", gBusiness[id][bizzPrice] * 10 * gBarCosts[0],gBusiness[id][bizzPrice] * 10 * gBarCosts[1],gBusiness[id][bizzPrice] * 10 * gBarCosts[2],gBusiness[id][bizzPrice] * 10 * gBarCosts[3],gBusiness[id][bizzPrice] * 10 * gBarCosts[4],gBusiness[id][bizzPrice] * 10 * gBarCosts[5]);
						D(playerid, D_BIZZ_BAR, DSTH, "Меню", string, "Купить", "Отмена");
					}
					case 5: {
				  		if(TI[playerid][tTPpick]) {
							TI[playerid][tTPpick] = false;
							return 1;
						}
						else {
							if(GetPVarInt(playerid,"ChangingSkin") == 0) {
								SetPVarInt(playerid,"ChangingSkin",1);
								new Float: pos[4];
								GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
								GetPlayerFacingAngle(playerid, pos[3]);
								SetPVarFloat(playerid, "posx", pos[0]);
								SetPVarFloat(playerid, "posy", pos[1]);
								SetPVarFloat(playerid, "posz", pos[2]);
								SetPVarFloat(playerid, "posa", pos[3]);
								SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
								SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
								TogglePlayerControllable(playerid, 0);
								SetPlayerPosAC(playerid, 891.3698, 1463.8156, 1113.0920,playerid + 1,14);
								SetPlayerFacingAngle(playerid, 180.0);
								//InterpolateCameraPos(playerid, 891.165954, 1457.373168, 1114.207153, 891.165954, 1457.373168, 1114.207153, 1000);
								//InterpolateCameraLookAt(playerid, 891.338989, 1462.311035, 1113.440673, 891.338989, 1462.311035, 1113.440673, 1000);

								SetPlayerCameraPos(playerid, 891.165954, 1457.373168, 1114.207153);
								SetPlayerCameraLookAt(playerid, 891.338989, 1462.311035, 1113.440673);
							}
							SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
							switch(PI[playerid][pSex]) {
								case 1: SetPVarInt(playerid,"join_ped_item",0);
								case 2: SetPVarInt(playerid,"join_ped_item",71);
							}
							A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);

							for(new i=0; i<9; i++) {
								TextDrawShowForPlayer(playerid,buy_skins[i]);
							}
							PlayerTextDrawShow(playerid,buy_player_skins[playerid]);

							new price;
							if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
								new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PI[playerid][pVips]][vip_chose]);
								price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
							}
							else {
						    	if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
									new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
									price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
								}
								else if(BonusInfo[act_select] == 2) {
									new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
									price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
								}
							    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
							}

							new string[12];
							format(string,sizeof(string),"$%d",price);
							PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);

							SelectTextDraw(playerid, 0x0080FFFF);
						}
					}
					case 6: {
						if(!lic[playerid][3]) return ErrorMessage(playerid,"У Вас нет лицензии на оружие");
						new gun_name[32 + 1],string[512];
						string = ""W"Оружие\t"W"Стоимость\n";
						for(new i = 0; i < 12; i++) {
							GetWeaponName(gSellGun[i],gun_name,32);
							format(string, 1500, "%s\t%s\t$%i\n",string, gun_name, gSellGunPrice[i] * gBusiness[id][bizzPrice]);
						}
						new str[90];
						format(str, sizeof(str), "Armour\t$%i\nПропуск в тир\t$%i", gSellGunPrice[12] * gBusiness[id][bizzPrice], gSellGunPrice[13] * gBusiness[id][bizzPrice]);
						strcat(string, str);
						D(playerid, D_AMMO, DSTH, "Меню аммо", string, "Далее", "Отмена");
					}
					case 7: return true;//авиа
					case 9: show_fish(playerid);
					case 10: {
					    new string[256];
						format(string,sizeof(string),""P"Наименование\t"P"Стоимость\n"W"Билет [30 мин] \t"GREEN"$%d\n"W"Билет [1 час] \t"GREEN"$%d\n\t"W"Билет [2 часа] \t"GREEN"$%d\n"W"Билет [3 часа] \t"GREEN"$%d", gBusiness[id][bizzPrice] * gCompCosts[0],gBusiness[id][bizzPrice] * gCompCosts[1],gBusiness[id][bizzPrice] * gCompCosts[2],gBusiness[id][bizzPrice] * gCompCosts[3]);
						D(playerid, D_BIZZ_COMP, DSTH, "Меню", string, "Купить", "Отмена");
					}
					case 11,14,15: {
						new businessid = TI[playerid][tSelectedBusinessID];
						if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 11) {
							new string[128];
							format(string,sizeof(string),"\n\n"W"Этот таксопарк продается за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
							return D(playerid,D_BIZZ_UPDATE,DSM, ""P"Таксопарк",string,"Купить","Отмена");
						}
						else if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 14) {
							new string[128];
							format(string,sizeof(string),"\n\n"W"Эта транспортная компания продается за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
							return D(playerid,D_BIZZ_UPDATE,DSM, ""P"Транспортная компания",string,"Купить","Отмена");
						}
						else if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 15) {
							new string[128];
							format(string,sizeof(string),"\n\n"W"Это банковское отделение продается за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
							return D(playerid,D_BIZZ_UPDATE,DSM, ""P"Банковское отделение",string,"Купить","Отмена");
						}
						else {
							switch(gBusiness[businessid][bizzType]) {
								case 11: {
									if(PI[playerid][pBusiness] == businessid) {
										return D(playerid, D_BIZZ_TAXI, DSL, ""P"Меню таксопарка", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Управление цветом шашки\n"P"6."W" Управление названием таксопарка\n"P"7."W" Управление текстом на автомобилях\n"P"8."W" Изменение тарифов\n"P"9."W" Изменение процента от прибыли\n"P"10."W" Покупка номера телефона\n"P"11."W" Сотрудники\n"P"12."W" Статистика\n"P"13."W" Продать таксопарк", "Выбрать", "Отмена");
									}
									else if(PI[playerid][bizz_work] == businessid && PI[playerid][bizz_status] == 5) {
										return D(playerid, D_BIZZ_TAXI_ZAM, DSL, ""P"Меню таксопарка", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
									}
									else return ErrorMessage(playerid,"Управление таксопарком доступно только руководителю бизнеса и управляющему");
								}
								case 14: {
									if(PI[playerid][pBusiness] == businessid) {
										return D(playerid, D_BIZZ_TK, DSL, ""P"Меню транспортной компании", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление автомобилями\n"P"4."W" Управление цветом\n"P"5."W" Управление названием транспортной компании\n"P"6."W" Изменение процента от прибыли\n"P"7."W" Сотрудники\n"P"8."W" Статистика\n"P"9."W" Продать транспортную компанию", "Выбрать", "Отмена");
									}
									else if(PI[playerid][bizz_work] == businessid && PI[playerid][bizz_status] == 2) {
										return D(playerid, D_BIZZ_TK_ZAM, DSL, ""P"Меню транспортной компании", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
									}
									else return ErrorMessage(playerid,"Управление транспортной компанией доступно только руководителю бизнеса и управляющему");
								}
								case 15: {
									if(PI[playerid][pBusiness] == businessid) {
										return D(playerid, D_BIZZ_BO, DSL, ""P"Меню банковского отделения", ""P"1."W" Информация\n"P"2."W" Управление кассой\n"P"3."W" Управление цветом\n"P"4."W" Управление названием банковского отделения\n"P"5."W" Изменение комиссии переводов\n"P"6."W" Изменение комиссии за оплату недвижимости\n"P"7."W" Изменение комиссии за пользование банкоматами\n"P"8."W" Управление банкоматами\n"P"9."W" Статистика\n"P"10."W" Продать банковское отделение", "Выбрать", "Отмена");
									}
									else if(PI[playerid][bizz_work] == businessid && PI[playerid][bizz_status] == 2) {
										return D(playerid, D_BIZZ_BO_ZAM, DSL, "Меню банковского отделения", ""P"1."W" Информация\n"P"2."W" Сотрудники\n"P"3."W" Статистика", "Выбрать", "Отмена");
									}
									else return ErrorMessage(playerid,"Управление банковским отделением доступно только руководителю бизнеса и управляющему");
								}
							}
						}
						return 1;
					}
					case 12: D(playerid, D_RIELTOR, DSL, ""P"Риэлторское агенство", ""P"1."W" Дома\n"P"2."W" Бизнесы", "Выбрать", "Отмена");
					case 13: {
						if(TI[playerid][tGym]) {
							static const f_str[] = ""P"Наименование\t"P"Стоимость\n"P"1."W" Спортивная форма\t"ORANGE"$%d\n"P"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"P"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"P"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"P"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"P"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"P"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"P"-"W" Информация\n"P"-"W" Закончить тренировку";
							new string[sizeof(f_str) +1 + (-2 + 6)];
							format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
							D(playerid,D_BOX_2,DSTH, "Спорт-Зал",string,"Выбрать","Отмена");
						}
						else {
							static const f_str[] = ""P"Наименование\t"P"Стоимость\n"P"1."W" Спортивная форма\t"ORANGE"$%d\n"P"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"P"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"P"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"P"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"P"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"P"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"P"-"W" Информация";
							new string[sizeof(f_str) +1 + (-2 + 6)];
							format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
							D(playerid,D_BOX_2,DSTH, "Спорт-Зал",string,"Выбрать","Отмена");
						}
					}
					case 16: {
						if(PI[playerid][pLevel] < 3) return ErrorMessage(playerid, "Заказ рекламного места доступен с 3 уровня");
						new string[3200] = ""P"Место размещения\t"P"Статус\t"P"Владелец", str[124];
						for(new x; x<MAX_BILLBORDS; x++) {
							if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Свободен\t"GREEN"Отсутствует",BildInfo[x][bPosText]);
							else format(str,124,"\n%s\t"NO"Арендован\t"G"%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
							strcat(string,str);
						}
						return D(playerid,D_BILL_MAIN,DSTH,""P"Заказ билборда",string,"Выбрать","Закрыть");
					}
					case 17: {//sanek228
						if(TI[playerid][tTPpick]) {
							TI[playerid][tTPpick] = false;
							return 1;
						}
						if(!GetPVarInt(playerid,"buy_accses")) {
							SetPVarInt(playerid,"buy_accses",1);
							new Float: pos[4];
							GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
							GetPlayerFacingAngle(playerid, pos[3]);
							SetPVarFloat(playerid, "posx", pos[0]);
							SetPVarFloat(playerid, "posy", pos[1]);
							SetPVarFloat(playerid, "posz", pos[2]);
							SetPVarFloat(playerid, "posa", pos[3]);
							TogglePlayerControllable(playerid, 0);
							SetPlayerPosAC(playerid, 212.5107,-41.5253,1002.0234,playerid + 1,1);
							SetPlayerFacingAngle(playerid, 89.8527);
							SetPlayerCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234);
							SetPlayerCameraLookAt(playerid, 212.5107,-41.5253,1002.0234);
							buyacces(playerid);
						}
					}
				}// ПК ТРАНСПОРТ
			}
		}
		for(new idx = 1; idx <= gEnterCount; idx++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, e_info[idx][e_x], e_info[idx][e_y], e_info[idx][e_z]))
			{
				if(e_info[idx][e_types] == 3)
				{
				    SetPlayerPosAC(playerid, e_info[idx][v_x], e_info[idx][v_y], e_info[idx][v_z], playerid+1, e_info[idx][e_int]);
					SetPlayerFacingAngle(playerid, e_info[idx][v_r]);
					
					SendMes(playerid, COLOR_GREEN, "Вы попали в тир-комнату №%d", playerid+1);
				}
				else
				{
					if(e_info[idx][e_dostup] && (e_info[idx][e_fraction] != PI[playerid][pMember] && !IsACop(playerid)))
						return SendClientMessage(playerid, COLOR_RED, "Нет пропуска");

				    SetPlayerPosAC(playerid, e_info[idx][v_x], e_info[idx][v_y], e_info[idx][v_z], e_info[idx][e_world], e_info[idx][e_int]);
					SetPlayerFacingAngle(playerid, e_info[idx][v_r]);
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 1.0, e_info[idx][v_x], e_info[idx][v_y], e_info[idx][v_z]))
			{
				if(GetPlayerVirtualWorld(playerid) == playerid+1 && e_info[idx][e_types] == 3)
				{
					if(PI[playerid][pJail] > 0 && e_info[idx][e_types] == 1) return SendClientMessage(playerid, COLOR_RED, "Вы еще не отсидели свой срок");

					if((PI[playerid][pHospital] || PI[playerid][pHP] < 99.00) && e_info[idx][e_types] == 2)
						return SendClientMessage(playerid,COLOR_RED,"Вы не прошли курс лечения");

					if(e_info[idx][e_dostup] && e_info[idx][e_fraction] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_RED, "Нет пропуска");

					SetPlayerPosAC(playerid, e_info[idx][e_x], e_info[idx][e_y], e_info[idx][e_z], 0, 0);
					SetPlayerFacingAngle(playerid, e_info[idx][e_r]);
				}
				else
				{
				    if(e_info[idx][e_world] == GetPlayerVirtualWorld(playerid))
					{
					    if(PI[playerid][pJail] > 0 && e_info[idx][e_types] == 1) return SendClientMessage(playerid, COLOR_RED, "Вы еще не отсидели свой срок");

						if((PI[playerid][pHospital] || PI[playerid][pHP] < 99.00) && e_info[idx][e_types] == 2)
							return SendClientMessage(playerid,COLOR_RED,"Вы не прошли курс лечения");

						if(e_info[idx][e_dostup] && e_info[idx][e_fraction] != PI[playerid][pMember]) return SendClientMessage(playerid, COLOR_RED, "Нет пропуска");

						SetPlayerPosAC(playerid, e_info[idx][e_x], e_info[idx][e_y], e_info[idx][e_z], 0, 0);
						SetPlayerFacingAngle(playerid, e_info[idx][e_r]);
					}
				}
			}
		}
		for(new i=0;i<MAX_DROP_GUNS;i++) {
			if(drop_gun[i][dg_object] == -1) continue;
			if(drop_gun[i][dg_time] < 1) continue;
			new Float:x, Float:y, Float:z;
			GetDynamicObjectPos(drop_gun[i][dg_object], x,y,z);
			if(!PlayerToPoint(1.5,playerid,x,y,z)) continue;
			DestroyDynamicObject(drop_gun[i][dg_object]);
			drop_gun[i][dg_object]=-1;
			if(drop_gun[i][dg_text] != Text3D:-1) {
				DestroyDynamic3DTextLabel(drop_gun[i][dg_text]);
				drop_gun[i][dg_text] = Text3D:-1;
			}
			AC_GivePlayerWeapon(playerid ,drop_gun[i][dg_gun],drop_gun[i][dg_ammo]);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0,0);
			MeAction(playerid,"подобрал(а) оружие");
		}
    }
    if(newkeys & KEY_JUMP)
	{
	    if(IsPlayerInRangeOfPoint(playerid,50,318.2726,387.3733,1002.7944) || IsPlayerInRangeOfPoint(playerid,50,318.2456,358.5587,1002.7944)
		|| IsPlayerInRangeOfPoint(playerid,50,315.8510,368.8001,1002.7944) || IsPlayerInRangeOfPoint(playerid,50,320.8408,368.8762,1002.7944)
		|| IsPlayerInRangeOfPoint(playerid,50,315.8475,377.5219,1002.7944) || IsPlayerInRangeOfPoint(playerid,50,320.8640,377.4568,1002.7944)) ClearAnimations(playerid);
	}
	if(newkeys & KEY_JUMP && newkeys & KEY_SPRINT) {
	    if(!IsPlayerInAnyVehicle(playerid)) {
			new index = GetPlayerAnimationIndex(playerid);
			if(index == 1224 || index == 1247 || index == 1257 || index == 1249 || index == 1196 || index == 1249) {
				if(!TI[playerid][tCuffed] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					if(GetPVarInt(playerid,"anti_sbiv_time") < unix && !TI[playerid][tTazer] && !TI[playerid][tCuffedTime] && GetPVarInt(playerid,"Animation") == 0 && !PI[playerid][pDonateBh]) {
						new keys,ud,lr;
						GetPlayerKeys(playerid,keys,ud,lr);
						if(ud != 0 || lr != 0) ClearAnimations(playerid);
					}
				}
			}
		}
	}
 	if(PRESSED(KEY_NO)) {
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 131072) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
		else {
			if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) {
				new id = TI[playerid][tDiceID];
				TI[playerid][tDiceMoney] = 0;
				TI[playerid][tDiceClosed] = TI[id][tDiceClosed] = false;
				new string[128];
				format(string,sizeof(string),"Вы отказались играть в кости с %s",player_name[id]);
				SendOk(playerid, string);

				format(string,sizeof(string),"%s отказался играть с вами в кости",player_name[playerid]);
				SendOk(id, string);
				if(TI[id][tDiceIDs] == playerid) TI[playerid][tDiceID] = TI[id][tDiceIDs] = INVALID_PLAYER_ID;
				else TI[playerid][tDiceID] = INVALID_PLAYER_ID;
			}
			else if(GetPVarInt(playerid,"race_offer")) {
				new string[128];
				format(string,sizeof(string),"Вы отказались от участия в уличных гонках с %s",player_name[GetPVarInt(playerid,"race_offer")-1]);
				SendOk(playerid, string);

				format(string,sizeof(string),"%s отказался от участия в уличных гонках",player_name[playerid]);
				SendOk(GetPVarInt(playerid,"race_offer")-1, string);
			}
			else if(GetPVarInt(playerid,"lices")) {
				SendOk(playerid,"Вы отказались от просмотра лицензий");
				SendOk(GetPVarInt(playerid,"lices")-1,"Игрок отказался от просмотра лицензий");
				DeletePVar(playerid,"lices");
			}
			else if(GetPVarInt(playerid,"skillss")) {
				SendOk(playerid,"Вы отказались от просмотра навыков владения оружием");
				SendOk(GetPVarInt(playerid,"skillss")-1,"Игрок отказался от просмотра ваших навыков владения оружием");
				DeletePVar(playerid,"skillss");
			}
			else if(GetPVarInt(playerid,"wbook")) {
				SendOk(playerid,"Вы отказались от просмотра трудовой книжки");
				SendOk(GetPVarInt(playerid,"wbook")-1,"Игрок отказался от просмотра вашей трудовой книжки");
				DeletePVar(playerid,"wbook");
			}
			else if(GetPVarInt(playerid,"uds")) {
				SendOk(playerid,"Вы отказались от просмотра удостоверения");
				SendOk(GetPVarInt(playerid,"uds")-1,"Игрок отказался от просмотра удостоверения");
				DeletePVar(playerid,"uds");
			}
			else if(GetPVarInt(playerid,"udjur")) {
				SendOk(playerid,"Вы отказались от просмотра удостоверения журналиста");
				SendOk(GetPVarInt(playerid,"udjur")-1,"Игрок отказался от просмотра удостоверения журналиста");
				DeletePVar(playerid,"udjur");
			}
			else if(GetPVarInt(playerid,"pass")) {
				SendOk(playerid,"Вы отказались от просмотра паспорта");
				SendOk(GetPVarInt(playerid,"pass")-1,"Игрок отказался от просмотра паспорта");
				DeletePVar(playerid,"pass");
			}
			else if(GetPVarInt(playerid,"fpass")) {
				SendOk(playerid,"Вы отказались от просмотра паспорта");
				SendOk(GetPVarInt(playerid,"fpass")-1,"Игрок отказался от просмотра паспорта");
				DeletePVar(playerid,"fpass");
			}
			else if(GetPVarInt(playerid,"medcard")) {
				SendOk(playerid,"Вы отказались от просмотра мед.карты");
				SendOk(GetPVarInt(playerid,"medcard")-1,"Игрок отказался от просмотра мед.карты");
				DeletePVar(playerid,"medcard");
			}
			else if(GetPVarInt(playerid,"taxi_id")) {
				SendOk(playerid, "Вы отказались от вступления в таксопарк");
				DeletePVar(playerid,"taxi_id");
			}
			else if(GetPVarInt(playerid,"tk_id")) {
				SendOk(playerid, "Вы отказались от вступления в транспортную компанию");
				DeletePVar(playerid,"tk_id");
			}
			else if(HealOffer[playerid] != INVALID_PLAYER_ID) {
				SendOk(playerid, "Вы отказались от лечения");
				SendOk(HealOffer[playerid], "Игрок отказался от лечения");
				HealOffer[playerid] = INVALID_PLAYER_ID;
			}
			else if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid) {
				new offer = GetPVarInt(playerid,"repairoffer");
				if(GetPVarInt(offer,"repairoffee") == playerid) {
					SetPVarInt(playerid,"repairoffee",-1);
					SetPVarInt(playerid,"repairoffer",-1);
					DeletePVar(playerid,"repairprice");
					DeletePVar(offer,"repairoffee");
					new string[128];
					format(string, sizeof(string), "Вы отказались от починки транспорта игроком %s", player_name[offer]);
					SendOk(playerid, string);
					format(string, sizeof(string), "%s отказался от починки транспорта", player_name[playerid]);
					SendOk(offer, string);
				}
			}
			else if(GetPVarInt(playerid, "invstat") == playerid) {
				SendOk(playerid,"Вы отказались от вступления в организацию");
				SendOk(GetPVarInt(playerid, "invinv"),"Игрок отказался от вступления в организацию");
				DeletePVar(playerid, "invinv");
				DeletePVar(playerid, "invskin");
				SetPVarInt(playerid, "invstat",-1);
			}
			else if(GetPVarInt(playerid,"kiss")) {
				SendOk(playerid,"Вы отказались от поцелуя");
				SendOk(GetPVarInt(playerid,"kiss")-1,"Игрок отказался от поцелуя");
				DeletePVar(playerid,"kiss");
			}
			if(GetPVarInt(playerid,"hi")) {
				SendOk(playerid,"Вы отказались от рукопожатия");
				SendOk(GetPVarInt(playerid,"hi")-1,"Игрок отказался от рукопожатия");
				DeletePVar(playerid,"hi");
			}
			if(GetPVarInt(playerid,"family_invite")) {
				SendOk(playerid,"Вы отказались от предложения вступить в семью");
				SendOk(GetPVarInt(playerid,"family_invite") - 1,"Игрок отказался от предложения вступить в Вашу семью");
				DeletePVar(GetPVarInt(playerid,"family_invite") - 1,"family_invite");
				DeletePVar(playerid,"family_invite");
			}
			else if(GetPVarInt(playerid, "drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid) {
				new offer = GetPVarInt(playerid,"drugoffer");
				if(GetPVarInt(offer,"drugoffee") == playerid) {
					DeletePVar(playerid,"drugoffee");
					DeletePVar(playerid,"drugoffer");
					DeletePVar(playerid,"drugprice");
					DeletePVar(offer,"drugoffee");

					new string[128];
					format(string, sizeof(string), "Вы отказались от покупки наркотиков у игрока %s", player_name[offer]);
					SendOk(playerid, string);
					format(string, sizeof(string), "%s отказался от покупки наркотиков", player_name[playerid]);
					SendOk(offer, string);
				}
			}
			else if(GetPVarInt(playerid, "gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid) {
				new offer = GetPVarInt(playerid,"gunoffer");
				if(GetPVarInt(offer,"gunoffee") == playerid) {
					DeletePVar(playerid,"gunoffee");
					DeletePVar(playerid,"gunoffer");
					DeletePVar(playerid,"gunprice");
					DeletePVar(offer,"gunoffee");

					new string[128];
					format(string, sizeof(string), "Вы отказались от покупки оружия у игрока %s", player_name[offer]);
					SendOk(playerid, string);
					format(string, sizeof(string), "%s отказался от покупки оружия", player_name[playerid]);
					SendOk(offer, string);
				}
			}
			else if(GetPVarInt(playerid, "ZoneOffer")) {
				SendOk(GetPVarInt(playerid,"ZoneOffer")-1, "Игрок отказался от покупки территории");
				SendOk(playerid, "Вы отказались от покупки территории");
				DeletePVar(playerid,"ZoneOffer");
				DeletePVar(playerid,"ZonePrice");
				DeletePVar(playerid,"sellzone");
			}
			else if(GetPVarInt(playerid, "sim_id_sell")) {
				SendOk(GetPVarInt(playerid, "sim_id_sell")-1, "Игрок отказался от покупки SIM-карты");
				SendOk(playerid, "Вы отказались от покупки SIM-карты");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
			else if(GetPVarInt(playerid,"bizzProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
				new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
				SendOk(playerid,"Вы отказались от покупки бизнеса");
				SendOk(id_prodaet,"Игрок отказался от покупки Вашего бизнеса");
				DeletePVar(playerid,"bizzProdaet");
				DeletePVar(playerid,"bizzCena");
				DeletePVar(id_pokupaet,"bizzPokupaet");
			}
			else if(GetPVarInt(playerid,"hotelProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
				new id_pokupaet = GetPVarInt(id_prodaet,"hotelPokupaet")-1;
				SendOk(playerid,"Вы отказались от покупки отеля");
				SendOk(id_prodaet,"Игрок отказался от покупки Вашего отеля");
				DeletePVar(playerid,"hotelProdaet");
				DeletePVar(playerid,"hotelCena");
				DeletePVar(id_pokupaet,"hotelPokupaet");
			}
			else if(GetPVarInt(playerid,"airProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
				new id_pokupaet = GetPVarInt(id_prodaet,"airPokupaet")-1;
				SendOk(playerid,"Вы отказались от покупки аэропорта");
				SendOk(id_prodaet,"Игрок отказался от покупки Вашего аэропорта");
				DeletePVar(playerid,"airProdaet");
				DeletePVar(playerid,"airCena");
				DeletePVar(id_pokupaet,"airPokupaet");
			}
			else if(GetPVarInt(playerid,"houseSeller")) {
				new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
				SendOk(playerid,"Вы отказались от покупки дома");
				SendOk(id_prodaet,"Игрок отказался от покупки Вашего дома");
				DeletePVar(playerid,"houseSeller");
				DeletePVar(playerid,"housePrices");
				DeletePVar(id_prodaet,"houseBuyer");
			}
			else if(GetPVarInt(playerid,"carProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
				SendOk(playerid,"Вы отказались от предложения на обмен транспортом");
				SendOk(id_prodaet,"Игрок отказался от предложения на обмен транспортом");
				change_carcancel(playerid,id_prodaet);
				return 1;
			}
			else if(TI[playerid][tTazers][2] != -1) {
				new target = TI[playerid][tTazers][2];
				if(IsPlayerStream(2.0, playerid, target)) pc_cmd_cuff(playerid, IntToStr(target));
				TI[target][tTazers][2] = -1;
				TI[playerid][tTazers][2] = -1;
			}
		}
	}
	if(PRESSED(KEY_YES)) {
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 65536) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
		else {
			if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) {
				new id = TI[playerid][tDiceID];
				new ids = TI[id][tDiceIDs];
				new money = TI[playerid][tDiceMoney];
				TI[playerid][tDiceID] = TI[id][tDiceIDs] = INVALID_PLAYER_ID;
				TI[playerid][tDiceMoney] = 0;
				TI[playerid][tDiceClosed] = TI[id][tDiceClosed] = false;
				if(ids != playerid) return ErrorMessage(playerid,"Игрок покинул игру");
				if(!TI[id][tLogin]) return ErrorMessage(playerid,"Игрок который хотел с Вами играть оффлайн");
				else if(PI[playerid][pCash] < money) {
					ErrorMessage(playerid,"У Вас недостаточно средств");
					SendOk(id,"У игрока недостаточно средств");
					return 1;
				}
				else if(PI[id][pCash] < money) {
					SendOk(playerid,"У игрока недостаточно средств");
					ErrorMessage(id,"У Вас недостаточно средств");
					return 1;
				}
				else if(!PlayerToPoint(2.5,playerid,318.2156,387.3739,1002.7944) &&
						!PlayerToPoint(2.5,playerid,318.2076,358.3362,1002.7944)) {
					ErrorMessage(playerid, "Вы не у стола для игры 1x1");
					SendOk(id,"Игрок отклонил Ваше предложение");
					return 1;
				}
				new dice = random(6)+1;
				new dice1 = random(6)+1;
				new string[128];
				format(string,sizeof(string), "%s и %s бросили кости. Результат: {CC9900}%i:%i",player_name[id],player_name[playerid],dice,dice1);
				ProxDetector(15.0,playerid, string,0x44b2ffff);
				SetTimerEx("DiceOff",5000, false, "i",playerid);
				SetTimerEx("DiceOff",5000, false, "i",id);
				TI[id][tKubik] = 1;
				TI[playerid][tKubik] = 1;
				TI[playerid][tDiceTime] = TI[id][tDiceTime] = unix+10;
				format(string,sizeof(string), "Выпало: %i",dice1);
				SetPlayerChatBubble(playerid,string,COLOR_ORANGE,30.0,10000);
				format(string,sizeof(string), "Выпало: %i",dice);
				SetPlayerChatBubble(id,string,TEAM_GROVE_COLOR,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				ApplyAnimation(id,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				SetPlayerAttachedObject(id, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				if(dice > dice1) {
					GiveMoney(id,money,"выиграл в dice");
					GiveMoney(playerid,-money,"проиграл в dice");
					format(string, sizeof(string), "Поздравляем, Вы выиграли! Выигрыш составляет: "GREEN"$%d",money);
					SendClientMessage(id, CGOLD, string);
					SendOk(playerid, "К сожалению, Вы проиграли");
				}
				if(dice < dice1) {
					GiveMoney(playerid,money,"выиграл в dice");
					GiveMoney(id,-money,"проиграл в dice");
					format(string, sizeof(string), "Поздравляем, Вы выиграли! Выигрыш составляет: "GREEN"$%d",money);
					SendClientMessage(playerid, CGOLD, string);
					SendOk(id, "К сожалению, Вы проиграли");
				}
				else if(dice == dice1) {
					SendOk(playerid, "Игра закончилась в ничью");
					SendOk(id, "Игра закончилась в ничью");
				}
			}
			else if(GetPVarInt(playerid,"race_offer")) {
				new i = GetPVarInt(playerid,"race_offer")-1;
				if(PI[i][pCash] < TI[playerid][tRaceMoney] || PI[playerid][pCash] < TI[playerid][tRaceMoney]) {
					ErrorMessage(playerid,"У Игрока/Вас недостаточно средств");
					DeletePVar(playerid,"race_offer");
					return 1;
				}
				if(!ProxDetectorS(5.0, playerid, i)) {
					ErrorMessage(playerid,"Игрок слишком далеко от Вас");
					DeletePVar(playerid,"race_offer");
					return 1;
				}
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
					ErrorMessage(playerid,"Игрок/Вы не за рулём Т/С");
					DeletePVar(playerid,"race_offer");
					return 1;
				}
				new rand = random(sizeof(race_checkpoint));
				TI[playerid][tRaceCP] = CreateDynamicCP(race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2], 2.0,0,0,playerid);
				EnableGPSForPlayer(playerid,race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2]);
				TI[i][tRaceCP] = CreateDynamicCP(race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2], 2.0,0,0,i);
				EnableGPSForPlayer(i,race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2]);
				SendClientMessage(playerid, COLOR_YELLOW, "Внимание! Место финиша уличных гонок отмечено в Вашем GPS");
				SendClientMessage(i, COLOR_YELLOW, "Внимание! Место финиша уличных гонок отмечено в Вашем GPS");
				TI[playerid][tRaceID] = i;
				TI[i][tRaceID] = playerid;
				GiveMoney(playerid,-TI[playerid][tRaceMoney],"взнос уличные гонки");
				GiveMoney(i,-TI[playerid][tRaceMoney],"взнос уличные гонки");
				DeletePVar(playerid,"race_offer");
				return 1;
			}
			else if(GetPVarInt(playerid,"lices")) {
				new acter = GetPVarInt(playerid,"lices")-1;
				DeletePVar(playerid,"lices");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowLic(acter,playerid);
						new string[128];
						format(string,sizeof(string),"показал(а) свои лицензии %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"skillss")) {
				new acter = GetPVarInt(playerid,"skillss")-1;
				DeletePVar(playerid,"skillss");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowSkill(acter,playerid);
						new string[128];
						format(string,sizeof(string),"показал(а) навыки владения оружием %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"wbook")) {
				new acter = GetPVarInt(playerid,"wbook")-1;
				DeletePVar(playerid,"wbook");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowWBook(acter,playerid);
						new string[128];
						format(string,sizeof(string),"показал(а) трудовую книжку %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"uds")) {
				new acter = GetPVarInt(playerid,"uds")-1;
				DeletePVar(playerid,"uds");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowUd(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) удостоверение и показал(а) его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"udjur")) {
				new acter = GetPVarInt(playerid,"udjur")-1;
				DeletePVar(playerid,"udjur");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowUdJur(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) удостоверение журналиста и показал(а) его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"pass")) {
				new acter = GetPVarInt(playerid,"pass")-1;
				DeletePVar(playerid,"pass");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowPass(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) паспорт и показал(а) его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"fpass")) {
				new acter = GetPVarInt(playerid,"fpass")-1;
				DeletePVar(playerid,"fpass");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowFPass(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) паспорт и показал его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"medcard")) {
				new acter = GetPVarInt(playerid,"medcard")-1;
				DeletePVar(playerid,"medcard");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowMedcard(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) мед.карту и показал ее %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"taxi_id")) {
				new bizz = GetPVarInt(playerid,"taxi_id");
				DeletePVar(playerid,"taxi_id");
				if(PI[playerid][bizz_work] == 2 || PI[playerid][bizz_work] == 3 || PI[playerid][bizz_work] == 4) return ErrorMessage(playerid, "Вы уже работаете в таксопарке");
				if(PI[playerid][bizz_work] == 5 || PI[playerid][bizz_work] == 6 || PI[playerid][bizz_work] == 7) return ErrorMessage(playerid, "Вы работаете в транспортной компании");
				if(info_funcmembers(bizz) >= 50) return ErrorMessage(playerid,"В таксопарке нет свободных мест");
				PI[playerid][bizz_work] = bizz;
				UpdatePlayerData(playerid,"bizz_work",PI[playerid][bizz_work]);
				PI[playerid][bizz_status] = 1;
				UpdatePlayerData(playerid,"bizz_status",1);
				PI[playerid][bizz_cash] = 0;
				UpdatePlayerData(playerid,"bizz_cash",0);
				new string[100];
				format(string,sizeof(string),"[TAXI] %s вступил в таксопарк",player_name[playerid]);
				BizzMSG(bizz,COLOR_YELLOW,string);
			}
			else if(GetPVarInt(playerid,"tk_id")) {
				new bizz = GetPVarInt(playerid,"tk_id");
				DeletePVar(playerid,"tk_id");
				if(PI[playerid][bizz_work] == 2 || PI[playerid][bizz_work] == 3 || PI[playerid][bizz_work] == 4) return ErrorMessage(playerid, "Вы работаете в таксопарке");
				if(PI[playerid][bizz_work] == 5 || PI[playerid][bizz_work] == 6 || PI[playerid][bizz_work] == 7) return ErrorMessage(playerid, "Вы уже работаете в транспортной компании");
				if(info_funcmembers(bizz) >= 50) return ErrorMessage(playerid,"В транспортной компании нет свободных мест");
				PI[playerid][bizz_work] = bizz;
				UpdatePlayerData(playerid,"bizz_work",PI[playerid][bizz_work]);
				PI[playerid][bizz_status] = 1;
				UpdatePlayerData(playerid,"bizz_status",1);
				PI[playerid][bizz_cash] = 0;
				UpdatePlayerData(playerid,"bizz_cash",0);
				PI[playerid][bizz_lcash] = 0;
				UpdatePlayerData(playerid,"bizz_lcash",0);

				PI[playerid][pSettings][3] = 1;
				save_settings(playerid);

				new string[100];
				format(string,sizeof(string),"[TRUCK] %s вступил в транспортную компанию",player_name[playerid]);
				BizzMSG(bizz,COLOR_YELLOW,string);
			}
			else if(GetPVarInt(playerid,"selectpoint") == 2) {
				new driverid = GetPVarInt(playerid,"taxidriver");
				if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PI[driverid][bizz_work]) {
					SetPVarInt(playerid,"selectpoint",0);
					SetPVarInt(playerid,"taxidriver",0);
					RemovePlayerMapIcon(playerid,iconTaxi);
				}
				new Float:x, Float:y;
				x = GetPVarFloat(playerid,"selectpointX");
				y = GetPVarFloat(playerid,"selectpointY");
				SetPlayerMapIcon(driverid,iconTaxi,x,y,0.0,0,COLOR_YELLOW,1);
				SetPVarFloat(playerid,"selectpointX",x);
				SetPVarFloat(playerid,"selectpointY",y);
				SetPVarInt(playerid,"selectpoint",0);
				SetPVarInt(driverid,"selectpoint",0);
				SendOk(playerid,"Данные о месте назначения отправлены таксисту");
				SendUse(driverid,"Пассажир установил "YELLOW"метку "G"на карте. Чтобы убрать метку введите: "W"/untaxi");
			}
			else if(GetPVarInt(playerid,"family_invite")) {
				new fam = GetPVarInt(playerid,"family_invite")-1;
				DeletePVar(playerid,"family_invite");
				if(PI[fam][pFamily]) {
					new string[128];
					PI[playerid][pFamily] = PI[fam][pFamily];
					UpdatePlayerData(playerid,"family",PI[playerid][pFamily]);
					PI[playerid][pFamRank] = 1;
					UpdatePlayerData(playerid,"pFamRank",1);

					format(string,sizeof(string),"[FAMILY] "W"%s{%s} вступил в семью",player_name[playerid],FamilyColor[gFamily[PI[playerid][pFamily]-1][famColor]]);
					FamMSG(PI[playerid][pFamily],string);
				}
			}
			else if(GetPVarInt(playerid,"fight_offer")) {
				new i = GetPVarInt(playerid,"fight_offer")-1;
				if(PI[i][pCash] < GetPVarInt(playerid,"fight_price") || PI[playerid][pCash] < GetPVarInt(playerid,"fight_price")) {
					ErrorMessage(playerid,"У Игрока/Вас недостаточно средств");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				if(!ProxDetectorS(5.0, playerid, i)) {
					ErrorMessage(playerid,"Игрок слишком далеко от Вас");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				if(!TI[playerid][tGym] || !TI[i][tGym]) {
					ErrorMessage(playerid,"Вы/Игрок не в спортзале");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				if(TOTALSTYLELIST > 4) {
					ErrorMessage(playerid,"Очередь заполнена");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				RingInfo[TOTALSTYLELIST][rgPlayer][0] = playerid;
				RingInfo[TOTALSTYLELIST][rgPlayer][1] = i;
				RingInfo[TOTALSTYLELIST][rgState] = 1;
				RingInfo[TOTALSTYLELIST][rgTime] = 60;
				RingInfo[TOTALSTYLELIST][rgPrice] = GetPVarInt(playerid,"fight_price");
				TOTALSTYLELIST++;
				new string[156];
				format(string,sizeof(string),""G"Вы записались на бой. Противник "W"%s."G" Ставка: "ORANGE"$%i",player_name[i],GetPVarInt(playerid,"fight_price"));
				SendOk(playerid,string);

				SendClientMessage(playerid,CGOLD,"При появлении таймера на экране, займите место на ринге");
			
				format(string,sizeof(string),""W"%s"G" принял ваше предложение. Ставка: "ORANGE"$%i",player_name[playerid], GetPVarInt(playerid,"fight_price"));
				SendOk(i,string);
				SendClientMessage(i,CGOLD,"При появлении таймера на экране, займите место на ринге");
				DeletePVar(playerid,"fight_offer");
				DeletePVar(playerid,"fight_price");
				return 1;
			}
			else if(GetPVarInt(playerid, "invstat") == playerid) {
				new pltot = GetPVarInt(playerid, "invinv");
				new skinid = GetPVarInt(playerid, "invskin");
				DeletePVar(playerid, "invinv");
				DeletePVar(playerid, "invskin");
				SetPVarInt(playerid, "invstat",-1);
				if(!IsPlayerConnected(pltot)) return ErrorMessage(playerid,"Игрок пригласивший Вас в организациию оффлайн");
				new fractionid = PI[pltot][pMember];
				PI[playerid][pMember] = fractionid;
				PI[playerid][pRank] = 1;
				PI[playerid][pFracSkin] = skinid;
				PI[playerid][pJob] = 0;
				start_work[playerid] = 1;
				PI[playerid][pSpawn] = 2;
				SaveAccount(playerid);
				PI[playerid][pfWarn] = 0;
				UpdatePlayerData(playerid,"fwarn",0);
				PI[playerid][pFMute] = 0;
				UpdatePlayerData(playerid,"pFMute",PI[playerid][pFMute]);
				SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				new string[128];
				format(string,sizeof(string),""P"%s"G" был принят в Вашу организацию",player_name[playerid]);
				SendUse(pltot,string);
				format(string,sizeof(string),"Вы были приняты во фракцию "W"%s",FI[PI[playerid][pMember]][fName]);
				SendOk(playerid,string);
				A_SetPlayerSkin(playerid, PI[playerid][pFracSkin]);
				add_datefrac(playerid);

				FracLog(LOGS_INVITE,player_name[pltot],player_name[playerid],"invite");
			}
			else if(HealOffer[playerid] != INVALID_PLAYER_ID) {
				if(!IsPlayerConnected(HealOffer[playerid])) return ErrorMessage(playerid,"Игрок предложивший Вам лечение оффлайн"),HealOffer[playerid] = INVALID_PLAYER_ID;
				if(PI[playerid][pCash] < HealPrice[playerid]) {
					ErrorMessage(playerid, "У Вас нет столько денег");
					static const f_str[] = "У %s недостаточно денежных средств для лечения";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
					format(string,sizeof(string),f_str,player_name[playerid]);
					SendOk(HealOffer[playerid],string);
					HealOffer[playerid] = INVALID_PLAYER_ID;
					return 1;
				}
				SetPlayerHealth(playerid, 100.0);

				static const f_str_1[] = "Доктор "P"%s"G" вылечил вас за "ORANGE"$%d";
				new string_1[sizeof(f_str_1) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

				format(string_1,sizeof(string_1),f_str_1,player_name[HealOffer[playerid]],HealPrice[playerid]);
				SendUse(playerid,string_1);

				GiveMoney(playerid, -HealPrice[playerid], "оплата за лечение медику");
				
				new price = floatround(HealPrice[playerid]*0.2);
				FI[fWHITEHOUSE][fBank] += floatround(HealPrice[playerid] - price);
				UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

				static const f_str_2[] = "Вы вылечили "P"%s"G" за "ORANGE"$%d";
				new string_2[sizeof(f_str_2) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

				format(string_2,sizeof(string_2),f_str_2,player_name[playerid],price);
				SendUse(HealOffer[playerid],string_2);
				GiveMoney(HealOffer[playerid], price,"оплата за лечение игрока");

				PI[HealOffer[playerid]][pMedHeal] ++;

				HealOffer[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			else if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid) {
				new offer = GetPVarInt(playerid,"gunoffer");
				new price = GetPVarInt(playerid,"gunprice");
				new needammo = GetPVarInt(playerid,"gunammo");
				new weaponid = GetPVarInt(playerid,"gunid");
				if(GetPVarInt(offer,"gunoffee") == playerid) {
					DeletePVar(playerid,"gunoffee");
					DeletePVar(playerid,"gunoffer");
					DeletePVar(playerid,"gunammo");
					DeletePVar(playerid,"gunprice");
					DeletePVar(playerid,"gunid");
					DeletePVar(offer,"gunoffee");
					new slot = GetWeaponSlot(weaponid);
					new weapon,ammo;
					GetPlayerWeaponData(offer,slot,weapon,ammo);
					if(weapon != weaponid || ammo < needammo) return ErrorMessage(playerid,"У продавца закончилось оружие");
					new remain = ammo - needammo;
					if(remain > ammo) return 1;
					if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");
					AC_GivePlayerWeapon(playerid,weaponid,needammo);
					//AC_SetPlayerAmmo(offer,weaponid,remain);
					AC_GivePlayerWeapon(offer,weaponid,-needammo);
					SetPlayerArmedWeapon(offer,0);

					GiveMoney(offer, price, "продажа оружия");
					GiveMoney(playerid, -price, "покупка оружия");

					if(QuestProgress[offer][7] < 10 && AcceptQuest[offer][7] != 0) QuestProgress[offer][7] ++,save_quest(offer,7);
					if(QuestProgress[offer][7] == 10 && AcceptQuest[offer][7] != 0) {
						D(offer,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно продали 10ед оружия. Данное задание можно завершить и забрать за него награду","Закрыть","");
						NextStapQI(offer,7);
					}
					new mes[128];
					format(mes,sizeof(mes),"продал(а) оружие %s",player_name[playerid]);
					MeAction(offer,mes);
				}
			}
			else if(GetPVarInt(playerid,"drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid) {
				new offer = GetPVarInt(playerid,"drugoffer");
				new price = GetPVarInt(playerid,"drugprice");
				new value = GetPVarInt(playerid,"drugvalue");
				if(GetPVarInt(offer,"drugoffee") == playerid) {
					DeletePVar(playerid,"drugoffee");
					DeletePVar(playerid,"drugoffer");
					DeletePVar(playerid,"drugvalue");
					DeletePVar(playerid,"drugprice");
					DeletePVar(offer,"drugoffee");
					if(PI[playerid][pDrugs]+value > vip_status[PI[playerid][pVips]][vip_drugs]) return ErrorMessage(playerid, "Вы не можете хранить так много наркотиков");
					if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid, "У Вас недостаточно средств");

					GiveMoney(offer, price, "продажа нарко");
					GiveMoney(playerid, -price, "покупка нарко");
					PI[playerid][pDrugs] += value;
					PI[offer][pDrugs] -= value;
					UpdatePlayerData(playerid,"pDrugs",PI[playerid][pDrugs]);
					UpdatePlayerData(offer,"pDrugs",PI[offer][pDrugs]);

					new string[137];
					format(string,sizeof(string),""P"%s"G" передал Вам "W"%d"G" грамм наркотиков за "ORANGE"$%d",player_name[offer],value,price);
					SendUse(playerid,string);
					format(string,sizeof(string),"Вы передали "P"%d"G" грамм наркотиков игроку "W"%s"G" за "ORANGE"$%d",value,player_name[playerid],price);
					SendUse(offer,string);
					ApplyAnimation(playerid,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
					ApplyAnimation(offer,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
				}
			}
			else if(GetPVarInt(playerid,"ZoneOffer")) {
				new price = GetPVarInt(playerid,"ZonePrice");
				new offter = GetPVarInt(playerid,"ZoneOffer")-1;
				new sell = GetPVarInt(playerid,"sellzone");
				DeletePVar(playerid,"ZoneOffer");
				DeletePVar(playerid,"ZonePrice");
				DeletePVar(playerid,"sellzone");
				if(!IsPlayerConnected(offter)) return ErrorMessage(playerid,"Игрок предложивший Вам купить территорию оффлайн");
				if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid, "У Вас не достаточно денег");
				IDGZ[playerid] = GetIDGZ(playerid);
				if(IDGZ[playerid] != -1) {
					new i = IDGZ[playerid];
					if(GZInfo[i][gFrakVlad] != sell) return ErrorMessage(playerid, "Вам не предлагали купить эту территорию");
					VladGzone[GZInfo[i][gFrakVlad]]--;
					VladGzone[PI[playerid][pMember]]++;
					GZInfo[i][gFrakVlad] = PI[playerid][pMember];
					GangZoneStopFlashForAll(GZInfo[i][gID]);
					GangZoneHideForAll(GZInfo[i][gID]);
					GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
					SaveGZ(i);
				}

				new string[137];
				format(string,sizeof(string),""P"%s"G" купил у Вас территорию за "ORANGE"$%d",player_name[playerid],price);
				SendUse(offter,string);
				format(string,sizeof(string),"Вы купили территорию у "P"%s"G" за "ORANGE"$%d",player_name[offter], price);
				SendUse(playerid,string);
				GiveMoney(offter,price, "продажа территории");
				GiveMoney(playerid, -price, "покупка территории");
			}
			else if(GetPVarInt(playerid,"hi")) {
				new hi = GetPVarInt(playerid,"hi")-1;
				if(!IsPlayerConnected(hi)) return ErrorMessage(playerid,"Игрок который хотел пожать Вам руку оффлайн");
				new Float:angle,string[128];
				GetPlayerFacingAngle(hi, angle);
				SetPlayerFacingAngle(playerid, angle + 180);
				ApplyAnimation(hi,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
				ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
				format(string, sizeof(string), "пожал(а) руку %s'у", player_name[playerid]);
				MeAction(hi,string, 5.0);
				DeletePVar(playerid,"hi");
				if(PI[hi][pDisease][0] && !PI[playerid][pDDisease]) {
					new rand = random(7);
					if(rand > 2) return 1;
					PI[playerid][pDisease][0] = 1;
					UpdatePlayerData(playerid,"pDisease_0",1);
					SendOk(playerid,"Игрок, которому Вы пожали руку был болен");
					SendOk(playerid,"Советуем Вам обратиться к медикам в любой из пунктов МЧС");
					SendOk(playerid,"(( Внимание! Состояние Вашей жизни (HP) будет падать значительно быстрее ))");
				}
			}
			else if(GetPVarInt(playerid,"kiss")) {
				new kiss = GetPVarInt(playerid,"kiss")-1;
				if(!IsPlayerConnected(kiss)) return ErrorMessage(playerid,"Игрок который хотел поцеловать Вас оффлайн");
				if(!IsPlayerStream(4.0, playerid, kiss)) return ErrorMessage(playerid, "Игрок далеко от Вас");
				else {
					SetPosInFrontOfPlayer(kiss,playerid,1);
					new Float:a;
					GetPlayerFacingAngle(kiss,a);
					SetPlayerFacingAngle(playerid,180 + a);
					ApplyAnimation(kiss,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
					ApplyAnimation(playerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,0);
					DeletePVar(playerid,"kiss");
					SetPVarInt(kiss, "pc_cmd_kiss", unix+15);
					SetPVarInt(playerid, "pc_cmd_kiss", unix+15);
					if(PI[kiss][pDisease][0] && !PI[playerid][pDDisease]) {
						new rand = random(7);
						if(rand > 2) return 1;
						PI[playerid][pDisease][0] = 1;
						UpdatePlayerData(playerid,"pDisease_0",1);
						SendOk(playerid,"Игрок, с которым Вы поцеловались был болен");
						SendOk(playerid,"Советуем Вам обратиться к медикам в любой из пунктов МЧС");
						SendOk(playerid,"(( Внимание! Состояние Вашей жизни (HP) будет падать значительно быстрее ))");
					}
				}
			}
			else if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid) {
				new offer = GetPVarInt(playerid,"repairoffer");
				new price = GetPVarInt(playerid,"repairprice");
				if(GetPVarInt(offer,"repairoffee") == playerid) {
					SetPVarInt(playerid,"repairoffee",-1);
					SetPVarInt(playerid,"repairoffer",-1);
					DeletePVar(playerid,"repairprice");
					DeletePVar(offer,"repairoffee");
					new vehicleid = GetPlayerVehicleID(playerid);
					if(!vehicleid) return ErrorMessage(playerid,"Вы должны быть в автомобиле");
					if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно денег");

					GiveMoney(offer, price, "механик отремонтировал");
					GiveMoney(playerid, -price, "отремонтировался у механика");
					SetVehicleHealth(vehicleid,1000.0);
					RepairVehicle(vehicleid);
					new string[137];
					format(string,sizeof(string),"Механик "P"%s"G" отремонтировал Вам транспорт за "ORANGE"$%d",player_name[offer],price);
					SendUse(playerid,string);
					format(string,sizeof(string),"Вы отремонтировали транспорт игроку "P"%s"G" за "ORANGE"$%d",player_name[playerid],price);
					SendUse(offer,string);
				}
			}
			else if(GetPVarInt(playerid, "sim_id_sell")) {
				new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
				new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
				new string[120];
				format(string,sizeof(string),"Вы действительно хотите приобрели SIM-карту у "P"%s "G"за "ORANGE"$%i?", player_name[sell_sim_id],sell_sim_sum);
				D(playerid, D_SELL_SIM, DSM, ""P"Покупка SIM-карты", string, "Да", "Нет");
			}
			if(GetPVarInt(playerid,"bizzProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
				new id = PI[id_prodaet][pBusiness];
				new status[20];
				new atext[24];
				switch(gBusiness[id][bizzMafia]) {
					case fRM: atext = "Русская Мафия";
					case fLCN: atext = "Итальянская мафия";
					case fYAKUZA: atext = "Японская мафия";
					default: atext = "---";
				}
				new type = gBusiness[id][bizzType] - 1;
				if(gBusiness[id][bizzStatus]) strcat(status,"{7FB151}Работает");
				else strcat(status,"{FF4242}Не работает");

				new day;
				day = (gBusiness[id][bizzDay]-gettime())/86400;

				static const f_str[] = ""W"Название: "O"%s\n\n\
										"W"Тип: "O"%s\n\
										"W"Гос.стоимость: "GREEN"$%d\n\
										"W"Цена товара: "GREEN"$%d\n\n\
										"W"Продуктов: "O"%d ед.\n\
										"W"Продуктов заказано: "O"%d"W" ед. ["GREEN"$%d"W" за ед]\n\n\
										"W"Касса: "GREEN"$%d"W"\n\
										"W"Заработано за сутки: "GREEN"$%d"W"\n\n\
										"W"Посетителей: "O"%d\n\
										"W"Аренда бизнеса: "O"%iд\n\
										"W"Крыша: "O"%s\n\
										"W"Состояние: "O"%s\n\n\
										"W"Вы действительно хотите купить данный бизнес за "GREEN"$%d?";
				new string[700];
				format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
					gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzProduct],gBusiness[id][bizzProdOrder],gBusiness[id][bizzProdOrderPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay]
					,gBusiness[id][bizzVisitors],day,atext,status,GetPVarInt(playerid,"bizzCena"));

				D(playerid,D_BIZZ_BUY_2,DSM, ""P"Покупка бизнеса",string,"Купить","Отмена");
			}
			if(GetPVarInt(playerid,"hotelProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
				new id = PI[id_prodaet][pHotel]-1;

				new day;
				day = (gHotels[id][hotelDay]-gettime())/86400;

				static const f_str[] = ""W"Название: "O"%s\n\n\
										"W"Гос.стоимость: "GREEN"$%d\n\
										"W"Касса: "GREEN"$%d"W"\n\
										"W"Заработано за сутки: "GREEN"$%d"W"\n\
										"W"Посетителей: "O"%d\n\
										"W"Аренда отеля: "O"%iд\n\n\
										"W"Вы действительно хотите купить данный отель за "GREEN"$%d";
				new string[700];
				format(string,sizeof(string),f_str,gHotels[id][hotelName],gHotels[id][hotelPrice],gHotels[id][hotelBank],gHotels[id][hotelBankDay],gHotels[id][hotelVisitors],
					day,GetPVarInt(playerid,"hotelCena"));

				D(playerid,D_HOTEL_BUY_2,DSM, ""P"Покупка отеля",string,"Купить","Отмена");
			}
			if(GetPVarInt(playerid,"airProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
				new id = PI[id_prodaet][pAirport]-1;

				new day;
				day = (gAirs[id][airDay]-gettime())/86400;

				static const f_str[] = ""W"Название: "O"%s\n\n\
										"W"Гос.стоимость: "GREEN"$%d\n\
										"W"Касса: "GREEN"$%d"W"\n\
										"W"Аренда аэропорта: "O"%iд\n\n\
										"W"Вы действительно хотите купить данный аэропорт за "GREEN"$%d";
				new string[500];
				format(string,sizeof(string),f_str,gAirs[id][airName],gAirs[id][airPrice],gAirs[id][airBank],
					day,GetPVarInt(playerid,"airCena"));

				D(playerid,D_AIRPORT_BUY_2,DSM, ""P"Покупка аэропорта",string,"Купить","Отмена");
			}
			if(GetPVarInt(playerid,"houseSeller")) {
				new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
				new id = PI[id_prodaet][pHouse];

				new classname[20],status[12];
				switch(gHouses[id][houseClass]) {
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
				}					
				new cnt;
				for(new i;i<3;i++) {
					if(gHouses[id][houseHabitID][i]) cnt++;
				}					
				if(gHouses[id][houseClose]) strcat(status,"Закрыт");
				else strcat(status,"Открыт");
				new improve[96];
				if(gHouses[id][houseImprove][0]) strcat(improve,"Автоматические двери\n");
				if(gHouses[id][houseImprove][1]) strcat(improve,"Снижение субсидий\n");
				if(gHouses[id][houseImprove][2]) strcat(improve,"Гараж\n");
				if(gHouses[id][houseImprove][0] == 0 && gHouses[id][houseImprove][1] == 0 && gHouses[id][houseImprove][2] == 0) strcat(improve,"Отсутствуют");

				new day;
				day = (gHouses[id][houseDay]-gettime())/86400;
				static const f_str[] = ""W"Номер дома: \t\t"O"%d\n\
										"W"Класс: \t\t\t"O"%s\n\
										"W"К-во жильцов: \t"O"%d/%d\n\
										"W"Аренда дома: \t\t"O"%iд\n\
										"W"Статус: \t\t"O"%s\n\
										"W"Гос. цена: \t\t"O"%d\n\n\
										"P"Улучшения:\n\
										"GREEN"%s\n\n\
										"W"Вы действительно хотите купить данный дом за "GREEN"$%d"W"?";
				new string[512];
				format(string,sizeof(string),f_str,id+1,classname,cnt,gHouses[id][houseClass],day,status,gHouses[id][housePrice],improve,GetPVarInt(playerid,"housePrices"));
				D(playerid,D_HOUSE_BUY_2,DSM, ""P"Покупка дома",string,"Купить","Отмена");
			}
			if(GetPVarInt(playerid,"carProdaet") && GetPVarInt(playerid,"sellcar_type")) {
				new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
				new car_cena = GetPVarInt(playerid,"carCena");
				new car1 = GetPVarInt(id_prodaet,"numbercar1")-1;
				new car2 = GetPVarInt(id_prodaet,"numbercar2")-1;

				new improve[256];
				if(gPlayerCars[id_prodaet][carVehcom_1][car1]) strcat(improve,"\t\t\t[Спойлер]\n");
				if(gPlayerCars[id_prodaet][carVehcom_2][car1]) strcat(improve,"\t\t\t[Капот]\n");
				if(gPlayerCars[id_prodaet][carVehcom_3][car1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
				if(gPlayerCars[id_prodaet][carVehcom_4][car1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
				if(gPlayerCars[id_prodaet][carVehcom_5][car1]) strcat(improve,"\t\t\t[Фары]\n");
				if(gPlayerCars[id_prodaet][carVehcom_6][car1]) strcat(improve,"\t\t\t[Нитро]\n");
				if(gPlayerCars[id_prodaet][carVehcom_7][car1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
				if(gPlayerCars[id_prodaet][carVehcom_8][car1]) strcat(improve,"\t\t\t[Диски]\n");
				if(gPlayerCars[id_prodaet][carVehcom_9][car1]) strcat(improve,"\t\t\t[Стерео]\n");
				if(gPlayerCars[id_prodaet][carVehcom_10][car1]) strcat(improve,"\t\t\t[Гидравлика]\n");
				if(gPlayerCars[id_prodaet][carVehcom_11][car1]) strcat(improve,"\t\t\t[Передний бампер]\n");
				if(gPlayerCars[id_prodaet][carVehcom_12][car1]) strcat(improve,"\t\t\t[Задний бампер]\n");

				new improve2[256];
				if(gPlayerCars[playerid][carVehcom_1][car2]) strcat(improve2,"\t\t\t[Спойлер]\n");
				if(gPlayerCars[playerid][carVehcom_2][car2]) strcat(improve2,"\t\t\t[Капот]\n");
				if(gPlayerCars[playerid][carVehcom_3][car2]) strcat(improve2,"\t\t\t[Воздухозаборник]\n");
				if(gPlayerCars[playerid][carVehcom_4][car2]) strcat(improve2,"\t\t\t[Боковая юбка]\n");
				if(gPlayerCars[playerid][carVehcom_5][car2]) strcat(improve2,"\t\t\t[Фары]\n");
				if(gPlayerCars[playerid][carVehcom_6][car2]) strcat(improve2,"\t\t\t[Нитро]\n");
				if(gPlayerCars[playerid][carVehcom_7][car2]) strcat(improve2,"\t\t\t[Выхлопная труба]\n");
				if(gPlayerCars[playerid][carVehcom_8][car2]) strcat(improve2,"\t\t\t[Диски]\n");
				if(gPlayerCars[playerid][carVehcom_9][car2]) strcat(improve2,"\t\t\t[Стерео]\n");
				if(gPlayerCars[playerid][carVehcom_10][car2]) strcat(improve2,"\t\t\t[Гидравлика]\n");
				if(gPlayerCars[playerid][carVehcom_11][car2]) strcat(improve2,"\t\t\t[Передний бампер]\n");
				if(gPlayerCars[playerid][carVehcom_12][car2]) strcat(improve2,"\t\t\t[Задний бампер]\n");

				new model1 = gPlayerCars[playerid][carModel][car2]-400;
				new model2 = gPlayerCars[id_prodaet][carModel][car1]-400;
				new classname[12];
				new classname2[12];
				GetCarClassName(gTransport[model1][trClass],classname);
				GetCarClassName(gTransport[model2][trClass],classname2);
				static const f_str[] = "\t\t\t"ORANGE"==== ИНФОРМАЦИЯ ====\n\n\
										"YELLOW"\t\t\tВаше авто:\n\n\
										"W"Марка авто: \t\t"P"%s\n\
										"W"Класс: \t\t\t"P"%s\n\
										"W"Пробег: \t\t"P"%.0fкм\n\
										"W"Бензобак: \t\t"P"%dл\n\
										"W"Расход: \t\t"P"%dл/100км\n\
										"W"Тюнинг:\n\
										"GREEN"%s\n\n\
										"YELLOW"\t\t\tОбмен на авто:\n\n\
										"W"Марка авто: \t\t"P"%s\n\
										"W"Класс: \t\t\t"P"%s\n\
										"W"Пробег: \t\t"P"%.0fкм\n\
										"W"Бензобак: \t\t"P"%dл\n\
										"W"Расход: \t\t"P"%dл/100км\n\
										"W"Тюнинг:\n\
										"GREEN"%s\n\n\
										"NO"Вы действительно хотите совершить обмен с Вашей доплатой:"ORANGE" $%d?";
				new string[900];
				format(string,sizeof(string),f_str,gTransport[model1][trName],classname,gPlayerCars[id_prodaet][carDrived][car1],gTransport[model1][trTank],gTransport[model1][trConsumption],improve2,
					gTransport[model2][trName],classname2,gPlayerCars[id_prodaet][carDrived][car2],gTransport[model2][trTank],gTransport[model2][trConsumption],improve,car_cena);
				D(playerid,D_CAR_BUY,DSM, ""P"Обмен авто",string,"Да","Отмена");
			}
		}
	}
	if(PRESSED(KEY_SECONDARY_ATTACK)) {
		if(Casino_Flag[playerid][select_casino_table] == -1) {
			for(new c = 0; c < MAX_TABLES_DICE; c++) {
				if(IsPlayerInDynamicArea(playerid, InfoDice[c][dice_area])) {
					if(PI[playerid][pAdmin] >= 1) return ErrorMessage(playerid,"РЕПОРТЫ ЮЗАЙТЕ");
					if(InfoDice[c][dice_game_start] == true) return ErrorMessage(playerid,"Данная партия уже играется");
					if(Casino_Flag[playerid][casino_crup] == 1) {
						if(InfoDice[c][dice_crup]!=INVALID_PLAYER_ID) return ErrorMessage(playerid,"Тут уже есть крупье");
						InfoDice[c][dice_crup] = playerid;
					}
					else {
						new bool:check_played=false;
						for(new i = 0;i<5;i++) {
							if(InfoDice[c][dice_gamer][i] == INVALID_PLAYER_ID) {
								InfoDice[c][dice_gamer][i] = playerid;
								check_played = true;
								break;
							}
						}
						if(!check_played) return ErrorMessage(playerid,"Максимум игроков: (5)");
					}
					Casino_Flag[playerid][select_casino_table] = c;
					ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
					UpdateTextCasino(c);
					break;
				}
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) {
	    new carid = GetPlayerVehicleID(playerid);
	    new model = (GetVehicleModel(carid)-400);
	    if(GetPlayerState(playerid) == 2) {
	        if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid) && GetEngineStat(carid))  {
		        if(PRESSED(KEY_NUM4)) {
				    DestroyDynamicObject(LightsObject[carid][0]);
		            DestroyDynamicObject(LightsObject[carid][1]);
		            LightsObject[carid][0] = -1;
		            LightsObject[carid][1] = -1;
				    if(Signal[carid] == 1) {
		                SignalTick[carid][0] = 0;
		                SignalTick[carid][1] = -1;
		                Signal[carid] = 0;
		                SetPlayerChatBubble(playerid, "выключил(а) левый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    else {
				     //   LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		               // LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				        GetVehicleZAngle(carid, SignalAngle[carid]);
				        SignalTick[carid][0] = 0;
				        SignalTick[carid][1] = -1;
				    	Signal[carid] = 1;
						SetPlayerChatBubble(playerid, "включил(а) левый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    return true;
				}
				else if(PRESSED(KEY_NUM6)) {
				    DestroyDynamicObject(LightsObject[carid][0]);
		            DestroyDynamicObject(LightsObject[carid][1]);
		            LightsObject[carid][0] = -1;
		            LightsObject[carid][1] = -1;
				    if(Signal[carid] == 2) {
		                SignalTick[carid][0] = 0;
		                SignalTick[carid][1] = -1;
		                Signal[carid] = 0;
		                SetPlayerChatBubble(playerid, "выключил(а) правый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    else {
					//	LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		            //    LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				        GetVehicleZAngle(carid, SignalAngle[carid]);
				        SignalTick[carid][0] = 0;
				        SignalTick[carid][1] = -1;
				    	Signal[carid] = 2;
						SetPlayerChatBubble(playerid, "включил(а) правый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    return true;
				}
			}
		}
		if((newkeys & 1 && !(oldkeys & 1)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) pc_cmd_engine(playerid,"");
	}
	time_newkeys = GetTickCount() - tickcount1;
	if(time_newkeys > time_newkeys_max) time_newkeys_max = time_newkeys;
	return true;
}
public OnVehicleStreamIn(vehicleid, forplayerid) {
	if(!IsValidVehicle(vehicleid)) return 1;
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][veX], VehicleInfo[vehicleid][veY], VehicleInfo[vehicleid][veZ]);
	GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][veA]);
	return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid) {
    return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source) {
	return false;
}
stock CarLic(carid) {
	switch (GetVehicleModel(carid)) {
		case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
		case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
		case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}
CB: PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
CB: PlayerToKvadratGhetto(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x*2 && xxp >= min_x*2) && (yyp <= max_y*2 && yyp >= min_y*2)) return true;
	return false;
}
stock GetNearestTrunckFuel(playerid) {
	for(new i = 1;i<gBusinessCount;i++) {
		if(gBusiness[i][bizzType] != 7) continue;
		if(PlayerToPoint(10.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) return i;
	}
	return -1;
}
stock GetNearestAirport(playerid)
{
	for(new i = 0;i<gAirCount;i++)
	{
		if(PlayerToPoint(3.0,playerid,gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ])) return i;
	}
	return -1;
}
stock GetNearestTrunckEat(playerid) {
	for(new i = 1;i<gBusinessCount;i++) {
		if(gBusiness[i][bizzType] != 1) continue;
		if(PlayerToPoint(10.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) return i;
	}
	return -1;
}
stock GetNearestVehicle(playerid) {
	new Float:X,Float:Y,Float:Z;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		GetVehiclePos(i,X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return i;
	}
	return -1;
}
public OnVehicleDeath(vehicleid, killerid) {
	if(killerid != INVALID_PLAYER_ID && !TI[killerid][tLogin]) return false;
	if(GetArendCarID(vehicleid) != -1) {
	    new playerid = ArendInfo[GetArendCarID(vehicleid)][aPlayerID];
	    ArendInfo[GetArendCarID(vehicleid)][aPlayerID] = INVALID_PLAYER_ID;
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid-400)][trTank];
	    if(IsPlayerConnected(playerid) && TI[playerid][tArendKey] == GetArendCarID(vehicleid)) {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "Транспорт, который вы арендовали, был уничтожен. Контракт расторгнут");
	        TI[playerid][tArendKey] = -1;
	    }
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		for(new i; i < 20; i ++) {
			if(FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i] != vehicleid) continue;
			update_bfunc(3,VehicleInfo[vehicleid][vBizz],VehicleInfo[vehicleid][vColor],i);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
	 	if(vehicleid == house_car[i][0]) VehicleInfo[house_car[i][0]][vFuel] = gPlayerCars[i][carFuel][0],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][0],0);
		if(vehicleid == house_car[i][1]) VehicleInfo[house_car[i][1]][vFuel] = gPlayerCars[i][carFuel][1],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][1],1);
		if(vehicleid == PlayerTrailer[i]) {
			A_DestroyVehicle(PlayerTrailer[i]);
			PlayerTrailer[i] = INVALID_VEHICLE_ID;
			if(gPlayerProdText[i] != Text3D:-1) {
				DestroyDynamic3DTextLabel(gPlayerProdText[i]);
				gPlayerProdText[i] = Text3D:-1;
			}
			if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);
			DeletePVar(i,"count_prod2");
			DeletePVar(i,"count_prod");
			DeletePVar(i,"attach_trailer");
		}
		if(vehicleid == rob_veh[i]) {
			leave_robhouse(i);
		}
		if(vehicleid == TK_Trailer[i]) {
			A_DestroyVehicle(TK_Trailer[i]);
			TK_Trailer[i] = INVALID_VEHICLE_ID;
			TI[i][tTrucker][3] = 0;
			TI[i][tTrucker][2] = 0;
			TI[i][tTrucker][1] = 0;
			TI[i][tTrucker][0] = 0;
			SendOk(i,"Груз удален");
		}
		if(theftIDveh[i][0] == vehicleid && thefttime[i] !=0){ //угон
			SendOk(i,"Вы провалили задание, ваш навык угона понижен.");
			DestroyDynamicArea(theftarea[i][0]);
			DisablePlayerCheckpoint(i);
			DestroyDynamicCP(theftCheck[i][0]);
			A_DestroyVehicle(theftIDveh[i][0]);
			theftIDveh[i][0] = INVALID_VEHICLE_ID;
			if(theftveh[i][0] != INVALID_VEHICLE_ID) {
				A_DestroyVehicle(theftveh[i][0]); 
				theftveh[i][0] = INVALID_VEHICLE_ID;
			}
			if(theftplayer[theftIDveh[i][1]][0] != 1010) theftplayer[theftIDveh[i][1]][0] = 1010;
			theftplayer[i][1] = 0;
			theftCheck[i][1] = 0;
			PlayerTextDrawHide(i, theft_PTD[i][0]);
			thefttime[i] = 0;
			if(PI[i][ptheftExp] == 0) {
				if(PI[i][ptheftSkill] != 0) PI[i][ptheftSkill]--, UpdatePlayerData(i,"theftSkill",PI[i][ptheftSkill]);
				PI[i][ptheftExp] = TheftSkillMax[PI[i][ptheftSkill]]-1, UpdatePlayerData(i,"theftExp",PI[i][ptheftExp]);
			} 
			else {
				if(PI[i][ptheftExp] != 0) PI[i][ptheftExp]--, UpdatePlayerData(i,"theftExp",PI[i][ptheftExp]);
			}
		}
	}
	SetVehicleToRespawn(vehicleid);
	return true;
}
public OnVehicleSpawn(vehicleid) {
	VehicleInfo[vehicleid][vPlayer] = -1;
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);

	if(VehicleInfo[vehicleid][vTeam] == fFBI || VehicleInfo[vehicleid][vTeam] == fWHITEHOUSE) SetVehicleHealth(vehicleid,3000.0);
	if(GetArendCarID(vehicleid) != -1) {
	    new playerid = ArendInfo[GetArendCarID(vehicleid)][aPlayerID];
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid-400)][trTank];
	    ArendInfo[GetArendCarID(vehicleid)][aPlayerID] = INVALID_PLAYER_ID;
	    if(IsPlayerConnected(playerid) && TI[playerid][tArendKey] == GetArendCarID(vehicleid)) {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "Транспорт, который вы арендовали, был заспавнен. Контракт расторгнут");
			TI[playerid][tArendKey] = -1;
	    }
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_ADMIN) {
		A_DestroyVehicle(vehicleid);
	}
	if(VehicleInfo[vehicleid][vJob] > 0 || VehicleInfo[vehicleid][vTeam] > 0) {
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
		VehicleInfo[vehicleid][vPlayer] = -1;
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		for(new i; i < 20; i ++) {
			if(FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i] != vehicleid) continue;
			update_bfunc(3,VehicleInfo[vehicleid][vBizz],VehicleInfo[vehicleid][vColor],i);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
	 	if(vehicleid == house_car[i][0]) VehicleInfo[house_car[i][0]][vFuel] = gPlayerCars[i][carFuel][0],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][0],0);
		if(vehicleid == house_car[i][1]) VehicleInfo[house_car[i][1]][vFuel] = gPlayerCars[i][carFuel][1],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][1],1);
		if(vehicleid == PlayerTrailer[i]) {
			A_DestroyVehicle(PlayerTrailer[i]);
			PlayerTrailer[i] = INVALID_VEHICLE_ID;
			if(gPlayerProdText[i] != Text3D:-1) {
				DestroyDynamic3DTextLabel(gPlayerProdText[i]);
				gPlayerProdText[i] = Text3D:-1;
			}
			if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);
			DeletePVar(i,"count_prod2");
			DeletePVar(i,"count_prod");
			DeletePVar(i,"attach_trailer");
		}
		if(vehicleid == rob_veh[i]) {
			leave_robhouse(i);
		}
		if(vehicleid == TK_Trailer[i]) {
			A_DestroyVehicle(TK_Trailer[i]);
			TK_Trailer[i] = INVALID_VEHICLE_ID;
			TI[i][tTrucker][3] = 0;
			TI[i][tTrucker][2] = 0;
			TI[i][tTrucker][1] = 0;
			TI[i][tTrucker][0] = 0;
			SendOk(i,"Груз удален");
		}
	}
	if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading] || VG[vehicleid][vgRobHouse]) {
		VG[vehicleid][vgLoading] = false;
		VG[vehicleid][vgUnloading] = false;
		VG[vehicleid][vgRobHouse] = false;

		if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabel(VG[vehicleid][vgText]);

		DestroyDynamicPickup(VG[vehicleid][vgPickup]);
	    VG[vehicleid][vgPickup] = 0;
	    DestroyDynamicArea(VG[vehicleid][vgArea]);
	    VG[vehicleid][vgArea] = 0;

		if(vehicleid == 482) VG[vehicleid][vgAmount][0] = 0;
	}
 	if(VehicleInfo[vehicleid][vJob] > 0) {
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
		    if(TI[i][tArendaCar] == vehicleid) {
				TI[i][tArendaCar] = -1;
				DisablePlayerRaceCheckpoint(i);
				if(GetPVarInt(i,"veh_id_cleaner") == vehicleid) EndGazon(i);
				if(GetPVarInt(i,"clear_id") == vehicleid) EndClear(i);
				if(GetPVarInt(i,"bus_id") == vehicleid) EndBus(i);
				if(GetPVarInt(i,"track_id") == vehicleid) EndTrack(i);
				if(GetPVarInt(i,"prod_vehicle_id") == vehicleid) EndProd(i);
				if(GetPVarInt(i,"mehjob") == vehicleid) EndMeh(i);
				if(GetPVarInt(i,"eatjob") == vehicleid) EndEat(i);
		    	break;
			}
		}
	}
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1) {
		if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
		if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
		LightsObject[vehicleid][0] = -1;
		LightsObject[vehicleid][1] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][veX], VehicleInfo[vehicleid][veY], VehicleInfo[vehicleid][veZ]);
	GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][veA]);
	return true;
}
CB: DelGun(playerid) {
	for(new i=0;i<10;i++) {
		GunPlayer[playerid][i][0]=0;
		GunPlayer[playerid][i][1]=0;
	}
	ResetPlayerWeapons(playerid);
	return true;
}
stock GetPlayerVehicleSpeed(playerid) {
    if(!IsPlayerInAnyVehicle(playerid)) return true;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 100.3);
}
stock Float:fmax(Float:v1, Float:v2) {
	return v1 > v2?v1:v2;
}
stock Float:fmin(Float:v1, Float:v2) {
	return v1 < v2?v1:v2;
}
stock Float:jfloatsub(Float:value1, Float:value2) {
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}
stock Float:PointToPoint3D(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2) return floatsqroot(floatadd(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)),floatpower(z2-z1,2)));
CB: update_speedometer(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z, Float:A, Float:X2, Float:Y2, Float:Z2;
	X2 = VehicleInfo[vehicleid][veX];
	Y2 = VehicleInfo[vehicleid][veY];
	Z2 = VehicleInfo[vehicleid][veZ];
	new Float:_coord[3];
	GetVehicleVelocity(vehicleid,_coord[0],_coord[1],_coord[2]);	
	new Float:v_speed = floatsqroot(floatpower(floatabs(_coord[0]), 2.0) + floatpower(floatabs(_coord[1]), 2.0) + floatpower(floatabs(_coord[2]), 2.0)) * 100.3;
	GetVehicleRotation(vehicleid, _coord[0],_coord[1],_coord[2]);
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(VehicleInfo[vehicleid][vPerfStatus]) {
		new key_pressed, ud, lr;
	    GetPlayerKeys(playerid,key_pressed, ud, lr); 
		if(VehicleInfo[vehicleid][vEngineBoost] > 0) {
			if(key_pressed == KEY_SPRINT && v_speed > 5 && v_speed < MaxSpeedCar[GetVehicleModel(vehicleid) - 400] && engine == 1) {
				SetVehicleSpeed(vehicleid, v_speed + VehicleInfo[vehicleid][vEngineBoost]); 
				VehicleInfo[vehicleid][vzAngle] = _coord[2];
			}
		}	
		if(VehicleInfo[vehicleid][vBrakeBoost] > 0) {
			if(key_pressed == KEY_JUMP && v_speed > 30 && (_coord[2] - VehicleInfo[vehicleid][vzAngle] < 0.3 && _coord[2] - VehicleInfo[vehicleid][vzAngle] > - 0.3)) {
				SetVehicleSpeed(vehicleid, v_speed - VehicleInfo[vehicleid][vBrakeBoost] * 2);
				VehicleInfo[vehicleid][vzAngle] = _coord[2];
			}
		}
		VehicleInfo[vehicleid][vzAngle] = _coord[2];
	}
	if(TI[playerid][tAFK] <= 3) {
		new Float:Health, stext[20];
		GetVehicleHealth(vehicleid,Health);

		new Float:veloc;
		GetVehiclePos(vehicleid, X, Y, Z);
		veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		new model = GetVehicleModel(vehicleid)-400;
		if(engine == 1) {
			VehicleInfo[vehicleid][vDrived] += veloc;
			if(!IsABike(GetVehicleModel(vehicleid)) && !IsAVelik(GetVehicleModel(vehicleid))) VehicleInfo[vehicleid][vFuel] -= (veloc/100)*gTransport[model][trConsumption];	

			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			if(GetVehicleModel(vehicleid) != 462 && VehicleInfo[vehicleid][vFuel] <= 0.0) {
				VehicleInfo[vehicleid][vFuel] = 0.0;
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			}
			if(vehicleid == house_car[playerid][0]) gPlayerCars[playerid][carFuel][0] = VehicleInfo[vehicleid][vFuel];
			else if(vehicleid == house_car[playerid][1]) gPlayerCars[playerid][carFuel][1] = VehicleInfo[vehicleid][vFuel];

			if(Health <= 320.0) {
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			}
			GetVehicleZAngle(vehicleid, A);
			if(Signal[vehicleid]) {
				new Float:LAngle = jfloatsub(A, SignalAngle[vehicleid]);
				if(SignalTick[vehicleid][1] >= 0) {
					SignalTick[vehicleid][1] --;
					if(!SignalTick[vehicleid][1]) {
						Signal[vehicleid] = 0;
						if(LightsObject[vehicleid][0] != -1) {
							DestroyDynamicObject(LightsObject[vehicleid][0]);
							LightsObject[vehicleid][0] = -1;
						}
						if(LightsObject[vehicleid][1] != -1) {
							DestroyDynamicObject(LightsObject[vehicleid][1]);
							LightsObject[vehicleid][1] = -1;
						}
					}
				}
				else if(LAngle >= 50.0) SignalTick[vehicleid][1] = 20;
				SignalTick[vehicleid][0] ++;
				if(SignalTick[vehicleid][0] > 17) SignalTick[vehicleid][0] = 0;
			}
		}
		VehicleInfo[vehicleid][veX] = X;
		VehicleInfo[vehicleid][veY] = Y;
		VehicleInfo[vehicleid][veZ] = Z;

		new Float: Xx, Float: Yy, Float: Zz;
		GetVehicleVelocity(vehicleid, Xx, Yy, Zz);
		new Float:speedcar = _GetVehicleSpeed(vehicleid);
		if(TI[playerid][tSLimit]) {
			if(speedcar > TI[playerid][tSLimit]) {
				new Float:dif = TI[playerid][tSLimit] / speedcar;
				SetVehicleVelocity(vehicleid,Xx*dif,Yy*dif,Zz*dif);
				speedcar = TI[playerid][tSLimit];
			}
		}
		format(stext,sizeof(stext),"%.0f",speedcar);
		PlayerTextDrawSetString(playerid, speedometr[playerid][6], stext);
		
		if(VehicleInfo[vehicleid][vFuel] <= 10) format(stext, sizeof(stext), "~r~%.0fL", VehicleInfo[vehicleid][vFuel]);
		else format(stext, sizeof(stext), "%.0fL", VehicleInfo[vehicleid][vFuel]);
		PlayerTextDrawSetString(playerid, speedometr[playerid][8], stext);

		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);

		format(stext,sizeof(stext),"%.0f",VehicleInfo[vehicleid][vDrived]);
		PlayerTextDrawSetString(playerid, speedometr[playerid][7], stext);

		if(Health > 400) {
			format(stext,sizeof(stext),"%d",floatround(Health));
			PlayerTextDrawSetString(playerid, speedometr[playerid][5], stext);
		}
		else {
			format(stext,sizeof(stext),"%d",floatround(Health));
			PlayerTextDrawSetString(playerid, speedometr[playerid][5], stext);
		}
		if(TI[playerid][tTaxiGoing]) {
			new passid = TI[playerid][tTaxiPass];
			new tarif;
			switch(GetVehicleModel(vehicleid)) {
				case 426,438: tarif = FuncBizz[PI[playerid][bizz_work]][funcbTarif][0];
				case 540,550: tarif = FuncBizz[PI[playerid][bizz_work]][funcbTarif][1];
				case 483: tarif = FuncBizz[PI[playerid][bizz_work]][funcbTarif][2];
				case 560,580: tarif = FuncBizz[PI[playerid][bizz_work]][funcbTarif][3];
			}

			new sum1 = floatround((VehicleInfo[vehicleid][vDrived] - TI[playerid][tTaxiStart])*tarif);
			new percent = floatround(sum1/100*FuncBizz[PI[playerid][bizz_work]][funcbPercent]);	
			new sum2 = sum1-percent;
			if(GetPlayerState(passid) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(passid) == vehicleid) {				
				static const f_str[] = "~w~TARIF: ~g~$%d/km~n~~w~Count: ~y~$%d";
				new mes[sizeof(f_str) +1 + (-2 + 5) + (-2 + 6)];
				format(mes,sizeof(mes),f_str,tarif,sum1);
				GameTextForPlayer(playerid,mes,1000,1);
				GameTextForPlayer(passid,mes,1000,1);
				if(GetPlayerMoneyEx(passid)-20 <= sum1) {
					if(GetPlayerMoneyEx(passid) - sum1 >= 0 && sum1 > 0) {
						bizz_pay(PI[playerid][bizz_work],percent);
						PI[playerid][bizz_cash] += percent;
						UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
						GiveMoney(passid,-sum1,"taxipay");		
						GiveMoney(playerid,sum2,"taxipay");
						printf("%d",sum1);
						printf("%d",sum2);
					}	
					ErrorMessage(passid,"Недостаточно денег для проезда на такси");
					SendOk(playerid,"Пассажир оплачивающий такси вышел, счётчик отключен");
					TI[playerid][tTaxiGoing] = false;
					TI[playerid][tTaxiPass] = INVALID_PLAYER_ID;
					RemovePlayerFromVehicleAC(passid);
					passid = INVALID_PLAYER_ID;
				}
			}
			else {
				if(sum1 > 0) {
					bizz_pay(PI[playerid][bizz_work],percent);
					PI[playerid][bizz_cash] += percent;
					UpdatePlayerData(playerid,"bizz_cash",PI[playerid][bizz_cash]);
					GiveMoney(passid,-sum1,"taxipay");		
					GiveMoney(playerid,sum2,"taxipay");		
				}
				SendOk(playerid,"Пассажир оплачивающий такси вышел, счётчик отключен");
				RemovePlayerMapIcon(playerid,iconTaxi);
				RemovePlayerMapIcon(passid,iconTaxi);
				TI[playerid][tTaxiGoing] = false;
				TI[playerid][tTaxiPass] = INVALID_PLAYER_ID;
				TI[playerid][tTaxiStart] = 0.0;	
				passid = INVALID_PLAYER_ID;	
			}	
		}
	}
	return 1;
}
new WebSites[][] ={".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".рф", ".by", ".biz", ".su", ".info"};
stock CheckString(const str[]) {
	for(new i = 0;i<sizeof(WebSites);i++) if(strfind(str,WebSites[i],true) != -1) return true;
	return false;
}
new delimiters[]={'.', ' ', ',', '*', '/', ';', '\\', '|'};
stock IsIP(const str[]) {
    for(new cIP[4]; cIP[0] != strlen(str)+1; cIP[0]++) {
        switch(str[cIP[0]]) {
            case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
            case '0' .. '9': cIP[1]++;
        }
        if(cIP[1] ==1){ cIP[2] = cIP[0];}
        if(cIP[1] >= 8) {
            new strx[16]; new l[4][4];
            cIP[3] = cIP[0]+8; strmid(strx,str,cIP[2],cIP[3],16);
            for(new i =strlen(strx);i>8;i--) {
                switch(strx[i]) {
                    case '0' .. '9','.', ' ', ':', ',', '*', '/', ';', '\\', '|': continue;
                    default: strx[i] =0;
                }
            }
            for(new i =0;i<sizeof(delimiters);i++) {
                split(strx,l,delimiters[i]);
                if(strlen(l[0]) == 1 ||strlen(l[1]) == 1 ||strlen(l[2]) == 1 ||strlen(l[3]) == 1){ continue; }
                if(strlen(l[0]) >3 ||strlen(l[1]) >3 ||strlen(l[2]) >3){ continue; }
                else { return true; }
            }
        }
    }
    return false;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid) {
	new Float:vehicleHealth;
	GetVehicleHealth(vehicleid, vehicleHealth);
	if(VehicleInfo[vehicleid][vJob] == 1) {
		if(GetPVarInt(playerid,"bus_id") == vehicleid) SetPVarFloat(playerid,"bus_damage", vehicleHealth);
	}
	return true;
}
Convert(number) {
	new hours = 0, mins = 0, secs = 0, str[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(str, 100, "%i:%02d:%02d", hours, mins, secs);
	else format(str, 100, "%i:%02d", mins, secs);
	return str;
}
stock ConvertsCmdTime(number) {
	new hours = 0, mins = 0, string[30];
	hours = number / 3600;
	mins = (number - hours * 3600) / 60;
	format(string, 30, "%d ч %d мин", hours, mins);
	return string;
}
stock GetPlayerID(const str[]) {
	foreach(new i:Player) {
		if(strcmp(player_name[i], str, true, strlen(str)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock ToDevelopSkills(Slashes,Points) {
	new strign[149];
	new Slash[2] = "|";
	new Point[2] = ".";
	for(new i = 0; i < Slashes; i++) strcat(strign, Slash);
	for(new i = 0; i < Points; i++) strcat(strign, Point);
	return strign;
}
stock SetPlayerSkills(playerid) {
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PI[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PI[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PI[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PI[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PI[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PI[playerid][pGunSkill][5]*10);
	return true;
}
stock ClearTotalGz() {
	TotalGZ[3] = 0;
	TotalGZ[4] = 0;
	TotalGZ[0] = 0;
	TotalGZ[2] = 0;
	TotalGZ[1] = 0;
}
stock IsWheelModel(modelid) {
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++) {
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
stock IsLegalCarNitroIde(carmodel) {
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++) {
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
stock IsLegal_Nos_Vehicle(PlayerID) {
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}
public OnVehicleRespray(playerid, vehicleid, color1, color2) {
    return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid) {
	return 1;
}

new Float:TuningPos[4][6] =
{
	{-1935.9622,244.4556,34.0334,617.5304,-1.9891,1000.5530},
	{-2723.2322,217.8237,4.1901,615.2862,-124.2390,997.6953},
	{1041.4187,-1019.0356,31.7300,617.5305,-1.9890,1000.5520},
	{2644.6572,-2046.0532,13.3756,616.7820,-74.8150,997.7332}
};
stock IsAtTunning(playerid) {
	for(new i; i < sizeof(TuningPos);i ++) {
  		if(IsPlayerInRangeOfPoint(playerid,10,TuningPos[i][0],TuningPos[i][1],TuningPos[i][2])) return true;
	    if(IsPlayerInRangeOfPoint(playerid,10,TuningPos[i][3],TuningPos[i][4],TuningPos[i][5])) return true;
	}
	return false;
}
stock ACC_AddVehicleComponent(vehicleid, componentid) {
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if (!modok) return 0;
	AddVehicleComponent(vehicleid, componentid);
	return 1;
}
stock IsLegalCarMod(vehicleide, componentid) {
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else {
		for(new I=0;I<48;I++) {
			if (legalmods[I][0] == vehicleide) {
				for(new J = 1; J < 22; J++) {
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}
public OnVehicleMod(playerid, vehicleid, componentid) {
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if (!modok) {
		RemoveVehicleComponent(vehicleid,componentid);
		return 0;
	}
	if(IsAtTunning(playerid)) {
	    if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	        RemoveVehicleComponent(vehicleid,componentid);
	        return 0;
	    }
		else {
		    RemoveVehicleComponent(vehicleid, componentid);
		    ErrorMessage(playerid, "Этот транспорт нельзя тюнинговать");
			return 0;
		}
	}
	else {
	    if(GetPlayerState(playerid) == 2) {
			RemoveVehicleComponent(vehicleid, componentid);
			return 0;
		}
	}
	return true;
}
stock PreloadAnimLib(playerid, const animlib[]) return ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 1, 1, 0);
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid) {
	for(new i = 19; i < sizeof(Captcha); i++) {
		if(playertextid == Captcha[i]) {
			new sstring[96];
			GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
			switch(GetPVarInt(playerid, "CaptchaStep")) {
				case 0: format(sstring, sizeof(sstring), "%c", TextArray[i - 19]), strcat(sstring, "---"), SetPVarString(playerid, "CaptchaText", sstring);
				case 1: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 1, 4), strcat(sstring, "--"), SetPVarString(playerid, "CaptchaText", sstring);
				case 2: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 2, 4), strcat(sstring, "-"), SetPVarString(playerid, "CaptchaText", sstring);
				case 3: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 3, 4), strcat(sstring, ""), SetPVarString(playerid, "CaptchaText", sstring);
			}
			SetPVarInt(playerid, "CaptchaStep", GetPVarInt(playerid, "CaptchaStep") + 1);
			PlayerTextDrawSetString(playerid, Captcha[8], sstring);
		}
	}
	if(playertextid == Captcha[5]) {
		DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
		PlayerTextDrawSetString(playerid, Captcha[8], "----");
	}
	else if(playertextid == Captcha[6]) {
		new sstring[96];
		GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
		if(!GetString(PI[playerid][pKeyip], sstring) || !GetPVarInt(playerid, "CaptchaStep")) {
			new playerip[16], data2[64], day, month, year,query[200];
			getdate(day, month, year);
			format(data2, 64, "%d-%d-%d", day, month, year);
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			mysql_format(connects, query, sizeof(query), "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '0')", player_name[playerid], playerip, data2);
			mysql_tquery(connects, query);
			for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
			DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
			Kick(playerid);
			return true;
		}
		else {
			new playerip[16], data2[64],day, month, year,query[200];
			getdate(day, month, year);
			format(data2, 64, "%d-%d-%d", day, month, year);
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			mysql_format(connects, query, sizeof(query), "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '1')", player_name[playerid], playerip, data2);
			mysql_tquery(connects, query);
			for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
			DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
			CancelSelectTextDraw(playerid);
			TogglePlayerControllable(playerid, true);
			load_load(playerid);
			return true;
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid) {
	if(!(_:clickedid ^ 0xFFFF)) {
		if(GetPVarInt(playerid,"TunningSaluna")) {
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid,"TunningSaluna");
			new vehicleid = GetPlayerVehicleID(playerid);
			ChangeVehicleColor(vehicleid,VehicleInfo[vehicleid][vColor][0],VehicleInfo[vehicleid][vColor][1]);
			ChangeVehiclePaintjob(vehicleid,VehicleInfo[vehicleid][vPaintJob]);
			for(new h = 0;h < 20;h++) {
				if(h < 7) PlayerTextDrawHide(playerid,ColorTDPl[playerid][h]);
				TextDrawHideForPlayer(playerid,ColorTD[h]);
			}
		}
		if(GetPVarInt(playerid,"TunningSalun")) {
			CancelSelectTextDraw(playerid);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"TunningSalun");
			for(new h = 0;h < 22;h++) {
				if(h < 6) PlayerTextDrawHide(playerid,CustomTDPl[playerid][h]);
				TextDrawHideForPlayer(playerid,CustomTD[h]);
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			for(new p = 1000;p < 1194;p++) {
			    RemoveVehicleComponent(vehicleid,p);
			}
			LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		}
		if(GetPVarInt(playerid,"select_colortd")) cancel_selectcolor(playerid);
	}
	if(GetPVarInt(playerid,"registrations")) {
	    if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		else if(clickedid == reg_td[9]) SkinSelect(playerid, 0);
		else if(clickedid == reg_td[7]) SkinSelect(playerid, 1);
	    else if(clickedid == reg_td[15]) {
	        for(new x; x < 19; x++) TextDrawHideForPlayer(playerid, reg_td[x]);
			for(new i; i < 3; i++) PlayerTextDrawHide(playerid, reg_tds[playerid][i]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid,"registrations");
		    new year, month, day;
			getdate(year, month, day);
			GetPlayerIp(playerid,PI[playerid][pIpReg],32);
			
			new query[512];
			mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_ACCOUNTS"` (`Name`, `pKey`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`, `pEmail`,`Skin`) VALUES ('%s', MD5('%s'), '%i', '%02i/%02i/%02i', '%s', '%s', '%s', '%i')"
			,player_name[playerid],player_pass[playerid],PI[playerid][pSex],day,month,year,PI[playerid][pIpReg],PI[playerid][pDrug],PI[playerid][pEmail],skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
			mysql_tquery(connects,query,"player_register","i",playerid);
			return 1;
		}
	}
	else if(GetPVarInt(playerid,"ChangingSkin")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			SkinSelect(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			SkinSelect(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	new price;
	    	if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
	    		new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PI[playerid][pVips]][vip_chose]);
				price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
	    	}
	    	else {
		    	if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
					price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
					price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
				}
			    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
			}

			new string[128];
			format(string,sizeof(string),""W"Вы хотите купить эту одежду за "GREEN"$%i?",price);
			D(playerid,D_BUY_SKIN,DSM, ""P"Покупка одежды",string,"Купить","Отмена");
		}
		else if(clickedid == buy_skins[1] || Text:INVALID_TEXT_DRAW) {
			A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			cancel_skin(playerid);
		}
	}
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	if(PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] != 0) {
				D(playerid, D_BUYACS_3, DSM,""P"Ошибка","\n\n"W"У Вас уже имеется вещь в данном слоте!\n"YELLOW"Заменить её?\n\n", "Да", "Нет");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
			}
			else {
				if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
		            AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
		        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		        	buyacces(playerid);
		        	return true;
				}
				if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
					gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
					bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
				}
				SendOk(playerid, "Поздравляем с покупкой Аксесуара.");
				SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > Личные настройки > Аксессуары)");
				GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
				PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записываем ид обьекта в слот
				PI[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
				save_slotitem(playerid);
				save_slotitem_use(playerid);
				accs_close(playerid);
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				buyacces(playerid);
			}
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PI[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				new price;
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PI[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;

				new price;
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PI[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return ErrorMessage(playerid, "Вы не выбрали цвет транспорта");

		new price;
		if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(RepaintValue[playerid]/100*vip_status[PI[playerid][pVips]][vip_tune]);
			price = (RepaintValue[playerid]-seller);
		}
		else {
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
		    else price = RepaintValue[playerid];
		}

		if(PI[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно средств");
		GiveMoney(playerid,-price,"Покраска");
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		gPlayerCars[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		gPlayerCars[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		gPlayerCars[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "PaintJob");
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(clickedid == CustomTD[20]) {
		if(CustomListNum[playerid] >= TypeBorder[CustomType[playerid]]-1) return 1;
		new model,str[64],value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomListNum[playerid]++;
		if(CustomListNum[playerid] == 1) TextDrawShowForPlayer(playerid,CustomTD[4]);
		if(CustomListNum[playerid] >= TypeBorder[CustomType[playerid]]-1) TextDrawHideForPlayer(playerid,CustomTD[20]);
		CustomLimitNum[playerid]++;
		if(CustomLimitNum[playerid] > 4) {
			for(new i = CustomListNum[playerid]-4, b = 0; b < 5; i++,b++) {
				format(str,64,"TUN[%d][Value]",i);
				value = GetGVarInt(str,CustomType[playerid]);

				new price;
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
					price = (value-seller);
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
				    else price = value;
				}

				format(str,64,"TUN[%d][Name]",i);
				GetGVarString(str,str,64,CustomType[playerid]);
				format(str,64,"%s~n~$%d",str,price);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+b],str);
				format(str,64,"TUN[%d][ModelID]",i);
				model = GetGVarInt(str,CustomType[playerid]);
				TextDrawHideForPlayer(playerid,CustomTD[15+b]);
				if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) TextDrawShowForPlayer(playerid,CustomTD[15+b]);
				else if(b == 4) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
			}
			CustomLimitNum[playerid] = 4;
		}
		else {
			TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]-1]);
			TextDrawShowForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		return 1;
	}
	else if(clickedid == CustomTD[4]) {
		if(CustomListNum[playerid] == 0) return 1;
		new model,str[64],value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomListNum[playerid]--;
		if(CustomListNum[playerid] == 0) TextDrawHideForPlayer(playerid,CustomTD[4]);
		if(CustomListNum[playerid] == TypeBorder[CustomType[playerid]]-2) TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomLimitNum[playerid]--;
		if(CustomLimitNum[playerid] < 0) {
			for(new i = CustomListNum[playerid], b = 0; b < 5; i++,b++) {
				format(str,64,"TUN[%d][Value]",i);
				value = GetGVarInt(str,CustomType[playerid]);

				new price;
				if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
					price = (value-seller);
				}
				else {
					if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
				    else price = value;
				}

				format(str,64,"TUN[%d][Name]",i);
				GetGVarString(str,str,64,CustomType[playerid]);
				format(str,64,"%s~n~$%d",str,price);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+b],str);
				format(str,64,"TUN[%d][ModelID]",i);
				model = GetGVarInt(str,CustomType[playerid]);
				TextDrawHideForPlayer(playerid,CustomTD[15+b]);
				if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) TextDrawShowForPlayer(playerid,CustomTD[15+b]);
				else if(b == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
			}
			CustomLimitNum[playerid] = 0;
		}
		else {
			TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]+1]);
			TextDrawShowForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		return 1;
	}
	else if(clickedid == CustomTD[3]) {
		if(CustomType[playerid] == 0) return 1;
		new str[64],model,value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]--;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 0) TextDrawHideForPlayer(playerid,CustomTD[3]);
		else TextDrawShowForPlayer(playerid,CustomTD[2]);

		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(clickedid == CustomTD[21]) {
		new str[64],value;
		format(str,64,"TUN[%d][Value]",CustomListNum[playerid]);
		value = GetGVarInt(str,CustomType[playerid]);

		new price;
		if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(value/100*vip_status[PI[playerid][pVips]][vip_tune]);
			price = (value-seller);
		}
		else {
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(value/100*BonusInfo[act_tune]);
				price = (value-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(value/100*BonusInfo[act_tune]);
				price = (value-seller);
			}
		    else price = value;
		}

		new string[156];
		format(string,sizeof(string),"\n\n"W"Вы действительно хотите установить деталь за "O"$%d?\n\n",price);
		D(playerid, D_TUNE_UPDATE, DSM, ""P"Установка детали", string, "Установить", "Отмена");
		return 1;
	}
	else if(Casino_Flag[playerid][show_casino_td] == 1 && Casino_Flag[playerid][select_casino_table] != -1){
		if(_:clickedid == INVALID_TEXT_DRAW) {
			if((InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start] && Casino_Flag[playerid][casino_crup] == 1) || (Casino_Flag[playerid][casino_bet_cash] != 0 && InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start])) return ErrorMessage(playerid,"Вы не можете покинуть партию пока идёт игра"),SelectTextDraw(playerid,0x9BF2EAAA);
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table], false);
		}
		else if(clickedid == Casino_TD[Casino_TD_Exit]) {
			if((InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start] && Casino_Flag[playerid][casino_crup] == 1) || (Casino_Flag[playerid][casino_bet_cash] != 0 && InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start])) return ErrorMessage(playerid,"Вы не можете покинуть партию пока идёт игра"),SelectTextDraw(playerid,0x9BF2EAAA);
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		}
		else if(clickedid == Casino_TD[Casino_TD_Set_Bet]) {
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"В данный момент идёт игра");
			if(Casino_Flag[playerid][casino_crup] == 1) {
				if(InfoDice[s][dice_bank] != 0) return ErrorMessage(playerid,"Кто то из игроков уже поставил ставку");
				D(playerid, D_SET_BET, DSI, ""P"Ставка", ""W"Введите сумму ставки!\nСтавка должна быть не менее "ORANGE"$"#MIN_STAVKA"\n"W"и не более "ORANGE"$"#MAX_STAVKA"", "Далее", "Отмена");
			}
			else {
				if(InfoDice[s][dice_stavka] == 0) return ErrorMessage(playerid,"Ставка не установлена");
				if(Casino_Flag[playerid][casino_bet_cash] != 0) return ErrorMessage(playerid,"Вы уже поставили ставку");
				if(GetPlayerMoneyEx(playerid) < InfoDice[s][dice_stavka]) return ErrorMessage(playerid,"У Вас недостаточно денег чтобы поставить ставку");
				GiveMoney(playerid,-InfoDice[s][dice_stavka],"ставка в казино");
				Casino_Flag[playerid][casino_bet_cash] = InfoDice[s][dice_stavka];
				InfoDice[s][dice_bank] += InfoDice[s][dice_stavka];
				UpdateTextCasino(s);
			}
			return 1;
		}
		else if(clickedid == Casino_TD[Casino_TD_Dice]) {
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_stavka] == 0) return ErrorMessage(playerid,"Ставка не установлена");
			if(Casino_Flag[playerid][casino_crup] == 1) {
				if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"В данный момент идёт игра");
				new count_player = 0, count_player2 = 0;
				for(new p = 0; p < 5; p++) {
					if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
					if(Casino_Flag[InfoDice[s][dice_gamer][p]][casino_bet_cash] != 0) count_player2++;
					count_player++;
				}
				if(count_player2 < 2) return ErrorMessage(playerid,"Для того чтобы начать игру, нужно два игрока установивших ставку");
				else if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"Игра запущена");
				InfoDice[s][dice_game_start] = true;
				InfoDice[s][dice_game_start_time] = gettime() + 30;
				InfoDice[s][dice_game_start_timer] = SetTimerEx("UpdateGameDice", 1000, 1, "i", s);
			}
			else {
				if(!InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"Игра еще не запущена");
				if(Casino_Flag[playerid][casino_bet_cash] == 0) return ErrorMessage(playerid,"Вы не ставили ставку");
				for(new c = 0; c < 5; c++) {
					if(InfoDice[s][dice_gamer][c] == playerid) {
						if(InfoDice[s][dice_score][c] != 0) return ErrorMessage(playerid,"Вы уже кинули кости");
						InfoDice[s][dice_score][c] = dice_random[random(sizeof(dice_random))];
						UpdateScores(s);
						UpdateTextCasino(s);
						break;
					}
				}
			}
		}
	}
	if(func_bcolor[1] <= clickedid <= func_bcolor[21] && GetPVarInt(playerid,"select_colortd")) {
		for(new i = 1; i <= 21; i++) {
			if(clickedid == func_bcolor[i]) {
				if(!GetPVarInt(playerid,"SelectButton")) SetPVarInt(playerid,"SelectButton",i);
				else if(GetPVarInt(playerid,"color_shashka")) {
					FuncBizz[PI[playerid][pBusiness]][funcbShash] = i;
					UpdateFuncBizzData(PI[playerid][pBusiness],"color_shash",FuncBizz[PI[playerid][pBusiness]][funcbShash]);
					update_bfunc(0,PI[playerid][pBusiness],FuncBizz[PI[playerid][pBusiness]][funcbShash]);
					cancel_selectcolor(playerid);
					SendClientMessage(playerid,CGOLD,"Вы изменили цвет таксопарка. Все шашки на Ваших автомобилях находящиеся на стоянке были перекрашены");
					SendClientMessage(playerid,CGOLD,"Остальные шашки на автомобилях изменят цвет после респавна");
					return 1;
				}
				else if(GetPVarInt(playerid,"color_allcolor")) {
					FuncBizz[PI[playerid][pBusiness]][funcbColor] = i;
					UpdateFuncBizzData(PI[playerid][pBusiness],"color",FuncBizz[PI[playerid][pBusiness]][funcbColor]);
					update_bfunc(1,PI[playerid][pBusiness],FuncBizz[PI[playerid][pBusiness]][funcbColor]);
					cancel_selectcolor(playerid);
					if(gBusiness[PI[playerid][pBusiness]][bizzType] == 11) {
						SendClientMessage(playerid,CGOLD,"Вы изменили цвет таксопарка. Все автомобили находящиеся на стоянке были перекрашены");
						SendClientMessage(playerid,CGOLD,"Остальные автомобили изменят цвет после респавна");
					}
					else if(gBusiness[PI[playerid][pBusiness]][bizzType] == 14) {
						SendClientMessage(playerid,CGOLD,"Вы изменили цвет транспортной компании. Все автомобили находящиеся на стоянке были перекрашены");
						SendClientMessage(playerid,CGOLD,"Остальные автомобили изменят цвет после респавна");
					}
					else if(gBusiness[PI[playerid][pBusiness]][bizzType] == 15) {
						SendClientMessage(playerid,CGOLD,"Вы изменили цвет банковского отделения");
					}
					return 1;
				}
			}
		}
		return 1;
	}
    return 1;
}
stock ChosePlayerSkin(playerid) {
	TI[playerid][tSelectSkin] = true;
	if(TI[playerid][tSpectate] == true) SpecPl(playerid, false);
	SetPlayerPosAC(playerid,1074.1667,58.7888,1112.5420,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(playerid,180.6046);
	DestroyActor(actorereg[playerid][0]);
	//DestroyActor(actorereg[playerid][1]);

    InterpolateCameraPos(playerid, 1074.122192, 49.144104, 1114.458007, 1074.122192, 49.144104, 1114.458007, 1000);
	InterpolateCameraLookAt(playerid, 1074.269897, 53.895549, 1112.908203, 1074.269897, 53.895549, 1112.908203, 1000);
	/*
	SetPlayerCameraPos(playerid, 236.836898, -31.369262, 1206.662841);
	SetPlayerCameraLookAt(playerid, 236.865447, -26.432712, 1205.869384);
	*/
	SetPlayerVirtualWorld(playerid,playerid+1);
	FreezePlayerForTime(playerid,5);
	switch(PI[playerid][pSex]) {
	    case 1: SetPVarInt(playerid,"join_ped_item",0);
		case 2: SetPVarInt(playerid,"join_ped_item",8);
	}
	SetPVarInt(playerid,"registrations",1);
	PI[playerid][pSkin] = skin_register[GetPVarInt(playerid,"join_ped_item")][0];
	for(new i;i<19;i++) TextDrawShowForPlayer(playerid, reg_td[i]);
	PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][0], PI[playerid][pSkin]);
	PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][1], PI[playerid][pSkin]);
	for(new i;i<3;i++) PlayerTextDrawShow(playerid, reg_tds[playerid][i]);
	new stext[25];
	format(stext, sizeof(stext), "%s", player_name[playerid]);
	PlayerTextDrawSetString(playerid, reg_tds[playerid][2], stext);
	SelectTextDraw(playerid, 0x0080FFFF);

	SendClientMessage(playerid,CGOLD,"Используйте окошко справа, для выбора скина");

	return A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
}
CB: SpcarsAvto(playerid) {
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(IsVehicleOccupied(i)) continue;
		if(GetVehicleModel(i) == 450) continue;
		SetVehicleToRespawn(i);
	}
	new string[100];
	format(string,sizeof(string),"Администратор: %s заспавнил машины",player_name[playerid]);
	AdmMSG(COLOR_LIGHTRED,string,1);
}

CB: SpActors(playerid)
{
    for(new i = 0; i < MAX_ACTORS; i++)
	{
		SetActorPos(actor[i], ActorInfo[i][POS_X], ActorInfo[i][POS_Y], ActorInfo[i][POS_Z]);
	}
	new string[100];
	format(string,sizeof(string),"Администратор: %s заспавнил актеров",player_name[playerid]);
	AdmMSG(COLOR_LIGHTRED,string,1);
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,
                                   Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
                                   Float:fRotX, Float:fRotY, Float:fRotZ,
                                   Float:fScaleX, Float:fScaleY, Float:fScaleZ ) {
	new string[144];
	format(string,sizeof(string),"[INDEX: %d] [MODEL: %d] [BONE: %d] [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f] [SX: %.2f] [SY: %.2f] [SZ: %.2f]",index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	SendClientMessage(playerid,-1,string);
    return 1;
}
stock load_vote() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `vote`");
	new rows = cache_num_rows();
	if(rows) {
		for(new i=0; i<rows; i++) {
			cache_get_value_index(i,0,vote_name[i],25);
			cache_get_value_index_int(i,1,vote_count[i]);
		}
	}
	cache_delete(result);
	print ("[Загрузка ...] Голосование загружено");
	return 1;
}
stock load_bint()
{
	new Cache:result;
	
	result = mysql_query(connects, "SELECT * FROM `bints`");
	gBintsCount = cache_num_rows();
	
	if(gBintsCount > 1)
	{
		if(gBintsCount > BINT_COUNT) print("Кол-во БИНТ'ов в базе превышает предопределнное количество");
		else
		{
			for(new i = 1; i<gBintsCount;i++)
			{
				cache_get_value_name_int(i,"id", gBints[i][bintID]);

				cache_get_value_name_int(i,"interior", gBints[i][bintInterior]);

				cache_get_value_name_float(i, "x", gBints[i][bintX]);
		        cache_get_value_name_float(i, "y", gBints[i][bintY]);
		        cache_get_value_name_float(i, "z", gBints[i][bintZ]);
		        cache_get_value_name_float(i, "r", gBints[i][bintR]);

		        cache_get_value_name_float(i, "xb", gBints[i][bintXB]);
		        cache_get_value_name_float(i, "yb", gBints[i][bintYB]);
		        cache_get_value_name_float(i, "zb", gBints[i][bintZB]);

		        cache_get_value_name(i, "name", gBints[i][bintName], 32);

		        gBintsTotalCount++;
			        
				gBintEnterArea[i] = CreateDynamicSphere(gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],3.0,-1,gBints[i][bintInterior]);

				gBintBuyArea[i] = CreateDynamicSphere(gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],3.0,-1,gBints[i][bintInterior]);

   				CreateDynamicPickup(1318,1,gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],-1,gBints[i][bintInterior]);

   				if(i == 18) CreateDynamicPickup(19893,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1,gBints[i][bintInterior]);
   				else if(i == 20) CreateDynamicPickup(1275,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1,gBints[i][bintInterior]);
   				else CreateDynamicPickup(1239,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1,gBints[i][bintInterior]);
			}
			printf("[Загрузка ...] Интереьры бизнесов успешно загружены (%i шт.)",gBintsTotalCount);
		}
	}
	else print("Не обнаружено БИНТ'ов в базе");
	cache_delete(result);
	return true;
}
stock load_market() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `blackmarket`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_value_index_int(i,1, black_prods[0]);
			cache_get_value_index_int(i,2, black_prods[1]);
			cache_get_value_index_int(i,3, black_prods[2]);
			cache_get_value_index_int(i,4, black_prods[3]);
			cache_get_value_index_int(i,5, black_prods[4]);

			cache_get_value_index_int(i,6, black_prods[5]);
			cache_get_value_index_int(i,7, black_prods[6]);
			cache_get_value_index_int(i,8, black_prods[7]);
			cache_get_value_index_int(i,9, black_prods[8]);

			cache_get_value_index_int(i,10, black_prods[9]);
		}
	}
    cache_delete(result);
    printf("[Загрузка ...] Черный рынок успешно загружен (%i шт.)",rows);
	check_terrs();
    return true;
}
stock load_labrary() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `labrary`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			new data[128];
			cache_get_value(0, "actor_1", data), sscanf(data,"p<|>a<i>[8]",l_actor[0]);
			cache_get_value(0, "actor_2", data), sscanf(data,"p<|>a<i>[8]",l_actor[1]);
			cache_get_value(0, "actor_3", data), sscanf(data,"p<|>a<i>[8]",l_actor[2]);

			cache_get_value(0, "actor_t1", data), sscanf(data,"p<|>a<i>[8]",l_actort[0]);
			cache_get_value(0, "actor_t2", data), sscanf(data,"p<|>a<i>[8]",l_actort[1]);
			cache_get_value(0, "actor_t3", data), sscanf(data,"p<|>a<i>[8]",l_actort[2]);
		}
	}
	for(new gang = 0; gang < 8; gang ++) {
		if(l_actor[0][gang]) UseLabrary(0,gang,1);
		if(l_actor[1][gang]) UseLabrary(1,gang,1);
		if(l_actor[2][gang]) UseLabrary(2,gang,1);
	}
    cache_delete(result);
    printf("[Загрузка ...] Лаборатории успешно загружены (%i шт.)",rows);
    return true;
}
stock load_fracgun() {
	new Cache:result, rows;
	result = mysql_query (connects, "SELECT * FROM `frac_weapon`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows ; i++) {
		   new slot,fraction;
		   cache_get_value_int(i,"Slot",slot);
		   cache_get_value_int(i,"Fraction",fraction);
		   cache_get_value_int(i,"fwID",FW[slot][fraction][fwID]);
		   cache_get_value_int(i,"fwGunID",FW[slot][fraction][fwGunID]);
		   cache_get_value_int(i,"fwGunAmmo",FW[slot][fraction][fwGunAmmo]);
		   cache_get_value_int(i,"fwArmor",FW[slot][fraction][fwArmor]);
		   cache_get_value_int(i,"fwRank",FW[slot][fraction][fwRank]);
		   cache_get_value(i, "fwName", FW[slot][fraction][fwName],64);
		}
	}
	cache_delete(result);
	print("[Загрузка ...] Оружие фракций успешно загружены");
	return 1;
}
stock load_economy() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `economy`");
	rows = cache_num_rows();
    if(rows) {
		new data[256];
		cache_get_value(0, "salary_pd", data), sscanf(data,"p<|>a<i>[12]",FracSalary[0]);
		cache_get_value(0, "salary_fbi", data), sscanf(data,"p<|>a<i>[11]",FracSalary[1]);
		cache_get_value(0, "salary_mayor", data), sscanf(data,"p<|>a<i>[7]",FracSalary[2]);
		cache_get_value(0, "salary_army", data), sscanf(data,"p<|>a<i>[15]",FracSalary[3]);
		cache_get_value(0, "salary_medics", data), sscanf(data,"p<|>a<i>[10]",FracSalary[4]);
		cache_get_value(0, "salary_news", data), sscanf(data,"p<|>a<i>[10]",FracSalary[5]);
		cache_get_value(0, "salary_mafia", data), sscanf(data,"p<|>a<i>[10]",FracSalary[6]);
		cache_get_value(0, "salary_gang", data), sscanf(data,"p<|>a<i>[10]",FracSalary[7]);
		cache_get_value(0, "salary_whitehouse", data), sscanf(data,"p<|>a<i>[12]",FracSalary[8]);
		cache_get_value(0, "salary_licensers", data), sscanf(data,"p<|>a<i>[11]",FracSalary[9]);

		cache_get_value_name_int(0,"work_gun", WorkSalary[0]);
		cache_get_value_name_int(0,"work_oil", WorkSalary[1]);
		cache_get_value_name_int(0,"work_alco", WorkSalary[2]);
		cache_get_value_name_int(0,"work_apple", WorkSalary[3]);
		cache_get_value_name_int(0,"work_wood", WorkSalary[4]);

		cache_get_value_name_int(0,"nalog_1", Nalog[0]);//процентов от суммы дохода за час
		cache_get_value_name_int(0,"nalog_2", Nalog[1]);//пенсионный возраст
		cache_get_value_name_int(0,"nalog_3", Nalog[2]);//размер пенсии
		cache_get_value_name_int(0,"nalog_4", Nalog[3]);//процент от прибыли бизнеса государству
		cache_get_value_name_int(0,"nalog_5", Nalog[4]);//процент от прибыли бизнеса мафии
		cache_get_value_name_int(0,"nalog_6", Nalog[5]);//налог при переводе игроку виртуальной валюты через банк
		cache_get_value_name_int(0,"nalog_7", Nalog[6]);//20 % от гос. Стоимости дома и 50% от купленых улучшений ( при слёте ) – 80 % возвращается игроку.
    }
    cache_delete(result);
    print("[Загрузка ...] Экономика успешно загружена");
    return true;
}
stock load_atm() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `atms`");
	gATMCount = cache_num_rows();
	if(!gATMCount) print("Не обнаружено ATMS в базе");
	else for(new i = 0; i < gATMCount;i++) {
		new atmID;

		cache_get_value_int(i, "atmID", atmID);
		
		cache_get_value_float(i, "ATM_X", ATMData[atmID][ATM_Pos][0]);
		cache_get_value_float(i, "ATM_Y", ATMData[atmID][ATM_Pos][1]);
		cache_get_value_float(i, "ATM_Z", ATMData[atmID][ATM_Pos][2]);
		cache_get_value_float(i, "ATM_ROTX", ATMData[atmID][ATM_Pos][3]);
		cache_get_value_float(i, "ATM_ROTY", ATMData[atmID][ATM_Pos][4]);
		cache_get_value_float(i, "ATM_ROTZ", ATMData[atmID][ATM_Pos][5]);
		
		ATMData[atmID][atm_Taken] = 1;

		cache_get_value_int(i, "ATM_VW", ATMData[atmID][atm_VW]);
		cache_get_value_int(i, "ATM_INT", ATMData[atmID][atm_INT]);

		cache_get_value_int(i, "ATM_BANK", ATMData[atmID][atm_Bank]);
		cache_get_value_int(i, "ATM_BANKTIME", ATMData[atmID][atm_BankTime]);

//		ATMData[atmID][atm_Object] = CreateDynamicObject(2942, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);
		UpdateATMLabel(atmID);
	}
	cache_delete(result);
	printf("[Загрузка ...] Банкоматы успешно загружены (%i шт.)", gATMCount);
	return 1;
}
stock load_carsbizz()
{
	new Cache:result = mysql_query(connects, "SELECT * FROM `business_cars`");
	gCarsBusinessCount = cache_num_rows();

	if(!gCarsBusinessCount) print("Не обнаружены транспорты бизнесов в базе");
	else
	{
		if(gCarsBusinessCount >= MAX_BUSINESS_COUNT) print("Кол-во транспортов бизнесов в базе превышает предопределнное количество");
		else
		{
			for(new i = 1; i < gCarsBusinessCount;i++)
			{
				cache_get_value_name_int(i,"ID", CarsBizz[i][carbID]);

				if(CarsBizz[i][carbID] == 0) continue;
				else
				{
				    cache_get_value_name_int(i,"bizzID", CarsBizz[i][carbBizz]);
				    
				    cache_get_value_name_int(i,"car_slot", CarsBizz[i][carbCarSlot]);
				    
					cache_get_value_name_int(i, "model", CarsBizz[i][carbModel]);
					
					cache_get_value_name_float(i, "x", CarsBizz[i][carbPosX]);
					cache_get_value_name_float(i, "y", CarsBizz[i][carbPosY]);
					cache_get_value_name_float(i, "z", CarsBizz[i][carbPosZ]);
					cache_get_value_name_float(i, "r", CarsBizz[i][carbPosR]);

					gCarsBusinessTotalCount++;

					creare_funccar(CarsBizz[i][carbBizz],i,CarsBizz[i][carbCarSlot]);
				}
		    }
			printf("[Загрузка ...] Транспорты бизнеса успешно загружена (%i шт.)",gCarsBusinessTotalCount);
		}
	}
   	cache_delete(result);
    return true;
}
stock load_funcbizz()
{
	new Cache:result, b_car[256], tarif[128], string[54];
	result = mysql_query(connects, "SELECT * FROM `business_func`");
	gFuncBusinessCount = cache_num_rows();
    
	if(!gFuncBusinessCount) print("Не обнаружено func бизнесов в базе");
	else
	{
		if(gFuncBusinessCount >= MAX_BUSINESS_COUNT) print("Кол-во func бизнеса в базе превышает предопределнное количество");
		else
		{
			for(new i = 1; i < gFuncBusinessCount;i++)
			{
				cache_get_value_name_int(i,"bizzID", FuncBizz[i][funcbID]);
				
				if(FuncBizz[i][funcbID] == 0) continue;
				else
				{
				    cache_get_value_name_int(i,"ID", FuncBizz[FuncBizz[i][funcbID]][funcbSlot]);

					cache_get_value_name(i, "name", FuncBizz[FuncBizz[i][funcbID]][funcbName], 20);
					cache_get_value_name(i, "name_car", FuncBizz[FuncBizz[i][funcbID]][funcbNameCar], 12);

					cache_get_value_name_int(i,"number", FuncBizz[FuncBizz[i][funcbID]][funcbNum]);

					cache_get_value(i, "car", b_car), sscanf(b_car,"p<|>a<i>[20]",FuncBizz[FuncBizz[i][funcbID]][funcbCar]);
					cache_get_value(i, "tarif", tarif), sscanf(tarif,"p<|>a<i>[4]",FuncBizz[FuncBizz[i][funcbID]][funcbTarif]);

					cache_get_value_name_int(i,"color", FuncBizz[FuncBizz[i][funcbID]][funcbColor]);
					cache_get_value_name_int(i,"color_shash", FuncBizz[FuncBizz[i][funcbID]][funcbShash]);
					cache_get_value_name_int(i,"percent", FuncBizz[FuncBizz[i][funcbID]][funcbPercent]);
					cache_get_value_name_float(i,"percent2", FuncBizz[FuncBizz[i][funcbID]][funcbPercent2]);
					cache_get_value_name_int(i,"percent3", FuncBizz[FuncBizz[i][funcbID]][funcbPercent3]);

					gFuncBusinessTotalCount++;

					switch(gBusiness[FuncBizz[i][funcbID]][bizzType])
					{
						case 11, 14:
						{
							//biz_text[FuncBizz[FuncBizz[i][funcbID]][funcbSlot]] = CreateDynamicObject(19482, 2402.697021, -33.206501, 1030.597290,
							//	0.000000, 0.000000, 0.000000, FuncBizz[i][funcbID], -1, -1, 50.00);

							format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[FuncBizz[i][funcbID]][funcbColor]][col_rgb],FuncBizz[FuncBizz[i][funcbID]][funcbName]);
							SetDynamicObjectMaterialText(biz_text[FuncBizz[FuncBizz[i][funcbID]][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);

							for(new z = 0; z < 20; z++)
							{
								if(FuncBizz[FuncBizz[i][funcbID]][funcbCar][z] == 0)
								{
									FuncBizz[FuncBizz[i][funcbID]][funcbCars][z] = INVALID_VEHICLE_ID;
									continue;
								}
							}
						}
					}
				}
		    }
			printf("[Загрузка ...] Функции бизнеса успешно загружена (%i шт.)",gFuncBusinessTotalCount);
		}
	}
   	cache_delete(result);
    return true;
}
stock load_fracfreez()
{
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `fracmorozed`");
	rows = cache_num_rows();
	
	if(rows)
	{
    	for(new f = 0; f < 8; f++) cache_get_value_index_int(0, f, fracmoroz[f]);
    }
    cache_delete(result);
    printf("[Загрузка ...] Фриз банд/мафий успешно загружен (%i шт.)",rows);
    return true;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);

stock SaveBusiness(bint)
{
	new query[4096];
	format(query, sizeof(query), "\
		UPDATE `business` SET `name` = '%s', `type` = '%d', `bint` = '%d', `world` = '%d', `ownerid` = '%d', `sellprice` = '%d', `bank`='%d', `bankday`='%d', \
		`price`='%d', `enter`='%d', `product`='%d', `order`='%d', `orderprice`='%d', `status`='%d', `status`='%d', `x`='%f', `y`='%f', \
		`z`='%f', `r`='%f', `gps_x`='%f', `gps_y`='%f', `gps_z`='%f', `deliving`='%d', `mafia`='%d', `owner` = '%s', `visitors`='%d' \
		WHERE `id` = '%d' AND `id` != 0",
		gBusiness[bint][bizzName],
		gBusiness[bint][bizzType],
		gBusiness[bint][bizzBint],
		gBusiness[bint][bizzWorld],
		gBusiness[bint][bizzOwnerID],
		gBusiness[bint][bizzSellPrice],
		gBusiness[bint][bizzBank],
		gBusiness[bint][bizzBankDay],
		gBusiness[bint][bizzPrice],
		gBusiness[bint][bizzEnter],
		gBusiness[bint][bizzProduct],
		gBusiness[bint][bizzProdOrder],
		gBusiness[bint][bizzProdOrderPrice],
		gBusiness[bint][bizzStatus],
		gBusiness[bint][bizzX],
		gBusiness[bint][bizzY],
		gBusiness[bint][bizzZ],
		gBusiness[bint][bizzR],
		gBusiness[bint][gpsX],
		gBusiness[bint][gpsY],
		gBusiness[bint][gpsZ],
		gBusiness[bint][bizzDay],
		gBusiness[bint][bizzMafia],
		gBusiness[bint][bizzOwner],
		gBusiness[bint][bizzVisitors],
		bint);

	mysql_query(connects, query);
	
	UpdateBizzUpgrade(bint);
	
	return mysql_errno();
}
stock load_business()
{
    new Cache:result, sqlstring[67];
    
	result = mysql_query(connects, "SELECT * FROM `business`");
	gBusinessCount = cache_num_rows();
	
	if(gBusinessCount > 1)
	{
		if(gBusinessCount > MAX_BUSINESS_COUNT) print("Кол-во бизнесов в базе превышает предопределнное количество");
		else
		{
			for(new i = 1; i<gBusinessCount;i++)
			{
				cache_get_value_name_int(i,"id", gBusiness[i][bizzID]);
				
				if(gBusiness[i][bizzID] == 0) continue;
				else
				{
			        cache_get_value_name(i, "name", gBusiness[i][bizzName], 64);

           			cache_get_value_name_int(i,"type", gBusiness[i][bizzType]);
			        cache_get_value_name_int(i,"bint", gBusiness[i][bizzBint]);
			        cache_get_value_name_int(i,"world", gBusiness[i][bizzWorld]);
			        cache_get_value_name_int(i,"ownerid", gBusiness[i][bizzOwnerID]);
			        cache_get_value_name_int(i,"sellprice", gBusiness[i][bizzSellPrice]);
			        cache_get_value_name_int(i,"bank", gBusiness[i][bizzBank]);
					cache_get_value_name_int(i,"bankday", gBusiness[i][bizzBankDay]);
			        cache_get_value_name_int(i,"price", gBusiness[i][bizzPrice]);
					cache_get_value_name_int(i,"enter", gBusiness[i][bizzEnter]);

					cache_get_value(i, "upgrade", sqlstring , 65), sscanf (sqlstring, "p<|>iii",
					gBusiness[i][bizzUpgrade][0], gBusiness[i][bizzUpgrade][1], gBusiness[i][bizzUpgrade][2]);

			        cache_get_value_name_int(i,"product", gBusiness[i][bizzProduct]);
					cache_get_value_name_int(i,"order", gBusiness[i][bizzProdOrder]);
					cache_get_value_name_int(i,"orderprice", gBusiness[i][bizzProdOrderPrice]);

			        cache_get_value_name_int(i,"status", gBusiness[i][bizzStatus]);

			        cache_get_value_name_float(i, "x", gBusiness[i][bizzX]);
			        cache_get_value_name_float(i, "y", gBusiness[i][bizzY]);
			        cache_get_value_name_float(i, "z", gBusiness[i][bizzZ]);
			        cache_get_value_name_float(i, "r", gBusiness[i][bizzR]);
			        
			        cache_get_value_name_float(i, "gps_x", gBusiness[i][gpsX]);
			        cache_get_value_name_float(i, "gps_y", gBusiness[i][gpsY]);
			        cache_get_value_name_float(i, "gps_z", gBusiness[i][gpsZ]);

					cache_get_value_name_int(i,"deliving", gBusiness[i][bizzDay]);
					cache_get_value_name_int(i,"mafia", gBusiness[i][bizzMafia]);

					cache_get_value_name(i, "owner", gBusiness[i][bizzOwner], MAX_PLAYER_NAME);

					gBusinessTotalCount++;

					new icon = 0, bint = gBusiness[i][bizzBint];

					switch(gBusiness[i][bizzType])
					{
						case 15:
						{
							gBusinessPickup[i] = CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],
								gBusiness[i][bizzWorld],gBints[bint][bintInterior]);

							gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,
								INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, gBusiness[i][bizzWorld], gBints[bint][bintInterior]);

							b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5,gBusiness[i][bizzWorld],
								gBints[bint][bintInterior],-1);
						}
						case 18:
						{
							gBusinessPickup[i] = CreateDynamicPickup(19627,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],0,0);

							gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,
								INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

							b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5);
						}
						default:
						{
							if(gBusiness[i][bizzType] != 7)
							{
								gBusinessPickup[i] = CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],
									gBusiness[i][bizzWorld],gBints[bint][bintInterior]);
							}
							gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,
								INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

							b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5);
						}
					}
					switch(bint)
					{
						case 0:
						{
							if(gBusiness[i][bizzType] == 18) icon = 27;
							else icon = 47;
						}
						case 1..4,11,12: icon = 49;
						case 5..10: icon = 45;
						case 16: icon = 10;
						case 17: icon = 14;
						case 18: icon = 29;
						case 19..21: icon = 6;
						case 50: icon = 55;
						case 22: icon = 42;
						case 23: icon = 48;
						case 24: icon = 34;
						case 25: icon = 54;
						case 13..15: icon = 56;
					}
					if(icon)
					{
						if(gBusiness[i][bizzType] != 15) gBusinessIcon[i] = CreateDynamicMapIcon(gBusiness[i][bizzX], gBusiness[i][bizzY], gBusiness[i][bizzZ], icon, -1);
					}
					UpdateBusinessText(i);
				}
			}
			printf("[Загрузка ...] Бизнесы успешно загружены (%i шт.)",gBusinessTotalCount);
		}
	}
	else print("Не обнаружено бизнесов в базе");
	cache_delete(result);
	return 1;
}
stock updaterooms()
{
    for(new id; id < gRoomsCount; id++)
	{
		new strings[1024];

		DestroyDynamic3DTextLabel(gRoomText[id]);

		if(GetString(gRooms[id][roomsOwner],"None")) format(strings, sizeof(strings),"Сдается в аренду\nДля аренды подойдите к ресепшену\n\n"G"ENTER");
		else format(strings, sizeof(strings),"Арендатор: "P"%s\n\n"G"ENTER",gRooms[id][roomsOwner]);

		gRoomText[id] = CreateDynamic3DTextLabel(strings, -1, gRooms[id][roomsEnterX], gRooms[id][roomsEnterY], gRooms[id][roomsEnterZ]+1, 5.0,
			INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, gRooms[id][roomsWorld], 80);
	}
	return 1;
}
stock updateroom(id)
{
	new strings[1024];
	
	DestroyDynamic3DTextLabel(gRoomText[id]);
	
	if(GetString(gRooms[id][roomsOwner],"None")) format(strings, sizeof(strings),"Сдается в аренду\nДля аренды подойдите к ресепшену\n\n"G"ENTER");
	else format(strings, sizeof(strings),"Арендатор: "P"%s\n\n"G"ENTER",gRooms[id][roomsOwner]);

	gRoomText[id] = CreateDynamic3DTextLabel(strings, -1, gRooms[id][roomsEnterX], gRooms[id][roomsEnterY], gRooms[id][roomsEnterZ]+1, 5.0,
		INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, gRooms[id][roomsWorld], 80);

	return 1;
}
stock UpdateBusinessText(id)
{
	new mes2[1024], control[300];
	
	if(id < 0 || id >= MAX_BUSINESS_COUNT || !gBusiness[id][bizzID]) return -1;
	
	if(!GetString(gBusiness[id][bizzOwner], "None") || gBusiness[id][bizzOwnerID] != 0)
	{
		if(gBusiness[id][bizzStatus])
		{
			switch(gBusiness[id][bizzMafia])
			{
				case fLCN: control = "Итальянская мафия";
				case fYAKUZA: control = "Японская мафия";
				case fRM: control = "Русская мафия";
				default: control = "-";
			}
			switch(gBusiness[id][bizzType])
			{
				case 7:
				{
					format(mes2,sizeof(mes2),""O"%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d\n\
						"G"Цена за 1 литр топлива: "GREEN"$%d\n"G"Купить канистру: "W"/buyfuel\n\
						"G"Заправиться: "W"/fill\n\
						"G"Крышует: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],control);
				}
				case 11:
				{
					format(mes2,sizeof(mes2),""O"Таксопарк\n\n{%s}%s\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d",
						color_td[FuncBizz[id][funcbColor]][col_rgb],FuncBizz[id][funcbName], gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice]);
				}
				case 14:
				{
					format(mes2,sizeof(mes2),""O"Транспортная компания\n\n{%s}%s\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d",
						color_td[FuncBizz[id][funcbColor]][col_rgb],FuncBizz[id][funcbName], gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice]);
				}
				case 15:
				{
					format(mes2,sizeof(mes2),"\
						"O"Банковское отделение\n\n\
						{%s}%s\n\
						"G"Владелец: "P"%s\n\
						"G"Стоимость: "W"$%d\
						",color_td[FuncBizz[id][funcbColor]][col_rgb],FuncBizz[id][funcbName], gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice]);
				}
				default:
				{
					if(gBusiness[id][bizzEnter])
					{
						format(mes2,sizeof(mes2),""O"%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d\n\
							"G"Цена за вход: "GREEN"$%i\n"G"Крышует: "W"%s\
							",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],gBusiness[id][bizzEnter],control);
					}
					else
					{
						format(mes2,sizeof(mes2),""O"%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d\n\
							"G"Крышует: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],control);
					}
				}
			}
		}
		else format(mes2,sizeof(mes2),"\t\t\t"NO"ЗАКРЫТО");
	}
	else
	{
		switch(gBusiness[id][bizzType])
		{
			case 11:
			{
				format(mes2,sizeof(mes2),""O"Таксопарк\n\n"W"Название: "P"%s\n"W"Владелец: "P"нет\n"W"Стоимость: "P"%i",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			}
			case 14:
			{
				format(mes2,sizeof(mes2),""O"Транспортная компания\n\n"W"Название: "P"%s\n\
					"W"Владелец: "P"нет\n"W"Стоимость: "P"%i",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			}
			case 15:
			{
				format(mes2,sizeof(mes2),"\
					"O"Банковское отделение\n\n\
					"W"Название: "P"%s\n\
					"W"Владелец: "P"нет\n\
					"W"Стоимость: "P"%i",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			}
			case 7:
			{
				format(mes2,sizeof(mes2),""O"Бизнес продается\n\n"W"Название: "P"%s\n\
					"W"Стоимость: "P"%i\n\n"G"Для покупки введите: "W"/buyfueling",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			}
			default: format(mes2,sizeof(mes2),""O"Бизнес продается\n\n"W"Название: "P"%s\n"W"Стоимость: "P"%i\n",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
		}
	}
	UpdateDynamic3DTextLabelText(gBusinessText[id],-1,mes2);
	return true;
}
stock UpdateHotelText(id) {
	new string[256];
	if(id < 0 || id >= HOTEL_COUNT || !gHotels[id][hotelID]) return -1;

	if(gHotels[id][hotelOwnerID] == 0) format(string, sizeof(string),""O"Отель продается\n\n"W"Название: "P"%s\n"W"Стоимость: "P"%i\n",gHotels[id][hotelName],gHotels[id][hotelPrice]);
	else format(string, sizeof(string),"{52FF0D}%s\n\n"G"Владелец: "P"%s\n"G"Стоимость: "W"$%d\n"G"Цена за номер: "GREEN"$%i",gHotels[id][hotelName],gHotels[id][hotelOwner],gHotels[id][hotelPrice],gHotels[id][hotelCoast]);
	UpdateDynamic3DTextLabelText(gHotelText[id],-1,string);
	return true;
}
stock UpdateAirportsText(id) {
	new string[256];
	if(id < 0 || id >= AIR_COUNT || !gAirs[id][airID]) return -1;

	if(gAirs[id][airOwnerID] == 0) format(string, sizeof(string),"\
		"O"Аэропорт продается\n\n"W"Название: "P"%s\n"W"Стоимость: "P"%i\n\n"G"Для покупки введите: "W"/buyair",gAirs[id][airName],gAirs[id][airPrice]);
		
	else format(string, sizeof(string),"\
		{52FF0D}%s\n\n"G"Владелец: "P"%s\n\
		"G"Стоимость: "W"$%d\n"G"Цена за аренду техники: "GREEN"$%i",gAirs[id][airName],gAirs[id][airOwner],gAirs[id][airPrice],gAirs[id][airCoast]);
		
	UpdateDynamic3DTextLabelText(gAirText[id],-1,string);
	return true;
}
stock load_airplane() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `plane`");
	gPlaneCount = cache_num_rows();
	for(new i = 1; i <= gPlaneCount; i++) {
		cache_get_value_name_int(i-1, "ID", gAirplanes[i][aID]);
		cache_get_value_name_int(i-1, "Airport", gAirplanes[i][aAirport]);
		cache_get_value_name_int(i-1, "Plane", gAirplanes[i][aPlane]);
		
		cache_get_value_name(i-1, "Owner", gAirplanes[i][aOwner], MAX_PLAYER_NAME);
		
		cache_get_value_name_int(i-1, "Time", gAirplanes[i][aTime]);
		cache_get_value_name_int(i-1, "Price", gAirplanes[i][aPrice]);
		
		cache_get_value_name_float(i-1, "Fuel", gAirplanes[i][aFuel]);
		
		cache_get_value_name_float(i-1, "PosX", gAirplanes[i][aPos][0]);
		cache_get_value_name_float(i-1, "PosY", gAirplanes[i][aPos][1]);
		cache_get_value_name_float(i-1, "PosZ", gAirplanes[i][aPos][2]);
		cache_get_value_name_float(i-1, "PosXY", gAirplanes[i][aPos][3]);

		gAirplanes[i][aCar] = CreateJobVehicle(99,gAirplanes[i][aPlane], gAirplanes[i][aPos][0], gAirplanes[i][aPos][1], gAirplanes[i][aPos][2], gAirplanes[i][aPos][3], -1, -1, 400);
		VehicleInfo[gAirplanes[i][aCar]][vFuel] = gAirplanes[i][aFuel];
		new arenda[64];
		if(!strcmp(gAirplanes[i][aOwner],"State",true)) {
			format(arenda, sizeof(arenda),"Не арендован", gAirplanes[i][aOwner]);
			gAirplanes[i][aText] = CreateDynamic3DTextLabel(arenda, -1, 0.0, 0.45, 1.1,20.0, INVALID_PLAYER_ID, gAirplanes[i][aCar], 0,-1,-1,-1, 15.0);
		}
		else {
			format(arenda, sizeof(arenda),"Арендатор - "O"%s", gAirplanes[i][aOwner]);
			gAirplanes[i][aText] = CreateDynamic3DTextLabel(arenda, -1, 0.0, 0.45, 1.1,20.0, INVALID_PLAYER_ID, gAirplanes[i][aCar], 0,-1,-1,-1, 15.0);
		}
	}
 	cache_delete(result);
 	printf("[Загрузка ...] Аэропланы успешно загружены (%i шт.)", gPlaneCount);
	return 1;
}
stock load_bilboards() {
	new Cache:result,rows;
	result = mysql_query(connects, "SELECT * FROM `billboards`");
    rows = cache_num_rows();
    if(!rows) return print("Билборды не найдены");
	for(new idx = 0;idx < rows; idx++) {
		cache_get_value_name(idx, "bText", BildInfo[idx][bText], 144);
		cache_get_value_name(idx, "bPosText", BildInfo[idx][bPosText], 32);
		cache_get_value_name(idx, "bOwner", BildInfo[idx][bOwner], MAX_PLAYER_NAME);

		cache_get_value_name_int(idx, "bOwned", BildInfo[idx][bOwned]);
		cache_get_value_name_int(idx, "bBackColor", BildInfo[idx][bBackColor]);
		cache_get_value_name_int(idx, "bFontFace",  BildInfo[idx][bFontFace]);
		cache_get_value_name_int(idx, "bAligment", BildInfo[idx][bAligment]);
		cache_get_value_name_int(idx, "bFontSize", BildInfo[idx][bFontSize]);

		cache_get_value_name_float(idx, "PosX", BildInfo[idx][bPos][0]);
		cache_get_value_name_float(idx, "PosY",  BildInfo[idx][bPos][1]);
		cache_get_value_name_float(idx, "PosZ", BildInfo[idx][bPos][2]);
		cache_get_value_name_float(idx, "PosA", BildInfo[idx][bPos][3]);

		cache_get_value_name_int(idx, "bDay", BildInfo[idx][bDay]);
		cache_get_value_name_int(idx, "bModel", BildInfo[idx][bObjectModel]);
        BildInfo[idx][bObjectID] = CreateDynamicObjectEx(BildInfo[idx][bObjectModel],BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2], 0.00000000, 0.00000000, BildInfo[idx][bPos][3],1000.000,1000.000); // bObject
        UpdateBuildText(idx);
	}
	cache_delete(result);
	return printf("[Загрузка ...] Билборды успешно загружены (%i шт.)",MAX_BILLBORDS);
}
stock load_hotels()
{
	new Cache:result,null;
	
	result = mysql_query(connects, "SELECT * FROM `hotels`");
	gHotelCount = cache_num_rows();
	
	if(gHotelCount > HOTEL_COUNT) print("Кол-во отелей в базе больше максимального");
	else if(!gHotelCount) print("Отелей в базе не найдено");
	
	for(new i = 0; i < gHotelCount; i++)
	{
		cache_get_value_name_int(i,"id", gHotels[i][hotelID]);

		cache_get_value_name(i,"name", gHotels[i][hotelName]);

		cache_get_value_name_int(i,"ownerid", gHotels[i][hotelOwnerID]);

		cache_get_value_name(i,"owner", gHotels[i][hotelOwner]);

		cache_get_value_name_int(i,"price", gHotels[i][hotelPrice]);
		cache_get_value_name_int(i,"coast", gHotels[i][hotelCoast]);
		cache_get_value_name_int(i,"bank", gHotels[i][hotelBank]);
		cache_get_value_name_int(i,"bankday", gHotels[i][hotelBankDay]);
		cache_get_value_name_int(i,"visitors", gHotels[i][hotelVisitors]);
		cache_get_value_name_int(i,"day", gHotels[i][hotelDay]);

		cache_get_value_name_float(i, "x", gHotels[i][hotelAreaX]);
		cache_get_value_name_float(i, "y", gHotels[i][hotelAreaY]);
		cache_get_value_name_float(i, "z", gHotels[i][hotelAreaZ]);
		
		cache_get_value_name_float(i, "park_x", gHotels[i][hotelParkX]);
		cache_get_value_name_float(i, "park_y", gHotels[i][hotelParkY]);
		cache_get_value_name_float(i, "park_z", gHotels[i][hotelParkZ]);
		cache_get_value_name_float(i, "park_r", gHotels[i][hotelParkR]);

		cache_get_value_name_int(i,"level", gHotels[i][hotelLevel]);
		
		CreateDynamicPickup(19132, 1, gHotels[i][hotelAreaX], gHotels[i][hotelAreaY], gHotels[i][hotelAreaZ]);
		
		CreateDynamicMapIcon(gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ], 35, -1);

		gHotelArea[i] = CreateDynamicSphere(gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ],1.0,0,0,-1);

		gHotelText[i] = CreateDynamic3DTextLabel("_",-1,gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ]+1.0,20.0,
			INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

		UpdateHotelText(i);

		for(new b = 1; b <= 7; b++)
		{
			null++;
			gHotels[i][hotelVW][b] = null;
		}
	}
	cache_delete(result);
	
	printf("[Загрузка ...] Отели успешно загружены (%i шт.)",gHotelCount);
	return 1;
}
stock load_airports()
{
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `airports`");
	gAirCount = cache_num_rows();
	if(gAirCount > HOTEL_COUNT) print("Кол-во аэропортов в базе больше максимального");
	else if(!gAirCount) print("Аэропорты в базе не найдены");
	for(new i = 0; i < gAirCount; i++)
	{
		cache_get_value_name_int(i,"id", gAirs[i][airID]);

		cache_get_value_name(i,"name", gAirs[i][airName]);

		cache_get_value_name_int(i,"ownerid", gAirs[i][airOwnerID]);

		cache_get_value_name(i,"owner", gAirs[i][airOwner]);

		cache_get_value_name_int(i,"price", gAirs[i][airPrice]);
		cache_get_value_name_int(i,"coast", gAirs[i][airCoast]);
		cache_get_value_name_int(i,"bank", gAirs[i][airBank]);
		cache_get_value_name_int(i,"day", gAirs[i][airDay]);

		cache_get_value_name_float(i, "x", gAirs[i][airAreaX]);
		cache_get_value_name_float(i, "y", gAirs[i][airAreaY]);
		cache_get_value_name_float(i, "z", gAirs[i][airAreaZ]);

		CreateDynamicPickup(19627, 1, gAirs[i][airAreaX], gAirs[i][airAreaY], gAirs[i][airAreaZ]);
		CreateDynamicMapIcon(gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ], 5, -1);

		gAirArea[i] = CreateDynamicSphere(gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ],1.0,0,0,-1);
		gAirText[i] = CreateDynamic3DTextLabel("_",-1,gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

		UpdateAirportsText(i);
	}
	cache_delete(result);
	printf("[Загрузка ...] Аэропорты успешно загружены (%i шт.)",gAirCount);
	return 1;
}
stock load_family() {
	new Cache:result;
	result = mysql_query (connects, "SELECT * FROM `family`");
	TotalFamily = cache_num_rows();
	if(TotalFamily >= FAMILY_COUNT) print("Кол-во семей в базе больше максимального");
	else if(!TotalFamily) print("Семьи в базе не найдены");
	else for(new i = 0; i < TotalFamily; i++) {
		cache_get_value_name_int(i,"id", gFamily[i][famID]);

		cache_get_value(i,"cname",gFamily[i][famCName], 32);
		cache_get_value(i,"name",gFamily[i][famName], 32);
		cache_get_value(i,"time",gFamily[i][famDate], 32);

		cache_get_value(i,"cowner",gFamily[i][famCOwner], MAX_PLAYER_NAME);
		cache_get_value(i,"owner",gFamily[i][famOwner], MAX_PLAYER_NAME);

		cache_get_value_int(i,"color",gFamily[i][famColor]);
		cache_get_value_int(i,"drugs",gFamily[i][famDrugs]);
		cache_get_value_int(i,"mats",gFamily[i][famMats]);

		cache_get_value_int(i,"invite",gFamily[i][famInvRang]);
		cache_get_value_int(i,"uninvite",gFamily[i][famUninvRang]);
		cache_get_value_int(i,"giverank",gFamily[i][famGiveRang]);
		cache_get_value_int(i,"sklad",gFamily[i][famSklad]);

		cache_get_value_name(i, "Rank_1", FamRanks[i][0], 24);
        cache_get_value_name(i, "Rank_2", FamRanks[i][1], 24);
        cache_get_value_name(i, "Rank_3", FamRanks[i][2], 24);
        cache_get_value_name(i, "Rank_4", FamRanks[i][3], 24);
        cache_get_value_name(i, "Rank_5", FamRanks[i][4], 24);
        cache_get_value_name(i, "Rank_6", FamRanks[i][5], 24);
        cache_get_value_name(i, "Rank_7", FamRanks[i][6], 24);
        cache_get_value_name(i, "Rank_8", FamRanks[i][7], 24);

        cache_get_value_name(i, "message", gFamily[i][famMessage], 71);

        cache_get_value_int(i,"exp",gFamily[i][famExp]);
		cache_get_value_int(i,"lvl",gFamily[i][famLvl]);
		cache_get_value_int(i,"point",gFamily[i][famPoint]);
		cache_get_value_int(i,"drugs_max",gFamily[i][famDrugsMax]);
		cache_get_value_int(i,"mats_max",gFamily[i][famMatsMax]);
		cache_get_value_int(i,"fuel",gFamily[i][famFuel]);
		cache_get_value_int(i,"fuel_max",gFamily[i][famFuelMax]);
		cache_get_value_int(i,"remp",gFamily[i][famRemp]);
		cache_get_value_int(i,"remp_max",gFamily[i][famRempMax]);
		cache_get_value_int(i,"armour",gFamily[i][famArmour]);
		cache_get_value_int(i,"armour_max",gFamily[i][famArmourMax]);
		cache_get_value_int(i,"health",gFamily[i][famHealth]);
		cache_get_value_int(i,"health_max",gFamily[i][famHealthMax]);
		cache_get_value_int(i,"mask",gFamily[i][famMask]);
		cache_get_value_int(i,"mask_max",gFamily[i][famMaskMax]);
		cache_get_value_int(i,"money",gFamily[i][famMoney]);
		cache_get_value_int(i,"money_max",gFamily[i][famMoneyMax]);
		cache_get_value_int(i,"house",gFamily[i][famHouse]);
		cache_get_value_int(i,"type",gFamily[i][famType]);
	}
	cache_delete(result);
	printf("[Загрузка ...] Семьи успешно загружены (%i шт.)",TotalFamily);
	return 1;
}
stock load_rooms()
{
	new Cache:result, strings[1024];
	
	result = mysql_query(connects, "SELECT * FROM `rooms`");
	gRoomsCount = cache_num_rows();
	
	if(gRoomsCount >= 240) print("Номеров в отелях в базе больше максимального");
	else if(!gRoomsCount) print("Номеров в отелях в базе не найдены");
	else
	{
		for(new i; i < gRoomsCount; i++)
		{
			cache_get_value_name_int(i,"id", gRooms[i][roomsID]);

			cache_get_value_name(i,"owner", gRooms[i][roomsOwner]);

			cache_get_value_name_float(i, "x", gRooms[i][roomsEnterX]);
			cache_get_value_name_float(i, "y", gRooms[i][roomsEnterY]);
			cache_get_value_name_float(i, "z", gRooms[i][roomsEnterZ]);
			cache_get_value_name_float(i, "r", gRooms[i][roomsEnterR]);

			cache_get_value_name_int(i,"doors", gRooms[i][roomsDoors]);
			cache_get_value_name_int(i,"day", gRooms[i][roomsDay]);
			cache_get_value_name_int(i,"hotel", gRooms[i][roomsHotel]);
			cache_get_value_name_int(i,"vw", gRooms[i][roomsWorld]);
			
 			if(GetString(gRooms[i][roomsOwner],"None")) format(strings, sizeof(strings),"Сдается в аренду\nДля аренды подойдите к ресепшену\n\n"G"ENTER");
			else format(strings, sizeof(strings),"Арендатор: "P"%s\n\n"G"ENTER",gRooms[i][roomsOwner]);

			gRoomText[i] = CreateDynamic3DTextLabel(strings, -1, gRooms[i][roomsEnterX], gRooms[i][roomsEnterY], gRooms[i][roomsEnterZ]+1, 5.0,
				INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, gRooms[i][roomsWorld], 80);
		}
		printf("[Загрузка ...] Комнаты в отеле успешно загружены (%i шт.)",gRoomsCount);
	}
	cache_delete(result);
	return 1;
}
stock load_pickup()
{
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `pickups`");
	gEnterCount = cache_num_rows();
	
	if(gEnterCount > 240) print("Пикапов в базе больше максимального");
	else if(!gEnterCount) print("Пикапы в базе не найдены");
	else
	{
		for(new idx = 1; idx <= gEnterCount; idx++)
		{
		    cache_get_value_name_int(idx-1,"id", e_info[idx][e_id]);
			cache_get_value_name_float(idx-1, "e_x", e_info[idx][e_x]);
			cache_get_value_name_float(idx-1, "e_y", e_info[idx][e_y]);
			cache_get_value_name_float(idx-1, "e_z", e_info[idx][e_z]);
			cache_get_value_name_float(idx-1, "e_r", e_info[idx][e_r]);
			cache_get_value_name_float(idx-1, "v_x", e_info[idx][v_x]);
			cache_get_value_name_float(idx-1, "v_y", e_info[idx][v_y]);
			cache_get_value_name_float(idx-1, "v_z", e_info[idx][v_z]);
			cache_get_value_name_float(idx-1, "v_r", e_info[idx][v_r]);
			cache_get_value_name_int(idx-1,"e_int", e_info[idx][e_int]);
			cache_get_value_name_int(idx-1,"e_world", e_info[idx][e_world]);
			cache_get_value_name_int(idx-1,"type", e_info[idx][e_types]);
			cache_get_value_name_int(idx-1,"dostup", e_info[idx][e_dostup]);
			cache_get_value_name_int(idx-1,"fraction", e_info[idx][e_fraction]);

			e_info[idx][p_pic_enter] = CreateDynamicPickup(1318, 1, e_info[idx][e_x], e_info[idx][e_y], e_info[idx][e_z]);
			e_info[idx][p_pic_exit] = CreateDynamicPickup(1318, 1, e_info[idx][v_x], e_info[idx][v_y], e_info[idx][v_z], e_info[idx][e_world]);
			
			e_info[idx][p_text_enter] = CreateDynamic3DTextLabel("{EF9B15}Вход: ALT", COLOR_WHITE, e_info[idx][e_x], e_info[idx][e_y], e_info[idx][e_z],2.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0, 0);
				
			e_info[idx][p_text_exit] = CreateDynamic3DTextLabel("{EF9B15}Выход: ALT", COLOR_WHITE, e_info[idx][v_x], e_info[idx][v_y], e_info[idx][v_z],2.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, e_info[idx][e_world], e_info[idx][e_int]);
		}
		printf("[Загрузка ...] Пикапы успешно загружены (%i шт.)",gEnterCount);
	}
	cache_delete(result);
	return 1;
}
stock load_fullaccess()
{
	new Cache:result = mysql_query(connects, "SELECT * FROM `"TABLE_FULLACCESS"`");
	gFullAccessCount = cache_num_rows();

	if(gFullAccessCount)
	{
		for(new fa; fa < gFullAccessCount; fa++)
		{
		    cache_get_value_name_int(fa, "id", FCI[fa][fullaccess_id]);
        	cache_get_value_name(fa, "name", FCI[fa][fullaccess_player]);
		}
	}
	cache_delete(result);
	return 1;
}
stock load_information()
{
	if(!fexist("config.ini")) return print("файл 'config.ini' не найден");
	else
	{
		new currenttime = GetTickCount();
		new GetFile = ini_openFile("config.ini");

		ini_getInteger(GetFile, "HudAurora", Interface[0]);
	    ini_getInteger(GetFile, "RadarAurora", Interface[1]);
	    ini_getInteger(GetFile, "SpeedometrAurora", Interface[2]);
	    ini_getInteger(GetFile, "HungerCountAurora", Interface[3]);
	    ini_getInteger(GetFile, "FuelCountAurora", Interface[4]);
	    ini_getInteger(GetFile, "ChatTypeAurora", Interface[5]);
	    ini_getInteger(GetFile, "SaveDialogAurora", Interface[6]);
	    ini_getInteger(GetFile, "NewNameTag", Interface[7]);
	    ini_getInteger(GetFile, "SnowAurora", Interface[8]);
	    ini_getInteger(GetFile, "RenderDialogAurora", Interface[9]);

		ini_closeFile(GetFile);

		printf("[Загрузка ...] Информация сервера успешно загружена за %i ms", GetTickCount() - currenttime);
	}
	return 1;
}
stock save_information()
{
	if(!fexist("config.ini")) return print("файл 'config.ini' не найден");
	else
	{
		new GetFile = ini_openFile("config.ini");

		ini_setInteger(GetFile, "HudAurora", Interface[0]);
	    ini_setInteger(GetFile, "RadarAurora", Interface[1]);
	    ini_setInteger(GetFile, "SpeedometrAurora", Interface[2]);
	    ini_setInteger(GetFile, "HungerCountAurora", Interface[3]);
	    ini_setInteger(GetFile, "FuelCountAurora", Interface[4]);
	    ini_setInteger(GetFile, "ChatTypeAurora", Interface[5]);
	    ini_setInteger(GetFile, "SaveDialogAurora", Interface[6]);
	    ini_setInteger(GetFile, "NewNameTag", Interface[7]);
	    ini_setInteger(GetFile, "SnowAurora", Interface[8]);
	    ini_setInteger(GetFile, "RenderDialogAurora", Interface[9]);

		ini_closeFile(GetFile);
	}
	return 1;
}
stock load_house()
{
    new Cache:result, sqlstring[67];

	result = mysql_query(connects, "SELECT * FROM `houses`");
	gHouseCount = cache_num_rows();

	if(gHouseCount > 1)
	{
		if(gHouseCount > MAX_HOUSE_COUNT) print("Кол-во домов в базе превышает предопределнное количество");
		else
		{
			for(new i = 1; i<gHouseCount;i++)
			{
				cache_get_value_name_int(i,"id", gHouses[i][houseID]);

				if(gHouses[i][houseID] == 0) continue;
				else
				{
			        cache_get_value_name_int(i, "class", gHouses[i][houseClass]);
					cache_get_value_name_int(i, "day", gHouses[i][houseDay]);
					cache_get_value_name_int(i, "price", gHouses[i][housePrice]);
					cache_get_value_name_int(i, "hint", gHouses[i][houseHint]);

					cache_get_value(i, "improve", sqlstring , 20), sscanf (sqlstring, "p<|>iii",
					gHouses[i][houseImprove][0], gHouses[i][houseImprove][1], gHouses[i][houseImprove][2]);

					cache_get_value(i, "gun", sqlstring , 65), sscanf (sqlstring, "p<|>iiiiiiiii",
						gHouses[i][houseGun][0], gHouses[i][houseGun][1], gHouses[i][houseGun][2], gHouses[i][houseGun][3], gHouses[i][houseGun][4],
						gHouses[i][houseGun][5], gHouses[i][houseGun][6], gHouses[i][houseGun][7], gHouses[i][houseGun][8]);

					cache_get_value(i, "skin", sqlstring , 25), sscanf (sqlstring, "p<|>iii",
					gHouses[i][houseSkin][0], gHouses[i][houseSkin][1], gHouses[i][houseSkin][2]);

					cache_get_value_name_int(i, "safecode", gHouses[i][houseSafeCode]);
					cache_get_value_name_int(i, "safemoney", gHouses[i][houseSafeMoney]);
					cache_get_value_name_int(i, "drugs", gHouses[i][houseDrugs]);
					cache_get_value_name_int(i, "medkit", gHouses[i][houseHealth]);
					cache_get_value_name_int(i, "products", gHouses[i][houseProducts]);
					cache_get_value_name_int(i, "close", gHouses[i][houseClose]);

			        cache_get_value_name_float(i, "x", gHouses[i][houseX]);
			        cache_get_value_name_float(i, "y", gHouses[i][houseY]);
			        cache_get_value_name_float(i, "z", gHouses[i][houseZ]);
			        cache_get_value_name_float(i, "r", gHouses[i][houseR]);
			        cache_get_value_name_float(i, "parkx", gHouses[i][houseParkX]);
			        cache_get_value_name_float(i, "parky", gHouses[i][houseParkY]);
			        cache_get_value_name_float(i, "parkz", gHouses[i][houseParkZ]);
			        cache_get_value_name_float(i, "parkr", gHouses[i][houseParkR]);

					cache_get_value_name_int(i, "ownerid", gHouses[i][houseOwnerID]);

					cache_get_value_name(i, "owner", gHouses[i][houseOwner]);

					cache_get_value_name_int(i, "peopleid1", gHouses[i][houseHabitID][0]);
					cache_get_value_name_int(i, "peopleid2", gHouses[i][houseHabitID][1]);
					cache_get_value_name_int(i, "peopleid3", gHouses[i][houseHabitID][2]);

					cache_get_value_name(i, "people1", gHouseArendator[i][0]);
					cache_get_value_name(i, "people2", gHouseArendator[i][1]);
					cache_get_value_name(i, "people3", gHouseArendator[i][2]);

					cache_get_value_name_int(i, "family", gHouses[i][houseFamily]);

					gHouseTotalCount++;

					gHouseArea[i] = CreateDynamicSphere(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],1.5,0,0,-1);

					if(!GetString(gHouses[i][houseOwner], "None"))
					{
						gHousePickup[i] = CreateDynamicPickup(1272,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
						gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],32,CWHITE);
					}
					else
					{
						gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
						gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);
					}
				}
			}
			printf("[Загрузка ...] Дома успешно загружены (%i шт.)", gHouseTotalCount);
		}
	}
	cache_delete(result);
	return true;
}

stock SaveHouse(houseid)
{
	new string[1200], str[254];
	format(str, sizeof(str), "UPDATE `houses` SET");
	strcat(string, str);
	format(str, sizeof(str), "`x` = '%.4f', `y` = '%.4f', `z` = '%.4f', `r` = '%.4f', ",
	gHouses[houseid][houseX],
	gHouses[houseid][houseY],
	gHouses[houseid][houseZ],
	gHouses[houseid][houseR]);
	strcat(string, str);

	format(str, sizeof(str), "`parkx` = '%.4f', `parky` = '%.4f', `parkz` = '%.4f', `parkr` = '%.4f', ",
 	gHouses[houseid][houseParkX],
	gHouses[houseid][houseParkY],
	gHouses[houseid][houseParkZ],
	gHouses[houseid][houseParkR]);
	strcat(string, str);

	format(str, sizeof(str), "`owner` = '%s', `ownerid` = '%d', ",
 	gHouses[houseid][houseOwner],
	gHouses[houseid][houseOwnerID]);
	strcat(string, str);

	format(str, sizeof(str), "`price` = '%d', `close` = '%d', `day` = '%d', ",
	gHouses[houseid][housePrice],
	gHouses[houseid][houseClose],
	gHouses[houseid][houseDay]);
	strcat(string, str);

	format(str, sizeof(str), "`hint` = '%d', `safemoney` = '%d', `drugs` = '%d', ",
	gHouses[houseid][houseHint],
	gHouses[houseid][houseSafeMoney],
	gHouses[houseid][houseDrugs]);
	strcat(string, str);

	format(str, sizeof(str), "`improve` = '%d|%d|%d', `safecode` = '%d', `medkit` = '%d', `products` = '%d', ",
	gHouses[houseid][houseImprove][0],
	gHouses[houseid][houseImprove][1],
	gHouses[houseid][houseImprove][2],
	gHouses[houseid][houseSafeCode],
	gHouses[houseid][houseHealth],
	gHouses[houseid][houseProducts]);
	strcat(string, str);

	format(str, sizeof(str), "`gun` = '%d|%d|%d|%d|%d|%d|%d|%d|%d', `skin` = '%d|%d|%d', `class` = '%d', ",
	gHouses[houseid][houseGun][0],
	gHouses[houseid][houseGun][1],
	gHouses[houseid][houseGun][2],
	gHouses[houseid][houseGun][3],
	gHouses[houseid][houseGun][4],
	gHouses[houseid][houseGun][5],
	gHouses[houseid][houseGun][6],
	gHouses[houseid][houseGun][7],
	gHouses[houseid][houseGun][8],
	gHouses[houseid][houseSkin][0],
	gHouses[houseid][houseSkin][1],
	gHouses[houseid][houseSkin][2],
	gHouses[houseid][houseClass]);
    strcat(string, str);

    format(str, sizeof(str), "`peopleid1` = '%d',`peopleid2` = '%d',`peopleid3` = '%d', ",
	gHouses[houseid][houseHabitID][0],
	gHouses[houseid][houseHabitID][1],
	gHouses[houseid][houseHabitID][2]);
    strcat(string, str);

    format(str, sizeof(str), "`people1` = '%s',`people2` = '%s',`people3` = '%s',`family` = '%d'",
	gHouseArendator[houseid][0],
	gHouseArendator[houseid][1],
	gHouseArendator[houseid][2],
	gHouses[houseid][houseFamily]);
    strcat(string, str);

    format(str, sizeof(str), " WHERE `id` = '%i' AND `id` != 0 LIMIT 1",
	houseid);
	strcat(string, str);

	mysql_tquery(connects, string);
	return true;
}

stock load_greenzone() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_GREENZONE"`");
	rows = cache_num_rows();
	for(new i = 1; i <= rows; i++) {
        cache_get_value_name_int(i-1, "id", GREENZONE[i][grid]);

        cache_get_value_name_float(i-1, "grx", GREENZONE[i][grX]);
  		cache_get_value_name_float(i-1, "gry", GREENZONE[i][grY]);
        cache_get_value_name_float(i-1, "grz", GREENZONE[i][grZ]);
  		cache_get_value_name_float(i-1, "grd", GREENZONE[i][grD]);

  		cache_get_value_name(i-1, "grname", GREENZONE[i][grName], 32);

  		cache_get_value_name_int(i-1, "grvirt", GREENZONE[i][grVirt]);
    	TOTALZONE++;
	}
	cache_delete(result);
	printf("[Загрузка ...] Зеленые зоны успешно загружены (%i шт.)",TOTALZONE);
	return 1;
}
stock load_gangzone() {
    new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_GANGZONE"`");
	rows = cache_num_rows();

	for(new i = 0; i < rows; i++) {
        cache_get_value_name_int(i, "id", GZInfo[i][gID]);

        cache_get_value_name_float(i, "coord_one", GZInfo[i][gCoords][0]);
  		cache_get_value_name_float(i, "coord_two", GZInfo[i][gCoords][1]);
        cache_get_value_name_float(i, "coord_three", GZInfo[i][gCoords][2]);
  		cache_get_value_name_float(i, "coord_four", GZInfo[i][gCoords][3]);

  		cache_get_value_name_int(i, "gang_owner", GZInfo[i][gFrakVlad]);

		GZInfo[i][gZone] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);

		VladGzone[GZInfo[i][gFrakVlad]]++;
		GZInfo[i][gTime] = 0;

    	TOTALGZ++;
	}
	cache_delete(result);
	printf("[Загрузка ...] ГангЗоны успешно загружены (%i шт.)",TOTALGZ);
	return 1;
}
stock load_fractions() {
	new string[1024];
    for(new i; i < 15; i ++) RankName[0][i] = "Гражданин";
    new Cache:result, rows;
    format(string, sizeof(string), "SELECT * FROM `fractions`");
	result = mysql_query(connects, string);
	rows = cache_num_rows();
	for(new i = 1;i <= rows;i ++) {
	    cache_get_value_name_int(i-1, "ID", FI[i][fID]);

	    cache_get_value_name(i-1, "Name", FI[i][fName], 32);
	    cache_get_value_name(i-1, "Leader", FI[i][fLeader], MAX_PLAYER_NAME);
		cache_get_value_name(i-1, "Admin", FI[i][fAdmin], MAX_PLAYER_NAME);
		cache_get_value_name(i-1, "Time", FI[i][fTime], 53);

		cache_get_value_name_int(i-1, "Bank", FI[i][fBank]);
		cache_get_value_name_int(i-1, "BankCash", FI[i][fBankCash]);
		cache_get_value_name_int(i-1, "Drugs", FI[i][fDrugs]);
		cache_get_value_name_int(i-1, "Mats", FI[i][fMats]);
		cache_get_value_name_int(i-1, "Health", FI[i][fHealth]);
		cache_get_value_name_int(i-1, "Sklad", FI[i][fSklad]);
		cache_get_value_name_int(i-1, "Price", FI[i][fPrice]);
		cache_get_value_name_int(i-1, "Skin", FI[i][fSkin]);
		cache_get_value_name_int(i-1, "MaxRang", FI[i][fMaxRang]);
		cache_get_value_name_int(i-1, "RangInvite", FI[i][fInviteRang]);
		cache_get_value_name_int(i-1, "RangUninvite", FI[i][fUninviteRang]);
		cache_get_value_name_int(i-1, "GiveRang", FI[i][fGiveRang]);
		cache_get_value_name_int(i-1, "UseStock", FI[i][fUseStock]);
		cache_get_value_name_int(i-1, "VW", FI[i][fVw]);
        cache_get_value_name_int(i-1, "INT", FI[i][fInt]);
		cache_get_value_name_int(i-1, "DrugsBuy", FI[i][fDrugsBuy]);
		cache_get_value_name_int(i-1, "DrugsPrice", FI[i][fDrugsPrice]);
		cache_get_value_name_int(i-1, "AntiTk", FI[i][fAntiTK]);
		cache_get_value_name_int(i-1, "fPoints", FI[i][fPoints]);
		cache_get_value_name_int(i-1, "fRating", FI[i][fRating]);

        cache_get_value_name(i-1, "Rank_1", RankName[i][0], 24);
        cache_get_value_name(i-1, "Rank_2", RankName[i][1], 24);
        cache_get_value_name(i-1, "Rank_3", RankName[i][2], 24);
        cache_get_value_name(i-1, "Rank_4", RankName[i][3], 24);
        cache_get_value_name(i-1, "Rank_5", RankName[i][4], 24);
        cache_get_value_name(i-1, "Rank_6", RankName[i][5], 24);
        cache_get_value_name(i-1, "Rank_7", RankName[i][6], 24);
        cache_get_value_name(i-1, "Rank_8", RankName[i][7], 24);
        cache_get_value_name(i-1, "Rank_9", RankName[i][8], 24);
        cache_get_value_name(i-1, "Rank_10", RankName[i][9], 24);
        cache_get_value_name(i-1, "Rank_11", RankName[i][10], 24);
        cache_get_value_name(i-1, "Rank_12", RankName[i][11], 24);
        cache_get_value_name(i-1, "Rank_13", RankName[i][12], 24);
        cache_get_value_name(i-1, "Rank_14", RankName[i][13], 24);
        cache_get_value_name(i-1, "Rank_15", RankName[i][14], 24);

		cache_get_value_name(i-1, "Message", FI[i][fMessage], 70);
	}
	cache_delete(result);
	printf("[Загрузка ...] Фракции успешно загружены (%i шт.)",rows);
	return true;
}
stock load_anticheat() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `anticheats`");
	rows = cache_num_rows();
	for(new i = 0; i < rows; i++) {
		AntiCheat[i][acID] = i;

        cache_get_value_name(i, "cheatname", AntiCheat[i][acName],63);
		cache_get_value_name_int(i, "cheatvalue", AntiCheat[i][acValue]);
		//printf("%d %d %s",i,AntiCheat[i][acID],AntiCheat[i][acName]);
    }
    cache_delete(result);
	printf("[Загрузка ...] Античит успешно загружен (%i шт.)", rows);
	return 1;
}
stock load_diplomation() {
	new Cache:result,rows;
	new sqlstring[38];
	result = mysql_query(connects, "SELECT * FROM `diplomation`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_value(i, "f_dip", sqlstring , 38), sscanf (sqlstring, "p<|>iiiiiiii",
			f_diplomacy[i][0], f_diplomacy[i][1], f_diplomacy[i][2],
			f_diplomacy[i][3], f_diplomacy[i][4], f_diplomacy[i][5], f_diplomacy[i][6], f_diplomacy[i][7]);
		}
	}
    cache_delete(result);
	printf("[Загрузка ...] Дипломатия успешно загружена (%i шт.)", rows);
}
stock load_others() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_OTHERS"`");
	rows = cache_num_rows();
    if(rows) {
    	for(new i = 0; i <rows; i++) {
	        cache_get_value_index_int(i,1, action_server[0]);
			cache_get_value_index_int(i,2, zavodsklad);
			cache_get_value_index_int(i,3, oilsklad);
			cache_get_value_index_int(i,4, pricedrugs);
			cache_get_value_index_int(i,5, disease);
			cache_get_value_index_int(i,6, action_server[1]);
			cache_get_value_index_int(i,7, action_server[2]);
			cache_get_value_index_int(i,8, casino);
			cache_get_value_index_int(i,9, woodsklad);
			cache_get_value_index_int(i,10, tk_unloading[0]);
			cache_get_value_index_int(i,11, tk_unloading[1]);
			cache_get_value_index_int(i,12, tk_unloading[2]);
			cache_get_value_index_int(i,13, tk_unloading[3]);
			cache_get_value_index_int(i,14, rep_system);
			cache_get_value_index_int(i,15, duels);

			cache_get_value_index_int(i,16, invite_frac[0]);//PD
			cache_get_value_index_int(i,17, invite_frac[1]);//FBI
			cache_get_value_index_int(i,18, invite_frac[2]);//ARMY
			cache_get_value_index_int(i,19, invite_frac[3]);//MEDICS
			cache_get_value_index_int(i,20, invite_frac[4]);//NEWS
			cache_get_value_index_int(i,21, invite_frac[5]);//MAFIA
			cache_get_value_index_int(i,22, invite_frac[6]);//BAND
			cache_get_value_index_int(i,23, invite_frac[7]);//WH

			cache_get_value_index_int(i,24, anti_tk);//anti tk
		}
    }
    cache_delete(result);
    return true;
}
stock load_bonuses() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `bonuses`");
	rows = cache_num_rows();
    if(rows) {
    	for(new i = 0; i < rows; i++) {
    		cache_get_value_index_int(i,1, BonusInfo[act_level]);
    		cache_get_value_index_int(i,2, BonusInfo[act_select]);
    		cache_get_value_index_int(i,3, BonusInfo[act_time]);

	        cache_get_value_index_int(i,4, BonusInfo[act_skill]);
	        cache_get_value_index_int(i,5, BonusInfo[act_exp]);
	        cache_get_value_index_int(i,6, BonusInfo[act_sport]);
	        cache_get_value_index_int(i,7, BonusInfo[act_mp]);
	        cache_get_value_index_int(i,8, BonusInfo[act_gun]);
	        cache_get_value_index_int(i,9, BonusInfo[act_fish]);
	        cache_get_value_index_int(i,10, BonusInfo[act_renthotel]);
	        cache_get_value_index_int(i,11, BonusInfo[act_buyskin]);
	        cache_get_value_index_int(i,12, BonusInfo[act_buycar]);
	        cache_get_value_index_int(i,13, BonusInfo[act_rentcar]);
	        cache_get_value_index_int(i,14, BonusInfo[act_buylic]);
	        cache_get_value_index_int(i,15, BonusInfo[act_buyimprove]);
	        cache_get_value_index_int(i,16, BonusInfo[act_disease]);
	        cache_get_value_index_int(i,17, BonusInfo[act_changesex]);
	        cache_get_value_index_int(i,18, BonusInfo[act_medcard]);
	        cache_get_value_index_int(i,19, BonusInfo[act_buynubmbercar]);
	        cache_get_value_index_int(i,20, BonusInfo[act_perfomance]);
	        cache_get_value_index_int(i,21, BonusInfo[act_tune]);
	        cache_get_value_index_int(i,22, BonusInfo[act_timerullet]);
	        cache_get_value_index_int(i,23, BonusInfo[act_promocode]);
	        cache_get_value_index_int(i,24, BonusInfo[act_payday]);
	        cache_get_value_index_int(i,25, BonusInfo[act_donate]);
	    }
    }
    cache_delete(result);
	if(!BonusInfo[act_select]) SendRconCommand("hostname "HostName"");
	else if(BonusInfo[act_select] == 1) SendRconCommand("hostname "HostNameActions"");
	else SendRconCommand("hostname "HostNameX2"");

	if(SELECT_SERVER != 1) SendRconCommand("hostname "HostNameTest"");
    return true;
}
stock load_fors()
{
	for(new i;i < sizeof(tuning_enter);i ++) {
		CreateDynamic3DTextLabel("Для въезда в тюнинг центр: "GREEN"H",-1,tuning_enter[i][0],tuning_enter[i][1],tuning_enter[i][2],20.0,
			INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
			
		CreateDynamicMapIcon(tuning_enter[i][0], tuning_enter[i][1], tuning_enter[i][2], 27, 0);
	}
	new moved = 0;
	for(moved = 0; moved < MAX_OBJECT_MOVED; moved++)
	{
		moved_info[moved][moved_id] = CreateDynamicObject(moved_info[moved][moved_modelid],moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ],
		moved_info[moved][movedPosRotationX],moved_info[moved][movedPosRotationY],moved_info[moved][movedPosRotationZ],moved_info[moved][moved_vw]);

		switch(moved)
		{
		    //4,8,21,26,32,38..41,53 - Скрытые объекты
		    
		    //0,3,17,27,33,34,(35 почти) - Не видны тексты!!!

		    case 17: moved_text[moved] = CreateDynamic3DTextLabel(""P"'H'"G" если в машине\n"P"'ALT'"G" если пешком", -1,moved_info[moved][movedPosX],
				moved_info[moved][movedPosY],moved_info[moved][movedPosZ]-10.0, 10.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[moved][moved_vw], -1);

		    ////////////////////////////////////////////////////////////////////////////////////////////

			case 0,22..24,29,34,36..40: moved_text[moved] = CreateDynamic3DTextLabel(""G"Взаимодействие: "P"'H'", -1, moved_info[moved][movedPosX],
				moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 10.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[moved][moved_vw], -1);
				
			case 1,2,3,19,21,33,45..48,50..53: moved_text[moved] = CreateDynamic3DTextLabel(""G"Взаимодействие: "P"'ALT'", -1, moved_info[moved][movedPosX],
				moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 10.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[moved][moved_vw], -1);
			
			case 5..16,18,20,25,27,28,30,31,35,42..44,49: moved_text[moved] = CreateDynamic3DTextLabel(""P"'H'"G" если в машине\n"P"'ALT'"G" если пешком", -1,
				moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 10.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[moved][moved_vw], -1);
		}
	}
	
	for(new i = 0; i != 5; i++) {
		RingInfo[i][rgPlayer][0] = -1;
		RingInfo[i][rgPlayer][1] = -1;
	}

	for(new i; i != 21; i++)
	{
		objgolod[i] = -1;
		pickups_game_golod_2[i] = -1;
	}

	for(new i = 0; i < sizeof(gTeleportsToD); i++)
	{
		new string[72];
		strcat(string, gTeleportsToD[i][tpName]), strcat(string,"\n\n"G"Вcтаньте на пикап, чтобы войти/выйти");
		
		CreateDynamic3DTextLabel(string, PP, gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z], 10.0,
			INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, gTeleportsToD[i][tpEnterWorld], gTeleportsToD[i][tpEnterInt]);
			
		TeleportPickup[i] = CreateDynamicSphere(gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z],1.0,
			gTeleportsToD[i][tpEnterWorld],gTeleportsToD[i][tpEnterInt]);
			
		CreateDynamicPickup(1318, 1, gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z], gTeleportsToD[i][tpEnterWorld],
			gTeleportsToD[i][tpEnterInt]);
	}

	for(new pick = 0; pick < PICKUPS_COUNT; pick++)
	{
		CreateDynamicPickup(gPickupData[pick][2],23,gPickup[pick][0], gPickup[pick][1],gPickup[pick][2], gPickupData[pick][1],gPickupData[pick][0]);

		gPickID[pick] = CreateDynamicSphere(gPickup[pick][0], gPickup[pick][1],gPickup[pick][2],1.0,gPickupData[pick][1],gPickupData[pick][0]);

		if(!GetString(gPickupDataName[pick][picName],"None"))
		{
			CreateDynamic3DTextLabel(gPickupDataName[pick][picName],gPickupDataName[pick][picColor],gPickup[pick][0], gPickup[pick][1],gPickup[pick][2]+0.5, 10.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, gPickupData[pick][1],gPickupData[pick][0]);
		}
	}
	
	for(new i; i < sizeof(gun_checkpoints); i ++)
	{
		gun_pickup[i] = CreateDynamicCP(gun_checkpoints[i][0],gun_checkpoints[i][1],gun_checkpoints[i][2],0.7, 0, 0, -1,3.0);
		CreateDynamicPickup(1559,23,gun_checkpoints[i][0],gun_checkpoints[i][1],gun_checkpoints[i][2],0);
	}

	for(new i; i < sizeof(clothes_checkpoints); i ++)
	{
		gAreas[arClothes][i] = CreateDynamicSphere(clothes_checkpoints[i][0],clothes_checkpoints[i][1],clothes_checkpoints[i][2],1.0,200,88);
		CreateDynamicPickup(1559,23,clothes_checkpoints[i][0],clothes_checkpoints[i][1],clothes_checkpoints[i][2],200,88);
	}

	for(new i; i < sizeof(sad_objects); i ++)
	{
	//	SI[i][sad_object][0] = CreateDynamicObject(765,sad_objects[i][0],sad_objects[i][1],sad_objects[i][2],sad_objects[i][3],sad_objects[i][4],sad_objects[i][5],
//			-1,-1,-1,90.000);

		SI[i][sad_3dtext] = CreateDynamic3DTextLabel("Дерево\nСтадия - сохнет\nФермер - Отсутствует",0xFFFFFFFF,sad_objects[i][0],sad_objects[i][1],sad_objects[i][2]+4,10.0);
			
		sad_area[i] = CreateDynamicSphere(sad_objects[i][0],sad_objects[i][1],sad_objects[i][2]+2.5,2.0,0,0);
	}

    for(new i; i < sizeof(autosaloncar); i ++)
	{
//		CreateDynamicPickup(1239,23,2224.4695,778.1297,1116.8480,(i+50),82);
		car_pickup[i] = CreateDynamicSphere(2224.4695,778.1297,1116.8480,0.5,(i+50),82);

	//	table_car_obj[i] = CreateDynamicObject(1445, 2223.5801,777.4206,1116.8480, 0.00000, 0.00000, -60.70000, (i+50), 82, -1, 200.00, 200.00);
		SetDynamicObjectMaterial(table_car_obj[i], 0, 2670, "proc_rub", "CJ_CERT_1", 0x00000000);
	}

	for(new i; i != MAX_WOODS; i++)
	{
		WD::[i][woodZone] = CreateDynamicSphere(Woods[i][woodObjectPosX],Woods[i][woodObjectPosY],Woods[i][woodObjectPosZ],2.0);

		WD::[i][woodObject] = CreateDynamicObject(Woods[i][woodObjectModel],Woods[i][woodObjectPosY],Woods[i][woodObjectPosY],Woods[i][woodObjectPosZ],
			Woods[i][woodObjectRotX],Woods[i][woodObjectRotY],Woods[i][woodObjectRotZ]);
			
		WD::[i][woodUse] = false;
	}
	
	for(new d = 0; d < MAX_DUELS; d++) {
		DI[d][duel_owner_id] = DI[d][duel_id][0] = DI[d][duel_id][1] = DI[d][duel_id][2] = DI[d][duel_id][3] = DI[d][duel_id][4] = DI[d][duel_id][5] = INVALID_PLAYER_ID;
		DI[d][duel_gun] = 0;
		DI[d][duel_money] = 1000;
		DI[d][duel_raund] = 1;
		DI[d][duel_type] = 0;
		DI[d][duel_map] = 0;
		DI[d][duel_health] = 100;
		DI[d][duel_armour] = 0;
		DI[d][duel_start] = false;
		DI[d][duel_create] = false;
		DI[d][duel_point_1] = 0;
		DI[d][duel_point_2] = 0;
		DI[d][duel_vw] = 0;
	}
	
	for(new i=0;i<MAX_DROP_GUNS;i++) {
		drop_gun[i][dg_object] = -1;
		drop_gun[i][dg_gun] = -1;
		drop_gun[i][dg_ammo] = -1;
		drop_gun[i][dg_text] = Text3D:-1;
		drop_gun[i][dg_time] = -1;
	}

	for(new i = 0; i < 14; i++) VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
	
	/*
	for(new i; i < sizeof(autosaloncar); i ++)
	{
		CreateDynamicPickup(1239,23,autosaloncar[i][autoPosX],autosaloncar[i][autoPosY],autosaloncar[i][autoPosZ],autosaloncar[i][autoWorld],82);
		car_pickup[i] = CreateDynamicSphere(autosaloncar[i][autoPosX],autosaloncar[i][autoPosY],autosaloncar[i][autoPosZ],0.5,autosaloncar[i][autoWorld],82);
	}
	*/
	
    SetDynamicObjectMaterial(moved_info[3][moved_id], 0, -1, "none", "none", 0xFFFFFFFF);
	SetDynamicObjectMaterial(moved_info[4][moved_id], 2, 2990, "arsex", "blackdirt", 0x00000000);
	SetDynamicObjectMaterial(moved_info[23][moved_id], 0, 12980, "sw_block10", "sw_woodslats2", 0);
	SetDynamicObjectMaterial(moved_info[24][moved_id], 0, 1730, "cj_furniture", "CJ_WOOD5", 0x00000000);
	SetDynamicObjectMaterial(moved_info[24][moved_id], 0, 1649, "wglass", "carshowwin2", 0x00000000);
	SetDynamicObjectMaterial(moved_info[36][moved_id], 0, -1, "none", "none", 0xFFFFFFFF);
	SetDynamicObjectMaterial(moved_info[38][moved_id], 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
	SetDynamicObjectMaterial(moved_info[51][moved_id], 0, 10101, "2notherbuildsfe", "gz_vicdoor1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[52][moved_id], 0, 10101, "2notherbuildsfe", "gz_vicdoor1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[27][moved_id], 0, 7000, "AS_trackpan_tex", "as_track_cylinder", 0x00000000);
	SetDynamicObjectMaterial(moved_info[27][moved_id], 3, 7000, "AS_trackpan_tex", "as_track_cylinder", 0x00000000);
	
	print("[Загрузка ...] Информации сервера");
	return 1;
}
stock load_vip() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `vip`");
	rows = cache_num_rows();
    if(rows) {
    	for(new i = 1; i <= rows; i++) {
    		cache_get_value_name_int(i-1, "vip_payday", vip_status[i-1][vip_payday]);
			cache_get_value_name_int(i-1, "vip_afk",vip_status[i-1][vip_afk]);
			cache_get_value_name_int(i-1, "vip_carlic",vip_status[i-1][vip_carlic]);
			cache_get_value_name_int(i-1, "vip_lvl",vip_status[i-1][vip_lvl]);
			cache_get_value_name_int(i-1, "vip_healtime",vip_status[i-1][vip_healtime]);
			cache_get_value_name_int(i-1, "vip_arrest",vip_status[i-1][vip_arrest]);
			cache_get_value_name_int(i-1, "vip_mute",vip_status[i-1][vip_mute]);
			cache_get_value_name_int(i-1, "vip_lvl",vip_status[i-1][vip_lvl]);
			cache_get_value_name_int(i-1, "vip_admins",vip_status[i-1][vip_admins]);
			cache_get_value_name_int(i-1, "vip_mask_time",vip_status[i-1][vip_mask_time]);
			cache_get_value_name_int(i-1, "vip_armmats",vip_status[i-1][vip_armmats]);
			cache_get_value_name_int(i-1, "vip_search",vip_status[i-1][vip_search]);
			cache_get_value_name_int(i-1, "vip_heal",vip_status[i-1][vip_heal]);
			cache_get_value_name_int(i-1, "vip_mask",vip_status[i-1][vip_mask]);
			cache_get_value_name_int(i-1, "vip_fuel",vip_status[i-1][vip_fuel]);
			cache_get_value_name_int(i-1, "vip_jimmy",vip_status[i-1][vip_jimmy]);
			cache_get_value_name_int(i-1, "vip_mats",vip_status[i-1][vip_mats]);
			cache_get_value_name_int(i-1, "vip_drugs",vip_status[i-1][vip_drugs]);
			cache_get_value_name_float(i-1, "vip_satiety",vip_status[i-1][vip_satiety]);

			cache_get_value_name_int(i-1, "vip_fam_point",vip_status[i-1][vip_fam_point]);
			cache_get_value_name_int(i-1, "vip_transfer_bank",vip_status[i-1][vip_transfer_bank]);
			cache_get_value_name_int(i-1, "vip_percent_job",vip_status[i-1][vip_percent_job]);
			cache_get_value_name_int(i-1, "vip_percent_pension",vip_status[i-1][vip_percent_pension]);
			cache_get_value_name_int(i-1, "vip_percent_startjob",vip_status[i-1][vip_percent_startjob]);

			cache_get_value_name_int(i-1, "vip_flylic",vip_status[i-1][vip_flylic]);
			cache_get_value_name_int(i-1, "vip_fixcar",vip_status[i-1][vip_fixcar]);
			cache_get_value_name_int(i-1, "vip_fine",vip_status[i-1][vip_fine]);
			cache_get_value_name_int(i-1, "vip_hotel",vip_status[i-1][vip_hotel]);
			cache_get_value_name_int(i-1, "vip_chose",vip_status[i-1][vip_chose]);
			cache_get_value_name_int(i-1, "vip_buycar",vip_status[i-1][vip_buycar]);
			cache_get_value_name_int(i-1, "vip_rentcar",vip_status[i-1][vip_rentcar]);
			cache_get_value_name_int(i-1, "vip_houseupdate",vip_status[i-1][vip_houseupdate]);
			cache_get_value_name_int(i-1, "vip_changesex",vip_status[i-1][vip_changesex]);
			cache_get_value_name_int(i-1, "vip_number",vip_status[i-1][vip_number]);
			cache_get_value_name_int(i-1, "vip_perfonans",vip_status[i-1][vip_perfonans]);
			cache_get_value_name_int(i-1, "vip_tune",vip_status[i-1][vip_tune]);
			cache_get_value_name_int(i-1, "vip_rulet",vip_status[i-1][vip_rulet]);
			cache_get_value_name_int(i-1, "vip_hp",vip_status[i-1][vip_hp]);
			cache_get_value_name_int(i-1, "vip_useheal",vip_status[i-1][vip_useheal]);
			cache_get_value_name_int(i-1, "vip_changename",vip_status[i-1][vip_changename]);
			cache_get_value_name_int(i-1, "vip_gunlic",vip_status[i-1][vip_gunlic]);
			cache_get_value_name_int(i-1, "vip_radar",vip_status[i-1][vip_radar]);
			cache_get_value_name_int(i-1, "vip_report",vip_status[i-1][vip_report]);
			cache_get_value_name_int(i-1, "vip_ad",vip_status[i-1][vip_ad]);
			cache_get_value_name_int(i-1, "vip_enterbizz",vip_status[i-1][vip_enterbizz]);
			cache_get_value_name_int(i-1, "vip_vad",vip_status[i-1][vip_vad]);
			cache_get_value_name_int(i-1, "vip_sms",vip_status[i-1][vip_sms]);
			cache_get_value_name_int(i-1, "vip_disease",vip_status[i-1][vip_disease]);
			cache_get_value_name_int(i-1, "vip_pay",vip_status[i-1][vip_pay]);
			cache_get_value_name_int(i-1, "vip_chat",vip_status[i-1][vip_chat]);
			cache_get_value_name_int(i-1, "vip_percent_bank",vip_status[i-1][vip_percent_bank]);
			cache_get_value_name_int(i-1, "vip_percent_atm",vip_status[i-1][vip_percent_atm]);
			cache_get_value_name_int(i-1, "vip_call",vip_status[i-1][vip_call]);
			cache_get_value_name_int(i-1, "vip_report_color",vip_status[i-1][vip_report_color]);
		}
		printf("[Загрузка ...] VIP Статусов успешно загружено (%i шт.)", rows);
	}
	cache_delete(result);
	return true;
}
stock load_graffity() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `graffity`");

	CountGraffity = cache_num_rows();
	if(CountGraffity) {
		new idx;
		for(idx = 1; idx <= CountGraffity; idx++) {
			new obj;
			//new obj,icon;
			cache_get_value_index_int(idx-1,0,GrafInfo[idx][gId]);
			cache_get_value_index_int(idx-1,1,GrafInfo[idx][gFrak]);
			cache_get_value_index_float(idx-1,2, GrafInfo[idx][gr_x][0]);
			cache_get_value_index_float(idx-1,3, GrafInfo[idx][gr_x][1]);
			cache_get_value_index_float(idx-1,4, GrafInfo[idx][gr_x][2]);
			cache_get_value_index_float(idx-1,5, GrafInfo[idx][gr_x][3]);
			cache_get_value_index_float(idx-1,6, GrafInfo[idx][gr_x][4]);
			cache_get_value_index_float(idx-1,7, GrafInfo[idx][gr_x][5]);
			switch(GrafInfo[idx][gFrak]) {
			//	case 0: obj = 18666;
			//	case 20: obj = 18659;
			//	case 21: obj = 18661;
			//	case 22: obj = 18663;
			//	case 18: obj = 18664;
			//	case 19: obj = 18665;
			}
			GrafInfo[idx][gObject] = CreateDynamicObject(obj, GrafInfo[idx][gr_x][0], GrafInfo[idx][gr_x][1], GrafInfo[idx][gr_x][2], GrafInfo[idx][gr_x][3], GrafInfo[idx][gr_x][4], GrafInfo[idx][gr_x][5]);
		}
		printf("[Загрузка ...] Граффити успешно загружено (%i шт.)", CountGraffity);
	}
    cache_delete(result);
    return true;
}
stock cars_load()
{
	load_vehicles();
	load_fvehicle();
	CreateVehicless();
	return 1;
}
stock load_fvehicle()
{
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `frac_vehicle`");
	cache_get_row_count(gFracVehicleCount);
	for(new i=0;i<gFracVehicleCount;i++)
	{
   		cache_get_value_index_int(i,0,FracVehicle[i][fvehID]);
   		cache_get_value_index_int(i,1,FracVehicle[i][fvehFrac]);
   		cache_get_value_index_int(i,2,FracVehicle[i][fvehFracRang]);
		cache_get_value_index_int(i,3,FracVehicle[i][fvehModel]);
		cache_get_value_index_int(i,4,FracVehicle[i][fvehModelNew]);
		cache_get_value_index_int(i,5,FracVehicle[i][fvehTime]);
		cache_get_value_index_float(i,6,FracVehicle[i][fvehcCoords][0]);
		cache_get_value_index_float(i,7,FracVehicle[i][fvehcCoords][1]);
		cache_get_value_index_float(i,8,FracVehicle[i][fvehcCoords][2]);
		cache_get_value_index_float(i,9,FracVehicle[i][fvehcCoords][3]);
		cache_get_value_index_int(i,10,FracVehicle[i][fvehColor][0]);
		cache_get_value_index_int(i,11,FracVehicle[i][fvehColor][1]);
		
 		if(FracVehicle[i][fvehTime] > unix)
			FracVehicle[i][fvehCar] = CreateOrgsVehicle(FracVehicle[i][fvehFrac],FracVehicle[i][fvehFracRang],FracVehicle[i][fvehModelNew], FracVehicle[i][fvehcCoords][0],
				FracVehicle[i][fvehcCoords][1], FracVehicle[i][fvehcCoords][2], FracVehicle[i][fvehcCoords][3],FracVehicle[i][fvehColor][0],FracVehicle[i][fvehColor][1],
				RES_CAR_TIME);

		else FracVehicle[i][fvehCar] = CreateOrgsVehicle(FracVehicle[i][fvehFrac],FracVehicle[i][fvehFracRang],FracVehicle[i][fvehModel], FracVehicle[i][fvehcCoords][0],
			FracVehicle[i][fvehcCoords][1], FracVehicle[i][fvehcCoords][2], FracVehicle[i][fvehcCoords][3],FracVehicle[i][fvehColor][0],FracVehicle[i][fvehColor][1],
			RES_CAR_TIME);
	}
	printf("[Загрузка ...] ТС фракций успешно загружено (%i шт.)", gFracVehicleCount);
    cache_delete(result);
    return 1;
}
stock load_vehicles() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `transport` ORDER BY `model`");
	rows = cache_num_rows();
	for(new i=0;i<rows;i++) {
		cache_get_value_index_int(i,0,gTransport[i][trID]);
		cache_get_value_index_int(i,1,gTransport[i][trModel]);
		cache_get_value_index(i,2,gTransport[i][trName], 35);
		cache_get_value_index_int(i,3,gTransport[i][trPrice]);
		cache_get_value_index_int(i,4,gTransport[i][trTank]);
		cache_get_value_index_int(i,5,gTransport[i][trConsumption]);
		cache_get_value_index_int(i,6,gTransport[i][trClass]);
		cache_get_value_index_int(i,7,gTransport[i][trFuelable]);
		cache_get_value_index_int(i,7,gTransport[i][trSellable]);
		cache_get_value_index_int(i,9,gTransport[i][trProds]);
	}
	printf("[Загрузка ...] Транспорт успешно загружен (%i шт.)", rows);
	cache_delete(result);
	return 1;
}
CB: load_cars(playerid) {
	new rows;
    rows = cache_num_rows();
    
	if(!rows)
	{
	    for(new i = 0; i < 2; i++) {
	        new query[128];
		    mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%s')" ,player_name[playerid]);
			mysql_tquery(connects, query, "", "");
		}
		return 1;
	}
    for(new x = 0; x < rows; x++) {
        cache_get_value_name_int(x, "id", gPlayerCars[playerid][carID][x]);

        cache_get_value_name_int(x, "model", gPlayerCars[playerid][carModel][x]);
        cache_get_value_name_int(x, "color_one", gPlayerCars[playerid][carColor_one][x]);
        cache_get_value_name_int(x, "color_two", gPlayerCars[playerid][carColor_two][x]);

        cache_get_value_name_float(x, "drived", gPlayerCars[playerid][carDrived][x]);
        cache_get_value_name_float(x, "fuel", gPlayerCars[playerid][carFuel][x]);

        cache_get_value_name_int(x, "vehcom_1", gPlayerCars[playerid][carVehcom_1][x]);
        cache_get_value_name_int(x, "vehcom_2", gPlayerCars[playerid][carVehcom_2][x]);
        cache_get_value_name_int(x, "vehcom_3", gPlayerCars[playerid][carVehcom_3][x]);
        cache_get_value_name_int(x, "vehcom_4", gPlayerCars[playerid][carVehcom_4][x]);
        cache_get_value_name_int(x, "vehcom_5", gPlayerCars[playerid][carVehcom_5][x]);
        cache_get_value_name_int(x, "vehcom_6", gPlayerCars[playerid][carVehcom_6][x]);
        cache_get_value_name_int(x, "vehcom_7", gPlayerCars[playerid][carVehcom_7][x]);
        cache_get_value_name_int(x, "vehcom_8", gPlayerCars[playerid][carVehcom_8][x]);
        cache_get_value_name_int(x, "vehcom_9", gPlayerCars[playerid][carVehcom_9][x]);
        cache_get_value_name_int(x, "vehcom_10", gPlayerCars[playerid][carVehcom_10][x]);
        cache_get_value_name_int(x, "vehcom_11", gPlayerCars[playerid][carVehcom_11][x]);
        cache_get_value_name_int(x, "vehcom_12", gPlayerCars[playerid][carVehcom_12][x]);
        cache_get_value_name_int(x, "vehcom_13", gPlayerCars[playerid][carVehcom_13][x]);
        cache_get_value_name_int(x, "vehcom_14", gPlayerCars[playerid][carVehcom_14][x]);
        cache_get_value_name_int(x, "open", gPlayerCars[playerid][carOpen][x]);
        cache_get_value_name_int(x, "kanistra", gPlayerCars[playerid][carKanistra][x]);
        cache_get_value_name_int(x, "narko", gPlayerCars[playerid][carNarko][x]);
        cache_get_value_name_int(x, "mats", gPlayerCars[playerid][carMats][x]);
        cache_get_value_name_int(x, "deagle", gPlayerCars[playerid][carDeagle][x]);
        cache_get_value_name_int(x, "ak47", gPlayerCars[playerid][carAK47][x]);
        cache_get_value_name_int(x, "m4", gPlayerCars[playerid][carM4][x]);
        cache_get_value_name_int(x, "shot", gPlayerCars[playerid][carShot][x]);

		cache_get_value_name(x, "number", NumberVehicle[playerid][x], 32);

		cache_get_value_name_int(x, "paintjob", gPlayerCars[playerid][carPaintJob][x]);

		cache_get_value_name_int(x, "perf_engine_1", gPlayerCars[playerid][carPEngine_1][x]);
        cache_get_value_name_int(x, "perf_engine_2", gPlayerCars[playerid][carPEngine_2][x]);
        cache_get_value_name_int(x, "perf_engine_3", gPlayerCars[playerid][carPEngine_3][x]);
        cache_get_value_name_int(x, "perf_engine_4", gPlayerCars[playerid][carPEngine_4][x]);
        cache_get_value_name_int(x, "perf_engine_5", gPlayerCars[playerid][carPEngine_5][x]);

        cache_get_value_name_int(x, "perf_brake_1", gPlayerCars[playerid][carPBrake_1][x]);
        cache_get_value_name_int(x, "perf_brake_2", gPlayerCars[playerid][carPBrake_2][x]);
        cache_get_value_name_int(x, "perf_brake_3", gPlayerCars[playerid][carPBrake_3][x]);
        cache_get_value_name_int(x, "perf_brake_4", gPlayerCars[playerid][carPBrake_4][x]);
        cache_get_value_name_int(x, "perf_brake_5", gPlayerCars[playerid][carPBrake_5][x]);
	}
	if(PI[playerid][pHouse] && gHouses[PI[playerid][pHouse]][houseImprove][2]){
		loading_cars(playerid,0);
		loading_cars(playerid,1);
	}
	else if(PI[playerid][pHouse] && !gHouses[PI[playerid][pHouse]][houseImprove][2]){
		loading_cars(playerid,0);
	}
	else if (PI[playerid][pRoom]){
		loading_cars(playerid,0);
	}
	return 1;
}
CB: friend_detectd(playerid,const inputtext[]) {
	new rows;
	rows = cache_num_rows();

	if(!rows) {
		ErrorMessage(playerid,"Данного аккаунта не существует");
        D(playerid,D_REG_FRIEND,DSI, ""P"Регистрация", ""W"Введите "GREEN"ник"W" игрока, пригласившего Вас на сервер.\n\n\
				При достижении 4 уровня он получит "P"награду", "Далее", "Пропуск");
		return true;
	}
 	strmid(PI[playerid][pDrug], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
	return true;
}
CB: change_name(playerid,const name[]) {
	new rows;
	rows = cache_num_rows();
	if(rows) return ErrorMessage(playerid, "Указанный ник занят");
	else {
        format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",name);
		new string[128];
		SendOk(playerid, "Заявка на смену ника отправлена администрации");
		format(string, 127, "[A] %s (ID: %i) просит сменить логин на %s", player_name[playerid], playerid, name);
		AdmMSG(COLOR_ISPOLZUY, string, 5);

	}
	return 1;
}
stock acc_int_strcat(query[], len, const name[], number) {
	new string[90];
	format(string, sizeof(string), "`%s` = '%d',",name, number);
	strcat(query, string, len);
	return true;
}
stock acc_str_strcat(query[], len, const name[], const str[]) {
	new string[100];
	format(string, 100, "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}
stock SaveAccount(playerid)
{
	if(!TI[playerid][tLogin]) return false;
	else
	{
	    if(GetPVarInt(playerid,"player_save")) return false;
	    SetPVarInt(playerid,"player_save",1);

		new weapons[54],ammos[54], skills[33], query[3100],str[100];

		format(weapons,sizeof(weapons),"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",GunPlayer[playerid][0][0], GunPlayer[playerid][1][0], GunPlayer[playerid][2][0],
			GunPlayer[playerid][3][0],GunPlayer[playerid][4][0], GunPlayer[playerid][5][0], GunPlayer[playerid][6][0], GunPlayer[playerid][7][0], GunPlayer[playerid][8][0],
			GunPlayer[playerid][9][0],GunPlayer[playerid][10][0]);

		format(ammos,sizeof(ammos),"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",GunPlayer[playerid][0][1], GunPlayer[playerid][1][1], GunPlayer[playerid][2][1],
			GunPlayer[playerid][3][1],GunPlayer[playerid][4][1], GunPlayer[playerid][5][1], GunPlayer[playerid][6][1], GunPlayer[playerid][7][1], GunPlayer[playerid][8][1],
			GunPlayer[playerid][9][1],GunPlayer[playerid][10][1]);

		format(skills,sizeof(skills),"%i, %i, %i, %i, %i, %i, %i",PI[playerid][pGunSkill][0], PI[playerid][pGunSkill][1], PI[playerid][pGunSkill][2], PI[playerid][pGunSkill][3],
			PI[playerid][pGunSkill][4], PI[playerid][pGunSkill][5]);

	    query = "UPDATE `"TABLE_ACCOUNTS"` SET ";

	    format(str,sizeof(str),"`pLevel`= '%i',",PI[playerid][pLevel]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pExp`= '%i',",PI[playerid][pExp]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pJail`= '%i',",PI[playerid][pJail]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pAdmin`= '%i',",PI[playerid][pAdminLevel]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pvIp`= '%s',",player_ip[playerid]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pHP`= '%f',",GetPlayerHP(playerid)),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`house`= '%i',",PI[playerid][pHouse]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`tempkey`= '%i',",PI[playerid][pTempKey]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`bussiness`= '%i',",PI[playerid][pBusiness]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`hotelroom`= '%i',",PI[playerid][pRoom]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pMats`= '%i',",PI[playerid][pMats]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`mute`= '%i',",PI[playerid][pMute]),strcat(query,str,sizeof(query));
	 	format(str,sizeof(str),"`pJailTime`= '%i',",PI[playerid][pJailTime]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pDrugs`= '%i',",PI[playerid][pDrugs]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pLeader`= '%i',",PI[playerid][pLeader]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pMember`= '%i',",PI[playerid][pMember]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pRank`= '%i',",PI[playerid][pRank]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pJob`= '%i',",PI[playerid][pJob]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pModel`= '%i',",PI[playerid][pFracSkin]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`Skin`= '%i',",PI[playerid][pSkin]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pZakonp`= '%i',",PI[playerid][pZakonp]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pBank`= '%i',",PI[playerid][pBank]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pMobile`= '%i',",PI[playerid][pMobile]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pSearch`= '%i',",PI[playerid][pSearch]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pGunSkills`= '%s',",skills),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pPlayTime_one`= '%i',",PI[playerid][pPlayTime][0]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pPlayTime_two`= '%i',",PI[playerid][pPlayTime][1]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pAccusedof`= '%s',",PI[playerid][pAccusedof]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pVictim`= '%s',",PI[playerid][pVictim]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pHospital`= '%i',",PI[playerid][pHospital]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pWorms`= '%i',",PI[playerid][pWorms]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pFish`= '%f',",PI[playerid][pFish]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`family`= '%i',",PI[playerid][pFamily]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`progress`= '%i',",PI[playerid][pProgress]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`spawn`= '%i',",PI[playerid][pSpawn]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`salary`= '%i',",PI[playerid][pSalary]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`MedHeal`= '%i',",PI[playerid][pMedHeal]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`Advert`= '%i',",PI[playerid][pAdvert]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pWeapons`= '%s',",weapons),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pAmmos`= '%s',",ammos),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`FracDuty`= '%i',",start_work[playerid]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pSatiety`= '%i',",PI[playerid][pSatiety]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pSnow`= '%f',",PI[playerid][pSnow]),strcat(query,str,sizeof(query));

	    format(str,sizeof(str),"`pAsk`= '%i',",PI[playerid][pAsk]),strcat(query,str,sizeof(query));
	    format(str,sizeof(str),"`pAskmute`= '%i'",PI[playerid][pAskmute]),strcat(query,str,sizeof(query));

		//strdel(query, strlen(query)-1, strlen(query));

		mysql_format(connects, query,sizeof(query),"%s WHERE `Name`='%s'",query, GetName(playerid));
		mysql_tquery(connects, query, "", "");

		DeletePVar(playerid, "player_save");
	}
	return true;
}

stock save_car(i,ID) {
    new temp[0x9e];
	new query[3300];
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET ");
	format(temp,sizeof(temp),"`model`= '%i',",gPlayerCars[i][carModel][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`color_one`= '%i',",gPlayerCars[i][carColor_one][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`color_two`= '%i',",gPlayerCars[i][carColor_two][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drived`= '%f',",gPlayerCars[i][carDrived][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`fuel`= '%f',",gPlayerCars[i][carFuel][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_1`= '%i',",gPlayerCars[i][carVehcom_1][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_2`= '%i',",gPlayerCars[i][carVehcom_2][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_3`= '%i',",gPlayerCars[i][carVehcom_3][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_4`= '%i',",gPlayerCars[i][carVehcom_4][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_5`= '%i',",gPlayerCars[i][carVehcom_5][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_6`= '%i',",gPlayerCars[i][carVehcom_6][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_7`= '%i',",gPlayerCars[i][carVehcom_7][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_8`= '%i',",gPlayerCars[i][carVehcom_8][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_9`= '%i',",gPlayerCars[i][carVehcom_9][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_10`= '%i',",gPlayerCars[i][carVehcom_10][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_11`= '%i',",gPlayerCars[i][carVehcom_11][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_12`= '%i',",gPlayerCars[i][carVehcom_12][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_13`= '%i',",gPlayerCars[i][carVehcom_13][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_14`= '%i',",gPlayerCars[i][carVehcom_14][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`open`= '%i',",gPlayerCars[i][carOpen][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`kanistra`= '%i',",gPlayerCars[i][carKanistra][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`narko`= '%i',",gPlayerCars[i][carNarko][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`mats`= '%i',",gPlayerCars[i][carMats][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`deagle`= '%i',",gPlayerCars[i][carDeagle][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`ak47`= '%i',",gPlayerCars[i][carAK47][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`m4`= '%i',",gPlayerCars[i][carM4][ID]), 						strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`shot`= '%i',",gPlayerCars[i][carShot][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`paintjob`= '%i',",gPlayerCars[i][carPaintJob][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`number`= '%s'",NumberVehicle[i][ID]), 						strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp)," WHERE id = '%i'",gPlayerCars[i][carID][ID]),					strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return true;
}
CB: reg_friend(playerid) {
	new rows;
	rows = cache_num_rows();
	new Nick[25];
	if(!rows) return 1;
	cache_get_value_name(0,"pDrug",Nick,25);
	new id = GetPlayerID(Nick);
	if(IsPlayerConnected(id) && TI[id][tLogin]) {
		GiveMoney(id,50000,"за друга");
		SendClientMessage(id,CGOLD,"Вы получили $50.000 за приглашенного друга, достигшего 4 уровня");
	}
	else {
		new query[156];
		format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pCash = pCash + 50000 WHERE Name = '%s'",Nick);
		mysql_tquery(connects,query);
	}
	return 1;
}
CB: player_register(playerid) {
	SetPlayerDrunkLevel(playerid, 0);
	SendClientMessage(playerid, COLOR_BLUE, "Поздравляем Вас с успешной регистрацией!");
	StopAudioStreamForPlayer(playerid);
	for(new i = 0; i < 2; i++) {
	    new query[128];
		mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%s')" ,player_name[playerid]);
  		mysql_tquery(connects, query, "", "");
	}
	new plstream = SvCreateDLStreamAtPlayer(40.0, SV_INFINITY, playerid, 0xff0000ff, "L");
	lstream[playerid] = plstream;

	if (!SvGetVersion(playerid))
	{
	//	SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}У вас не установлен плагин {ae433d}"MicroName" Voice!");
	//	SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}Установить можете его с нашей группы!");
	}
	else if (!SvHasMicro(playerid))
	{
	//	SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}У вас отсутствует микрофон!");
	//	SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}Проверьте правильность подключения и перезайдите!");
	}
	else if (lstream[playerid] == plstream)
	{
		// red color
//		SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}Голосовой чат успешно подключен! Для активации зажмите клавишу {AE433D}'Z'.");

		if (gstream) SvAttachListenerToStream(gstream, playerid);

		SvAddKey(playerid, 0x42);
		SvAddKey(playerid, 0x49);
		SvAddKey(playerid, 0x52);
		SvAddKey(playerid, 0x5A);
	}
	PlayerRegister(playerid);
	return 1;
}
stock LoadTuning(c,carid,idx) {
    if(gPlayerCars[c][carVehcom_1][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_1][idx]);
	if(gPlayerCars[c][carVehcom_2][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_2][idx]);
	if(gPlayerCars[c][carVehcom_3][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_3][idx]);
	if(gPlayerCars[c][carVehcom_4][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_4][idx]);
	if(gPlayerCars[c][carVehcom_5][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_5][idx]);
	if(gPlayerCars[c][carVehcom_6][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_6][idx]);
	if(gPlayerCars[c][carVehcom_7][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_7][idx]);
	if(gPlayerCars[c][carVehcom_8][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_8][idx]);
	if(gPlayerCars[c][carVehcom_9][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_9][idx]);
	if(gPlayerCars[c][carVehcom_10][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_10][idx]);
	if(gPlayerCars[c][carVehcom_11][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_11][idx]);
	if(gPlayerCars[c][carVehcom_12][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_12][idx]);
	if(gPlayerCars[c][carVehcom_13][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_13][idx]);
	if(gPlayerCars[c][carVehcom_14][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_14][idx]);
	if(gPlayerCars[c][carPaintJob][idx] != -1) ChangeVehiclePaintjob(carid,gPlayerCars[c][carPaintJob][idx]);
}
stock SaveTuning(playerid,i,idx) {
	gPlayerCars[playerid][carVehcom_1][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_SPOILER);
	gPlayerCars[playerid][carVehcom_2][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_HOOD);
	gPlayerCars[playerid][carVehcom_3][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_ROOF);
	gPlayerCars[playerid][carVehcom_4][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_SIDESKIRT);
	gPlayerCars[playerid][carVehcom_5][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_LAMPS);
	gPlayerCars[playerid][carVehcom_6][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_NITRO);
	gPlayerCars[playerid][carVehcom_7][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_EXHAUST);
	gPlayerCars[playerid][carVehcom_8][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
	gPlayerCars[playerid][carVehcom_9][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_STEREO);
	gPlayerCars[playerid][carVehcom_10][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_HYDRAULICS);
	gPlayerCars[playerid][carVehcom_11][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_FRONT_BUMPER);
	gPlayerCars[playerid][carVehcom_12][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_REAR_BUMPER);
	gPlayerCars[playerid][carVehcom_13][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_RIGHT);
	gPlayerCars[playerid][carVehcom_14][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_LEFT);
}
stock CheckTuning(playerid,idx,model) {
	if(gPlayerCars[playerid][carVehcom_1][idx] == model ||
	gPlayerCars[playerid][carVehcom_2][idx] == model ||
	gPlayerCars[playerid][carVehcom_3][idx] == model ||
	gPlayerCars[playerid][carVehcom_4][idx] == model ||
	gPlayerCars[playerid][carVehcom_5][idx] == model ||
	gPlayerCars[playerid][carVehcom_6][idx] == model ||
	gPlayerCars[playerid][carVehcom_7][idx] == model ||
	gPlayerCars[playerid][carVehcom_8][idx] == model ||
	gPlayerCars[playerid][carVehcom_9][idx] == model ||
	gPlayerCars[playerid][carVehcom_10][idx] == model ||
	gPlayerCars[playerid][carVehcom_11][idx] == model ||
	gPlayerCars[playerid][carVehcom_12][idx] == model ||
	gPlayerCars[playerid][carVehcom_13][idx] == model ||
	gPlayerCars[playerid][carVehcom_14][idx] == model) return 1;
	else return 0;
}
stock RemoveTuning(c,carid,car) {
    if(gPlayerCars[c][carVehcom_1][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_1][car]), gPlayerCars[c][carVehcom_1][car] = 0;
	if(gPlayerCars[c][carVehcom_2][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_2][car]), gPlayerCars[c][carVehcom_2][car] = 0;
	if(gPlayerCars[c][carVehcom_3][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_3][car]), gPlayerCars[c][carVehcom_3][car] = 0;
	if(gPlayerCars[c][carVehcom_4][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_4][car]), gPlayerCars[c][carVehcom_4][car] = 0;
	if(gPlayerCars[c][carVehcom_5][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_5][car]), gPlayerCars[c][carVehcom_5][car] = 0;
	if(gPlayerCars[c][carVehcom_6][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_6][car]), gPlayerCars[c][carVehcom_6][car] = 0;
	if(gPlayerCars[c][carVehcom_7][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_7][car]), gPlayerCars[c][carVehcom_7][car] = 0;
	if(gPlayerCars[c][carVehcom_8][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_8][car]), gPlayerCars[c][carVehcom_8][car] = 0;
	if(gPlayerCars[c][carVehcom_9][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_9][car]), gPlayerCars[c][carVehcom_9][car] = 0;
	if(gPlayerCars[c][carVehcom_10][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_10][car]), gPlayerCars[c][carVehcom_10][car] = 0;
	if(gPlayerCars[c][carVehcom_11][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_11][car]), gPlayerCars[c][carVehcom_11][car] = 0;
	if(gPlayerCars[c][carVehcom_12][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_12][car]), gPlayerCars[c][carVehcom_12][car] = 0;
	if(gPlayerCars[c][carVehcom_13][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_13][car]), gPlayerCars[c][carVehcom_13][car] = 0;
	if(gPlayerCars[c][carVehcom_14][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_14][car]), gPlayerCars[c][carVehcom_14][car] = 0;
	if(gPlayerCars[c][carPaintJob][car] != -1) ChangeVehiclePaintjob(carid,-1); gPlayerCars[c][carPaintJob][car] = -1;
	if(gPlayerCars[c][carPEngine_1][car]!=0) gPlayerCars[c][carPEngine_1][car] = 0;
	if(gPlayerCars[c][carPEngine_2][car]!=0) gPlayerCars[c][carPEngine_2][car] = 0;
	if(gPlayerCars[c][carPEngine_3][car]!=0) gPlayerCars[c][carPEngine_3][car] = 0;
	if(gPlayerCars[c][carPEngine_4][car]!=0) gPlayerCars[c][carPEngine_4][car] = 0;
	if(gPlayerCars[c][carPEngine_5][car]!=0) gPlayerCars[c][carPEngine_5][car] = 0;
	if(gPlayerCars[c][carPBrake_1][car]!=0) gPlayerCars[c][carPBrake_1][car] = 0;
	if(gPlayerCars[c][carPBrake_2][car]!=0) gPlayerCars[c][carPBrake_2][car] = 0;
	if(gPlayerCars[c][carPBrake_3][car]!=0) gPlayerCars[c][carPBrake_3][car] = 0;
	if(gPlayerCars[c][carPBrake_4][car]!=0) gPlayerCars[c][carPBrake_4][car] = 0;
	if(gPlayerCars[c][carPBrake_5][car]!=0) gPlayerCars[c][carPBrake_5][car] = 0;
}
stock AddCheater(playerid) {
	new str[10];
 	if(addchet[playerid]==0) addchet[playerid]=1;
	else addchet[playerid]=2;
    for(new i;i<10;i++) {
	   if(ChetInfo[i][cheatid1] == playerid)return false;
	}
	ChetInfo[Cheat1][cheatid1]=playerid;
	format(str, sizeof(str), "%d", playerid);
	TextDrawSetString(CheatText[Cheat1], str);
	Cheat1 ++;
	if(Cheat1 > 9) Cheat1 = 0;
	return 1;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	return EditObject(playerid,objectid);
}
public OnPlayerEditDynamicObject( playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz )
{
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	
	if(EdittingATM[playerid] != 0)
	{
		if(response == EDIT_RESPONSE_FINAL)
		{
			new atmID = EdittingATM[playerid];
			ATMData[atmID][ATM_Pos][0]   = x;
			ATMData[atmID][ATM_Pos][1]   = y;
			ATMData[atmID][ATM_Pos][2]   = z;
			ATMData[atmID][ATM_Pos][3]   = rx;
			ATMData[atmID][ATM_Pos][4]   = ry;
			ATMData[atmID][ATM_Pos][5]   = rz;
			
			SaveATM(atmID);
			
			DestroyDynamicObject(ATMData[atmID][atm_Object]);

			ATMData[atmID][atm_Object] = CreateDynamicObject(2942, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2],
				ATMData[atmID][ATM_Pos][3], ATMData[atmID][ATM_Pos][4], ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);
			
			UpdateATMLabel(atmID);
			
			new string[1024];
			format(string, sizeof(string), "Вы изменили позицию ATM номер %d", atmID);
			SendOk(playerid, string);

			EdittingATM[playerid] = 0;
			return 1;
		}
		/*
	    else if(response == EDIT_RESPONSE_UPDATE)
		{
		    new atmID = EdittingATM[playerid];
		    
	        SetObjectPos(ATMData[atmID][atm_Object], x, y, z);
	        SetObjectRot(ATMData[atmID][atm_Object], rx, ry, rz);
	    }
	    */
		if (response == EDIT_RESPONSE_CANCEL)
		{
			new atmID = EdittingATM[playerid];

			SetTimerEx("SetObjectOldPos", 300, false, "dffffff", ATMData[atmID][atm_Object], ATMData[objectid][ATM_Pos][0], ATMData[objectid][ATM_Pos][1],
				ATMData[objectid][ATM_Pos][2], ATMData[objectid][ATM_Pos][3], ATMData[objectid][ATM_Pos][4], ATMData[objectid][ATM_Pos][5]);

			EdittingATM[playerid] = 0;
		}
	}
	else if(EdittingMoved[playerid] != 0)
	{
		if(response == EDIT_RESPONSE_FINAL)
		{
			new movedID = EdittingMoved[playerid], modelid = EdittingMovedModel[playerid];
			
			moved_info[movedID][moved_modelid]   = modelid;
			
			moved_info[movedID][movedPosX]   = x;
			moved_info[movedID][movedPosY]   = y;
			moved_info[movedID][movedPosZ]   = z;
			
			moved_info[movedID][movedPosRotationX]   = rx;
			moved_info[movedID][movedPosRotationY]   = ry;
			moved_info[movedID][movedPosRotationZ]   = rz;
			
			moved_info[movedID][moved_vw]   = GetPlayerVirtualWorld(playerid);

			new string[1024];
			format(string, sizeof(string), "Вы изменили позицию Moved: №%d", movedID);
			SendOk(playerid, string);
			
			print(" ");
			printf("Позиция местоположения объекта ворот: №%d", movedID);
			print(" ");
			printf("CreateDynamicObject(%d, %f, %f, %f, %f, %f, %f, %d);", modelid, x, y, z, rx, ry, rz, GetPlayerVirtualWorld(playerid));
			print(" ");
			printf("Позиция местоположения открытия ворот: №%d", movedID);
			print(" ");
			printf("CreateDynamicObject(%d, %f, %f, %f, %f, %f, %f, %d);", modelid, x, y, z, rx, ry+360, rz, GetPlayerVirtualWorld(playerid));
			print(" ");

			DestroyDynamicObject(moved_info[movedID][moved_id]);
			DestroyDynamic3DTextLabel(moved_text[movedID]);
			
			moved_info[movedID][moved_id] = CreateDynamicObject(moved_info[movedID][moved_modelid],moved_info[movedID][movedPosX],moved_info[movedID][movedPosY],
				moved_info[movedID][movedPosZ],moved_info[movedID][movedPosRotationX],moved_info[movedID][movedPosRotationY],moved_info[movedID][movedPosRotationZ],
				moved_info[movedID][moved_vw]);

			switch(movedID)
			{
			    //4,8,21,26,32,38..41,53 - Скрытые объекты

			    //0,3,17,27,33,34,(35 почти) - Не видны тексты!!!

			    case 17: moved_text[movedID] = CreateDynamic3DTextLabel(""P"'H'"G" если в машине\n"P"'ALT'"G" если пешком", -1,moved_info[movedID][movedPosX],
					moved_info[movedID][movedPosY],moved_info[movedID][movedPosZ]-10.0, 10.0,
					INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[movedID][moved_vw], -1);

			    ////////////////////////////////////////////////////////////////////////////////////////////

				case 0,22..24,29,34,36..40: moved_text[movedID] = CreateDynamic3DTextLabel(""G"Взаимодействие: "P"'H'", -1, moved_info[movedID][movedPosX],
					moved_info[movedID][movedPosY],moved_info[movedID][movedPosZ]+0.8, 10.0,
					INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[movedID][moved_vw], -1);

				case 1,2,3,19,21,33,45..48,50..53: moved_text[movedID] = CreateDynamic3DTextLabel(""G"Взаимодействие: "P"'ALT'", -1, moved_info[movedID][movedPosX],
					moved_info[movedID][movedPosY],moved_info[movedID][movedPosZ]+0.8, 10.0,
					INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[movedID][moved_vw], -1);

				case 5..16,18,20,25,27,28,30,31,35,42..44,49: moved_text[movedID] = CreateDynamic3DTextLabel(""P"'H'"G" если в машине\n"P"'ALT'"G" если пешком", -1,
					moved_info[movedID][movedPosX],moved_info[movedID][movedPosY],moved_info[movedID][movedPosZ]+0.8, 10.0,
					INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, moved_info[movedID][moved_vw], -1);
			}
			EdittingMoved[playerid] = EdittingMovedModel[playerid] = 0;
			return 1;
		}
		/*
		else if(response == EDIT_RESPONSE_UPDATE)
		{
		    new movedID = EdittingMoved[playerid];
		    
	        SetObjectPos(moved_info[movedID][moved_modelid], x, y, z);
	        SetObjectRot(moved_info[movedID][moved_modelid], rx, ry, rz);
	    }
	    */
		if (response == EDIT_RESPONSE_CANCEL)
		{
			new movedID = EdittingMoved[playerid];

			SetTimerEx("SetObjectOldPos", 300, false, "dffffffd", moved_info[movedID][moved_modelid], moved_info[movedID][movedPosX],moved_info[movedID][movedPosY],
				moved_info[movedID][movedPosZ], moved_info[movedID][movedPosRotationX],moved_info[movedID][movedPosRotationY],moved_info[movedID][movedPosRotationZ]);

			EdittingMoved[playerid] = EdittingMovedModel[playerid] = 0;
		}
    }
    /*
	else if(response)
	{
	    if(EdittingATM[playerid] != 0)
		{
		    new atmID = EdittingATM[playerid];
		    
		    SetDynamicObjectPos(ATMData[atmID][atm_Object],ATMData[objectid][ATM_Pos][0],ATMData[objectid][ATM_Pos][1],ATMData[objectid][ATM_Pos][2]);
			SetDynamicObjectRot(ATMData[atmID][atm_Object],ATMData[objectid][ATM_Pos][3], ATMData[objectid][ATM_Pos][4], ATMData[objectid][ATM_Pos][5]);
		    
			EdittingATM[playerid] = 0;
		}
		else if(EdittingMoved[playerid] != 0)
		{
		    new movedID = EdittingMoved[playerid];
		    
		    SetDynamicObjectPos(moved_info[movedID][moved_modelid],moved_info[movedID][movedPosX],moved_info[movedID][movedPosY],moved_info[movedID][movedPosZ]);
		    
			SetDynamicObjectRot(moved_info[movedID][moved_modelid],moved_info[movedID][movedPosRotationX],moved_info[movedID][movedPosRotationY],
				moved_info[movedID][movedPosRotationZ]);
		    
			EdittingMoved[playerid] = EdittingMovedModel[playerid] = 0;
		}
		else
		{
			SetDynamicObjectPos(objectid,x, y, z), SetDynamicObjectRot(objectid,rx,ry,rz);
		}
	}
	*/
	return true;
}
CB: SetObjectOldPos(objectid, Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ) {
	SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	SetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	return 1;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z) return EditDynamicObject(playerid,objectid);
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z) {
	return 0;
}
public OnTrailerUpdate(playerid, vehicleid) {
	return 1;
}
stock IsAGreenZone(playerid) {
	for(new i = 1; i <= TOTALZONE; i++) if(IsPlayerInRangeOfPoint(playerid, GREENZONE[i][grD], GREENZONE[i][grX],GREENZONE[i][grY],GREENZONE[i][grZ])) return true;
	return false;
}
stock ShowStats(playerid,targetid,idx) {
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return true;
	new jtext[28], string[1250];
	switch(PI[targetid][pJob]) {
		case 1: jtext = "Автобусник";
		case 2: jtext = "Механик";
		case 3: jtext = "Развозчик продуктов/топлива";
		case 4: jtext = "Развозчик еды";
		case 5: jtext = "Мойщик дорог";
		case 6: jtext = "Газонокосильщик";
		default: jtext = "Безработный";
	}
	new str[128];
	format(str,128,""P"Имя:\t\t\t\t\t"YELLOW"%s",player_name[targetid]), strcat(string,str);
	format(str,128,"\n\n"P"Уровень:\t\t\t\t"W"%i",PI[targetid][pLevel]), strcat(string,str);
	format(str,128,"\n"P"Очки опыта:\t\t\t\t"W"%i/%i",PI[targetid][pExp], (PI[targetid][pLevel])*6), strcat(string,str);
	format(str,128,"\n"P"Предупреждений:\t\t\t"W"%i",PI[targetid][pWarns]), strcat(string,str);
	format(str,128,"\n\n"P"Пол:\t\t\t\t\t"W"%s",(PI[targetid][pSex] == 1) ? ("Мужчина") : ("Женщина")), strcat(string,str);
	format(str,128,"\n"P"Супруг(а):\t\t\t\t"W"%s",PI[targetid][pMarried]), strcat(string,str);
	if(PI[targetid][pPhone] == 0) strcat(string,"\n\n"P"Номер телефона:\t\t\t"W"Отсутствует");
	else format(str,128,"\n\n"P"Номер телефона:\t\t\t"W"%i",PI[targetid][pPhone]), strcat(string,str);
	format(str,128,"\n"P"Мобильный счёт:\t\t\t"W"%i",PI[targetid][pMobile]), strcat(string,str);
	
	format(str,128,"\n\n"P"Законопослушность:\t\t\t"W"%i",PI[targetid][pZakonp]), strcat(string,str);
	format(str,128,"\n"P"Преступлений:\t\t\t"W"%i",PI[targetid][pCrimes]), strcat(string,str);
	format(str,128,"\n"P"Арестов:\t\t\t\t"W"%i",PI[targetid][pArrested]), strcat(string,str);
	format(str,128,"\n"P"Уровень розыска:\t\t\t"W"%i",PI[targetid][pSearch]), strcat(string,str);
	format(str,128,"\n"P"Зависимость:\t\t\t\t"W"%i",PI[targetid][pAddiction]), strcat(string,str);
	format(str,128,"\n"P"Наркотики:\t\t\t\t"W"%i",PI[targetid][pDrugs]), strcat(string,str);
	format(str,128,"\n"P"Боеприпасы:\t\t\t\t"W"%i",PI[targetid][pMats]), strcat(string,str);
	format(str,128,"\n"P"Аптечки:\t\t\t\t"W"%i",PI[targetid][pMedKit]), strcat(string,str);
	format(str,128,"\n"P"Маски:\t\t\t\t\t"W"%i",PI[targetid][pMask]), strcat(string,str);
	format(str,128,"\n"P"Отмычки:\t\t\t\t"W"%i",PI[targetid][pJemmy]), strcat(string,str);
	format(str,128,"\n"P"Материалов:\t\t\t\t"W"%i",PI[targetid][pMats]), strcat(string,str);

	if(GetTeamID(targetid)) format(str,128,"\n\n"P"Организация:\t\t\t\t"W"%s",FI[GetTeamID(targetid)][fName]), strcat(string,str);
	else strcat(string,"\n\n"P"Организация:\t\t\t\t"W"Отсутствует");
	if(idx) format(str,128,"\n"P"Должность:\t\t\t\t"W"%s (%d)",GetRankName(GetTeamID(targetid),PI[targetid][pRank]),PI[targetid][pRank]), strcat(string,str);
	else format(str,128,"\n"P"Должность:\t\t\t\t"W"%s",GetRankName(GetTeamID(targetid),PI[targetid][pRank])), strcat(string,str);

	if(PI[targetid][pHouse]) {
		new classname[15];
		switch(gHouses[PI[targetid][pHouse]][houseClass]) {
			case 0: classname = "Эконом";
			case 1: classname = "Cредний";
			case 2: classname = "Элитный";
			case 3: classname = "Особняк";
		}	
		format(str,128,"\n\n"P"Дом:\t\t\t\t\t"W"№%d (%s)",gHouses[PI[targetid][pHouse]][houseID],classname), strcat(string,str);
	}
	else strcat(string,"\n\n"P"Дом:\t\t\t\t\t"W"Отсутствует");
	if(PI[targetid][pBusiness]) format(str,128,"\n"P"Бизнес:\t\t\t\t"W"%s (%s)",gBusiness[PI[targetid][pBusiness]][bizzName],gBusinessTypeName[gBusiness[PI[targetid][pBusiness]][bizzType]-1]), strcat(string,str);
	else strcat(string,"\n"P"Бизнес:\t\t\t\t"W"Отсутствует");
	if(PI[targetid][pHotel]) format(str,128,"\n"P"Отель:\t\t\t\t"W"%s",gHotels[PI[targetid][pHotel]-1][hotelName]), strcat(string,str);
	else strcat(string,"\n"P"Отель:\t\t\t\t\t"W"Отсутствует");
	if(PI[targetid][pAirport]) format(str,128,"\n"P"Аэропорт:\t\t\t\t"W"%s",gAirs[PI[targetid][pAirport]-1][airName]), strcat(string,str);
	else strcat(string,"\n"P"Аэропорт:\t\t\t\t"W"Отсутствует");

	format(str,128,"\n\n"P"Работа:\t\t\t\t"W"%s",jtext), strcat(string,str);
	if(idx) {
	    format(str,128,"\n"P"Банк:\t\t\t\t\t"W"%i",PI[targetid][pBank]), strcat(string,str);
	    format(str,128,"\n"P"На руках:\t\t\t\t"W"%i",PI[targetid][pCash]), strcat(string,str);
	    format(str,128,"\n"P"Скин:\t\t\t\t\t"W"%i",PI[targetid][pSkin]), strcat(string,str);
	    format(str,128,"\n"P"СкинФр:\t\t\t\t"W"%i",PI[targetid][pFracSkin]), strcat(string,str);
	    format(str,128,"\n"P"Дата регистрации:\t\t\t"W"%s",PI[targetid][pDataReg]), strcat(string,str);
	    format(str,128,"\n"P"Google Authenticator:\t\t\t"W"%s",(PI[targetid][pGoogleSec] == 1) ? ("Включен") : ("Отключен")), strcat(string,str);
	}
	strcat(string,"\n\n"ORANGE"Информацию о проекте Вы можете узнать по адресу:");
	strcat(string,"\n\t\t\t"ORANGE""NameSite"");
	return D(playerid,DIALOG_NONE,DSM, ""P"Статистика",string, "Закрыть", "");
}

stock UpdateSkladFrakGang() {
    ClearTotalGz();
	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == fBALLAS) TotalGZ[0]++;
		if(GZInfo[i][gFrakVlad] == fVAGOS) TotalGZ[1]++;
		if(GZInfo[i][gFrakVlad] == fGROVE) TotalGZ[2]++;
		if(GZInfo[i][gFrakVlad] == fAZTEC) TotalGZ[4]++;
		if(GZInfo[i][gFrakVlad] == fRIFA) TotalGZ[3]++;
	}
	new string[250];
	format(string,sizeof(string),"Склад банды {8813E7}Ballas"W"\n\n- Территорий: "P"%d\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[0],FI[fBALLAS][fMats],FI[fBALLAS][fDrugs],FI[fBALLAS][fBank],TotalGZ[0]*65); UpdateDynamic3DTextLabelText(gMenu[0],-1,string);
	format(string,sizeof(string),"Склад банды {DBD604}Vagos"W"\n\n- Территорий: "P"%d\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[1],FI[fVAGOS][fMats],FI[fVAGOS][fDrugs],FI[fVAGOS][fBank],TotalGZ[1]*65); UpdateDynamic3DTextLabelText(gMenu[1],-1,string);
	format(string,sizeof(string),"Склад банды {009F00}Grove"W"\n\n- Территорий: "P"%d\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[2],FI[fGROVE][fMats],FI[fGROVE][fDrugs],FI[fGROVE][fBank],TotalGZ[2]*65); UpdateDynamic3DTextLabelText(gMenu[2],-1,string);
	format(string,sizeof(string),"Склад банды {01FCFF}Aztecas"W"\n\n- Территорий: "P"%d\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[4],FI[fAZTEC][fMats],FI[fAZTEC][fDrugs],FI[fAZTEC][fBank],TotalGZ[4]*65); UpdateDynamic3DTextLabelText(gMenu[3],-1,string);
	format(string,sizeof(string),"Склад банды {83BFBF}Rifa"W"\n\n- Территорий: "P"%d\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке банды: "P"$%d\n"W"- Прибыль за час: "P"$%d",TotalGZ[3],FI[fRIFA][fMats],FI[fRIFA][fDrugs],FI[fRIFA][fBank],TotalGZ[3]*65); UpdateDynamic3DTextLabelText(gMenu[4],-1,string);


	format(string,sizeof(string),"Аптечка банды {8813E7}Ballas"W"\nДоступно аптечек: "P"%d",FI[fBALLAS][fHealth]); UpdateDynamic3DTextLabelText(gHealth[0],-1,string);
	format(string,sizeof(string),"Аптечка банды {DBD604}Vagos"W"\nДоступно аптечек: "P"%d",FI[fVAGOS][fHealth]); UpdateDynamic3DTextLabelText(gHealth[1],-1,string);
	format(string,sizeof(string),"Аптечка банды {009F00}Grove"W"\nДоступно аптечек: "P"%d",FI[fGROVE][fHealth]); UpdateDynamic3DTextLabelText(gHealth[2],-1,string);
	format(string,sizeof(string),"Аптечка банды {01FCFF}Aztecas"W"\nДоступно аптечек: "P"%d",FI[fAZTEC][fHealth]); UpdateDynamic3DTextLabelText(gHealth[3],-1,string);
	format(string,sizeof(string),"Аптечка банды {83BFBF}Rifa"W"\nДоступно аптечек: "P"%d",FI[fRIFA][fHealth]); UpdateDynamic3DTextLabelText(gHealth[4],-1,string);

	if(black_prods[9] > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(black_prods[9]-unix, year, month, day, hour, minute, second);
		static const f_str[] = "Владелец чёрного рынка\n\t{%06x}%s\n\n"W"Война возможна через: "P"%iд %iч %iм %iс";
		new str[sizeof(f_str) +1 + (-2 + 35)];
		format(str,sizeof(str),f_str,gFractionSpawn[black_prods[0]][fracColor] >>> 8,FI[black_prods[0]][fName],day-1, hour, minute, second);
		UpdateDynamic3DTextLabelText(black_market,-1,str);
	}
	else {
		static const f_str[] = "Владелец чёрного рынка\n\t{%06x}%s\n\n"YELLOW"Можно воевать за чёрный рынок";
		new str[sizeof(f_str) +1 + (-2 + 35)];
		format(str,sizeof(str),f_str,gFractionSpawn[black_prods[0]][fracColor] >>> 8,FI[black_prods[0]][fName]);
		UpdateDynamic3DTextLabelText(black_market,-1,str);
	}
	return 1;
}
stock UpdateSkladFrakMafia() {
	new string[250];
	format(string,sizeof(string),"Склад {DDA701}Итальянской мафии"W"\n\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке мафии: "P"$%d",FI[fLCN][fMats],FI[fLCN][fDrugs],FI[fLCN][fBank]); UpdateDynamic3DTextLabelText(mMenu[0],-1,string);
	format(string,sizeof(string),"Склад {FF0000}Японской мафии"W"\n\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке мафии: "P"$%d",FI[fYAKUZA][fMats],FI[fYAKUZA][fDrugs],FI[fYAKUZA][fBank]); UpdateDynamic3DTextLabelText(mMenu[1],-1,string);
	format(string,sizeof(string),"Склад {B4B5B7}Русской мафии"W"\n\n"W"- Боеприпасов: "P"%d\n"W"- Наркотиков: "P"%d\n"W"- В банке мафии: "P"$%d",FI[fRM][fMats],FI[fRM][fDrugs],FI[fRM][fBank]); UpdateDynamic3DTextLabelText(mMenu[2],-1,string);
	return 1;
}
stock ShowAdvertList(playerid) {
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	new adlist[2056];
	new data[3][30],index,string[128];
	format(data[0],30,"{FF6347}Отправление"W""), format(data[1],30,"{FFFF00}Проверка"W""), format(data[2],30,"{33AA33}Ожидание"W"");
	adlist = "№\tОтправитель\tСтатус\n";
	for(new i;i<MAX_ADVERT_COUNT;i++) {
		if(!gAdvert[i][adBusy]) {
		    format(string,sizeof(string),"%d\t-\t-\n",i+1);
		    strcat(adlist,string);
		}
		else {
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(string,sizeof(string),"%d\t%s\t%s\n",i+1,gAdvert[i][adSender],data[index]);
			strcat(adlist,string);
		}
	}
	D(playerid,D_ADVERT_LIST,DSTH,"Объявления",adlist,"Принять","Отмена");
	return 1;
}
stock WriteLog(type,const Names[],const NamePlayer[],const reason[]) {
   	//string_replace(reason, "'", ' ') ;
    new query[400];
    mysql_format(connects,query,sizeof(query),"INSERT INTO `adminlog` (`type`,`Name`,`NamePlayer`,`reason`,`date`,`time`) VALUES ('%d','%s','%s','%s',NOW(),NOW())",type,Names,NamePlayer,reason);
	mysql_tquery(connects, query, "","");
	return true;
}
stock FracLog(type,const Names[],const NamePlayer[],const reason[]) {
   	//string_replace(reason, "'", ' ') ;
    new query[400];
    mysql_format(connects,query,sizeof(query),"INSERT INTO `fraclog` (`type`,`Name`,`NameP`,`reason`,`date`) VALUES ('%d','%s','%s','%s',CURRENT_TIMESTAMP)",type,Names,NamePlayer,reason);
	mysql_tquery(connects, query, "","");
	return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
  	if(PI[playerid][pAdmin] != 0 && dostup[playerid] != 0)
  	{
  	    if(GetPVarInt(playerid,"selectpoint") > 0 && GetPVarInt(playerid,"selectpoint") < 3)
	  	{
			SetPVarInt(playerid,"selectpoint",2);
			
			SetPVarFloat(playerid,"selectpointX",fX);
			SetPVarFloat(playerid,"selectpointY",fY);
			SetPVarFloat(playerid,"selectpointZ",fZ);
			
			SetPlayerMapIcon(playerid,iconTaxi,fX,fY,fZ,0,COLOR_YELLOW,1);
			
			SendOk(playerid,"Вы установили "W"место назначения. "G"Чтобы подтвердить, нажмите "W"~k~~CONVERSATION_YES~");
		}
		else
		{
	  	    SetPlayerGPSInfo(playerid, G_POS_X, fX);
			SetPlayerGPSInfo(playerid, G_POS_Y, fY);
			SetPlayerGPSInfo(playerid, G_POS_Z, fZ);

			SetPlayerGPSInfo(playerid, G_INTERIOR, 0);
			SetPlayerGPSInfo(playerid, G_WORLD, 0);

			if(dostup[playerid] != 0)
		    {
		  		return D(playerid, D_GPS_GOTO, DIALOG_STYLE_MSGBOX, !"{277ECD}Телепорт", "{FFFFFF}Вы хотите переместиться на поставленную точку?", "Да", "Нет");
			}
			//SetPlayerPosFindZ(playerid, fX, fY, 999.0);
		}
  		return 1;
 	}
 	else
 	{
		if(GetPVarInt(playerid,"selectpoint") > 0 && GetPVarInt(playerid,"selectpoint") < 3)
		{
			SetPVarInt(playerid,"selectpoint",2);
			
			SetPVarFloat(playerid,"selectpointX",fX);
			SetPVarFloat(playerid,"selectpointY",fY);
			SetPVarFloat(playerid,"selectpointZ",fZ);
			
			SetPlayerMapIcon(playerid,iconTaxi,fX,fY,fZ,0,COLOR_YELLOW,1);
			
			SendOk(playerid,"Вы установили "W"место назначения. "G"Чтобы подтвердить, нажмите "W"~k~~CONVERSATION_YES~");
		}
	}
	return 1;
}
stock GetString(const param1[],const param2[]) {
	return !strcmp(param1, param2, false);
}
stock CheckBanned(playerid,listitem) {
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0) {
		FirstBL[playerid] = 0;
		return ErrorMessage(playerid, "Больше нет забаненных");
	}
	new bstring[600];
	format(bstring, sizeof(bstring), "SELECT `Name` FROM `ban` ORDER BY `ID` DESC LIMIT %i , 20", FirstBL[playerid]);
	mysql_tquery(connects, bstring, "MysqlCheckBanned", "d", playerid);
	return 1;
}
CB: MysqlCheckBanned(playerid) {
	new rows;
	rows = cache_num_rows();
	new bstring[600], names[25];
	if(rows == 0) return ErrorMessage(playerid, "Больше нет забаненных");
	for(new i; i < rows; i ++) {
	    cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		format(bstring, sizeof(bstring), "%s%s\n", bstring, names);
	}
	if(rows == 20) strcat(bstring, ""ORANGE"Далее >>>\n");
	if(FirstBL[playerid]) strcat(bstring, ""ORANGE"<<< Назад");
	if(!D(playerid, D_BAN_LIST, DSL, ""P"Забаненые", bstring, "Выбрать", "Назад")) ErrorMessage(playerid, "Недоступно в данный момент.");
	return 1;
}
stock IsBLNameMember(const name[],member) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `Name`,`pMember` FROM `accounts` WHERE BINARY `Name` = '%s' AND `pMember` = '%d' LIMIT 1",name,member);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock IsBLName(const name[],member) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `f_bl_accused`,`f_bl_id` FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s' AND `f_bl_id` = '%d' LIMIT 1",name,member);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock IsBannedNameReg(const name[]) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `Name` FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock IsBannedName(const name[]) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `Name` FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock UnBanName(const name[]) {
    new strings[256];
	if(IsBannedName(name)) {
        format(strings, sizeof(strings), "DELETE FROM `ban` WHERE BINARY `Name` = '%s'",name);
        mysql_tquery(connects, strings, "", "");
	}
	return true;
}
stock BanName(const name[], const namez[], days, const reason[]) {
	if(!IsBannedName(name)) {
	    new query[256];
	    format(query, sizeof(query), "INSERT INTO `ban` (`Name`, `Admin`, `Seconds`, `Reason`) VALUE ('%s', '%s', '%d', '%s')",name, namez, unix + days*86400, reason);
	    mysql_tquery(connects, query, "", "");
	}
	return true;
}
stock CheckSim(const pass[]) {
	for(new i; i < strlen(pass); i ++) {
	    if( (pass[i] >= 'a' && pass[i] <= 'f') ||
		(pass[i] >= 'A' && pass[i] <= 'F')) continue;
		else return false;
	}
	return true;
}
stock CheckPassword(const pass[]) {
	for(new i; i < strlen(pass); i ++) {
	    if( (pass[i] >= 'a' && pass[i] <= 'z') ||
		(pass[i] >= 'A' && pass[i] <= 'Z') ||
		(pass[i] >= '?' && pass[i] <= '?') ||
		(pass[i] >= '?' && pass[i] <= '?') ||
		(pass[i] >= '0' && pass[i] <= '9')  ) continue;
		else return false;
	}
	return true;
}
stock CheckSkin(skin) {
	new not_skin[] = {0,74,252,99,281,280,284,282,285,303,288,283,306,309,286,163,164,165,166,141,255,57,71,187,147,150,287,179,311,61,255,191,276,275,274,70,219,308,188,170,217,261,211,59,185,240,148,124,223,127,113,214,117,118,123,186,120,169,112,111,126,125,272,216,103,102,104,195,108,109,110,56,105,106,107,269,271,270,65,48,114,116,115,41,175,174,173,273,226,255,98,57,163,228,305,304,17,76,95,50,15,35,25,36,96,155,143,44,24,37,2,3,6,7,14,47,67,142,23,72,22,68,220,18,45,97,21,60,182,262,250,121,183,184,30,19,20,4,5,259,17,180,208,185,289,28,29,119,290,291,292,293,82,83,84,101,241,242,295,297,296,249,299,46,294,55,90,13,192,193,224,12,190,40,298,93,233};
	for(new i; i < sizeof(not_skin); i ++) {
	    if(skin != not_skin[i]) continue;
		else return false;
	}
	return true;
}
stock is_text_invalid(const text[]) {
	if(strfind(text, "'", true ) != -1) return 1;
	if(strfind(text, "=", true ) != -1) return 1;
	if(strfind(text, "%", true ) != -1) return 1;
	if(strfind(text, "&", true ) != -1) return 1;
	if(strfind(text, "*", true ) != -1) return 1;
	if(strfind(text, "( ", true ) != -1) return 1;
	if(strfind(text, ")", true ) != -1) return 1;
	if(strfind(text, ",", true ) != -1) return 1;
	if(strfind(text, "`", true ) != -1) return 1;
	if(strfind(text, ";", true ) != -1) return 1;
	if(strfind(text, "|", true ) != -1) return 1;
	return 0 ;
}
stock CheckHouses(playerid,listitem) {
	if(listitem == 30) drieltorka[playerid] += 30;
	else drieltorka[playerid] -= 30;
	if(drieltorka[playerid] < 1) {
		drieltorka[playerid] = 1;
		return ErrorMessage(playerid, "Больше домов не найдено");
	}
	new string[1512];
	new houseidd = 0,classname[20];
	for(new i = drieltorka[playerid]; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] != 0) continue;
		switch(gHouses[i][houseClass]) {
			case 0:classname = "Эконом";
			case 1:classname = "Cредний";
			case 2:classname = "Элитный";
			case 3:classname = "Особняк";
			default: classname = "Неизвестно";
		}
		format(string, sizeof(string), "%sДом "ORANGE"№%d "W"[%s]"W"\n",string,i+1,classname);
		houseidd++;
		if(!houseidd) return ErrorMessage(playerid,"Свободных домов нет");
		if(houseidd == 30) {
			strcat(string, ""ORANGE"Далее >>>\n");
			break;
		}
	}
	if(drieltorka[playerid]) strcat(string, ""ORANGE"<<< Назад\n");
	if(!D(playerid, D_RIELTOR_HOUSE, DSL, ""P"Выберите дом", string, "Выбрать", "Назад")) ErrorMessage(playerid, "Недоступно в данный момент");
	return 1;
}
stock CheckBusiness(playerid,listitem) {
	if(listitem == 20) drieltorka[playerid] += 20;
	else drieltorka[playerid] -= 20;
	if(drieltorka[playerid] < 0) {
		drieltorka[playerid] = 0;
		return ErrorMessage(playerid, "Больше бизнесов не найдено");
	}
	new string[1512];
	new bizzid = -1;
	for(new i = drieltorka[playerid]; i < gBusinessCount; i ++) {
		if(gBusiness[i][bizzOwnerID] != 0) continue;
		format(string, sizeof(string), "%sБизнес "ORANGE"№%d "W"[%s] [%s]\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
		bizzid++;
		if(bizzid == -1) return ErrorMessage(playerid,"Свободных бизнесов нет");
		if(bizzid == 20) {
			strcat(string, ""ORANGE"Далее >>>\n");
			break;
		}
	}
	if(drieltorka[playerid]) strcat(string, ""ORANGE"<<< Назад\n");
	if(!D(playerid, D_RIELTOR_BIZZ, DSL, ""P"Выберите бизнес", string, "Выбрать", "Назад")) ErrorMessage(playerid, "Недоступно в данный момент");
	return 1;
}
CB: CopsWanted(playerid,player_id) {
	if(!IsPlayerConnected(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Преследование завершено! Игрок покинул сервер");
		DeletePVar(playerid, "Patrul");
		return true;
	}
	if(GetPlayerInterior(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Преследование завершено! Человек скрылся! [Вход в интерьер]");
		return true;
	}
	new Float:Position[3];
	GetPlayerPos(player_id, Position[0],Position[1],Position[2]);
	SetPlayerCheckpoint(playerid, Position[0],Position[1],Position[2], 3);
	return false;
}
stock ErrorMessage(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), ""NO"*"G" %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock SendEsp(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), "Используйте: %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock SendOk(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), ""GREEN"*"G" %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock SendUse(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), ""GREEN"*"G" %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock GetCheckID(const name[]) {
    new ID = INVALID_PLAYER_ID;
	sscanf(name, "u", ID);
	if(IsPlayerConnected(ID)) return ID;
	return INVALID_PLAYER_ID;
}
stock check_terrs() {

	DestroyActor(actor[0]);
	DestroyActor(actor[1]);
	DestroyActor(actor[2]);
	DestroyActor(actor[3]);

    switch(black_prods[0]) {
	    case fBALLAS: {
	        actor[0] = CreateActor(102, -2150.9773,-93.7238,27.3811,79.4883);//наркобот
		    actor[1] = CreateActor(103, -2147.1396,-108.6252,27.3381,80.7416);//бот оружия
		    actor[2] = CreateActor(102, -2143.9551,-123.7645,27.3381,79.4882);//бот материалов
		    actor[3] = CreateActor(103, -2195.6792,-120.3352,26.3851,82.3082);//бот форм
		}
	    case fVAGOS: {
	        actor[0] = CreateActor(108, -2150.9773,-93.7238,27.3811,79.4883);//наркобот
		    actor[1] = CreateActor(109, -2147.1396,-108.6252,27.3381,80.7416);//бот оружия
		    actor[2] = CreateActor(108, -2143.9551,-123.7645,27.3381,79.4882);//бот материалов
		    actor[3] = CreateActor(109, -2195.6792,-120.3352,26.3851,82.3082);//бот форм
		}
	    case fGROVE: {
	        actor[0] = CreateActor(105, -2150.9773,-93.7238,27.3811,79.4883);//наркобот
		    actor[1] = CreateActor(106, -2147.1396,-108.6252,27.3381,80.7416);//бот оружия
		    actor[2] = CreateActor(107, -2143.9551,-123.7645,27.3381,79.4882);//бот материалов
		    actor[3] = CreateActor(105, -2195.6792,-120.3352,26.3851,82.3082);//бот форм
		}
	    case fAZTEC: {
	        actor[0] = CreateActor(114, -2150.9773,-93.7238,27.3811,79.4883);//наркобот
		    actor[1] = CreateActor(116, -2147.1396,-108.6252,27.3381,80.7416);//бот оружия
		    actor[2] = CreateActor(114, -2143.9551,-123.7645,27.3381,79.4882);//бот материалов
		    actor[3] = CreateActor(116, -2195.6792,-120.3352,26.3851,82.3082);//бот форм
		}
	    case fRIFA: {
	        actor[0] = CreateActor(175, -2150.9773,-93.7238,27.3811,79.4883);//наркобот
		    actor[1] = CreateActor(174, -2147.1396,-108.6252,27.3381,80.7416);//бот оружия
		    actor[2] = CreateActor(176, -2143.9551,-123.7645,27.3381,79.4882);//бот материалов
		    actor[3] = CreateActor(174, -2195.6792,-120.3352,26.3851,82.3082);//бот форм
	    }
	}
	SetActorVirtualWorld(actor[0], 0);
	SetActorVirtualWorld(actor[1], 0);
	SetActorVirtualWorld(actor[2], 0);
	SetActorVirtualWorld(actor[3], 0);
	
	/*
	SetActorPos(actor[0], -2150.9773,-93.7238,27.3811);
	SetActorPos(actor[1], -2147.1396,-108.6252,27.3381);
	SetActorPos(actor[2], -2143.9551,-123.7645,27.3381);
	SetActorPos(actor[3], -2195.6792,-120.3352,26.3851);
	*/
}
stock check_labrarry() {
	return 1;
}
stock IsValid3DTextLabel(Text3D:textid) {
	if(textid != Text3D:INVALID_3DTEXT_ID) return true;
	else return false;
}
stock DestroyDynamic3DTextLabelEx(&Text3D:text) {
	DestroyDynamic3DTextLabel(text);
	text = Text3D:INVALID_3DTEXT_ID;
}
CB: GunReady(playerid) {
    for(new id = 0;id < sizeof(gun_checkpoints);id++) {
		if(!IsPlayerInDynamicCP(playerid, gun_pickup[id]) && GetPVarInt(playerid,"loadid") == id) {
			GameTextForPlayer(  playerid,("~r~FAILED"), 5000, 1);
			TI[playerid][tJobGun][2] = 0;
	        if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			TI[playerid][tJobGun][1] = 1;
			return true;
		}
	}

	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
	TI[playerid][tJobGun][2] = 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
 	if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,1279,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
	SendOk(playerid,"Оружие собрано. Отнесите его на склад");
	EnableGPSForPlayer(playerid, 267.9811,-202.7967,1006.5694);
	return true;
}
CB: clothes_timer(playerid) {
	new objectid = GetPVarInt(playerid,"id_object");
	DeletePVar(playerid,"id_object");
	if(!IsPlayerInDynamicArea(playerid,gAreas[arClothes][GetPVarInt(playerid,"clothes_id")])) {
		GameTextForPlayer(playerid,("~r~FAILED"), 5000, 1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		ClearAnimations(playerid);
		TI[playerid][tClothesWork][1] = 1;
		DestroyDynamicObject(objectid);
		return true;
	}
	DestroyDynamicObject(objectid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
	TI[playerid][tClothesWork][1] = 3;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
 	if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 1579, 5,  0.100000, 0.100000, 0.200000,  100.000000, 170.0, 100.000000,  1.000000, 1.000000, 1.000000);
	SendOk(playerid,"Одежда сшита. Отнесите ее на склад");
	new rand = random(10);
	if(rand == 5) {
		TI[playerid][tAlcotraz][1] = 1;
		D(playerid,DIALOG_NONE,DSM, ""P"Побег",""W"Мысли...\n\nТак-так, маникен, возьму-ка я его себе..\nНадо подумать, куда его можно подложить..\nГлавное не спалиться..","Закрыть","");
	}
	return true;
}
CB: alcatraz_timer(playerid) {
	SetPlayerPosAC(playerid,324.9965,539.5646,799.9875,202,0);
	SetPlayerFacingAngle(playerid,261.6177);
	SetCameraBehindPlayer(playerid);
	TI[playerid][tAlcotraz][0] = 150;
	D(playerid,DIALOG_NONE,DSM, ""P"Побег",""W"Мысли...\n\nНадо бежать отсюда пока не засекли..\nТак-так, вижу сверху люк..\nДобраться бы до него ещё..","Закрыть","");
	DestroyDynamicObject(maniken[playerid]);
	maniken[playerid] = -1;
	return true;
}
stock update3dtext() {
	new string[128];
	new string_gung[512] = ""P"Банда  кол-во наркотиков  цена за 1г\n";
	if(FI[fBALLAS][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{CC00FF}The Ballas    "P"%d    "ORANGE"%d\n",string_gung,FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
	}
	if(FI[fVAGOS][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{ffff00}The Vagos    "P"%d    "ORANGE"%d\n",string_gung,FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
	}
	if(FI[fGROVE][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{009900}The Grove    "P"%d    "ORANGE"%d\n",string_gung,FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
	}
	if(FI[fAZTEC][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{00CCFF}The Aztecas    "P"%d    "ORANGE"%d\n",string_gung,FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
	}
	if(FI[fRIFA][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{6666FF}The Rifa    "P"%d    "ORANGE"%d\n",string_gung,FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
	}
	UpdateDynamic3DTextLabelText(labrary_text,-1,string_gung);

	if(invent_time > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(invent_time-unix, year, month, day, hour, minute, second);

		new invent_string[128];
		format(invent_string,sizeof(invent_string),"Доступно боеприпасов: "P"%d"W"\nКорабль отплывает через: "P"%d:%d",invent_mats,minute,second);
		UpdateDynamic3DTextLabelText(invent_text,-1,invent_string);
	}

	format(string,sizeof(string),"Рыбы на складе: "O"%.1f кг\n\n"W"Для продажи рыбы - "P"/sellfish",fish_sklad);
	UpdateDynamic3DTextLabelText(fish_text,-1,string);

	format(string,sizeof(string),"Боеприпасов на складе: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[0],-1,string);

	format(string,sizeof(string),"Боеприпасов доступно: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[1],-1,string);

	format(string,sizeof(string),"Бочек на складе: "ORANGE"%d",oilsklad);
	UpdateDynamic3DTextLabelText(oil_3dtext,-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYSF][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[0],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYSF][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[1],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYSF][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[2],-1,string);

	/*
	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fARMYLV][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_armylv[0],-1,string);
 	*/

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLSPD][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[0],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fSFPD][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[1],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fLVPD][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[2],-1,string);

	format(string,sizeof(string),"Боеприпасов: "ORANGE"%d ед",FI[fFBI][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[3],-1,string);

	UpdateSkladFrakGang();
	UpdateSkladFrakMafia();
}
CB: ReloadAllAnims(playerid) {
    PreloadAnimLib(playerid,"BASEBALL");
   	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BD_FIRE");
   	PreloadAnimLib(playerid,"BOMBER");
   	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
 	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"RYDER");
   	PreloadAnimLib(playerid,"RAPPING");
   	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"SHOP");
   	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid, "SWORD");
	PreloadAnimLib(playerid, "BUDDY");
	PreloadAnimLib(playerid, "FLAME");
	PreloadAnimLib(playerid, "VENDING");
	ClearAnims(playerid);
	spaned[playerid]=1;
	return 1;
}
CB: ClearAnims(playerid) return ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
stock UpdateEconomyData(const field[],data){
	new query[156];
	format(query,sizeof(query),"UPDATE `economy` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBonuses(const field[],data){
	new query[156];
	format(query,sizeof(query),"UPDATE `bonuses` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateOtherData(const field[],data){
	new query[156];
	format(query,sizeof(query),"UPDATE `others` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveFraction(fractionID) {
    new query[256];
	format(query, sizeof(query), "UPDATE `fractions` SET `Leader` = '%s', `Admin` = '%s', `Time` = '%s' WHERE `ID` = '%i'",FI[fractionID][fLeader],FI[fractionID][fAdmin],FI[fractionID][fTime],fractionID);
	return mysql_tquery(connects, query, "", "");
}
stock SaveRank(rank,fraction) {
	new query[256];
	format(query, sizeof(query), "UPDATE `fractions` SET `Rank_%d` = '%s' WHERE `ID` = '%i'",rank,RankName[fraction][rank-1],fraction);
	return mysql_tquery(connects, query, "", "");
}
stock GiveMoney(playerid, money, const s[]="None") {
	if(strlen(s)) {
	    new ip[16],query[256];
		GetPlayerIp(playerid, ip, sizeof(ip));
	    mysql_format(connects,query, sizeof(query), "INSERT INTO `givecash` (`Name`,`IP`,`Reason`,`Dollar`,`Cash`,`Date`) VALUES ('%s', '%s', '%s','%d','%d',CURRENT_TIMESTAMP);",player_name[playerid],ip,s,money,PI[playerid][pCash]);
		mysql_tquery(connects, query, "", "");
	}
	new string[35];
	if(PI[playerid][pCash] > PI[playerid][pCash]+money) format(string,sizeof(string),"~r~ %d$",money);
	else format(string,sizeof(string),"~g~ +%d$",money);
	GameTextForPlayer(playerid, string, 5000, 1);
	
	PI[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PI[playerid][pCash]);
	UpdatePlayerData(playerid,"pCash",PI[playerid][pCash]);
	return 1;
}
stock GetNearestTune(playerid) {
	new Float:dist[3],total_tune;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1153.4031,-1208.7499,19.0252);
	dist[1] = GetPlayerDistanceFromPoint(playerid, -1786.8206,1206.0835,25.1250);
	dist[2] = GetPlayerDistanceFromPoint(playerid, 1643.8298,2197.1387,10.8203);

	if(dist[0] < dist[1] && dist[0] < dist[2]) total_tune = 1;
    else if(dist[1] < dist[0] && dist[1] < dist[2]) total_tune = 3;
    else if(dist[2] < dist[0] && dist[2] < dist[1]) total_tune = 2;
	return total_tune;
}
stock GetNearestHospital(playerid) {
	new Float:dist[3],total_hospital;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 2114.0747,-2383.5491,21.7399);
	//dist[1] = GetPlayerDistanceFromPoint(playerid, 1641.8849,1833.5286,10.8508);
	//dist[2] = GetPlayerDistanceFromPoint(playerid, -2666.6680,580.7857,14.4609);

	if(dist[0] < dist[1] && dist[0] < dist[2]) total_hospital = 1;
    //else if(dist[1] < dist[0] && dist[1] < dist[2]) total_hospital = 3;
    //else if(dist[2] < dist[0] && dist[2] < dist[1]) total_hospital = 2;
	return total_hospital;
}
stock GetNearestCar(playerid) {
	new Float:car_pos[2][3],id = -1;

	if(house_car[playerid][0]) GetVehiclePos(house_car[playerid][0], car_pos[0][0],car_pos[0][1],car_pos[0][2]);
	if(house_car[playerid][1]) GetVehiclePos(house_car[playerid][1], car_pos[1][0],car_pos[1][1],car_pos[1][2]);

	if(PlayerToPoint(4.0, playerid, car_pos[0][0], car_pos[0][1], car_pos[0][2])) id = 0;
	else if(PlayerToPoint(4.0, playerid, car_pos[1][0],car_pos[1][1],car_pos[1][2])) id = 1;
	return id;
}
stock SetPlayerHospital(playerid,bool:spawn = false) {
	if(TI[playerid][tLogin] == false) return 1;
	if(TI[playerid][tDuel] != -1) return 1;
	//SettingSpawn(playerid);
	if(PI[playerid][pMember] == fARMYLV && start_work[playerid]) {
		PI[playerid][pHospital] = 4;
		SetPlayerHealth(playerid,50 + random(7));
		return 1;
	}
	else if(PI[playerid][pMember] == fARMYSF && start_work[playerid]) {
		PI[playerid][pHospital] = 5;
		SetPlayerHealth(playerid,50 + random(7));
		return 1;
	}
	if(spawn == false) {
		new hosp = GetNearestHospital(playerid);
		PI[playerid][pHospital] = hosp;
	}
	SetPlayerHealth(playerid,20 + random(7));
	return 0;
}
stock GetNearestPolice(playerid) {
	new Float:dist[3],total_police;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1553.5479,-1675.6986,16.1953);//lspd
	dist[1] = GetPlayerDistanceFromPoint(playerid, -1605.5505,711.8779,13.8672);//sfpd
	dist[2] = GetPlayerDistanceFromPoint(playerid, 2337.1851,2458.0256,14.9688);//lvpd

	if(dist[0] < dist[1] && dist[0] < dist[2]) total_police = 1;
    else if(dist[1] < dist[0] && dist[1] < dist[2]) total_police = 3;
    else if(dist[2] < dist[0] && dist[2] < dist[1]) total_police = 2;
	return total_police;
}
stock GetFamName(fam, rank) {
	if(rank > 0) return FamRanks[fam][(rank-1)];
	else return FamRanks[fam][0];
}
stock GetRankName(org, rank) {
	if(rank > 0) return RankName[org][(rank-1)];
	else return RankName[org][0];
}
stock GetTeamID(playerid) {
	if(PI[playerid][pMember] > 0) return PI[playerid][pMember];
	if(PI[playerid][pLeader] > 0) return PI[playerid][pLeader];
	return false;
}
stock save_acc(playerid)
{
    SaveScore(playerid);
    SaveAccount(playerid);
    save_settings(playerid);
    save_slotitem(playerid);
	SavePlayerNumber(playerid);
	save_slotitem_use(playerid);
	
	save_car(playerid, 0);
	save_car(playerid, 1);
	save_perf(playerid, 0);
	save_perf(playerid, 1);
	save_perf_sell(playerid, 0);
	save_perf_sell(playerid, 1);
	
	save_diplomation(playerid,PI[playerid][pMember]);
	
	for(new i; i<MAX_QUESTS; i++) save_quest(playerid, i);
	return 1;
}
CB: SaveServer()
{
    foreach(new i:Player)
	{
		if(!TI[i][tLogin]) continue;
		save_acc(i);
	}
	
	for(new i = 1; i<gBusinessCount;i++)
	{
		SaveBusiness(i);
		save_funtarif(i);
	}
	for(new i = 1;i <= MAX_FRACTIONS+1;i ++)
	{
		SaveFraction(i);
		save_salary(i);
		SaveLabrary(i);
		
		SaveRank(1, i);
		SaveRank(2, i);
		SaveRank(3, i);
		SaveRank(4, i);
		SaveRank(5, i);
		SaveRank(6, i);
		SaveRank(7, i);
		SaveRank(8, i);
		SaveRank(9, i);
		SaveRank(10, i);
		SaveRank(11, i);
		SaveRank(12, i);
		SaveRank(13, i);
		SaveRank(14, i);
	}
	for(new i = 0; i < TotalFamily; i++)
	{
	    SavefRank(1, i);
	    SavefRank(2, i);
	    SavefRank(3, i);
	    SavefRank(4, i);
	    SavefRank(5, i);
	    SavefRank(6, i);
	    SavefRank(7, i);
	}
	for(new i=0;i<gFracVehicleCount;i++) save_fracveh(i);
	for(new i = 1; i<gHouseCount;i++) SaveHouse(i);
	for(new i = 0; i < gATMCount;i++) SaveATM(i);
	for(new i = 0; i < TOTALGZ; i++) SaveGZ(i);
	for(new i = 0; i < gHotelCount; i++) SaveHotels(i);
	for(new i = 1; i <= gPlaneCount; i++) SavePlane(i);
	
	save_other();
	SaveMarket();
	return 1;
}

stock SaveServerAccount(playerid)
{
	if(!TI[playerid][tLogin]) return false;
	else
	{
		save_acc(playerid);

	    for(new i = 1; i<gHouseCount;i++)
		{
		    if(!GetString(gHouses[i][houseOwner], GetName(playerid))) continue;
		    else
		    {
				SaveHouse(i);
			}
		}
		for(new i = 1; i<gBusinessCount;i++)
		{
		    if(!GetString(gBusiness[i][bizzOwner], GetName(playerid))) continue;
		    else
		    {
				SaveBusiness(i);
				save_funtarif(i);
			}
		}
		for(new i = 0; i < gHotelCount; i++)
		{
		    if(!GetString(gHotels[i][hotelOwner], GetName(playerid))) continue;
		    else
		    {
				SaveHotels(i);
			}
		}
		for(new i = 1; i <= gPlaneCount; i++)
		{
		    if(!GetString(gAirplanes[i][aOwner], GetName(playerid))) continue;
		    else
		    {
				SavePlane(i);
			}
		}
		for(new i = 1;i <= MAX_FRACTIONS+1;i ++)
		{
		    if(!GetString(FI[i][fLeader], GetName(playerid)) || !GetString(FI[i][fAdmin], GetName(playerid))) continue;
		    else
		    {
				SaveFraction(i);
				save_salary(i);
				SaveLabrary(i);

				SaveRank(1, i);
				SaveRank(2, i);
				SaveRank(3, i);
				SaveRank(4, i);
				SaveRank(5, i);
				SaveRank(6, i);
				SaveRank(7, i);
				SaveRank(8, i);
				SaveRank(9, i);
				SaveRank(10, i);
				SaveRank(11, i);
				SaveRank(12, i);
				SaveRank(13, i);
				SaveRank(14, i);
			}
		}
		for(new i = 0; i < TotalFamily; i++)
		{
		    if(!GetString(gFamily[i][famOwner], GetName(playerid)) || !GetString(gFamily[i][famCOwner], GetName(playerid))) continue;
		    else
		    {
				SavefRank(1, i);
			    SavefRank(2, i);
			    SavefRank(3, i);
			    SavefRank(4, i);
			    SavefRank(5, i);
			    SavefRank(6, i);
			    SavefRank(7, i);
			}
		}
	}
	return 1;
}
stock SkinSelect(playerid, id) {
	if(GetPVarInt(playerid,"registrations")) {
		if(id == 0) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")+1);
			if(GetPVarInt(playerid,"join_ped_item") == 8) SetPVarInt(playerid,"join_ped_item",0);
			else if(GetPVarInt(playerid,"join_ped_item") == 14) SetPVarInt(playerid,"join_ped_item",8);
		}
		else if(id == 1) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")-1);
			if(GetPVarInt(playerid,"join_ped_item") == -1) SetPVarInt(playerid,"join_ped_item",7);
			else if(GetPVarInt(playerid,"join_ped_item") == 7) SetPVarInt(playerid,"join_ped_item",13);
		}
		PlayerTextDrawHide(playerid, reg_tds[playerid][0]);
		PlayerTextDrawHide(playerid, reg_tds[playerid][1]);

		PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][0], skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
		PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][1], skin_register[GetPVarInt(playerid,"join_ped_item")][0]);


		PlayerTextDrawShow(playerid, reg_tds[playerid][0]);
		PlayerTextDrawShow(playerid, reg_tds[playerid][1]);
		A_SetPlayerSkin(playerid,skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
	}
	else if(GetPVarInt(playerid,"ChangingSkin")) {
		if(id == 0) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")+1);
			if(GetPVarInt(playerid,"join_ped_item") == 67) SetPVarInt(playerid,"join_ped_item",0);
			else if(GetPVarInt(playerid,"join_ped_item") == 78) SetPVarInt(playerid,"join_ped_item",67);
		}
		else if(id == 1) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")-1);
			if(GetPVarInt(playerid,"join_ped_item") == -1) SetPVarInt(playerid,"join_ped_item",66);
			else if(GetPVarInt(playerid,"join_ped_item") == 66) SetPVarInt(playerid,"join_ped_item",78);
		}
		A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);

		new price;
		if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PI[playerid][pVips]][vip_chose]);
			price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
		}
		else {
	    	if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
				price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
				price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
			}
		    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
		}

		new string[12];
		format(string,sizeof(string),"$%d",price);
		PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
	}
 	return 1;
}
stock A_SetPlayerFacingAngle(playerid, Float:angle) {
    SetPlayerFacingAngle(playerid, angle);
    SetCameraBehindPlayer(playerid);
    return true;
}
stock FreezePlayerForTime(playerid, time) {
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("UnFreeze", time * 1000, false, "i", playerid);
}
stock CreateOrgsVehicle(orgs,rank,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
    ADD_VEHICLES_ORGS++;
    
	new carid = A_AddStaticVehicleEx(model,X,Y,Z,A,Color_1,Color_2,spawntime,VEHICLE_TYPE_FRACTION);
	VehicleInfo[carid][vTeam] = orgs;
	VehicleInfo[carid][vRank] = rank;

	switch(orgs)
	{
		case fLSPD:
		{
			if(model == 560 || model == 541)
			{
				for(new i; i < 5; i ++)
				{
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "LSPD");
		}
		case fSFPD:
		{
			if(model == 560 || model == 541)
			{
				for(new i; i < 5; i ++)
				{
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "SFPD");
		}
		case fLVPD:
		{
			if(model == 560 || model == 541)
			{
				for(new i; i < 5; i ++)
				{
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "LVPD");
		}
		case fFBI:
		{
			if(model == 415)
			{
				for(new i; i < 5; i ++)
				{
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "FBI");
			if(model != 522) SetVehicleHealth(carid,3000.0);
		}
		case fWHITEHOUSE:
		{
			SetVehicleNumberPlate(carid, "WHITE HOUSE");
			SetVehicleHealth(carid,3000.0);
		}
		case fARMYLV: 		SetVehicleNumberPlate(carid, "ARMY LV");
		case fARMYSF: 		SetVehicleNumberPlate(carid, "ARMY SF");
		case fMAYOR: 		SetVehicleNumberPlate(carid, "MAYOR");
		case fLSNEWS: 		SetVehicleNumberPlate(carid, "LS NEWS");
		case fSFNEWS: 		SetVehicleNumberPlate(carid, "SF NEWS");
		case fLVNEWS: 		SetVehicleNumberPlate(carid, "LV NEWS");
		case fINSTRUCTORS: 	SetVehicleNumberPlate(carid, "AUTOSCHOOL");
		case fBALLAS: 		SetVehicleNumberPlate(carid, "BALLAS");
		case fVAGOS: 		SetVehicleNumberPlate(carid, "VAGOS");
		case fGROVE: 		SetVehicleNumberPlate(carid, "GROVE");
		case fAZTEC: 		SetVehicleNumberPlate(carid, "AZTECAC");
		case fRIFA: 		SetVehicleNumberPlate(carid, "RIFA");
		case fLCN: 			SetVehicleNumberPlate(carid, "ITALIAN");
		case fYAKUZA: 		SetVehicleNumberPlate(carid, "JAPAN");
		case fMEDICLS: 		SetVehicleNumberPlate(carid, "MEDICS LS");
		case fMEDICSF: 		SetVehicleNumberPlate(carid, "MEDICS SF");
		case fMEDICLV: 		SetVehicleNumberPlate(carid, "MEDICS LV");
	}
	return carid;
}
stock CreateBizVehicle(biz,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
    ADD_VEHICLES_BIZES++;
    
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_BIZZ);

	VehicleInfo[carid][vBizz] = biz;
	
	VehicleInfo[carid][vFuel] = 100.0;

	SetVehicleParamsEx(carid,false,false,false,false,false,false,false);

	return carid;
}
stock CreateJobVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
    ADD_VEHICLES_JOBS++;
    
	new carid;
	
	if(job == 71) carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_ALCATRAZ);
	else carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	
	VehicleInfo[carid][vJob] = job;
	return carid;
}
stock CreateSalonVehicle(model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime,interior,world)
{
    ADD_VEHICLES_SALONS++;
    
	new carid;
	carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_AUTOSALON,interior,world);

	SetVehicleParamsEx(carid,false,false,false,true,false,false,false);
	return carid;
}
stock CreateSpawnCar(model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
    ADD_VEHICLES_SPAWNS++;
    
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_SPAWN);
	return carid;
}
stock CreateBusVehicle(bus,job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
    ADD_VEHICLES_BUS++;
    
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	VehicleInfo[carid][vJob] = job;
	VehicleInfo[carid][vBus] = bus;
	return carid;
}
stock IsABikeSped(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsACarNumber(carid){switch(carid){case 400..402,404,405,409..413,415,419,421,422,424,426,429,434,439,444,445,451,459,461..463,466,467,470,478,474,475,477,479,480,482,490,491,492,494,495,496,502..504,506,517,518,521,528,531,533,534,535,539,541..543,545,549,551,554,555..562,566,567,568,571,573,575,576,578,579,580,585..587,589,599,600..603,489:return true;}return false;}
stock IsAHouseNumber(playerid)
{
	new num = -1;
	
	for(new i = 1; i<gHouseCount;i++)
	{
	    if(!(479 <= gHouses[i][houseID] <= 482)) continue;

        if(GetString(gHouses[i][houseOwner], GetName(playerid)) || GetString(gHouseArendator[i][0], GetName(playerid))
		|| GetString(gHouseArendator[i][1], GetName(playerid)) || GetString(gHouseArendator[i][2], GetName(playerid)))
		{
        	num = gHouses[i][houseID];
        }
	}
	return num;
}

stock IsAPlane(carid) return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
stock IsAVelik(carid) return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
stock IsABoat(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
stock IsABike(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);

stock A_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0)
{
	if(IsValidVehicleModel(model))
	{
		new vehicleid = AddStaticVehicleEx(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);

			switch(model) {
				case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
				case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
				case 448,435,449,450,457,462,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
				case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
				default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 100;
		}
	    return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}
stock AJ_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0)
{
	if(IsValidVehicleModel(model))
	{
	    ADD_VEHICLES_STATICS++;

		new vehicleid = AddStaticVehicleEx(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);

			switch(model) {
				case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
				case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
				case 448,435,449,450,457,462,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
				case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
				default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 100;
		}
	    return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}
stock A_DestroyVehicle(vehicleid) {
	if(IsValidVehicle(vehicleid)) {
		if(VehicleInfo[vehicleid][vBizz]) {
			VehicleInfo[vehicleid][vBizz] = 0;
		}
		VehicleInfo[vehicleid][vType] = VEHICLE_TYPE_NONE;
		VehicleInfo[vehicleid][vEngineBoost] = 0;
		VehicleInfo[vehicleid][vBrakeBoost] = 0;
		VehicleInfo[vehicleid][vPerfStatus] = 0;
		VehicleInfo[vehicleid][vRobHouse] = false;
		for(new i; i < 5; i ++) {
			VehicleInfo[vehicleid][vPEngine][i] = 0;	
			VehicleInfo[vehicleid][vPBrake][i] = 0;		
		}
		if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1) {
			if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
			if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
			LightsObject[vehicleid][0] = -1;
			LightsObject[vehicleid][1] = -1;
			SignalTick[vehicleid][0] = 0;
			SignalTick[vehicleid][1] = -1;
			Signal[vehicleid] = 0;
		}
		return DestroyVehicle(vehicleid);
	}
	return 0;
}
stock A_CreateVehicle(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0)
{
	if(IsValidVehicleModel(model))
	{
	    ADD_VEHICLES_LASTS++;

		new vehicleid = CreateVehicle(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);

			switch(model) {
				case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
				case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
				case 448,435,449,450,457,462,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
				case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
				default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 100;
		}
		return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}


stock getlight_status(carid) return VehicleInfo[carid][vLights];

stock ToggleEngine(vehicleid, playerid = -1) {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(engine == 1) SetVehicleParamsEx(vehicleid,0,lights,alarm,doors,bonnet,boot,objective);
	else SetVehicleParamsEx(vehicleid,1,lights,alarm,doors,bonnet,boot,objective);
    if(playerid != -1 && !IsAVelik(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	    if(engine == 0) {
			SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
			PlayerTextDrawHide(playerid,speedometr[playerid][10]);
			PlayerTextDrawColor(playerid, speedometr[playerid][10], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][10]);
		}
		else {
			SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
			PlayerTextDrawHide(playerid,speedometr[playerid][10]);
			PlayerTextDrawColor(playerid, speedometr[playerid][10], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][10]);
		}
	}
	if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
	if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
	LightsObject[vehicleid][0] = -1;
	LightsObject[vehicleid][1] = -1;
	SignalTick[vehicleid][0] = 0;
	SignalTick[vehicleid][1] = -1;
	Signal[vehicleid] = 0;
	return 1;
}

CB: check_owner_house(playerid)
{
	new rows, player;
	rows = cache_num_rows();

	if(rows)
	{
	    cache_get_value_name_int(0,"pID", player);

	    SetPVarInt(playerid, "PlayerSellerPlayerHouse", player);
	}
}
CB: check_owner_bizz(playerid)
{
	new rows, player;
	rows = cache_num_rows();

	if(rows)
	{
	    cache_get_value_name_int(0,"pID", player);

	    SetPVarInt(playerid, "PlayerSellerPlayerBizz", player);
	}
}
CB: check_owner_hotel(playerid)
{
	new rows, player;
	rows = cache_num_rows();

	if(rows)
	{
	    cache_get_value_name_int(0,"pID", player);

	    SetPVarInt(playerid, "PlayerSellerPlayerHotel", player);
	}
}
CB: check_owner_air(playerid)
{
	new rows, player;
	rows = cache_num_rows();

	if(rows)
	{
	    cache_get_value_name_int(0,"pID", player);

	    SetPVarInt(playerid, "PlayerSellerPlayerAir", player);
	}
}
CB: check_ip_ban(playerid) {
	new rows;
	rows = cache_num_rows();
	if(rows) {
		ErrorMessage(playerid, "Ваш IP адрес заблокирован");
		Kick(playerid);
	}
	else {
		new query[256];
		mysql_format(connects,query,sizeof(query),"SELECT * FROM `"TABLE_BAN"` WHERE BINARY `Name` = '%s' LIMIT 1",player_name[playerid]);
		mysql_tquery(connects,query,"check_banned","i",playerid);
	}
}
CB: check_banned(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return 1;

	new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0;

	cache_get_value_index(0,1,NAME_PLAYER,24);
	cache_get_value_index(0,2,NAME_ADMIN,24);
	cache_get_value_index(0,3,BAN_REASON,24);
	cache_get_value_index_int(0,4,UNBAN_DATA);
	if(UNBAN_DATA > unix) {
		new date_ban[6];
		timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

		static const f_str[] = ""W"Ваш игровой аккаунт:\t"NO"%s\n\
		"W"Разблокировка:\t\t"NO"%02d/%02d/%02d %02d:%02d:%02d\n\
		"W"Причина:"NO"\t\t\t%s\n\
		"W"Заблокировал:"NO"\t\t%s";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 30) + (-2 + 30) + (-2 + 12) + (-2 + MAX_PLAYER_NAME)];

		format(string,sizeof(string),f_str,NAME_PLAYER, date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5], BAN_REASON, NAME_ADMIN);
		D(playerid,DIALOG_BAN,DSM, ""P"Этот аккаунт заблокирован",string,"Закрыть","");
		Kick(playerid);
		return 1;
	}
	else {
		new query[128];
		mysql_format(connects,query,sizeof(query), "DELETE FROM `ban` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
		mysql_tquery(connects, query);
	}
	return 1;
}
CB:	PlayerRegister(playerid) {
	PI[playerid][pID] = cache_insert_id();
	new query[100];
	format(query,sizeof query,"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' LIMIT 1",GetName(playerid));
	mysql_tquery(connects, query, "load_account","i",playerid);
	TI[playerid][tSelectSkin] = false;
	return true;
}
CB: load_load(playerid) {
	if(TI[playerid][tLogin]) return Kick(playerid),printf("%s вызвал load_load повторно",player_name[playerid]);
	new query[100];
	format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' LIMIT 1",GetName(playerid));
	mysql_tquery(connects, query, "load_account", "d", playerid);
	return 1;
}
CB: load_account(playerid)
{
	if(TI[playerid][tLogin]) return Kick(playerid),printf("%s вызвал load_account повторно",player_name[playerid]);
	
	new rows, weapons[1024],ammos[1024],skills[1024],slotitem[1024],
		slotitem_use[1024],g_data[11],a_data[11], get_name_store[1024],
		data[1024], query_str[1024], query_st[1024],query_1[1024],
		query_2[1024], query_3[1024], query_4[1024], sql_string[1024];
	
	rows = cache_num_rows();
	
	if(rows)
	{
		cache_get_value_name_int(0, "pID",PI[playerid][pID]);

		cache_get_value_name(0, "pIpReg",PI[playerid][pIpReg],17);
	    cache_get_value_name(0, "pKeyip",PI[playerid][pKeyip],5);
	    cache_get_value_name(0, "pDataReg",PI[playerid][pDataReg],32);
	    cache_get_value_name(0, "pMarried",PI[playerid][pMarried],MAX_PLAYER_NAME);
	    cache_get_value_name(0, "pDrug",PI[playerid][pDrug],MAX_PLAYER_NAME);

	    cache_get_value_name(0, "pWeapons",weapons,53);
	    cache_get_value_name(0, "pAmmos",ammos,53);
	    cache_get_value_name(0, "pGunSkills",skills,32);
	    cache_get_value_name(0, "pEmail",PI[playerid][pEmail],36);
	    cache_get_value_name(0, "pAccusedof",PI[playerid][pAccusedof],43);
	    cache_get_value_name(0, "pVictim",PI[playerid][pVictim],MAX_PLAYER_NAME);
		cache_get_value_name(0,	"licenses",lic[playerid], 64);
		cache_get_value_name(0,	"Settings",PI[playerid][pSettings], 48);
		cache_get_value_name(0,	"pSlotItem",slotitem, 63);
		cache_get_value_name(0,	"pSlotItem_Use",slotitem_use, 63);

		sscanf(skills, 							"p<,>a<i>[6]",	PI[playerid][pGunSkill]);
		sscanf(lic[playerid],					"p<,>a<i>[4]",	lic[playerid]);
		sscanf(PI[playerid][pSettings],			"p<|>a<i>[11]",	PI[playerid][pSettings]);
		sscanf(slotitem,						"p<|>a<i>[8]",	PI[playerid][pSlotItem]);
		sscanf(slotitem_use,					"p<|>a<i>[8]",	PI[playerid][pSlotItem_Use]);

		cache_get_value_name_float(0,"pHP", PI[playerid][pHP]);
		cache_get_value_name_float(0,"pFish", PI[playerid][pFish]);
		cache_get_value_name_float(0,"pSnow", PI[playerid][pSnow]);

		cache_get_value_name_int(0,"Skin", PI[playerid][pSkin]);
	    cache_get_value_name_int(0,"pLevel", PI[playerid][pLevel]);
	    cache_get_value_name_int(0,"pAdmin", PI[playerid][pAdminLevel]);
		cache_get_value_name_int(0,"donatemoney", PI[playerid][pRouble]);
	    cache_get_value_name_int(0,"pJail", PI[playerid][pJail]);
	    cache_get_value_name_int(0,"house", PI[playerid][pHouse]);
	    cache_get_value_name_int(0,"tempkey", PI[playerid][pTempKey]);
	    cache_get_value_name_int(0,"bussiness", PI[playerid][pBusiness]);
		cache_get_value_name_int(0,"hotelroom", PI[playerid][pRoom]);
		cache_get_value_name_int(0,"hotelid", PI[playerid][pHotel]);
		cache_get_value_name_int(0,"airport", PI[playerid][pAirport]);
	    cache_get_value_name_int(0,"pMats", PI[playerid][pMats]);
	    cache_get_value_name_int(0,"pSex", PI[playerid][pSex]);
	    cache_get_value_name_int(0,"pArrested", PI[playerid][pArrested]);
	    cache_get_value_name_int(0,"mute", PI[playerid][pMute]);
	    cache_get_value_name_int(0,"pCrimes", PI[playerid][pCrimes]);
	    cache_get_value_name_int(0,"pExp", PI[playerid][pExp]);
	    cache_get_value_name_int(0,"pCash", PI[playerid][pCash]);
	    cache_get_value_name_int(0,"pJailTime", PI[playerid][pJailTime]);
	    cache_get_value_name_int(0,"pDrugs", PI[playerid][pDrugs]);
	    cache_get_value_name_int(0,"pLeader", PI[playerid][pLeader]);
	    cache_get_value_name_int(0,"pMember", PI[playerid][pMember]);
	    cache_get_value_name_int(0,"pRank", PI[playerid][pRank]);
	    cache_get_value_name_int(0,"pJob", PI[playerid][pJob]);
	    cache_get_value_name_int(0,"pModel", PI[playerid][pFracSkin]);
	    cache_get_value_name_int(0,"pPhone", PI[playerid][pPhone]);
	    cache_get_value_name_int(0,"pZakonp", PI[playerid][pZakonp]);
	    cache_get_value_name_int(0,"pAddiction", PI[playerid][pAddiction]);
		cache_get_value_name_int(0,"pWarns", PI[playerid][pWarns]);
		cache_get_value_name_int(0,"warntime", PI[playerid][punWarnstime]);
	    cache_get_value_name_int(0,"pFuel", PI[playerid][pFuel]);
	    cache_get_value_name_int(0,"pBank", PI[playerid][pBank]);
	    cache_get_value_name_int(0,"pMobile", PI[playerid][pMobile]);
	    cache_get_value_name_int(0,"pSearch", PI[playerid][pSearch]);
	    cache_get_value_name_int(0,"pPlayTime_one", PI[playerid][pPlayTime][0]);
	    cache_get_value_name_int(0,"pPlayTime_two", PI[playerid][pPlayTime][1]);
	    cache_get_value_name_int(0,"pHospital", PI[playerid][pHospital]);
		cache_get_value_name_int(0,"pRod", PI[playerid][pRod]);
		cache_get_value_name_int(0,"pRopes", PI[playerid][pRopes]);
		cache_get_value_name_int(0,"pWorms", PI[playerid][pWorms]);
		cache_get_value_name_int(0,"family", PI[playerid][pFamily]);
		cache_get_value_name_int(0,"progress", PI[playerid][pProgress]);
		cache_get_value_name_int(0,"spawn", PI[playerid][pSpawn]);
		cache_get_value_name_int(0,"salary", PI[playerid][pSalary]);
		cache_get_value_name_int(0,"book", PI[playerid][pBook]);
		cache_get_value_name_int(0,"watch", PI[playerid][pWatch]);
		cache_get_value_name_int(0,"MedCard", PI[playerid][pMedCard]);
		cache_get_value_name_int(0,"MedHeal", PI[playerid][pMedHeal]);
		cache_get_value_name_int(0,"Advert", PI[playerid][pAdvert]);
		cache_get_value_name_int(0,"ArmSkin", PI[playerid][pArmSkin]);
		cache_get_value_name_int(0,"FracDuty", start_work[playerid]);
		cache_get_value_name_int(0,"bizz_work", PI[playerid][bizz_work]);
		cache_get_value_name_int(0,"bizz_status", PI[playerid][bizz_status]);
		cache_get_value_name_int(0,"bizz_cash", PI[playerid][bizz_cash]);
		cache_get_value_name_int(0,"bizz_lcash", PI[playerid][bizz_lcash]);
		cache_get_value_name_int(0,"pGolos", PI[playerid][pGolos]);
		cache_get_value_name_int(0,"pBlago", PI[playerid][pBlago]);
		cache_get_value_name_int(0,"pVips", PI[playerid][pVips]);
		cache_get_value_name_int(0,"pVipTime", PI[playerid][pVipTime]);
		cache_get_value_name_int(0,"pVipName", PI[playerid][pVipName]);
		cache_get_value_name_int(0,"fwarn", PI[playerid][pfWarn]);
		cache_get_value_name_int(0,"pDisease_0", PI[playerid][pDisease][0]);
		cache_get_value_name_int(0,"pDisease_1", PI[playerid][pDisease][1]);
		cache_get_value_name_int(0,"pSatiety", PI[playerid][pSatiety]);
		cache_get_value_name_int(0,"pFamRank", PI[playerid][pFamRank]);
		cache_get_value_name_int(0,"pDSatiety", PI[playerid][pDSatiety]);
		cache_get_value_name_int(0,"pDDisease", PI[playerid][pDDisease]);
		cache_get_value_name_int(0,"pBox", PI[playerid][pBox]);
		cache_get_value_name_int(0,"pMedKit", PI[playerid][pMedKit]);
		cache_get_value_name_int(0,"pMPromo", PI[playerid][pMPromo]);
		cache_get_value_name_int(0,"pAdmMSG", PI[playerid][pAdmMSG]);
		cache_get_value_name_int(0,"pAdmKL", PI[playerid][pAdmKL]);
		cache_get_value_name_int(0,"pMask", PI[playerid][pMask]);
		cache_get_value_name_int(0,"pGoogle", PI[playerid][pGoogleSec]);

		cache_get_value_name(0, "GoogleCode",PI[playerid][pGoogle],63);

		cache_get_value_name_int(0,"homesell", PI[playerid][pSellNeed][0]);
		cache_get_value_name_int(0,"bizzsell", PI[playerid][pSellNeed][1]);
		cache_get_value_name_int(0,"hotelsell", PI[playerid][pSellNeed][2]);
		cache_get_value_name_int(0,"airsell", PI[playerid][pSellNeed][3]);
		cache_get_value_name_int(0,"roomsell", PI[playerid][pSellNeed][4]);
		cache_get_value_name_int(0,"pVipadd", PI[playerid][pVipAdd]);
		cache_get_value_name_int(0,"GunLic", PI[playerid][pGunLic]);
		cache_get_value_name_int(0,"drunginv", PI[playerid][pDrugInv]);
		cache_get_value_name_int(0,"pHelper", PI[playerid][pHelper]);
		cache_get_value_name_int(0,"pAsk", PI[playerid][pAsk]);
		cache_get_value_name_int(0,"pInstr", PI[playerid][pInstrument]);
		cache_get_value_name_int(0,"pAskmute", PI[playerid][pAskmute]);
		cache_get_value_name_int(0,"pJemmy", PI[playerid][pJemmy]);
		cache_get_value_name_int(0,"pFMute", PI[playerid][pFMute]);

		//угон
		cache_get_value_name_int(0,"theftSkill", PI[playerid][ptheftSkill]);
		cache_get_value_name_int(0,"theftExp", PI[playerid][ptheftExp]);
		cache_get_value_name_int(0,"theftTime", PI[playerid][ptheftTime]);
		cache_get_value_name_int(0,"theftHome", PI[playerid][ptheftHome]);

		//праздник
		cache_get_value_name_int(0,"pumpkin", PI[playerid][ppumpkin]);

		cache_get_value_name_int(0,"pDonateBank", PI[playerid][pDonateBank]);
		cache_get_value_name_int(0,"pDonateBh", PI[playerid][pDonateBh]);

		SetString(player_ip[playerid],player_ip_check[playerid]);
		SetPlayerHealth(playerid, PI[playerid][pHP]);

		cache_get_value(0, "phonenumber", data), sscanf(data,"p<|>a<i>[25]",PI[playerid][pPhoneNumber]);

		cache_get_value(0,"phonename",get_name_store, 1024);

		sscanf(get_name_store,"p<|>s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]",
			pPhoneName[playerid][0],pPhoneName[playerid][1],pPhoneName[playerid][2],pPhoneName[playerid][3],pPhoneName[playerid][4],
			pPhoneName[playerid][5],pPhoneName[playerid][6],pPhoneName[playerid][7],pPhoneName[playerid][8],pPhoneName[playerid][9],
			pPhoneName[playerid][10],pPhoneName[playerid][11],pPhoneName[playerid][12],pPhoneName[playerid][13],pPhoneName[playerid][14],
			pPhoneName[playerid][15],pPhoneName[playerid][16],pPhoneName[playerid][17],pPhoneName[playerid][18],pPhoneName[playerid][19],
			pPhoneName[playerid][20],pPhoneName[playerid][21],pPhoneName[playerid][22],pPhoneName[playerid][23],pPhoneName[playerid][24]);

		sscanf(weapons, "p<,>a<i>[11]", g_data);
		sscanf(ammos, "p<,>a<i>[11]", a_data);

		for(new i; i < 10; i ++)
		{
			GunPlayer[playerid][i][0] = g_data[i];
			GunPlayer[playerid][i][1] = a_data[i];
		}

		if(PI[playerid][pID] == 0) return ErrorMessage(playerid,"Обратитесь к администрации, ошибка #77"),Kick(playerid),print("Обратитесь к администрации, ошибка #77");

		TI[playerid][tLoginTime] = 0;
	    TI[playerid][tLogin] = true;

		if(biz_war_gangzone != -1) GangZoneShowForPlayer(playerid, biz_war_gangzone, gFractionSpawn[MZInfo[bFrakVlad]][fracColor]);
		if(PI[playerid][pWarns] > 0) {
			/*if(PI[playerid][punWarnstime] > unix) {
				SendOk(playerid,"На аккаунте имеются активные предупреждения. Подробнее - "W"/warns");
			}*/
			if(PI[playerid][punWarnstime] <= unix) {
				/*new querys[128];
				format(querys, sizeof(querys), "DELETE FROM `warns` WHERE `name` = '%s'", player_name[playerid]);
				mysql_tquery(connects, querys, "", "");*/

				SendClientMessage(playerid,CGOLD, "Предупреждения были сняты");

				PI[playerid][punWarnstime] = 0;
				PI[playerid][pWarns] = 0;

				UpdatePlayerData(playerid, "pWarns", 0);
				UpdatePlayerData(playerid, "warntime", 0);
			}
		}
		if(!PI[playerid][pGoogleSec]) {
			ErrorMessage(playerid,""NO"[Подсказка]"G" У Вас не подключена защита Google Authenticator");
			ErrorMessage(playerid,""NO"[Подсказка]"G" Рекомендуем подключить данный вид защиты. "W"/mm > Безопасность > Google Authenticator");
		}
		if(!PI[playerid][pGolos] && PI[playerid][pLevel] >= 3 && election) {
			SendClientMessage(playerid,COLOR_RED,"В нашем штате проходят выборы президента");
			SendClientMessage(playerid,COLOR_RED,"Отдать голос кандидату можно в Мэрии на 2 этаже: /gps > государственные организации > Мэрия");
		}
		if(PI[playerid][pSellNeed][0]) {
			SendClientMessage(playerid,COLOR_REDD,"Ваш дом продан государству за неуплату");
			UpdatePlayerData(playerid,"homesell",0);
		}
		if(PI[playerid][pSellNeed][1]) {
			SendClientMessage(playerid,COLOR_REDD,"Ваш бизнес продан государству за неуплату");
			UpdatePlayerData(playerid,"bizzsell",0);
		}
		if(PI[playerid][pSellNeed][2]) {
			SendClientMessage(playerid,COLOR_REDD,"Ваш отель продан государству за неуплату");
			UpdatePlayerData(playerid,"hotelsell",0);
		}
		if(PI[playerid][pSellNeed][3]) {
			SendClientMessage(playerid,COLOR_REDD,"Ваш аэропорт продан государству за неуплату");
			UpdatePlayerData(playerid,"airsell",0);
		}
		if(PI[playerid][pSellNeed][4]) {
			SendClientMessage(playerid,COLOR_REDD,"Аренда номера в отеле истекла");
			UpdatePlayerData(playerid,"roomsell",0);
		}
		if(PI[playerid][pVips]) SendClientMessage(playerid,0x33CC00AA,"Вы вошли как VIP игрок");
		if(PI[playerid][pVipTime] <= unix && PI[playerid][pVips] != VIP_FOREVER && PI[playerid][pVips] != VIP_NONE) {
			SendOk(playerid, "Срок действия VIP привелегии закончился");
			PI[playerid][pVips] = 0;
			UpdatePlayerData(playerid, "pVips", 0);
			PI[playerid][pVipTime] = 0;
			UpdatePlayerData(playerid, "pVipTime", 0);
		}
		if(PI[playerid][pMember] != 0) {
			if(strcmp(FI[PI[playerid][pMember]][fMessage], "None", true) ) {
				new string[144];
				format(string,sizeof(string),"[FRACTION]: %s", FI[PI[playerid][pMember]][fMessage]);
				SendClientMessage(playerid,CGOLD,string);
			}
		}
		if(PI[playerid][pFamily] != 0) {
			if(strcmp(gFamily[PI[playerid][pFamily]-1][famMessage], "None", true) ) {
				new string[144];
				format(string,sizeof(string),"[FAMILY]: %s", gFamily[PI[playerid][pFamily]-1][famMessage]);
				SendClientMessage(playerid,CGOLD,string);
			}
		}
	    PlayerSpawn(playerid);

		format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
		mysql_tquery(connects,query_str,"load_cars","i",playerid);

		mysql_format(connects,query_st,sizeof(query_st),"SELECT * FROM `bank` WHERE BINARY `owner` = '%s'", player_name[playerid]);
		mysql_tquery(connects,query_st, "check_bank", "i", playerid);

		format(query_1,sizeof(query_1),"SELECT * FROM online_player WHERE date >= CURDATE() AND accountid = %d", PI[playerid][pID]);
		mysql_tquery(connects, query_1, "load_online_today" , "i", playerid);

		format(query_2,sizeof(query_2),"SELECT * FROM online_player WHERE (date >= (CURDATE()-1) AND date < CURDATE()) AND accountid = %d", PI[playerid][pID]);
		mysql_tquery(connects, query_2, "load_online_yesterday" , "i", playerid);

		format(query_3, sizeof(query_3), "SELECT * FROM `questsprogress` WHERE BINARY `name` = '%s' ORDER BY `idquest`;", player_name[playerid]);
		mysql_tquery(connects, query_3, "LoadQuestMysql", "d", playerid);

		format(sql_string, sizeof(sql_string), "SELECT * FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s'", player_name[playerid]);
		mysql_pquery(connects, sql_string, "bl_loading_callback", "i", playerid);

		mysql_format(connects,query_4,sizeof(query_4), "UPDATE `"TABLE_ACCOUNTS"` SET `online_status` = '%d' WHERE pID = '%d'",playerid,PI[playerid][pID]);
	 	mysql_tquery(connects,query_4, "", "");

		if(PI[playerid][pCash] < 0) {
			PI[playerid][pCash] = 0;
			UpdatePlayerData(playerid,"pCash",0);
		}

		SendClientMessage(playerid, -1, "Добро пожаловать на "P""FullServName"");
		if(Osnovat(GetName(playerid))) SendClientMessage(playerid, 0x66FF55FF, "Меню настроек: /launchaddon");

		if(PI[playerid][pAdminLevel]) SendClientMessage(playerid, COLOR_YELLOW, "[Admin]"W" для выхода на дежурство, введите: "P"/alogin");
		if(PI[playerid][pHelper]) SendClientMessage(playerid, COLOR_YELLOW, "[Game Support]"W" для выхода на дежурство, введите: "P"/gsduty");
		if(DJlvl[playerid] == 0) SendClientMessage(playerid, COLOR_YELLOW, "[DJ]"W" для выхода на дежурство, введите: "P"/djlogin");

		if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
			SendOk(playerid,"На сервере действует акция для новичков - "W"/bonuses");
		}
		if(BonusInfo[act_select] == 2) {
			SendOk(playerid,"На сервере действует акция - "W"/bonuses");
		}
		
		new plstream = SvCreateDLStreamAtPlayer(40.0, SV_INFINITY, playerid, 0xff0000ff, "L");
		lstream[playerid] = plstream;

		if (!SvGetVersion(playerid))
		{
//			SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}У вас не установлен плагин {ae433d}"MicroName" Voice!");
//			SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}Установить можете его с нашей группы!");
		}
		else if (!SvHasMicro(playerid))
		{
//			SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}У вас отсутствует микрофон!");
//			SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}Проверьте правильность подключения и перезайдите!");
		}
		else if (lstream[playerid] == plstream)
		{
			// red color
	//		SendClientMessage(playerid, COLOR_VOICE, "[ "MicroName" Voice ] {AFAFAF}Голосовой чат успешно подключен! Для активации зажмите клавишу {AE433D}'Z'.");

			if (gstream) SvAttachListenerToStream(gstream, playerid);

			SvAddKey(playerid, 0x42);
			SvAddKey(playerid, 0x49);
			SvAddKey(playerid, 0x52);
			SvAddKey(playerid, 0x5A);
		}
	}
	return 1;
}
IsObjectBarrier(playerid){
	new max_rear_object_id = -1;
	new Float:max_rear_object_distance = 100000;

	for(new id = 0; id < MAX_OBJECT_MOVED; id++){
		if(moved_info[id][moved_vw] != GetPlayerVirtualWorld(playerid) && moved_info[id][moved_vw] != -1) continue;
		new Float:here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]));
		if(here_distance < max_rear_object_distance){
			max_rear_object_id = id;
			max_rear_object_distance = here_distance;
		}
	}
	if(max_rear_object_distance > 15.0 && IsPlayerInAnyVehicle(playerid)) max_rear_object_id = -1;
	else if(max_rear_object_distance > 3.5 && !IsPlayerInAnyVehicle(playerid)) max_rear_object_id = -1;
	return max_rear_object_id;
}

MoveObjectBarrier(id){
	if(moved_info[id][status_moved]) return 1;
	if(IsDynamicObjectMoving(moved_info[id][moved_id])) return 1;
	if(id == 50) {
		MoveDynamicObject(moved_info[4][moved_id],moved_pos_object[4][0],moved_pos_object[4][1],moved_pos_object[4][2]+0.04,(moved_info[4][moved_modelid] == 10000) ? (0.014) : (moved_info[4][moved_modelid] == 2920) ? (0.014) : (moved_info[4][moved_modelid] == 1495) ? (0.034) : (moved_info[4][moved_modelid] == 2949) ? (0.034) : (moved_info[4][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[4][3],moved_pos_object[4][4],moved_pos_object[4][5]);
		moved_info[4][status_moved]=true;
	}
	if(id == 4) {
		MoveDynamicObject(moved_info[50][moved_id],moved_pos_object[50][0],moved_pos_object[50][1],moved_pos_object[50][2]+0.04,(moved_info[50][moved_modelid] == 10000) ? (0.014) : (moved_info[50][moved_modelid] == 2920) ? (0.014) : (moved_info[50][moved_modelid] == 1495) ? (0.034) : (moved_info[50][moved_modelid] == 2949) ? (0.034) : (moved_info[50][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[50][3],moved_pos_object[50][4],moved_pos_object[50][5]);
		moved_info[50][status_moved]=true;
	}
	MoveDynamicObject(moved_info[id][moved_id],moved_pos_object[id][0],moved_pos_object[id][1],moved_pos_object[id][2]+0.04,(moved_info[id][moved_modelid] == 10000) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[id][3],moved_pos_object[id][4],moved_pos_object[id][5]);
	moved_info[id][status_moved]=true;
	return 1;
}
CB: CheckObjectBarrier(id){
	MoveDynamicObject(moved_info[id][moved_id],moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]-0.04,(moved_info[id][moved_modelid] == 10000) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_info[id][movedPosRotationX],moved_info[id][movedPosRotationY],moved_info[id][movedPosRotationZ]);
	return 1;
}
stock CheckBarrier(playerid,barrierid)
{
	switch(barrierid)
	{
	    case 0:
		{
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			if(!IsAArm(playerid)) return 1;
		}
	    case 1..4:
		{
            if(!IsAArm(playerid)) return 1;
	    }
		case 17..19:
		{
			if(!IsACop(playerid) || !start_work[playerid]) return 1;
		}
		case 21: if(!IsAArm(playerid) || !start_work[playerid] || PI[playerid][pRank] < 7) return 1;
		case 22..24,29:
		{
		    if(!IsPlayerInAnyVehicle(playerid)) return 1;

		    if(PI[playerid][bizz_work] == 0) return 1;
			if(gBusiness[PI[playerid][bizz_work]][bizzType] != 11) return 1;
		}
		case 25:
		{
		    if(PI[playerid][bizz_work] == 0) return 1;
			if(gBusiness[PI[playerid][bizz_work]][bizzType] != 11) return 1;
		}
		case 27:
		{
		    if(IsAHouseNumber(playerid) == -1) return ErrorMessage(playerid, "Вы не владеете/арендуете дом в особняке!");
		}
		case 32,45..53:
		{
			if(!IsACop(playerid)) return 1;
		}
		case 34,36,37:
		{
		    if(!IsPlayerInAnyVehicle(playerid)) return 1;
		    
		    if(PI[playerid][bizz_work] == 0) return 1;
			if(gBusiness[PI[playerid][bizz_work]][bizzType] != 14) return 1;
		}
		case 26,33,41: if(!IsAArm(playerid)) return 1;
		case 38..40,44:
		{
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(!IsACop(playerid) || !start_work[playerid]) return 1;
		}
		case 35:
		{
			if(PI[playerid][pMember] != fFBI || !start_work[playerid]) return 1;
		}
		case 42,43:
		{
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			if(PI[playerid][pAdmin] == 0)
  			{
  			    if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1])
				  	return ErrorMessage(playerid, "Вы не за рулём своего Т/С");
			}
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return ErrorMessage(playerid, "Недоступно для данного Т/С");

		}
	}
	if(barrierid == 30 || barrierid == 31 || barrierid == 42 || barrierid == 43) return 0;
	else
	{
		MoveObjectBarrier(barrierid);
	}
	return 1;
}
stock GetVehicleFreeSeat(vehicleid) {
    if(!vehicleid) return -1;
    new model = GetVehicleModel(vehicleid), maxs = GetVehicleMaxSeat(model) - 1, bool: seat[3], cnt;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
        if(pseat < 1 || pseat > 3) continue;
        seat[pseat-1] = true;
        cnt ++;
        if(cnt >= maxs) {
        	return -1;
        }
	}
    for(new i; i < 3; i ++) {
    	if(!seat[i]) return i + 1;
    }
    return -1;
}
stock GetVehicleMaxSeat(modelid) {
    switch(modelid){
        case 596..598, 427, 490: {
        	return 4;
        }
        case 599, 497, 528: {
    		return 2;
    	}
    }
    return -1;
}
stock UpdateFuncBizzData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `business_func` SET `%s` = '%d' WHERE `bizzID` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBizzUpgrade(id)
{
	new query[1024];
	format(query, sizeof(query), "\
		UPDATE `business` SET `upgrade` = '%d|%d|%d' WHERE `id` = '%d'", gBusiness[id][bizzUpgrade][0],gBusiness[id][bizzUpgrade][1],gBusiness[id][bizzUpgrade][2],id);
		
	mysql_tquery(connects, query, "", "");
	return 1;
}
stock UpdateBintDataInt(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `bints` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBintDataFloat(id,const field[],Float:data){
	new query[128];
	format(query,sizeof(query),"UPDATE `bints` SET `%s` = '%f' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBintDataStr(id,const field[],data[]){
	new query[128];
	format(query,sizeof(query),"UPDATE `bints` SET `%s` = '%s' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBusinessDataInt(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `business` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBusinessDataFloat(id,const field[],Float:data){
	new query[128];
	format(query,sizeof(query),"UPDATE `business` SET `%s` = '%f' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBusinessDataStr(id,const field[],data[]){
	new query[128];
	format(query,sizeof(query),"UPDATE `business` SET `%s` = '%s' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateAtmData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `atms` SET `%s` = '%d' WHERE `atmID` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateHotelData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `hotels` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateAirportData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `airports` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveHotels(id) {
	new query[156];
	format(query, sizeof(query), "UPDATE `hotels` SET `bank`='%d', `bankday`='%d',`visitors`='%d' WHERE `id` = '%d'",
	gHotels[id][hotelBank],
	gHotels[id][hotelBankDay],
	gHotels[id][hotelVisitors],
	id+1);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveMarket() {
	new query[512],temp[0x9e];

	mysql_format(connects, query, sizeof(query), "UPDATE `blackmarket` SET ");
	format(temp,sizeof(temp),"`gang`= '%i',",		black_prods[0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drugs`= '%i',",		black_prods[1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`mats`= '%i',",		black_prods[2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`armour`= '%i',",		black_prods[3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`skin`= '%i',",		black_prods[4]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drugsprice`= '%i',",	black_prods[5]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`matsprice`= '%i',",	black_prods[6]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`armourprice`= '%i',",black_prods[7]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`skinprice`= '%i',",	black_prods[8]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`time`= '%i' LIMIT 1",black_prods[9]), 	strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return mysql_errno();
}
stock UpdateFraction(fractionID,const field[],data)
{
	new query[200];
	format(query,sizeof(query),"UPDATE `fractions` SET `%s` = '%d' WHERE `ID` = '%d' LIMIT 1",field,data,fractionID);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateFractionVehicle(ID,const field[],data)
{
	new query[200];
	format(query,sizeof(query),"UPDATE `frac_vehicle` SET `%s` = '%d' WHERE `fvehID` = '%d' LIMIT 1",field,data,ID+1);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdatePlayerData(playerid,const field[],data)
{
	new query[200];
	format(query,sizeof(query),"UPDATE `accounts` SET `%s` = '%d' WHERE `Name` = '%s' LIMIT 1",field,data,GetName(playerid));
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateFamily(id,const field[],data)
{
	new query[200];
	format(query,sizeof(query),"UPDATE `family` SET `%s` = '%d' WHERE `id` = '%d' LIMIT 1",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SavefRank(rank,fam)
{
	new query[256];
	format(query, sizeof(query), "UPDATE `family` SET `Rank_%d` = '%s' WHERE `id` = '%i'",rank,FamRanks[fam][rank-1],fam+1);
	return mysql_tquery(connects, query, "", "");
}
stock ShowBusinessInformation(playerid,id,dialogid){
	new status[20];
	new atext[24];
	switch(gBusiness[id][bizzMafia]){
 		case fRM: atext = "Русская Мафия";
 		case fLCN: atext = "Итальянская мафия";
		case fYAKUZA: atext = "Японская мафия";
  		default: atext = "---";
	}
	new type = gBusiness[id][bizzType] - 1;
	if(gBusiness[id][bizzStatus]) strcat(status,""GREEN"Работает");
	else strcat(status,""NO"Не работает");

	new day;
	day = (gBusiness[id][bizzDay]-gettime())/86400;

	static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Тип: "P"%s\n\
								"W"Гос.стоимость: "ORANGE"$%d\n\
								"W"Цена товара: "ORANGE"$%d\n\n\
								"W"Продуктов: "P"%d ед. / %d ед.\n\
								"W"Продуктов заказано: "P"%d"W" ед. ["ORANGE"$%d"W" за ед.]\n\n\
								"W"Касса: "ORANGE"$%d"W"\n\
								"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда бизнеса: "P"%iд\n\
								"W"Крыша: "P"%s\n\
								"W"Состояние: "P"%s";
	new string[650];
	format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
	gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzProduct],gBusiness[id][bizzUpgrade][0],gBusiness[id][bizzProdOrder],gBusiness[id][bizzProdOrderPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay],gBusiness[id][bizzVisitors],day,atext,status);
	return D(playerid,dialogid,DSM, ""P"Бизнес",string,"OK","");
}
stock ShowHotelInformation(playerid,id,dialogid){
	new day;
	day = (gHotels[id][hotelDay]-gettime())/86400;

	static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Гос.стоимость: "GREEN"$%d\n\
								"W"Цена за сутки проживания: "GREEN"$%d\n\
								"W"Касса: "GREEN"$%d"W"\n\
								"W"Заработано за сутки: "GREEN"$%d"W"\n\
								"W"Посетителей: "P"%d\n\
								"W"Аренда отеля: "P"%iд\n";
	new string[sizeof(f_str) +1 + 35];
	format(string,sizeof(string),f_str,gHotels[id][hotelName],gHotels[id][hotelPrice],gHotels[id][hotelCoast],gHotels[id][hotelBank],gHotels[id][hotelBankDay],gHotels[id][hotelVisitors],day);
	return D(playerid,dialogid,DSM, ""P"Отель",string,"OK","");
}
stock ShowAirportInformation(playerid,id,dialogid){
	new day,arend;
	day = (gAirs[id][airDay]-gettime())/86400;
	for(new i = 1; i <= gPlaneCount; i ++) {
		if(gAirplanes[i][aAirport] != id+1) continue;
		if(GetString(gAirplanes[i][aOwner], "State")) {
			arend++;
		}
	}
	static const f_str[] = ""W"Название: "YELLOW"%s\n\n\
								"W"Гос.стоимость: "GREEN"$%d\n\
								"W"Цена аренды воздушного транспорта: "GREEN"$%d\n\
								"W"Касса: "GREEN"$%d"W"\n\
								"W"Воздушный транспорт без аренды: "P"[%d/8]\n\
								"W"Аренда аэропорта: "P"%iд\n";
	new string[sizeof(f_str) +1 + 35];
	format(string,sizeof(string),f_str,gAirs[id][airName],gAirs[id][airPrice],gAirs[id][airCoast],gAirs[id][airBank],arend,day);
	return D(playerid,dialogid,DSM, ""P"Аэропорт",string,"OK","");
}
stock GetPlayerMoneyEx(playerid) return PI[playerid][pCash];
stock isNumeric(const string[]) {
	for (new i = 0, j = strlen(string); i < j; i++) {
		if (string[i] > '9' || string[i] < '0') return 1;
	}
	return 0;
}
CB: donate_shop(playerid, number, id, price) {
	new rows;
	rows = cache_num_rows();
	if(rows) {
		switch(id) {
			case 0: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
									Введите 5 значный номер телефона, который Вы хотите приобрести:\n\
									"W"Стоимость: "GREEN"200 рублей\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
			case 1: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
										Введите 4 значный номер телефона, который Вы хотите приобрести:\n\
										"W"Стоимость: "GREEN"300 рублей\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
			case 2: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
										Введите 3 значный номер телефона, который Вы хотите приобрести:\n\
										"W"Стоимость: "GREEN"400 рублей\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
			case 3: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""P"Донат",""G"Покупка номера телефона\n\n\
										Введите 2 значный номер телефона, который Вы хотите приобрести:\n\
										"W"Стоимость: "GREEN"500 рублей\n\n"NO"*"G" Указанный номер занят\n\n","Купить","Закрыть");
				return true;
			}
		}
	}
	else {
		PI[playerid][pRouble] -= price;
		UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
		PI[playerid][pPhone] = number;
		UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
		new string[64];
		format(string,sizeof(string),"Поздравляем с покупкой! Ваш новый номер: "W"%d",PI[playerid][pPhone]);
		SendClientMessage(playerid,CGOLD,string);
	}
	return true;
}
CB: sim_shop(playerid, number, id, price) {
	new rows;
	rows = cache_num_rows();
	if(rows) return D(playerid,D_BIZZ_SIM,DSI, ""P"Покупка номера","\n\n"W"Введите номер, который хотите использовать (6 цифр):\n\n"NO"*"G" Указанный номер занят\n\n","Далее","Закрыть");
	else {
		PI[playerid][pPhone] = number;
		UpdatePlayerData(playerid,"pPhone",PI[playerid][pPhone]);
		GiveMoney(playerid, -price, "покупка в 24-7");
		if(gBusiness[id][bizzProduct]-gShopProduct[4] > 0) {
			gBusiness[id][bizzProduct]-= gShopProduct[4];
			bizz_pay(id,price);
		}
		UpdateBusinessText(id);
		new string[64];
		format(string,sizeof(string),"Поздравляем с покупкой! Ваш новый номер: "W"%d",PI[playerid][pPhone]);
		SendOk(playerid,string);
		show_24(playerid,id);
	}
	return true;
}
stock show_24(playerid, id) {
    new string[512];
    string = ""P"Наименование\t"P"Стоимость\n";
	for(new i;i<SHOP_OBJECTS;i++){
		format(string,sizeof(string),""W"%s\t%s\t"GREEN"$%d\n",string,gShopObject[i],gShopPrice[i]*gBusiness[id][bizzPrice]);
	}
	D(playerid,D_BIZZ_24,DSTH,"Магазин 24/7",string,"Купить","Выход");
	return 1;
}
stock show_fish(playerid) {
	new id = TI[playerid][tSelectedBusinessID];
	static const f_str[] = ""P"Наименование\t"P"Стоимость\n"W"Удочка [1 шт.]\t"GREEN"$%d\n"W"Снасти [1 шт.]\t"GREEN"$%d\n"W"Наживка [10 шт.]\t"GREEN"$%d\n"W"Пропуск на ловлю рыбы [1 шт.]\t"GREEN"$%d\n"W"- Информация";
	new string[sizeof(f_str) +1 + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6)];
	format(string,sizeof(string),f_str, 520*gBusiness[id][bizzPrice],340*gBusiness[id][bizzPrice],100*gBusiness[id][bizzPrice],400*gBusiness[id][bizzPrice]);
	D(playerid, D_BIZZ_FISH, DSTH, "Меню", string, "Купить", "Отмена");
}
stock show_tavern(playerid, id) {
    new string[180];
    string = "Наименование\tСтоимость\n";
	for(new i;i<4;i++){
		format(string,sizeof(string),"%s\t%s\t$%d\n",string,gTavernNames[i],gTavernCosts[i]*10*gBusiness[id][bizzPrice]);
	}
	D(playerid,D_BIZZ_TAVERN,DSTH,"Закусочная",string,"Купить","Выход");
	return 1;
}
stock SavePlane(j) {
	new query[156];
	mysql_format(connects,query,sizeof(query),"UPDATE `plane` SET Owner = '%s',Time = '%d' WHERE ID = %i",gAirplanes[j][aOwner],gAirplanes[j][aTime],j);
	mysql_tquery(connects, query, "","");
	return true;
}
UseLabrary(member,id,status) {
	if(status == 1) {
		if(l_actor[member][id]) {
			l_actors[member][id] = CreateActor(144,l_actor_pos[id][0],l_actor_pos[id][1],l_actor_pos[id][2],l_actor_pos[id][3]);
			if(member == 0) SetActorVirtualWorld(l_actors[member][id],49);
			else if(member == 1) SetActorVirtualWorld(l_actors[member][id],50);
			else if(member == 2) SetActorVirtualWorld(l_actors[member][id],51);
			if(id >= 2) ApplyActorAnimation(l_actors[member][id],"BOMBER", "BOM_Plant",4,1,0,0,1,0);
			else ApplyActorAnimation(l_actors[member][id],"FLAME","FLAME_FIRE",4,1,0,0,1,0);
		}
	}
	else {
		if(l_actors[member][id]) DestroyActor(l_actors[member][id]);
		SaveLabrary(member);
	}
}
stock SaveLabrary(member) {
	new data[48],data_2[48];
	for(new i;i<8;i++) {
		if(!i) {
			format(data,sizeof(data),"%d",l_actor[member][i]);
			format(data_2,sizeof(data_2),"%d",l_actort[member][i]);
		}
		else {
			format(data,sizeof(data),"%s|%d",data,l_actor[member][i]);
			format(data_2,sizeof(data_2),"%s|%d",data_2,l_actort[member][i]);
		}
	}
	new query[256];
	mysql_format(connects,query,sizeof(query),"UPDATE `labrary` SET actor_%d = '%s',actor_t%d = '%s' LIMIT 1",member+1,data,member+1,data_2);
	mysql_tquery(connects, query, "","");
	return true;
}
stock save_salary(member) {
	new data[90];
	for(new i;i<15;i++) {
		if(!i) format(data,sizeof(data),"%d",FracSalary[member][i]);
		else format(data,sizeof(data),"%s|%d",data,FracSalary[member][i]);
	}
	switch(member) {
		case 0: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_pd = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 1: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_fbi = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 3: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_army = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
			printf("%s",query);
		}
		case 4: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_medics = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 5: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_news = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 8: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_whitehouse = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	}
	return true;
}
stock ACLoad(playerid) {
    if(PI[playerid][pAdmin] > 0) {
        for(new i;i<10;i++) 			TextDrawShowForPlayer(playerid, CheatText[i]);
		for(new i;i<3;i++) 				TextDrawShowForPlayer(playerid, CheatPanel[i]);
        return true;
    }
    return true;
}
CB: sad_temp_1(field) {
	SI[field][sad_temp] = 2;
	DestroyDynamicObject(SI[field][sad_object][0]);
	SI[field][sad_object][0] = CreateDynamicObject(673,sad_objects[field][0],sad_objects[field][1],sad_objects[field][2],sad_objects[field][3],sad_objects[field][4],sad_objects[field][5],-1,-1,-1,90.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - цветение\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SetTimerEx("sad_temp_2",30000, false, "i", field);
	return 1;
}

/*CB: sad_temp_2(field) {
	SI[field][sad_temp] = 3;
	new ID;
	for(new i; i < 833; i ++){
		if(sad_apple[i][a_ID] == field){	
			ID = i;
			break;
		}
	}
//	SI[field][sad_object][1] = CreateDynamicObject(19576,sad_apple[ID][a_coordsX],sad_apple[ID][a_coordsY],sad_apple[ID][a_coordsZ],sad_apple[ID][a_coordsAX],sad_apple[ID][a_coordsAY],sad_apple[ID][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][2] = CreateDynamicObject(19576,sad_apple[ID+1][a_coordsX],sad_apple[ID+1][a_coordsY],sad_apple[ID+1][a_coordsZ],sad_apple[ID+1][a_coordsAX],sad_apple[ID+1][a_coordsAY],sad_apple[ID+1][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][3] = CreateDynamicObject(19576,sad_apple[ID+2][a_coordsX],sad_apple[ID+2][a_coordsY],sad_apple[ID+2][a_coordsZ],sad_apple[ID+2][a_coordsAX],sad_apple[ID+2][a_coordsAY],sad_apple[ID+2][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][4] = CreateDynamicObject(19576,sad_apple[ID+3][a_coordsX],sad_apple[ID+3][a_coordsY],sad_apple[ID+3][a_coordsZ],sad_apple[ID+3][a_coordsAX],sad_apple[ID+3][a_coordsAY],sad_apple[ID+3][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][5] = CreateDynamicObject(19576,sad_apple[ID+4][a_coordsX],sad_apple[ID+4][a_coordsY],sad_apple[ID+4][a_coordsZ],sad_apple[ID+4][a_coordsAX],sad_apple[ID+4][a_coordsAY],sad_apple[ID+4][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][6] = CreateDynamicObject(19576,sad_apple[ID+5][a_coordsX],sad_apple[ID+5][a_coordsY],sad_apple[ID+5][a_coordsZ],sad_apple[ID+5][a_coordsAX],sad_apple[ID+5][a_coordsAY],sad_apple[ID+5][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][7] = );

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - созревание\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SetTimerEx("sad_temp_3",30000, false, "i", field);
	return 1;
}*/

CB: sad_temp_3(field) {
	SI[field][sad_temp] = 4;

	DestroyDynamicObject(SI[field][sad_object][1]);
	DestroyDynamicObject(SI[field][sad_object][2]);
	DestroyDynamicObject(SI[field][sad_object][3]);
	DestroyDynamicObject(SI[field][sad_object][4]);
	DestroyDynamicObject(SI[field][sad_object][5]);
	DestroyDynamicObject(SI[field][sad_object][6]);
	DestroyDynamicObject(SI[field][sad_object][7]);

	new ID;
	for(new i; i < 833; i ++) {
		if(sad_apple[i][a_ID] == field) {
			ID = i;
			break;
		}
	}
//	SI[field][sad_object][1] = CreateDynamicObject(10000,sad_apple[ID][a_coordsX],sad_apple[ID][a_coordsY],sad_apple[ID][a_coordsZ],sad_apple[ID][a_coordsAX],sad_apple[ID][a_coordsAY],sad_apple[ID][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][2] = CreateDynamicObject(10000,sad_apple[ID+1][a_coordsX],sad_apple[ID+1][a_coordsY],sad_apple[ID+1][a_coordsZ],sad_apple[ID+1][a_coordsAX],sad_apple[ID+1][a_coordsAY],sad_apple[ID+1][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][3] = CreateDynamicObject(10000,sad_apple[ID+2][a_coordsX],sad_apple[ID+2][a_coordsY],sad_apple[ID+2][a_coordsZ],sad_apple[ID+2][a_coordsAX],sad_apple[ID+2][a_coordsAY],sad_apple[ID+2][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][4] = CreateDynamicObject(10000,sad_apple[ID+3][a_coordsX],sad_apple[ID+3][a_coordsY],sad_apple[ID+3][a_coordsZ],sad_apple[ID+3][a_coordsAX],sad_apple[ID+3][a_coordsAY],sad_apple[ID+3][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][5] = CreateDynamicObject(10000,sad_apple[ID+4][a_coordsX],sad_apple[ID+4][a_coordsY],sad_apple[ID+4][a_coordsZ],sad_apple[ID+4][a_coordsAX],sad_apple[ID+4][a_coordsAY],sad_apple[ID+4][a_coordsAZ],-1,-1,-1,20.000);
//	SI[field][sad_object][6] = CreateDynamicObject(10000,sad_apple[ID+5][a_coordsX],sad_apple[ID+5][a_coordsY],sad_apple[ID+5][a_coordsZ],sad_apple[ID+5][a_coordsAX],sad_apple[ID+5][a_coordsAY],sad_apple[ID+5][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][7] = CreateDynamicObject(10000,sad_apple[ID+6][a_coordsX],sad_apple[ID+6][a_coordsY],sad_apple[ID+6][a_coordsZ],sad_apple[ID+6][a_coordsAX],sad_apple[ID+6][a_coordsAY],sad_apple[ID+6][a_coordsAZ],-1,-1,-1,20.000);

	SI[field][sad_object][8] = CreateDynamicObject(1428,sad_stairs[field][0],sad_stairs[field][1],sad_stairs[field][2],sad_stairs[field][3],sad_stairs[field][4],sad_stairs[field][5],-1,-1,-1,90.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - сбор яблок\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SI[field][sad_time] = unix + 60*2;
	return 1;
}

CB: sad_temp_4(field,playerid){
	ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	DeletePVar(playerid,"bailer_2");
//	SetPlayerAttachedObject(playerid, 4 , 19636, 1, 0.051999,0.418000,-0.008999, -85.699913,94.600028,-5.600045, 0.701999,0.684000,0.805999);
	SetPVarInt(playerid,"bailer_3",1);
    SetTimerEx("CarryDelay",1000,false,"i",playerid);

	new rand = Random(6,10);
	TI[playerid][tJobSad][2] =  rand;
	TI[playerid][tJobSad][3] += rand;

	if(QuestProgress[playerid][1] < 40 && AcceptQuest[playerid][1] != 0) {
		QuestProgress[playerid][1] += rand;
		save_quest(playerid,1);
		if(QuestProgress[playerid][1] >= 40) QuestProgress[playerid][1] = 40;
	}
	if(QuestProgress[playerid][1] == 40 && AcceptQuest[playerid][1] != 0) {
		D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно собрали 40кг яблок. Данное задание можно завершить и забрать за него награду","Закрыть","");
		NextStapQI(playerid,1);
	}
	new string[128];
	format(string,sizeof(string),""P"%d"G" кг. яблок с дерева собраны. Всего кг. собрано - "ORANGE"%d",rand,TI[playerid][tJobSad][3]);
	SendUse(playerid,string);
	SendOk(playerid,"Отнесите яблоки на склад");
	EnableGPSForPlayer(playerid, 1627.9961,2264.3284,14.5600);
	sad_delete(field);
	DeletePVar(playerid,"bailer_4");
	DeletePVar(playerid,"sad_uxod");
	return 1;
}

stock sad_delete(ID) {
	if(IsPlayerConnected(GetPlayerID(SI[ID][sad_fermer]))) DeletePVar(GetPlayerID(SI[ID][sad_fermer]),"sad_uxod");

	SI[ID][sad_temp] = 0;
	SI[ID][sad_time] = 0;

	DestroyDynamicObject(SI[ID][sad_object][0]);
	DestroyDynamicObject(SI[ID][sad_object][1]);
	DestroyDynamicObject(SI[ID][sad_object][2]);
	DestroyDynamicObject(SI[ID][sad_object][3]);
	DestroyDynamicObject(SI[ID][sad_object][4]);
	DestroyDynamicObject(SI[ID][sad_object][5]);
	DestroyDynamicObject(SI[ID][sad_object][6]);
	DestroyDynamicObject(SI[ID][sad_object][7]);
	DestroyDynamicObject(SI[ID][sad_object][8]);

//	SI[ID][sad_object][0] = CreateDynamicObject(765,sad_objects[ID][0],sad_objects[ID][1],sad_objects[ID][2],sad_objects[ID][3],sad_objects[ID][4],sad_objects[ID][5],-1,-1,-1,90.000);
	UpdateDynamic3DTextLabelText(SI[ID][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Отсутствует");

	if(IsPlayerConnected(GetPlayerID(SI[ID][sad_fermer]))) Streamer_Update(GetPlayerID(SI[ID][sad_fermer]));
	return 1;
}
CB: use_medcards(playerid) {
	PI[playerid][pMedCard] = 1;
	UpdatePlayerData(playerid,"MedCard",1);

	new string[156];
	format(string,sizeof(string),""P"Поздравляем с получением мед.карты!\n\n\
									"W"Имя:\t\t\t"GREEN"%s\n\
									"W"Пол:\t\t\t"GREEN"%s\n\
									"W"Наркозависимость:\t"GREEN"%d",player_name[playerid],(PI[playerid][pSex] == 1) ? ("Мужской") : ("Женский"),PI[playerid][pAddiction]);
	D(playerid,DIALOG_NONE,DSM, ""P"Медицинская карта",string,"Хорошо","");
	return 1;
}
CB: use_medsex(playerid) {
	if(PI[playerid][pSex] == 1) {
		new rand = random(sizeof(med_gskin));
		PI[playerid][pSex] = 2;
		PI[playerid][pSkin] = med_gskin[rand];
	}
	else {
		new rand = random(sizeof(med_mskin));
		PI[playerid][pSex] = 1;
		PI[playerid][pSkin] = med_mskin[rand];
	}
	UpdatePlayerData(playerid,"pSex",PI[playerid][pSex]);
	UpdatePlayerData(playerid,"Skin",PI[playerid][pSkin]);
	A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	return 1;
}
stock UpdateHouseDress(houseid) {
	new cnt;
	for(new l;l<3;l++) {
		if(gHouses[houseid][houseSkin][l]) cnt++;
	}
	cnt--;						
	if(cnt < 0 && gHouses[houseid][houseOwnerID]) printf("Возможны лаги с одеждой в доме %d",houseid);
	new data[24];
	for(new i;i<3;i++) {
		if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseSkin][i]);
		else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseSkin][i]);
	}
	SaveHouse(houseid);
	return mysql_errno();
}
stock save_other()
{
	new query[512];
	format(query,sizeof(query),"UPDATE `others` SET `gun_mats` = '%d',`oil_mats` = '%d',`woodsklad` = '%d',`disease` = '%d'",zavodsklad,oilsklad,woodsklad,disease);
	mysql_pquery(connects,query);
	return 1;
}
stock ShowHotelRooms(playerid) {
	new string[65];
    new hotel = -1;
	SetPVarInt(playerid,"select_room",-1);
    switch(GetPlayerVirtualWorld(playerid)) {
        case 0: hotel = 1;
        case 1: hotel = 2;
        case 2: hotel = 3;
		case 3: hotel = 4;
        default: hotel = -1;
    }
    if(hotel != -1) {
    	new hotelstr[3800], hotels = 1;
		hotelstr = ""YELLOW"Номер\t"YELLOW"Статус\t"YELLOW"Арендатор\n";
    	for(new i; i < gRoomsCount; i ++) {
    		if(gRooms[i][roomsHotel] == hotel) {
				if(GetPVarInt(playerid,"select_room") == -1) SetPVarInt(playerid,"select_room",i);
				if(GetString(gRooms[i][roomsOwner], "None")) format(string, sizeof(string), ""W"%d\t"GREEN"Свободен\t"G"Отсутствует\n",hotels);
				else format(string, sizeof(string), ""W"%d\t"NO"Занят\t"CA"%s\n",hotels,gRooms[i][roomsOwner]);
				strcat(hotelstr, string);
				hotels ++;
    		}
    	}
    	D(playerid, D_HOTEL_RECEPTION, DSTH, "Отель", hotelstr, "Выбрать", "Отмена");
    }
    return true;
}
CB: creategFamily(id) {
	gFamily[id][famID] = cache_insert_id();
	new query[512];
	format(query, sizeof(query), "SELECT `time` FROM `family` WHERE `id` = '%d'", gFamily[id][famID]);
	mysql_tquery(connects, query, "get_dategFamily", "i", id);
	return 1;
}
CB: get_dategFamily(id) {
	cache_get_value(0,"time",gFamily[id][famDate],22);
	return 1;
}
stock cancel_skin(playerid) {
	CancelSelectTextDraw(playerid);
	for(new i=0; i<9; i++) {
		TextDrawHideForPlayer(playerid,buy_skins[i]);
	}
	PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
	DeletePVar(playerid,"ChangingSkin");
	TI[playerid][tTPpick] = true;
	SetPlayerPosAC(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"),GetPVarInt(playerid, "vw"),GetPVarInt(playerid, "interior"));
	SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	DeletePVar(playerid, "posx");
	DeletePVar(playerid, "posy");
	DeletePVar(playerid, "posz");
	DeletePVar(playerid, "posa");
	DeletePVar(playerid, "interior");
	DeletePVar(playerid, "vw");
	return 1;
}
stock RandomMassive(massive[], size) {
	for(new i; i < size; i ++){
	    new rand = random(size), mass = massive[i];
	    massive[i] = massive[rand];
	   	massive[rand] = mass;
	}
}
bank_dialog(playerid) return D(playerid,D_BANK,DSL, ""P"Банк", "Активные счета\nОткрыть новый счет", "Выбрать", "Назад");
bank_score(playerid) return D(playerid,D_BANK_TOP,DSL, ""P"Список операций", ""P"1."W" Информация о счёте\n"P"2."W" Пополнить счёт\n"P"3."W" Выдача наличных\n"P"4."W" Перевести на другой счёт\n"P"5."W" Список операций\n"P"6."W" Переименовать счёт\n"P"7."W" Изменить PIN-код", "Выбрать", "Назад");
family_dialog(playerid) return D(playerid,D_FAMILY,DSL, ""P"Семья", ""P"1."W" Информация о семье\n"P"2."W" Состав семьи [{33AA33}online"W"]\n"P"3."W" Состав семьи [{AA3333}offline"W"]\n"P"4."W" Сбережения семьи\n"P"5."W" Настройки семьи\n"P"6."NO" Покинуть семью", "Выбрать", "Закрыть");
family_setting(playerid) {
	new fam = PI[playerid][pFamily]-1;
	static const f_str[] = ""P"1."W" Может принимать:\t\t\t"P"%s(%i)"W"\n\
								"P"2."W" Может увольнять:\t\t\t"P"%s(%i)"W"\n\
								"P"3."W" Может повышать:\t\t\t"P"%s(%i)"W"\n\
								"P"4."W" Может пользоваться складом:\t"P"%s(%i)"W"\n\
								"P"5."W" Изменить названия рангов\n\
								"P"6."W" Изменить цвет семьи\n\
								"P"7."W" Сменить название семьи\n\
								"P"8."W" Улучшения склада\n\
								"P"9."W" Сообщение семье при входе в игру\n\
								"P"10."W" Выбрать дом спавна семьи";
	new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33)];
	format(string,sizeof(string),f_str,GetFamName(fam,gFamily[fam][famInvRang]),gFamily[fam][famInvRang],
							GetFamName(fam,gFamily[fam][famUninvRang]),gFamily[fam][famUninvRang],
							GetFamName(fam,gFamily[fam][famGiveRang]),gFamily[fam][famGiveRang],
							GetFamName(fam,gFamily[fam][famSklad]),gFamily[fam][famSklad]);
	return D(playerid,D_FAMILY_SET,DSL,""P"Настройки",string,"Выбрать","Назад");
}
CB: check_bank(playerid) {
    new rows;
	rows = cache_num_rows();
    if(rows) {
        for(new i; i < rows; i++) {
			cache_get_value_name(i, "name",  score_name[playerid][i],13);
			cache_get_value_name(i, "owner", gBanks[playerid][bankOwner][i],MAX_PLAYER_NAME);
			
			cache_get_value_name_int(i, "number",   gBanks[playerid][bankNumber][i]);
			cache_get_value_name_int(i, "balance",  gBanks[playerid][bankBalance][i]);
			cache_get_value_name_int(i, "code", gBanks[playerid][bankPassword][i]);
			
            score_number[playerid]++;
        }
    }
    return 1;
}
CB: update_bank(playerid) {
    new rows;
	rows = cache_num_rows();
    if(rows) {
        for(new i; i < rows; i++){
            cache_get_value_name(i, "name",  score_name[playerid][i],13);
			cache_get_value_name(i, "owner", gBanks[playerid][bankOwner][i],MAX_PLAYER_NAME);

			cache_get_value_name_int(i, "number",   gBanks[playerid][bankNumber][i]);
			cache_get_value_name_int(i, "balance",  gBanks[playerid][bankBalance][i]);
			cache_get_value_name_int(i, "code", gBanks[playerid][bankPassword][i]);
        }
    }
    return 1;
}
CB: check_score(playerid,id) {
	new rows;
	rows = cache_num_rows();
    if(rows) {
        cache_get_value_name(0, "owner", gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")],MAX_PLAYER_NAME);
		SetPVarInt(playerid, "select_number",id);
		D(playerid,D_BANK_TRANSFER_TWO,DSI, ""P"Перевод средств",""W"Введите сумму, которую хотите перевести на введенный Вами счёт:","Далее","Назад");
	}
	else ErrorMessage(playerid, "Банковский счет не найден");
    return 1;
}
stock SaveScore(playerid) {
	new query[128];
	format(query, sizeof(query), "UPDATE `bank` SET `balance` = '%i' WHERE `number` = '%i'",gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")], gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
	return mysql_tquery(connects, query,"","");
}
CB: OnPlayerBankOperations(playerid) {
	new rows, temp[6], src[156], name[32],string[1024];
	rows = cache_num_rows();
	if(!rows) return D(playerid, D_BANK_LIST, DSM, ""P"Список операций", ""W"Операций со счётом не найдено", "Назад", "");
	string = "Статус\tСумма\tНомер счёта\tДата\n";
	for(new i; i < rows; i++) {
		cache_get_value_name_int(i, "number_1",	temp[0]);//кто

		if(temp[1] <= 0) cache_get_value_name(0, "name_1", name, 20);//имя

		cache_get_value_name_int(i, "number_2", temp[2]);//кому
		cache_get_value_name_int(i, "status", temp[3]);//статус перевода
		cache_get_value_name_int(i, "money", temp[4]);// деньги
		cache_get_value_name_int(i, "date", temp[5]); //время

		if(temp[3] == 1) format(src,sizeof(src),"Изменение PIN-кода\t---\t%d\t%s\n",temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 2 && temp[2] == gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]) format(src,sizeof(src),"Получено со счёта №%d\t%d\t%d\t%s\n",temp[0],temp[4],temp[2], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 2 && temp[0] == gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]) format(src,sizeof(src),"Отправлено на счёт №%d\t%d\t%d\t%s\n",temp[2],temp[4],temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 3) format(src,sizeof(src),"Списание средств\t%d\t%d\t%s\n",temp[4],temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 4) format(src,sizeof(src),"Пополнение счёта\t%d\t%d\t%s\n",temp[4],temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		strcat(string, src);
	}
	return D(playerid, D_BANK_LIST, DSTH, "Список операций", string, "Назад", "");
}
stock SetNextJobClearCP(playerid,type) {
	new id_cp = GetPVarInt(playerid,"check_job_cleaner");
	if(id_cp == -1) id_cp = 0;
	if(gClearCPs[type][id_cp][1] == 0.0 || gClearCPs[type][id_cp][2] == 0.0) {
		SetPVarInt(playerid,"clear_salary", GetPVarInt(playerid,"clear_salary") + condition_of_roads_price[type][condition_of_roads_]);
		DeletePVar(playerid,"check_job_cleaner");
		DeletePVar(playerid,"route_job_cleaner");
		D(playerid, D_JOB_CLEAR_3, DSM, ""P"Уборщик улиц", "Вы проехали круг.\n\
															У вас есть возможность выбрать маршрут или забрать Заработную плату", "Выбрать", "Забрать");
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPlayerRaceCheckpoint(playerid,
		(gClearCPs[type][id_cp][0] != 1.0) ? (0) : (1),
		gClearCPs[type][id_cp][1],
		gClearCPs[type][id_cp][2],
		gClearCPs[type][id_cp][3],

		gClearCPs[type][id_cp + 1][1],
		gClearCPs[type][id_cp + 1][2],
		gClearCPs[type][id_cp + 1][3], 4.0);
	SetPVarInt(playerid,"check_job_cleaner", id_cp + 1);
	return 1;
}
stock SetNextRaceCP(playerid,type) {
	new id_cp = GetPVarInt(playerid,"RaceCP");
	if(id_cp == -1) id_cp = 0;
	if(gRaceCPs[type][id_cp][1] == 0.0 || gRaceCPs[type][id_cp][2] == 0.0) {
		DeletePVar(playerid,"RaceCP");
		Race_End(playerid);
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPlayerRaceCheckpoint(playerid,
		(gRaceCPs[type][id_cp][0] != 1.0) ? (0) : (1),
		gRaceCPs[type][id_cp][1],
		gRaceCPs[type][id_cp][2],
		gRaceCPs[type][id_cp][3],

		gRaceCPs[type][id_cp + 1][1],
		gRaceCPs[type][id_cp + 1][2],
		gRaceCPs[type][id_cp + 1][3], 4.0);
	SetPVarInt(playerid,"RaceCP", id_cp + 1);
	return 1;
}
stock SetNextBusCP(playerid, stop = false) {
	if(GetPVarInt(playerid, "busstop")) return 1;
	new route = GetPVarInt(playerid,"route")-1;
	new id_cp = GetPVarInt(playerid,"id_cp");

	if(route == -1) route = 0;
	if(id_cp == -1) id_cp = 0;
	if(gBusCPs[route][id_cp][1] == 0.0 || gBusCPs[route][id_cp][2] == 0.0) {
		id_cp = 0;
	}
	if(id_cp > 0) {
		if(gBusCPs[route][id_cp - 1][0] == 1.0 && !stop) {
			new string[156];
			SetPVarInt(playerid, "busstop", true);
			format(string,sizeof(string),"Автобус по маршруту %s отправляется через 10 секунд",gRouteName[route]);
			ProxDetector(15.0,playerid, string,0x44b2ffff);
			SetTimerEx("BusStop",(10 * 1000),0,"i",playerid);
			DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPVarInt(playerid,"bus_salary", GetPVarInt(playerid,"bus_salary") + BUS_PRICE_CHECKPOINT);
	SetPlayerRaceCheckpoint(playerid,
		(gBusCPs[route][id_cp][0] != 1.0) ? (0) : (1),
		gBusCPs[route][id_cp][1],
		gBusCPs[route][id_cp][2],
		gBusCPs[route][id_cp][3],

		gBusCPs[route][id_cp + 1][1],
		gBusCPs[route][id_cp + 1][2],
		gBusCPs[route][id_cp + 1][3], 7.0);
	SetPVarInt(playerid,"id_cp", id_cp + 1);
	return 1;
}
CB: BusStop(playerid) {
	DeletePVar(playerid, "busstop");

	SetNextBusCP(playerid, true);
	return 1;
}
stock MeAction(playerid,const action[],Float:distance = 13.0) {
	new mes[145];
	format(mes,sizeof(mes),"%s %s",player_name[playerid],action);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,COLOR_PURPLE,mes);
	}
	return 1;
}
stock EndBus(playerid) {
	if(IsValid3DTextLabel(gPlayerBusText[playerid])) DestroyDynamic3DTextLabel(gPlayerBusText[playerid]);

	DisablePlayerRaceCheckpoint(playerid);

	new string[128];

	new repairprice = floatround((1000.0-GetPVarFloat(playerid,"bus_damage"))*2);
	if(repairprice < 0 || repairprice > 1000) repairprice = 1000;
	PI[playerid][pBank] -= repairprice;
	UpdatePlayerData(playerid,"pBank",PI[playerid][pBank]);

	SendClientMessage(playerid,-1,""ORANGE"___________________________________");
	SendClientMessage(playerid,COLOR_BLUE,"Рабочий день окончен");
	format(string,sizeof(string),"Заработано: "GREEN"$%i",GetPVarInt(playerid,"bus_salary"));
	SendClientMessage(playerid,COLOR_BLUE,string);
	format(string,sizeof(string),"Штраф за ремонт: "NO"$%i",repairprice);
	SendClientMessage(playerid,COLOR_BLUE,string);
	SendClientMessage(playerid,COLOR_GREEN,"Деньги будут начислены во время зарплаты. Штраф за ремонт списан с банковского счёта");
	SendClientMessage(playerid,-1,""ORANGE"___________________________________");

	PI[playerid][pSalary] += GetPVarInt(playerid,"bus_salary");
	UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);

	DeletePVar(playerid,"bus_id");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"id_cp");
	DeletePVar(playerid,"bus_salary");
	DeletePVar(playerid,"bus_damage");
	DeletePVar(playerid, "route");
	return 1;
}
stock EndClear(playerid) {
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid,"clear_salary")) {
		new string[128];
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"Рабочий день окончен");
		format(string,sizeof(string),"Заработано: "GREEN"$%i",GetPVarInt(playerid,"clear_salary"));
		SendClientMessage(playerid,COLOR_BLUE,string);
		SendClientMessage(playerid,COLOR_GREEN,"Деньги будут начислены во время зарплаты");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");

		PI[playerid][pSalary] += GetPVarInt(playerid,"clear_salary");
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}
	else {
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"Рабочий день окончен");
		SendClientMessage(playerid,COLOR_GREEN,"Вы ничего не заработали");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
	}

	DeletePVar(playerid,"clear_salary");
	DeletePVar(playerid,"clear_id");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"check_job_cleaner");
	DeletePVar(playerid,"route_job_cleaner");
	return 1;
}
stock EndGazon(playerid) {
	DisablePlayerRaceCheckpoint(playerid);

	if(GetPVarInt(playerid,"gazon_salary")) {
		new string[128];
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"Рабочий день окончен");
		format(string,sizeof(string),"Заработано: "GREEN"$%i",GetPVarInt(playerid,"gazon_salary"));
		SendClientMessage(playerid,COLOR_BLUE,string);
		SendClientMessage(playerid,COLOR_GREEN,"Деньги будут начислены во время зарплаты");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");

		PI[playerid][pSalary] += GetPVarInt(playerid,"gazon_salary");
		UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);
	}
	else {
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"Рабочий день окончен");
		SendClientMessage(playerid,COLOR_GREEN,"Вы ничего не заработали");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
	}
	DeletePVar(playerid,"gazon_salary");
	DeletePVar(playerid,"veh_id_cleaner");
	TI[playerid][tSpcarTime] = 0;
	return 1;
}
stock EndEat(playerid) {
	if(PlayerEatText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerEatText[playerid]);
		PlayerEatText[playerid] = Text3D:-1;
	}
	DeletePVar(playerid,"eatcolvo");
	DeletePVar(playerid,"eatjob");
	if(TI[playerid][tSpcarTime]){
		TI[playerid][tSpcarTime] = 0;
	}
	return 1;
}
stock EndMeh(playerid) {
	if(PlayerMehText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerMehText[playerid]);
		PlayerMehText[playerid] = Text3D:-1;
	}
	DeletePVar(playerid,"toplivo");
	DeletePVar(playerid,"mehjob");
	if(TI[playerid][tSpcarTime]){
		TI[playerid][tSpcarTime] = 0;
	}
	return 1;
}
stock EndTrack(playerid) {
	if(object_oil[playerid]) DestroyDynamicObject(object_oil[playerid]);
	SetVehicleToRespawn(GetPVarInt(playerid,"track_id"));
	TI[playerid][tJobOil][1] = false;
	DeletePVar(playerid,"track_id");
	return 1;
}
stock EndProd(playerid) {
	if(gPlayerProdText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(gPlayerProdText[playerid]);
		gPlayerProdText[playerid] = Text3D:-1;
	}
	if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
	if(PlayerTrailer[playerid] != INVALID_VEHICLE_ID) A_DestroyVehicle(PlayerTrailer[playerid]),PlayerTrailer[playerid] = INVALID_VEHICLE_ID,DeletePVar(playerid,"attach_trailer");

	DeletePVar(playerid,"prod_vehicle_id");
	DeletePVar(playerid,"count_prod2");
	DeletePVar(playerid,"count_prod");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"prod_id");
	return 1;
}
stock EndGun(playerid) {
	TI[playerid][tJobGun][0] = 0;
	if(GetPVarInt(playerid,"pgunobject")) {
		new objectid = GetPVarInt(playerid,"pgunobject");
		if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
		DeletePVar(playerid,"pgunobject");
	}
	TI[playerid][tJobGun][2] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);

	if(GetPVarInt(playerid,"gun_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП оружейный завод");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "G"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
	}
	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	TI[playerid][tJobSalary] = 0;
	DeletePVar(playerid,"gun_salary");
	DisablePlayerRaceCheckpoint(playerid);
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndWood(playerid) {
	TI[playerid][tJobWood][0] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	
	DisablePlayerGPS(playerid);

	if(GetPVarInt(playerid,"wood_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП лесопилка");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "G"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
	}
	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	TI[playerid][tJobSalary] = 0;
	TI[playerid][tJobWood][3] = 0;
	DeletePVar(playerid,"wood_salary");
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndOil(playerid) {
	TI[playerid][tJobOil][0] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8))RemovePlayerAttachedObject(playerid,8);
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);

	if(GetPVarInt(playerid,"oil_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 5)];

		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП нефтезавод");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "G"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 5)];

		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
	}

	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	DeletePVar(playerid,"oil_salary");
	TI[playerid][tJobSalary] = 0;
	RemovePlayerMapIcon(playerid, 1),RemovePlayerMapIcon(playerid, 2);
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndSad(playerid) {
	TI[playerid][tJobSad][0] = 0;
	DeletePVar(playerid, "bailer");
	DeletePVar(playerid, "bailer_1");
	DeletePVar(playerid, "bailer_2");
	DeletePVar(playerid, "bailer_3");
	DeletePVar(playerid, "bailer_4");
	if(PI[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	if(GetPVarInt(playerid,"sad_salary") > 0) {
		static const f_str[] = "Вы заработали "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 5)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП яблочный сад");
	}
	else {
		static const f_str[] = "Вы заработали "ORANGE"$%d. "G"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 5)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PI[playerid][pSalary] += TI[playerid][tJobSalary];
	}

	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	DeletePVar(playerid,"sad_salary");
	TI[playerid][tJobSad][2] = 0;
	TI[playerid][tJobSad][3] = 0;
	TI[playerid][tJobSalary] = 0;
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndFish(playerid) {
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 473) RemovePlayerFromVehicleAC(playerid);
	GangZoneHideForPlayer(playerid,fish_zone[GetPVarInt(playerid,"fish_place")-1]);
	DeletePVar(playerid, "fish_place");
	DeletePVar(playerid, "fish_yes");
	RemovePlayerAttachedObject(playerid, 7);
	Fishing[playerid] = false;
	TogglePlayerControllable(playerid, 1);
	TI[playerid][tProcess][0] = -1;
	TI[playerid][tProcess][1] = -1;
	for(new YN = 0;YN < 3;YN++) {
		TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	return 1;
}
CB: LoadProd(playerid) {
	if(!GetVehicleTrailer(GetPlayerVehicleID(playerid)) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 403) { 
		if(PlayerTrailer[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"Вы уже брали цистерну с топливом");
		new rand = random(4);
		PlayerTrailer[playerid] = A_CreateVehicle(584,car_fuels[rand][0],car_fuels[rand][1],car_fuels[rand][2],170.0000,-1,-1,-1,VEHICLE_TYPE_TRAILER);
		PlayerTrailerTime[playerid] = 30;
		new string[128];
		SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") + GetPVarInt(playerid,"count_prod2"));
		format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid,"count_prod"));
		gPlayerProdText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, PlayerTrailer[playerid],1, -1, -1);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
		SendOk(playerid,"У Вас есть ровно 30 секунд чтобы прицепить цистерну с бензином");
	}
	else {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
			DeletePVar(playerid,"count_prod2");
			return 1;
		}
		new string[144];

		format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid,"count_prod")+GetPVarInt(playerid,"rand_prod"));
		UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],-1,string);

		new rand = Random(50,70);

		if(GetPVarInt(playerid,"count_prod2") > GetPVarInt(playerid,"rand_prod")) {
			SetPVarInt(playerid,"rand_prod", GetPVarInt(playerid,"rand_prod") + rand);
			SetTimerEx("LoadProd",150,0,"i",playerid);
			TogglePlayerControllable(playerid, 0);
		}
		else {
			SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") + GetPVarInt(playerid,"count_prod2"));
			TogglePlayerControllable(playerid, 1);
			DeletePVar(playerid,"rand_prod");
			format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бизнес: "GREEN"Отсутствует", GetPVarInt(playerid,"count_prod"));
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],-1,string);
		}

	}
	return 1;
}
CB: PlayerPlaySoundDelay(playerid,soundid) {
	PlayerPlaySound(playerid,soundid,0.0,0.0,0.0);
	return true;
}
stock GetYearDayCount(year) {
	if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) return 366;
	else return 365;
}

stock GetDayNumber() {
	new d,m,y,diff,daycount,cdaycount;
	getdate(y,m,d);	
	diff = y - 2012;
	for(new i;i<diff;i++) daycount += GetYearDayCount(i+2012);
	cdaycount = GetYearDayCount(y);	
	new Mon[12];
	if(cdaycount == 365) Mon = {0,31,59,90,120,151,181,212,243,273,304,334};
	else Mon = {0,31,60,91,121,152,182,213,244,274,305,335};	
	m -= 1; //один минус переводим в индекс	
	new result = daycount+Mon[m]+d;
	return result;
}
stock PhoneStatus(playerid,bool:status) {
	if(status == true) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,3,18874,6,0.107999,0.015000,-0.016000,97.100006,-165.800048,-3.000013);
		MeAction(playerid,"достал(а) телефон");
	}
	else {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid,3);
		MeAction(playerid,"положил(а) телефон");
	}
}
stock SavePlayerNumber(playerid) {
	new query[1024];
	format(query,sizeof(query),"UPDATE `accounts` SET `phonenumber` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `Name` = '%s' LIMIT 1",
	PI[playerid][pPhoneNumber][0],PI[playerid][pPhoneNumber][1],PI[playerid][pPhoneNumber][2],PI[playerid][pPhoneNumber][3],PI[playerid][pPhoneNumber][4],
	PI[playerid][pPhoneNumber][5],PI[playerid][pPhoneNumber][6],PI[playerid][pPhoneNumber][7],PI[playerid][pPhoneNumber][8],PI[playerid][pPhoneNumber][9],
	PI[playerid][pPhoneNumber][10],PI[playerid][pPhoneNumber][11],PI[playerid][pPhoneNumber][12],PI[playerid][pPhoneNumber][13],PI[playerid][pPhoneNumber][14],
	PI[playerid][pPhoneNumber][15],PI[playerid][pPhoneNumber][16],PI[playerid][pPhoneNumber][17],PI[playerid][pPhoneNumber][18],PI[playerid][pPhoneNumber][19],
	PI[playerid][pPhoneNumber][20],PI[playerid][pPhoneNumber][21],PI[playerid][pPhoneNumber][22],PI[playerid][pPhoneNumber][23],PI[playerid][pPhoneNumber][24],GetName(playerid));
	mysql_tquery(connects, query, "", "");
					
	format(query,sizeof(query),"UPDATE `accounts` SET `phonename` = '%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s' WHERE `Name` = '%s' LIMIT 1",
	pPhoneName[playerid][0],pPhoneName[playerid][1],pPhoneName[playerid][2],pPhoneName[playerid][3],pPhoneName[playerid][4],
	pPhoneName[playerid][5],pPhoneName[playerid][6],pPhoneName[playerid][7],pPhoneName[playerid][8],pPhoneName[playerid][9],
	pPhoneName[playerid][10],pPhoneName[playerid][11],pPhoneName[playerid][12],pPhoneName[playerid][13],pPhoneName[playerid][14],
	pPhoneName[playerid][15],pPhoneName[playerid][16],pPhoneName[playerid][17],pPhoneName[playerid][18],pPhoneName[playerid][19],
	pPhoneName[playerid][20],pPhoneName[playerid][21],pPhoneName[playerid][22],pPhoneName[playerid][23],pPhoneName[playerid][24],GetName(playerid));
	mysql_tquery(connects, query, "", "");
}
stock save_perf_sell(i,ID) {
	new query[1024];
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET `perf_engine_1`= '0', `perf_engine_2`= '0', `perf_engine_3`= '0', `perf_engine_4`= '0', `perf_engine_5`= '0',`perf_brake_1`= '0', `perf_brake_2`= '0', `perf_brake_3`= '0', `perf_brake_4`= '0', `perf_brake_5`= '0'  WHERE id = '%i'",gPlayerCars[i][carID][ID]);
	mysql_tquery(connects, query, "", "");
	return true;
}
stock save_perf(i,ID) {
	gPlayerCars[i][carPEngine_1][ID] = VehicleInfo[house_car[i][ID]][vPEngine][0];
	gPlayerCars[i][carPEngine_2][ID] = VehicleInfo[house_car[i][ID]][vPEngine][1];
	gPlayerCars[i][carPEngine_3][ID] = VehicleInfo[house_car[i][ID]][vPEngine][2];
	gPlayerCars[i][carPEngine_4][ID] = VehicleInfo[house_car[i][ID]][vPEngine][3];
	gPlayerCars[i][carPEngine_5][ID] = VehicleInfo[house_car[i][ID]][vPEngine][4];

	gPlayerCars[i][carPBrake_1][ID] = VehicleInfo[house_car[i][ID]][vPBrake][0];
	gPlayerCars[i][carPBrake_2][ID] = VehicleInfo[house_car[i][ID]][vPBrake][1];
	gPlayerCars[i][carPBrake_3][ID] = VehicleInfo[house_car[i][ID]][vPBrake][2];
	gPlayerCars[i][carPBrake_4][ID] = VehicleInfo[house_car[i][ID]][vPBrake][3];
	gPlayerCars[i][carPBrake_5][ID] = VehicleInfo[house_car[i][ID]][vPBrake][4];

    new temp[0x9e];
	new query[1024];
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET ");
	format(temp,sizeof(temp),"`perf_engine_1`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_2`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_3`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_4`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_5`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][4]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_1`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_2`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_3`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_4`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_5`= '%i'",VehicleInfo[house_car[i][ID]][vPBrake][4]), 	strcat(query,temp,sizeof(query));

	format(temp,sizeof(temp)," WHERE id = '%i'",gPlayerCars[i][carID][ID]),							strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return true;
}
stock loading_cars(playerid,car) {
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return 1;
	new house = PI[playerid][pHouse];
	if(PI[playerid][pRoom]) {
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
			gPlayerCars[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
			A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
			gPlayerCars[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
			A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	else if(!gHouses[house][houseImprove][2]) {
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
			gPlayerCars[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
			A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
			gPlayerCars[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
			A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	else if(gHouses[house][houseImprove][2]) {
		if(house_car[playerid][car] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(house_car[playerid][car]);
			gPlayerCars[playerid][carFuel][car] = VehicleInfo[house_car[playerid][car]][vFuel];
			gPlayerCars[playerid][carDrived][car] = VehicleInfo[house_car[playerid][car]][vDrived];
			house_car[playerid][car] = INVALID_VEHICLE_ID;
		}
	}
	if(PI[playerid][pRoom])
	{
	    /*
		switch(PI[playerid][pRoom])
		{
			case 1..3: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PI[playerid][pRoom]-1][0], hotel_spawnscar[PI[playerid][pRoom]-1][1], hotel_spawnscar[PI[playerid][pRoom]-1][2], hotel_spawnscar[PI[playerid][pRoom]-1][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 4..7: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PI[playerid][pRoom]-61][0], hotel_spawnscar[PI[playerid][pRoom]-61][1], hotel_spawnscar[PI[playerid][pRoom]-61][2], hotel_spawnscar[PI[playerid][pRoom]-61][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 8..11: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PI[playerid][pRoom]-121][0], hotel_spawnscar[PI[playerid][pRoom]-121][1], hotel_spawnscar[PI[playerid][pRoom]-121][2], hotel_spawnscar[PI[playerid][pRoom]-121][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 12,13: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PI[playerid][pRoom]-181][0], hotel_spawnscar[PI[playerid][pRoom]-181][1], hotel_spawnscar[PI[playerid][pRoom]-181][2], hotel_spawnscar[PI[playerid][pRoom]-181][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		}
		*/
		new rand = random(13);
		
		house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[rand][0], hotel_spawnscar[rand][1], hotel_spawnscar[rand][2],
			hotel_spawnscar[rand][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1, VEHICLE_TYPE_PLAYER);
		
		if(strcmp(NumberVehicle[playerid][car],"TRANSIT",true)) SetVehicleNumberPlate(house_car[playerid][car], NumberVehicle[playerid][car]);
		else SetVehicleNumberPlate(house_car[playerid][car], "TRANSIT");

		SetVehicleVirtualWorld(house_car[playerid][car],GetPVarInt(playerid, "selectedhotel"));
		LinkVehicleToInterior(house_car[playerid][car],101);
	}
	else if(!gHouses[house][houseImprove][2]) {
		house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], gHouses[house][houseParkX], gHouses[house][houseParkY], gHouses[house][houseParkZ], gHouses[house][houseParkR] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		if(strcmp(NumberVehicle[playerid][car],"TRANSIT",true)) SetVehicleNumberPlate(house_car[playerid][car], NumberVehicle[playerid][car]);
		else SetVehicleNumberPlate(house_car[playerid][car], "TRANSIT");
	}
	else if(gHouses[house][houseImprove][2]) {
		new id = -1;
		switch(gHouses[house][houseClass]) {
			case 0: id = 0;
			case 1: id = 2;
			case 2: id = 4;
			case 3: id = 6;
		}
		new hint = gHouses[house][houseHint];
		new interior = hinterior_info[hint][h_interior];
		switch(car) {
			case 0: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car],cargarage[id][0],cargarage[id][1],cargarage[id][2],cargarage[id][3], gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 1: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car],cargarage[id+1][0],cargarage[id+1][1],cargarage[id+1][2],cargarage[id+1][3], gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		}
		if(strcmp(NumberVehicle[playerid][car],"TRANSIT",true)) SetVehicleNumberPlate(house_car[playerid][car], NumberVehicle[playerid][car]);
		else SetVehicleNumberPlate(house_car[playerid][car], "TRANSIT");
		SetVehicleVirtualWorld(house_car[playerid][car],PI[playerid][pHouse]);
		LinkVehicleToInterior(house_car[playerid][car],interior);
	}
	LoadTuning(playerid,house_car[playerid][car],car);
	VehicleInfo[house_car[playerid][car]][vFuel] = gPlayerCars[playerid][carFuel][car];
	VehicleInfo[house_car[playerid][car]][vDrived] = gPlayerCars[playerid][carDrived][car];
	SetVehicleParamsEx(house_car[playerid][car],false,false,false,true,false,false,false);

	TrunkInfo[house_car[playerid][car]][tDrugs] = gPlayerCars[playerid][carNarko][car];
	TrunkInfo[house_car[playerid][car]][tMats] = gPlayerCars[playerid][carMats][car];
	TrunkInfo[house_car[playerid][car]][tKanistra] = gPlayerCars[playerid][carKanistra][car];
	TrunkInfo[house_car[playerid][car]][tGun][0] = gPlayerCars[playerid][carDeagle][car];
	TrunkInfo[house_car[playerid][car]][tGun][1] = gPlayerCars[playerid][carAK47][car];
	TrunkInfo[house_car[playerid][car]][tGun][2] = gPlayerCars[playerid][carM4][car];
	TrunkInfo[house_car[playerid][car]][tGun][3] = gPlayerCars[playerid][carShot][car];
	TrunkInfo[house_car[playerid][car]][tOpen] = gPlayerCars[playerid][carOpen][car];

	VehicleInfo[house_car[playerid][car]][vPEngine][0] = gPlayerCars[playerid][carPEngine_1][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][1] = gPlayerCars[playerid][carPEngine_2][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][2] = gPlayerCars[playerid][carPEngine_3][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][3] = gPlayerCars[playerid][carPEngine_4][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][4] = gPlayerCars[playerid][carPEngine_5][car];

	VehicleInfo[house_car[playerid][car]][vPBrake][0] = gPlayerCars[playerid][carPBrake_1][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][1] = gPlayerCars[playerid][carPBrake_2][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][2] = gPlayerCars[playerid][carPBrake_3][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][3] = gPlayerCars[playerid][carPBrake_4][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][4] = gPlayerCars[playerid][carPBrake_5][car];

	for(new i; i < 5; i ++) {
		if(VehicleInfo[house_car[playerid][car]][vPEngine][i]) VehicleInfo[house_car[playerid][car]][vEngineBoost] += engine_name_boost[i];
		if(VehicleInfo[house_car[playerid][car]][vPBrake][i]) VehicleInfo[house_car[playerid][car]][vBrakeBoost] += brake_name_boost[i];
	}
	//if(VehicleInfo[house_car[playerid][car]][vEngineBoost] == 4) perf_engine_object(house_car[playerid][car]);
	return 1;
}
stock sell_cars(playerid,car) {
	if(!PI[playerid][pHouse] && !PI[playerid][pRoom]) return 1;
	if(gPlayerCars[playerid][carModel][car] == 481) return ErrorMessage(playerid, "Данное Т/С нельзя продать");
	//if(GetPVarInt(playerid,"_changecar") || GetPVarInt(playerid,"changecar")) return SendClientMessage(playerid,COLOR_GREY,"В данный момент вы не можете продать свой автомобиль!");
	new modelid = gPlayerCars[playerid][carModel][car] - 400;
	new price = floatround(gTransport[modelid][trPrice]*0.8);

	FI[fWHITEHOUSE][fBank] += floatround(gTransport[modelid][trPrice]*0.2);
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	GiveMoney(playerid,price,"продажа ТС в гос");

	RemoveTuning(playerid,house_car[playerid][car],car);
	gPlayerCars[playerid][carDrived][car] = 0;

	gPlayerCars[playerid][carModel][car] = 481;
	gPlayerCars[playerid][carColor_one][car] = 203;
	gPlayerCars[playerid][carColor_two][car] = 203;
	strmid(NumberVehicle[playerid][car], "TRANSIT", 0, strlen("TRANSIT"), 255);
	save_perf_sell(playerid,car);
	if(house_car[playerid][car] != INVALID_VEHICLE_ID) {
		for(new i; i < 5; i ++) {
			VehicleInfo[house_car[playerid][car]][vPEngine][i] = 0;	
			VehicleInfo[house_car[playerid][car]][vPBrake][i] = 0;		
		}
		A_DestroyVehicle(house_car[playerid][car]);
		house_car[playerid][car] = INVALID_VEHICLE_ID;
	}
	save_car(playerid,car);
	SendOk(playerid, "Вы продали свой автомобиль");
	return 1;
}
SendStreamMessage(Float:radius, playerid, const mes[], color) {
	new Float:X,
		Float:Y,
		Float:Z,
		vw = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid,X,Y,Z);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVirtualWorld(i) == vw) {
			if(PlayerToPoint(radius,i,X,Y,Z)) SendClientMessage(i, color, mes);
		}
	}
}
stock DoAction(playerid,action[],Float:distance = 13.0) {
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	new string[128];
	format(string,sizeof(string),"%s (%s)",action,player_name[playerid]);
	SendStreamMessage(distance, playerid, string, COLOR_PURPLE);
	return 1;
}
stock TryAction(playerid,action[],Float:distance = 13.0) {
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	new luck[24],string[144];
	if((random(2-0)+0) == 1) strcat(luck,"{33AA33}Удачно");
	else strcat(luck,"{FF0000}Неудачно");
	format(string,sizeof(string),"%s %s | %s",player_name[playerid],action,luck);
	SendStreamMessage(distance, playerid, string, COLOR_PURPLE);
	return 1;
}
stock AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z) {
	new Float:trunkpos[5][4];
	trunkpos[2][0]=x;
	trunkpos[2][1]=y;
	trunkpos[2][2]=z;
	trunkpos[2][3]=a;
	trunkpos[2][0]-=1.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]-=1.5*floatcos(-trunkpos[2][3],degrees);
	trunkpos[0]=trunkpos[2];
	trunkpos[1]=trunkpos[2];
	trunkpos[0][0]=trunkpos[2][0]+2.0*floatsin(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[0][1]=trunkpos[2][1]+2.0*floatcos(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[1][0]=trunkpos[2][0]+0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[1][1]=trunkpos[2][1]+0.5*floatcos(-trunkpos[2][3],degrees);
	GetPlayerCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2]);
	SetPVarFloat(playerid,"oldtrunkcamposx",trunkpos[3][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy",trunkpos[3][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz",trunkpos[3][2]);
	GetPlayerCameraFrontVector(playerid,trunkpos[4][0],trunkpos[4][1],trunkpos[4][2]);
	InterpolateCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2],trunkpos[0][0],trunkpos[0][1],trunkpos[0][2]+2.4,2000,CAMERA_MOVE);
	SetPVarFloat(playerid,"oldtrunkcamposx2",trunkpos[3][0] + trunkpos[4][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy2",trunkpos[3][1] + trunkpos[4][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz2",trunkpos[3][2] + trunkpos[4][2]);
	InterpolateCameraLookAt(playerid,trunkpos[3][0] + trunkpos[4][0],trunkpos[3][1] + trunkpos[4][1],trunkpos[3][2] + trunkpos[4][2],trunkpos[1][0],trunkpos[1][1],trunkpos[1][2]+0.8,2000,CAMERA_MOVE),
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
	trunkpos[2][0]+=0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]+=0.5*floatcos(-trunkpos[2][3],degrees);
	SetPlayerPosAC(playerid,trunkpos[2][0],pos_y,pos_z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(playerid,trunkpos[2][3]);
	return 1;
}
stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance) {
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style) {
		case 0: {
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
		case 1: {
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2: {
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 3: {
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}
stock SaveTrunk(vehicleid) {
	new slot_vehicle_player[2]={-1,...};
	for(new i=0;i<MAX_PLAYERS;i++) {
		if(!IsPlayerConnected(i)) continue;
		if(vehicleid == house_car[i][0]) {
			slot_vehicle_player[0]=0;
			slot_vehicle_player[1]=i;
			break;
		}
		else if(vehicleid == house_car[i][1]) {
			slot_vehicle_player[0]=1;
			slot_vehicle_player[1]=i;
			break;
		}
	}
	if(slot_vehicle_player[0] != -1) {
		new playerid=slot_vehicle_player[1];
		new slot_vehicle=slot_vehicle_player[0];

		gPlayerCars[playerid][carNarko][slot_vehicle] = TrunkInfo[vehicleid][tDrugs];
		gPlayerCars[playerid][carMats][slot_vehicle] = TrunkInfo[vehicleid][tMats];
		gPlayerCars[playerid][carKanistra][slot_vehicle] = TrunkInfo[vehicleid][tKanistra];
		gPlayerCars[playerid][carOpen][slot_vehicle] = TrunkInfo[vehicleid][tOpen];
		gPlayerCars[playerid][carDeagle][slot_vehicle] = TrunkInfo[vehicleid][tGun][0];
		gPlayerCars[playerid][carAK47][slot_vehicle] = TrunkInfo[vehicleid][tGun][1];
		gPlayerCars[playerid][carM4][slot_vehicle] = TrunkInfo[vehicleid][tGun][2];
		gPlayerCars[playerid][carShot][slot_vehicle] = TrunkInfo[vehicleid][tGun][3];
	}
	return 1;
}
stock trunk_close(playerid) {
	new Float:tX=GetPVarFloat(playerid,"oldtrunkcamposx");
	new Float:tY=GetPVarFloat(playerid,"oldtrunkcamposy");
	new Float:tZ=GetPVarFloat(playerid,"oldtrunkcamposz");
	new Float:tX2=GetPVarFloat(playerid,"oldtrunkcamposx2");
	new Float:tY2=GetPVarFloat(playerid,"oldtrunkcamposy2");
	new Float:tZ2=GetPVarFloat(playerid,"oldtrunkcamposz2");
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	InterpolateCameraPos(playerid,x,y,z,tX,tY,tZ,1500,CAMERA_MOVE);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,tX2,tY2,tZ2,1500,CAMERA_MOVE);
	SetTimerEx("SetCameraBehindPlayerDelay",1501,0,"i",playerid);
	GetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);

	SetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
	idaofcar[playerid] = -1;
	DeletePVar(playerid,"oldtrunkcamposx");
	DeletePVar(playerid,"oldtrunkcamposy");
	DeletePVar(playerid,"oldtrunkcamposz");
	DeletePVar(playerid,"oldtrunkcamposx2");
	DeletePVar(playerid,"oldtrunkcamposy2");
	DeletePVar(playerid,"oldtrunkcamposz2");
	return 1;
}
stock ShowSettings(playerid) {
	new string[700];
	new talk[25],style[25],radio[30],spawn[30];

	switch(PI[playerid][pSettings][4]) {
		case 0 : talk = "Стандартный";
		case 7 : talk = "Нет";
	    default: format(talk,sizeof(talk),"Стиль %d",PI[playerid][pSettings][4]);
	}
	switch(PI[playerid][pSettings][5]) {
		case 0: style = "Стандартный";
	    case 1: style = "Бокс";
	    case 2: style = "Кунг-Фу";
	    case 3: style = "Кик-Бокс";
	}
	switch(PI[playerid][pSettings][2]) {
		case fLSNEWS: radio = "Радиоцентр ЛС";
	    case fSFNEWS: radio = "Радиоцентр СФ";
	    case fLVNEWS: radio = "Радиоцентр ЛВ";
		case 0: radio = "Отключены";
	}
	switch(PI[playerid][pSpawn]) {
		case 0: spawn = "Вокзал";
	    case 1: spawn = "Дом/Отель";
	    case 2: spawn = "Организация";
	    case 3: spawn = "Дом семьи";
	}
	format:string("Наименование\tСтатус\n\
					"P"1."W" Ники игроков\t"ORANGE"%s\n"P"2."W" Чат организации\t"ORANGE"%s\n"P"3."W" Чат компании(ТК,Такси)\t"ORANGE"%s\n\
	"P"4."W" Эфиры\t"ORANGE"%s\n"P"5."W" Стиль разговора\t"ORANGE"%s\n"P"6."W" Стиль боя\t"ORANGE"%s\n"P"7."W" Показывать голод\t"ORANGE"%s\n"P"8."W" Показывать кейс\t"ORANGE"%s\n"P"9."W" Прогрузка текстур\t"ORANGE"%s\n"P"10."W" Название семьи над головой\t"ORANGE"%s\n"P"11."W" Дамаг информер\t"ORANGE"%s\n\
	"P"12."W" Место спавна\t"ORANGE"%s\n"P"13."W" Аксессуары",
		PI[playerid][pSettings][0] ? ("Вкл") : ("Выкл"),
		PI[playerid][pSettings][1] ? ("Вкл") : ("Выкл"),
		PI[playerid][pSettings][3] ? ("Вкл") : ("Выкл"),
		radio,talk,style,PI[playerid][pSettings][6] ? ("Вкл") : ("Выкл"),PI[playerid][pSettings][7] ? ("Вкл") : ("Выкл"),PI[playerid][pSettings][8] ? ("Вкл") : ("Выкл"),PI[playerid][pSettings][9] ? ("Вкл") : ("Выкл"),PI[playerid][pSettings][10] ? ("Вкл") : ("Выкл"),spawn
	);
    D(playerid,D_MENU_SETTING,DSTH,"Настройки",string,"Изменить","Назад");
    return 1;
}
CB: OnPlayerSelectPassword(playerid, password[]) {
	new rows;
	rows = cache_num_rows();
	if(rows) D(playerid,D_CHANGE_PASS,DSI, ""P"Смена пароля","\n\n"W"Введите новый пароль:\n\n", "Ввод", "Назад");
	else D(playerid,D_CHANGE_PASS_SELECT,DSI, ""P"Смена пароля","\n\n"W"Введите свой старый пароль:\n\n"NO"*"G" Пароль введён неверно\n\n", "Ввод", "Назад");
	return 1;
}
CB: OnPlayerAttachTrailer(playerid, vehicleid, trailerid) {
	if((trailerid != PlayerTrailer[playerid] && PI[playerid][pJob] != 2) && (trailerid != TK_Trailer[playerid] && (PI[playerid][bizz_work] == 5 || PI[playerid][bizz_work] == 6 || PI[playerid][bizz_work] == 7))) {
		ErrorMessage(playerid,"Данный прицеп принадлежит другому игроку");
		return DetachTrailerFromVehicle(vehicleid);
	}
	else if(trailerid == PlayerTrailer[playerid]) SetPVarInt(playerid,"attach_trailer",1);
	else if(trailerid == TK_Trailer[playerid]) TI[playerid][tTrucker][3] = 0;
	return 1;
}

CB: OnPlayerDeattachTrailer(playerid,vehicleid,trailerid) {
	if(trailerid == PlayerTrailer[playerid]) {
	    DeletePVar(playerid,"attach_trailer");
		PlayerTrailerTime[playerid] = 30;
	}
	else if(trailerid == TK_Trailer[playerid]) {
	    TI[playerid][tTrucker][3] = 120;
	}
	return 1;
}
CB: UnTazer(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0, 0);
	TogglePlayerControllable(playerid,true);
	TI[playerid][tTazer] = false;
	return 1;
}
stock IsPlayerStream(Float:radi, playerid, targetid) {
	if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(targetid,X,Y,Z);
	return PlayerToPoint(radi,playerid,X,Y,Z);
}
stock IntToStr(value) {
	new tmp[30];
	valstr(tmp, value);
	return tmp;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z) {
	if(IsPlayerInAnyVehicle(playerid)) return false;
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return true;
}
stock load_heal() {
	new name[24],rows;
	new member,heal;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`MedHeal` FROM `accounts` WHERE `pMember` = 8 ORDER BY `MedHeal` DESC LIMIT 5");
	rows = cache_num_rows();
	if(rows) {
		new str[128],text[400];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "MedHeal",heal);


			format(str,sizeof(str),""ORANGE"%d. "G"%s [%d]\n",i+1,name,heal),strcat(text,str);
			UpdateDynamic3DTextLabelText(med_turn_text[0], -1, text);
		}
	}
	cache_delete(result);

	new rand = random(3);
	disease = rand;
	new text[300];
	strcat(text,""W"Зона заражения:");
	switch(rand) {
		case 0: {
			format(text,sizeof(text),"%s\n"P"Гетто",text);
			UpdateDynamic3DTextLabelText(med_turn_text[3], -1, text);
		}
		case 1: {
			format(text,sizeof(text),"%s\n"P"Заброшеный аэропорт",text);
			UpdateDynamic3DTextLabelText(med_turn_text[3], -1, text);
		}
		case 2: {
			format(text,sizeof(text),"%s\n"P"Карьер",text);
			UpdateDynamic3DTextLabelText(med_turn_text[3], -1, text);
		}
	}
	load_heal_2();
	
	print(" ");
	print("[Загрзука ...] Зон заражения сервера");
	return 1;
}
stock load_heal_2() {
	new name[24],rows;
	new member,heal;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`MedHeal` FROM `accounts` WHERE `pMember` = 9 ORDER BY `MedHeal` DESC LIMIT 5");
	rows = cache_num_rows();
	if(rows) {
		new str[128],text[400];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "MedHeal",heal);

			format(str,sizeof(str),""ORANGE"%d. "G"%s [%d]\n",i+1,name,heal),strcat(text,str);
			UpdateDynamic3DTextLabelText(med_turn_text[1], -1, text);
		}
	}
	cache_delete(result);
	load_heal_3();
	return 1;
}
stock load_heal_3() {
	new name[24],rows;
	new member,heal;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`MedHeal` FROM `accounts` WHERE `pMember` = 10 ORDER BY `MedHeal` DESC LIMIT 5");
	rows = cache_num_rows();
	if(rows) {
		new str[128],text[400];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "MedHeal",heal);

			format(str,sizeof(str),""ORANGE"%d. "G"%s [%d]\n",i+1,name,heal),strcat(text,str);
			UpdateDynamic3DTextLabelText(med_turn_text[2], -1, text);
		}
	}
	cache_delete(result);
	return 1;
}
stock load_advert() {
	new name[24],rows;
	new member,advert;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`Advert` FROM `accounts` WHERE `pMember` = 11 ORDER BY `Advert` DESC LIMIT 5");
	rows = cache_num_rows();
	if(rows) {
		new str[128],text[500];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "Advert",advert);

			format(str,sizeof(str),""ORANGE"%d. "G"%s [%d]\n",i+1,name,advert),strcat(text,str);
			UpdateDynamic3DTextLabelText(advert_turn_text[0], -1, text);
		}
	}
	cache_delete(result);
	load_advert_2();
	
	print("[Загрузка ...] Информации о лучших работниках сервера");
	return 1;
}
stock load_advert_2() {
	new name[24],rows;
	new member,advert;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`Advert` FROM `accounts` WHERE `pMember` = 12 ORDER BY `Advert` DESC LIMIT 5");
	rows = cache_num_rows();
	if(rows) {
		new str[128],text[500];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "Advert",advert);

			format(str,sizeof(str),""ORANGE"%d. "G"%s [%d]\n",i+1,name,advert),strcat(text,str);
			UpdateDynamic3DTextLabelText(advert_turn_text[1], -1, text);
		}
	}
	cache_delete(result);
	load_advert_3();
	return 1;
}
stock load_advert_3() {
	new name[24],rows;
	new member,advert;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`Advert` FROM `accounts` WHERE `pMember` = 13 ORDER BY `Advert` DESC LIMIT 5");
	rows = cache_num_rows();
	if(rows) {
		new str[128],text[500];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "Advert",advert);

			format(str,sizeof(str),""ORANGE"%d. "G"%s [%d]\n",i+1,name,advert),strcat(text,str);
			UpdateDynamic3DTextLabelText(advert_turn_text[2], -1, text);
		}
	}
	cache_delete(result);
	return 1;
}
CB: AloginAuth(playerid,const giveplayerid[]) {
	new inputtext[16];
	new rows;
	rows = cache_num_rows();
	if(!rows) return 1;
	GetPVarString(playerid,"inputtext",inputtext,15);
	
	new query[1024];
	format(query, sizeof(query), "UPDATE `admin` SET `password` = MD5('%s') WHERE `name` = '%s'", inputtext, player_name[playerid]);
	mysql_pquery(connects,query);
	SendClientMessage(playerid, CGOLD, "Добро пожаловать в команду администрации "FullServName"!");

	cache_get_value_int(0,"rank",PI[playerid][pAdmin]);
	cache_get_value_int(0,"kick",gAdmin[playerid][0]);
	cache_get_value_int(0,"ban",gAdmin[playerid][1]);
	cache_get_value_int(0,"mute",gAdmin[playerid][2]);
	cache_get_value_int(0,"pm",gAdmin[playerid][3]);
	cache_get_value_int(0,"warn",gAdmin[playerid][4]);
	cache_get_value_int(0,"jail",gAdmin[playerid][5]);
	cache_get_value_int(0,"vig",gAdmin[playerid][6]);
	cache_get_value_int(0,"blockadmin",gAdmin[playerid][7]);
	cache_get_value_int(0,"rep",gAdmin[playerid][8]);
	
	PI[playerid][pAdminLevel] = PI[playerid][pAdmin];

	format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET `pAdmin` = '%d' WHERE `Name` = '%s'", PI[playerid][pAdminLevel], player_name[playerid]);
	mysql_pquery(connects,query);

	new saturday = 1310155200, w = gettime(), day_week;
	while(w - saturday > 60 * 60 * 24) {
		w -= 60 * 60 * 24;
		day_week ++;
	}
	while(day_week >= 7) day_week -= 7;
	static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};
	if(!strcmp(Names_Days[day_week],"online_monday")) cache_get_value_int(0,"online_monday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_tuesday")) cache_get_value_int(0,"online_tuesday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_wednesday")) cache_get_value_int(0,"online_wednesday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_thursday")) cache_get_value_int(0,"online_thursday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_friday")) cache_get_value_int(0,"online_friday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_saturday")) cache_get_value_int(0,"online_saturday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_sunday")) cache_get_value_int(0,"online_sunday",gAdminTime[playerid]);

	if(gAdmin[playerid][7] == 1) {
		PI[playerid][pLeader] = 0;
		PI[playerid][pMember] = 0;
		PI[playerid][pRank] = 0;
		SendClientMessage(playerid,COLOR_REDD,"Вы заморожены как администратор");
		return 1;
	}
	dostup[playerid] = 1;
	ACLoad(playerid);
	
	new Admin[32];
	switch(PI[playerid][pAdmin]) {
		case 1: Admin = "Младший модератор";
		case 2: Admin = "Модератор";
		case 3: Admin = "Старший модератор";
		case 4: Admin = "Администратор";
		case 5: Admin = "Главный администратор";
		case 6: Admin = "Спец. администратор";
		case 7: Admin = "Основатель";
	}
	static const f_str[] = "[A] » "G"%s %s авторизовался в админ панели";
	new str[sizeof(f_str) +1 + (-2 + 32) + (-2 + MAX_PLAYER_NAME)];

	format(str, sizeof(str), f_str,Admin,player_name[playerid],Admin), SendAdminMessage(PP, str);
	
	if(!GetString(player_ip_check[playerid],player_ip[playerid]))
	{
		new str_adm[128];
		foreach(new i:Player)
		{
			if(!TI[i][tLogin]) continue;
			if(!PI[i][pAdmin] || !dostup[i]) continue;
			
			format(str_adm, sizeof(str_adm), "[! ADM !] У %s различается IP (%s) с IP последнего входа (%s)", player_name[playerid],player_ip[playerid],PI[playerid][pIpReg]);
			SendClientMessage(i, PP, str_adm);
		}
	}

	query = "";
	format(query, sizeof(query), "UPDATE `admin` SET online_status = 1 WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
	mysql_pquery(connects, query, "", "");
	return 1;
}
CB: AloginReg(playerid,const inputtext[]) {
	new rows;
	rows = cache_num_rows();
	if(!rows) {
		ErrorMessage(playerid, "Пароль введен неверно");
		SetPVarInt(playerid, "Popytki", GetPVarInt(playerid, "Popytki") + 1);
		if(GetPVarInt(playerid, "Popytki") > 4) {
			DeletePVar(playerid, "Popytki");
			gAdmin[playerid][7] = 1;
			Kick(playerid);
		}
	}
	else {
		cache_get_value_int(0,"rank",PI[playerid][pAdmin]);
		cache_get_value_int(0,"kick",gAdmin[playerid][0]);
		cache_get_value_int(0,"ban",gAdmin[playerid][1]);
		cache_get_value_int(0,"mute",gAdmin[playerid][2]);
		cache_get_value_int(0,"pm",gAdmin[playerid][3]);
		cache_get_value_int(0,"warn",gAdmin[playerid][4]);
		cache_get_value_int(0,"jail",gAdmin[playerid][5]);
		cache_get_value_int(0,"vig",gAdmin[playerid][6]);
		cache_get_value_int(0,"blockadmin",gAdmin[playerid][7]);
		cache_get_value_int(0,"rep",gAdmin[playerid][8]);
		
		PI[playerid][pAdminLevel] = PI[playerid][pAdmin];

        new query[1024];
		format(query, sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET `pAdmin` = '%d' WHERE `Name` = '%s'", PI[playerid][pAdminLevel], player_name[playerid]);
		mysql_pquery(connects,query);

		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};
		if(!strcmp(Names_Days[day_week],"online_monday")) cache_get_value_int(0,"online_monday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_tuesday")) cache_get_value_int(0,"online_tuesday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_wednesday")) cache_get_value_int(0,"online_wednesday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_thursday")) cache_get_value_int(0,"online_thursday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_friday")) cache_get_value_int(0,"online_friday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_saturday")) cache_get_value_int(0,"online_saturday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_sunday")) cache_get_value_int(0,"online_sunday",gAdminTime[playerid]);

		if(gAdmin[playerid][7] == 1) {
			PI[playerid][pLeader] = 0;
			PI[playerid][pMember] = 0;
			PI[playerid][pRank] = 0;
			SendClientMessage(playerid,COLOR_REDD,"Вы заморожены как администратор");
			return 1;
		}
		dostup[playerid] = 1;
		ACLoad(playerid);

		for(new i;i<10;i++) {
			if(ChetInfo[i][cheatid1]==playerid) {
				TextDrawSetString(CheatText[i], "-");
				Cheat1 ++;
				if(Cheat1 > 9) Cheat1 = 0;
			}
		}

		new Admin[32];
		switch(PI[playerid][pAdmin]) {
			case 1: Admin = "Младший модератор";
			case 2: Admin = "Модератор";
			case 3: Admin = "Старший модератор";
			case 4: Admin = "Администратор";
			case 5: Admin = "Главный администратор";
			case 6: Admin = "Спец. администратор";
			case 7: Admin = "Основатель";
		}
		static const f_str[] = "[A] » "G"%s %s авторизовался в админ панели";
		new str[sizeof(f_str) +1 + (-2 + 32) + (-2 + MAX_PLAYER_NAME)];

		format(str, sizeof(str), f_str,Admin,player_name[playerid],Admin), SendAdminMessage(PP, str);
		if(!GetString(player_ip_check[playerid],player_ip[playerid])) {
			new str_adm[128];
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
       			if(!PI[i][pAdmin] || !dostup[i]) continue;
				format(str_adm, sizeof(str_adm), "[! ADM !] У %s различается IP (%s) с IP последнего входа (%s)", player_name[playerid],player_ip[playerid],PI[playerid][pIpReg]);
				SendClientMessage(i, PP, str_adm);
			}
		}

		new qeury[128];
		format(qeury, sizeof(qeury), "UPDATE `admin` SET `online_connection` = NOW(), online_status = 1 WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
		mysql_pquery(connects, qeury, "", "");
	}
	return 1;
}

CB: rjenter(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return 1;
	if(!PI[playerid][pGoogleSec]) return ErrorMessage(playerid, "У Вас отсутствует защита Google Authenticator");
	new string[64];
	cache_get_value_int(0,"lvl",DJlvl[playerid]);
 	cache_get_value(0, "nick", DJname[playerid],25);
	format(string, sizeof(string), "[DJ %s]"W" %s(%i) авторизовался",DJname[playerid],player_name[playerid],playerid);
	SendDJMessage(COLOR_YELLOW, string);
	return 1;
}

CB: CheckALogin(playerid) {
	new passwords[32];
	new rows;
	rows = cache_num_rows();
	if(!rows) return 1;
	//if(!PI[playerid][pGoogleSec]) return ErrorMessage(playerid, "У Вас отсутствует защита Google Authenticator");
	cache_get_value(0, "password", passwords, 31);
	if(!strcmp(passwords,"qwerty",true)) {
		SetPVarInt(playerid,"aLogin",1);
		D(playerid, D_ALOGIN, DSP, ""P"Авторизация", "\n\n"W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:\n\t"P"Придумайте пароль от 6 до 15 символов\n\n"NO"ЕСЛИ ВЫ ЗАБЫЛИ ПАРОЛЬ, НИКТО ВАМ ВОССТАНАВЛИВАТЬ ЕГО НЕ БУДЕТ", "Вход", "Отмена");
	}
	else {
		SetPVarInt(playerid,"aLogin",0);
		D(playerid, D_ALOGIN, DSP, ""P"Авторизация", "\n\n"W"Для доступа к админ привелегиям, Вам необходимо авторизоваться:\n\n", "Вход", "Отмена");
	}
	return 1;
}
CB: add_dj(playerid,giveplayerid,level) {
	new rows;
	rows = cache_num_rows();
	new sqlcmd[350],string[128];
	if(rows) 
	{
		if(level) return ErrorMessage(playerid,"Игрок уже состоит в команде Dj");
		else {
			format(sqlcmd, 128, "DELETE FROM `rjlist` WHERE `pid`='%d'", PI[giveplayerid][pID]);
			mysql_pquery(connects, sqlcmd, "", "");
			DJlvl[giveplayerid] = 0;
			format(string, sizeof(string), "%s успешно удален из списка DJ", player_name[giveplayerid]);
			SendOk(playerid, string);
		}
	}
	else {
			if(!level) return ErrorMessage(playerid,"Игрок не состоит в команде Dj");
			SetPVarInt(playerid,"makeDJ",giveplayerid);
			D(playerid,D_DJMAKE,DSI, ""P"Введите ник DJ","\n\n"W"Введите ник DJ:\n\n\
																Минимальное количество символов: "P"3\n\
																"W"Максимальное количество символов: "P"15","Изменить","Отмена");
	}
	return 1;
}
CB: add_gs(playerid,const giveplayerid[],level) {
	new rows;
	rows = cache_num_rows();
	new sqlcmd[350],string[128];
	if(!rows) return ErrorMessage(playerid,"Игрок не найден");
	new load_level;
	cache_get_value_int(0,"pHelper",load_level);
	if(load_level != 0) {
		if(level == 0) {
			format(sqlcmd, 128, "UPDATE `accounts` SET `pHelper` = '0' WHERE `Name`='%s'", giveplayerid);
			mysql_pquery(connects, sqlcmd, "", "");
			format(string, sizeof(string), "%s успешно удален из списка Game Support", giveplayerid);
			SendOk(playerid, string);
		}
		else {
			format(sqlcmd, 128, "UPDATE `accounts` SET `pHelper` = '1' WHERE `Name`='%s'",giveplayerid);
			mysql_pquery(connects, sqlcmd, "", "");
			format(string, sizeof(string), "%s успешно добавлен в список Game Support", giveplayerid);
			SendOk(playerid, string);
		}
	}
	return 1;
}
CB: AccessAdmin(playerid,level)
{
	new rows, sqlcmd[1024],string[1024], load_level;
	rows = cache_num_rows();
	
	if(rows != 0)
	{
		cache_get_value_int(0,"rank",load_level);
		
		if(load_level != 0)
		{
			if(level == 0)
			{
			    PI[playerid][pAdminLevel] = 0;
				SaveAccount(playerid);
				
				format(sqlcmd, 128, "UPDATE `accounts` SET  `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1", level,GetName(playerid));
				mysql_pquery(connects, sqlcmd, "", "");
				
				format(sqlcmd, 128, "DELETE FROM `admin` WHERE `Name`='%s'", GetName(playerid));
				mysql_pquery(connects, sqlcmd, "", "");
				
				SendOk(playerid, "Вы успешно сняли себя с поста администратора");
			}
			else
			{
			    PI[playerid][pAdminLevel] = level;
				SaveAccount(playerid);
				
				format(sqlcmd, 128, "UPDATE `accounts` SET  `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1", level,GetName(playerid));
				mysql_pquery(connects, sqlcmd, "", "");
				
				format(sqlcmd, 128, "UPDATE `admin` SET  `rank` = '%d' WHERE `Name` = '%s' LIMIT 1", level,GetName(playerid));
				mysql_pquery(connects, sqlcmd, "", "");
				
				format(string, sizeof(string), "Вы изменили себе уровень администратора на %d", level);
				SendOk(playerid, string);
			}
		}
	}
	else
	{
		if(level == 0) return ErrorMessage(playerid,"Игрок не администратор.");
		
		PI[playerid][pAdminLevel] = level;
		SaveAccount(playerid);
		
		format(sqlcmd, 128, "UPDATE `accounts` SET  `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1", level,GetName(playerid));
		mysql_pquery(connects, sqlcmd, "", "");
				
		format(sqlcmd, sizeof(sqlcmd), "\
			INSERT INTO `admin` (`Name`, `rank`, `online_connection`,`CheckName`, `date_start`) \
			VALUES ('%s', %d, NOW(),'%s', NOW())", GetName(playerid), level, GetName(playerid));
			
		mysql_pquery(connects, sqlcmd, "","");

		format(string, sizeof(string), "Вы успешно добавили себя в список администрации %d-го уровня", level);
		SendOk(playerid,string);
	}
	return 1;
}
CB: Moderator(playerid,const giveplayerid[],level) {
	new rows;
	rows = cache_num_rows();
	new sqlcmd[350],string[128];
	if(rows != 0) {
		new load_level;
		cache_get_value_int(0,"rank",load_level);
		if(load_level != 0) {
			if(level == 0) {
			    PI[GetPlayerID(giveplayerid)][pAdminLevel] = 0;
				SaveAccount(GetPlayerID(giveplayerid));

				format(sqlcmd, 128, "UPDATE `accounts` SET  `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");

				format(sqlcmd, 128, "DELETE FROM `admin` WHERE `Name`='%s'", giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");
				format(string, sizeof(string), "%s успешно удален из списка модераторов", giveplayerid);
				SendOk(playerid, string);
			}
			else {
			    PI[GetPlayerID(giveplayerid)][pAdminLevel] = level;
				SaveAccount(GetPlayerID(giveplayerid));

				format(sqlcmd, 128, "UPDATE `accounts` SET  `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");

				format(sqlcmd, 128, "UPDATE `admin` SET  `rank` = '%d' WHERE `Name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");
				format(string, sizeof(string), "Уровень администрирования у %s изменен на %d", giveplayerid, level);
				SendOk(playerid, string);
			}
		}
	}
	else {
		if(level == 0) return ErrorMessage(playerid,"Игрок не администратор.");

		PI[GetPlayerID(giveplayerid)][pAdminLevel] = level;
		SaveAccount(GetPlayerID(giveplayerid));

		format(sqlcmd, 128, "UPDATE `accounts` SET  `pAdmin` = '%d' WHERE `Name` = '%s' LIMIT 1", level,giveplayerid);
		mysql_pquery(connects, sqlcmd, "", "");

		format(sqlcmd, sizeof(sqlcmd), "INSERT INTO `admin` (`Name`, `rank`, `online_connection`,`CheckName`, `date_start`) VALUES ('%s', %d, NOW(),'%s', NOW())", giveplayerid, level, player_name[playerid]);
		mysql_pquery(connects, sqlcmd, "","");

		format(string, sizeof(string), "%s успешно добавлен в список модераторов. Уровень полномочий %d", giveplayerid, level);
		SendOk(playerid,string);
	}
	return 1;
}
stock exit_garage(vehicleid, worldid, bool:tune = false) {
	new id;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleID(i) == vehicleid) {
			TI[i][tVirtualWorld] = id;
			TI[i][tInterior] = worldid;
			SetPlayerInterior(i,worldid);
			if(tune) id = i, SetPlayerVirtualWorld(i,id);
			else SetPlayerVirtualWorld(i,worldid);
			SetPlayerTime(i,tmphour, tmpminute);
		}
	}
	LinkVehicleToInterior(vehicleid, worldid);
	if(tune) SetVehicleVirtualWorld(vehicleid, id);
	else SetVehicleVirtualWorld(vehicleid, worldid);
	return 1;
}
stock enter_garage(vehicleid, worldid,house) {
	new id;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPlayerVehicleID(i) == vehicleid) {
			TI[i][tVirtualWorld] = id;
			TI[i][tInterior] = worldid;
			SetPlayerInterior(i,worldid);
			TI[i][tSelectHouse] = house;
			SetPlayerVirtualWorld(i,worldid);
			SetPlayerTime(i,tmphour, tmpminute);
		}
	}
	LinkVehicleToInterior(vehicleid, worldid);
	SetVehicleVirtualWorld(vehicleid, worldid);
	return 1;
}
stock IsAIP(const text[]) {
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}
#include "sourse/other/typelog"

CB: all_referals(playerid,const names[]) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Рефералы не найдены");
	new level,stats[3];
	for(new i = 0; i < rows; i++) {
		cache_get_value_int(i,"pLevel",level);
		if(level == 2) stats[0] ++;
		if(level == 3) stats[1] ++;
		if(level >= 4) stats[2] ++;
	}
	static const f_str[] = ""W"Ник: "YELLOW"%s\n\n\
							"W"Игроки достигшие 2 лвл: "ORANGE"[%d]\n\
							"W"Игроки достигшие 3 лвл: "ORANGE"[%d]\n\
							"W"Игроки достигшие 4+ лвл: "ORANGE"[%d]\n\n\
							"W"Всего игроков приглашено: "P"[%d]";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4) + (-2 + 4) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,names,stats[0],stats[1],stats[2],rows);
	D(playerid,DIALOG_NONE,DSM, ""P"Рефералы",string,"Закрыть","");
	return 1 ;
}
CB: AGetID(playerid, id) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Аккаунт не найден");
	new ids,names[MAX_PLAYER_NAME+1];
	cache_get_value_int(0,"pID",ids);
	cache_get_value(0,"Name",names,MAX_PLAYER_NAME);
	new string[256];
	format(string,sizeof(string),""W"%sНомер аккаунта:      \t%i\n",string,id);
	format(string,sizeof(string),"%sИмя:      \t\t%s\n\n",string,names);
	D(playerid,DIALOG_NONE,DSM, ""P"GETID",string,"Закрыть","");
	return 1;
}
CB: AGetStats(playerid, const name[]) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Аккаунт не найден");
	new level,awarn,money,moneyb,id;
	new leader,member,rank,house;
	new biz,regip[17],onlin[33],drug[25];
	new ip[17];
	cache_get_value_int(0,"pID",id);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"pWarns",awarn);
	cache_get_value_int(0,"pCash",money);
	cache_get_value_int(0,"pBank",moneyb);
	cache_get_value_int(0,"pLeader",leader);
	cache_get_value_int(0,"pMember",member);
	cache_get_value_int(0,"pRank",rank);
	cache_get_value_int(0,"bussiness",biz);
	cache_get_value_int(0,"house",house);
	cache_get_value(0,"pIpReg",regip,16);
	cache_get_value(0,"pvIp",ip,16);
	cache_get_value(0,"pOnline",onlin,32);
	cache_get_value(0,"pDrug",drug,24);
	new string[1024];
	format(string,sizeof(string),""W"%sНомер аккаунта:      \t%i\n",string,id);
	format(string,sizeof(string),"%sИмя:      \t\t%s\n\n",string,name);
	format(string,sizeof(string),"%sУровень:      \t\t%d\n",string,level);
	format(string,sizeof(string),"%sВарны:      \t\t%d\n",string,awarn);
	format(string,sizeof(string),"%sДеньги(нал):      \t%d\n",string,money);
	format(string,sizeof(string),"%sДеньги(банк):      \t%d\n",string,moneyb);
	format(string,sizeof(string),"%sЛидер:      \t\t%d\n",string,leader);
	format(string,sizeof(string),"%sФракция:      \t\t%d\n",string,member);
	format(string,sizeof(string),"%sРанг:      \t\t%d\n",string,rank);
	if(biz != 0) format(string,sizeof(string),"%sБизнес:          \t\t%d(%s)\n",string,biz,gBusiness[biz-1][bizzName]);
	else format(string,sizeof(string),"%sБизнес:          \t\t%d(Отсутствует)\n",string,biz);
	format(string,sizeof(string),"%sДом:          \t\t%d\n",string,house);
	format(string,sizeof(string),"%sR-IP:      \t\t%s\n",string,regip);
	format(string,sizeof(string),"%sL-IP:      \t\t%s\n",string,ip);
	format(string,sizeof(string),"%sOnline:\t\t\t%s\n",string,onlin);
	format(string,sizeof(string),"%sУказывал при регистрации:\t\t\t%s\n\n",string,drug);
	if(!GetString(regip,ip)) format(string,sizeof(string),"%s"NO" IP регистрации и IP последнего входа разные\n",string);
	D(playerid,DIALOG_NONE,DSM, ""P"OFFSTATS",string,"Закрыть","");
	return 1;
}
CB: get_info_player(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Аккаунт не найден");
	new name[MAX_PLAYER_NAME];
	new ipreg[17];
	new getonip[17];
	new datareg[32+1];

	cache_get_value(0,"Name",name, MAX_PLAYER_NAME);
	cache_get_value(0,"pIpReg",ipreg, 16);
	cache_get_value(0,"pvIp",getonip, 16);
	cache_get_value(0,"pDataReg",datareg, 32+1);

	new id,cash,level,donate;
	cache_get_value_int(0,"pID",id);
	cache_get_value_int(0,"pCash",cash);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"donatemoney",donate);

	new string[512];
	format(string, sizeof(string), ""W"Номер аккаунта: "P"%d\nДеньги наличными: "GREEN"$%d\nУровень: "P"%d\nREG-IP: "P"%s\nLAST-IP: "P"%s\n"W"Донат: "P"%d\nЗарегистрирован: "P"%s",
	id,cash,level,ipreg,getonip,donate,datareg);
	D(playerid,DIALOG_NONE,DSM,name,string,"Закрыть","");
	return 1;
}
CB:offwarn(playerid, const Nick[],const Reason[]) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Аккаунт не найден");
	new query[300];
	new count_warns;
	cache_get_value_int(0,"pWarns",count_warns);
	if((count_warns+1) < 3) {

		format(query, sizeof(query), "UPDATE `accounts` SET `pWarns` = '%i', `warntime` = '%i', `pLeader` = '0', `pMember` = '0', `pRank` = '0' WHERE `Name` = '%s' LIMIT 1",(count_warns+1),unix + 7*86400,Nick);
		mysql_pquery(connects,query);

		WriteLog(LOG_WARN,player_name[playerid],Nick,Reason);
		gAdmin[playerid][ADMIN_WARN] ++;

		new string[128];
		format(string,sizeof(string),"Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s",player_name[playerid],Nick,(count_warns+1),Reason);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
		//Insert_Warn(Nick,count_warns+1,player_name[playerid],Reason);
	}
	else {
		if(IsBannedName(Nick)) return ErrorMessage(playerid, "Данный игрок уже заблокирован");
		new string[144];
		BanName(Nick, player_name[playerid], 30, Reason);
		format(string, sizeof(string), "Администратор %s забанил (3 предупреждения) %s на %d дней в оффлайне. Причина: %s",player_name[playerid], Nick, 30, Reason);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
	}
	off_add_jobinfo(Nick,"Недееспособен");
	return 1;
}
stock Insert_Warn(const name[],warn, const admin[], const reason[]) {
	string_replace(reason, "'", ' ');
	new query[512];
	mysql_format(connects, query, sizeof(query), "INSERT INTO `warns`(`name`,`warn`, `admin`, `reason`, `time`) VALUES ('%s','%d','%s','%s',NOW())", name, warn, admin, reason);
	mysql_pquery(connects, query, "", "");
	return 1;
}
stock string_replace(text[], const find[2], replace, pos = 0) {
	while ((pos = strfind(text, find, false, pos)) != -1) {
		text[pos] = replace;
	}
}
CB: warninfo(playerid,type) {
	new rows, string[295], time[24], anick[24], reason[34], query[34];
	rows = cache_num_rows();
	format(string, sizeof(string), "{ffcf00}Дата и время\t\t Кем выдан\tПричина"W"\n\n");
	for(new i = 0; i < rows; i++) {
	    cache_get_value_name(i, "time", query); strmid(time, query, 0, strlen(query), 24);
	    cache_get_value_name(i, "admin", query); strmid(anick, query, 0, strlen(query), MAX_PLAYER_NAME);
	    cache_get_value_name(i, "reason", query); strmid(reason, query, 0, strlen(query), 34);
	 	format(string, sizeof(string), "%s%s\t%s\t%s\n",string, time, anick, reason);
	}
	if(!type) return D(GetPVarInt(playerid, "warninfo"), DIALOG_NONE, DSM, ""P"Предупреждения", string, "Закрыть", "");
	else D(playerid, DIALOG_NONE, DSM, ""P"Предупреждения", string, "Закрыть", "");
	return 1;
}
stock fork_start() {
	if(fork_pickups > 0) return 1;
	new rand = random(sizeof(fork_allpickups));
	fork_pickup = CreateDynamicPickup(11715,23,fork_allpickups[rand][0],fork_allpickups[rand][1],fork_allpickups[rand][2],201,87);
	fork_pickups = 1;
	return true;
}
stock ether_closed(playerid) {
	for(new i; i<3; i++) {
		if(calls_news[i] == playerid && calls_ether[i] != INVALID_PLAYER_ID) {
			SendOk(calls_ether[i], "Ведущий отключил приём звонков");
			PhoneStatus(calls_ether[i],false);
			calls_ether[i] = INVALID_PLAYER_ID;
			calls_news[i] = INVALID_PLAYER_ID;
		}
	}
	switch(GetTeamID(playerid)) {
		case fLSNEWS: {
			if(calls_news[0] == playerid) {
				calls_news[0] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
			}
		}
		case fSFNEWS: {
			if(calls_news[1] == playerid) {
				calls_news[1] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
			}
		}
		case fLVNEWS: {
			if(calls_news[2] == playerid) {
				calls_news[2] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PI[playerid][pMember], 0x139BECFF, string);
			}
		}
	}
}
CB: ShowNumber(playerid,str[]) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid,"Не найдено");
	new number[11],string[156],query[128];
	cache_get_value_name(0,"number",number,10);
	if(!strcmp(number,str,true)) cache_get_value_name(0,"owner",query,MAX_PLAYER_NAME);
	format(string,sizeof(string),"{FFFFFF}Гос.номер: {FFFF00}%s{FFFFFF}\nХозяин: {FFFF00}%s{FFFFFF}",str,query);
	D(playerid,DIALOG_NONE,DSM, ""P"Запрос",string,"Закрыть","");
	return 1;
}
CMD:robhouse(playerid, params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вы не бандит");
	new idx = -1;

	for(new i = 1; i < gHouseCount; i ++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, gHouses[i][houseX], gHouses[i][houseY], gHouses[i][houseZ])) {
			idx = i;
			break;
		}
	}
	if(idx == -1) return ErrorMessage(playerid, "Вы должны находиться рядом с домом");
	new Float:vehx, Float:vehy, Float:vehz;
	GetVehiclePos(rob_veh[playerid], vehx, vehy, vehz);
	if(!IsPlayerInRangeOfPoint(playerid, 11.0, vehx,vehy,vehz)) return ErrorMessage(playerid, "Вы должны находиться рядом с фургоном");
   	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] == -1) return ErrorMessage(playerid,"Грабить дом можно только на территории гетто");
	if(gHouses[idx][houseOwnerID] == PI[playerid][pID]) return ErrorMessage(playerid,"Вы не можете ограбить свой дом");
	if(!gHouses[idx][houseOwnerID]) return ErrorMessage(playerid,"У этого дома нет владельца");
	if(gHouses[idx][houseRob]) return ErrorMessage(playerid, "Этот дом уже грабили в этом часу");
	if(!PI[playerid][pJemmy]) return ErrorMessage(playerid,"У Вас нет отмычек. Купить их можно в 24-7");
	
	JobTempProcess[playerid] = 9;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	TogglePlayerControllable(playerid, false);
	gHouses[idx][houseRob] = true;
	if(QuestProgress[playerid][6] < 15 && AcceptQuest[playerid][6] != 0) QuestProgress[playerid][6] ++,save_quest(playerid,6);
	if(QuestProgress[playerid][6] == 15 && AcceptQuest[playerid][6] != 0) {
		D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно ограбили 15 домов. Данное задание можно завершить и забрать за него награду","Закрыть","");
		NextStapQI(playerid,6);
	}
	return 1;
}
CMD:getgun(playerid,params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
	switch(PI[playerid][pMember]) {
		case fBALLAS: if(!IsPlayerInRangeOfPoint(playerid,20.0,2569.0618,-1844.7719,2522.8401) && GetPlayerVirtualWorld(playerid) != 52) return ErrorMessage(playerid,"Необходимо находиться в доме/на респе Ballas");
		case fVAGOS: if(!IsPlayerInRangeOfPoint(playerid,20.0,-1513.1685,-622.5582,1001.0062) && GetPlayerVirtualWorld(playerid) != 53) return ErrorMessage(playerid,"Необходимо находиться в доме/на респе Vagos");
		case fGROVE: if(!IsPlayerInRangeOfPoint(playerid,20.0,2569.0618,-1844.7719,2522.8401) && GetPlayerVirtualWorld(playerid) != 54) return ErrorMessage(playerid,"Необходимо находиться в доме/на респе Grove");
		case fAZTEC: if(!IsPlayerInRangeOfPoint(playerid,20.0,-2625.4299,2914.8960,2738.6201) && GetPlayerVirtualWorld(playerid) != 55) return ErrorMessage(playerid,"Необходимо находиться в доме/на респе Aztec");
		case fRIFA: if(!IsPlayerInRangeOfPoint(playerid,20.0,-1513.1685,-622.5582,1001.0062) && GetPlayerVirtualWorld(playerid) != 56) return ErrorMessage(playerid,"Необходимо находиться в доме/на респе Rifa");
	}
	if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лидер вашей банды закрыл доступ к складу");
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
		new str[128];
		format(str,sizeof(str),"Склад доступен с %i ранга", FI[GetTeamID(playerid)][fUseStock]);
		ErrorMessage(playerid,str);
		return 1;
	}
	if(sscanf(params,"dd",params[0],params[1])) {
		SendClientMessage(playerid, COLOR_GREY, "0 - SD-Pistol | 1 - Desert Eagle | 2 - MP5 | 3 - Shotgun | 4 - M4 | 5 - AK-47 | 6 - Rifle");
		return SendEsp(playerid, "/getgun [ID оружия] [патроны]");
	}
	new gun;
	switch(params[0]) {
		case 0: gun = 23;
		case 1: gun = 24;
		case 2: gun = 29;
		case 3: gun = 25;
		case 4: gun = 31;
		case 5: gun = 30;
		case 6: gun = 33;
		default: return 1;
	}
	SetPVarInt(playerid,"noneedgun",0);
	for(new i;i<12;i++) {
		new weapid,ammot;
		GetPlayerWeaponData(playerid,i,weapid,ammot);
		if(weapid == gun) {
			SetPVarInt(playerid,"noneedgun",1); 
			break;
		}
	}
	if(FI[GetTeamID(playerid)][fMats]<(params[1]*MakeGunData[params[0]][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid,"На складе недостаточно боеприпасов");
	if(FI[GetTeamID(playerid)][fMats]<params[1] && GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid,"На складе недостаточно боеприпасов");
	if(params[1] < 1 || params[1] > 200) return ErrorMessage(playerid,"Нельзя брать меньше 1 и больше 200 пт");
	MeAction(playerid,"взял(а) оружие со склада");
	if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[params[0]][mgunamount];
	SetPVarInt(playerid,"noneedgun",0);

	FI[GetTeamID(playerid)][fMats] -= params[1];
	UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

	AC_GivePlayerWeapon(playerid,MakeGunData[params[0]][mgunid],params[1]);
	static const f_str[] = "[F] %s[%d] взял(а) оружие со склада [%d пт]";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
	
 	format(string,sizeof(string),f_str,player_name[playerid],playerid,params[1]);
	SendFamilyMessage(PI[playerid][pMember],0x6699ccFF,string);
	return 1;
}
CMD:makegun(playerid) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return ErrorMessage(playerid,"Вы не бандит/мафиози");
	if(!PI[playerid][pMats]) return ErrorMessage(playerid, "У Вас нет боеприпасов");
	if(PI[playerid][pJailTime]) return ErrorMessage(playerid, "Нельзя использовать в тюрьме");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Нельзя использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Нельзя использовать на дуэлях");
	new string[512];
	string = "Оружие\tБоеприпасов"W"\n";
	for(new i = 0; i < 7; i++) {
		format(string,sizeof(string),"%s%s\t%i\n",string,MakeGunData[i][mgunname],MakeGunData[i][mgunamount]);
	}
	D(playerid,D_MAKEGUN,DSTH,"Сборка оружия",string,"Выбрать","Закрыть");
	return 1;
}
CB: GzCheck(i,napad,vlad) {
	new string[128];
	foreach(new m:Player) {
		if(IsAGang(m)) {
			if(GZInfo[i][gTime] < 300) {
				if(!infight[m]) {
					TextDrawShowForPlayer(m, inFigh);
					infight[m] = true;
				}
			}
			if(!GetPVarInt(m,"ppkz")) {
				GangZoneFlashForPlayer(m,GZInfo[i][gID],GetGangColor(napad));
				TextDrawBoxColor(Capture[3], gang_color(napad));
				TextDrawBoxColor(Capture[4], gang_color(vlad));
				for(new z = 0;z < 10;z++) {
					TextDrawShowForPlayer(m, Capture[z]);
				}

				format(string,sizeof(string),"%s",Convert(GZInfo[i][gTime]));
				TextDrawSetString(Capture[6],string);

				format(string,sizeof(string),"%s",gang_name(vlad));
				TextDrawSetString(Capture[7],string);

				format(string,sizeof(string),"%s",gang_name(napad));
				TextDrawSetString(Capture[9],string);

				format(string,sizeof(string),"%d",CountOnZone[vlad]);
				TextDrawSetString(Capture[2],string);

				format(string,sizeof(string),"%d",CountOnZone[napad]);
				TextDrawSetString(Capture[1],string);
				SetPVarInt(m,"ppkz",true);
			}
			else {
				format(string,sizeof(string),"%s",Convert(GZInfo[i][gTime]));
				TextDrawSetString(Capture[6],string);

				format(string,sizeof(string),"%d",CountOnZone[vlad]);
				TextDrawSetString(Capture[2],string);

				format(string,sizeof(string),"%d",CountOnZone[napad]);
				TextDrawSetString(Capture[1],string);
			}
		}
	}
	if(GZInfo[i][gTime] >= 1) GZInfo[i][gTime] --;
	else if(GZInfo[i][gTime] < 1) {
		new strlolka[112];
		if(CountOnZone[vlad] == CountOnZone[napad] || CountOnZone[vlad] > CountOnZone[napad]) {
			format(strlolka,112,"%s отстояли свою территорию",GFrac(vlad));
		}
		else {
			format(strlolka,112,"%s захватили территорию у банды %s",GFrac(napad),GFrac(vlad));
			VladGzone[GZInfo[i][gFrakVlad]]--;
			VladGzone[GZInfo[i][gNapad]]++;
			GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
			add_gang_points(GZInfo[i][gNapad],5);
		}
		SendBand(COLOR_ORANGE,strlolka);
		new id_killed = -1;
		new max_killed = -1;
		foreach(new x:Player) {
			if(!TI[x][tLogin]) continue;
			if(IsAGang(x) && GetPVarInt(x,"ppkz")) EndCapt(x);
			if(GetPVarInt(x,"killed_shot")) {
				if(GetPVarInt(x,"killed_shot")>max_killed) {
					max_killed = GetPVarInt(x,"killed_shot");
					id_killed = x;
				}
				DeletePVar(x,"killed_shot");
			}
		}
		if(id_killed != -1 && max_killed != -1) {
			format(string,128,"Уничтожил больше всего противников "W"%s {E6251E}Убийств: "W"%i", player_name[id_killed],max_killed);
			SendBand(COLOR_ORANGE,string);
			if(PI[id_killed][pFamily]) reputation_family(PI[id_killed][pFamily]-1,3);
		}
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
		GZInfo[i][gTime] = 0;

		TextDrawSetString(Capture[1],"0");
		TextDrawSetString(Capture[2],"0");
		GZInfo[i][ZoneOnBattle] = 0;
		GangZoneStopFlashForAll(GZInfo[i][gID]);
		GangZoneHideForAll(GZInfo[i][gID]);
		GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
		SaveGZ(i);
		capture_kd[napad] = unix + (70 * 60);
		capture_kd[vlad] = unix + (60 * 60);
		zahvat = false;
		KillTimer(GZInfo[i][gzTimer]);
		GZInfo[i][gzTimer] = 0;
		DestroyDynamicArea(gz_area);
	}
	if(i == 90) black_prods[0] = GZInfo[i][gFrakVlad],black_prods[9] = unix + 60*60*72; SaveMarket(),check_terrs();
	return 1;
}
stock UpdateMorozed() {
	new quer_moroz[350];
	format(quer_moroz,350,"UPDATE `fracmorozed` SET `MOROZ_BALLAS`='%d',`MOROZ_VAGOS`='%d',`MOROZ_GROVE`='%d',`MOROZ_RIFA`='%d',`MOROZ_AZTECAS`='%d',`MOROZ_LCN`='%d',`MOROZ_YAKUZA`='%d',`MOROZ_RM`='%d'",fracmoroz[0],fracmoroz[1],fracmoroz[2],fracmoroz[3],fracmoroz[4],fracmoroz[5],fracmoroz[6],fracmoroz[7]);
	mysql_tquery(connects,quer_moroz,"","");
	return 1;
}
stock SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance) {
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerPos(playerid, x, y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	SetPlayerPosAC(giveplayerid,x,y,z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(giveplayerid,a);
}
stock GoAnim(playerid,const alib[],const aanim[],Float:atime,amove,ax,ay,az,af,ac) {
	ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	return 1;
}
stock IsLeapYear(year) return (year % 4 == 0);
stock TimestampToDate(Timestamp, &year, &month, &day, &hour, &minute, &second, HourGMT, MinuteGMT = 0) {
	new MonthTimes[12][4] = {
		{ 31, 31, 2678400, 2678400 },
		{ 28, 29, 2419200, 2505600 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 }
	};
	new tmp = 2;
	year = 1970;
	month = 1;
	Timestamp -= 172800;

	new log_amount ;
	for(;;) {
		if(log_amount>37) {
			printf ( "[TimestampToDate] %d iteration.", log_amount ) ;
		}
		log_amount ++ ;
		if(Timestamp >= 31536000) {
			year ++;
			Timestamp -= 31536000;
			tmp ++;
			if(tmp == 4) {
				if(Timestamp >= 31622400) {
						tmp = 0;
						year ++;
						Timestamp -= 31622400;
				}
				else break;
			}
		}
		else break;
	}
	for(new i = 0; i < 11; i ++) {
		if(Timestamp >= MonthTimes[i][2 + IsLeapYear(year)]) {
				month ++;
				Timestamp -= MonthTimes[i][2 + IsLeapYear(year)];
		}
		else break;
	}
	day = 1 + (Timestamp / 86400);
	Timestamp %= 86400;
	hour = HourGMT + (Timestamp / 3600);
	Timestamp %= 3600;
	minute = MinuteGMT + (Timestamp / 60);
	second = (Timestamp % 60);
	if(minute > 59) {
		minute = 0;
		hour ++;
	}
	if(hour > 23) {
		hour -= 24;
		day ++;
	}
	if(day > MonthTimes[month][IsLeapYear(year)]) {
		day = 1;
		month ++;
	}
	if(month > 12) {
		month = 1;
		year ++;
	}
	return 1;
}
stock UpdateLicenses(playerid)
{
	new query[156];
	format(query, sizeof(query), "\
		UPDATE `accounts` SET `licenses` = '%d,%d,%d,%d' WHERE `Name` = '%s'", lic[playerid][0],lic[playerid][1],lic[playerid][2],lic[playerid][3],GetName(playerid));
		
	mysql_pquery(connects, query, "", "");
	return 1;
}
stock GetTickets(playerid) {
    TOTALTICKETS[playerid] = 0;
	new query[256];
    format(query,sizeof(query),"SELECT * FROM `"TABLE_TICKETS"` WHERE `Name` = '%s'",player_name[playerid]);
	return mysql_tquery(connects, query, "check_tickets", "i", playerid);
}
CB: check_tickets(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return D(playerid,DIALOG_NONE,DSM, ""P"Список штрафов","Неоплаченных штрафов нет","Закрыть","");
	new text[144], price, item,string[1024];
	for(new x = 0; x < rows; x++) {
		cache_get_value_name_int(x, "id", TL[playerid][x][tID]);

		cache_get_value_name(x, "give_name", TL[playerid][x][tName], MAX_PLAYER_NAME);

		cache_get_value_name_int(x, "total", TL[playerid][x][tPrice]);

		cache_get_value_name(x, "reason", TL[playerid][x][tReason], 64);
		cache_get_value_name(x, "date", TL[playerid][x][tDate], 32);

		price += TL[playerid][x][tPrice];
		TOTALTICKETS[playerid]++;
		if(TOTALTICKETS[playerid] == 15) {
			SendClientMessage(playerid,COLOR_GREY,"Показаны первые 15 штрафов");
			break;
		}
	}
	strcat(string,"№\tПричина\tСумма\n");
	format(text,sizeof(text),"-.\tОплатить все штрафы\t{88F83E}%i вирт\n",price), strcat(string,text);
	for(new i; i < TOTALTICKETS[playerid]; i++) {
		item++;
		format(text,sizeof(text),"{ffffff}%i.\t%s\t{FF0000}%i вирт\n",item,TL[playerid][i][tReason], TL[playerid][i][tPrice]);
		strcat(string,text);
	}
	return D(playerid,D_TICKET,DSTH,"Список штрафов",string,"Далее","Отмена");
}
stock arrest(playerid) {
	DelGun(playerid);
	if(PI[playerid][pSearch] <= 5) {
		PI[playerid][pJail] = GetNearestPolice(playerid);
		PI[playerid][pJailTime] = (PI[playerid][pSearch] * 600);
	}
	else {
		PI[playerid][pJail] = 4;
		PI[playerid][pJailTime] = 4500;
	}
	UpdatePlayerData(playerid,"pJail",PI[playerid][pJail]);
	UpdatePlayerData(playerid,"pJailTime",PI[playerid][pJailTime]);
	PI[playerid][pSearch] = 0;
	UpdatePlayerData(playerid,"pSearch",PI[playerid][pSearch]);
	PI[playerid][pArrested] += 1;
	UpdatePlayerData(playerid,"pArrested",PI[playerid][pArrested]);
	PI[playerid][pZakonp] -= 3;
	if(PI[playerid][pZakonp] < -100) PI[playerid][pZakonp] = -100;
	SetPlayerWantedLevel(playerid, PI[playerid][pSearch]);
	SetPlayerArmour(playerid, 0);
}
CB: showall_callback(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Используйте команду еще раз");
	new string[1512];
	string = "Имя\t\tРанг\n\n"W"";
	for(new i = 0; i < rows; i++) {
		new name[MAX_PLAYER_NAME+1];
		cache_get_value_name(i,"Name",name,MAX_PLAYER_NAME+1);
		new rang;
		cache_get_value_int(i,"pRank",rang);
		format(string,sizeof(string),"%s%s\t\t%i\n",string,name,rang);
	}
	if(rows >= 20) {
		SALLROWS[playerid]++;
		D(playerid,D_SHOWALL,DSTH,"Члены организации оффлайн",string,"Далее","Отмена");
	}
	else D(playerid,DIALOG_NONE,DSTH,"Члены организации оффлайн",string,"Закрыть","");
	return 1 ;
}
CB: info_fraction(playerid,ID) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return 1;
	new idd = 0,ids = 0;
	for(new i = 0; i < rows; i++) {
		new rang;
		cache_get_value_int(i,"pRank",rang);
		if(rang == FI[ID][fInviteRang]) idd ++;
	}
	static const f_str[] = ""W"\nОрганизация: "YELLOW"%s\n\
											"W"Лидер: "GREEN"%s\n\n\
											"W"Поставлен: "P"%s "W"| "P"%s\n\
											"W"Игроки во фракции онлайн: "P"%d\n\
											"W"Всего игроков во фракции: "P"%d\n\
											"W"Заместителей во фракции: "P"%d";
	new string[sizeof(f_str) +1 + (-2 + 25) + (-2 + 25) + (-2 + 53) + (-2 + 7)];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] != ID)continue;
		if(PI[i][pRank] < 1 || PI[i][pMember] < 1) continue;
		if(!start_work[i]) continue;
		ids++;
	}
	format(string,sizeof(string),f_str,FI[ID][fName],FI[ID][fLeader],FI[ID][fAdmin],FI[ID][fTime],ids,rows,idd);
	D(playerid,DIALOG_NONE,DSM, ""P"Информация",string,"Закрыть","");
	return 1 ;
}
CB: info_funcmembers(bizz) {
	new rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	rows = cache_num_rows();
	cache_delete(result);
	return rows;
}
CB: fam_members(fam) {
	new rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE family = '%d'", fam);
	new Cache:result = mysql_query(connects, query);
	rows = cache_num_rows();
	cache_delete(result);
	return rows;
}
SendSpyMessage(fraca, color, mes[]) {
	new string[144];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPVarInt(i,"tipster_listen") == fraca && GetPVarInt(i,"tipster_listen") > 0) {
			format(string, sizeof(string), "[TIPSTER] %s", mes);
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}
CB: FuelCar(playerid) {
	new step = GetPVarInt(playerid,"tank_fill");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return 0;
	if(GetPVarInt(playerid,"tank_vfuel")+step <= VehicleInfo[vehicleid][vFuel]) {
		DeletePVar(playerid,"tank_fill");
		DeletePVar(playerid,"tank_vfuel");
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	VehicleInfo[vehicleid][vFuel] += 1.0;
	SetTimerEx("FuelCar",500,0,"i",playerid);
	return 1;
}
stock save_slotitem(playerid)
{
	new query[256];
	format(query,sizeof(query),"UPDATE accounts SET pSlotItem = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pSlotItem][0],PI[playerid][pSlotItem][1],
		PI[playerid][pSlotItem][2],PI[playerid][pSlotItem][3],PI[playerid][pSlotItem][4],PI[playerid][pSlotItem][5],PI[playerid][pSlotItem][6],PI[playerid][pSlotItem][7],
		GetName(playerid));
		
	mysql_tquery(connects, query);
}
stock save_slotitem_use(playerid)
{
	new query[4096];
	format(query,sizeof(query),"UPDATE accounts SET pSlotItem_Use = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pSlotItem_Use][0],
		PI[playerid][pSlotItem_Use][1],PI[playerid][pSlotItem_Use][2],PI[playerid][pSlotItem_Use][3],PI[playerid][pSlotItem_Use][4],PI[playerid][pSlotItem_Use][5],
		PI[playerid][pSlotItem_Use][6],PI[playerid][pSlotItem_Use][7],GetName(playerid));
		
	mysql_tquery(connects, query);
}
stock save_settings(playerid)
{
	new query[4096];
	format(query,sizeof(query),"UPDATE accounts SET Settings = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `Name` = '%s' LIMIT 1",PI[playerid][pSettings][0],
		PI[playerid][pSettings][1],PI[playerid][pSettings][2],PI[playerid][pSettings][3],PI[playerid][pSettings][4],PI[playerid][pSettings][5],PI[playerid][pSettings][6],
		PI[playerid][pSettings][7],PI[playerid][pSettings][8],PI[playerid][pSettings][9],PI[playerid][pSettings][10],GetName(playerid));
		
	mysql_tquery(connects, query);
}
stock save_funcar(bizz) {
	new query[320],data[256];
	for(new i;i<20;i++) {
		if(!i) format(data,sizeof(data),"%d",FuncBizz[bizz][funcbCar][i]);
		else format(data,sizeof(data),"%s|%d",data,FuncBizz[bizz][funcbCar][i]);
	}
	format(query,sizeof(query),"UPDATE business_func SET car = '%s' WHERE bizzID = '%d'", data, bizz);
	mysql_tquery(connects, query);
}
stock save_funtarif(bizz) {
	new query[320],data[256];
	for(new i;i<4;i++) {
		if(!i) format(data,sizeof(data),"%d",FuncBizz[bizz][funcbTarif][i]);
		else format(data,sizeof(data),"%s|%d",data,FuncBizz[bizz][funcbTarif][i]);
	}
	format(query,sizeof(query),"UPDATE business_func SET tarif = '%s' WHERE BINARY bizzID = '%d'", data, bizz);
	mysql_tquery(connects, query);
}
stock load_color(playerid) {
	for(new i = 0, cindex = 0; i < sizeof(func_bcolor); i++) {
		if(i == 0) {
			func_bcolor[i] = TextDrawCreate(475.548797, 143.249954, "usebox");
			TextDrawLetterSize(func_bcolor[i], 0.000000, 18.152412);
			TextDrawTextSize(func_bcolor[i], 141.367492, 0.000000);
			TextDrawAlignment(func_bcolor[i], 1);
			TextDrawColor(func_bcolor[i], 41215);
			TextDrawBoxColor(func_bcolor[i], -1888497599);
			TextDrawUseBox(func_bcolor[i], true);
			TextDrawSetShadow(func_bcolor[i], 0);
			TextDrawSetOutline(func_bcolor[i], 0);
			TextDrawFont(func_bcolor[i], 1);
		}
		if(i > 0) {
			if(i >= 1) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 140.583419, "LD_BEAT:chit");
			if(i == 8) cindex = 0, func_bcolor[i] = TextDrawCreate(144.000000, 192.500015, "LD_BEAT:chit");
			if(i > 8) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 192.500015, "LD_BEAT:chit");
			if(i == 15) cindex = 0,func_bcolor[i] = TextDrawCreate(144.000000, 244.416671, "LD_BEAT:chit");
			if(i > 15) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 244.416671, "LD_BEAT:chit");
			TextDrawLetterSize( func_bcolor[i], 0.000000, 0.000000);
			TextDrawTextSize( func_bcolor[i], 58.096633, 65.333282);
			TextDrawAlignment( func_bcolor[i], 1);
			TextDrawColor(func_bcolor[i], color_td[i][col_id]);
			TextDrawSetShadow(func_bcolor[i], 0);
			TextDrawSetOutline(func_bcolor[i], 0);
			TextDrawFont( func_bcolor[i], 4);
			TextDrawSetSelectable( func_bcolor[i], true);
			cindex++;
		}
		TextDrawShowForPlayer(playerid,func_bcolor[i]);
	}
	SetPVarInt(playerid,"select_colortd",1);
	SelectTextDraw(playerid, 0xFFFFFFFF);
	SendClientMessage(playerid,0x00FF00FF,"[Подсказка] "W"Для закрытия окна нажмите "P"ESC");
	return 1;
}
CB: load_captcha(playerid) {
	for(new i = 0, cindex = 0,cindex_2 = 0; i < sizeof(Captcha); i++) {
		if(i == 0) {
			Captcha[i] = CreatePlayerTextDraw(playerid, 278.666778, 107.037078, "Enter_Passwort");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.192333, 0.894814);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);

		}
		if(i == 1) {
			Captcha[i] = CreatePlayerTextDraw(playerid,256.666473, 105.377822, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.533334);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.000000, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1819704319);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 2) {
			Captcha[i] = CreatePlayerTextDraw(playerid,256.666656, 124.459274, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 18.299999);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.000000, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], -197);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 3) {//низ слева бокс
			Captcha[i] = CreatePlayerTextDraw(playerid,256.333190, 294.948120, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.396001);
			PlayerTextDrawTextSize(playerid,Captcha[i], 308.199218, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1836481535);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 4) {//низ справа бокс
			Captcha[i] = CreatePlayerTextDraw(playerid,313.203063, 294.948089, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.401001);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.415466, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1836481535);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 5) {
			Captcha[i] = CreatePlayerTextDraw(playerid,277.033721, 293.689025, "x");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.267333, 1.471408);
			PlayerTextDrawTextSize(playerid,Captcha[i], 10.307392, 12.833320);
			PlayerTextDrawAlignment(playerid,Captcha[i], 2);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
		}
		if(i == 6) {
			Captcha[i] = CreatePlayerTextDraw(playerid,332.700317, 293.274169, "ok");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.267333, 1.471408);
			PlayerTextDrawTextSize(playerid,Captcha[i], 38.418739, 13.416661);
			PlayerTextDrawAlignment(playerid,Captcha[i], 2);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
		}
		if(i == 7) {
			Captcha[i] = CreatePlayerTextDraw(playerid,276.000091, 119.325920, "");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid,Captcha[i], 71.000000, 30.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], 121);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 0);
			PlayerTextDrawFont(playerid,Captcha[i], 5);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetPreviewModel(playerid,Captcha[i], 1581);
			PlayerTextDrawSetPreviewRot(playerid,Captcha[i], 2.000000, 0.000000, 0.000000, 1.000000);
		}
		if(i == 8) {
			Captcha[i] = CreatePlayerTextDraw(playerid,293.833374, 126.433341, "----");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.399999, 1.558518);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i > 8) {
			if(i >= 9) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 139.237091,"");//123
			if(i == 12) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 174.696350,"");//4
			if(i > 12) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 174.696350,"");//56
			if(i == 15) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 208.911254,"");//7
			if(i > 15) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 208.911254,"");
			if(i == 18) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 286.799621, 242.511260,"");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid,Captcha[i], 47.000000, 52.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], 131165);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 0);
			PlayerTextDrawFont(playerid,Captcha[i], 5);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetPreviewModel(playerid,Captcha[i], 11727);
			PlayerTextDrawSetPreviewRot(playerid,Captcha[i], 0.000000, 0.000000, 0.000000, 1.000000);
			//PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
			cindex++;
		}
		if(i > 18) {
			new string[512];
			format(string, sizeof(string), "%c", TextArray[i - 19]);
			if(i >= 19) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 154.640762,string);//123
			if(i == 22) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 189.570419,string);//4
			if(i > 22) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 189.570419,string);//56
			if(i == 25) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 224.414886,string);//7
			if(i > 25) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 224.414886,string);
			if(i == 28) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 310.333691, 257.600158,string);
			PlayerTextDrawTextSize(playerid, Captcha[i], 16.0, 16.0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);

			PlayerTextDrawFont(playerid, Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid, Captcha[i], 1);
			PlayerTextDrawLetterSize(playerid, Captcha[i], 0.341666, 2.151703);
			PlayerTextDrawAlignment(playerid, Captcha[i], 2);
			PlayerTextDrawSetOutline(playerid, Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid, Captcha[i], 0);
			cindex_2++;
		}
		PlayerTextDrawShow(playerid, Captcha[i]);
		SelectTextDraw(playerid, COLOR_BLUE);
	}
}
stock tuning_cars(playerid,car) {
	new improve[256];
	if(gPlayerCars[playerid][carVehcom_1][car]) strcat(improve,"Спойлер\n");
	if(gPlayerCars[playerid][carVehcom_2][car]) strcat(improve,"Капот\n");
	if(gPlayerCars[playerid][carVehcom_3][car]) strcat(improve,"Воздухозаборник\n");
	if(gPlayerCars[playerid][carVehcom_4][car]) strcat(improve,"Боковая юбка\n");
	if(gPlayerCars[playerid][carVehcom_5][car]) strcat(improve,"Фары\n");
	if(gPlayerCars[playerid][carVehcom_6][car]) strcat(improve,"Нитро\n");
	if(gPlayerCars[playerid][carVehcom_7][car]) strcat(improve,"Выхлопная труба\n");
	if(gPlayerCars[playerid][carVehcom_8][car]) strcat(improve,"Диски\n");
	if(gPlayerCars[playerid][carVehcom_9][car]) strcat(improve,"Стерео\n");
	if(gPlayerCars[playerid][carVehcom_10][car]) strcat(improve,"Гидравлика\n");
	if(gPlayerCars[playerid][carVehcom_11][car]) strcat(improve,"Передний бампер\n");
	if(gPlayerCars[playerid][carVehcom_12][car]) strcat(improve,"Задний бампер\n");
	for(new i; i < 12; i++) {
		if(gPlayerCars[playerid][carVehcom_%d][car] == 0) strcat(improve,"Отсутствуют");
	}
	return 1;
}
stock GetCarClassName(classid,classname[],size=sizeof(classname)) {
	switch(classid) {
		case 0: format(classname,size,"Эконом");
		case 1: format(classname,size,"Стандарт");
		case 2: format(classname,size,"Спорт");
		case 3: format(classname,size,"Мото");
	}
}
stock change_carcancel(playerid,id_prodaet) {
	DeletePVar(playerid,"carProdaet");
	DeletePVar(playerid,"carCena");
	DeletePVar(playerid,"sellcar_type");
	DeletePVar(playerid,"carPokupaet");
	DeletePVar(id_prodaet,"carPokupaet");
	DeletePVar(id_prodaet,"numbercar1");
	DeletePVar(id_prodaet,"numbercar2");
	return 1;
}
/*CMD:sss(playerid) {
	new s = Casino_Flag[playerid][select_casino_table];
	for(new c = 0; c < 5; c++) {
		if(InfoDice[s][dice_gamer][c] == playerid) {
			if(InfoDice[s][dice_score][c] != 0) return ErrorMessage(playerid,"Вы уже кинули кости");
			//Casino_Flag[playerid][casino_bet_cash] = 0;
			InfoDice[s][dice_score][c] = 12;
			UpdateScores(s);
			UpdateTextCasino(s);
			break;
		}
	}
	return 1;
}*/
CB: UpdateGameDice(s) {
	new wait_game_dice[10], count_players = 0, count_score = 0;
	format(wait_game_dice,10,"~g~%d",InfoDice[s][dice_game_start_time] - gettime());
	for(new c = 0; c < 5; c++) {
		if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
		if(Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] == 0) continue;

		if(InfoDice[s][dice_score][c]) count_score++;
		count_players++;
		GameTextForPlayer(InfoDice[s][dice_gamer][c],wait_game_dice,1200,6);
		if(InfoDice[s][dice_game_start_time] <= gettime()) {
			if(InfoDice[s][dice_score][c] == 0) {
				InfoDice[s][dice_score][c] = dice_random[random(sizeof(dice_random))];
				UpdateTextCasino(s);
				UpdateScores(s);
			}
		}
	}
	GameTextForPlayer(InfoDice[s][dice_crup],wait_game_dice,1200,6);
	if(InfoDice[s][dice_game_start_time] <= gettime() || (count_players == count_score)) {
		new str_win_dice[156];
		new itogs[3] = -1; itogs[0] = -1; itogs[1] = -1; itogs[2] = -1;

		for(new c = 0; c < 5; c++) {
			if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
			if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_score][c] > itogs[0]) itogs[0] = InfoDice[s][dice_score][c], itogs[1] = InfoDice[s][dice_gamer][c];
		}
		for(new c = 0; c < 5; c++) {
			if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
			if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_gamer][c] != itogs[1] && InfoDice[s][dice_score][c] == itogs[0]) itogs[2] = InfoDice[s][dice_gamer][c];
		}
		if(itogs[2] > -1) {
			for(new c = 0; c < 5; c++) {
				if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
				if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_score][c] == itogs[0]) {
					InfoDice[s][dice_game_start_time] = gettime() + 30;
					SendClientMessage(InfoDice[s][dice_gamer][c],CGOLD,"Вы попали в следующий раунд. У вас есть 30 секунд, чтобы бросить кубики");
				}
				else Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] = 0;
				InfoDice[s][dice_score][c] = 0;
				SetTimerEx("score_update",2000,false,"i",s);
			}
		}
		else if(itogs[1] > -1) {
			new money = floatround(InfoDice[s][dice_bank]*0.0001);
			format(str_win_dice,sizeof(str_win_dice),"Игра завершена. Победитель: "W"%s "GREEN"(выпало: "W"%d)",player_name[itogs[1]],itogs[0]);
			GiveMoney(itogs[1],floatround(InfoDice[s][dice_bank] - money),"победа в казино");

			for(new c = 0; c < 5; c++) {
				if(InfoDice[s][dice_gamer][c]==INVALID_PLAYER_ID) continue;
				Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] = 0;
				InfoDice[s][dice_score][c] = 0;
				SendClientMessage(InfoDice[s][dice_gamer][c], COLOR_GREEN, str_win_dice);
			}
			if(IsPlayerConnected(InfoDice[s][dice_crup])) {
				SendClientMessage(InfoDice[s][dice_crup], COLOR_GREEN, str_win_dice);
				PI[InfoDice[s][dice_crup]][pSalary] += money;
			}
			InfoDice[s][dice_bank] = 0;
			InfoDice[s][dice_stavka] = 0;
			SetTimerEx("score_update",2000,false,"d",s);
			InfoDice[s][dice_game_start] = false;
			KillTimer(InfoDice[s][dice_game_start_timer]);
			InfoDice[s][dice_game_start_timer] = -1;
			/*if(!IsPlayerInDynamicArea(ids, InfoDice[s][dice_area]) && !InfoDice[s][dice_game_start]) {
				ShowCasino_TD(ids, Casino_Flag[ids][select_casino_table]);
			}*/
		}
	}
	return 1;
}
CB: score_update(s) {
	UpdateTextCasino(s);
	UpdateScores(s);
	return true;
}
stock Load_PTD_Dice(playerid) {
	if(PTD_DiceStat[playerid]==PlayerText:-1) {
		PTD_DiceStat[playerid] = CreatePlayerTextDraw(playerid, 466.178741, 278.833099, "_~w~Bet:_~g~0$_~n~_~w~Bank:_~g~0$_~n~_~w~Your_cash:_~g~0$");
		PlayerTextDrawLetterSize(playerid, PTD_DiceStat[playerid], 0.270556, 1.500832);
		PlayerTextDrawTextSize(playerid, PTD_DiceStat[playerid], 603.924194, 35.000011);
		PlayerTextDrawAlignment(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawColor(playerid, PTD_DiceStat[playerid], -1);
		PlayerTextDrawUseBox(playerid, PTD_DiceStat[playerid], true);
		PlayerTextDrawBoxColor(playerid, PTD_DiceStat[playerid], 1149760170);
		PlayerTextDrawSetShadow(playerid, PTD_DiceStat[playerid], 0);
		PlayerTextDrawSetOutline(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, PTD_DiceStat[playerid], 187);
		PlayerTextDrawFont(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawSetProportional(playerid, PTD_DiceStat[playerid], 1);
	}
	PlayerTextDrawShow(playerid,PTD_DiceStat[playerid]);
	return 1;
}
stock UpdateTableText(c) {
	new update_table_text[156];
	new mark[5][10];
	for(new i=0;i<5;i++) {
		if(InfoDice[c][dice_gamer][i]==INVALID_PLAYER_ID)strcat(mark[i],"_");
		else if(Casino_Flag[InfoDice[c][dice_gamer][i]][casino_bet_cash]!=0)strcat(mark[i],"+_");
	}
	format(update_table_text, 156, "%s%s~n~%s%s~n~%s%s~n~%s%s~n~%s%s",
	mark[0],(InfoDice[c][dice_gamer][0]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][0]]),
	mark[1],(InfoDice[c][dice_gamer][1]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][1]]),
	mark[2],(InfoDice[c][dice_gamer][2]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][2]]),
	mark[3],(InfoDice[c][dice_gamer][3]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][3]]),
	mark[4],(InfoDice[c][dice_gamer][4]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][4]]));
	TextDrawSetString(Casino_TD[Casino_TD_TableNicks][c],update_table_text);
	return 1;
}
stock UpdateScores(s) {
	new mark[5][2];
	for(new i=0;i<5;i++) {
		if(InfoDice[s][dice_score][i]<=3) strcat(mark[i],"r");
		else if(InfoDice[s][dice_score][i]>=4 && InfoDice[s][dice_score][i]<=6)strcat(mark[i],"w");
		else if(InfoDice[s][dice_score][i]>=7 && InfoDice[s][dice_score][i]<=9)strcat(mark[i],"y");
		else if(InfoDice[s][dice_score][i]>=10 && InfoDice[s][dice_score][i]<=12)strcat(mark[i],"g");
	}
	new string_set_score[64];
	format(string_set_score,64,"~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d",mark[0],InfoDice[s][dice_score][0],mark[1],InfoDice[s][dice_score][1],mark[2],InfoDice[s][dice_score][2],mark[3],InfoDice[s][dice_score][3],mark[4],InfoDice[s][dice_score][4]);
	TextDrawSetString(Casino_TD[Casino_TD_TableScore][s],string_set_score);
	return 1;
}
stock UpdateTextCasino(c) {
	new update_string_casino_text[500];
	format(update_string_casino_text,500,CASINO_TEXT_STRING,
	c+1,(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_crup]]) : ("-"),(InfoDice[c][dice_gamer][0] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][0]]) : ("-"),(InfoDice[c][dice_gamer][1] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][1]]) : ("-"),
	(InfoDice[c][dice_gamer][2] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][2]]) : ("-"),(InfoDice[c][dice_gamer][3] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][3]]) : ("-"),
	(InfoDice[c][dice_gamer][4] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][4]]) : ("-"),
	InfoDice[c][dice_stavka],InfoDice[c][dice_bank],(InfoDice[c][dice_game_start]) ? ("{37A65F}Игра начата") : ("{EB3F36}Игра не начата"));
	UpdateDynamic3DTextLabelText(InfoDice[c][dice_text], -1, update_string_casino_text);
	for(new p = 0; p < 5; p++) {
		if(InfoDice[c][dice_gamer][p]==INVALID_PLAYER_ID) continue;
		if(PTD_DiceStat[InfoDice[c][dice_gamer][p]] != PlayerText:-1 && Casino_Flag[InfoDice[c][dice_gamer][p]][show_casino_td] == 1) {
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d$_~n~_~w~Bank:_~g~%d$_~n~_~w~Your_cash:_~g~%d$",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],PI[InfoDice[c][dice_gamer][p]][pCash]);
			PlayerTextDrawSetString(InfoDice[c][dice_gamer][p],PTD_DiceStat[InfoDice[c][dice_gamer][p]],ptd_dice_string);
		}
	}
	if(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) {
		if(PTD_DiceStat[InfoDice[c][dice_crup]]!=PlayerText:-1 && Casino_Flag[InfoDice[c][dice_crup]][show_casino_td]==1) {
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d$_~n~_~w~Bank:_~g~%d$_~n~_~w~Your_cash:_~g~%d$",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],PI[InfoDice[c][dice_crup]][pCash]);
			PlayerTextDrawSetString(InfoDice[c][dice_crup],PTD_DiceStat[InfoDice[c][dice_crup]],ptd_dice_string);
		}
	}
	UpdateTableText(c);
	UpdateScores(c);
	return 1;
}
stock ShowCasino_TD(playerid, select_table, bool:canceled = true) {
	if(Casino_Flag[playerid][show_casino_td] == 1) {
		if(Casino_Flag[playerid][casino_bet_cash] != 0 && !InfoDice[select_table][dice_game_start]) {
			GiveMoney(playerid,Casino_Flag[playerid][casino_bet_cash],"забрал ставку в казино");
			InfoDice[select_table][dice_bank] -= InfoDice[select_table][dice_stavka];
			Casino_Flag[playerid][casino_bet_cash] = 0;
		}
		if(InfoDice[select_table][dice_crup] == playerid) {
			InfoDice[select_table][dice_crup] = INVALID_PLAYER_ID;
		}
		else {
			for(new i = 0;i<5;i++) {
				if(InfoDice[select_table][dice_gamer][i] == playerid) {
					InfoDice[select_table][dice_score][i] = 0;
					InfoDice[select_table][dice_gamer][i] = INVALID_PLAYER_ID;
					break;
				}
			}
		}
		UpdateScores(select_table);
		UpdateTextCasino(select_table);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
		for(new i = 0; i < 5; i++) {
			if(i<2)TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
			TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
		}
		PlayerTextDrawHide(playerid,PTD_DiceStat[playerid]);
		if(canceled) CancelSelectTextDraw(playerid);
		Casino_Flag[playerid][show_casino_td] = 0;
		Casino_Flag[playerid][select_casino_table] = -1;
		return 1;
	}
	Load_PTD_Dice(playerid);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
	for(new i = 0; i < 5; i++) {
		if(i<2)TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
		TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
	}
	SelectTextDraw(playerid,0x9BF2EAAA);
	Casino_Flag[playerid][show_casino_td] = 1;
	return 1;
}
CB: HorseAnimTimer() {
	new bool:playing = false;
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPVarInt(i,"Watching") == 1) {
	        playing = true;
	        break;
		}
	}
	new string[80], HorseWon;
	for(new po = 0;po < 4;po++) {
	    HorsePosX[po] = HorsePosX[po] + (random(600) / 100);
		if(HorsePosX[po] >= 560) {
			HorseStop = 1;
			HorseWon = po+1;
		}
	}
 	if(playing == true) {
		if(HorseAnimCount == 9) HorseAnimCount = 1;
		for(new po = 0;po < 4;po++) {
		    HorsePosX[po] = HorsePosX[po] + (random(600) / 100);
			TextDrawDestroy(Horse[po]);
		   	TextDrawDestroy(HorseNum[po]);
		   	format(string, sizeof(string), "LD_OTB:hrs%i", HorseAnimCount);
	 		Horse[po] = TextDrawCreate(HorsePosX[po], 200+50*po, string);
	    	HorseInfo(Horse[po]);
	    	format(string,30,"LD_OTB2:Ric%d",po+1);
	    	HorseNum[po] = TextDrawCreate(HorsePosX[po] + 15, 204+50*po, string);
	    	HorseNumInfo(HorseNum[po]);
		}
		HorseAnimCount++;
	 	foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(GetPVarInt(i,"Watching") == 1)  {
		        //SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225);
		        for(new po = 0;po < 4;po++) {
				   	TextDrawShowForPlayer(i,Horse[po]);
				   	TextDrawShowForPlayer(i,HorseNum[po]);
				}
		    }
		}
	}
	if(HorseStop == 0) SetTimer("HorseAnimTimer", 100, 0);
	else {
	    if(HorseWon != 0)
		{
			HorseStop = 1;
			RaceStarted = 0;
			
	  		UpdateDynamic3DTextLabelText(Horses3D, 0xFFFFFFFF,"Информационный экран по лошадиным скачкам\nСтатус: {FF0000}Подготовка{ffffff}\nНажмите: `H`");
			format(string,30,"Лошадь №%d победила!",HorseWon);
			
			foreach(new i:Player)
			{
				if(!TI[i][tLogin]) continue;
		 	    TextDrawHideForPlayer(i,BG[1]);
			    TextDrawHideForPlayer(i,BG[0]);
			    TextDrawHideForPlayer(i,Start2);
			    TextDrawHideForPlayer(i,Finish2);
			    TextDrawHideForPlayer(i,Horse[0]);
			    TextDrawHideForPlayer(i,HorseNum[0]);
				TextDrawHideForPlayer(i,Horse[1]);
			    TextDrawHideForPlayer(i,HorseNum[1]);
				TextDrawHideForPlayer(i,Horse[2]);
			    TextDrawHideForPlayer(i,HorseNum[2]);
				TextDrawHideForPlayer(i,Horse[3]);
			    TextDrawHideForPlayer(i,HorseNum[3]);
				TextDrawHideForPlayer(i,Start);
			    TextDrawHideForPlayer(i,Finish);
				if(IsPlayerInRangeOfPoint(i,10,828.2830,6.6600,1004.1870)) SendClientMessage(i,COLOR_LIGHTGREEN, string);
				if(GetPVarInt(i,"MoneyBet") > 0) {
					if(GetPVarInt(i,"BetOnHorse") == HorseWon) {
						SendClientMessage(i, COLOR_GREEN, "Ваша ставка выиграла! Ваш приз увеличен в 2 раза!");
						PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						//GivePlayerCash(i, GetPVarInt(i,"MoneyBet") * 2,"Ставка");
					}
					else SendClientMessage(i, COLOR_LIGHTRED, "Ваша ставка проиграла!");
				}
				if(GetPVarInt(i,"Watching") == 1)TogglePlayerControllable(i, 1),SetCameraBehindPlayer(i);
		  		SetPVarInt(i,"Watching",0);
				SetPVarInt(i,"BetOnHorse",0);
				SetPVarInt(i,"MoneyBet",0);
			}
			for(new po = 0;po < 4;po++) {
		    	Horse[po] = TextDrawCreate(0, 200+50*po, "LD_OTB:hrs8");
				HorseInfo(Horse[po]);
				HorsePosX[po] = 0;
				format(string,30,"LD_OTB2:Ric%d",po+1);
				HorseNum[po] = TextDrawCreate(15, 204+50*po,string);
		    	HorseNumInfo(HorseNum[po]);
			}
		}
	}
}
CB: HorseStartTimer() {
	new string[15];
	format(string, sizeof(string), "~r~%d",HorseCD);
	if(HorseCD > 0) HorseCD--,SetTimer("HorseStartTimer", 2000, 0);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(GetPVarInt(i,"Watching") == 1) {
		    if(HorseCD > 0) GameTextForPlayer(i,string, 1000, 3);
		    else GameTextForPlayer(i,"~y~GO GO GO!", 1000, 3),SetPlayerCameraPos(i, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(i, 318.7538, -1998.8700, 17.8250, 1);
		}
	}
	if(HorseCD <= 0) SetTimer("HorseAnimTimer", 100, 0);
	return 1;
}
stock HorseInfo(Text:horseid) {
    TextDrawFont(horseid, 4);
    TextDrawColor(horseid,0xFFFFFFFF);
    TextDrawTextSize(horseid,64,64);
}
stock HorseNumInfo(Text:horsenumid) {
    TextDrawFont(horsenumid, 4);
    TextDrawColor(horsenumid,0xFFFFFFFF);
    TextDrawTextSize(horsenumid,32,32);
}
CB: ClearAnim(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
CB: DiceOff(id) {
	ClearAnims(id);
	if(TI[id][tKubik] == 1) {
		TI[id][tKubik] = 0;
		if(IsPlayerAttachedObjectSlotUsed(id,1)) RemovePlayerAttachedObject(id,1);// забрали кубик
	}
}
stock IsTextInvalid(const text[]) {
	if(strfind(text, "none", true) != -1) return 1; 
	if(strfind(text, "None", true) != -1) return 1; 
	if(strfind(text, "NONE", true) != -1) return 1; 
	if(strfind(text, "'", true) != -1) return 1; 
	if(strfind(text, "/", true) != -1) return 1; 
	if(strfind(text, "%", true) != -1) return 1; 
	if(strfind(text, ".", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "@", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	return 0;
}
stock IsARPName(const Name[]) {
	new simb_, RP_Name[2][24];
	new playerid;
	for(new i = 0;i < strlen(Name);i ++) {
		if(Name[i] == '_') simb_ ++;
	}
	if(simb_ != 1) return false;
	sscanf(Name,"p<_>s[24]s[24]",RP_Name[0],RP_Name[1]);
	if(!IsAGoodName(RP_Name[0]) || !IsAGoodName(RP_Name[1])) return false;
	if(IsPlayerNPC(playerid)) return true;
	return true;
}
stock IsAGoodName(const Name[]) {
	new playerid;
	new NameChars;
	if(IsPlayerNPC(playerid))return 1;
	if(strlen(Name) < 2) return false;
	if(Name[0] < 'A' || Name[0] > 'Z') return false;
	for(new i = 1;i < strlen(Name);i ++) {
		if(Name[i] < 'a' || Name[i] > 'z') {
			if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
			else return false;
		}
		if(NameChars > 1) return false;
	}
	return true;
}
CB: CallChangeName(playerid) {
	new rows;
	rows = cache_num_rows();
	if(rows) {
		ErrorMessage(playerid, "Данный никнейм занят");
		DeletePVar(playerid,"WantNickChange");
		return 1;
	}

	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	new string[156];
	format(string,sizeof(string),"[A] %s[%d] подал завку на смену ника. Желаемый ник: %s",player_name[playerid],playerid,playerName);
	AdmMSG(COLOR_YELLOW,string,3);
	AdmMSG(COLOR_YELLOW,"Чтобы сменить ему ник Используйте /setnick",3);
	SendOk(playerid, "Заявка на смену ника отправлена администрации");
	return 1;
}
CB: GrandChangeName(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) {
		SetPVarInt(playerid,"grand_fix",true);
		ChangeName(playerid);
	}
	else ErrorMessage(playerid, "Данный никнейм занят");
	return 1;
}
CB: GrandChangeName2(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) {
		SetPVarInt(playerid,"grand_fix2",true);
		ChangeName(playerid);
	}
	else ErrorMessage(playerid, "Данный никнейм занят");
	return 1;
}

stock ChangeName(playerid) {
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(GetPlayerID(playerName) != INVALID_PLAYER_ID) {
		return ErrorMessage(playerid,"У вас присутствуют запрещенные символы в никнейме");
	}

	new query[350];
	format(query,sizeof(query), "UPDATE `accounts` SET `Name` = '%s' WHERE `Name` = '%s' LIMIT 1",playerName,GetName(playerid));
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `accounts` SET `pDrug` = '%s' WHERE BINARY `pDrug` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `cars` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	if(score_number[playerid] > 0) {
		format(query,sizeof(query), "UPDATE `bank` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
		mysql_tquery(connects, query, "", "");
	}
	format(query,sizeof(query), "UPDATE `unitpay_payments` SET `account` = '%s' WHERE BINARY `account` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	if(PI[playerid][pFamily] > 0) {
		if(!strcmp(gFamily[PI[playerid][pFamily]-1][famOwner],player_name[playerid])){
			strmid(gFamily[PI[playerid][pFamily]-1][famOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			query = "";
			format(query,sizeof(query), "UPDATE `family` SET `owner` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,gFamily[PI[playerid][pFamily]-1][famID]);
			mysql_tquery(connects, query, "", "");
		}
		if(!strcmp(gFamily[PI[playerid][pFamily]-1][famCOwner],player_name[playerid])){
			strmid(gFamily[PI[playerid][pFamily]-1][famCOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			query = "";
			format(query,sizeof(query), "UPDATE `family` SET `cowner` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,gFamily[PI[playerid][pFamily]-1][famID]);
			mysql_tquery(connects, query, "", "");
		}
	}
	if(PI[playerid][pBusiness] > 0) {
		format(query,128,"UPDATE `business` SET `owner` = '%s' WHERE `id` = '%d'",playerName,PI[playerid][pBusiness]);
		mysql_tquery(connects, query,"","");
		SetString(gBusiness[PI[playerid][pBusiness]][bizzOwner],playerName);
		UpdateBusinessText(PI[playerid][pBusiness]);
	}
	if(PI[playerid][pAirport] > 0) {
		format(query,128,"UPDATE `airports` SET `owner` = '%s' WHERE `id` = '%d'",playerName,PI[playerid][pAirport]);
		mysql_tquery(connects, query,"","");
		SetString(gAirs[PI[playerid][pAirport]-1][airOwner],playerName);
		UpdateAirportsText(PI[playerid][pAirport]-1);
	}
	if(PI[playerid][pHotel] > 0) {
		format(query,128,"UPDATE `hotels` SET `owner` = '%s' WHERE `id` = '%d'",playerName,PI[playerid][pHotel]);
		mysql_tquery(connects, query,"","");
		SetString(gHotels[PI[playerid][pHotel]-1][hotelOwner],playerName);
		UpdateHotelText(PI[playerid][pHotel]-1);
	}
	if(PI[playerid][pHouse] > 0) {
		strmid(gHouses[PI[playerid][pHouse]][houseOwner], playerName, 0, strlen(playerName), MAX_PLAYER_NAME);
		SaveHouse(PI[playerid][pHouse]);
	}
	if(PI[playerid][pRoom] > 0) {
		SetString(gRooms[PI[playerid][pRoom]-1][roomsOwner], playerName);
		query = "";
		format(query,sizeof(query),"UPDATE `rooms` SET `owner` = '%s' WHERE `id` = '%d'",gRooms[PI[playerid][pRoom]-1][roomsOwner],PI[playerid][pRoom]);
		mysql_tquery(connects, query);
	}
	format(query, sizeof(query), "INSERT INTO `nickname_history` (`nh_owner`,`nh_oldname`,`nh_newname`,`nh_date`) VALUES ('%d','%s','%s',NOW())", 
	PI[playerid][pID], player_name[playerid],playerName);
	mysql_tquery(connects, query);

	format(query,sizeof(query), "UPDATE `adminlog` SET `NamePlayer` = '%s' WHERE BINARY `NamePlayer` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `givecash` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `fraclog` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `fraclog` SET `NameP` = '%s' WHERE BINARY `NameP` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	new string[128];
	format(string,sizeof(string), "%s изменил(а) имя на %s",player_name[playerid],playerName);
	SendClientMessageToAll(COLOR_YELLOW, string);
	SetPVarInt(playerid,"changename_fix",true);
	SetPlayerName(playerid, playerName);
	strmid(player_name[playerid], playerName, 0, strlen(playerName), 31);
	SendClientMessage(playerid,COLOR_YELLOW,"Пропишите новый ник в окне SA-MP");
	if(GetPVarInt(playerid,"grand_fix")) {
		PI[playerid][pRouble] -= 20;
		UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
		DeletePVar(playerid,"grand_fix");
	}
	if(GetPVarInt(playerid,"grand_fix2")) {
		PI[playerid][pVipName] = unix + 86400*vip_status[PI[playerid][pVips]][vip_changename];
		UpdatePlayerData(playerid,"pVipName",PI[playerid][pVipName]);
		DeletePVar(playerid,"grand_fix2");
	}
	DeletePVar(playerid,"WantNickChange");
	return 1;
}
stock creare_funccar(bizz,carid,slot)
{
	if(CarsBizz[carid][carbModel] != 0)
	{
		FuncBizz[bizz][funcbCars][slot] = CreateBizVehicle(bizz,CarsBizz[carid][carbModel],CarsBizz[carid][carbPosX],CarsBizz[carid][carbPosY],CarsBizz[carid][carbPosZ],
			CarsBizz[carid][carbPosR],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car], RES_CAR_TIME);

		update_bfunc(3,bizz,color_td[FuncBizz[bizz][funcbColor]][col_car],slot);
	}
	return 1;
}
stock update_bfunc(list,bizz,color = -1,slot = -1) {
	switch(list) {
		case 0: {
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) continue;
				if(FuncBizz[bizz][funcbCarID][i] == -1) {
					SetDynamicObjectMaterial(tuningtaxi_shash[FuncBizz[bizz][funcbSlot]][i], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[color][col_shash]);
				}
			}
		}
		case 1: {
			new string[54];
			format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[bizz][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
			SetDynamicObjectMaterialText(biz_text[FuncBizz[bizz][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
			UpdateBusinessText(bizz-1);
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) continue;
				VehicleInfo[FuncBizz[bizz][funcbCars]][vColor] = color_td[FuncBizz[bizz][funcbColor]][col_car];
				if(FuncBizz[bizz][funcbCarID][i] == -1) {
					ChangeVehicleColor(FuncBizz[bizz][funcbCars][i],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car]);
				}
			}
		}
		case 2: {
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) continue;
				new string[13];
				format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
				SetDynamicObjectMaterialText(tuningtaxi_text[FuncBizz[bizz][funcbSlot]][i], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
				SetDynamicObjectMaterialText(tuningtaxi_text_1[FuncBizz[bizz][funcbSlot]][i], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			}
		}
		case 3: {
			if(gBusiness[bizz][bizzType] == 11) {
				DestroyDynamicObject(tuningtaxi[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_1[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_shash[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_text[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_text_1[FuncBizz[bizz][funcbSlot]][slot]);
				add_taxitext(bizz,slot);
			}
			ChangeVehicleColor(FuncBizz[bizz][funcbCars][slot],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car]);
			FuncBizz[bizz][funcbCarID][slot] = -1;
		}
	}
}
stock cancel_selectcolor(playerid) {
	for(new h = 0;h < 22;h++) {
		TextDrawHideForPlayer(playerid,func_bcolor[h]);
		CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"select_colortd");
		DeletePVar(playerid,"color_shashka");
		DeletePVar(playerid,"color_allcolor");
		DeletePVar(playerid,"SelectButton");
	}
}
CB: sim_bizz(playerid, number){
	new rows;
	rows = cache_num_rows();
	if(rows) return ErrorMessage(playerid,"Данный номер уже используется");
	else {
		switch(number) {
			case 1111,2222,3333,4444,5555,6666,7777,8888: {
				if(gBusiness[PI[playerid][pBusiness]][bizzBank] < 300000) return ErrorMessage(playerid,"На счету Вашего бизнеса недостаточно средств");
				gBusiness[PI[playerid][pBusiness]][bizzBank] -= 300000;
			}
			default: {
				if(gBusiness[PI[playerid][pBusiness]][bizzBank] < 50000) return ErrorMessage(playerid,"На счету Вашего бизнеса недостаточно средств");
				gBusiness[PI[playerid][pBusiness]][bizzBank] -= 50000;
			}
		}
		UpdateBusinessDataInt(PI[playerid][pBusiness],"bank",gBusiness[PI[playerid][pBusiness]][bizzBank]);
		FuncBizz[PI[playerid][pBusiness]][funcbNum] = number;
		UpdateFuncBizzData(PI[playerid][pBusiness],"number",FuncBizz[PI[playerid][pBusiness]][funcbNum]);
		new string[128];
		format(string,sizeof(string),"Вы приобрели номер телефона "P"%d"G" для вашего таксопарка",number);
		SendOk(playerid,string);
		new str[76];
		format(str,sizeof(str),"[TAXI] Новый номер вашего таксопарка: %d",number);
		BizzMSG(PI[playerid][pBusiness],COLOR_YELLOW,str);
	}
	return true;
}
CB: members_funcbizz(playerid,bizz) {
	new names[24],last[30],cash,status,string[3600],str[128],rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список сотрудников пуст");
	strcat(string,"№. Имя\tДоступ\tДоход в кассу\tПоследний вход\n");
	for(new i; i < rows; i ++) {
		cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		cache_get_value_name(i, "pOnline",last,30);
		cache_get_value_name_int(i, "bizz_cash",cash);
		cache_get_value_name_int(i, "bizz_status",status);
		new id = GetPlayerID(names);
		if(IsPlayerConnected(id)) {
			format(str, sizeof(str), ""P"%d. "W"%s\t%s\t%d\tОнлайн\n", i+1, names,taxi_class[status-1],PI[id][bizz_cash]),strcat(string,str);
		}
		else format(str, sizeof(str), ""P"%d. "W"%s\t%s\t%d\t%s\n", i+1, names,taxi_class[status-1],cash,last),strcat(string,str);
	}
	cache_delete(result);
	D(playerid,D_BIZZ_TAXI_MEM,DSTH,"Сотрудники таксопарка",string,"Далее","Закрыть");
	return 1;
}
stock sell_bizztaxi(bizz) {
	new query[128],querydel[174],names[25],rows;
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	rows = cache_num_rows();
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
			new id = GetPlayerID(names);
			if(IsPlayerConnected(id)) {
				if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PI[id][bizz_work]) RemovePlayerFromVehicleAC(id);
				PI[id][bizz_work] = 0;
				PI[id][bizz_status] = 0;
			}
			format(querydel,sizeof(querydel),"UPDATE `accounts` SET `bizz_work` = '0',`bizz_status` = '0' WHERE `Name` = '%s'",names);
			mysql_tquery(connects, querydel, "", "");
		}
	}
	cache_delete(result);
	SetString(FuncBizz[bizz][funcbName],"---");
	SetString(FuncBizz[bizz][funcbNameCar],"---");
	new querys[156];
	format(querys,sizeof(querys),"UPDATE `business_func` SET `name` = '---',`name_car` = '---',`members` = '0' WHERE `bizzID` = '%i'",bizz);
	mysql_tquery(connects, querys, "", "");
	new string[54];
	format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[FuncBizz[bizz][funcbID]][funcbColor]][col_rgb],FuncBizz[FuncBizz[bizz][funcbID]][funcbName]);
	SetDynamicObjectMaterialText(biz_text[FuncBizz[FuncBizz[bizz][funcbID]][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
	UpdateBusinessText(bizz);
}
stock add_taxitext(bizz,slot)
{
	new id = FuncBizz[bizz][funcbSlot];
	switch(FuncBizz[bizz][funcbCar][slot]) {
		case 426: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
		/*	tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.450, 0.930, 0.000, 0.000, 0.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.434, 0.711, 360.000, -54.999, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.681, 0.557, -360.000, -54.999, -90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.070, -0.450, 0.950, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.070, -0.450, 0.950, 360.000, 360.000, 180.000);
		}
		case 438: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.030, 0.880, 0.000, 0.000, 90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.109, 0.850, 0.000, 0.000, 90.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.050, 0.850, 0.000, 0.000, -90.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], -0.005, -1.531, 0.430, 0.000, -31.600, 270.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 1.087, 0.570, 0.000, -28.700, 90.000);
		}
		case 483: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 1.551, 1.130, 0.000, 0.000, 0.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.090, 1.551, 1.110, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.090, 1.551, 1.110, 0.000, 0.000, 180.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], -0.920, -1.331, 0.000, 0.000, 0.000, 180.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.920, -1.661, 0.000, 0.000, 0.000, 0.000);
		}
		case 540: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.630, 0.810, 0.000, 0.000, 0.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.506, 0.548, 360.000, -56.500, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.847, 0.438, -360.000, -56.500, -90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.090, -0.650, 0.800, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.080, -0.640, 0.800, 0.000, 0.000, 180.000);
		}
		case 560: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.230, 0.900, 0.000, 0.000, 0.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.080, -0.250, 0.900, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.080, -0.250, 0.900, 0.000, 0.000, 180.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.685, 0.648, 0.000, -49.599, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.274, 0.618, 0.000, -51.499, -90.000);
		}
		case 550: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.430, 0.800, 0.000, 0.000, 0.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.080, -0.440, 0.800, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.080, -0.440, 0.800, 0.000, 0.000, 180.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.595, 0.441, 0.000, -48.399, 270.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.557, 0.569, 0.000, -53.999, 90.000);*/
		}
		case 580: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
		/*	tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.350, 1.130, 0.000, 0.000, 90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.450, 1.130, 0.000, 0.000, 90.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.250, 1.130, 0.000, 0.000, -90.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.710, 0.870, 0.000, -30.100, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);*/
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.685, 0.764, 0.000, -30.100, -90.000);
		}
	}
}
stock showstattaxi(playerid,bizz) {
	new id = 0;
	for(new i; i < 20; i ++) {
		if(FuncBizz[bizz][funcbCar][i] == 0) continue;
		id++;
	}
	static const f_str[] = "\n\n"ORANGE"Название:\t\t"W"%s\n\
						"ORANGE"Владелец:\t\t"W"%s\n\
						"ORANGE"Гос. цена\t\t"W"%d\n\n\n\
						"ORANGE"Номер телефона:\t"W"%d\n\
						"ORANGE"Процент взымаемый с таксистов: "W"%d%\n\
						"ORANGE"Тарифы:\n\
						\t"W"Эконом:\t\t"GREEN"$%d\n\
						\t"W"Комфорт:\t\t"GREEN"$%d\n\
						\t"W"Микроавтобус:\t"GREEN"$%d\n\
						\t"W"Бизнес:\t\t"GREEN"$%d\n\n\
						"ORANGE"Сотрудников:\t\t\t"W"%d\n\
						"ORANGE"Автомобилей:\t\t"W"%d";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5) + (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz][bizzOwner],gBusiness[bizz][bizzSellPrice],
	FuncBizz[bizz][funcbNum],FuncBizz[bizz][funcbPercent],FuncBizz[bizz][funcbTarif][0],FuncBizz[bizz][funcbTarif][1],
	FuncBizz[bizz][funcbTarif][2],FuncBizz[bizz][funcbTarif][3],info_funcmembers(bizz),id);
	D(playerid,DIALOG_NONE,DSM, ""P"Таксопарк",string,"Закрыть","");
}
stock showstattk(playerid,bizz) {
	new id = 0;
	for(new i; i < 16; i ++) {
		if(FuncBizz[bizz][funcbCar][i] == 0) continue;
		id++;
	}
	static const f_str[] = "\n\n"ORANGE"Название:\t\t"W"%s\n\
						"ORANGE"Владелец:\t\t"W"%s\n\
						"ORANGE"Гос. цена\t\t"W"%d\n\n\n\
						"ORANGE"Процент взымаемый с дальнобойщиков:\t"W"%d%\n\
						"ORANGE"Сотрудников:\t\t\t\t"W"%d\n\
						"ORANGE"Грузовых автомобилей:\t\t"W"%d";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5) + (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz][bizzOwner],gBusiness[bizz][bizzSellPrice],
	FuncBizz[bizz][funcbPercent],info_funcmembers(bizz),id);
	D(playerid,DIALOG_NONE,DSM, ""P"Транспортная компания",string,"Закрыть","");
}
bizz_update(bizz) {
	new query[170], year, month, day;
	getdate(year, month, day);
	format(query, sizeof(query), "INSERT INTO `business_stats`(`bizz`, `day`, `month`, `year`, `money`) VALUES ('%d','%d','%d','%d','%d')", bizz, day,month,year, gBusiness[bizz][bizzBankDay]);
	mysql_tquery(connects, query, "", "");
	gBusiness[bizz][bizzBankDay] = 0;
	gBusiness[bizz][bizzVisitors] = 0;
	SaveBusiness(bizz);
}
CB: bizz_stats(playerid,bizz) {
    new rows;
 	rows = cache_num_rows();
	new string[800];
	new day,month,year, str[124], money,allmoney;
	static const months[12][12] = {"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"};
	static const f_str[] = ""ORANGE"Статистика доходов за последние 10 дней:\n"W"Налогообложение: "P"%d%%\n\n";
	format(str,sizeof(str),f_str,Nalog[3]),strcat(string, str);
    if(!rows) {
		new years, monthss, days;
		getdate(years, monthss, days);
		format(str,sizeof(str),""W"%d %s %d\t\t"GREEN"$%d\n",days,months[monthss-1],years,gBusiness[bizz][bizzBankDay]), strcat(string,str);
		allmoney += gBusiness[bizz][bizzBankDay];
		format(str,sizeof(str),"\n"W"Всего\t\t\t\t"GREEN"$%d",allmoney), strcat(string,str);
		D(playerid,DIALOG_NONE,DSM, ""P"Доходы", string, "Закрыть","");
		return 1;
	}
	if(rows > 9) {
	    new query[264];
		mysql_format(connects, query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%d' LIMIT %d,%d", bizz, rows-9, rows);
		mysql_tquery(connects, query, "bizz_stats", "dd", playerid,bizz);
		return 1;
	}
	new years, monthss, days;
	getdate(years, monthss, days);
	for(new i; i < rows; i++) {
		cache_get_value_name_int(i, "day", day);
		cache_get_value_name_int(i, "month", month);
		cache_get_value_name_int(i, "year", year);
		cache_get_value_name_int(i, "money", money);
		allmoney += money;
		format(str,sizeof(str),""W"%d %s %d\t\t"GREEN"$%d\n",day,months[month-1],year,money), strcat(string,str);
	}
	format(str,sizeof(str),""W"%d %s %d\t\t"GREEN"$%d\n",days,months[monthss-1],years,gBusiness[bizz][bizzBankDay]), strcat(string,str);
	allmoney += gBusiness[bizz][bizzBankDay];
	format(str,sizeof(str),"\n"W"Всего\t\t\t"GREEN"$%d",allmoney), strcat(string,str);
	D(playerid,DIALOG_NONE,DSM, ""P"Доходы", string, "Закрыть","");
	return 1;
}
stock dialog_taxi(playerid,bizz,listitem) {
	switch(listitem) {
		case 0: {
			new day;
			day = (gBusiness[bizz][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Название:\t\t"P"%s\n\
									"W"Владелец:\t\t"P"%s\n\
									"W"Количество дней:\t"P"%d\n\
									"W"Гос. цена\t\t"P"%d\n\
									"W"Касса:\t\t\t"P"$%d\n\
									"W"Оплата:\t\t"P"$%d/день\n\
									"W"Налогообложение:\t"P"%d%";
			new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 3) + (-2 + 3) + (-2 + 8) + (-2 + 8) + (-2 + 8) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz][bizzOwner],day,gBusiness[bizz][bizzSellPrice],gBusiness[bizz][bizzBank],floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent/2),Nalog[3]);
			D(playerid,DIALOG_NONE,DSM, ""P"Таксопарк",string,"Закрыть","");
		}
		case 1: {
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness]][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
		case 2: {
			new string[1512],str[128];
			strcat(string,"№\tАвтомобиль\tИспользуется сотрудником\n");
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) format(str, sizeof(str), "%d\t-\t-\n", i+1),strcat(string,str);
				else if(FuncBizz[bizz][funcbCarID][i] == -1) format(str, sizeof(str), "%d\t%s\t-\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName]),strcat(string,str);
				else format(str, sizeof(str), "%d\t%s\t%s\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName],player_name[FuncBizz[bizz][funcbCarID][i]]),strcat(string,str);
			}
			SetPVarInt(playerid,"func_car_taxi",listitem-1);
			D(playerid, D_BIZZ_TAXI_CAR, DSTH, "Таксопарк", string, "Выбрать", "Отмена");
		}
		case 3: {
			load_color(playerid);
			SetPVarInt(playerid,"color_allcolor",1);
		}
		case 4: {
			load_color(playerid);
			SetPVarInt(playerid,"color_shashka",1);
		}
		case 5: {
			D(playerid,D_BIZZ_TAXI_NAME,DSI, ""P"Название такси","\n\n"W"Введите новое название таксопарка:\n\n\
														Минимальное количество символов: "P"3\n\
														"W"Максимальное количество символов: "P"20","Изменить","Отмена");
		}
		case 6: {
			D(playerid,D_BIZZ_TAXI_NAMECAR,DSI, ""P"Название такси","\n\n"W"Введите новое название на автомобилях:\n\n\
														Минимальное количество символов: "P"3\n\
														"W"Максимальное количество символов: "P"12","Изменить","Отмена");
		}
		case 7: {
			static const f_str[] = "№. Класс\tТариф\n"YELLOW"1. "W"Эконом\t"GREEN"$%d\n\
									"YELLOW"2. "W"Комфорт\t"GREEN"$%d\n\
									"YELLOW"3. "W"Микроавтобус\t"GREEN"$%d\n\
									"YELLOW"4. "W"Бизнес\t"GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbTarif][0],FuncBizz[bizz][funcbTarif][1],FuncBizz[bizz][funcbTarif][2],FuncBizz[bizz][funcbTarif][3]);
			D(playerid, D_BIZZ_TAXI_TARIF, DSTH, "Тарифы", string, "Изменить", "Отмена");
		}
		case 8: {
			D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""P"Процент от прибыли","\n\n"W"Введите процент взымаемый от прибыли таксистов Вашего таксопарка\n\n\
														Доступный диапазон: от "P"1% "W"до "P"50%","Изменить","Отмена");
		}
		case 9: {
			static const f_str[] = "\n\n"W"Текущий номер Вашего таксопарка: "YELLOW"%d\n\n\
									"W"Введите желаемый новый номер телефона для Вашего таксопарка\n\
									Доступный диапазон: от "P"1000"W" до "P"9900\n\
									"W"Стоимость номера: "GREEN"$50000\n\
									"W"Стоимость номера с 4 одинаоквыми числами: "GREEN"$300000\n\n";
			new string[sizeof(f_str) +1 + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[PI[playerid][pBusiness]][funcbNum]);
			D(playerid,D_BIZZ_TAXI_PHONE,DSI, ""P"Покупка номера телефона",string,"Купить","Отмена");
		}
		case 10: members_funcbizz(playerid,PI[playerid][bizz_work]);
		case 11: {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PI[playerid][bizz_work]);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PI[playerid][bizz_work]);
		}
		case 12: {
			new string[156];
			format(string,sizeof(string),""W"Вы хотите продать таксопарк государству за "GREEN"$%d?\n\n"G"Для продажи таксопарка игроку введите: /sellbusiness [ID игрока] [Сумма]",floatround(gBusiness[bizz][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнесс",string,"Продать","Отмена");
		}
	}
}
stock dialog_tk(playerid,bizz,listitem) {
	switch(listitem) {
		case 0: {
			new day;
			day = (gBusiness[bizz][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Название:\t\t"P"%s\n\
									"W"Владелец:\t\t"P"%s\n\
									"W"Количество дней:\t"P"%d\n\
									"W"Гос. цена\t\t"P"%d\n\
									"W"Касса:\t\t\t"P"$%d\n\
									"W"Оплата:\t\t"P"$%d/день\n\
									"W"Налогообложение:\t"P"%d%";
			new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 3) + (-2 + 3) + (-2 + 8) + (-2 + 8) + (-2 + 8) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz][bizzOwner],day,gBusiness[bizz][bizzSellPrice],gBusiness[bizz][bizzBank],floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent/2),Nalog[3]);
			D(playerid,DIALOG_NONE,DSM, ""P"Транспортная компания",string,"Закрыть","");
		}
		case 1: {
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PI[playerid][pBusiness]][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
		case 2: {
			new string[1512],str[128];
			strcat(string,"№\tАвтомобиль\tИспользуется сотрудником\n");
			for(new i; i < 16; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) format(str, sizeof(str), "%d\t-\t-\n", i+1),strcat(string,str);
				else if(FuncBizz[bizz][funcbCarID][i] == -1) format(str, sizeof(str), "%d\t%s\t-\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName]),strcat(string,str);
				else format(str, sizeof(str), "%d\t%s\t%s\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName],player_name[FuncBizz[bizz][funcbCarID][i]]),strcat(string,str);
			}
			SetPVarInt(playerid,"func_car_taxi",listitem-1);
			D(playerid, D_BIZZ_TAXI_CAR, DSTH, "Транспортная компания", string, "Выбрать", "Отмена");
		}
		case 3: {
			load_color(playerid);
			SetPVarInt(playerid,"color_allcolor",1);
		}
		case 4: {
			D(playerid,D_BIZZ_TAXI_NAME,DSI, ""P"Название транспортной компании","\n\n"W"Введите новое название транспортной компании:\n\n\
														Минимальное количество символов: "P"3\n\
														"W"Максимальное количество символов: "P"20","Изменить","Отмена");
		}
		case 5: {
			D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""P"Процент от прибыли","\n\n"W"Введите процент взымаемый от прибыли работников Вашей транспортной компании\n\n\
														Доступный диапазон: от "P"1% "W"до "P"50%","Изменить","Отмена");
		}
		case 6: members_funcbizz_tk(playerid,PI[playerid][bizz_work]);
		case 7: {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PI[playerid][bizz_work]);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PI[playerid][bizz_work]);
		}
		case 8: {
			new string[156];
			format(string,sizeof(string),""W"Вы хотите продать транспортную компанию государству за "GREEN"$%d?\n\n"G"Для продажи транспортной компании игроку введите: /sellbusiness [ID игрока] [Сумма]",floatround(gBusiness[bizz][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнесс",string,"Продать","Отмена");
		}
	}
}
CB: members_funcbizz_tk(playerid,bizz) {
	new names[24],last[30],cash,lcash,status,string[3600],str[128],rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	rows = cache_num_rows();
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список сотрудников пуст");
	strcat(string,"№. Имя, Должность\tДоход за сутки\tОбщий доход\tПоследний вход\n");
	for(new i; i < rows; i ++) {
		cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		cache_get_value_name(i, "pOnline",last,30);
		cache_get_value_name_int(i, "bizz_cash",cash);
		cache_get_value_name_int(i, "bizz_lcash",lcash);
		cache_get_value_name_int(i, "bizz_status",status);
		new id = GetPlayerID(names);
		if(IsPlayerConnected(id)) {
			format(str, sizeof(str), ""P"%d. "W"%s [%s]\t%d\t%d\tОнлайн\n", i+1, names,tk_class[status-1],PI[id][bizz_lcash],PI[id][bizz_cash]),strcat(string,str);
		}
		else format(str, sizeof(str), ""P"%d. "W"%s [%s]\t%d\t%d\t%s\n", i+1, names,tk_class[status-1],lcash,cash,last),strcat(string,str);
	}
	cache_delete(result);
	D(playerid,D_BIZZ_TK_MEM,DSTH,"Сотрудники транспортной компании",string,"Далее","Закрыть");
	return 1;
}
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z, gpsint = 0, gpsworld = 0)
{
    if(x == 0.0) return SendClientMessage(playerid, COLOR_GREY, "Критическая ошибка! Обратитесь к администрации!");

	new Float:VPos[3];
	GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
	
	gpss[playerid] = 1;
	
	DisablePlayerRaceCheckpoint(playerid);
	
	SetPlayerRaceCheckpoint(playerid, 1, x, y, z, 0, 0, 0, 5.0);
	
	GameTextForPlayer(playerid, "GPS: ON", 0, 1);

	SetPlayerGPSInfo(playerid, G_POS_X, x);
	SetPlayerGPSInfo(playerid, G_POS_Y, y);
	SetPlayerGPSInfo(playerid, G_POS_Z, z);

	SetPlayerGPSInfo(playerid, G_INTERIOR, gpsint);
	SetPlayerGPSInfo(playerid, G_WORLD, gpsworld);
	
	if(dostup[playerid] != 0)
    {
  		return D(playerid, D_GPS_GOTO, DIALOG_STYLE_MSGBOX, !"{277ECD}Телепорт", "{FFFFFF}Вы хотите переместиться на поставленную точку?", "Да", "Нет");
	}
	return 1;
}
stock DisablePlayerGPS(playerid)
{
	if(gpss[playerid] == 1)
	{
		if(GetPVarInt(playerid,"route")) return SendClientMessage(playerid, COLOR_GREY, !"[Ошибка] {FFFFFF}Вы не можете отключать gps во время выполнения работы!");

		DisablePlayerRaceCheckpoint(playerid);
  		DisablePlayerCheckpoint(playerid);
  		
  		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);

    	gpss[playerid]=0;
	}
	return 1;
}

stock bizz_pay(bizz,price) {
	new percent_wh = floatround(price/100) * Nalog[3];
	new percent_mafia = 0;
	if(gBusiness[bizz][bizzMafia]) {
		percent_mafia = floatround((price-percent_wh)/100) * Nalog[4];
		AddMafiaBank(bizz,floatround(percent_mafia));
	}
	new income = percent_wh + percent_mafia;
	gBusiness[bizz][bizzBank] += (price-income);
	UpdateBusinessDataInt(bizz,"bank",gBusiness[bizz][bizzBank]);
	gBusiness[bizz][bizzBankDay] += (price-income);
	UpdateBusinessDataInt(bizz,"bankday",gBusiness[bizz][bizzBankDay]);

	UpdateBusinessDataInt(bizz,"product",gBusiness[bizz][bizzProduct]);
	FI[fWHITEHOUSE][fBank] += percent_wh;
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
}
stock AddMafiaBank(bizid, sum) {
	switch(gBusiness[bizid][bizzMafia]) {
		case fLCN: gBankMafia[0][bizid] += sum,FI[fLCN][fBank] += sum, UpdateFraction(fLCN,"Bank",FI[fLCN][fBank]);
		case fYAKUZA: gBankMafia[1][bizid] += sum,FI[fYAKUZA][fBank] += sum, UpdateFraction(fYAKUZA,"Bank",FI[fYAKUZA][fBank]);
		case fRM: gBankMafia[2][bizid] += sum,FI[fRM][fBank] += sum, UpdateFraction(fRM,"Bank",FI[fRM][fBank]);
	}
	return 1;
}
stock GetEngineStat(vehicleid) {
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
GetVehicleState(vehicleid) return VehicleState[vehicleid];
CB: FuelTmier() {
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(IsAPlane(i) && IsABoat(i) && IsABike(i) && IsAVelik(i)) continue;
		if(!GetEngineStat(i)) continue;
		if(VehicleInfo[i][vFuel] >= 0.015) VehicleInfo[i][vFuel] -= 0.015;
		else VehicleInfo[i][vFuel] = 0;
	}
}
stock skin_player(playerid) {
	A_SetPlayerSkin(playerid,PI[playerid][pSkin]);
	PI[playerid][pFracSkin] = 0;
	UpdatePlayerData(playerid,"pModel",0);
}
CB: OnPlayerCaptchaLoaded(playerid) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid,"История еще пуста");
	new string[128], string_strcat[800], status[32], ip[32], _date[32];
	for(new z; z < rows; z++) {
		cache_get_value_name(z, "clIP", ip);
		cache_get_value_name(z, "clDate", _date);
		cache_get_value_name(z, "clStatus", status);
		format(string, sizeof(string), "{FFFFFF}%d. Дата: %s | IP: %s - %s\n", z+1, _date, ip, (strval(status) ? (""GREEN"Удачно"W"") : (""NO"Неудачно"W"")));
		strcat(string_strcat, string);
	}
	D(playerid, DIALOG_NONE, DSM, ""P"Информация", string_strcat, "Закрыть", "");
	return true;
}
stock dialog_business(playerid,bizz,listitem) {
	switch(listitem) {
		case 0: {
			static const f_str[] = ""W"Состояние счета: "GREEN"$%d\n"P"1."W" Снять деньги\n"P"2."W" Положить деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""P"Управление кассой",string,"Далее","Назад");
		}
		case 1: D(playerid,dBusinessProd,DSI, ""P"Заказ продуктов","\n\n"W"Введите кол-во продуктов, которое хотите заказать:\n\n","Далее","Отмена");
		case 2: ShowBusinessInformation(playerid,bizz,D_BIZZ_STATS);
		case 3: {
			if(gBusiness[bizz][bizzStatus]) {
				gBusiness[bizz][bizzStatus] = 0;
				SendOk(playerid,"Бизнес закрыт");
			}
			else {
				gBusiness[bizz][bizzStatus] = 1;
				SendOk(playerid,"Бизнес открыт");
			}
			UpdateBusinessDataInt(bizz,"status",gBusiness[bizz][bizzStatus]);
			UpdateBusinessText(bizz);
		}
		case 4: {
			static const f_str[] = ""P"1."W" Расширение склада "GREEN"$100.000 "ORANGE"[%s]\n\
										"P"2."W" Отображение в GPS "GREEN"$200.000 "ORANGE"[%s]\n\
										"P"3."W" Снижение субдсидии "GREEN"$200.000 "ORANGE"[%s]";
			new string[sizeof(f_str) +1 + (-2 + 12) + (-2 + 12) + (-2 + 12)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzUpgrade][0]>=10000?("Имеется"):("Отсутствует"),gBusiness[bizz][bizzUpgrade][1]==1?("Имеется"):("Отсутствует"),gBusiness[bizz][bizzUpgrade][2]==1?("Имеется"):("Отсутствует"));
			D(playerid,D_BIZZ_UPGRADE,DIALOG_STYLE_LIST,"Улучшения",string,"Купить","Назад");
		}
		case 5: {
			if(gBusiness[bizz][bizzType] == 7) D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за 1 литр\nПримечание: от "GREEN"$12"W" до "GREEN"$24\n\n","Изменить","Отмена");
			else D(playerid,D_BIZZ_PRICE,DSI, ""P"Бизнес","\n\n"W"Введите цену за 1 ед. товара\nПримечание: от "GREEN"$1"W" до "GREEN"$5\n\n","Изменить","Отмена");
		}
		case 6: D(playerid,D_BIZZ_ENTER,DSI, ""P"Бизнес","\n\n"W"Введите цену за вход\nПримечание: от "GREEN"$0"W" до "GREEN"$5000\n\n","Изменить","Отмена");
		case 7: {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", bizz);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,bizz);
		}
		case 8: {
			static const f_str[] = "\n\n"W"Вы действительно хотите продать бизнес государству за "GREEN"$%d?\n\n"G"Для продажи бизнеса игроку введите: /sellbusiness [ID игрока] [Сумма]\n\n";
			new string[sizeof(f_str) +1 + (-2 + 8)];
			format(string,sizeof(string),f_str,floatround(gBusiness[bizz][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""P"Бизнесс",string,"Продать","Отмена");
		}
	}
}
CreateATM(playerid, atmID) {
	new vw, Float:ATMPosa[4], string[128], int;

	GetPlayerPos(playerid, ATMPosa[0], ATMPosa[1], ATMPosa[2]);
	GetPlayerFacingAngle(playerid, ATMPosa[3]);

	vw  = GetPlayerVirtualWorld(playerid);
	int = GetPlayerInterior(playerid);

	ATMData[atmID][ATM_Pos][0]   = ATMPosa[0] + (1.4 * floatsin(-ATMPosa[3], degrees));
	ATMData[atmID][ATM_Pos][1]   = ATMPosa[1] + (1.4 * floatsin(-ATMPosa[3], degrees));
	ATMData[atmID][ATM_Pos][2]   = ATMPosa[2];
	ATMData[atmID][ATM_Pos][3]   = 0;
	ATMData[atmID][ATM_Pos][4]   = 0;
	ATMData[atmID][ATM_Pos][5]   = ATMPosa[3];
	ATMData[atmID][atm_VW]  	 = vw;
	ATMData[atmID][atm_INT]  	 = int;
	ATMData[atmID][atm_Taken]    = 1;
	
	//ATMData[atmID][atm_Object] = CreateDynamicObject(2754, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);

	new query[128];
	format(query, sizeof(query), "INSERT INTO `atms` (atmID) VALUES ('%i')", atmID);
	mysql_tquery(connects, query);

	format(string, sizeof(string), "%s успешно создал ATM(ID: %d)", player_name[playerid], atmID);
	SendOk(playerid, string);

	UpdateATMLabel(atmID);
	SaveATM(atmID);
	return 1;
}

DeleteATM(playerid, atmID) {
	new string[128],query[128];
	format(query, sizeof(query), "DELETE FROM `atms` WHERE `atmID` = '%d'", atmID);
	mysql_tquery(connects, query);

	ATMData[atmID][ATM_Pos][0]   = -1141241;
	ATMData[atmID][ATM_Pos][1]   = -11241241;
	ATMData[atmID][ATM_Pos][2]   = -111412414;
	ATMData[atmID][ATM_Pos][3]   = 0;
	ATMData[atmID][ATM_Pos][4]   = 0;
	ATMData[atmID][ATM_Pos][5]   = 0;
	ATMData[atmID][atm_VW]  	 = 13;
	ATMData[atmID][atm_INT]  	 = 0;
	ATMData[atmID][atm_Taken]  	 = 0;

	if(ATMData[atmID][atm_Object]) DestroyDynamicObject(ATMData[atmID][atm_Object]);
	
	if(ATMData[atmID][atm_Label]) DestroyDynamic3DTextLabel(ATMData[atmID][atm_Label]);

	format(string, sizeof(string), "%s успешно удалил ATM(ID: %d)", player_name[playerid], atmID);
	SendOk(playerid, string);
	return 1;
}

stock GetNearestATM(playerid)
{
	for (new i = 0; i < MAX_ATM + 1; i ++)
	{
		if(ATMData[i][atm_Taken] && IsPlayerInRangeOfPoint(playerid, 2.0, ATMData[i][ATM_Pos][0], ATMData[i][ATM_Pos][1], ATMData[i][ATM_Pos][2])) return i;
	}
	return -1;
}

stock SaveATM(atmID) {
	new query[257];
	format(query, sizeof(query), "UPDATE `atms` SET `ATM_X` = '%f', `ATM_Y` = '%f', `ATM_Z` = '%f', `ATM_VW` = '%i'", ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], ATMData[atmID][atm_VW]);
	format(query, sizeof(query), "%s, `ATM_ROTX` = '%f', `ATM_ROTY` = '%f', `ATM_ROTZ` = '%f', `ATM_INT` = '%d' WHERE `atmID` = '%d'", query, ATMData[atmID][ATM_Pos][3], ATMData[atmID][ATM_Pos][4], ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_INT], atmID);
	return mysql_tquery(connects, query);
}

stock UpdateATMLabel(atmID)
{
	DestroyDynamic3DTextLabel(ATMData[atmID][atm_Label]);
	
	new atmstr[1024];
	format(atmstr, sizeof(atmstr), ""P"Банкомат №%d\n"W"Нажмите: "GREEN"ALT", atmID);
	
	ATMData[atmID][atm_Label] = CreateDynamic3DTextLabel(atmstr,-1, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2]+0.75, 10.0,
			INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, ATMData[atmID][atm_VW], -1);
}

stock ShowATMMenu(playerid)
{
	new atm = GetNearestATM(playerid), string[1024];
	
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);

	if(ATMData[atm][atm_Bank])
	{
		format(string,sizeof(string),"\
			"P"Банкомат №%d "W"| {%s}%s "W"| Комиссия: "ORANGE"%d%\
			",atm,color_td[FuncBizz[ATMData[atm][atm_Bank]][funcbColor]][col_rgb],FuncBizz[ATMData[atm][atm_Bank]][funcbName],
			FuncBizz[ATMData[atm][atm_Bank]][funcbPercent3]);
	}
	else format(string,sizeof(string),""P"Банкомат №%d "W"| Комиссия: "ORANGE"1%", atm);

	D(playerid, D_ATM, DSL, string,
		""GREEN"1."W" Снять наличные\n\
		 "GREEN"2."W" Положить наличные\n\
		 "GREEN"3."W" Пополнить счет телефона", "Далее", "Закрыть");
		 
	return 1;
}
stock GetWeekName(UTC, name[], const size = sizeof(name)) {
	return strunpack(name, gDaysOfWeek[((unix + UTC * 3600) / 86400) % 7], size);
}
stock getDay() {
	new week_name[10];
	GetWeekName(0, week_name);
	return week_name;
}
SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:angle) {
	setX[playerid] = x;
	setY[playerid] = y;
	setZ[playerid] = z;
	SetSpawnInfo(playerid, GetPlayerTeam(playerid), skin, x, y, z, angle, -1, -1, -1, -1, -1, -1);
}
stock SpecPlayer(playerid,id) {
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return ErrorMessage(playerid, "Игрок не найден");

	if(SERIU[playerid][sID] != id && PI[playerid][pAdmin]<5) {
		new str[128];
		format(str,sizeof(str),"[A] %s[%d] начал следить за %s[%d]",player_name[playerid],playerid,player_name[id],id);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	SpecPl(playerid,true);
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
	TI[id][tSpectr] = playerid;

 	SERIU[playerid][sID] = id;
 	SetPlayerInterior(playerid,GetPlayerInterior(id));
 	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
 	if(IsPlayerInAnyVehicle(id)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
 	else PlayerSpectatePlayer(playerid, id);
	ShowMenuForPlayer(specmenu,playerid);
	recon_update(playerid,id);
	return 1;
}
stock recon_update(playerid,id) {
	new Float:hppp, Float:aermor, Float:health,nedee,oner[30],speedcar, mes2[350],maxspeed = 0;
	GetPlayerArmour(id,aermor);
	GetPlayerHealth(id,hppp);
	if(IsPlayerInAnyVehicle(id)) GetVehicleHealth(GetPlayerVehicleID(id),health);
	if(GetPlayerState(id) == 2) {
		new carid = GetPlayerVehicleID(id);
		if(GetEngineStat(carid)) oner = "on";
		else oner = "off";
		nedee = floatround(VehicleInfo[carid][vFuel], floatround_floor);
		speedcar = GetPlayerVehicleSpeed(id);
		maxspeed = MaxSpeedCar[GetVehicleModel(GetPlayerVehicleID(id))-400];
	}
	format(mes2,sizeof(mes2),"~w~%s~n~ID: %d~n~~n~~r~Ping: ~w~%d~n~~n~~y~LVL: ~w~%d~n~~y~EXP: ~w~%d~n~~y~Health: ~w~%.2f~n~~y~Armour: ~w~%.2f~n~~n~~g~Weapon: ~w~%d~n~~g~Ammo: ~w~%d~n~~n~~g~Speed: ~w~%d~n~~g~Car HP: ~w~%.0f~n~~g~Car Speed: ~w~%d/%d~n~~g~Car ENGINE: ~w~%s~n~~g~Car Fuel: ~w~%d~n~",player_name[id],id,GetPlayerPing(id),PI[id][pLevel],PI[id][pExp],hppp,aermor,GetPlayerWeapon(id),GetPlayerAmmo(id), GetPlayerVehicleSpeed(id),health,speedcar,maxspeed,oner,nedee);
	PlayerTextDrawSetString(playerid,RECON[playerid],mes2);
}
CB: CheckDelAcc(playerid, name[]) {
    new rows;
    rows = cache_num_rows();
    if(!rows) return ErrorMessage(playerid,"Аккаунт не найден");
	new acc_id, acc_lvl;
	cache_get_value_name_int(0, "pID", acc_id),
	cache_get_value_name_int(0, "pLevel", acc_lvl);
	if(GetPVarInt(playerid, "delstatus") == acc_id) {
		new query[128], info[85];
		mysql_format(connects, query, sizeof(query), "DELETE FROM `accounts` WHERE BINARY `Name` = '%s'", name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `"TABLE_ADMIN"` WHERE name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `"TABLE_CARS"` WHERE BINARY owner = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `bank` WHERE BINARY owner = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `questsprogress` WHERE BINARY name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `ban` WHERE BINARY Name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `promocode_used` WHERE idacca = '%s'",acc_id);
		mysql_tquery(connects, query, "", "");

		format(info, sizeof(info), "[A] Аккаунт %s [ID: %d] [LVL: %d] успешно удален", name, acc_id, acc_lvl);
		AdmMSG(CADMIN_INFO,info,4);
		DeletePVar(playerid, "delstatus");

		WriteLog(LOG_DELACC,player_name[playerid],name,"Удаление аккаунта");
	}
	else {
		SetPVarInt(playerid, "delstatus", acc_id);
		new string[128];
		format(string, sizeof(string), "Ник: %s, номер: %d, лвл: %d. Удалить аккаунт?",name,acc_id,acc_lvl);
		SendClientMessage(playerid, 0xFF6600AA, string);
		SendClientMessage(playerid, COLOR_YELLOW, "Для ОТМЕНЫ удаления введите /delacc без ника");
		SendClientMessage(playerid, COLOR_YELLOW, "Для ПОДТВЕРЖДЕНИЯ повторите /delacc [ник]");
	}
	return true;
}
stock StealMats(playerid)
{
	new string[128], stmats = random(15)+1;
	new f = stmats * vip_status[PI[playerid][pVips]][vip_armmats];
	if(vip_status[PI[playerid][pVips]][vip_mats] < f + PI[playerid][pMats]) return ErrorMessage(playerid, "В кармане недостаточно места для хранения боеприпасов");

	if(PI[playerid][pMats] + f > vip_status[PI[playerid][pVips]][vip_mats]) f = vip_status[PI[playerid][pVips]][vip_mats] - PI[playerid][pMats];

	switch(GetPlayerVirtualWorld(playerid)) {
		case 30: {
			if(FI[fARMYLV][fMats] < f) return ErrorMessage(playerid, "На складе не достаточно боеприпасов");
			FI[fARMYLV][fMats] -= f;
		}
		case 31: {
			if(FI[fARMYSF][fMats] < f) return ErrorMessage(playerid, "На складе не достаточно боеприпасов");
			FI[fARMYSF][fMats] -= f;
		}
		case 35: {
			if(zavodsklad < f) return ErrorMessage(playerid, "На складе не достаточно боеприпасов");
			zavodsklad -= f;
		}
	}

	format(string, 20, "~y~~g~MATS: +%d", f);
	GameTextForPlayer(playerid, string, 2500, 6);

	PI[playerid][pMats] += f;
	if(QuestProgress[playerid][5] < 500 && AcceptQuest[playerid][5] != 0 && AcceptQuest[playerid][5] != 2) {
		QuestProgress[playerid][5] += f;
		if(QuestProgress[playerid][5] >= 500) QuestProgress[playerid][5] = 500;
	}
	if(QuestProgress[playerid][5] == 500 && AcceptQuest[playerid][5] != 0 && AcceptQuest[playerid][5] != 2) {
		D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно украли 500ед боеприпасов. Данное задание можно завершить и забрать за него награду","Закрыть","");
		NextStapQI(playerid,5);
	}
	return 1;
}
stock UpdateDonate(playerid) {
	new query[200];
	format(query,sizeof(query),"SELECT `donatemoney` FROM `accounts` WHERE `Name` = '%s'", GetName(playerid));
	mysql_pquery(connects, query, "UpdatePlayerDonate","d",playerid);
	return 1;
}

CB: UpdatePlayerDonate(playerid) {
	cache_get_value_int(0,"donatemoney",PI[playerid][pRouble]);
	UpdatePlayerData(playerid,"donatemoney",PI[playerid][pRouble]);
	return 1;
}
stock GetArendCarID(vehicleid, &arend_id = INVALID_PLAYER_ID) {
    // Возвращает ID ячейки в массиве ArendInfo
    // В переменную "arend_id" записывает ID игрока, арендующего ТС

    arend_id = INVALID_PLAYER_ID;
	for(new i = 0; i < sizeof(ArendInfo); i ++) {
	    if(vehicleid == ArendInfo[i][aID]) {
      		if(IsPlayerConnected(ArendInfo[i][aPlayerID])) {
            	arend_id = ArendInfo[i][aPlayerID];
			}
			return i;
		}
 	}
	return -1;
}

stock GetVehicleArendID(vehicleid) {
	new playerid = INVALID_PLAYER_ID, get_rent = GetArendCarID(vehicleid, playerid);
    if(get_rent != (-1)) {
	    if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid)) {
	        ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
	        return INVALID_PLAYER_ID;
	    }
	    return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}
arendaor_closed(h) {
	new query[128];
	for(new i = 0; i < 3; i++) {
		if(strcmp(gHouseArendator[h][i],"None")) {
			new bool:check_online = false;
			foreach(new x:Player) {
				if(!TI[x][tLogin]) continue;
				if(!strcmp(gHouseArendator[h][i],player_name[x])) {
					SendClientMessage(x,COLOR_REDD,"Вы были выселены с дома");
					UpdatePlayerData(x,"tempkey",0);
					PI[x][pTempKey] = 0;
					check_online = true;
					break;
				}
			}
			if(!check_online) {
				format(query,sizeof(query),"UPDATE `accounts` SET `tempkey` = '0' WHERE `Name` = '%s' LIMIT 1",gHouseArendator[h][i]);
				mysql_pquery(connects, query, "", "");
			}
			strmid(gHouseArendator[h][i],"None",0,strlen("None"),31);
		}
		SaveHouse(h);
	}
}
stock ShowFPass(playerid,actplayerid) {
	new jobname[32],classname[15],string[1024];
	new houseid = PI[playerid][pHouse];
	if(PI[playerid][pJob] > 0) {
		switch(PI[playerid][pJob]) {
			case 1: jobname = "Водитель автобуса";
			case 2: jobname = "Механик";
			case 3: jobname = "Развозчик продуктов/топлива";
			default: jobname = "Безработный";
		}
	}
	new housenumber[15];
	if(houseid > 0) {
		switch(gHouses[houseid][houseClass]) {
			case 0: classname = "Эконом";
			case 1: classname = "Cредний";
			case 2: classname = "Элитный";
			case 3: classname = "Особняк";
		}	
		valstr(housenumber,PI[playerid][pHouse]);
	}
	else {
		housenumber = "Отсутствует";
		classname = "Отсутствует";
	}
	strcat(string, "\n\t"P"ОБЩИЕ ДАННЫЕ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штате: "W"%d\n\t"ORANGE"%s: "W"%s\n\t"ORANGE"Законопослушность: "W"%d\n\n",
	string,player_name[playerid],PI[playerid][pLevel],(PI[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(PI[playerid][pMarried]) > 4) ? ("Есть") : ("Нет"),PI[playerid][pZakonp]);
	format(string, sizeof(string), "%s\t"P"ПРОПИСКА:\n\n\t"ORANGE"Дом: "W"%s\n\t"ORANGE"Класс дома: "W"%s\n\n", string,housenumber,classname);
	if(PI[playerid][pRank] > 0 && PI[playerid][pMember] > 0) {
		format(string, sizeof(string), "%s\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\n\t"ORANGE"Место работы: "W"%s\n\t"ORANGE"Звание: "W"%s\n\n\n",string, FI[TI[playerid][tMasked]][fName],GetRankName(TI[playerid][tMasked],TI[playerid][tFakePass]+1));
	}
	else strcat(string, "\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\t"W"Отсутствует\n\n");
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}ПАСПОРТ        ",string,"Закрыть","");
	return 1;
}
stock ShowUdJur(playerid,giveplayerid) {
	new string[236];
	format(string, sizeof(string), "\t"P"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "GREEN"%s\n\
									"W"Лет в штате: "GREEN"%d\n\
									"W"Место работы: "GREEN"%s\n\
									"W"Должность: "GREEN"%s(%d)", player_name[playerid],PI[playerid][pLevel],FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]),PI[playerid][pRank]);
	D(giveplayerid, DIALOG_NONE, DSM, ""P"Удостоверение",string,"Закрыть","");

	SetPlayerAttachedObject(playerid,2,1581,5,0.092000,0.030999,-0.006000,15.399999,82.499771,178.099761,0.195999,0.114999,0.221000);
    ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,0,0,0,0,1);
	SetTimerEx("PlayerUdostover",1000,false,"i",playerid);
}
stock ShowUd(playerid,giveplayerid) {
	new string[236];
	format(string, sizeof(string), "\t"P"==== ИНФОРМАЦИЯ ====\n\n\
									"W"Имя: "GREEN"%s\n\
									"W"Лет в штате: "GREEN"%d\n\
									"W"Подразделение: "GREEN"%s\n\
									"W"Звание: "GREEN"%s(%d)", player_name[playerid],PI[playerid][pLevel],FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]),PI[playerid][pRank]);
	D(giveplayerid, DIALOG_NONE, DSM, ""P"Удостоверение",string,"Закрыть","");

	SetPlayerAttachedObject(playerid,2,1581,5,0.092000,0.030999,-0.006000,15.399999,82.499771,178.099761,0.195999,0.114999,0.221000);
    ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,0,0,0,0,1);
	SetTimerEx("PlayerUdostover",1000,false,"i",playerid);
}
stock ShowSkill(playerid,giveplayerid) {
	new strname[56];
	format(strname, sizeof(strname), "{ffcf00}Навыки владения оружия %s", player_name[playerid]);
	new strkill[1006];
	new points[6];
    points[0] = 100 - PI[playerid][pGunSkill][0];
	points[1] = 100 - PI[playerid][pGunSkill][1];
	points[2] = 100 - PI[playerid][pGunSkill][2];
	points[3] = 100 - PI[playerid][pGunSkill][3];
	points[4] = 100 - PI[playerid][pGunSkill][4];
	points[5] = 100 - PI[playerid][pGunSkill][5];
	if(PI[playerid][pGunSkill][0] > 100) PI[playerid][pGunSkill][0] = 100;
	if(PI[playerid][pGunSkill][1] > 100) PI[playerid][pGunSkill][1] = 100;
	if(PI[playerid][pGunSkill][2] > 100) PI[playerid][pGunSkill][2] = 100;
	if(PI[playerid][pGunSkill][3] > 100) PI[playerid][pGunSkill][3] = 100;
	if(PI[playerid][pGunSkill][4] > 100) PI[playerid][pGunSkill][4] = 100;
	if(PI[playerid][pGunSkill][5] > 100) PI[playerid][pGunSkill][5] = 100;
	format(strkill,1000,""W"SD-Pistol:\t"P"%s "W"%d/100%%\nDesert Eagle:\t"P"%s "W"%d/100%%\nShotGun:\t"P"%s "W"%d/100%%\nMP5\t\t"P"%s "W"%d/100%%\nAK47:\t\t"P"%s "W"%d/100%%\nM4:\t\t"P"%s "W"%d/100%%\n\n\n\
	"W"Стиль боя\tБокс %s\n\
	"W"Стиль боя\tКунг-Фу %s\n\
	"W"Стиль боя\tКик-Бокс %s",
	ToDevelopSkills(PI[playerid][pGunSkill][0],points[0]),PI[playerid][pGunSkill][0],
	ToDevelopSkills(PI[playerid][pGunSkill][1],points[1]),PI[playerid][pGunSkill][1],
	ToDevelopSkills(PI[playerid][pGunSkill][2],points[2]),PI[playerid][pGunSkill][2],
	ToDevelopSkills(PI[playerid][pGunSkill][3],points[3]),PI[playerid][pGunSkill][3],
	ToDevelopSkills(PI[playerid][pGunSkill][4],points[4]),PI[playerid][pGunSkill][4],
	ToDevelopSkills(PI[playerid][pGunSkill][5],points[5]),PI[playerid][pGunSkill][5],
	PI[playerid][pBox] < 1 ? (""G"[Не изучен]"):(""ORANGE"[Изучен]"),
	PI[playerid][pBox] < 2 ? (""G"[Не изучен]"):(""ORANGE"[Изучен]"),
	PI[playerid][pBox] < 3 ? (""G"[Не изучен]"):(""ORANGE"[Изучен]"));
	D(giveplayerid, DIALOG_NONE, DSM, strname, strkill, "Закрыть","");
}
stock ShowWBook(playerid,giveplayerid) {
	new query[138];
	format(query, sizeof(query), "SELECT * FROM `jobinfo` WHERE `ji_uid` ='%d' AND ( `ji_fraction` < 15 OR `ji_fraction` > 22 )", PI[playerid][pID]);
	mysql_tquery(connects, query, "joblist_callback", "ii", playerid, giveplayerid);	
}
stock ShowLic(playerid,giveplayerid) {
	static const f_str[] = ""W"Водительские права: %s\n\
							"W"Лицензия пилота: %s\n\
							"W"Лицензия на водный транспорт: %s\n\
							"W"Лицензия на оружие: %s";
	new string[sizeof(f_str) +100];
	format(string,sizeof(string),f_str,(lic[playerid][0]) ? (""GREEN"Есть") : (""NO"Нет"),(lic[playerid][1]) ? (""GREEN"Есть") : (""NO"Нет"),(lic[playerid][2]) ? (""GREEN"Есть") : (""NO"Нет"),(lic[playerid][3]) ? (""GREEN"Есть") : (""NO"Нет"));
	D(giveplayerid, DIALOG_NONE, DSM, ""P"Лицензии", string, "Закрыть", "");
}
stock ShowPass(playerid,actplayerid) {
	new jobname[32],classname[15],string[1024];
	new houseid = PI[playerid][pHouse];
	if(PI[playerid][pJob] > 0) {
		switch(PI[playerid][pJob]) {
			case 1: jobname = "Водитель автобуса";
			case 2: jobname = "Механик";
			case 3: jobname = "Развозчик продуктов/топлива";
			default: jobname = "Безработный";
		}
	}
	new housenumber[15];
	if(houseid > 0) {
		switch(gHouses[houseid][houseClass]) {
			case 0: classname = "Эконом";
			case 1: classname = "Cредний";
			case 2: classname = "Элитный";
			case 3: classname = "Особняк";
		}	
		valstr(housenumber,PI[playerid][pHouse]);
	}
	else {
		housenumber = "Отсутствует";
		classname = "Отсутствует";
	}
	strcat(string, "\n\t"P"ОБЩИЕ ДАННЫЕ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штате: "W"%d\n\t"ORANGE"%s: "W"%s\n\t"ORANGE"Законопослушность: "W"%d\n\n",
	string,player_name[playerid],PI[playerid][pLevel],(PI[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(PI[playerid][pMarried]) > 4) ? ("Есть") : ("Нет"),PI[playerid][pZakonp]);
	format(string, sizeof(string), "%s\t"P"ПРОПИСКА:\n\n\t"ORANGE"Дом: "W"%s\n\t"ORANGE"Класс дома: "W"%s\n\n", string,housenumber,classname);
	if(PI[playerid][pRank] > 0 && PI[playerid][pMember] > 0) {
		format(string, sizeof(string), "%s\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\n\t"ORANGE"Место работы: "W"%s\n\t"ORANGE"Звание: "W"%s\n\n\n",string, FI[PI[playerid][pMember]][fName],GetRankName(PI[playerid][pMember],PI[playerid][pRank]));
	}
	else strcat(string, "\t"P"ТРУДОВОЕ УСТРОЙСТВО:\n\t"W"Отсутствует\n\n");
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}ПАСПОРТ        ",string,"Закрыть","");
	return 1;
}
stock ShowMedcard(playerid,actplayerid) {
	new string[512];
	strcat(string, "\n\t"P"ИНФОРМАЦИЯ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штате: "W"%d\n\t"ORANGE"Пол: "W"%s\n\n",
	string,player_name[playerid],PI[playerid][pLevel],(PI[playerid][pSex] == 1) ? ("Мужской") : ("Женский"));
	format(string, sizeof(string), "%s\t"P"БОЛЕЗНИ:\n\n\t"ORANGE"Наркозависимость: "W"%d\n\t"ORANGE"Грипп: "W"%s\n\t"ORANGE"Анорексия: "W"%s\n\n", string,PI[playerid][pAddiction],(PI[playerid][pDisease][0] == 1) ? ("Болен") : ("Здоров"),(PI[playerid][pDisease][1] == 1) ? ("Болен") : ("Здоров"));
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}МЕДИЦИНСКАЯ КАРТА        		",string,"Закрыть","");
	return 1;
}
stock ShowGetGun(playerid) {
	if(!PI[playerid][pMember]) return true;
	new string[512];
	new id_str_set_gun[64];
	new team;
	switch(GetPlayerVirtualWorld(playerid)) {
		case 40: team = fLSPD;
		case 41: team = fSFPD;
		case 42: team = fLVPD;
		case 43: team = fFBI;
		case 44: team = fMAYOR;
	}
	string = ""W"";
	for(new i = 0 ; i < 9 ; i++) {
		if(FW[i][team][fwGunID] == 0 || FW[i][team][fwGunAmmo] == 0) continue;
		if(FW[i][team][fwArmor] == 1) {
			format(id_str_set_gun, sizeof(id_str_set_gun), ""P"%d."W" Бронежилет\n",i+1);
			strcat(string,id_str_set_gun);
			continue;
		}
		format(string,sizeof(string) , "%s"P"%d."W" %s\t%d\n",string,i+1,FW[i][team][fwName],FW[i][team][fwGunAmmo]);
	}
	D(playerid,dGiveGunTD,DST,""P"Оружие",string,"Выбрать","Отмена");
	return true;
}
CB: AttachTrailerToVehicleEx(trailerid,vehicleid) AttachTrailerToVehicle(trailerid,vehicleid);
CB: UnCallisionForPlayer(playerid) DisableRemoteVehicleCollisions(playerid, false);

CB: OnServerRestarting()
{
	SendClientMessageToAll(COLOR_REDD,HostNameRestart);
	
	SaveServer();
	
	foreach(new i:Player)
	{
		if(!TI[i][tLogin]) continue;
		
		SetPlayerInterior(i, 0);
		SetPlayerVirtualWorld(i, 0);
		
		InterpolateCameraPos(i, 1178.088012, 1204.779541, 105.671997, 2501.051269, 1285.838867, 118.900398, 5000);
		InterpolateCameraLookAt(i, 1175.603149, 1201.194458, 103.228073, 2496.586669, 1285.855346, 116.649597, 5000);

		kick(i);
	}
	SendRconCommand("gmx");
	
	printf("Auto Restart - Reloading...");
	return true;
}
CB: promo_check(playerid, code[]) {
    new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Указанный промокод не найден");
	new code_money, code_skils, code_lics, used_count;
    cache_get_value_index_int(0, 1, code_money);
	cache_get_value_index_int(0, 2, code_skils);
	cache_get_value_index_int(0, 3, code_lics);
    cache_get_value_index_int(0, 5, used_count);
    SetPVarInt(playerid, "code_money_", code_money);
	SetPVarInt(playerid, "code_skills_", code_skils);
	SetPVarInt(playerid, "code_lics_", code_lics);
    SetPVarInt(playerid, "used_count_", used_count);
	new query[200];
	format(query, sizeof(query), "SELECT * FROM "T_PROMOCODE_USED" WHERE idacca = %d", PI[playerid][pID]);
	mysql_tquery(connects, query, "promo_check2", "ds", playerid, code);
    return 1;
}
CB: promo_check2(playerid, code[]) {
    new rows;
	rows = cache_num_rows();
	if(rows) {
        ErrorMessage(playerid, "Вы уже использовали промокод");
		DeletePVar(playerid, "code_money_");
		DeletePVar(playerid, "code_skills_");
		DeletePVar(playerid, "code_lics_");
		DeletePVar(playerid, "used_count_");
        return 1;
    }
	new query[300];
	format(query, sizeof(query), "INSERT INTO "T_PROMOCODE_USED" (idacca,code) VALUE (%d,'%s')", PI[playerid][pID], code);
	mysql_tquery(connects, query, "", "");
	new code_money, used_count,code_skills, code_lics;
	code_money = GetPVarInt(playerid, "code_money_");
	code_skills = GetPVarInt(playerid, "code_skills_");
	code_lics = GetPVarInt(playerid, "code_lics_");
	used_count = GetPVarInt(playerid, "used_count_");
    new string[128];
	format(string, sizeof(string), "Промокод "P"%s"W" активирован", code);
	SendClientMessage(playerid, COLOR_WHITE, string);
	if(PI[playerid][pLevel] < 4) {
		PI[playerid][pMPromo] = code_money;
		UpdatePlayerData(playerid,"pMPromo",code_money);

		if(code_skills != 6) {
			new str2[6][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4"};
			new stri[128];
			format(stri,sizeof(stri),"Вам было добавлено 100% навыка владения оружием - "W"%s",str2[code_skills]);
			SendOk(playerid,stri);
			PI[playerid][pGunSkill][code_skills] = 100;
			SaveAccount(playerid);
		}
		if(code_lics != 4) {
			new str3[4][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие"};
			new stri[128];
			format(stri,sizeof(stri),"Вам была выдана лицензия - "W"%s",str3[code_lics]);
			SendOk(playerid,stri);
			lic[playerid][code_lics] = 1;
			UpdateLicenses(playerid);
		}
		new str[128];
		format(str,sizeof(str),""ORANGE"$%d"G" будет выдано при достижении 4 игрового уровня",code_money);
		SendOk(playerid,str);
	}
	else {
		if(code_skills != 6) {
			new str2[6][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4"};
			new stri[128];
			format(stri,sizeof(stri),"Вам было добавлено 25% навыка владения оружием - "W"%s",str2[code_skills]);
			SendOk(playerid,stri);
			if(PI[playerid][pGunSkill][code_skills] + 25 < 100) PI[playerid][pGunSkill][code_skills] += 25;
			SaveAccount(playerid);
		}
		if(code_lics != 4) {
			new str3[4][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие"};
			new stri[128];
			format(stri,sizeof(stri),"Вам была выдана лицензия - "W"%s",str3[code_lics]);
			SendOk(playerid,stri);
			lic[playerid][code_lics] = 1;
			UpdateLicenses(playerid);
		}
		GiveMoney(playerid, code_money, "промокод");
	}
	used_count ++;
	query = "";
    format(query, sizeof(query), "UPDATE "T_PROMOCODE" SET used_count = %d WHERE code = '%s'", used_count, code);
    mysql_tquery(connects, query, "", "");

    DeletePVar(playerid, "code_money_");
	DeletePVar(playerid, "code_skills_");
	DeletePVar(playerid, "code_lics_");
	DeletePVar(playerid, "used_count_");
    return 1;
}

CB: promo_create(playerid, code[]) {
    new rows;
	rows = cache_num_rows();
	if(rows >= 150) return ErrorMessage(playerid, "Достигнут лимит промокодов (150 шт.)");
    new load_code[32], free_slot = -1;
    for(new i; i < rows; i++) {
        cache_get_value_index(i, 0, load_code, 32);
        if(!strcmp(load_code, code, false)) {
			free_slot = i;
        	break;
  		}
    }
    if(free_slot != -1) {
		ErrorMessage(playerid, "Указанный промокод уже есть в списке");
		DeletePVar(playerid, "promoname");
		DeletePVar(playerid, "promoskills");
		DeletePVar(playerid, "promolic");
		DeletePVar(playerid, "promomoney");
		return 0;
	}
    new promodays = GetPVarInt(playerid, "promoskills");
    new promoplayers = GetPVarInt(playerid, "promolic");
    new promomoney = GetPVarInt(playerid, "promomoney");
	new query[300];
    format(query, sizeof(query), "INSERT INTO "T_PROMOCODE" (code,money,skills,lics,data) VALUES ('%s',%d,%d,%d,%d)", code, promomoney, promodays, promoplayers, gettime()+promodays);
    mysql_tquery(connects, query, "", "");

	new str2[7][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4","Не выдавать"};
	new str3[5][20] = {"Вод.права","Полёты","Вод.транспорт","Оружие","Не выдавать"};

	new string[356];
    format(string, sizeof(string), "\
		"W"Промокод "P"%s"W" успешно создан!\n\
		Количество денег "GREEN"$%i"W"\n\
		Навыки владения оружием: "ORANGE"%s"W"\n\
		Лицензия: "ORANGE"%s",
	code,promomoney,str2[promodays],str3[promoplayers]);
    D(playerid, DIALOG_NONE, DSM, "Промокод создан", string, "Закрыть", "");
    DeletePVar(playerid, "promoname");
	DeletePVar(playerid, "promolic");
	DeletePVar(playerid, "promoskills");
	DeletePVar(playerid, "promomoney");
	return 1;
}

CB: promo_show(playerid) {
    new rows;
	rows = cache_num_rows();
    if(!rows) {
		ErrorMessage(playerid, "Промокоды не найдены");
		return D(playerid, D_PROMO, DSL, ""P"Промокоды", ""P"1."W" Список промокодов\n"P"2."W" Создать промокод\n"P"3."W" Удалить промокод", "Выбрать", "Назад");
	}
    new code[32], code_money, code_days, used_count;
    new string[2500];
    strcat(string, ""W"Название\t\t"W"Сумма\t\t"W"Использован\n");
    for(new i; i < rows; i++) {
        cache_get_value_index(i, 0, code, 32);
        cache_get_value_index_int(i, 1, code_money);
        cache_get_value_index_int(i, 2, code_days);
        cache_get_value_index_int(i, 5, used_count);
        format(string, sizeof(string),"%s%s\t\t%d$\t\t%d раз\n", string, code, code_money, used_count);
    }
    D(playerid, DIALOG_NONE, DST, "Список промокодов", string, "Закрыть", "");
	return 1;
}

CB: promo_dell(playerid, code[]) {
    new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Указанный промокод не найден");
	new string[128];
    format(string, sizeof(string), ""W"Промокод "ORANGE"%s""W"" успешно удалён", code);
    D(playerid, DIALOG_NONE, DSM, " ", string, "Закрыть", "");
    new query[128];
    format(query, sizeof(query), "DELETE FROM "T_PROMOCODE" WHERE code = '%s'", code);
    mysql_tquery(connects, query, "", "");
	return 1;
}
stock AdvertTimer() {
	new string[144];
	if(gAdvertTime > 0) gAdvertTime--;
	for(new d;d<MAX_ADVERT_COUNT;d++) {
		if(gAdvert[d][adTime] > 0) gAdvert[d][adTime]--;
		if(gAdvert[d][adCheked] && gAdvert[d][adTime] == 0) {
			if(IsPlayerConnected(gAdvert[d][adID]) && strlen(gAdvert[d][adText])) {
				if(gAdvert[d][adVIP]) {
					format(string,sizeof(string),"VIP | СМИ %s | %s. Объявление от: %s[%d] (тел. %d)",gAdvert[d][adNews],gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
					SendClientMessageToAll(0xFA8072,string);
				}
				else {
					format(string,sizeof(string),"СМИ %s | %s. Объявление от: %s[%d] (тел. %d)",gAdvert[d][adNews],gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
					SendClientMessageToAll(0xFA8072,string);
				}

				format(string,sizeof(string),"\t\t\t\tОбъявление допустил(а) в эфир: %s",gAdvert[d][adCheker]);
				SendClientMessageToAll(0x2d442c00,string);

				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adID] = -1;
				gAdvert[d][adBusy] = false;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
				gAdvert[d][adVIP] = false;
			}
			else {
				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adBusy] = false;
				gAdvert[d][adID] = -1;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
				gAdvert[d][adVIP] = false;
			}
		}
	}
	if(gAdvertCount > 0) gAdvertCount--;
	return 1;
}
CB: drug_effect(playerid) {
	new hour, minute;
	gettime(hour, minute);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerWeather(playerid, 2);
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}
alias:alogin("povishka");
CMD:alogin(playerid, params[]) {
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return true;
	new query[156];
	format(query, sizeof(query), "SELECT * FROM `admin` WHERE `Name` = '%s'", player_name[playerid]);
	mysql_tquery(connects, query, "CheckALogin", "i",playerid);
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}
CMD:djlogin(playerid, params[]) {
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return true;
	new query[156];
	format(query, sizeof(query), "SELECT `lvl`,`nick` FROM `rjlist` WHERE `pid` = '%d'", PI[playerid][pID]);
	mysql_tquery(connects, query, "rjenter", "i",playerid);
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}
/*====[Команды]====*/
CMD:launchaddon(playerid)
{
    if(!Osnovat(GetName(playerid))) return true;
    
	new string[1024];
	format(string, sizeof(string), "{FFFFFF}Название\t\t\t{FFFFFF}Текущее значение\n\
	Сменить тип худа\t\t\t%d\n\
	Сменить тип радара\t\t\t%d\n\
	Сменить тип спидометра\t\t\t%d\n\
	Установить голод в худе\t\t\t%d\n\
	Установить бензин в спидометре\t\t\t%d\n\
	Прозрачный чат\t\t\t%d\n\
	Сохранение диалога\t\t\t%d\n\
	Новый нэймтэг\t\t\t%d\n\
	Снег\t\t\t%d\n\
	Рендер диалога\t\t\t%d\n\
	Выдать скин\n\
	Заспавнить авто",
	Interface[0],
	Interface[1],
	Interface[2],
	Interface[3],
	Interface[4],
	Interface[5],
	Interface[6],
	Interface[7],
	Interface[8],
	Interface[9]);
	
	D(playerid, D_LAUNCHER_ADDON, DIALOG_STYLE_TABLIST_HEADERS, "{5C79D6}Launcher Addon Menu!", string, "Далее", "Выход");
	return 1;
}

CMD:ahelp(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	D(playerid,D_ADMC,DSL,""P"Админ помощь",""P"1."W" Уровень [1]\n"P"2."W" Уровень [2]\n"P"3."W" Уровень [3]\n"P"4."W" Уровень [4]\n"P"5."W" Уровень [5]\n"P"6."W" Уровень [6]","Выбрать","Отмена");
	return 1;
}
CMD:afly(playerid, params[])
{
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;

	new fmt_text[55],
		bool: fly_status;

	if(StartFly(playerid))
		fly_status = true;


	else
		StopFly(playerid);

	format(fmt_text, sizeof fmt_text, "Вы %s Fly-режим", fly_status ? "включили" : "выключили");
	SendClientMessage(playerid, 0x66CC33FF, fmt_text);
	return 1;
}
stock SaveGZ(i) {
	new query[256];
	format(query, sizeof(query), "UPDATE `gangzone` SET `gang_owner`= '%d' WHERE `id` = '%d' LIMIT 1",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
	mysql_pquery(connects,query);
	return 1;
}
stock send_disease(playerid) {
	SendOk(playerid,"Вы попали в зону распространения болезни");
	SendOk(playerid,"Советуем Вам обратиться к медикам в любой из пунктов МЧС");
	SendOk(playerid,"(( Внимание! Состояние Вашей жизни (HP) будет падать значительно быстрее ))");
	PI[playerid][pDisease][0] = 1;
	UpdatePlayerData(playerid,"pDisease_0",1);
	return 1;
}
stock active_accept(playerid) {
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID ||
	TI[playerid][tRaceID] != INVALID_PLAYER_ID ||
	GetPVarInt(playerid, "race_offer") ||
	GetPVarInt(playerid,"hi") ||
	GetPVarInt(playerid,"invstat") != -1 ||
	GetPVarInt(playerid, "lices") ||
	GetPVarInt(playerid, "skills") ||
	GetPVarInt(playerid, "uds") ||
	GetPVarInt(playerid, "udjur") ||
	GetPVarInt(playerid, "pass") ||
	GetPVarInt(playerid, "fpass") ||
	GetPVarInt(playerid, "medcard") ||
	GetPVarInt(playerid, "taxi_id") ||
	GetPVarInt(playerid, "tk_id") ||
	HealOffer[playerid] != INVALID_PLAYER_ID ||
	GetPVarInt(playerid, "repairoffee") ||
	GetPVarInt(playerid, "kiss") ||
	GetPVarInt(playerid, "drugoffee") ||
	GetPVarInt(playerid, "gunoffee") ||
	GetPVarInt(playerid, "ZoneOffer") ||	
	GetPVarInt(playerid, "sim_id_sell") ||
	GetPVarInt(playerid, "bizzProdaet") ||
	GetPVarInt(playerid, "hotelProdaet") ||
	GetPVarInt(playerid, "airProdaet") ||
	GetPVarInt(playerid, "houseSeller") ||
	GetPVarInt(playerid, "carProdaet")) return 1;
	else return 0;
}
CMD:a(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[144],text[130];
	if(sscanf(params,"s[128]",text)) return SendEsp(playerid,"/a [текст]");
	format(string, sizeof(string), "[A-%d]{7FC7FF} %s(%i): %s",PI[playerid][pAdmin],player_name[playerid],playerid,text);
	SendAdminMessage(PP, string);
	return true;
}
alias:fa("fulladmin", "fullaccess");
cmd:fa(playerid,params[])
{
	if(IsPlayerGrandAdmin(playerid))
 	{
 	    if(!strlen(params)) return SendClientMessage(playerid, COLOR_RED, !"Используйте: /fa [текст]");

		new fmt_str[1024];
		format(fmt_str, sizeof fmt_str, "[FA | %d] %s[%d]: %s", PI[playerid][pAdmin], GetName(playerid), playerid, params);
		SendFullAccessMessage(fmt_str, 0x99CC00FF);
	}
	return 1;
}
CMD:kick(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid,"kikk")>gettime()+18) return Kick(playerid);
	if(GetPVarInt(playerid,"kik") > gettime()) {
	    ErrorMessage(playerid,"Можно раз в 7 секунд");
		SetPVarInt(playerid,"kikk",gettime()+3);
		return false;
	}
	new text[130],string[356],giveplayerid;
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/kick [playerid] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return 1;
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
	format(string, 128, "Администратор %s кикнул %s. Причина: %s",player_name[playerid],player_name[giveplayerid],text);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	WriteLog(LOG_KICK,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_KICK] ++;
	new hour,minute;
	new year,month,day;

	getdate(year, month, day);
	gettime(hour,minute);
	static const f_str[] = "\
			"W"Внимание! Вы были "NO"кикнуты"W" с сервера.\n\n\
			"W"Кикнул: "NO"%s\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	Kick(giveplayerid);
	SetPVarInt(playerid,"kik",gettime()+7);
	return true;
}
alias:pm("ans");
CMD:pm(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new text[130],string[144],giveplayerid;
    if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/pm [playerid] [текст]");
    if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(strlen(text) > 80) return ErrorMessage(playerid,"Не больше 80 символов");
	if(IsAIP(text)) return 1;
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Нельзя ответить самому себе");
	format(string, sizeof(string), "Ответ от %s[%i]: %s",player_name[playerid],playerid,text);
	SendClientMessage(giveplayerid, 0xffa141FF, string);
	format(string, sizeof(string), ""W"%s[%i] {FFa500}К "W"%s[%i]: {FFa500}%s",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid,text);
	SendAdminMessage(0xFfa500AA, string);
	if(!rep_system) gAdmin[playerid][ADMIN_PM] ++;
	PlayerPlaySound(giveplayerid, 4203, 0.0, 0.0, 0.0);
    return true;
}
CMD:reps(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(!rep_system) return ErrorMessage(playerid,"Временно недоступно. Воспользуйтесь /pm");
	for(new i;i<MAX_REPORTS;i++) {
		if(PlayerReport[i] != -1) {
			if(ReportSlot[i] == 1) continue;
			new string[400];
			new stringer[150];
			format(string, sizeof(string), ""W"Жалоба от %s[%i]\n\n"G"%s\n", player_name[PlayerReport[i]], PlayerReport[i], TextReport[i]);
			D(playerid,D_REPORT_1,DSI, ""P"Репорт",string,"Принять","Отмена");
			ReportID[playerid] = i;
			ReportSlot[i] = 1;
			format(stringer, sizeof stringer, "Администратор %s[%d] обрабатывает Вашу жалобу",player_name[playerid],playerid);
			SendUse(PlayerReport[i], stringer);
			return 1;
		}
	}
	ErrorMessage(playerid, "Репорт пуст");
	return 1;
}
CMD:mute(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new time, text[33],string[144],giveplayerid;	
	if(sscanf(params, "uds[32]",giveplayerid,time,text)) return SendEsp(playerid, "/mute [playerid] [минуты] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
	if(PI[giveplayerid][pMute]) return ErrorMessage(playerid,"У игрока уже имеется блокировка чата");
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Причина должна быть меньше 30 символов");
 	if(time > 300) return ErrorMessage(playerid,"Выдать бан чата можно максимум на 300 минут");
	if(GetPVarInt(playerid,"ban")>gettime()) return ErrorMessage(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	PI[giveplayerid][pMute] = time*60;
	UpdatePlayerData(giveplayerid,"mute",PI[giveplayerid][pMute]);
	format(string, sizeof(string), "Администратор %s заблокировал чат %s на %d мин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SendOk(giveplayerid, "Время до снятия бана чата: "W"/time");
	gAdmin[playerid][ADMIN_MUTE] ++;
	WriteLog(LOG_MUTE,player_name[playerid],player_name[giveplayerid],text);
	return true;
}
CMD:offunmute(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/offunmute [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
    format(string, sizeof(string), "SELECT `mute` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
    new mute = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "mute", mute);
		if(mute == 0) {
			ErrorMessage(playerid, "У данного игрока нет бана чата");
			cache_delete(result);
			return 1;
		}
		new query[128];
		format(query, sizeof query, "UPDATE `accounts` SET `mute` = '0' WHERE `Name` = '%s' LIMIT 1", params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] снят бан чата в оффлайн игроку %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	cache_delete(result);
	return 1;
}
CMD:unmute(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[144],giveplayerid;	
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/unmute [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(!PI[giveplayerid][pMute]) return ErrorMessage(playerid,"У игрока нет бана чата");
	PI[giveplayerid][pMute] = 0;
	UpdatePlayerData(giveplayerid,"mute",0);
	format(string, sizeof(string), "Администратор %s снял бан чата у %s",player_name[playerid],player_name[giveplayerid]);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	WriteLog(LOG_UNMUTE,player_name[playerid],player_name[giveplayerid],"снял бан чата");
	return true;
}
CMD:offmute(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new name[MAX_PLAYER_NAME],time,reason[31],giveplayerid;

	if(sscanf(params, "s[20]is[30]",name,time,reason)) return SendEsp(playerid, "/offmute [ник] [минуты] [причина]");
	if(strlen(reason) > 30) return ErrorMessage(playerid,"Причина должна быть меньше 30 символов");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
	if(time > 300 || time < 5) return ErrorMessage(playerid, "От 5 до 300 минут");
	if(GetPVarInt(playerid,"ban")>gettime()) return ErrorMessage(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", name);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid, "Данный игрок не найден");
	new query_str[128];
	format(query_str, sizeof(query_str), "UPDATE `accounts` SET mute = '%d' WHERE BINARY Name = '%s'",time*60,name);
	mysql_tquery(connects,query_str);
	cache_delete(result);

	new string[144];
	format(string, sizeof(string), "Вы выдали мут игроку %s на %d минут",name,time);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "[A] (OFFMUTE) %s[%d] выдал мут игроку %s на %d минут. Причина: %s",player_name[playerid],playerid,name,time,reason);
	AdmMSG(0xAFAFAFAA, string,1);
	gAdmin[playerid][ADMIN_MUTE] ++;
	WriteLog(LOG_MUTE,player_name[playerid],name,reason);
	return 1;
}
CMD:weap(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return	SendEsp(playerid, "/weap [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new Gun[13], Ammos[13],string[700];
	for(new i = 0; i < 13; i++) {
		GetPlayerWeaponData(giveplayerid, i, Gun[i], Ammos[i]);
		format(string, sizeof(string), "%s"W"Slot: %i\t Weaponid: %i\t Ammo: %i\n", string, i, Gun[i], Ammos[i]);
		if(i == 12) format(string, sizeof(string), "%s\n",string);
	}
	D(playerid, DIALOG_NONE, DSM, player_name[giveplayerid], string, "Закрыть", "");
	return 1;
}
CMD:cweap(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new id;
	if(sscanf(params,"u",id)) return SendEsp(playerid, "/cweap [id]");
	new string[150];
   	DelGun(id);
   	format(string,sizeof(string),"Вы отобрали оружие у игрока %s[%d]",player_name[id],id);
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	return true;
}
CMD:admins(playerid) {
 	if(PI[playerid][pAdmin] < 1 && !PI[playerid][pVips]) return true;
	new countleader = 0;
	new string[2000],str[156];
	new Admin[32];
	string = "ID\tНик\tДолжность\tУровень\n";
	foreach(new i:Player) {
		if(!IsPlayerConnected(i) || (!TI[i][tLogin]) || (PI[i][pAdmin] <= 0)) continue;
		switch(PI[i][pAdmin]) {
			case 1: Admin = "{FFCC00}Младший Модератор";
			case 2: Admin = "{FFCC00}Модератор";
			case 3: Admin = "{FFCC00}Старший Модератор";
			case 4: Admin = "{009900}Администратор";
			case 5: Admin = "{6369ff}Главный Администратор";
			case 6: Admin = "{ff0036}Спец. Администратор";
			case 7: Admin = "{FF0000}Основатель";
		}
		format(str, sizeof(str), ""W"%i\t%s\t%s\t%d%s\n",i,player_name[i],Admin,PI[i][pAdmin],TI[i][tAFK]>=3?("{ffa800} [AFK]"):("")),strcat(string,str);
		countleader++;
	}
	if(countleader > 0) {
		D(playerid, DIALOG_NONE, DSTH, ""P"Администрация",string, "Закрыть", "");
		new str_adm[128];
		format(str_adm, sizeof(str_adm), "В сети "W"%i"G" администратор(ов)", countleader);
		SendOk(playerid,str_adm);
	}
	else D(playerid, DIALOG_NONE, DSM, ""P"Администрация",""W"Нет администраторов в сети", "Закрыть", "");
	return 1;
}
CMD:afklist(playerid) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new count = 0 ;
	new string[3000];
    foreach(new i : Player) {
    	if(!TI[i][tLogin]) continue;
		if(TI[i][tAFK] < 3) continue;
		new str[128];
		format(str, sizeof(str), ""W"%s[%d] | %d LVL | "NO"AFK: %d\n", player_name[i], i, PI[i][pLevel], TI[i][tAFK]);
		strcat (string, str);
		count++;
	}
	if(count == 0) return ErrorMessage(playerid,"Нет игроков в AFK");
    else D(playerid,DIALOG_NONE,DSM, ""P"Игроки в AFK", string, "Закрыть", "");
	return 1 ;
}
CMD:jail(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new time,text[31],string[144],giveplayerid;
    if(sscanf(params, "uds[30]",giveplayerid,time,text)) return SendEsp(playerid, "/jail [playerid] [минуты] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PI[giveplayerid][pJailTime]) return ErrorMessage(playerid, "Игрок в тюрьме");
	if(time > 300 || time < 5) return ErrorMessage(playerid, "От 5 до 300 минут");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Причина должна быть меньше 30 символов");
    if(IsAIP(text))return 1;
	format(string, sizeof(string), "Вы посадили %s в тюрьму",player_name[giveplayerid]);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "Администратор %s посадил в ДеМорган %s на %d минут. Причина: %s",player_name[playerid],player_name[giveplayerid],time,text);
	SendClientMessageToAll(COLOR_LIGHTRED, string);

	DelGun(giveplayerid);
	PI[giveplayerid][pJail] = 5;
	PI[giveplayerid][pJailTime] = time*60;

	UpdatePlayerData(giveplayerid,"pJailTime", PI[giveplayerid][pJailTime]);
	UpdatePlayerData(giveplayerid,"pJail", 5);

	GameTextForPlayer(giveplayerid, "~w~YOU IN ~R~JAIL", 5000, 4);
	format(string, sizeof(string), "Вы были посажены в тюрьму администратором %s на %i минут(ы). Причина: %s",player_name[playerid],time,text);
	SendOk(giveplayerid, string);
	SendOk(giveplayerid, "Время до выхода на свободу: "W"/time");
	PlayerSpawn(giveplayerid);
	if(giveplayerid != playerid) gAdmin[playerid][ADMIN_JAIL] ++;
	WriteLog(LOG_JAIL,player_name[playerid],player_name[giveplayerid],text);
	return true;
}
CMD:offunjail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/offunjail [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
    format(string, sizeof(string), "SELECT `pJailTime` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
    new jail = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "pJailTime", jail);
		if(jail == 0) {
			ErrorMessage(playerid, "Данный игрок не находится в КПЗ");
			cache_delete(result);
			return 1;
		}
		new query[128];
		format(query, sizeof query, "UPDATE `accounts` SET `pJailTime` = '0',`pJail` = '0' WHERE `Name` = '%s' LIMIT 1", params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] вытащил изз КПЗ в оффлайн игрока %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	cache_delete(result);
	return 1;
}
CMD:offjail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new name[MAX_PLAYER_NAME],time,reason[31],giveplayerid;
	if(sscanf(params, "s[20]is[30]",name,time,reason)) return SendEsp(playerid, "/offjail [ник] [минуты] [причина]");
	if(strlen(reason) > 30) return ErrorMessage(playerid,"Причина должна быть меньше 30 символов");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
	if(time > 300 || time < 5) return ErrorMessage(playerid, "От 5 до 300 минут");

	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", name);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid, "Данный игрок не найден");
	new query_str[128];
	format(query_str, sizeof(query_str), "UPDATE `accounts` SET pJail = '5',pJailTime = '%d' WHERE BINARY Name = '%s'",time*60,name);
	mysql_tquery(connects,query_str);
	cache_delete(result);

	new string[128];
	format(string, sizeof(string), "Вы посадили %s в тюрьму на %d минут",name,time);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "Администратор %s посадил в ДеМорган %s на %d минут. Причина: %s",player_name[playerid],name,time,reason);
	SendClientMessageToAll(COLOR_LIGHTRED, string);

	gAdmin[playerid][ADMIN_JAIL] ++;
	WriteLog(LOG_JAIL,player_name[playerid],name,reason);
	return 1;
}
CMD:unjail(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/unjail [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(!PI[giveplayerid][pJailTime] && PI[giveplayerid][pJail] == 0) return ErrorMessage(playerid, "Игрок не в тюрьме");
	new string[128];
	format(string, sizeof(string), "Вы освободили %s", player_name[giveplayerid]);
	SendClientMessage(playerid, 0x09B000AA, string);
	format(string, sizeof(string), "[A] %s[%d] выпустил игрока %s[%d] из тюрьмы.",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(CADMIN_INFO,string,3);
	format(string, sizeof(string), "Администратор %s[%d] выпустил Вас на свободу!",player_name[playerid],playerid);
	SendOk(giveplayerid,string);
	PI[giveplayerid][pJailTime] = 0;
	PI[giveplayerid][pJail] = 0;
	UpdatePlayerData(giveplayerid,"pJailTime", 0);
	UpdatePlayerData(giveplayerid,"pJail", 0);
	PlayerSpawn(giveplayerid);
	WriteLog(LOG_UNJAIL,player_name[playerid],player_name[giveplayerid],"выпустил из тюрьмы");
	return 1;
}
CMD:prisoners(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;

	new string[(57+MAX_PLAYER_NAME-4+3+11+1)*30];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!PI[i][pJailTime]) continue;
		format(string, sizeof(string), "%s"ORANGE"%s"W" | ID: "P"%d"W" | Время: "GREEN"%d\n", string, player_name [i], i, PI[i][pJailTime]);
	}
	if(isnull(string)) ErrorMessage(playerid, "Заключенных нет");
	else D(playerid, DIALOG_NONE, DSM, ""P"Список заключенных", string, "Закрыть", "");
	return 1;
}
alias:aad("msg");
CMD:aad(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 100) return SendEsp(playerid,"/aad [сообщение]");
	if(GetPVarInt(playerid,"aad") > gettime() && PI[playerid][pAdmin] < 4) {
	    ErrorMessage(playerid,"Можно раз в 15 секунд");
		return false;
	}
	SetPVarInt(playerid,"aad",gettime()+15);
	new string[144];
	format(string, sizeof(string), "Администратор %s: %s", player_name[playerid], params);
	SendClientMessageToAll(0xFFCD00AA,string);
	return 1;
}
CMD:gettime(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendEsp(playerid, "/gettime [ид игрока]");
	new string[800];
	if(PI[giveplayerid][pMute] > 0) {
		format(string, 128, "Осталось молчать: "P"%d секунд", PI[giveplayerid][pMute]);
		SendOk(playerid, string);
	}
	if(PI[giveplayerid][pJailTime] > 0) {
		format(string, 128, "Осталось сидеть: "P"%d секунд", PI[giveplayerid][pJailTime]);
		SendUse(playerid, string);
	}
	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"};
    static const Names_Days[7][12] = {"суббота","воскресенье","понедельник","вторник","среда","четверг","пятница"};
    format(string, sizeof(string), "\
		"W"Текущее время: "P"%02d:%02d\n\
		"W"Сегодняшняя дата: {33AA33}%s, %d %s %04d г.\n\n\
		"W"Время в игре за час:\t\t"YELLOW"%d мин\n\
		"W"Время в игре за сегодня:\t"P"%s\n\
		"W"Время в игре за вчера:\t"P"%s\n\
		"W"AFK за сегодня:\t\t"ORANGE"%s\n\
		"W"AFK за вчера:\t\t\t"ORANGE"%s\n\n\
		"W"Осталось отыграть до бесплатной прокрутки кейсов: "ORANGE"%d мин",
		hour, minuite,
		Names_Days[day_week], day, Names_Months[month-1], year,
		PI[giveplayerid][pPlayTime][0],
		ConvertsCmdTime(gOnlinePlayer[giveplayerid][0]),
		ConvertsCmdTime(gOnlinePlayer[giveplayerid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[giveplayerid][0]),
		ConvertsCmdTime(gOnlinePlayerAFK[giveplayerid][1]),
		BonusInfo[act_timerullet]-PI[giveplayerid][pPlayTime][1]);
	D(playerid, DIALOG_NONE, DSM, ""P"Точное время", string, "Закрыть", "");
	return 1;
}
CMD:gm(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(player_gm{playerid}) {
		player_gm{playerid} = 0;
		SendOk(playerid,"ГМ отключен");
	}
	else player_gm{playerid} = 1,SendOk(playerid,"ГМ включен");
	return 1;
}
CMD:alock(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	GetVehicleParamsEx(GetNearestVehicle(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	switch(doors) {
	    case 0: GameTextForPlayer(playerid, "~r~LOCK", 5000, 3), doors_status(GetNearestVehicle(playerid), playerid);
		case 1: GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3), doors_status(GetNearestVehicle(playerid), playerid);
	}
	return true;
}
CMD:ram(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new houseid = TI[playerid][tSelectHouse];
	SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
	SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
	return true;
}
CMD:tp(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	D(playerid, D_TP_LIST, DSL,""P"Телепорт", ""P"1."W" Организации\n"P"2."W" Работы\n"P"3."W" Вокзалы\n"P"4."W" Банки\n"P"5."W" Транспортные компании\n"P"6."W" Таксопарки\n"P"7."W" Прочее", "Выбрать", "Отмена");
	return true;
}
CMD:re(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Запрещено начинать слежку с транспорта");
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendEsp(playerid, "/re(con) [ид игрока]");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!TI[giveplayerid][tLogin]) return ErrorMessage(playerid,"Игрок не авторизован");
	
	if(SERIU[playerid][sID] == INVALID_PLAYER_ID) {
		//if(TI[playerid][tSpectate]==true) SpecPl(playerid,false);
		TI[playerid][preOrg] = PI[playerid][pMember];
		TI[playerid][preOrgg] = PI[playerid][pRank];
		GetPlayerPos(playerid,TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z]);
		avir[playerid] = GetPlayerVirtualWorld(playerid);
		aint[playerid] = GetPlayerInterior(playerid);
		//TogglePlayerControllable(playerid,true);
		PlayerTextDrawShow(playerid,RECON[playerid]);
	}
	start_work[playerid] = true;
	PI[playerid][pMember] = PI[giveplayerid][pMember];
	PI[playerid][pRank] = 1;
	TI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	SpecPlayer(playerid,giveplayerid);
	ShowMenuForPlayer(specmenu,playerid);
	return 1;
}
CMD:reoff(playerid,const params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	Lastspec[playerid]=SERIU[playerid][sID];
 	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) SpecPl(playerid,false);
	HideMenuForPlayer(specmenu,playerid);
	SettingSpawn(playerid);
	return 1;
}
CMD:getskills(playerid, params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/getskills [id игрока]");
    if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	new strname[56];
	format(strname, sizeof(strname), "{ffcf00}Навыки владения оружия %s", player_name[giveplayerid]);
	new strkill[1006];
	new points[6];
    points[0] = 100 - PI[giveplayerid][pGunSkill][0];
	points[1] = 100 - PI[giveplayerid][pGunSkill][1];
	points[2] = 100 - PI[giveplayerid][pGunSkill][2];
	points[3] = 100 - PI[giveplayerid][pGunSkill][3];
	points[4] = 100 - PI[giveplayerid][pGunSkill][4];
	points[5] = 100 - PI[giveplayerid][pGunSkill][5];
	format(strkill,1000,""W"SD-Pistol:\t"P"%s "W"%d/100%%\nDesert Eagle:\t"P"%s "W"%d/100%%\nShotGun:\t"P"%s "W"%d/100%%\nMP5\t\t"P"%s "W"%d/100%%\nAK47:\t\t"P"%s "W"%d/100%%\nM4:\t\t"P"%s "W"%d/100%%",
	ToDevelopSkills(PI[giveplayerid][pGunSkill][0],points[0]),PI[giveplayerid][pGunSkill][0],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][1],points[1]),PI[giveplayerid][pGunSkill][1],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][2],points[2]),PI[giveplayerid][pGunSkill][2],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][3],points[3]),PI[giveplayerid][pGunSkill][3],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][4],points[4]),PI[giveplayerid][pGunSkill][4],
	ToDevelopSkills(PI[giveplayerid][pGunSkill][5],points[5]),PI[giveplayerid][pGunSkill][5]);
	D(playerid, DIALOG_NONE, DSM, strname, strkill, "Закрыть","");
	return 1;
}
//-----------------------------------------[2 уровень]-------------------------------------------//
CMD:aimcheck(playerid) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Вы ни за кем не следите");
	new targetid = GetPlayerTargetPlayer(SERIU[playerid][sID]);
	if(targetid != INVALID_PLAYER_ID && GetPlayerState(targetid) == 1 && TI[targetid][tAFK] < 3)  {
		new Float:x[2], Float:y[2], Float:z[2], Float:a;
		GetPlayerPos(SERIU[playerid][sID], x[0], y[0], z[0]);
		GetPlayerFacingAngle(SERIU[playerid][sID], a);
		GetXYInFrontOfPoint(x[0], y[0], a, -3.0);
		new Float:aimhp;
		GetPlayerHealth(targetid,aimhp);
		SetPVarFloat(targetid,"aimtest",aimhp);
		GetPlayerPos(targetid, x[1], y[1], z[1]);
		SetPlayerPosAC(targetid, x[0], y[0], z[0],TI[targetid][tVirtualWorld], TI[targetid][tInterior]);
		SetPlayerHealth(targetid,300);
		SendClientMessage(targetid,COLOR_YELLOW,"Не волнуйтесь! Это обычная проверка на аим");
		SetTimerEx("onPTMCheck", 500, false, "iifffi", SERIU[playerid][sID], targetid, x[1], y[1], z[1], playerid);
		new string[128];
		format(string, sizeof string, "[A] %s[%d] проверяет игрока %s[%d] на аим", player_name[playerid],playerid, player_name[SERIU[playerid][sID]], SERIU[playerid][sID]);
		SendAdminMessage(COLOR_GREY, string);
	}
	else ErrorMessage(playerid,"Игрок ни в кого не целится");
	return 1;
}
CMD:get(playerid,params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 23)  return SendEsp(playerid,"/get [Nick Name]");
	new query[256];
	format(query, sizeof(query), "SELECT `pID`, `Name`, `pCash`, `pLevel`, `pIpReg`, `pvIp`, `pDataReg`, `donatemoney` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	mysql_tquery(connects, query, "get_info_player", "i", playerid);
	return 1;
}
CMD:spcar(playerid, params[])
{
    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
    
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/spcar [id]");
	
	SetVehicleToRespawn(params[0]);
	
	new string[1024];
	format(string,sizeof(string),"Вы зареспавнили авто ID: "W"%d",params[0]);
	SendOk(playerid,string);
	return true;
}
CMD:gotocar(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotocar [id]");
	new Float: x,Float:y,Float:z,string[1024];
	GetVehiclePos(params[0],x,y,z);
	SetPlayerPosAC(playerid,x,y,z,GetVehicleVirtualWorld(params[0]),0);
	format(string,sizeof(string),"Вы телепортировались к авто ID: "W"%d",params[0]);
	SendOk(playerid,string);
	return true;
}
CMD:getherecar(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new id, string[150], Float:X, Float:Z, Float:Y;
	if(sscanf(params,"d",id)) return SendEsp(playerid, "/getherecar [id]");
	GetPlayerPos(playerid,X,Y,Z);
	SetVehicleVirtualWorld(id,GetPlayerVirtualWorld(playerid));
	SetVehiclePos(id, X-4, Y, Z+1);
	format(string,sizeof(string),"Вы телепортировали к себе авто ID: "W"%d",id);
	SendOk(playerid,string);
	return true;
}
cmd:getcarall(playerid, params[])
{
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;

	new Float:radius, Float:x, Float:y, Float:z, str_mes[1024];
    if(sscanf(params,"f",radius)) return SendEsp(playerid, "/getradcars [радус]");

	if(!(1.0 <= radius <= 1000.0)) return SendEsp(playerid, "/getcarall [радиус > 0 или < 1000]");

    GetPlayerPos(playerid, x, y, z);
    
    for(new i = GetVehiclePoolSize()+1; --i != 0;)
	{
        if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
        {
      		if(IsVehicleOccupied(i)) continue;
			if(GetVehicleModel(i) == 450) continue;

            LinkVehicleToInterior(i, GetPlayerInterior(playerid));
		    SetVehicleVirtualWorld(i, GetPlayerVirtualWorld(playerid));
		    SetVehiclePos(i, x - 4, y, z + 1);
        }
    }
	format(str_mes, sizeof(str_mes), "%s[%d] телепортировал транспорты в радиусе %.01f", GetName(playerid), playerid, radius);
	SendAdminMessage(COLOR_ORANGE, str_mes);
    return 1;
}
alias:goto("g");
CMD:goto(playerid,params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/g(oto) [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new Float:X, 
		Float:Y, 
		Float:Z, 
		Float:A;
	switch(GetPlayerState(giveplayerid)) {
		case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER: {
			GetVehiclePos(GetPlayerVehicleID(giveplayerid), X, Y, Z);
			GetVehicleZAngle(GetPlayerVehicleID(giveplayerid), A);
		}
		case PLAYER_STATE_ONFOOT: {
			GetPlayerPos(giveplayerid, X, Y, Z);
			GetPlayerFacingAngle(giveplayerid, A);
		}
		default: return ErrorMessage(playerid, "Игрок не заспавнился");
	}
	switch(GetPlayerState(playerid)) {
		case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: {
			SetPlayerPosAC(playerid,X,Y+1.5,Z,GetPlayerVirtualWorld(giveplayerid),GetPlayerInterior(giveplayerid));
			SetPlayerFacingAngle(playerid,A);
		}
		case PLAYER_STATE_DRIVER: {
			new vehicleid = GetPlayerVehicleID(playerid);
			SetVehiclePos(vehicleid, X, Y+1.5, Z);
			SetVehicleZAngle(vehicleid, A);
			LinkVehicleToInterior(vehicleid,GetPlayerInterior(giveplayerid));
			SetVehicleVirtualWorld(vehicleid,GetPlayerVirtualWorld(giveplayerid));
		}
		default: return 1;
	}
	if(TI[giveplayerid][tSelectedBusinessID]) TI[playerid][tSelectedBusinessID] = TI[giveplayerid][tSelectedBusinessID];
	if(TI[giveplayerid][tSelectHouse]) TI[playerid][tSelectHouse] = TI[giveplayerid][tSelectHouse];
	return 1;
}
CMD:hp(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	SetPlayerHealth(playerid, 100);
	SetFullness(playerid, 100);
	return true;
}
alias:spawn("sp");
CMD:spawn(playerid, const params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	PlayerSpawn(playerid);
	return true;
}
CMD:fv(playerid, const params[]) {
    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(IsPlayerInAnyVehicle(playerid)) {
		SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(playerid));
		return true;
	}
	else {
		if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/fv [ID игрока]");
		new model = GetVehicleModel(giveplayerid);
		if(!model) return ErrorMessage(playerid,"Данный игрок не в автомобиле");
		SetVehicleHealth(GetPlayerVehicleID(giveplayerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(giveplayerid));
		return 1;
	}
}
CMD:atipster(playerid,params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;

	new fraction_member;		
	if(sscanf(params,"i", fraction_member)) return SendEsp(playerid, "/atipster [ID фракции]");
	if(!(1 <= fraction_member <= MAX_FRACTIONS)) return SendEsp(playerid, "/atipster [ID фракции]");

	if(GetPVarInt(playerid,"admin_tipster")) {
		SendOk(playerid,"Вы отключили прослушку");
		DeletePVar(playerid,"admin_tipster");
	}
	else {
		SetPVarInt(playerid,"admin_tipster", fraction_member);
		new string[70];
		format(string, sizeof(string),"Вы начали прослушку фракции "W"%s", FI[fraction_member][fName]);
		SendOk(playerid,string);
		SendOk(playerid,"Используйте /tipster еще раз чтобы отключить прослушку");
	}	
	return 1;
}
CMD:astats(playerid, params[]) {
    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/astats [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	ShowStats(playerid,giveplayerid,1);
	return true;
}
//-----------------------------------------[3 уровень]-------------------------------------------//
CMD:tskin(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new skin,giveplayerid;
    if(sscanf(params, "ud", giveplayerid,skin)) return SendEsp(playerid, "/tskin [id игрока] [id скина]");
	if(skin > 311 || skin < 1) return ErrorMessage(playerid, "Неправильный ID скина!");
	A_SetPlayerSkin(giveplayerid, skin);
	SendOk(giveplayerid,"Администратор выдал Вам временный скин");
	return true;
}
CMD:skin(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new skin;
    if(sscanf(params, "d",skin)) return SendEsp(playerid, "/skin [id скина]");
	if(skin > 311 || skin < 1) return ErrorMessage(playerid, "Неправильный ID скина!");

	PI[playerid][pSkin] = skin;
	A_SetPlayerSkin(playerid, PI[playerid][pSkin]);
	UpdatePlayerData(playerid,"Skin",PI[playerid][pSkin]);
	return true;
}
CMD:inf(playerid, params[]) { 
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new string[150];
	format(string, sizeof(string), "Инт %d Мир %d",GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	SendOk(playerid,string);
	return true;
}
CMD:theftrob(playerid, params[]) { //угон
	if(theftCheck[playerid][1] != 4)  return ErrorMessage(playerid,"Тебе не нужно взломывать дом!");
	TogglePlayerControllable(playerid, false);
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	JobTempProcess[playerid] = 16;
	RandomYareNforJOBS(playerid);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	return true;
}
alias:theftprogress("thprogress","progresstheft");  //угон
CMD:theftprogress(playerid, params[]) {  //угон
	new string[850];
	static const f_str[] = ""O"_________________________________________________________________________\n\n\
							"W"Навык автоугона:\n\n\
							"W"Ваш уровень угона: "P"%d\n\
							"W"Прогресс: "P"%d/%d машин\n\n\
							"W"Скилл автоугонщника:\n\
							1. С 1 LvL появляется возможность взять Faggio для задания у актеров\n\
							2. С 5 LvL транспорт для задания заменяется на BMX.\n\
							3. С 10 LvL транспорт для задания заменяется на PSJ - 600.\n\
							4. С 15 LvL появляется возможность вскрывать любой вид транспорта вне работы Автоугонщика.\n\
							5. С 20 LvL появляется возможность позвонить Jackson'y на номер 1218181 для получения задания.\n\
							6. С 25 LvL появляется возможность вскрывать машину без отмычек.\n\n\
							"O"_________________________________________________________________________";
	
	format(string,sizeof(string),f_str,PI[playerid][ptheftSkill],PI[playerid][ptheftExp],TheftSkillMax[PI[playerid][ptheftSkill]]);
	D(playerid,DIALOG_NONE,DSM, ""P"Просмотр навыка",string, "Закрыть", "");
	return true;
}
CMD:theftcancel(playerid, params[]) {  //угон
	if(thefttime[playerid] == 0) return ErrorMessage(playerid, "Вы не начинали автоугон!");
	SendOk(playerid,"Вы отменили задание, ваш навык угона понижен.");
	DestroyDynamicArea(theftarea[playerid][0]);
	DisablePlayerCheckpoint(playerid);
	DestroyDynamicCP(theftCheck[playerid][0]);
	A_DestroyVehicle(theftIDveh[playerid][0]);
	theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
	if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(theftveh[playerid][0]);
		theftveh[playerid][0] = INVALID_VEHICLE_ID;
	}
	theftplayer[playerid][0] = 1010;
	theftplayer[playerid][1] = 0;
	theftCheck[playerid][1] = 0;
	PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
	thefttime[playerid] = 0;
	if(PI[playerid][ptheftExp] == 0) {
		if(PI[playerid][ptheftSkill] != 0) PI[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PI[playerid][ptheftSkill]);
		PI[playerid][ptheftExp] = TheftSkillMax[PI[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
	} 
	else {
		if(PI[playerid][ptheftExp] != 0) PI[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
	}
	return true;
}

 
CMD:theft(playerid, params[]) {  //угон
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(sscanf(params, "ddd",params[0],params[1], params[2])) return SendEsp(playerid, "/theft [id][LVL][EXP]");
	PI[params[0]][ptheftSkill] = params[1];
	PI[params[0]][ptheftExp] = params[2];
	UpdatePlayerData(playerid,"theftSkill",PI[params[0]][ptheftSkill] );
	UpdatePlayerData(playerid,"theftExp",PI[params[0]][ptheftExp]);
	SendClientMessage(playerid, -1, "Выдано!");	
	return true;
}
CMD:testmisha(playerid, params[]) {
	TogglePlayerControllable(playerid, false);
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	JobTempProcess[playerid] = 8;
	RandomYareNforJOBS(playerid);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);

	}
	return true;
}
stock FindNearestHouseCar(playerid) //угон
{
	new status;
   	foreach(new i:Player) {
   		if(playerid == i) continue; 
   		if(theftplayer[playerid][1] != 0) continue;
   		if(PI[i][ptheftHome] > gettime() || PI[i][ptheftHome] == 0) {
			if(house_car[i][0] != INVALID_VEHICLE_ID){
				 if(!IsPlayerInVehicle(i, house_car[i][0])) {
				 	if(gHouses[PI[i][pHouse]][houseImprove][2] && GetVehicleVirtualWorld(house_car[i][0]) !=0 ) {
			 			new houseid = PI[i][pHouse];
		   				SendOk(playerid,"Местоположение дома где находится машина успешно отмечено в вашем GPS");
		   				EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
						theftarea[playerid][0] = CreateDynamicSphere(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 15.0, 0, 0, playerid);
						theftCheck[playerid][0] = CreateDynamicCP(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 1.0,0,0,playerid);
						theftCheck[playerid][1] = 4;
						theftIDveh[playerid][1] = i;
						theftIDveh[playerid][0] = house_car[i][0];
						thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						status = 1;
						break;
				 	}
				 	else {
						new Float:vehx, Float:vehy, Float:vehz;
						GetVehiclePos(house_car[i][0], vehx, vehy, vehz);
						SendOk(playerid,"Местоположение машины успешно отмечено в вашем GPS");
						EnableGPSForPlayer(playerid,vehx, vehy, vehz);
						theftarea[playerid][0] = CreateDynamicSphere(vehx, vehy, vehz, 15.0, 0, 0, playerid);
						theftIDveh[playerid][0] = house_car[i][0];
						theftIDveh[playerid][1] = i;
						theftCheck[playerid][1] = 1;
						theftIDveh[playerid][2] = 0;
						if(thefttime[playerid] == 0)thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						theftplayer[i][0] = playerid; 
						status = 1;
						break;
					}
				 }
			}
			if(house_car[i][1] != INVALID_VEHICLE_ID){
				 if(!IsPlayerInVehicle(i, house_car[i][1])){
				 	if(gHouses[PI[i][pHouse]][houseImprove][2] && GetVehicleVirtualWorld(house_car[i][1]) !=0){
		 				new houseid = PI[i][pHouse];
		   				SendOk(playerid,"Местоположение дома где находится машина успешно отмечено в вашем GPS");
		   				EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
						theftarea[playerid][0] = CreateDynamicSphere(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 15.0, 0, 0, playerid);
						theftCheck[playerid][1] = 4;
						theftIDveh[playerid][1] = i;
						theftIDveh[playerid][0] = house_car[i][1];
						thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						status = 1;
				 	}
				 	else {
						new Float:vehx, Float:vehy, Float:vehz;
						GetVehiclePos(house_car[i][1], vehx, vehy, vehz);
						SendOk(playerid,"Местоположение машины успешно отмечено в вашем GPS");
						EnableGPSForPlayer(playerid,vehx, vehy, vehz);
						theftarea[playerid][0] = CreateDynamicSphere(vehx, vehy, vehz, 10.0, 0, 0, playerid);
						theftIDveh[playerid][0] = house_car[i][1];
						theftIDveh[playerid][1] = i;
						theftCheck[playerid][1] = 1;
						theftIDveh[playerid][2] = 1;
						if(thefttime[playerid] == 0) thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						theftplayer[i][0] = playerid; 
						status = 1;
						break;
					}
				 }
			}
		}
    } 
    if(!status) ErrorMessage(playerid, "Увы, брат, но данный момент для тебя нет заданий!");
    return 1;
}

CMD:ban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new day,text[130],string[415],giveplayerid;
	if(sscanf(params, "uds[128]",giveplayerid,day,text)) return SendEsp(playerid, "/ban [playerid] [дни] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
    if(IsAIP(text))return 1;
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return 1;
	if(day > 30 || 1 > day) return ErrorMessage(playerid,"От 1 до 30 дней");
	format(string, 128, "Администратор %s забанил игрока %s на %d дней. Причина: %s",player_name[playerid],player_name[giveplayerid],day,text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PI[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	SendAdminMessage(COLOR_LIGHTRED,string);
	BanName(player_name[giveplayerid], player_name[playerid], day, text);
	WriteLog(LOG_BAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
			"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
			"W"Заблокировал: "NO"%s\n\
			"W"Дни: "ORANGE"%d\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day,days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");

	if(PI[giveplayerid][pFamily]) reputation_family(PI[giveplayerid][pFamily]-1,-3);

	Kick(giveplayerid);
	return true;
}
CMD:iban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new text[130],string[415],giveplayerid;
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/iban [playerid] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
    if(IsAIP(text)) return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return 1;
	format(string, 128, "Администратор %s забанил игрока %s. Причина: %s",player_name[playerid],player_name[giveplayerid],text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PI[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	SendAdminMessage(COLOR_LIGHTRED,string);
	BanName(player_name[giveplayerid], player_name[playerid], 100, text);
	WriteLog(LOG_BAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
			"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
			"W"Заблокировал: "NO"%s\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid],days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	Kick(giveplayerid);
	return true;
}
CMD:delfences(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i;i<MAX_OGRAD;i++) {
		if(object[i]!=-1) {
			GetDynamicObjectPos(object[i],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
				if(objectrot[i] != -1) {
					DestroyDynamicObject(objectrot[i]);
					objectrot[i]=-1;
				}
				DestroyDynamicObject(object[i]);
				object[i]=-1;
				SendOk(playerid,"Ограждение успешно убрано");
				return 1;
			}
		}
	}
	return true;
}

CMD:warn(playerid, params[]) {
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new text[130],string[415],giveplayerid;	
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/warn [playerid] [причина]");
	if(GetPVarInt(playerid,"ban")>gettime()) {
	    ErrorMessage(playerid,"Можно раз в 10 секунд");
		SetPVarInt(playerid,"bann",gettime()+3);
		return false;
	}
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return 1;
	if(PI[giveplayerid][pAdmin] > PI[playerid][pAdmin]) return ErrorMessage(playerid, "Администратору нельзя выдать предупреждение");
	if(PI[giveplayerid][pLeader]) return ErrorMessage(playerid, "Лидеру нельзя выдать предупреждение");

	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);

	if(PI[giveplayerid][pFamily]) reputation_family(PI[giveplayerid][pFamily]-1,-3);
	if(PI[giveplayerid][pWarns]++ >= 2) {
		format(string, sizeof(string), "Администратор %s забанил игрока (3 предупреждения) %s на 30 дней. Причина: %s", player_name[playerid],player_name[giveplayerid], text);
		SendClientMessageToAll(COLOR_LIGHTRED, string);

		BanName(player_name[giveplayerid], player_name[playerid], 30, text);
		WriteLog(LOG_BAN,player_name[playerid],player_name[giveplayerid],text);
		gAdmin[playerid][ADMIN_BAN] ++;
		string = "";
		static const f_str[] = "\
				"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
				"W"Заблокировал: "NO"%s\n\
				"W"Дни: "ORANGE"%d\n\
				"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
				"W"Причина: "ORANGE"%s\n\n\
				"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
				иначе Ваша жалоба будет не принята.";
		format(string,sizeof(string),f_str,player_name[playerid], 30,days, month, year,hour, minute,text);

		new str[MAX_PLAYER_NAME+1];
		format(str,sizeof(str),"%s",player_name[giveplayerid]);
		D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
		Kick(giveplayerid);
	}
	else {
		if(!GetPVarInt(giveplayerid,"AntiWarn")) {
			//Insert_Warn(player_name[giveplayerid], PI[giveplayerid][pWarns],player_name[playerid],text);

			PI[giveplayerid][punWarnstime] = unix + 7*86400;
			PI[giveplayerid][pLeader] = 0;
			PI[giveplayerid][pJob] = 0;
			PI[giveplayerid][pMember] = 0;

			UpdatePlayerData(giveplayerid, "pWarns",PI[giveplayerid][pWarns]);
			UpdatePlayerData(giveplayerid, "warntime", PI[giveplayerid][punWarnstime]);
			UpdatePlayerData(giveplayerid, "pLeader", 0);
			UpdatePlayerData(giveplayerid, "pJob", 0);
			UpdatePlayerData(giveplayerid, "pMember",0);
			Kick(giveplayerid);
		}
		format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%d|3]. Причина: %s", player_name[playerid], player_name[giveplayerid], PI[giveplayerid][pWarns], text);
	    SendClientMessageToAll(COLOR_LIGHTRED, string);
		WriteLog(LOG_WARN,player_name[playerid],player_name[giveplayerid],text);
		SetPVarInt(giveplayerid,"AntiWarn", true);
		static const f_str[] = "\
			"W"Внимание! Вам выдали "NO"предупреждение"W"\n\n\
			"W"Выдал: "NO"%s\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
		format(string,sizeof(string),f_str,player_name[playerid], days, month, year,hour, minute,text);
		gAdmin[playerid][ADMIN_WARN] ++;
	}
	add_jobinfo(giveplayerid,"Недееспособен");

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	return 1;
}
/*CMD:int(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new interior;
	if(sscanf(params,"i", interior)) return SendEsp(playerid,"/int [1-140]");

	switch(interior) {
		case 1: SetPlayerPosAC(playerid,-25.884499,-185.868988,1003.549988), SetPlayerInterior(playerid,17);
		case 2: SetPlayerPosAC(playerid,6.091180,-29.271898,1003.549988), SetPlayerInterior(playerid,10);
		case 3: SetPlayerPosAC(playerid,-30.946699,-89.609596,1003.549988), SetPlayerInterior(playerid,18);
		case 4: SetPlayerPosAC(playerid,-25.132599,-139.066986,1003.549988), SetPlayerInterior(playerid,16);
		case 5: SetPlayerPosAC(playerid,-27.312300,-29.277599,1003.549988), SetPlayerInterior(playerid,4);
		case 6: SetPlayerPosAC(playerid,-26.691599,-55.714897,1003.549988), SetPlayerInterior(playerid,6);
		case 7: SetPlayerPosAC(playerid,-1827.147338,7.207418,1061.143554), SetPlayerInterior(playerid,14);
		case 8: SetPlayerPosAC(playerid,2.384830,33.103397,1199.849976), SetPlayerInterior(playerid,1);
		case 9: SetPlayerPosAC(playerid,315.856170,1024.496459,1949.797363), SetPlayerInterior(playerid,9);
		case 10: SetPlayerPosAC(playerid,286.148987,-40.644398,1001.569946), SetPlayerInterior(playerid,1);
		case 11: SetPlayerPosAC(playerid,286.800995,-82.547600,1001.539978), SetPlayerInterior(playerid,4);
		case 12: SetPlayerPosAC(playerid,296.919983,-108.071999,1001.569946), SetPlayerInterior(playerid,6);
		case 13: SetPlayerPosAC(playerid,314.820984,-141.431992,999.661987), SetPlayerInterior(playerid,7);
		case 14: SetPlayerPosAC(playerid,316.524994,-167.706985,999.661987), SetPlayerInterior(playerid,6);
		case 15: SetPlayerPosAC(playerid,302.292877,-143.139099,1004.062500), SetPlayerInterior(playerid,7);
		case 16: SetPlayerPosAC(playerid,235.508994,1189.169897,1080.339966), SetPlayerInterior(playerid,3);
		case 17: SetPlayerPosAC(playerid,225.756989,1240.000000,1082.149902), SetPlayerInterior(playerid,2);
		case 18: SetPlayerPosAC(playerid,223.043991,1289.259888,1082.199951), SetPlayerInterior(playerid,1);
		case 19: SetPlayerPosAC(playerid,225.630997,1022.479980,1084.069946), SetPlayerInterior(playerid,7);
		case 20: SetPlayerPosAC(playerid,295.138977,1474.469971,1080.519897), SetPlayerInterior(playerid,15);
		case 21: SetPlayerPosAC(playerid,328.493988,1480.589966,1084.449951), SetPlayerInterior(playerid,15);
		case 22: SetPlayerPosAC(playerid,385.803986,1471.769897,1080.209961), SetPlayerInterior(playerid,15);
		case 23: SetPlayerPosAC(playerid,375.971985,1417.269897,1081.409912), SetPlayerInterior(playerid,15);
		case 24: SetPlayerPosAC(playerid,490.810974,1401.489990,1080.339966), SetPlayerInterior(playerid,2);
		case 25: SetPlayerPosAC(playerid,447.734985,1400.439941,1084.339966), SetPlayerInterior(playerid,2);
		case 26: SetPlayerPosAC(playerid,227.722992,1114.389893,1081.189941), SetPlayerInterior(playerid,5);
		case 27: SetPlayerPosAC(playerid,260.983978,1286.549927,1080.299927), SetPlayerInterior(playerid,4);
		case 28: SetPlayerPosAC(playerid,221.666992,1143.389893,1082.679932), SetPlayerInterior(playerid,4);
		case 29: SetPlayerPosAC(playerid,27.132700,1341.149902,1084.449951), SetPlayerInterior(playerid,10);
		case 30: SetPlayerPosAC(playerid,-262.601990,1456.619995,1084.449951), SetPlayerInterior(playerid,4);
		case 31: SetPlayerPosAC(playerid,22.778299,1404.959961,1084.449951), SetPlayerInterior(playerid,5);
		case 32: SetPlayerPosAC(playerid,140.278000,1368.979980,1083.969971), SetPlayerInterior(playerid,5);
		case 33: SetPlayerPosAC(playerid,234.045990,1064.879883,1084.309937), SetPlayerInterior(playerid,6);
		case 34: SetPlayerPosAC(playerid,-68.294098,1353.469971,1080.279907), SetPlayerInterior(playerid,6);
		case 35: SetPlayerPosAC(playerid,-285.548981,1470.979980,1084.449951), SetPlayerInterior(playerid,15);
		case 36: SetPlayerPosAC(playerid,-42.581997,1408.109985,1084.449951), SetPlayerInterior(playerid,8);
		case 37: SetPlayerPosAC(playerid,83.345093,1324.439941,1083.889893), SetPlayerInterior(playerid,9);
		case 38: SetPlayerPosAC(playerid,260.941986,1238.509888,1084.259888), SetPlayerInterior(playerid,9);
		case 39: SetPlayerPosAC(playerid,1038.509888,-0.663752,1001.089966), SetPlayerInterior(playerid,3);
		case 40: SetPlayerPosAC(playerid,446.622986,509.318970,1001.419983), SetPlayerInterior(playerid,12);
		case 41: SetPlayerPosAC(playerid,2216.339844,-1150.509888,1025.799927), SetPlayerInterior(playerid,15);
		case 42: SetPlayerPosAC(playerid,833.818970,7.418000,1004.179993), SetPlayerInterior(playerid,3);
		case 43: SetPlayerPosAC(playerid,-100.325996,-22.816500,1000.741943), SetPlayerInterior(playerid,3);
		case 44: SetPlayerPosAC(playerid,964.376953,2157.329834,1011.019958), SetPlayerInterior(playerid,1);
		case 45: SetPlayerPosAC(playerid,-2239.569824,130.020996,1035.419922), SetPlayerInterior(playerid,6);
		case 46: SetPlayerPosAC(playerid,662.641601,-571.398803,16.343263), SetPlayerInterior(playerid,0);
		case 47: SetPlayerPosAC(playerid,614.581420,-23.066856,1004.781250), SetPlayerInterior(playerid,1);
		case 48: SetPlayerPosAC(playerid,612.508605,-129.236114,1001.992187), SetPlayerInterior(playerid,3);
		case 49: SetPlayerPosAC(playerid,-1786.603759,1215.553466,28.531250), SetPlayerInterior(playerid,0);
		case 50: SetPlayerPosAC(playerid,-2048.605957,162.093444,28.835937), SetPlayerInterior(playerid,1);
		case 51: SetPlayerPosAC(playerid,2170.284,1618.629,999.9766), SetPlayerInterior(playerid,1);
		case 52: SetPlayerPosAC(playerid,1889.975,1018.055,31.88281), SetPlayerInterior(playerid,10);
		case 53: SetPlayerPosAC(playerid,-2158.719971,641.287964,1052.369995), SetPlayerInterior(playerid,1);
		case 54: SetPlayerPosAC(playerid,1133.069946,-9.573059,1000.750000), SetPlayerInterior(playerid,12);
		case 55: SetPlayerPosAC(playerid,207.737991,-109.019997,1005.269958), SetPlayerInterior(playerid,15);
		case 56: SetPlayerPosAC(playerid,204.332993,-166.694992,1000.578979), SetPlayerInterior(playerid,14);
		case 57: SetPlayerPosAC(playerid,207.054993,-138.804993,1003.519958), SetPlayerInterior(playerid,3);
		case 58: SetPlayerPosAC(playerid,203.778000,-48.492397,1001.799988), SetPlayerInterior(playerid,1);
		case 59: SetPlayerPosAC(playerid,226.293991,-7.431530,1002.259949), SetPlayerInterior(playerid,5);
		case 60: SetPlayerPosAC(playerid,161.391006,-93.159156,1001.804687), SetPlayerInterior(playerid,18);
		case 61: SetPlayerPosAC(playerid,493.390991,-22.722799,1000.686951), SetPlayerInterior(playerid,17);
		case 62: SetPlayerPosAC(playerid,501.980988,-69.150200,998.834961), SetPlayerInterior(playerid,11);
		case 63: SetPlayerPosAC(playerid,-227.028000,1401.229980,27.769798), SetPlayerInterior(playerid,18);
		case 64: SetPlayerPosAC(playerid,460.099976,-88.428497,999.621948), SetPlayerInterior(playerid,4);
		case 65: SetPlayerPosAC(playerid,454.973950,-110.104996,999.717957), SetPlayerInterior(playerid,5);
		case 66: SetPlayerPosAC(playerid,452.489990,-18.179699,1001.179993), SetPlayerInterior(playerid,1);
		case 67: SetPlayerPosAC(playerid,681.474976,-451.150970,-25.616798), SetPlayerInterior(playerid,1);
		case 68: SetPlayerPosAC(playerid,366.923980,-72.929359,1001.507812), SetPlayerInterior(playerid,10);
		case 69: SetPlayerPosAC(playerid,365.672974,-10.713200,1001.869995), SetPlayerInterior(playerid,9);
		case 70: SetPlayerPosAC(playerid,372.351990,-131.650986,1001.449951), SetPlayerInterior(playerid,5);
		case 71: SetPlayerPosAC(playerid,377.098999,-192.439987,1000.643982), SetPlayerInterior(playerid,17);
		case 72: SetPlayerPosAC(playerid,244.411987,305.032990,999.231995), SetPlayerInterior(playerid,1);
		case 73: SetPlayerPosAC(playerid,271.884979,306.631989,999.325989), SetPlayerInterior(playerid,2);
		case 74: SetPlayerPosAC(playerid,291.282990,310.031982,999.154968), SetPlayerInterior(playerid,3);
		case 75: SetPlayerPosAC(playerid,302.181000,300.722992,999.231995), SetPlayerInterior(playerid,4);
		case 76: SetPlayerPosAC(playerid,322.197998,302.497986,999.231995), SetPlayerInterior(playerid,5);
		case 77: SetPlayerPosAC(playerid,346.870025,309.259033,999.155700), SetPlayerInterior(playerid,6);
		case 78: SetPlayerPosAC(playerid,-959.873962,1952.000000,9.044310), SetPlayerInterior(playerid,17);
		case 79: SetPlayerPosAC(playerid,388.871979,173.804993,1008.389954), SetPlayerInterior(playerid,3);
		case 80: SetPlayerPosAC(playerid,220.4109,1862.277,13.147), SetPlayerInterior(playerid,0);
		case 81: SetPlayerPosAC(playerid,772.112000,-3.898650,1000.687988), SetPlayerInterior(playerid,5);
		case 82: SetPlayerPosAC(playerid,774.213989,-48.924297,1000.687988), SetPlayerInterior(playerid,6);
		case 83: SetPlayerPosAC(playerid,773.579956,-77.096695,1000.687988), SetPlayerInterior(playerid,7);
		case 84: SetPlayerPosAC(playerid,1527.229980,-11.574499,1002.269958), SetPlayerInterior(playerid,3);
		case 85: SetPlayerPosAC(playerid,1523.509888,-47.821198,1002.269958), SetPlayerInterior(playerid,2);
		case 86: SetPlayerPosAC(playerid,2496.049805,-1693.929932,1014.750000), SetPlayerInterior(playerid,3);
		case 87: SetPlayerPosAC(playerid,1263.079956,-785.308960,1091.959961), SetPlayerInterior(playerid,5);
		case 88: SetPlayerPosAC(playerid,1291.725341,-788.319885,96.460937), SetPlayerInterior(playerid,0);
		case 89: SetPlayerPosAC(playerid,516.650,-18.611898,1001.459961), SetPlayerInterior(playerid,3);
		case 90: SetPlayerPosAC(playerid,2464.109863,-1698.659912,1013.509949), SetPlayerInterior(playerid,2);
		case 91: SetPlayerPosAC(playerid,2526.459961,-1679.089966,1015.500000), SetPlayerInterior(playerid,1);
		case 92: SetPlayerPosAC(playerid,2543.659912,-1303.629883,1025.069946), SetPlayerInterior(playerid,2);
		case 93: SetPlayerPosAC(playerid,1212.019897,-28.663099,1001.089966), SetPlayerInterior(playerid,3);
		case 94: SetPlayerPosAC(playerid,744.542969,1437.669922,1102.739990), SetPlayerInterior(playerid,6);
		case 95: SetPlayerPosAC(playerid,1204.809937,-11.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 96: SetPlayerPosAC(playerid,1204.809937,13.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 97: SetPlayerPosAC(playerid,940.921997,-17.007000,1001.179993), SetPlayerInterior(playerid,3);
		case 98: SetPlayerPosAC(playerid,964.106995,-53.205498,1001.179993), SetPlayerInterior(playerid,3);
		case 99: SetPlayerPosAC(playerid,-2661.009766,1415.739990,923.305969), SetPlayerInterior(playerid,3);
		case 100: SetPlayerPosAC(playerid,-2637.449951,1404.629883,906.457947), SetPlayerInterior(playerid,3);
		case 101: SetPlayerPosAC(playerid,-735.5619504,484.351318,1371.952270), SetPlayerInterior(playerid,1);
		case 102: SetPlayerPosAC(playerid,-794.8064,491.6866,1376.195), SetPlayerInterior(playerid,1);
		case 103: SetPlayerPosAC(playerid,-835.2504,500.9161,1358.305), SetPlayerInterior(playerid,1);
		case 104: SetPlayerPosAC(playerid,-813.431518,533.231079,1390.782958), SetPlayerInterior(playerid,1);
		case 105: SetPlayerPosAC(playerid,2350.339844,-1181.649902,1028.000000), SetPlayerInterior(playerid,5);
		case 106: SetPlayerPosAC(playerid,2807.619873,-1171.899902,1025.579956), SetPlayerInterior(playerid,8);
		case 107: SetPlayerPosAC(playerid,318.564972,1118.209961,1083.979980), SetPlayerInterior(playerid,5);
		case 108: SetPlayerPosAC(playerid,1412.639893,-1.787510,1000.931946), SetPlayerInterior(playerid,1);
		case 109: SetPlayerPosAC(playerid,1302.519897,-1.787510,1000.931946), SetPlayerInterior(playerid,18);
		case 110: SetPlayerPosAC(playerid,2522.0,-1673.383911,14.8), SetPlayerInterior(playerid,0);
		case 111: SetPlayerPosAC(playerid,-219.322601,1410.444824,27.773437), SetPlayerInterior(playerid,18);
		case 112: SetPlayerPosAC(playerid,2324.419922,-1147.539917,1050.719971), SetPlayerInterior(playerid,12);
		case 113: SetPlayerPosAC(playerid,-972.4957,1060.983,1358.914), SetPlayerInterior(playerid,10);
		case 114: SetPlayerPosAC(playerid,411.625977,-21.433298,1001.799988), SetPlayerInterior(playerid,2);
		case 115: SetPlayerPosAC(playerid,418.652985,-82.639793,1001.959961), SetPlayerInterior(playerid,3);
		case 116: SetPlayerPosAC(playerid,412.021973,-52.649899,1001.959961), SetPlayerInterior(playerid,12);
		case 117: SetPlayerPosAC(playerid,-204.439987,-26.453999,1002.299988), SetPlayerInterior(playerid,16);
		case 118: SetPlayerPosAC(playerid,-204.439987,-8.469600,1002.299988), SetPlayerInterior(playerid,17);
		case 119: SetPlayerPosAC(playerid,-204.439987,-43.652496,1002.299988), SetPlayerInterior(playerid,3);
		case 120: SetPlayerPosAC(playerid,246.783997,63.900200,1003.639954), SetPlayerInterior(playerid,6);
		case 121: SetPlayerPosAC(playerid,246.375992,109.245995,1003.279968), SetPlayerInterior(playerid,10);
		case 122: SetPlayerPosAC(playerid,288.745972,169.350998,1007.179993), SetPlayerInterior(playerid,3);
		case 123: SetPlayerPosAC(playerid,1494.429932,1305.629883,1093.289917), SetPlayerInterior(playerid,3);
		case 124: SetPlayerPosAC(playerid,-2029.719971,-115.067993,1035.169922), SetPlayerInterior(playerid,3);
		case 125: SetPlayerPosAC(playerid,420.484985,2535.589844,10.020289), SetPlayerInterior(playerid,10);
		case 126: SetPlayerPosAC(playerid,-2184.751464,2413.111816,5.156250), SetPlayerInterior(playerid,0);
		case 127: SetPlayerPosAC(playerid,-1397.782470,-203.723114,1051.346801), SetPlayerInterior(playerid,7);
		case 128: SetPlayerPosAC(playerid,-1398.103515,933.445434,1041.531250), SetPlayerInterior(playerid,15);
		case 129: SetPlayerPosAC(playerid,-1428.809448,-663.595886,1060.219848), SetPlayerInterior(playerid,4);
		case 130: SetPlayerPosAC(playerid,-1486.861816,1642.145996,1060.671875), SetPlayerInterior(playerid,14);
		case 131: SetPlayerPosAC(playerid,-1401.830000,107.051300,1032.273000), SetPlayerInterior(playerid,1);
		case 132: SetPlayerPosAC(playerid,1382.615600,2184.345703,11.023437), SetPlayerInterior(playerid,0);
		case 133: SetPlayerPosAC(playerid,297.9414,-64.3876,1001.5156), SetPlayerInterior(playerid,4);
		case 134: SetPlayerPosAC(playerid,302.1602,-164.7588,999.6105), SetPlayerInterior(playerid,6);
		case 135: SetPlayerPosAC(playerid,614.31,-125.22,997.99), SetPlayerInterior(playerid,3);
		case 136: SetPlayerPosAC(playerid,72.03800201,394.72299194,1041.23596191), SetPlayerInterior(playerid,5);
		case 137: SetPlayerPosAC(playerid,258.6563,-42.7578,1001.0234), SetPlayerInterior(playerid,14);
		case 138: SetPlayerPosAC(playerid,1887.25000000,508.48001099,1204.37194824), SetPlayerInterior(playerid,5);
		case 139: SetPlayerPosAC(playerid,1583.48498535,534.78302002,1128.39794922), SetPlayerInterior(playerid,5);
		case 140: SetPlayerPosAC(playerid,2527.09692383,464.17098999,2636.01293945), SetPlayerInterior(playerid,8);
		default: SendEsp(playerid,"/int [1-140]");
	}
	return 1;
}*/
CMD:gethere(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/gethere [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new player_state = GetPlayerState(giveplayerid);
	if(!(1 <= player_state <= 3)) return ErrorMessage(playerid,"Игрок не вступил в игру");
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return ErrorMessage(playerid,"Его нельзя телепортировать");
	new Float:X,
		Float:Y,Float:Z, 
		Float:A,
		vehicleid = GetPlayerVehicleID(giveplayerid),
		interior = GetPlayerInterior(playerid),
		virtualworld = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);

	switch(GetPlayerState(giveplayerid)) {
		case PLAYER_STATE_ONFOOT: {
			SetPlayerPosAC(giveplayerid, X,Y+2,Z,virtualworld,interior);
			SetPlayerFacingAngle(giveplayerid, A);
		}
		case PLAYER_STATE_DRIVER: {
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, virtualworld);
			SetVehiclePos(vehicleid, X, Y+2, Z);
			SetVehicleZAngle(vehicleid, A);
		}
		case PLAYER_STATE_PASSENGER: {
			RemovePlayerFromVehicleAC(giveplayerid);
			SetPlayerPosAC(giveplayerid, X, Y+2, Z,virtualworld,interior);
			SetPlayerFacingAngle(giveplayerid, A);
		}
	}
	new string[128];
	format(string, sizeof(string), "Вы были телепортированы администратором %s", player_name[playerid]);
	SendOk(giveplayerid,string);

	format(string, sizeof(string), "Вы телепортировали %s к себе", player_name[giveplayerid]);
	SendOk(playerid,string);
	return 1;
}
CMD:spcars(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/spcars [время]");
	if(giveplayerid < 5 || giveplayerid > 30) return ErrorMessage(playerid, "От 5 до 30 секунд");
	new string[64];
	format(string,sizeof(string), "Машины заспавнятся через %i секунд",giveplayerid);
	SendOk(playerid, string);
	SendClientMessageToAll(COLOR_RED,string);
	SetTimerEx("SpcarsAvto",giveplayerid*1000,false,"i",playerid);
	return true;
}
CMD:setnick(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"i",giveplayerid)) return SendEsp(playerid, "/setnick [ID]");
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(giveplayerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(!strlen(playerName)) return ErrorMessage(playerid,"Игрок не подавал завку на смену ника");
	WriteLog(LOG_CHANGENAME,player_name[playerid],player_name[giveplayerid],playerName);
	if(GetPVarInt(giveplayerid,"changename_fix")) return 1;
	ChangeName(giveplayerid);
	new string[128];
	format(string, sizeof(string), "[A] %s разрешил смену ника игроку %s",player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:freeze(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return	SendEsp(playerid, "/freeze [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PI[giveplayerid][pAdmin] > PI[playerid][pAdmin]) return ErrorMessage(playerid, "Его нельзя");
	TogglePlayerControllable(giveplayerid, 0);
	new string[128];
	format(string, sizeof(string), "[A] %s был заморожен администратором %s",player_name[giveplayerid],player_name[playerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:unfreeze(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return	SendEsp(playerid, "/unfreeze [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PI[giveplayerid][pAdmin] > PI[playerid][pAdmin]) return ErrorMessage(playerid, "Его нельзя");
	TogglePlayerControllable(giveplayerid, 1);
	new string[128];
	format(string, sizeof(string), "[A] %s разморозил %s",player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:slap(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/slap [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);

	new Float:slx, 
		Float:sly, 
		Float:slz,
		string[128];
	GetPlayerPos(giveplayerid, slx, sly, slz);
	SetPlayerPosAC(giveplayerid, slx, sly, slz+5,TI[giveplayerid][tVirtualWorld], TI[giveplayerid][tInterior]);
	PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
	format(string, sizeof(string), "[A] %s подкинул игрока %s", player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:mark(playerid) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new Float: MarkX, Float: MarkY, Float: MarkZ;
	GetPlayerPos(playerid, MarkX, MarkY, MarkZ);
	SetPVarFloat(playerid, "MarkX", MarkX);
	SetPVarFloat(playerid, "MarkY", MarkY);
	SetPVarFloat(playerid, "MarkZ", MarkZ);
	SetPVarInt(playerid, "MarkInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "MarkVW", GetPlayerVirtualWorld(playerid));
	SendOk(playerid, "Позиция для телепорта сохранена");
	return 1;
}
CMD:gotomark(playerid) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) == 2) {
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"));
	}
	else SetPlayerPosAC(playerid, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"),GetPVarInt(playerid, "MarkVW"),GetPVarInt(playerid, "MarkInt"));
	SendOk(playerid, "Вы телепортировались на сохраненную ранее позицию");
	return 1;
}
CMD:satiety(playerid, params[]) {
    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/satiety [playerid] [сытость]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 101) return ErrorMessage(playerid,"Нельзя давать больше 100 хп");
	PI[giveplayerid][pSatiety] = hp;
	SetFullness(giveplayerid, PI[giveplayerid][pSatiety]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d сытости игроку %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:healsiun(playerid) return SetPlayerHealth(playerid, 100.0);
CMD:sethp(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/sethp [playerid] [HP]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 1001) return ErrorMessage(playerid,"Нельзя давать больше 1000 хп");
	SetPlayerHealth(giveplayerid, hp);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d здоровья игроку %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:setarm(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/setarm [playerid] [armour]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 101) return ErrorMessage(playerid,"Нельзя давать больше 100 брони");
	SetPlayerArmour(giveplayerid, hp);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d брони игроку %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:offstats(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new text = strlen(params);
	if(!text) return SendEsp(playerid, "/offstats [Nick Name]");
	if(text < 3 || text > 24) return ErrorMessage(playerid, "От 3 до 24 символов");
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	mysql_tquery(connects, query, "AGetStats", "is", playerid, params);
	return 1;
}
CMD:getid(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/getid [ID]");
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `pID` = '%d' LIMIT 1", giveplayerid);
	mysql_tquery(connects, query, "AGetID", "ii", playerid, giveplayerid);
	return 1;
}
//4
CMD:asettax(playerid,params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/asettax [деньги]");
    if(giveplayerid < 100000 || giveplayerid > 1000000) return ErrorMessage(playerid, "От $100000 до $1000000");
    FI[fWHITEHOUSE][fBank] += giveplayerid;
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] добавил в казну штата $%d",player_name[playerid],playerid,giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:awarehouse(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	static const f_str[] = "\
							"W"На складе Армия ЛВ: \t\t\t"ORANGE"%i\n\
							"W"На складе Армия СФ: \t\t"ORANGE"%i\n\
							"W"На складе FBI: \t\t\t"ORANGE"%i\n\
							"W"На складе LSPD: \t\t\t"ORANGE"%i\n\
							"W"На складе SFPD: \t\t\t"ORANGE"%i\n\
							"W"На складе LVPD: \t\t\t"ORANGE"%i\n\
							"W"На складе Итальянская мафии: \t"ORANGE"%i\n\
							"W"На складе Японской мафии: \t\t"ORANGE"%i\n\
							"W"На складе Русской мафии: \t\t"ORANGE"%i\n\
							"W"На складе Ballas: \t\t\t"ORANGE"%i\n\
							"W"На складе Vagos: \t\t\t"ORANGE"%i\n\
							"W"На складе Grove: \t\t\t"ORANGE"%i\n\
							"W"На складе Aztecas: \t\t\t"ORANGE"%i\n\
							"W"На складе Rifa: \t\t\t"ORANGE"%i\n\
							"W"Оружейный завод: \t\t\t"ORANGE"%i\n\
							"W"Нефтезавод: \t\t\t\t"ORANGE"%i\n\
							"W"Лесопилка: \t\t\t\t"ORANGE"%i";
	new string[sizeof(f_str) +1 + 100];
	format(string,sizeof(string),f_str,FI[fARMYLV][fMats],FI[fARMYSF][fMats],FI[fFBI][fMats],FI[fLSPD][fMats],
										FI[fSFPD][fMats],FI[fLVPD][fMats],FI[fLCN][fMats],FI[fYAKUZA][fMats],FI[fRM][fMats],
										FI[fBALLAS][fMats],FI[fVAGOS][fMats],FI[fGROVE][fMats],FI[fAZTEC][fMats],FI[fRIFA][fMats],zavodsklad,oilsklad,woodsklad);
	D(playerid,DIALOG_NONE,DSM, ""P"Состояние складов",string,"Закрыть","");
	return true;
}
//-----------------------------------------[4 уровень]-------------------------------------------//
CMD:skick(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[144],giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendEsp(playerid, "/skick [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return 1;
	format(string, sizeof(string), "[A] %s[%d] кикнул без лишнего шума игрока %s[%d]",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(CADMIN_INFO,string,4);
	Kick(giveplayerid);
	WriteLog(LOG_SKICK,player_name[playerid],player_name[giveplayerid],"SKick");
	return 1;
}

CMD:rban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    /*new ban_ip [ 16 ], ban_reason_ip [ 32 ] ;
	if ( sscanf ( params,"s[16]s[32]", ban_ip, ban_reason_ip ) ) return SendClientMessage ( playerid, col_gray,"{"#cRD"}* {"#cGR"}Используйте: /banip [ип] [причина]" ) ;
	if ( strfind ( ban_ip, "*.*", true ) != -1 ) return SendClientMessage ( playerid, col_gray,"{"#cRD"}* {"#cGR"}Неправильный ip адрес." ) ;*/
	if(GetString(params,"46.62.15.59")) return 1;
	if(GetString(params,"46.62.15")) return 1;
	new null;
	for(new i = 0; i < strlen(params[0]); i++) {
		if(strfind(params[i],".",true) == 0) null++;
	}
	if(null != 3) return SendClientMessage(playerid,COLOR_GREY,"Неверный IP адрес. Пример для бана подсети: 127.0.0. (Должны присутствовать 3 точки)");
	new query[128];
	format(query, sizeof(query), "INSERT INTO `banip` (`IP`,`admin`) VALUES ('%s','%s')",params,player_name[playerid]);
 	mysql_tquery(connects, query, "", "");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] забанил IP: %s",player_name[playerid],playerid,params);
	SendAdminMessage(CADMIN_INFO, string);
	WriteLog(LOG_BANIP,player_name[playerid],params,"блокировка IP");
	return true;
}
CMD:unrban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 18) return SendEsp(playerid, "/unrban [IP адрес]");
	new null;
	for(new i = 0; i < strlen(params[0]); i++) {
		if(strfind(params[i],".",true) == 0) null++;
	}
	if(null != 3) return SendClientMessage(playerid,COLOR_GREY,"Неверный IP адрес");
	new query[128];
	format(query,sizeof(query), "DELETE FROM `banip` WHERE `IP` = '%s'",params);
 	mysql_tquery(connects, query, "", "");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] разбанил IP: %s",player_name[playerid],playerid,params);
	SendAdminMessage(CADMIN_INFO, string);
	WriteLog(LOG_UNBANIP,player_name[playerid],params,"разблокировка IP");
	return true;
}
CMD:offban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new name[25],text[130],string[128],day,giveplayerid;
	if(sscanf(params, "p< >s[24]ds[128]", name,day,text)) return SendEsp(playerid, "/offban [Nick Name] [дни] [причина]");
	if(day > 30 || 1 > day) return ErrorMessage(playerid,"От 1 до 30 дней");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
	if(!IsBannedNameReg(name)) return ErrorMessage(playerid, "Данный игрок не зарегистрирован на сервере");
 	BanName(name, player_name[playerid], day, text);
	format(string, sizeof(string), "Администратор %s забанил %s на %d дней в оффлайне. Причина: %s",player_name[playerid], name, day, text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	gAdmin[playerid][ADMIN_BAN] ++;
	WriteLog(LOG_BAN,player_name[playerid],name,text);
	return true;
}
CMD:ioffban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new name[25],text[130],string[128],giveplayerid;
	if(sscanf(params, "p< >s[24]s[128]", name,text)) return SendEsp(playerid, "/ioffban [Nick Name] [причина]");
	if(!IsBannedNameReg(name)) return ErrorMessage(playerid, "Данный игрок не зарегистрирован на сервере");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
 	BanName(name, player_name[playerid], 1000, text);
	format(string, sizeof(string), "Администратор %s забанил %s в оффлайне. Причина: %s",player_name[playerid], name, text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	gAdmin[playerid][ADMIN_BAN] ++;
	WriteLog(LOG_BAN,player_name[playerid],name,text);
	return true;
}
CMD:offwarn(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new name[MAX_PLAYER_NAME],text[130],giveplayerid;
    if(sscanf(params, "s[24]s[128]", name, text)) return SendEsp(playerid, "/offwarn [Nick Name] [причина]");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не больше 30 символов");
    new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
    mysql_tquery(connects, query, "offwarn", "dss", playerid, name, text);
	return true;
}
CMD:unban(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new string[220];
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/unban [Nick Name]");
    if(!IsBannedName(params)) return  ErrorMessage(playerid, "Данный игрок не заблокирован");
    mysql_escape_string(params, UnbanName[playerid]);
   	new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0;

    format(string, sizeof(string), "SELECT * FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_index(0,1,NAME_PLAYER,24);
		cache_get_value_index(0,2,NAME_ADMIN,24);
		cache_get_value_index(0,3,BAN_REASON,24);
		cache_get_value_index_int(0,4,UNBAN_DATA);
		if(UNBAN_DATA > unix) {
			new date_ban[6];
			timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

			format(string,sizeof(string),"\
			"W"Заблокирован:\t"NO"%s\n\
			"W"Заблокировал:\t"ORANGE"%s\n\
			"W"Причина:\t\t"ORANGE"%s\n\
			"W"Разблокировка:\t"ORANGE"%02d/%02d/%02d %02d:%02d:%02d",
			NAME_PLAYER,NAME_ADMIN, BAN_REASON ,date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5]);
			D(playerid,D_UNBAN,DSM, ""P"Информация о забаненном",string,"Разбанить","Отмена");
		}
		else ErrorMessage(playerid, "Данный игрок не заблокирован");
	}
	cache_delete(result);
	return 1;
}
CMD:setfuel(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
	new giveplayerid;
 	if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/setfuel [кол-во литров]");
	if(giveplayerid < 10 || giveplayerid > 50) return ErrorMessage(playerid, "Литров от 10 до 50");
	new vehid = GetPlayerVehicleID(playerid);
	new string[128];
    format(string,sizeof(string),"Вы установили транспорту %d литров топлива",giveplayerid);
	SendOk(playerid,string);
	VehicleInfo[vehid][vFuel] = giveplayerid;
    return 1;
}
CMD:fin(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	for(new b = 1; b < gBusinessCount; b++) {
		if(PlayerToPoint(10.0, playerid, gBusiness[b][bizzX], gBusiness[b][bizzY], gBusiness[b][bizzZ])) {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", b);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,b);
		}
	}
	return 1;
}
CMD:aveh(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new car, color1, color2;
    if(sscanf(params,"ddd",car,color1,color2)) return SendEsp(playerid,"/aveh [CAR ID] [color] [color]");
	//if(car < 400 || car > 611) return ErrorMessage(playerid, "ID автомобиля от 400 до 611");
	if(color1 < 0 || color1 > 256 || color2 < 0 || color2 > 256) return ErrorMessage(playerid, "№ цвета автомобиля от 0 до 256");
	new null;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
		null++;
	}
	if(null >= 25) return ErrorMessage(playerid,"Нельзя создавать больше 25 админских машин");
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	X += 1.5;
	new vehicleid = A_AddStaticVehicleEx(car, X,Y,Z,A, color1, color2, -1,VEHICLE_TYPE_ADMIN);
    SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	SetVehicleNumberPlate(vehicleid, "Admin Car");
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	VehicleInfo[vehicleid][veX] = X;
	VehicleInfo[vehicleid][veY] = Y;
	VehicleInfo[vehicleid][veZ] = Z;
	VehicleInfo[vehicleid][vFuel] = 100.0;

	new string[90];
	format(string, sizeof(string), "[A] %s[%d] создал авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string,1);
	SendOk(playerid,"Чтобы удалить авто,введите: "W"/delveh");
	SendOk(playerid,"Чтобы удалить все админ авто,введите: "W"/alldelveh");
	return true;
}
CMD:veh(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new car, color1, color2;
    if(sscanf(params,"ddd",car,color1,color2)) return SendEsp(playerid,"/veh [CAR ID] [color] [color]");
	//if(car < 400 || car > 611) return ErrorMessage(playerid, "ID автомобиля от 400 до 611");
	if(color1 < 0 || color1 > 256 || color2 < 0 || color2 > 256) return ErrorMessage(playerid, "№ цвета автомобиля от 0 до 256");
	new null;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
		null++;
	}
	if(null >= 25) return ErrorMessage(playerid,"Нельзя создавать больше 25 админских машин");
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	X += 1.5;
	new vehicleid = A_CreateVehicle(car, X,Y,Z,A, color1, color2, -1,VEHICLE_TYPE_ADMIN);
    SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	SetVehicleNumberPlate(vehicleid, "Admin Car");
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	VehicleInfo[vehicleid][veX] = X;
	VehicleInfo[vehicleid][veY] = Y;
	VehicleInfo[vehicleid][veZ] = Z;
	VehicleInfo[vehicleid][vFuel] = 100.0;
	
	new string[90];
	format(string, sizeof(string), "[A] %s[%d] создал авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string,1);
	SendOk(playerid,"Чтобы удалить авто,введите: "W"/delveh");
	SendOk(playerid,"Чтобы удалить все админ авто,введите: "W"/alldelveh");
	return true;
}
CMD:delveh(playerid) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new vehicleid = GetPlayerVehicleID(playerid);
    if(VehicleInfo[vehicleid][vType] != VEHICLE_TYPE_ADMIN) return ErrorMessage(playerid,"Данный автомобиль нельзя удалить");
    A_DestroyVehicle(vehicleid);
    new string[90];
	format(string, sizeof(string), "[A] %s[%d] удалил авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string,1);
    SendOk(playerid,"Аавтомобиль удален");
    return 1;
}
CMD:alldelveh(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
		A_DestroyVehicle(i);
	}
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] удалил все созданные авто",player_name[playerid],playerid);
	AdmMSG(0xAFAFAFAA, string,1);
    SendOk(playerid,"Все админ авто удалены");
    return 1;
}
CMD:unwarn(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/unwarn [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PI[giveplayerid][pWarns] == 0) return ErrorMessage(playerid, "У игрока нет предупреждений");
    new query[128];
    format(query, sizeof(query), "DELETE FROM `warns` WHERE `name` = '%s' AND `warn` = '%d'", player_name[giveplayerid], PI[giveplayerid][pWarns]);
	mysql_tquery(connects, query, "", "");
	PI[giveplayerid][pWarns]--;
	UpdatePlayerData(giveplayerid,"pWarns",PI[giveplayerid][pWarns]);
	new string[92];
	format(string, sizeof(string), "[A] %s[%d] удалил 1 предупреждение игроку %s[%d]", player_name[playerid], playerid, player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);

	format(string, sizeof(string), "Администратор %s удалил Вам 1 предупреждение", player_name[playerid]);
	SendClientMessage(giveplayerid, CGOLD, string);
	return 1;
}
CMD:offunwarn(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/offunwarn [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Данный игрок онлайн");
    format(string, sizeof(string), "SELECT `pWarns` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
    new warns = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "pWarns", warns);
		if(warns == 0) {
			ErrorMessage(playerid, "Варны отсутствуют");
			cache_delete(result);
			return 1;
		}
		new query[128];
		format(query, sizeof query, "UPDATE `accounts` SET `pWarns` = '%d' WHERE `Name` = '%s' LIMIT 1", warns-1,params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] удалил предупреждения в оффлайн игроку %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	cache_delete(result);
	return 1;
}
CMD:weather(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/weather [id]");
	new string[128];
	format(string, sizeof(string), "[A] %s сменил номер погоды на %d", player_name[playerid], giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	SetWeather(giveplayerid);
	return true;
}
CMD:uval(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new reason[130],giveplayerid;
	if(sscanf(params, "ds[128]", giveplayerid, reason)) return SendEsp(playerid, "/uval [id] [причина]");
	if(strlen(reason)>40) return ErrorMessage(playerid,"Не больше 40 символов");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!PI[giveplayerid][pMember]) return ErrorMessage(playerid, "Игрок не состоит в организации");
	if(GetString(FI[GetTeamID(giveplayerid)][fLeader],player_name[giveplayerid])) return ErrorMessage(playerid,"Лидера можно снять только через /makeleader");

	static const f_str[] = "Администратор %s[%i] уволил Вас из организации. Причина: %s";
	new string[sizeof(f_str) +1 + (-2 + 25) + (-2 + 4) + (-2 + 31)];

	format(string, sizeof(string), f_str, player_name[playerid],playerid, reason);
	SendClientMessage(giveplayerid, 0xFF182DFF, string);

	format(string, sizeof(string), "[A] %s[%d] выгнал игрока %s[%d] из фракции",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);

	SetPlayerArmour(giveplayerid, 0);
	ResetPlayerWeapons(giveplayerid);

	if(start_work[giveplayerid]) {
		SendOk(giveplayerid,"Рабочий день окончен");
		start_work[giveplayerid] = 0;
		UpdatePlayerData(giveplayerid, "FracDuty", 0);
	}
	if(IsAGang(playerid)) EndCapt(playerid);
	add_jobinfo(giveplayerid,reason);
	PI[giveplayerid][pMember] = 0;
	PI[giveplayerid][pRank] = 0;
	PI[giveplayerid][pFracSkin] = 0;
	PI[giveplayerid][pLeader] = 0;
	SetPlayerColor(giveplayerid, TEAM_HIT_COLOR);
	if(PI[giveplayerid][pHouse] > 0) PI[giveplayerid][pSpawn] = 1;
	else PI[giveplayerid][pSpawn] = 0;
	skin_player(giveplayerid);
	SaveAccount(giveplayerid);
	WriteLog(LOG_UVAL,player_name[playerid],player_name[giveplayerid],reason);
	return 1;
}
CMD:ears(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	static const command_message[][] = {
		"Слушать смс ON",
		"Слушать смс OFF"
	};
	SendClientMessage(playerid, COLOR_REDD, command_message[GetPVarInt(playerid, "BigEarSms")]);
	SetPVarInt(playerid, "BigEarSms", !GetPVarInt(playerid, "BigEarSms"));
	return 1;
}
CMD:hpall(playerid,params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/hpall [радиус]");
    if(giveplayerid < 5 || giveplayerid > 15) return ErrorMessage(playerid, "Радиус от 5 до 15 метров");
    new Float:pos[3];
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
        if(IsPlayerInRangeOfPoint(i, params[0], pos[0], pos[1], pos[2])) {
            SetPlayerHealth(i, 100.0);
            SendOk(i, "Администратор восстановил Вам здоровье");
        }
	}
	SendOk(playerid, "Всем игрокам в указанном радиусе было восстановлено здоровье");
	return 1;
}
CMD:spall(playerid,params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/spall [радиус]");
    if(giveplayerid < 5 || giveplayerid > 15) return ErrorMessage(playerid, "Радиус от 5 до 15 метров");
    new Float:pos[3];
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
        if(IsPlayerInRangeOfPoint(i, params[0], pos[0], pos[1], pos[2])) {
            PlayerSpawn(i);
        }
	}
	SendOk(playerid, "Все игроки в указанном радиусе были заспавнены");
	return 1;
}
CMD:gettax(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;	
	new string[128];
	format(string, sizeof(string), "В казне штата: "ORANGE"$%i", FI[fWHITEHOUSE][fBank]);
	SendOk(playerid, string);
	return 1;
}
CMD:sban(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new day,text[130],string[415],giveplayerid;
	if(sscanf(params, "uds[128]",giveplayerid,day,text)) return SendEsp(playerid, "/sban [playerid] [дни] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
	if(strlen(text)>30) return ErrorMessage(playerid,"Не больше 30 символов");
	if(IsAIP(text)) return 1;
	if(PI[playerid][pAdmin] < PI[giveplayerid][pAdmin]) return 1;
	if(day > 30 || 1 > day) return ErrorMessage(playerid,"От 1 до 30 дней");
	format(string, 144, "[A] %s[%d] забанил игрока %s без лишнего шума на %d дней. Причина: %s",player_name[playerid],playerid, player_name[giveplayerid],day,text);
	AdmMSG(CADMIN_INFO,string,3);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PI[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	AdmMSG(CADMIN_INFO,string,3);
	BanName(player_name[giveplayerid], player_name[playerid], day, text);
	WriteLog(LOG_SBAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
			"W"Внимание! Ваш аккаунт был "NO"заблокирован"W"\n\n\
			"W"Заблокировал: "NO"%s\n\
			"W"Дни: "ORANGE"%d\n\
			"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
			"W"Причина: "ORANGE"%s\n\n\
			"W"Если вы считаете, что это ошибка, сделайте скриншот(F8) данного окна,\n\
			иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day,days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрыть", "");
	Kick(giveplayerid);
	return true;
}
CMD:settime(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/settime [час] (0-23)");
	SetWorldTime(giveplayerid);
	return true;
}
alias:gun("givegun");
CMD:gun(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new gun,ammo,giveplayerid;
    if(sscanf(params, "udd",giveplayerid,gun,ammo)) return SendEsp(playerid, "/gun [id] [id оружия] [патроны]");
	if(ammo < 1 || ammo > 9999) return ErrorMessage(playerid, "Нельзя меньше 1 или больше 9999 патронов!");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(!PI[giveplayerid][pAdmin] && (gun != 24 && gun != 25 && gun != 29 && gun != 30 && gun != 31)) return ErrorMessage(playerid,"Данное оружие доступно только администрации");
	AC_GivePlayerWeapon(giveplayerid,gun,ammo);
	
	static const f_str[] = "Оружие было выдано игроку %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
	format(string,sizeof(string),f_str, player_name[giveplayerid]);
	SendOk(playerid,string);

	new str[128];
	format(str, sizeof(str), "[A] %s[%d] выдал оружие [gun %d | patron %d] игроку %s[%d]",player_name[playerid],playerid,gun,ammo,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, str,1);
	WriteLog(LOG_GUN,player_name[playerid],player_name[giveplayerid],"выдача оружия");
	return true;
}
//-----------------------------------------[5 уровень]-------------------------------------------//
CMD:fakename(playerid, params[]) {
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Namers[MAX_PLAYER_NAME];
	GetPlayerName(playerid,Namers,MAX_PLAYER_NAME);
	if(!GetString(player_name[playerid],Namers)) {
		SetPlayerName(playerid,player_name[playerid]);
		return 1;
	}
   	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/fakename [Nick Name]");
	SetPlayerName(playerid,params);
	SendOk(playerid,"Имя успешно изменено, чтобы вернуть настоящее, введите команду повторно");
	return 1;
}

CMD:amusic(playerid, params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new nonf;
	if(sscanf(params, "f",nonf)) return SendEsp(playerid, "/amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(nonf == 0) {
		Sounds = 0;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			StopAudioStreamForPlayer(i);
			UseSound[i] = 0;
		}
		return SendOk(playerid, "Музыка отключена");
	}
	new path[150];
	if(sscanf(params, "ds[150]",params[0],path)) return SendEsp(playerid, "/amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(params[0] < 1 || params[0] > 300) return ErrorMessage(playerid,"От 1 до 300");
	format(stream, sizeof(stream),"%s",path);
	rads = params[0];
	Sounds = 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	streampos[0] = x1;
	streampos[1] = y1;
	streampos[2] = z1;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		UseSound[i] = 0;
	}
	SendOk(playerid, "Музыка включена");
	return 1;
}
CMD:tempzone(playerid, params[]) {
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/tempzone [банда]");
	if(giveplayerid != fBALLAS && giveplayerid != fVAGOS && giveplayerid != fGROVE && giveplayerid != fAZTEC && giveplayerid != fRIFA) return ErrorMessage(playerid,"Банда указана не верно");
	for(new i = 0; i < TOTALGZ; i++) {
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
			GZInfo[i][gFrakVlad] = giveplayerid;
			GangZoneStopFlashForAll(GZInfo[i][gZone]);
			GangZoneHideForAll(GZInfo[i][gZone]);
			GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
			new query[128];
			format(query,sizeof(query),"UPDATE `"TABLE_GANGZONE"` SET `gang_owner` = '%i' WHERE `id` = %i",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
 			mysql_tquery(connects, query, "", "");
			return true;
		}
	}
	return true;
}
CMD:getdonate(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/getdonate [ник]");
	new query[156];
	format(query, sizeof(query), "SELECT donatemoney FROM accounts WHERE Name = '%s'", params);
	mysql_tquery(connects, query, "OnPlayerDonateCheck", "is", playerid, params);
	return 1;
}
CMD:respv(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new Float: position[3],Float:rad;
	if(sscanf(params, "f", rad)) return SendEsp(playerid, "/respv [радиус]");
	if(rad > 100 || rad < 2) return ErrorMessage(playerid, "Радиус от 2 до 100");
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		GetVehiclePos(i,position[0],position[1],position[2]);
		if(IsPlayerInRangeOfPoint(playerid,rad,position[0],position[1],position[2])) SetVehicleToRespawn(i);
	}
	SendOk(playerid, "Машины в выбранном радиусе заспавнены");
	return true;
}
//-----------------------------------------[6 уровень]-------------------------------------------//
CMD:realodbans(playerid, params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	SendRconCommand("reloadbans");
	SendOk(playerid, "Бан-лист перезагружен");
	return true;
}
CMD:saveall(playerid, params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    SaveServer();
	SendOk(playerid, "Все данные сохранены");
	return true;
}
CMD:restartservera(playerid,params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	SendClientMessageToAll(COLOR_YELLOW, "Через две минуты произойдет автоматическая перезагрузка сервера");
	SendClientMessageToAll(COLOR_YELLOW, "Просьба закончить все свои работы. Спасибо за понимание");
	SetTimer("OnServerRestarting", 100000, false);
	return true;
}
CMD:delacc(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(sscanf(params,"s[128]",params[0])) return SendEsp(playerid, "/delacc [Nick Name]");
	if(!strlen(params[0])) {
	    if(GetPVarInt(playerid, "delstatus")) {
	        SendClientMessage(playerid, COLOR_YELLOW, "Вы отменили удаление аккаунта");
            DeletePVar(playerid, "delstatus");
	    }
	    else SendEsp(playerid, "/delacc [Nick Name]");
	}
	else {
		new query[128];
		format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s'", params[0]);
	    mysql_tquery(connects, query, "CheckDelAcc", "ds", playerid, params[0]);
	}
	return true;
}
//-----------------------------------------[5 уровень]-------------------------------------------//
cmd:setvw(playerid, params[])
{
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SendEsp(playerid,"/setvw [id игрока] [id вирт.мира]");
    if (GetPlayerState(playerid) == 2)
    {
		SetVehicleVirtualWorld(GetPlayerVehicleID(params[0]), params[1]);
		
		if(GetPlayerInterior(playerid) == 82)
		{
		    new businessid;
		    
			if(params[1] == 1) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 2) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 3) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 4) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 5) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 2, businessid = 70;
			else if(params[1] == 6) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 3, businessid = 71;

			TI[playerid][tTPpick] = true;
			
			gBusiness[businessid][bizzVisitors]++;
			
			TI[playerid][tSelectedBusinessID] = businessid;
		}

		new string1[1024];
	    format(string1, sizeof(string1), "\
			Вы установили игроку %s[%d] с транспортом №%d виртуальный мир {FFFFFF}№%d.",GetName(params[0]),params[0], GetPlayerVehicleID(params[0]), params[1]);

	    SendClientMessage(playerid, COLOR_GREY, string1);

	    format(string1, sizeof(string1), "\
			[A] %s [%d] установил игроку %s [%d] с транспортом №%d виртуальный мир №%i\
			", GetName(playerid), playerid, GetName(params[0]), params[0], GetPlayerVehicleID(params[0]), params[1]);

		SendAdminMessage(COLOR_GREY, string1);

		format(string1, sizeof(string1), "Администратор %s установил Вам и вашему транспорту виртуальный мир №%i", GetName(playerid), params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string1);
	}
	else
	{
		SetPlayerVirtualWorld(params[0],params[1]);
		
		if(GetPlayerInterior(playerid) == 82)
		{
		    new businessid;

			if(params[1] == 1) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 2) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 3) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 4) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 5) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 2, businessid = 70;
			else if(params[1] == 6) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 3, businessid = 71;

			TI[playerid][tTPpick] = true;

			gBusiness[businessid][bizzVisitors]++;
			
			TI[playerid][tSelectedBusinessID] = businessid;
		}

		new string1[1024];
	    format(string1, sizeof(string1), "\
			Вы установили игроку %s[%d] с транспортом %d виртуальный мир {FFFFFF}№%d.\
			",GetName(params[0]),params[0],GetPlayerVehicleID(params[0]),params[1]);

	    SendClientMessage(playerid, COLOR_GREY, string1);

	    format(string1, sizeof(string1), "[A] %s [%d] установил игроку %s [%d] виртуальный мир №%i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
		SendAdminMessage(COLOR_GREY, string1);

		format(string1, sizeof(string1), "Администратор %s установил Вам виртуальный мир №%i", GetName(playerid), params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string1);
    }
	return 1;
}
cmd:setint(playerid, params[])
{
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SendEsp(playerid,"/setint [id игрока] [id интерьера]");
    if (GetPlayerState(playerid) == 2)
	{
		LinkVehicleToInterior(GetPlayerVehicleID(params[0]), params[1]);
		
		if(GetPlayerInterior(playerid) == 82)
		{
		    new businessid;

			if(params[1] == 1) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 2) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 3) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 4) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 5) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 2, businessid = 70;
			else if(params[1] == 6) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 3, businessid = 71;

			TI[playerid][tTPpick] = true;

			gBusiness[businessid][bizzVisitors]++;
			
			TI[playerid][tSelectedBusinessID] = businessid;
		}

		new string1[1024];
	    format(string1, sizeof(string1), "\
			Вы установили игроку %s[%d] с транспортом %d интерьер {FFFFFF}№%d.\
			",GetName(params[0]),params[0],GetPlayerVehicleID(params[0]),params[1]);

	    SendClientMessage(playerid, COLOR_BLUE, string1);

	    format(string1, sizeof(string1), "\
			[A] %s [%d] установил %s [%d] c транспортом №%d интерьер на №%i\
			", GetName(playerid), playerid, GetName(params[0]), params[0], GetPlayerVehicleID(params[0]), params[1]);

		SendAdminMessage(COLOR_GREY, string1);

		format(string1, sizeof(string1), "Администратор %s установил Вам и вашему транспорту интерьер №%i", GetName(playerid), params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string1);
	}
	else
	{
		SetPlayerInterior(params[0],params[1]);
		
		if(GetPlayerInterior(playerid) == 82)
		{
		    new businessid;

			if(params[1] == 1) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 2) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 0, businessid = 68;
			else if(params[1] == 3) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 4) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(params[1] == 5) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 2, businessid = 70;
			else if(params[1] == 6) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 3, businessid = 71;

			TI[playerid][tTPpick] = true;

			gBusiness[businessid][bizzVisitors]++;
			
			TI[playerid][tSelectedBusinessID] = businessid;
		}

		new string1[1024];
	    format(string1, sizeof(string1), "Вы установили игроку %s[%d] интерьер {FFFFFF}№%d.",GetName(params[0]),params[0],params[1]);
	    SendClientMessage(playerid, COLOR_GREY, string1);

	    format(string1, sizeof(string1), "[A] %s [%d] установил %s [%d] интерьер на №%i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
		SendAdminMessage(COLOR_GREY, string1);

	    format(string1, sizeof(string1), "Администратор %s установил Вам интерьер №%i", GetName(playerid), params[1]);
		SendClientMessage(params[0], COLOR_BLUE, string1);
    }
	return 1;
}
alias:tpcoord("tpcor", "tpcord", "tpcoor");
cmd:tpcoord(playerid,params[])
{
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
    new Float:px,Float:py,Float:pz,int,vw,string1[1024];
    if(sscanf(params,"p<,>fffdd",px,py,pz,int,vw)) return SendEsp(playerid,"/tpcoord <x,y,z,int,vw>");
    if(GetPlayerState(playerid) == 2)
	{
	    new car = GetPlayerVehicleID(playerid);
		SetVehiclePos(car, px, py, pz);
		LinkVehicleToInterior(car, int);
		SetVehicleVirtualWorld(car, vw);
		
		if(GetPlayerInterior(playerid) == 82)
		{
		    new businessid;

			if(vw == 1) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0, businessid = 68;
			else if(vw == 2) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 0, businessid = 68;
			else if(vw == 3) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(vw == 4) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(vw == 5) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 2, businessid = 70;
			else if(vw == 6) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 3, businessid = 71;

			TI[playerid][tTPpick] = true;

			gBusiness[businessid][bizzVisitors]++;
			
			TI[playerid][tSelectedBusinessID] = businessid;
		}

		format(string1, sizeof(string1), "Вы были телепортированы вместе с машиной №%d на координаты {FFFFFF}X:%f, Y:%f, Z:%f, Interior:%d, VirtualWorld:%d",car,px,py,pz,int,vw);
	}
	else
	{
		SetPlayerPosAC(playerid, px, py, pz, vw, int);
		
		if(GetPlayerInterior(playerid) == 82)
		{
		    new businessid;

			if(vw == 1) SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0, businessid = 68;
			else if(vw == 2) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 0, businessid = 68;
			else if(vw == 3) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(vw == 4) SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 1, businessid = 69;
			else if(vw == 5) SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 2, businessid = 70;
			else if(vw == 6) SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 3, businessid = 71;

			TI[playerid][tTPpick] = true;

			gBusiness[businessid][bizzVisitors]++;
			
			TI[playerid][tSelectedBusinessID] = businessid;
		}

		format(string1, sizeof(string1), "Вы были телепортированы на координаты {FFFFFF}X:%f, Y:%f, Z:%f, Interior:%d, VirtualWorld:%d",px,py,pz,int,vw);
	}
    SendClientMessage(playerid, COLOR_GREY, string1);
    return 1;
}
alias:getinterior("getint", "interior");
cmd:getinterior(playerid)
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    new world[32];
    format(world, sizeof(world), "Ваш интерьер: %d", GetPlayerInterior(playerid));//Узнаем виртуальный мир и используем строчку ниже в качестве отправки сообщения.
    SendClientMessage(playerid,0xFFFFFFFF,world);//Пишем игроку playerid - format - color, text(world)
    //printf("Interior %d",GetPlayerInterior(playerid)); //Узнаем мир в котором вы находитесь, и отправляем печать в server log
    return 1;
}
alias:getworld("getvw", "world");
cmd:getworld(playerid)
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    new world[32];
    format(world, sizeof(world), "Ваш виртуальный мир: %d", GetPlayerVirtualWorld(playerid));//Узнаем виртуальный мир и используем строчку ниже в качестве отправки сообщения.
    SendClientMessage(playerid,0xFFFFFFFF,world);//Пишем игроку playerid - format - color, text(world)
    //printf("Wirtual World %d",GetPlayerVirtualWorld(playerid)); //Узнаем мир в котором вы находитесь, и отправляем печать в server log
    return 1;
}

cmd:gotopickup(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotopickup [id]");
    
    if(params[0] < 1 || params[0] > gEnterCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID пикапа не может быть меньше 1 или больше %i", gEnterCount);
	    return 1;
	}

	SetPlayerPosAC(playerid, e_info[params[0]][e_x], e_info[params[0]][e_y], e_info[params[0]][e_z], 0, 0);
	SetPlayerFacingAngle(playerid, e_info[params[0]][e_r]);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к пикапу №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotoexitpickup(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotoexitpickup [id]");

    if(params[0] < 1 || params[0] > gEnterCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID пикапа не может быть меньше 1 или больше %i", gEnterCount);
	    return 1;
	}
	
	if(e_info[params[0]][e_types] == 3)
	{
	    SetPlayerPosAC(playerid, e_info[params[0]][v_x], e_info[params[0]][v_y], e_info[params[0]][v_z], playerid+1, e_info[params[0]][e_int]);
		SetPlayerFacingAngle(playerid, e_info[params[0]][v_r]);
	}
	else
	{
	    SetPlayerPosAC(playerid, e_info[params[0]][v_x], e_info[params[0]][v_y], e_info[params[0]][v_z], e_info[params[0]][e_world], e_info[params[0]][e_int]);
		SetPlayerFacingAngle(playerid, e_info[params[0]][v_r]);
	}

	new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к пикапу выхода №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gpickup(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new pickupstr[1024], pick;

    if(sscanf(params,"d",pick)) return SendEsp(playerid, "/gpickup [id]");

    if(pick < 0 || pick > sizeof(gPickup))
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID пикапа не может быть меньше 0 или больше %i", sizeof(gPickup));
	    return 1;
	}

	if(gPickup[pick][0] == 0.0 && gPickup[pick][1] == 0.0 && gPickup[pick][2] == 0.0) return ErrorMessage(playerid, "Не доступно!");

	SetPlayerPosAC(playerid, gPickup[pick][0], gPickup[pick][1],gPickup[pick][2], gPickupData[pick][1],gPickupData[pick][0]);

    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к пикапу №%d", pick);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gmoved(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new pickupstr[1024], moved;

    if(sscanf(params,"d",moved)) return SendEsp(playerid, "/gmoved [id]");

    if(moved < 0 || moved > sizeof(moved_info))
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID пикапа не может быть меньше 0 или больше %i", sizeof(moved_info));
	    return 1;
	}
	
	if(moved_info[moved][moved_vw] == DELLWORLD) return ErrorMessage(playerid, "Не доступно!");

    if(moved < 0 || moved <= 44)
	{
		if(moved_info[moved][moved_vw] == -1)
		{
		    SetPlayerPosAC(playerid,moved_info[moved][movedPosX]-5,moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+1,0,0);
		}
		else
		{
			SetPlayerPosAC(playerid,moved_info[moved][movedPosX]-5,moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+1,moved_info[moved][moved_vw],0);
		}
	}
	else if(moved >= 45 || moved <= 53)
	{
	    if(moved_info[moved][moved_vw] == -1)
		{
		    SetPlayerPosAC(playerid,moved_info[moved][movedPosX]-5,moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+1,0,99);
		}
		else
		{
			SetPlayerPosAC(playerid,moved_info[moved][movedPosX]-5,moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+1,moved_info[moved][moved_vw],99);
		}
	}
	
	SetCameraBehindPlayer(playerid);

	OnPlayerUpdateLoadingMode(playerid);

    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к воротам №%d", moved);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}
cmd:checkbtime(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

	new bizid;
    if(sscanf(params,"d",bizid)) return SendEsp(playerid, "/checkbtime [bizid]");

	SendMes(playerid,0xFFFFFFFF,"Время слета бизнеса: %d дней", GetElapsedTime(gBusiness[bizid][bizzDay], gettime(), CONVERT_TIME_TO_DAYS));
    return 1;
}

cmd:checkocob(playerid)
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    
	SendMes(playerid,0xFFFFFFFF,"Вы владеете домом в особняке под: №%d.", IsAHouseNumber(playerid));
    return 1;
}

cmd:gtppick(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new pickupstr[1024], tp;

    if(sscanf(params,"d",tp)) return SendEsp(playerid, "/gtppick [id]");

    if(tp < 0 || tp > sizeof(gTeleportsToD))
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID пикапа не может быть меньше 0 или больше %i", sizeof(gTeleportsToD));
	    return 1;
	}
	
	if(gTeleportsToD[tp][tpEnterWorld] == DELLWORLD || gTeleportsToD[tp][tpExitWorld] == DELLWORLD) return ErrorMessage(playerid, "Не доступно!");

	SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],
		gTeleportsToD[tp][tpExitWorld],gTeleportsToD[tp][tpExitInt]);

	SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);
	
	SetCameraBehindPlayer(playerid);
	
	OnPlayerUpdateLoadingMode(playerid);

    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к телепорт пикапу №%d", tp);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:garea(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new areastr[1024], area;

    if(sscanf(params,"d",area)) return SendEsp(playerid, "/garea [id]");

    if(area < 1 || area > TotalArea)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID ареи не может быть меньше 1 или больше %i", TotalArea);
	    return 1;
	}
	SetPlayerPosAC(playerid, AreaInfo[area][POS_X], AreaInfo[area][POS_Y], AreaInfo[area][POS_Z], AreaInfo[area][WORLD], AreaInfo[area][INTERIOR]);

    format(areastr, sizeof(areastr), "Вы телепортировались к арее №%d", area);
	SendClientMessage(playerid,0xFFFFFFFF,areastr);
    return 1;
}

cmd:gactor(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new actorstr[1024], actornum;

    if(sscanf(params,"d",actornum)) return SendEsp(playerid, "/gactor [id]");

    if(actornum < 1 || actornum > TotalActor)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID актера не может быть меньше 1 или больше %i", TotalActor);
	    return 1;
	}
	SetPlayerPosAC(playerid, ActorInfo[actornum][POS_X]-5, ActorInfo[actornum][POS_Y], ActorInfo[actornum][POS_Z], ActorInfo[actornum][WORLD], 0);

    format(actorstr, sizeof(actorstr), "Вы телепортировались к актеру №%d", actornum);
	SendClientMessage(playerid,0xFFFFFFFF,actorstr);
    return 1;
}

cmd:spactor(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new actorstr[1024], actornum;

    if(sscanf(params,"d",actornum)) return SendEsp(playerid, "/spactor [id]");

	if(actornum < 0 || actornum > TotalActor)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID актера не может быть меньше 0 или больше %i", TotalActor);
	    return 1;
	}
	SetActorPos(actor[actornum], ActorInfo[actornum][POS_X], ActorInfo[actornum][POS_Y], ActorInfo[actornum][POS_Z]);

    format(actorstr, sizeof(actorstr), "Вы зареспавниили актера №%d", actornum);
	SendClientMessage(playerid,0xFFFFFFFF,actorstr);
    return 1;
}

cmd:spactors(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new actorstr[1024], timer;

    if(sscanf(params,"d",timer)) return SendEsp(playerid, "/spactors [время]");

	if(timer < 5 || timer > 30) return ErrorMessage(playerid, "От 5 до 30 секунд");

    format(actorstr, sizeof(actorstr), "Все актеры будут зареспавнены через %i секунд", timer);
	SendClientMessage(playerid,0xFFFFFFFF,actorstr);

	SetTimerEx("SpActors",timer*1000,false,"i",playerid);
    return 1;
}

CMD:alcotraz(playerid) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	PI[playerid][pSearch] = 5;
	PI[playerid][pJailTime] = 3600;
	PI[playerid][pJail] = 4;
	PlayerSpawn(playerid);
	return 1;
}
CMD:svrnt(playerid) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[512];
	GetNetworkStats(string, sizeof string);
	D(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, !"Server Network Stats", string, !"x", !"");
	return true;
}
CMD:testfab(playerid)
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    
   	new tp = 68;

	TI[playerid][tClothesWork][0] = 1;
	TI[playerid][tClothesWork][1] = 1;
	
	SendOk(playerid,"Можете приступать к работе");
	
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawShow(playerid,work_td[playerid][i]);
	}
	PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");

	OnPlayerUpdateLoadingMode(playerid);

	SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],
		gTeleportsToD[tp][tpExitWorld],gTeleportsToD[tp][tpExitInt]);

	SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);

	SetCameraBehindPlayer(playerid);
	return 1;
}
CMD:testexitfab(playerid)
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    
    new tp = 69;

	TI[playerid][tClothesWork][0] = 0;
	TI[playerid][tClothesWork][1] = 0;

	if(GetPVarInt(playerid,"zp_clothes")) PI[playerid][pSalary] += GetPVarInt(playerid,"zp_clothes");

	SendClientMessage(playerid,CGOLD,"Деньги будут зачислены на Ваш банковский счёт во время зарплаты (PayDay)");

	DeletePVar(playerid,"zp_clothes");

	UpdatePlayerData(playerid,"salary",PI[playerid][pSalary]);

	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);

	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	
	OnPlayerUpdateLoadingMode(playerid);

	SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],
		gTeleportsToD[tp][tpExitWorld],gTeleportsToD[tp][tpExitInt]);

	SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);

	SetCameraBehindPlayer(playerid);
	return 1;
}
/*
CMD:test100(playerid) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	PI[playerid][pProgress] = 300;
	for(new i; i < 18;i++) {
		if(alcatraz[i][alc_posRZ] != 0) MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX]+1.5,alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
		else MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX]-1.5,alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
	}
	SetPlayerAttachedObject(playerid,7, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	FI[GetTeamID(playerid)][fPoints] = 5000;
	PI[playerid][pJob] =  5;
	return 1;
}
CMD:test101(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	for(new i; i < 18;i++) {
		MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX],alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
	}
	PI[playerid][pJob] = 6;
	return 1;
}
*/
CMD:golod(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(time_gamegolod || golod_start) return ErrorMessage(playerid,"Голодные игры уже запущены");
	open_gamegolod = 999;
	return 1;
}
CMD:paint(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(time_registr_game || game_start) return ErrorMessage(playerid,"Сумасшедшие войны уже запущены");
	open_game = 999;
	return 1;
}
CMD:race(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(time_registr_race_lv || race_lv_start) return ErrorMessage(playerid,"Безумные гонки уже запущены");
	open_race_lv = 999;
	return 1;
}
CMD:test4(playerid) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	TI[playerid][tAlcotraz][2] = 1;
	TI[playerid][tAlcotraz][1] = 1;
	return 1;
}
CMD:test2(playerid) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	fork_start();
	return 1;
}

cmd:startgamedm(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    
	//game_dm();

	time_registr_game = 0;
    time_play_game = 300;
    game_start = 1;
    open_game = 0;
    player_to_game[playerid] = 1;
  	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Cумасшедшие Войны начались!");
 	foreach(new i:Player) {
 			   	if(!TI[i][tLogin]) continue;
		    	if(player_to_game[i] == 1) {
		    	    kills_player_game[i] = 0;
		    	    new random_spawn = random(sizeof spawns_pos_game);
					SetPlayerPosAC(i, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,0);
					SetPlayerFacingAngle(i, spawns_pos_game[random_spawn][4]);
					SetPlayerHealth(i,100.0);
					new random_weapon = random(sizeof weapon_id_game);
					AC_GivePlayerWeapon(i, weapon_id_game[random_weapon], 999);
					for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
					new string[24];
					format(string,sizeof(string),"$%d",money_in_game);
					TextDrawSetString(td_game[5], string);
					if(TI[i][tCashDM]) TI[i][tCashDM] = 0;
					SetPlayerColor(i,0xBC2C2CFF);
				}
	}

	SendClientMessage(playerid,0xFFFFFFFF,"Вы запустили мероприятие сумасшедшие войны");
    return 1;
}

cmd:startgolod(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    
	//golod_game();

	open_gamegolod = 3;
	time_gamegolod = 10;
	player_to_golod[playerid] = 1;
 	player_to_golod_id[playerid] = 5;
	
 	if((open_gamegolod == 3 && time_gamegolod == 10)) {
	    	new picks = -1;
	    	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Голодные игры начались");
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin]) continue;
		    	if(player_to_golod[i] == 1) {
		    		if(TI[i][tAFK] >= 4) {
		    			PlayerSpawn(i);
		    			ErrorMessage(i,"Вы были исключены из игры по причине - АФК");
		    		}
				    open_gamegolod = 0;
					if(TI[i][tCashRace]) TI[i][tCashRace] = 0;
	                time_golod = 0;
	                golod_start = 1;
		    	    SendOk(i, "До старта игры 10 секунд, советуем не покидать место до начала игры");

					SetPlayerColor(i,0x56FB4EFF);
	                DelGun(i);
					SetPlayerPosAC(i,spawns_pos_golod[player_to_golod_id[i]-1][0],spawns_pos_golod[player_to_golod_id[i]-1][1],spawns_pos_golod[player_to_golod_id[i]-1][2],202,0);
					SetCameraBehindPlayer(i);
					SetPlayerHealth(i, 50);
					SetPlayerArmour(i, 0);
					TogglePlayerControllable(i, false);
					picks++;

					pickups_game_golod[picks] = CreateDynamicPickup(11745,23,pickup_game_golod[player_to_golod_id[i]-1][0],pickup_game_golod[player_to_golod_id[i]-1][1],pickup_game_golod[player_to_golod_id[i]-1][2],-1,-1);

	                for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
					new string[24];
					format(string,sizeof(string),"$%d",money_in_golod);
					TextDrawSetString(td_game[5], string);
				}
			}
	}

	SendClientMessage(playerid,0xFFFFFFFF,"Вы запустили мероприятие голодные игры");
    return 1;
}



cmd:gexitpickup(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gexitpickup [id]");

    if(params[0] < 1 || params[0] > gEnterCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID пикапа не может быть меньше 1 или больше %i", gEnterCount);
	    return 1;
	}

	if(e_info[params[0]][e_types] == 3)
	{
	    SetPlayerPosAC(playerid, e_info[params[0]][v_x], e_info[params[0]][v_y], e_info[params[0]][v_z], playerid+1, e_info[params[0]][e_int]);
		SetPlayerFacingAngle(playerid, e_info[params[0]][v_r]);
	}
	else
	{
	    SetPlayerPosAC(playerid, e_info[params[0]][v_x], e_info[params[0]][v_y], e_info[params[0]][v_z], e_info[params[0]][e_world], e_info[params[0]][e_int]);
		SetPlayerFacingAngle(playerid, e_info[params[0]][v_r]);
	}

	new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к пикапу выхода №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotohouse(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotohouse [id]");

    if(params[0] < 1 || params[0] > gHouseCount-1)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID Дома не может быть меньше 1 или больше %i", gHouseCount-1);
	    return 1;
	}

	SetPlayerPosAC(playerid, gHouses[params[0]][houseX], gHouses[params[0]][houseY], gHouses[params[0]][houseZ], 0, 0);
	SetPlayerFacingAngle(playerid, gHouses[params[0]][houseR]);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к дому №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotobiz(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new bizid, bint, pickupstr[1024], string[500];
    if(sscanf(params,"d",bizid)) return SendEsp(playerid, "/gotobiz [id]");

    if(!(1 <= bizid <= gBusinessCount-1)) {
		format(string, sizeof(string), "От 1 до %d", gBusinessCount-1);
		ErrorMessage(playerid, string);
		return 1;
	}
    bint = gBusiness[bizid][bizzBint];

	if(gBusiness[bizid][bizzType] == 15)
	{
	    SetPlayerPosAC(playerid, gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ], gBusiness[bizid][bizzWorld],gBints[bint][bintInterior]);
		SetPlayerFacingAngle(playerid, gBusiness[bizid][bizzR]);
	}
	else
	{
		SetPlayerPosAC(playerid, gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ], 0, 0);
		SetPlayerFacingAngle(playerid, gBusiness[bizid][bizzR]);
	}

	GameTextForPlayer(playerid, "~w~BIZZ", 5000, 1);

    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к бизнесу №%d", bizid);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:bint(playerid,params[])
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;

	new bizzid;
	if(sscanf(params,"d", bizzid)) return SendEsp(playerid, "/bint [номер бизнеса]");

	if(!(1 <= bizzid <= gBusinessCount-1))
	{
	    new strin[100];
	    format(strin, sizeof(strin), ""cError"ID Бизнеса не должно быть меньше 1 и не больше %d!", gBusinessCount-1);
		ErrorMessage(playerid, strin);
	}
	else
	{
	    if(gBusiness[bizzid][bizzType] == 15)
	    {
	        new bizint = gBusiness[bizzid][bizzBint];

		    SetPlayerPosAC(playerid,gBints[bizint][bintX],gBints[bizint][bintY],gBints[bizint][bintZ], gBusiness[bizzid][bizzWorld], gBints[bizint][bintInterior]);
			SetPlayerFacingAngle(playerid, gBints[bizint][bintR]);

			TI[playerid][tVirtualWorld] = gBusiness[bizzid][bizzWorld];
			TI[playerid][tInterior] = gBints[bizint][bintInterior];

			GameTextForPlayer(playerid, "~w~BINT", 5000, 1);

			new string1[128];
		 	format(string1, sizeof(string1), "Вы телепортировались к интерьеру №%d бизнеса №%d.",bizint, bizzid);
		    SendClientMessage(playerid, COLOR_BLUE, string1);

		    format(string1, sizeof(string1), "[A] %s [%d] телепортировался к интерьеру №%d бизнеса №%i", GetName(playerid), playerid, bizint, bizzid);
			SendAdminMessage(COLOR_GREY, string1);
		}
		else
		{
		    new bizint = gBusiness[bizzid][bizzBint];

		    SetPlayerPosAC(playerid,gBints[bizint][bintX],gBints[bizint][bintY],gBints[bizint][bintZ], gBusiness[bizzid][bizzWorld], gBints[bizint][bintInterior]);
			SetPlayerFacingAngle(playerid, gBints[bizint][bintR]);

			TI[playerid][tVirtualWorld] = gBusiness[bizzid][bizzWorld];
			TI[playerid][tInterior] = gBints[bizint][bintInterior];

			GameTextForPlayer(playerid, "~w~BINT", 5000, 1);

			new string1[128];
		 	format(string1, sizeof(string1), "Вы телепортировались к интерьеру №%d бизнеса №%d.",bizint, bizzid);
		    SendClientMessage(playerid, COLOR_BLUE, string1);

		    format(string1, sizeof(string1), "[A] %s [%d] телепортировался к интерьеру №%d бизнеса №%i", GetName(playerid), playerid, bizint, bizzid);
			SendAdminMessage(COLOR_GREY, string1);
		}
	}
	return 1;
}
cmd:hint(playerid,params[])
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
	new houseid;
	if(sscanf(params,"d",houseid)) return SendEsp(playerid, "/hint [номер дома]");
    if(!(1 <= houseid <= gHouseCount-1))
	{
	    new strin[100];
	    format(strin, sizeof(strin), ""cError"ID Дома не должно быть меньше 1 и не больше %d!", gHouseCount-1);
		ErrorMessage(playerid, strin);
	}
	else
	{
     	new houseint = gHouses[houseid][houseHint];

		SetPlayerPosAC(playerid, hinterior_info[houseint][h_pos_exit][0], hinterior_info[houseint][h_pos_exit][1], hinterior_info[houseint][h_pos_exit][2], houseid,
			hinterior_info[houseint][h_interior]);

		SetPlayerFacingAngle(playerid,hinterior_info[houseint][h_pos_exit][3]);

		TI[playerid][tVirtualWorld] = houseid;
		TI[playerid][tInterior] = hinterior_info[houseint][h_interior];

		GameTextForPlayer(playerid, "~w~HINT", 5000, 1);

		new string1[128];
 		format(string1, sizeof(string1), "Вы телепортировались к интерьеру №%d дома №%d.",houseint, houseid);
	  	SendClientMessage(playerid, COLOR_BLUE, string1);

		format(string1, sizeof(string1), "[A] %s [%d] телепортировался к интерьеру №%d дома №%i", GetName(playerid), playerid, houseint, houseid);
		SendAdminMessage(COLOR_GREY, string1);
	}
	return 1;
}
alias:tpgarage("garage", "gid", "gotogarage", "getgarage");
cmd:tpgarage(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

	new garageid;
	if(sscanf(params, "d", garageid)) return SendEsp(playerid, "/tpgarage [номер гаража]");

	if(!(1 <= garageid <= gHouseCount-1))
	{
	    new strin[100];
	    format(strin, sizeof(strin), ""cError"ID Гаража не должно быть меньше 1 и не больше %d!", gHouseCount-1);
		ErrorMessage(playerid, strin);
	}
	else
	{
		SetPlayerPosAC(playerid, gHouses[garageid][houseParkX],gHouses[garageid][houseParkY], gHouses[garageid][houseParkZ], 0, 0);
		SetPlayerFacingAngle(playerid,gHouses[garageid][houseParkR]);
		SetCameraBehindPlayer(playerid);
		OnPlayerUpdateLoadingMode(playerid);

		TI[playerid][tVirtualWorld] = 0;
		TI[playerid][tInterior] = 0;

		GameTextForPlayer(playerid, "~w~GID", 5000, 1);

		new string1[128];
 		format(string1, sizeof(string1), "Вы телепортировались к гаражу дома №%d.", garageid);
	  	SendClientMessage(playerid, COLOR_BLUE, string1);

		format(string1, sizeof(string1), "[A] %s [%d] телепортировался к гаражу дома №%i", GetName(playerid), playerid, garageid);
		SendAdminMessage(COLOR_GREY, string1);
	}
	return 1;
}
alias:tpgarageinterior("garageint", "garageinterior", "gint", "ginterior", "gotogarageint", "gotogarageinterior", "getgarageint", "getgarageinterior");
cmd:tpgarageinterior(playerid, params[])
{
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

	new garageid;
	if(sscanf(params, "d", garageid)) return SendEsp(playerid, "/tpgarageinterior [номер гаража]");

	if(!(1 <= garageid <= gHouseCount-1))
	{
	    new strin[100];
	    format(strin, sizeof(strin), ""cError"ID Гаража не должно быть меньше 1 и не больше %d!", gHouseCount-1);
		ErrorMessage(playerid, strin);
	}
	else
	{
	    new houseint = gHouses[garageid][houseHint];

	    SetPlayerPosAC(playerid, exitgarage[gHouses[garageid][houseClass]][0],exitgarage[gHouses[garageid][houseClass]][1],
			exitgarage[gHouses[garageid][houseClass]][2], garageid, hinterior_info[houseint][h_interior]);

		SetPlayerFacingAngle(playerid,exitgarage[gHouses[garageid][houseClass]][3]);
		SetCameraBehindPlayer(playerid);

		OnPlayerUpdateLoadingMode(playerid);

		TI[playerid][tVirtualWorld] = garageid;
		TI[playerid][tInterior] = hinterior_info[houseint][h_interior];

		GameTextForPlayer(playerid, "~w~GINT", 5000, 1);

		new string1[128];
 		format(string1, sizeof(string1), "Вы телепортировались в интерьер гаража дома №%d.", garageid);
	  	SendClientMessage(playerid, COLOR_BLUE, string1);

		format(string1, sizeof(string1), "[A] %s [%d] телепортировался к интерьеру гаража дома №%i", GetName(playerid), playerid, garageid);
		SendAdminMessage(COLOR_GREY, string1);
	}
	return 1;
}
cmd:tphint(playerid,params[])
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
	new hint;
	if(sscanf(params,"d",hint)) return SendEsp(playerid, "/tphint [интерьер]");
	if(!(0 <= hint <= 41))
	{
		ErrorMessage(playerid, ""cError"ID Интерьера дома не должно быть меньше 0 и не больше 41!");
	}
	else
	{
		new string1[128];
		SetPlayerPosAC(playerid, hinterior_info[hint][h_pos_exit][0], hinterior_info[hint][h_pos_exit][1], hinterior_info[hint][h_pos_exit][2], playerid+50,
			hinterior_info[hint][h_interior]);

		SetPlayerFacingAngle(playerid,hinterior_info[hint][h_pos_exit][3]);

		TI[playerid][tVirtualWorld] = playerid+50;
		TI[playerid][tInterior] = hinterior_info[hint][h_interior];

		GameTextForPlayer(playerid, "~w~TPHINT", 5000, 1);

 		format(string1, sizeof(string1), "Вы телепортировались к интерьеру домов под №%d.",hint);
	  	SendClientMessage(playerid, COLOR_BLUE, string1);

		format(string1, sizeof(string1), "[A] %s [%d] телепортировался к интерьеру домов под №%d.", GetName(playerid), playerid, hint);
		SendAdminMessage(COLOR_GREY, string1);
	}
	return 1;
}

alias:graf("graff", "tpgraff", "gotograff", "getgraff");
cmd:graf(playerid,params[])
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
	new graff;
	if(sscanf(params,"d", graff)) return SendEsp(playerid, "/graff [номер граффити]");
	if(!(1 <= graff < 121)) return ErrorMessage(playerid, "От 1 до 120");
	
	SetPlayerPosAC(playerid,GrafInfo[graff][gr_x][0],GrafInfo[graff][gr_x][1],GrafInfo[graff][gr_x][2],0,0);

	TI[playerid][tVirtualWorld] = 0;
	TI[playerid][tInterior] = 0;

	GameTextForPlayer(playerid, "~w~GRAFFITY", 5000, 1);

	new string1[128];
 	format(string1, sizeof(string1), "Вы телепортировались к граффити №%d.",graff);
    SendClientMessage(playerid, COLOR_BLUE, string1);

    format(string1, sizeof(string1), "[A] %s [%d] телепортировался к граффити №%i", GetName(playerid), playerid, graff);
	SendAdminMessage(COLOR_GREY, string1);
	return 1;
}

cmd:testbiz(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new bizid, string[1024], pickupstr[1024];
    if(sscanf(params,"d",bizid)) return SendEsp(playerid, "/testbiz [id]");

    if(!(1 <= bizid <= gBusinessCount-1)) {
		format(string, sizeof(string), "От 1 до %d", gBusinessCount-1);
		ErrorMessage(playerid, string);
		return 1;
	}
	TI[playerid][tSelectedBusinessID] = bizid;

    format(pickupstr, sizeof(pickupstr), "Вы установил себе номер бизнеса на №%d", bizid);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotobint(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

    new bizid, bint, pickupstr[1024], string[500];
    if(sscanf(params,"d",bizid)) return SendEsp(playerid, "/gotobint [id]");

    if(!(1 <= bizid <= gBusinessCount-1)) {
		format(string, sizeof(string), "От 1 до %d", gBusinessCount-1);
		ErrorMessage(playerid, string);
		return 1;
	}
    bint = gBusiness[bizid][bizzBint];
    
    if(gBusiness[bizid][bizzType] == 7 || gBusiness[bizid][bizzType] == 18)
	{
		SetPlayerPosAC(playerid, gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ], 0, 0);
		SetPlayerFacingAngle(playerid, gBusiness[bizid][bizzR]);
	}
	else
	{
	    if(gBusiness[bizid][bizzType] == 8 && gBusiness[bizid][bizzID] == 18)
		{
			SetPVarInt(playerid,"sellcarClass",1), BuySalonType[playerid] = 0;
			
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, 1, 82);
   			SetPlayerFacingAngle(playerid,182.0258);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);

			BuySalonStatus[playerid] = 0;
			BuySalonWorld[playerid] = GetPVarInt(playerid,"sellcarClass");
		}
		else if(gBusiness[bizid][bizzType] == 8 && gBusiness[bizid][bizzID] == 19)
		{
			SetPVarInt(playerid,"sellcarClass",3), BuySalonType[playerid] = 2;
			
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, 3, 82);
   			SetPlayerFacingAngle(playerid,182.0258);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);

			BuySalonStatus[playerid] = 0;
			BuySalonWorld[playerid] = GetPVarInt(playerid,"sellcarClass");
		}
     	else if(gBusiness[bizid][bizzType] == 8 && gBusiness[bizid][bizzID] == 20)
	 	{
	 		SetPVarInt(playerid,"sellcarClass",5), BuySalonType[playerid] = 4;
	 		
	 		TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, 5, 82);
   			SetPlayerFacingAngle(playerid,182.0258);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);

			BuySalonStatus[playerid] = 0;
			BuySalonWorld[playerid] = GetPVarInt(playerid,"sellcarClass");
		}
	 	else if(gBusiness[bizid][bizzType] == 8 && gBusiness[bizid][bizzID] == 21)
	 	{
		 	SetPVarInt(playerid,"sellcarClass",6), BuySalonType[playerid] = 5;
		 	
		 	TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 2226.9417,780.9209,1116.8480, 6, 82);
   			SetPlayerFacingAngle(playerid,182.0258);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);

			BuySalonStatus[playerid] = 0;
			BuySalonWorld[playerid] = GetPVarInt(playerid,"sellcarClass");
		}
		else
		{
		    TI[playerid][tTPpick] = true;

			SetPlayerPosAC(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ],bizid,gBints[bint][bintInterior]);
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);

			SetCameraBehindPlayer(playerid);

			gBusiness[bizid][bizzVisitors]++;

			if(gBusiness[bizid][bizzType] == 10 || gBusiness[bizid][bizzType] == 11 || gBusiness[bizid][bizzType] == 14
			|| gBusiness[bizid][bizzType] == 15) OnPlayerUpdateLoadingMode(playerid);
		}
	}
	GameTextForPlayer(playerid, "~w~BINT", 5000, 1);

    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к интерьеру бизнеса №%d", bizid);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotohotel(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotohotel [id]");

    if(params[0] < 0 || params[0] > gHotelCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID отеля не может быть меньше 0 или больше %i", gHotelCount);
	    return 1;
	}

	SetPlayerPosAC(playerid, gHotels[params[0]][hotelAreaX], gHotels[params[0]][hotelAreaY], gHotels[params[0]][hotelAreaZ], 0, 0);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к отелю №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotoair(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotoair [id]");

    if(params[0] < 0 || params[0] > gAirCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID аэропорта не может быть меньше 0 или больше %i", gAirCount);
	    return 1;
	}

	SetPlayerPosAC(playerid, gAirs[params[0]][airAreaX], gAirs[params[0]][airAreaY], gAirs[params[0]][airAreaZ], 0, 0);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к аэропорту №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotoairplane(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotoairplane [id]");

    if(params[0] < 1 || params[0] > gPlaneCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID аэроплана не может быть меньше 1 или больше %i", gPlaneCount);
	    return 1;
	}

	SetPlayerPosAC(playerid, gAirplanes[params[0]][aPos][0], gAirplanes[params[0]][aPos][1], gAirplanes[params[0]][aPos][2], 0, 0);
	SetPlayerFacingAngle(playerid, gAirplanes[params[0]][aPos][3]);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к аэроплану №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:hcar(playerid,params[])
{
	if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
	new houseid;
	if(sscanf(params,"d", houseid)) return SendEsp(playerid, "/hcar [номер дома]");
	if(!(1 <= houseid <= gHouseCount-1))
	{
	    new strin[100];
	    format(strin, sizeof(strin), ""cError"ID Дома не должно быть меньше 1 и не больше %d!", gHouseCount-1);
		ErrorMessage(playerid, strin);
	}
	else
	{
		SetPlayerPosAC(playerid, gHouses[houseid][houseParkX], gHouses[houseid][houseParkY], gHouses[houseid][houseParkZ],0,0);
		SetPlayerFacingAngle(playerid, gHouses[houseid][houseParkR]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);

		TI[playerid][tVirtualWorld] = 0;
		TI[playerid][tInterior] = 0;

		GameTextForPlayer(playerid, "~w~HCAR", 5000, 1);

		new string1[128];
	 	format(string1, sizeof(string1), "Вы телепортировались к гаражу дома №%d.",houseid);
	    SendClientMessage(playerid, COLOR_BLUE, string1);

	    format(string1, sizeof(string1), "[A] %s [%d] телепортировался к гаражу дома №%i", GetName(playerid), playerid, houseid);
		SendAdminMessage(COLOR_GREY, string1);
	}
	return 1;
}

cmd:gotoatm(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotoatm [id]");

    if(params[0] < 0 || params[0] > gATMCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID банкомата не может быть меньше 0 или больше %i", gATMCount);
	    return 1;
	}

	SetPlayerPosAC(playerid, ATMData[params[0]][ATM_Pos][0]-5, ATMData[params[0]][ATM_Pos][1], ATMData[params[0]][ATM_Pos][2]+1, 0, 0);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к банкомату №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

cmd:gotofveh(playerid, params[])
{
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotofveh [id]");

    if(params[0] < 0 || params[0] > gFracVehicleCount)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID фракционного кара не может быть меньше 0 или больше %i", gFracVehicleCount);
	    return 1;
	}

	SetPlayerPosAC(playerid, FracVehicle[params[0]][fvehcCoords][0], FracVehicle[params[0]][fvehcCoords][1], FracVehicle[params[0]][fvehcCoords][2], 0, 0);
	SetPlayerFacingAngle(playerid, FracVehicle[params[0]][fvehcCoords][3]);

    new pickupstr[1024];
    format(pickupstr, sizeof(pickupstr), "Вы телепортировались к фракционному кару №%d", params[0]);
	SendClientMessage(playerid,0xFFFFFFFF,pickupstr);
    return 1;
}

CMD:gdynobject(playerid, params[])
{
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;

	new staticobjstr[1024], objid;

	if(sscanf(params, "d", objid)) return SendEsp(playerid, "/gdynobject [id объекта]");

	if(objid < 0 || objid > TotalDynObject)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID объекта не может быть меньше 0 или больше %i", TotalDynObject);
	    return 1;
	}

	if (GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, ObjectDynInfo[objid][POS_X], ObjectDynInfo[objid][POS_Y], ObjectDynInfo[objid][POS_Z]);
	}
	else
	{
		SetPlayerPosAC(playerid, ObjectDynInfo[objid][POS_X], ObjectDynInfo[objid][POS_Y], ObjectDynInfo[objid][POS_Z], 0, 0);
	}
	format(staticobjstr, sizeof(staticobjstr), "Вы телепортировались к динамическому объекту №%d", objid);
	SendClientMessage(playerid,0xFFFFFFFF,staticobjstr);
	return 1;
}

CMD:checkobject(playerid, params[])
{
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/checkobject [радиус]");

	new num = 0;
    for(new o = 0; o < TotalObject; o++)
	{
 		if(IsPlayerInRangeOfPoint(playerid, params[0], ObjectInfo[o][POS_X], ObjectInfo[o][POS_Y], ObjectInfo[o][POS_Z]))
 		{
			num = o;
 		}
	}
	if(num == 0) SendClientMessage(playerid, COLOR_ORANGE, "Статических объектов сервера нет по близости!");
	else
	{
	    SendMes(playerid, COLOR_ORANGE, "\
			Вы находитесь около статического объекта №%d, X: %f, Y: %f, Z: %f, Model: %d.\
			", num, ObjectInfo[num][POS_X], ObjectInfo[num][POS_Y], ObjectInfo[num][POS_Z], ObjectInfo[num][MODEL]);

        printf("\
			Вы находитесь около статического объекта №%d, X: %f, Y: %f, Z: %f, Model: %d.\
			", num, ObjectInfo[num][POS_X], ObjectInfo[num][POS_Y], ObjectInfo[num][POS_Z], ObjectInfo[num][MODEL]);
	}
	return 1;
}

CMD:checkdynobject(playerid, params[])
{
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/checkdynobject [радиус]");

	new num = 0;
    for(new o = 0; o < TotalDynObject; o++)
	{
 		if(IsPlayerInRangeOfPoint(playerid, params[0], ObjectDynInfo[o][POS_X], ObjectDynInfo[o][POS_Y], ObjectDynInfo[o][POS_Z]))
 		{
			num = o;
 		}
	}
	if(num == 0) SendClientMessage(playerid, COLOR_ORANGE, "Динамических объектов сервера нет по близости!");
	else
	{
	    SendMes(playerid, COLOR_ORANGE, "\
			Вы находитесь около динамического объекта №%d, X: %f, Y: %f, Z: %f, Model: %d.\
			", num, ObjectDynInfo[num][POS_X], ObjectDynInfo[num][POS_Y], ObjectDynInfo[num][POS_Z], ObjectDynInfo[num][MODEL]);

        printf("\
			Вы находитесь около динамического объекта №%d, X: %f, Y: %f, Z: %f, Model: %d.\
			", num, ObjectDynInfo[num][POS_X], ObjectDynInfo[num][POS_Y], ObjectDynInfo[num][POS_Z], ObjectDynInfo[num][MODEL]);
	}
	return 1;
}

CMD:gobject(playerid, params[])
{
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
	
	new staticobjstr[1024], objid;
	
	if(sscanf(params, "d", objid)) return SendEsp(playerid, "/gobject [id объекта]");
	
	if(objid < 0 || objid > TotalObject)
	{
	    SendMes(playerid, -1, "• {AC0000}[Ошибка] {ffffff}ID объекта не может быть меньше 0 или больше %i", TotalObject);
	    return 1;
	}
	
	if (GetPlayerState(playerid) == 2)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, ObjectInfo[objid][POS_X], ObjectInfo[objid][POS_Y], ObjectInfo[objid][POS_Z]);
	}
	else
	{
		SetPlayerPosAC(playerid, ObjectInfo[objid][POS_X], ObjectInfo[objid][POS_Y], ObjectInfo[objid][POS_Z], 0, 0);
	}
	format(staticobjstr, sizeof(staticobjstr), "Вы телепортировались к статическому объекту №%d", objid);
	SendClientMessage(playerid,0xFFFFFFFF,staticobjstr);
	return 1;
}

CMD:addzone(playerid, params[]) {
    if(PI[playerid][pAdmin] < 6 || !dostup[playerid]) return true;
	new string[1024],str[56];
    strcat(string,"Создать зеленую зону\n");
    for(new g = 1; g <= TOTALZONE; g++) {
    	format(str, sizeof(str), "%i. %s\n", GREENZONE[g][grid], GREENZONE[g][grName]);
     	strcat(string,str);
	}
 	return D(playerid, D_GREENZONE, 2, "Зеленые зоны", string, "Выбрать", "Закрыть");
}
CMD:vip(playerid,params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/vip [VIP]");
	PI[playerid][pVips] = giveplayerid;
	
	static const f_str[] = "VIP: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
	return 1;
}
CMD:trulet(playerid,params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/trulet [VIP]");
	PI[playerid][pPlayTime][1] = giveplayerid;
	
	static const f_str[] = "pPlayTime: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
	return 1;
}
CMD:svw(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/sv [WORLD]");
	SetPlayerVirtualWorld(playerid,giveplayerid);
	
	static const f_str[] = "Виртуальный мир: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
	return 1;
}
CMD:si(playerid,params[]) {
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/si [INTERIOR]");
    SetPlayerInterior(playerid,giveplayerid);
    
    static const f_str[] = "Интерьер: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];

  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
    return 1;
}
CMD:payday(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	PayDay();
	return true;
}
CMD:cc(playerid, params[]) {
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	for(new i = 0; i < 60; i++) SendClientMessageToAll(COLOR_WHITE, "");
	SendClientMessageToAll(-1,"Игровой чат очищен администрацией сервера");
	return true;
}
CMD:setskin(playerid, params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new skin,giveplayerid;
    if(sscanf(params, "ud", giveplayerid,skin)) return SendEsp(playerid, "/setskin [id игрока] [id скина]");
	if(skin > 311 || skin < 1) return ErrorMessage(playerid, "Неправильный ID скина!");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	PI[giveplayerid][pSkin] = skin;
	new string[72];
	format(string, sizeof(string), "Вы изменили скин %s на номер: %i",player_name[giveplayerid],skin);
	SendOk(playerid, string);
	A_SetPlayerSkin(giveplayerid, PI[giveplayerid][pSkin]);
	UpdatePlayerData(giveplayerid,"Skin",PI[giveplayerid][pSkin]);
	return true;
}
CMD:fuelcars(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new null,string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(!VehicleInfo[i][vJob] && !VehicleInfo[i][vTeam]) continue;
		VehicleInfo[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		null++;
	}
	format(string,sizeof(string),"%i автомобилей было заправлено!", null);
	SendOk(playerid,string);
	return 1;
}
CMD:setskill(playerid, params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(sscanf(params, "udd",params[0],params[1],params[2])) {
		SendUse(playerid, "/setskill [playerid/часть ника] [номер] [количество]");
		SendOk(playerid, "[0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SendClientMessage(playerid,COLOR_GREY,"Неизвестное значение");
	if(!IsPlayerConnected(params[0])) return true;
	PI[params[0]][pGunSkill][params[1]] = params[2];
	SendOk(playerid, "Уровень владения оружием игроку установлен");
	return true;
}
CMD:givemoney(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/givemoney [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	GiveMoney(id,money,"GiveMoney(adm)");
	format(string,sizeof(string),"Вы дали игроку %s $%d",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	return true;
}
CMD:givedonate(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/givedonate [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	PI[id][pRouble] += money;
	UpdatePlayerData(id, "donatemoney", PI[id][pRouble]);
	format(string,sizeof(string),"Вы дали донат %s %d руб",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	return true;
}
CMD:ylevel(playerid, params[]) {
	if(!GetString(player_name[playerid],"Nikolay_Nambovan")) return 1;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/ylevel [playerid] [HP]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 11) return ErrorMessage(playerid,"Нельзя давать больше 10 lvl");
	PI[giveplayerid][pLevel] = hp;
	DollahScoreUpdate(giveplayerid);
	UpdatePlayerData(giveplayerid,"pLevel",hp);
	printf("NAMBAVAN ДАЛ %d LVL %s",hp,player_name[giveplayerid]);
	return true;
}
CMD:level(playerid, params[]) {
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/level [percent]");
	BonusInfo[act_level] = giveplayerid;
	SendOk(playerid,"Изменено");
	return true;
}
CMD:selected(playerid, params[]) {
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/selected [percent]");
	BonusInfo[act_select] = giveplayerid;
	SendOk(playerid,"Изменено");
	return true;
}
CMD:buycars(playerid, params[]) {
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/buycars [percent]");
	BonusInfo[act_buycar] = giveplayerid;
	SendOk(playerid,"Изменено");
	return true;
}
CMD:youtube(playerid) {
	if(!GetString(player_name[playerid],"Nikolay_Nambovan")) return 1;
	D(playerid, D_PROMO, DSL, ""P"Промокоды", ""P"1."W" Список промокодов\n"P"2."W" Создать промокод\n"P"3."W" Удалить промокод", "Выбрать", "Назад");
	return 1;
}
CMD:ysetskill(playerid, params[]) {
    if(!GetString(player_name[playerid],"Nikolay_Nambovan")) return 1;
    if(sscanf(params, "udd",params[0],params[1],params[2])) {
		SendUse(playerid, "/ysetskill [playerid/часть ника] [номер] [количество]");
		SendOk(playerid, "[0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SendClientMessage(playerid,COLOR_GREY,"Неизвестное значение");
	if(!IsPlayerConnected(params[0])) return true;
	PI[params[0]][pGunSkill][params[1]] = params[2];
	SendOk(playerid, "Уровень владения оружием игроку установлен");
	return true;
}
CMD:ygivemoney(playerid, params[]) {
    if(!GetString(player_name[playerid],"Nikolay_Nambovan")) return 1;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/ygivemoney [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	GiveMoney(id,money,"GiveMoney(adm)");
	format(string,sizeof(string),"Вы дали игроку %s $%d",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	printf("NAMBAVAN ДАЛ %d денег %s",money,player_name[id]);
	return true;
}
CMD:ygivedonate(playerid, params[]) {
    if(!GetString(player_name[playerid],"Nikolay_Nambovan")) return 1;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/ygivedonate [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	PI[id][pRouble] += money;
	UpdatePlayerData(id, "donatemoney", PI[id][pRouble]);
	format(string,sizeof(string),"Вы дали донат %s %d руб",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	printf("NAMBAVAN ДАЛ %d доанта %s",money,player_name[id]);
	return true;
}
CMD:setacc(playerid, params[]) {
    if((PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) && (!GetString(player_name[playerid],"Nikolay_Nambovan"))) return true;
	new stat,amount,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,stat,amount)) {
		SendEsp(playerid, "/setacc [id] [номер] [количество]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Уровень | [2] Законопослушность| [3] Боеприпасы");
		SendClientMessage(playerid, COLOR_GRAD2, "[4] Exp | [5] Работа игрока | [6] Счёт мобильного");
		SendClientMessage(playerid, COLOR_GRAD2, "[7] Наркотики | [8] | Наркозависимость | [9] Аптечки");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat) {
		case 1: {
			PI[giveplayerid][pLevel] = amount;
   			DollahScoreUpdate(giveplayerid);
			UpdatePlayerData(giveplayerid,"pLevel",amount);
		}
		case 2: PI[giveplayerid][pZakonp] = amount,UpdatePlayerData(giveplayerid,"pZakonp",amount);
        case 3: PI[giveplayerid][pMats] = amount,UpdatePlayerData(giveplayerid,"pMats",amount);
		case 4: PI[giveplayerid][pExp] = amount;
		case 5: PI[giveplayerid][pJob] = amount,UpdatePlayerData(giveplayerid,"pJob",amount);
		case 6: PI[giveplayerid][pMobile] = amount,UpdatePlayerData(giveplayerid,"pMobile",amount);
		case 7: PI[giveplayerid][pDrugs] = amount,UpdatePlayerData(giveplayerid,"pDrugs",amount);
		case 8: PI[giveplayerid][pAddiction] = amount;
		case 9: PI[giveplayerid][pMedKit] = amount,UpdatePlayerData(giveplayerid,"pMedKit",amount);
	}
	SendOk(playerid, "Успешно изменено");
	return true;
}
CMD:setstat(playerid, params[]) {
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new stat,amount,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,stat,amount)) {
		SendEsp(playerid, "/setstat [id] [номер] [количество]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Уровень | [2] Законопослушность| [3] Боеприпасы");
		SendClientMessage(playerid, COLOR_GRAD3, "[4] Номер телефона | [5] Exp");
		SendClientMessage(playerid, COLOR_GRAD2, "[6] VIP | [7] Работа игрока| [8] Деньги в банке");
		SendClientMessage(playerid, COLOR_GRAD2, "[9] Счёт мобильного | [10] Деньги | [11] Наркотики");
		SendClientMessage(playerid, COLOR_GRAD2, "[12] Донат счётчик [13] Наркозависимость [14] Аптечки");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat) {
		case 1: {
			PI[giveplayerid][pLevel] = amount;
   			DollahScoreUpdate(giveplayerid);
			UpdatePlayerData(giveplayerid,"pLevel",amount);
		}
		case 2: PI[giveplayerid][pZakonp] = amount,UpdatePlayerData(giveplayerid,"pZakonp",amount);
        case 3: PI[giveplayerid][pMats] = amount,UpdatePlayerData(giveplayerid,"pMats",amount);
		case 4: PI[giveplayerid][pPhone] = amount,UpdatePlayerData(giveplayerid,"pPhone",amount);
		case 5: PI[giveplayerid][pExp] = amount;
		case 6:
		{
		    if(!(VIP_NONE <= amount <= VIP_KING))
		    {
		        new vipstr[300];
		        format(vipstr, sizeof(vipstr), "От %d до %d", VIP_NONE, VIP_KING);
		        ErrorMessage(playerid, vipstr);
		        return 1;
		    }
		    
		    PI[giveplayerid][pVips] = amount;
			PI[giveplayerid][pVipTime] = (unix + 86400 * amount);
			
			UpdatePlayerData(giveplayerid,"pVips",PI[giveplayerid][pVips]);
			UpdatePlayerData(giveplayerid,"pVipTime",PI[giveplayerid][pVipTime]);
		}
		case 7: PI[giveplayerid][pJob] = amount,UpdatePlayerData(giveplayerid,"pJob",amount);
		case 8: PI[giveplayerid][pBank] = amount,UpdatePlayerData(giveplayerid,"pBank",amount);
		case 9: PI[giveplayerid][pMobile] = amount,UpdatePlayerData(giveplayerid,"pMobile",amount);
		case 10: PI[giveplayerid][pCash] = amount,UpdatePlayerData(giveplayerid,"pCash",amount);
		case 11: PI[giveplayerid][pDrugs] = amount,UpdatePlayerData(giveplayerid,"pDrugs",amount);
		case 12: PI[giveplayerid][pRouble] = amount,UpdatePlayerData(giveplayerid,"donatemoney",amount);
		case 13: PI[giveplayerid][pAddiction] = amount;
		case 14: PI[giveplayerid][pMedKit] = amount,UpdatePlayerData(giveplayerid,"pMedKit",amount);
	}
	SendOk(playerid, "Успешно изменено");
	return true;
}
CMD:setmats(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new amount,giveplayerid;
	if(sscanf(params, "dd",giveplayerid,amount)) SendEsp(playerid, "/setstat [id] [количество]"),
	SendEsp(playerid, "1. Полиция ЛС | 2. Полиция СФ | 3. Полиция ЛВ | 4. ФБР | 5. Армия СФ | 6. Армия ЛВ"),
	SendEsp(playerid, "7. Ballas | 8. Vagos | 9. Grove | 10. Aztecas | 11. Rifa"),
	SendEsp(playerid, "12. Итальянская мафия(LCN) | 13. Японская мафия(YAKUZA) | 14. Русская мафия(RM)"),
	SendEsp(playerid, "15. Оружейный завод | 16. Нефтезавод | 17. Цена за 1г нарко притон | 18. Лесопилка");
	switch(giveplayerid) {
		case 1: FI[fLSPD][fMats] = amount,UpdateFraction(fLSPD,"Mats",FI[fLSPD][fMats]);
		case 2: FI[fSFPD][fMats] = amount,UpdateFraction(fSFPD,"Mats",FI[fSFPD][fMats]);
		case 3: FI[fLVPD][fMats] = amount,UpdateFraction(fLVPD,"Mats",FI[fLVPD][fMats]);
		case 4: FI[fFBI][fMats] = amount,UpdateFraction(fFBI,"Mats",FI[fFBI][fMats]);
		case 5: FI[fARMYSF][fMats] = amount,UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
		case 6: FI[fARMYLV][fMats] = amount,UpdateFraction(fARMYLV,"Mats",FI[fARMYLV][fMats]);

		case 7: FI[fBALLAS][fMats] = amount,UpdateFraction(fBALLAS,"Mats",FI[fBALLAS][fMats]);
		case 8: FI[fVAGOS][fMats] = amount,UpdateFraction(fVAGOS,"Mats",FI[fVAGOS][fMats]);
		case 9: FI[fGROVE][fMats] = amount,UpdateFraction(fGROVE,"Mats",FI[fGROVE][fMats]);
		case 10: FI[fAZTEC][fMats] = amount,UpdateFraction(fAZTEC,"Mats",FI[fAZTEC][fMats]);
		case 11: FI[fRIFA][fMats] = amount,UpdateFraction(fRIFA,"Mats",FI[fRIFA][fMats]);

		case 12: FI[fLCN][fMats] = amount,UpdateFraction(fLCN,"Mats",FI[fLCN][fMats]);
		case 13: FI[fYAKUZA][fMats] = amount,UpdateFraction(fYAKUZA,"Mats",FI[fYAKUZA][fMats]);
		case 14: FI[fRM][fMats] = amount,UpdateFraction(fRM,"Mats",FI[fRM][fMats]);

		case 15: zavodsklad = amount,UpdateOtherData("gun_mats",zavodsklad);
		case 16: oilsklad = amount,UpdateOtherData("oil_mats",oilsklad);
		case 17: pricedrugs = amount,UpdateOtherData("pricedrugs",pricedrugs);
		case 18: woodsklad = amount,UpdateOtherData("woodsklad",woodsklad);
		default: ErrorMessage(playerid,"Произошла ошибка");
	}
	if(giveplayerid != 0) SendOk(playerid,"Вы успешно пополнили склад");
	return 1;
}
CMD:getip(playerid, params[]) {
    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/getip [playerid]");
    new ip[15],string[128];
	GetPlayerIp(giveplayerid,ip,15);
	format(string, sizeof(string), "Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",player_name[giveplayerid],PI[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	SendClientMessage(playerid,0x6BB3FFAA,string);
	return true;
}
CMD:accessadmin(playerid, params[])
{
	if(IsPlayerGrandAdmin(playerid))
	{
		new Level, query[1024], str_mes[1024];

		if(sscanf(params, "d",Level)) return SendEsp(playerid, "/accessadmin [уровень]");

		if(!(0 <= Level <= 7)) return ErrorMessage(playerid, "От 0 до 7");
		
		if(Level == 0)
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы сняли себя с поста администрирования!");

			format(str_mes, sizeof(str_mes), "\
				[AccessAdmin] %s %s[%d] снял себя с поста администратора", GetName(playerid), playerid);
		}
		else
		{
		    format(str_mes, sizeof(str_mes), "Вы выдали себе %i уровень администрирования", Level);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, str_mes);

			format(str_mes, sizeof(str_mes), "[AccessAdmin] %s[%d] установил себе %d уровень администратора", GetName(playerid), playerid,Level);
		}
		SendFullAccessMessage(str_mes, COLOR_RED);

		format(query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", GetName(playerid));
		mysql_pquery(connects, query, "AccessAdmin", "dd",playerid,Level);
	}
	return 1;
}
cmd:givefull(playerid, params[])
{
	if(IsPlayerGrandAdmin(playerid))
	{
	    if(sscanf(params, "d",params[0])) return SendEsp(playerid, "/givefull [id игрока]");

        if(!IsPlayerParamsGrandAdmin(params[0]))
		{
			STRING_GLOBAL[0] = EOS;

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "INSERT INTO `"TABLE_FULLACCESS"` (name) VALUES ('%s')", GetName(params[0]));
			mysql_query(connects, STRING_GLOBAL);

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "%s был успешно выдан полный доступ", GetName(params[0]));
			SendClientMessage(playerid, 0xFFCC00FF, STRING_GLOBAL);
		}
		else return SendClientMessage(playerid, -1, "Данный игрок/администратор уже является разработчиком!");
	}
	return 1;
}

cmd:offgivefull(playerid, params[])
{
	if(IsPlayerGrandAdmin(playerid))
	{
	    if(sscanf(params, "s[32]",params[0])) return SendEsp(playerid, "/givefull [ник игрока]");

		if(strfind(params[0], "_", true) == -1) return SendClientMessage(playerid,COLOR_RED,"Вписывать необходимо НИК игрока, а не ID. Повторите попытку..");

		if(strlen(params[0]) > MAX_PLAYER_NAME)
			return SendClientMessage(playerid, -1, "Вы ввели неверную длину ника");

        if(!IsPlayerValueGrandAdmin(params[0]))
		{
			STRING_GLOBAL[0] = EOS;

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "INSERT INTO `"TABLE_FULLACCESS"` (name) VALUES ('%s')", params[0]);
			mysql_query(connects, STRING_GLOBAL);

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "%s был успешно выдан полный доступ", params[0]);
			SendClientMessage(playerid, 0xFFCC00FF, STRING_GLOBAL);
		}
		else return SendClientMessage(playerid, -1, "Данный игрок/администратор уже является разработчиком!");
	}
	return 1;
}

cmd:dellfull(playerid, params[])
{
	if(Osnovat(GetName(playerid)))
	{
	    if(sscanf(params, "d",params[0])) return SendEsp(playerid, "/dellfull [id игрока]");

        if(params[0] == playerid) return SendClientMessage(playerid, COLOR_LIGHTRED, !"Нельзя снять самого себя");

		if(IsPlayerParamsGrandAdmin(params[0]))
		{
			STRING_GLOBAL[0] = EOS;

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "DELETE FROM `fullaccess` WHERE `name` = '%s'", GetName(params[0]));
			mysql_query(connects, STRING_GLOBAL);

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "У игрока %s был успешно забран полный доступ", GetName(params[0]));
			SendClientMessage(playerid, 0xFFCC00FF, STRING_GLOBAL);
		}
		else return SendClientMessage(playerid, -1, "Данный игрок/администратор не является разработчиком!");
	}
	return 1;
}

cmd:offdellfull(playerid, params[])
{
	if(Osnovat(GetName(playerid)))
	{
	    if(sscanf(params, "s[32]",params[0])) return SendEsp(playerid, "/offdellfull [ник игрока]");

		if(strfind(params[0], "_", true) == -1) return SendClientMessage(playerid,COLOR_RED,"Вписывать необходимо НИК игрока, а не ID. Повторите попытку..");

		if(strlen(params[0]) > MAX_PLAYER_NAME)
			return SendClientMessage(playerid, -1, "Вы ввели неверную длину ника");

        if(IsPlayerValueGrandAdmin(params[0]) == IsPlayerGrandAdmin(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, !"Нельзя снять самого себя");

        if(IsPlayerValueGrandAdmin(params[0]))
		{
			STRING_GLOBAL[0] = EOS;

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "DELETE FROM `fullaccess` WHERE `name` = '%s'", params[0]);
			mysql_query(connects, STRING_GLOBAL);

			format(STRING_GLOBAL, sizeof STRING_GLOBAL, "У игрока %s был успешно забран полный доступ", params[0]);
			SendClientMessage(playerid, 0xFFCC00FF, STRING_GLOBAL);
		}
		else return SendClientMessage(playerid, -1, "Данный игрок/администратор не является разработчиком!");
	}
	return 1;
}

cmd:listfull(playerid)
{
    //if(IsPlayerParamsGrandAdmin(params[0])) return error(playerid,"Вы не можете выдать предупреждение разработчику.");
	if(IsPlayerGrandAdmin(playerid))
	{
		new text[900],
	 	fmt_str[100],
	  	nick[32],
	  	plid;

		mysql_query(connects, "SELECT * FROM `"TABLE_FULLACCESS"`");

	    strcat(text, "");

	    for(new i; i < cache_num_rows(); i ++)
	    {
	        cache_get_value_name_int(i, "id", plid);
	        cache_get_value_name(i, "name", nick);

	        format(fmt_str, sizeof fmt_str, "№%d - %s\n", plid, nick);
	        strcat(text, fmt_str);
	    }
		D(playerid, D_NULL, DIALOG_STYLE_LIST, "{FFCC00}Список ФД", text, "Закрыть", "");
 	}
	return 1;
}
CMD:makeadmin(playerid, params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new Nick[30],Level;
	if(sscanf(params, "s[30]d",Nick,Level)) return SendEsp(playerid, "/makeadmin [id / ник] [уровень]");
	if(!(0 <= Level <= 6)) return ErrorMessage(playerid, "От 0 до 6");
	if(!strcmp(Nick,"_")) {
		SendClientMessage(playerid,COLOR_REDD,"Наивный)");
		return 1;
	}
	new query[128];
	if(!isNumeric(Nick)) {
		new id_name = strval(Nick);
		if(!IsPlayerConnected(id_name)) return ErrorMessage(playerid, not_id);

		if(!strcmp(player_name[id_name],"_")) {
			SendClientMessage(playerid,COLOR_REDD,"Наивный)");
			return 1;
		}
		format(query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", player_name[id_name]);
		mysql_pquery(connects, query, "Moderator", "dsd",playerid,player_name[id_name],Level);
		return 1;
	}
	format(query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", Nick);
	mysql_pquery(connects, query, "Moderator", "dsd",playerid,Nick,Level);
	return 1;
}
CMD:makegs(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Nick[30],Level;
	if(sscanf(params, "s[30]d",Nick,Level)) return SendEsp(playerid, "/makegs [id / ник] [1 - назначить | 0 - снять]");
	if(!(0 <= Level <= 1)) return ErrorMessage(playerid, "От 0 до 1");
	new query[128];
	if(!isNumeric(Nick)) {
		new id_name = strval(Nick);
		if(!IsPlayerConnected(id_name)) return ErrorMessage(playerid, not_id);
		if(PI[id_name][pHelper] == Level) return ErrorMessage(playerid,"Игрок уже состоит/не состоит в Game Support");
		PI[id_name][pHelper] = Level;
		UpdatePlayerData(id_name,"pHelper",Level);
		new str[128];
		format(str,sizeof str,""W"%s "G"успешно добавлен/удален в/из Game Support",player_name[id_name]);
		SendOk(playerid,str);
		if(Level == 0) TI[id_name][tHelperDuty] = false;
		return 1;
	}
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", Nick);
	mysql_pquery(connects, query, "add_gs", "dsd",playerid,Nick,Level);
	return 1;
}
alias:gamesupports("gamesupp","gsupp","supports","support","helper","helpers");
CMD:gamesupports(playerid) {
	new countleader = 0;
	new string[1024],str[156];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!PI[i][pHelper] || !TI[i][tHelperDuty]) continue;
		format(str, sizeof(str), ""W"%s[%i] %s\n",player_name[i],i,TI[i][tAFK]>=3?("{ffa800}[AFK]"):("")),strcat(string,str);
		countleader++;
	}
	if(countleader > 0) {
		format(string, sizeof(string), "%s\n"ORANGE"В сети %i Game Support's", string,countleader);
		D(playerid, DIALOG_NONE, DSM, ""P"Game Supports",string, "Закрыть", "");
	}
	else D(playerid, DIALOG_NONE, DSM, ""P"Game Supports",""W"Нет Game Supports в сети", "Закрыть", "");
	return 1;
}
CMD:askmute(playerid, params[]) {
    if(!PI[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	new time, text[33],string[144],giveplayerid;	
	if(sscanf(params, "uds[32]",giveplayerid,time,text)) return SendEsp(playerid, "/askmute [playerid] [минуты] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Вы указали свой ID");
	if(PI[giveplayerid][pAskmute]) return ErrorMessage(playerid,"У игрока уже закрыт доступ к подаче вопросов");
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Причина должна быть меньше 30 символов");
 	if(time > 15) return ErrorMessage(playerid,"Заблокировать подачу можно максимум на 15 минут");
	if(GetPVarInt(playerid,"ban")>gettime()) return ErrorMessage(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	PI[giveplayerid][pAskmute] = time*60;
	UpdatePlayerData(giveplayerid,"pAskmute",PI[giveplayerid][pAskmute]);
	format(string, sizeof(string), "Саппорт %s закрыл доступ к вопросам %s на %d мин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
	
	format(string, sizeof(string), "[GS MUTE]"W" %s закрыл доступ к вопросам %s на %d мин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendGSMessage(COLOR_YELLOW, string);
	
	WriteLog(LOG_MUTE,player_name[playerid],player_name[giveplayerid],text);
	return true;
}

CMD:gs(playerid, params[]) {
    if(!PI[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	new string[144],text[130];
	if(sscanf(params,"s[128]",text)) return SendEsp(playerid,"/gs [текст]");
	format(string, sizeof(string), "[GS]"W" %s(%i): %s",player_name[playerid],playerid,text);
	SendGSMessage(COLOR_YELLOW, string);
	return true;
}

CMD:dj(playerid, params[]) {
    if(!DJlvl[playerid]) return true;
	new string[144],text[130];
	if(sscanf(params,"s[128]",text)) return SendEsp(playerid,"/dj [текст]");
	format(string, sizeof(string), "[DJ %s]"W" %s(%i): %s",DJname[playerid],player_name[playerid],playerid,text);
	SendDJMessage(COLOR_YELLOW, string);
	return true;
}

CMD:djmsg(playerid, params[]) {
    if(!DJlvl[playerid]) return true;
	if(DJmsg > gettime()) return ErrorMessage(playerid,"Команду можно использовать раз в 10 минут!");
	D(playerid, D_DJMSG, DSL, ""P"Выбор текста", ""P"1."W" Вариант 1\n"P"2."W" Вариант 2\n"P"3."W" Вариант 3\n"P"4."W" Вариант 4\n"P"5."W" Вариант 5", "Выбрать", "Закрыть");
	return true;
}
CMD:makedj(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 && DJlvl[playerid] < 2) return true;
	new giveplayerid,Level;
	if(sscanf(params, "dd",giveplayerid,Level)) return SendEsp(playerid, "/makedj [id] [1 - назначить | 0 - снять]");
	if(!(0 <= Level <= 1)) return ErrorMessage(playerid, "От 0 до 1");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(DJlvl[giveplayerid] && Level) return ErrorMessage(playerid,"Игрок уже состоит в команде Dj");
	new query[100];
	format(query, sizeof(query), "SELECT * FROM `rjlist` WHERE `pid` = '%d' LIMIT 1", PI[giveplayerid][pID]);
	mysql_pquery(connects, query, "add_dj", "ddd",playerid,giveplayerid,Level);
	return 1;
}

CMD:gspiar(playerid, params[]) {
	if(!PI[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	if(GetSVarInt("gspiar_timer") > gettime()) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(GetSVarInt("gspiar_timer") - unix, year, month, day, hour, minute, second);
		new string[128];
		format(string,sizeof(string),"Пользоваться данной командой можно через: "W"%02d:%02d", minute, second);
		ErrorMessage(playerid, string);
		return 1;
	}
	SendClientMessageToAll(COLOR_YELLOW,"Есть вопросы по игре? Задай их нашим Game Support's - /ask");
	SetSVarInt("gspiar_timer", gettime() + 60*5);
	return 1;
}

CMD:gsduty(playerid, params[]) {
    if(!PI[playerid][pHelper]) return true;
	new string[144];
	if(!TI[playerid][tHelperDuty]) {
		TI[playerid][tHelperDuty] = true;
		format(string, sizeof(string), "[GS]"W" %s(%i) заступил(а) на дежурство",player_name[playerid],playerid);
		SendGSMessage(COLOR_YELLOW, string);
	}
	else {
		format(string, sizeof(string), "[GS]"W" %s(%i) покинул(а) дежурство",player_name[playerid],playerid);
		SendGSMessage(COLOR_YELLOW, string);
		TI[playerid][tHelperDuty] = false;
	}
	return true;
}
CMD:asks(playerid, params[]) {
	if(!PI[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	for(new i;i<MAX_ASK;i++) {
		if(PlayerReportAsk[i] != -1) {
			if(ReportSlotAsk[i] == 1) continue;
			new string[400];
			new stringer[150];
			format(string, sizeof(string), ""W"Вопрос от %s[%i]\n\n"G"%s\n", player_name[PlayerReportAsk[i]], PlayerReportAsk[i], TextAsk[i]);
			D(playerid,D_ASK_1,DSI, ""P"Game Support's'",string,"Принять","Отмена");
			ReportIDAsk[playerid] = i;
			ReportSlotAsk[i] = 1;
			format(stringer, sizeof stringer, "Game Support %s[%d] обрабатывает Ваш вопрос",player_name[playerid],playerid);
			SendUse(PlayerReportAsk[i], stringer);
			return 1;
		}
	}
	ErrorMessage(playerid, "Вопросы отсутствуют");
	return 1;
}
CMD:last(playerid, params[]) {
    if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return ErrorMessage(playerid, "Вам недоступна эта функция");
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/last [Nick_Name]");
    new query[128];
    format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid,"Аккаунт не найден");
    cache_get_value_name(0, "pOnline",query,30);
    static const f_str[] = "Ник: %s | Последний вход: %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 9)];
	format(string,sizeof(string),f_str,params,query);
	SendClientMessage(playerid,COLOR_BLUE,string);
	cache_delete(result);
	return true;
}
cmd:makejob(playerid, params[]) {
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;

    new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/makejob [id]");

	new string[1024];
	dialog_string [ 0 ] = EOS ;

	strcat(dialog_string,""W"№\t"W"Работа\t"W"Уровень\n");

	format(string,sizeof(string),"\
		"W"1.\tАвтобусник\t"P"2 лвл\n\
		"W"2.\tМеханик\t"P"3 лвл\n\
		"W"3.\tРазвозчик еды\t"P"3 лвл\n\
		"W"4.\tРазвозчик продуктов/топлива\t"P"4 лвл\n\
		"W"5.\tМойщик дорог\t"P"4 лвл\n\
		"W"6.\tГазонокосильщик\t"P"5 лвл\n");

	strcat(dialog_string,string);

	SetPVarInt(playerid, "use_job_player", giveplayerid);

	D(playerid,D_JOB_INFO,DSTH,"Трудоустройство",dialog_string,"Выбрать","Закрыть");
	return 1;
}
CMD:makeleader(playerid, params[]) {
    if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new string[64], strings[1024];
	strcat(strings,"№\tОрганизация\tЛидер\n");
	for(new i = 1;i < MAX_FRACTIONS;i ++) {
		format(string,sizeof(string),"%i\t%s\t%s\n",i,FI[i][fName],FI[i][fLeader]);
		strcat(strings,string);
	}
	D(playerid,D_MAKELEADER_INFO,DSTH,"Лидеры организаций",strings,"Выбрать","Отмена");
	return 1;
}
CMD:infoips(playerid,params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 19) return SendEsp(playerid, "/infoips [IP]");
    new QUERY[256];
    format(QUERY, sizeof(QUERY), "SELECT HIGH_PRIORITY * FROM `"TABLE_ACCOUNTS"` WHERE `pvIp` LIKE '%s%s%s'","%",params,"%");
	new Cache:result = mysql_query(connects, QUERY);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid,"IP адрес не найден");
    new tmpas[16],regip[16],mname[32],level;
    for(new i = 0; i < rows; i++) {
	    cache_get_value_name(i, "Name", mname, MAX_PLAYER_NAME);
	    cache_get_value_name(i, "pvIp", tmpas, 16);
	    cache_get_value_name(i, "pIpReg", regip, 16);
	    cache_get_value_name_int(i,"pLevel", level);

		static const f_str[] = "%s | LAST-IP: %s | REG-IP: %s | LVL: %d";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 16) + (-2 + 16) + (-2 + 4)];

		format(string,sizeof(string),f_str,mname,tmpas, regip,level);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
    cache_delete(result);
	return true;
}
CMD:mutelist(playerid, const params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new countmute = 0,string[1024],str[128];
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMute] > 0) {
			format(str, sizeof(str), ""YELLOW"%d. "ORANGE"%s"W" | ID: "P"%d"W" | Секунд: "GREEN"%d\n",countmute+1,player_name[i],i,PI[i][pMute]),strcat(string,str);
			countmute++;
		}
	}
	if(countmute == 0) return ErrorMessage(playerid, "Нет игроков с Баном чата");
	D(playerid, DIALOG_NONE, DSM, ""P"Игроки с баном чата", string, "Закрыть", "");
	return true;
}
CMD:agetip(playerid, params[]) {
    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/agetip [Ник]");
	new QUERY[128];
	format(QUERY, sizeof(QUERY), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params);
	new Cache:result = mysql_query(connects, QUERY),ip[2][17];
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid,"Аккаунт не найден!");
	
	cache_get_value_name(0, "pvIp",ip[0],16);
	cache_get_value_name(0, "pIpReg",ip[1],16);

	static const f_str[] = "Ник: %s | IP: %s | IP при регистрации: %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 17) + (-2 + 17)];

	format(string,sizeof(string),f_str,params,ip[0],ip[1]);
	SendClientMessage(playerid,COLOR_BLUE,string);
	cache_delete(result);
	return true;
}
CMD:captfreeze(playerid,params[]) {
	if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new gang_id, time,string[128];
	if(sscanf(params,"ii",gang_id, time)) {
		SendClientMessage(playerid,COLOR_GREY,"/captfreeze [id] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,COLOR_GREY,"4 - The Rifa | 5 - The Aztecas | 6 - LCN");
		SendClientMessage(playerid,COLOR_GREY,"7 - Yakuza | 8 - Russian Mafia");
		return 1;
	}
	if(gang_id < 1 || gang_id > 8 || time < 0) {
		SendClientMessage(playerid,COLOR_GREY,"/captfreeze [id] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,COLOR_GREY,"4 - The Rifa | 5 - The Aztecas | 6 - LCN");
		SendClientMessage(playerid,COLOR_GREY,"7 - Yakuza | 8 - Russian Mafia");
		return 1;
	}
	if(time == 0) {
		fracmoroz[gang_id-1] = 0;
		format(string, sizeof(string), "Администратор %s разморозил банду %s",player_name[playerid],fracmorozName[gang_id-1]);
	}
	else {
		fracmoroz[gang_id-1] = unix+(3600*time);
		format(string, sizeof(string), "Администратор %s заморозил банду %s на %d час(ов)",player_name[playerid],fracmorozName[gang_id-1],time);
	}
	SendBand(COLOR_LIGHTRED, string);
	AdmMSG(COLOR_LIGHTRED, string,1);
	UpdateMorozed();
	return 1;
}
/*CMD:warns(playerid, params[]) {
	if(PI[playerid][pAdmin] != 0) {
		new giveplayerid;
	    if(PI[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/warns [playerid]");
		if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	    if(PI[giveplayerid][pWarns] == 0) return ErrorMessage(playerid,"На данном аккаунте предупреждений нет");
		new query[128];
	    format(query, sizeof(query), "SELECT * FROM `warns` WHERE `name` = '%s' ORDER BY `warn` DESC LIMIT %d", player_name[giveplayerid], PI[giveplayerid][pWarns]);
	    mysql_tquery(connects, query, "warninfo", "ii", giveplayerid,0);
	    SetPVarInt(giveplayerid, "warninfo", playerid);
	}
	else {
	    if(PI[playerid][pWarns] == 0) return ErrorMessage(playerid,"На Вашем аккаунте предупреждений нет");
	    new query[128];
	    format(query, sizeof(query), "SELECT * FROM `warns` WHERE `name` = '%s' ORDER BY `warn` DESC LIMIT %d", player_name[playerid], PI[playerid][pWarns]);
	    mysql_tquery(connects, query, "warninfo", "ii", playerid,1);
	}
	return 1;
}*/
CMD:apanel(playerid, const params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[1612];
	switch(PI[playerid][pAdmin]) {
		case 1: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"));
		case 2: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"));
		case 3: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"));
		case 4: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий\n"P"12."W" Банлист\n"P"13."W" Возможно взломаны\n"P"14."W" Билборды\n"P"15."W" Дуэли %s",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!duels) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
		case 5: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий\n"P"12."W" Банлист\n"P"13."W" Возможно взломаны\n"P"14."W" Билборды\n"P"15."W" Дуэли %s\n"P"16."W" Античит\n"P"17."W" Казино %s\n"P"18."W" Репорт %s\n"P"19."W" Заполнить склады банд/мафий\n"P"20."W" Ограничение Invite",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!duels) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!casino) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!rep_system) ? ("{FF182D}[OLD]") : ("{33AA33}[NEW]"));
		case 6,7: format(string,sizeof(string),""P"1."W" Администрация\n"P"2."W" Заспавниться\n"P"3."W" Устроиться на работу\n"P"4."W" Игроки в тюрьме\n"P"5."W" Игроки с баном чата\n"P"6."W" Админ информация %s\n"P"7."W" Kill List %s\n"P"8."W" Онлайн организаций\n"P"9."W" Починить автомобиль\n"P"10."W" Состояние складов\n"P"11."W" Узнать заморозки банд/мафий\n"P"12."W" Банлист\n"P"13."W" Возможно взломаны\n"P"14."W" Билборды\n"P"15."W" Дуэли %s\n"P"16."W" Античит\n"P"17."W" Казино %s\n"P"18."W" Репорт %s\n"P"19."W" Заполнить склады банд/мафий\n"P"20."W" Ограничение Invite\n"P"21."W" Дальнобойщики\n"P"22."W" Промокоды\n"P"23."W" Бонусы\n"P"24."W" Пополнить продукты в бизнес(сколько заказал владелец)\n"P"25."W" Анти ТК %s",(!PI[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!PI[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ONN]"),(!duels) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!casino) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!rep_system) ? ("{FF182D}[OLD]") : ("{33AA33}[NEW]"),(!anti_tk) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	}
    D(playerid,D_ADMIN_PANEL,DSL,""P"Админ панель",string,"Выбрать","Отмена");
	return true;
}
CMD:gsinfo(playerid,params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/gsinfo [ID]");
	new string[200];
	format(string,sizeof(string),"Ответов: "W"\t\t%d",PI[giveplayerid][pAsk]);
	D(playerid,DIALOG_NONE,DSM,player_name[giveplayerid],string,"Закрыть","");
	return 1;
}
CMD:ainfo(playerid,params[]) {
	if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;

	new string[512];
	format(string,sizeof(string),""ORANGE"Киков: "W"\t\t%d\n"ORANGE"Банов: "W"\t\t%d\n"ORANGE"Мутов: "W"\t\t%d\n"ORANGE"Ответов: "W"\t\t%d\n"ORANGE"Варнов: "W"\t\t%d\n"ORANGE"Джайлов: "W"\t\t%d\n"ORANGE"Репутация: "W"\t\t%d\n\n"ORANGE"Онлайн за текущий день:"W"\t%s",gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],gAdmin[playerid][8],ConvertsCmdTime(gAdminTime[playerid]));
	D(playerid,DIALOG_NONE,DSM,player_name[playerid],string,"Закрыть","");
	return 1;
}
CMD:admstats(playerid,params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	D(playerid, D_ADMIN_TIME, DSI, ""P"Статистика администратора", "\n\n"W"Для просмотра статистики администратора\nукажите его ник:\n\n", "Ввод", "Отмена");
	return 1;
}
CMD:agiverank(playerid,params[]) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new rankid,giveplayerid;
	if(sscanf(params,"ui", giveplayerid, rankid)) return SendEsp(playerid, "/agiverank [id] [ранг]");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!PI[giveplayerid][pMember]) return ErrorMessage(playerid, "Игрок не в организации");
	if(rankid > (FI[PI[giveplayerid][pMember]][fMaxRang]-1) || rankid < 1) return ErrorMessage(playerid, "Вы допустили ошибку");
	new string[128];
	format(string, sizeof(string), "[A] %s изменил ранг игроку %s c %d на %d", player_name[playerid],player_name[giveplayerid],PI[giveplayerid][pRank],rankid);
	AdmMSG(0xAFAFAFAA, string,1);

	format(string, sizeof(string), "Администратор "P"%s"G" изменил Вам ранг на "W"%d",player_name[playerid],rankid);
	SendUse(giveplayerid, string);

	PI[giveplayerid][pRank] = rankid;
	UpdatePlayerData(giveplayerid,"pRank", rankid);
	return 1;
}
CMD:setbizpos(playerid, params[])
{
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;

	new bizid, Float: X, Float: Y, Float: Z, Float: A, inter, world, bint,
		icon = 0, string[500];
		
	if(sscanf(params,"d",bizid)) return SendEsp(playerid, "/setbizpos [id бизнеса]");

	if(!(1 <= bizid <= gBusinessCount-1)) {
		format(string, sizeof(string), "От 1 до %d", gBusinessCount-1);
		ErrorMessage(playerid, string);
		return 1;
	}
	bint = gBusiness[bizid][bizzBint];
	
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);

	inter = GetPlayerInterior(playerid);
	world = GetPlayerVirtualWorld(playerid);

    gBusiness[bizid][bizzX] = X;
	gBusiness[bizid][bizzY] = Y;
	gBusiness[bizid][bizzZ] = Z;
	gBusiness[bizid][bizzR] = A;

 	UpdateBusinessDataFloat(bizid,"x",gBusiness[bizid][bizzX]);
    UpdateBusinessDataFloat(bizid,"y",gBusiness[bizid][bizzY]);
    UpdateBusinessDataFloat(bizid,"z",gBusiness[bizid][bizzZ]);
    UpdateBusinessDataFloat(bizid,"r",gBusiness[bizid][bizzR]);

	UpdateBintDataInt(bint,"interior",inter);

	UpdateBusinessDataInt(bizid,"world",world);

	DestroyDynamicPickup(gBusinessPickup[bizid]);
	DestroyDynamic3DTextLabel(gBusinessText[bizid]);
	DestroyDynamicMapIcon(gBusinessIcon[bizid]);
	DestroyDynamicArea(b_area[bizid]);

    switch(gBusiness[bizid][bizzType])
	{
		case 15:
		{
			gBusinessPickup[bizid] = CreateDynamicPickup(19132,1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],
				gBusiness[bizid][bizzWorld],gBints[bint][bintInterior]);

			gBusinessText[bizid] = CreateDynamic3DTextLabel("_",-1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ]+1.0,20.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, gBusiness[bizid][bizzWorld], gBints[bint][bintInterior]);

			b_area[bizid] = CreateDynamicSphere(gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],1.5,gBusiness[bizid][bizzWorld],
				gBints[bint][bintInterior],-1);
		}
		case 18:
		{
			gBusinessPickup[bizid] = CreateDynamicPickup(19627,1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],0,0);

			gBusinessText[bizid] = CreateDynamic3DTextLabel("_",-1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ]+1.0,20.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

			b_area[bizid] = CreateDynamicSphere(gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],1.5);
		}
		default:
		{
			if(gBusiness[bizid][bizzType] != 7)
			{
				gBusinessPickup[bizid] = CreateDynamicPickup(19132,1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],
					gBusiness[bizid][bizzWorld],gBints[bint][bintInterior]);
			}
			gBusinessText[bizid] = CreateDynamic3DTextLabel("_",-1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ]+1.0,20.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

			b_area[bizid] = CreateDynamicSphere(gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],1.5);
		}
	}
	switch(bint)
	{
		case 0:
		{
			if(gBusiness[bizid][bizzType] == 18) icon = 27;
			else icon = 47;
		}
		case 1..4,11,12: icon = 49;
		case 5..10: icon = 45;
		case 16: icon = 10;
		case 17: icon = 14;
		case 18: icon = 29;
		case 19..21: icon = 6;
		case 50: icon = 55;
		case 22: icon = 42;
		case 23: icon = 48;
		case 24: icon = 34;
		case 25: icon = 54;
		case 13..15: icon = 56;
	}
	if(icon)
	{
		if(gBusiness[bizid][bizzType] != 15) gBusinessIcon[bizid] = CreateDynamicMapIcon(gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ], icon, -1);
	}
	UpdateBusinessText(bizid);
	
	format(string, sizeof(string), "[A] %s изменил позицию пикапа бизнеса %s[%d]", player_name[playerid], gBusiness[bizid][bizzName], bizid);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:setbizmafia(playerid, params[]) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;

	new mafiaid;
	if(sscanf(params,"d",mafiaid)) {
		SendEsp(playerid, "/setbizmafia [номер]");
		SendClientMessage(playerid,COLOR_GREY, "1 - Итальянская | 2 - Японская | 3 - Русская");
		return 1;
	}
	if(mafiaid < 1 || mafiaid > 3) return 1;
	for(new b = 1; b < gBusinessCount; b++) {
		if(!PlayerToPoint(4.0,playerid,gBusiness[b][bizzX],gBusiness[b][bizzY],gBusiness[b][bizzZ])) continue;
		switch(mafiaid) {
			case 1: gBusiness[b][bizzMafia] = fLCN;
			case 2: gBusiness[b][bizzMafia] = fYAKUZA;
			case 3: gBusiness[b][bizzMafia] = fRM;
		}
		static const mafia_name[][] = {
			"Итальянская мафия",
			"Японская мафия",
			"Русская мафия"
		};
		new string[128];
		format(string, sizeof(string), "[A] %s изменил контроль бизнеса %s - %s", player_name[playerid], gBusiness[b][bizzName], mafia_name[mafiaid-1]);
		AdmMSG(0xAFAFAFAA, string,1);
		UpdateBusinessText(b);
		UpdateBusinessDataInt(b+1,"mafia",gBusiness[b][bizzMafia]);
		break;
	}
	return 1;
}
CMD:gspawn(playerid, params[]) {
	if(PI[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/gspawn [id]");

	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	PlayerSpawn(giveplayerid);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] заспавнил игрока %s[%d]",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	format(string, sizeof(string), "Вас заспавнил администратор %s[%d]",player_name[playerid],playerid);
	SendOk(giveplayerid, string);
	return 1;
}
CMD:vibor(playerid) {
	if(PI[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	D(playerid, D_ELECTION, DSL, ""P"Управление выборами", ""P"1."W" Список кандидатов\n"P"2."W" Добавить кандидата\n"P"3."W" Снять кандитата\n"P"4."W" Начать выборы\n"P"5."W" Окончить выборы", "Выбрать", "Закрыть");
	return 1;
}
CMD:inet(playerid, params[]) {
    if(PI[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new stats[100], stringstats[70], string[60],giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/inet [playerid]");
	GetPlayerNetworkStats(giveplayerid, stats, sizeof(stats));
    new last = strfind(stats, "Packetloss: ");
    new Float:packetloss = 0.0;
    if(last != -1) {
	    strmid(stringstats, stats, last, strlen(stats));
	    new last2 = strfind(stringstats, "%");
	    if(last != -1)  {
	        strdel(stats, 0, strlen(stats));
	        strmid(stats, stringstats, last2-3, last2);
	        packetloss = floatstr(stats);
	    }
    }
	format(string, sizeof(string), "Name: %s | PacketLoss: %.0f",player_name[giveplayerid],packetloss);
	SendClientMessage(playerid,0x6BB3FFAA,string);
	return true;
}

CMD:timestat(playerid) {
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new str[256];
	format(str, sizeof(str),"Последнее время прокрутки Timer_Unix: (%d ms). пик: (%d ms).\n", time_grandtimer, time_grandtimer_max);
	format(str, sizeof(str),"%sПоследнее время прокрутки OnPlayerUpdate: (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"newkeys\": (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"second_timer\": (%d ms). пик: (%d ms).", str, time_update,time_update_max,time_newkeys,time_newkeys_max,time_second,time_second_max);
	D(playerid,DIALOG_NONE,DSM, ""P"Нагрузка мода", str, "Закрыть", "");
	return 1;
}
CMD:createatm(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new atmID = -1;
	for(new a = 1; a < MAX_ATM; a++) {
		if(ATMData[a][atm_Taken] == 0) {
			atmID = a;
			break;
		}
	}
	if(atmID == -1) return ErrorMessage(playerid, "Максимальное количество банкоматов достигнуто");
	CreateATM(playerid, atmID);
	return 1;
}

CMD:editatm(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new atmID, title[29];
	if(!sscanf(params, "i", atmID)) {
		if(atmID < 1 || atmID > MAX_ATM) return ErrorMessage(playerid, "Указан неверный банкомат!");

		if(ATMData[atmID][atm_Taken] == 0) return ErrorMessage(playerid, "Банкомат, который Вы хотите редактировать, не активен");

		EdittingATM[playerid] = atmID;

		format(title, sizeof(title), "Изменение ATM: (ID: %d)", atmID);
		D(playerid, DIALOG_ATM_EDIT, DSL, title, "Изменение позиции(редактор)\nПеренести позицию на свои координаты\nУдаление ATM", "Далее", "Отмена");
	}
	else SendEsp(playerid, "/editatm [atmID]");
	return 1;
}
CMD:editmoved(playerid, params[]) {
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	new movedID, string[1024];
	if(!sscanf(params, "i", movedID))
	{
		if(movedID < 0 || movedID > sizeof(moved_info)) return ErrorMessage(playerid, "Указаны неверные ворота!");

		EdittingMoved[playerid] = movedID;
		EdittingMovedModel[playerid] = moved_info[movedID][moved_modelid];

		EditDynamicObject(playerid, moved_info[movedID][moved_id]);

		format(string, sizeof(string), "Вы изменяете позицию Moved (ID: %d).", movedID);
		SendOk(playerid, string);
	}
	else SendEsp(playerid, "/editmoved [movedID]");
	return 1;
}
cmd:createhouse(playerid, params[])
{
	if(PI[playerid][pAdmin] < 7 || dostup[playerid] == 0) return 1;

	if(gHouseCount > MAX_HOUSE_COUNT) return ErrorMessage(playerid, "Максимальное количество банкоматов достигнуто");

	new Float:Posa[4], string[128], query[128];

	GetPlayerPos(playerid, Posa[0], Posa[1], Posa[2]);
	GetPlayerFacingAngle(playerid, Posa[3]);

	format(query, sizeof(query), "INSERT INTO `houses` (id) VALUES ('%i')", gHouseCount);
	mysql_tquery(connects, query);
	
	gHouseCount++;
	
	gHouses[gHouseCount][houseX]   = Posa[0];
	gHouses[gHouseCount][houseY]   = Posa[1];
	gHouses[gHouseCount][houseZ]   = Posa[2];
	gHouses[gHouseCount][houseR]   = Posa[3];

	gHouses[gHouseCount][houseOwnerID] = 0;
	gHouses[gHouseCount][houseFamily] = 0;

	gHouses[gHouseCount][houseHabitID][0] = 0;
	gHouses[gHouseCount][houseHabitID][1] = 0;
	gHouses[gHouseCount][houseHabitID][2] = 0;

	strmid(gHouses[gHouseCount][houseOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(gHouseArendator[gHouseCount][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(gHouseArendator[gHouseCount][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(gHouseArendator[gHouseCount][2],"None",0,strlen("None"),MAX_PLAYER_NAME);

	SaveHouse(gHouseCount);

	format(string, sizeof(string), "%s успешно создал дом(ID: %d)", player_name[playerid], gHouseCount);
	SendOk(playerid, string);
	return 1;
}

CMD:asellhouses(playerid, params[])
{
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	new getstr[1024], player, num = -1;
	
	for(new houseid = 1; houseid < gHouseCount; houseid++)
	{
	    if(!GetString(gHouses[houseid][houseOwner], "None"))
		{
			GiveMoney(player,floatround(gHouses[houseid][housePrice]/100*80),"Продажа дома");

			mysql_tquery(connects, "UPDATE `accounts` SET `house` = '0'");

			gHouses[houseid][houseOwnerID] = 0;

			arendaor_closed(houseid);

			for(new i;i<9;i++)
			{
				if(PI[playerid][pMember] && !start_work[playerid])
				{
					TI[playerid][tMasked] = 0;
	   				start_work[playerid] = 1;
					PI[playerid][pJob] = 0;

					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				}
				if(i < 3) gHouses[houseid][houseImprove][i] = 0,gHouses[houseid][houseSkin][i] = 0;
				gHouses[houseid][houseGun][i] = 0;
			}

			strmid(gHouses[houseid][houseOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);

			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;

			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseHealth] = 0;
			gHouses[houseid][houseProducts] = 0;
			gHouses[houseid][houseFamily] = 0;

			SaveHouse(houseid);

			DestroyDynamicArea(gHouseArea[houseid]);
			DestroyDynamicPickup(gHousePickup[houseid]);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);

		    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

			if(!GetString(gHouses[houseid][houseOwner], "None"))
			{
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
			}
			else
			{
				gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			}

			FI[fWHITEHOUSE][fBank] += floatround(gHouses[houseid][housePrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;

			DeletePVar(playerid, "PlayerSellerPlayerHouse");

			num++;
		}
		else
		{
			GiveMoney(player,floatround(gHouses[houseid][housePrice]/100*80),"Продажа дома");

			mysql_tquery(connects, "UPDATE `accounts` SET `house` = '0'");

			gHouses[houseid][houseOwnerID] = 0;

			arendaor_closed(houseid);

			for(new i;i<9;i++)
			{
				if(PI[playerid][pMember] && !start_work[playerid])
				{
					TI[playerid][tMasked] = 0;
	   				start_work[playerid] = 1;
					PI[playerid][pJob] = 0;

					A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
				}
				if(i < 3) gHouses[houseid][houseImprove][i] = 0,gHouses[houseid][houseSkin][i] = 0;
				gHouses[houseid][houseGun][i] = 0;
			}

			strmid(gHouses[houseid][houseOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);

			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;

			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseHealth] = 0;
			gHouses[houseid][houseProducts] = 0;
			gHouses[houseid][houseFamily] = 0;

			SaveHouse(houseid);

			DestroyDynamicArea(gHouseArea[houseid]);
			DestroyDynamicPickup(gHousePickup[houseid]);
			DestroyDynamicMapIcon(gHouseIcon[houseid]);

		    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

			if(!GetString(gHouses[houseid][houseOwner], "None"))
			{
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
			}
			else
			{
				gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			}

			FI[fWHITEHOUSE][fBank] += floatround(gHouses[houseid][housePrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;

			DeletePVar(playerid, "PlayerSellerPlayerHouse");
		}
	}
	if(num == -1)
	{
		SendOk(playerid,"Занятые дома не были обнаружены.");
	}
	else
	{
	    format(getstr, sizeof(getstr), "Все занятые дома были проданы, кол-во занятых: %d/%d", num, gHouseCount);
		SendOk(playerid,getstr);
	}
	return 1;
}

CMD:asellhouse(playerid, params[])
{
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	new houseid, str[30], query[1024];
	if(sscanf(params,"d",houseid)) return	SendClientMessage(playerid, COLOR_GRAD1, " Введите: /asellhouse [houseid]");
	if(!(1 <= houseid <= gHouseCount-1))
	{
		format(str, sizeof(str), "От 1 до %d", gHouseCount-1);
		ErrorMessage(playerid, str);
		return 1;
	}
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `house` = '%d' LIMIT 1", houseid);
	mysql_tquery(connects, query, "check_owner_house", "i", playerid);

	new player = GetPVarInt(playerid, "PlayerSellerPlayerHouse");
	
	GiveMoney(player,floatround(gHouses[houseid][housePrice]/100*80),"Продажа дома");

	mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `house` = '0' WHERE `Name` = '%e'",gHouses[houseid][houseOwner]);
	mysql_tquery(connects, query);

	PI[player][pHouse] = 0;
	PI[player][pSellNeed][0] = 0;
	
	UpdatePlayerData(player,"house",PI[player][pHouse]);
	UpdatePlayerData(player,"homesell",PI[player][pSellNeed][0]);

	gHouses[houseid][houseOwnerID] = 0;

	arendaor_closed(houseid);
	
	for(new i;i<9;i++)
	{
		if(PI[playerid][pMember] && !start_work[playerid])
		{
			TI[playerid][tMasked] = 0;
			start_work[playerid] = 1;
			PI[playerid][pJob] = 0;
			
			A_SetPlayerSkin(playerid,PI[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
			
			SendOk(playerid,"Рабочий день начат");
		}
		if(i < 3) gHouses[houseid][houseImprove][i] = 0,gHouses[houseid][houseSkin][i] = 0;
		gHouses[houseid][houseGun][i] = 0;
	}

	strmid(gHouses[houseid][houseOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
	strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);
	
	gHouses[houseid][houseHabitID][0] = 0;
	gHouses[houseid][houseHabitID][1] = 0;
	gHouses[houseid][houseHabitID][2] = 0;

	gHouses[houseid][houseSafeCode] = 0;
	gHouses[houseid][houseSafeMoney] = 0;
	gHouses[houseid][houseDrugs] = 0;
	gHouses[houseid][houseHealth] = 0;
	gHouses[houseid][houseProducts] = 0;
	gHouses[houseid][houseFamily] = 0;
	
	SaveHouse(houseid);

	DestroyDynamicArea(gHouseArea[houseid]);
	DestroyDynamicPickup(gHousePickup[houseid]);
	DestroyDynamicMapIcon(gHouseIcon[houseid]);

    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

	if(!GetString(gHouses[houseid][houseOwner], "None"))
	{
		gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
	}
	else
	{
		gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
	}

	FI[fWHITEHOUSE][fBank] += floatround(gHouses[houseid][housePrice]/100*20);
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
	if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;

	DeletePVar(playerid, "PlayerSellerPlayerHouse");
	
	SendOk(playerid,"Дом продан.");
	return 1;
}

CMD:asellbiz(playerid, params[])
{
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	new bizid, str[30], query[1024];
	if(sscanf(params,"d",bizid)) return	SendClientMessage(playerid, COLOR_GRAD1, " Введите: /asellbiz [bizid]");
	if(!(1 <= bizid <= gBusinessCount))
	{
		format(str, sizeof(str), "От 1 до %d", gBusinessCount-1);
		ErrorMessage(playerid, str);
		return 1;
	}
	mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `bizz_work` = '0', `bizz_status` = '0' WHERE `Name` = '%e'",gBusiness[bizid][bizzOwner]);
	mysql_tquery(connects, query);

	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `bussiness` = '%d' LIMIT 1", bizid);
	mysql_tquery(connects, query, "check_owner_bizz", "i", playerid);

	new player = GetPVarInt(playerid, "PlayerSellerPlayerBizz");

	PI[player][bizz_work] = 0;
	UpdatePlayerData(player,"bizz_work",PI[player][bizz_work]);
	PI[player][pBusiness] = 0;
	PI[player][pSellNeed][1] = 0;
	UpdatePlayerData(player,"bussiness",PI[player][pBusiness]);
	UpdatePlayerData(player,"bizzsell",PI[player][pSellNeed][1]);

	strmid(gBusiness[bizid][bizzOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);

	gBusiness[bizid][bizzUpgrade][0] = 5000;
	gBusiness[bizid][bizzUpgrade][1] = 0;
	gBusiness[bizid][bizzUpgrade][2] = 0;
	gBusiness[bizid][bizzOwnerID] = 0;
	gBusiness[bizid][bizzProdOrder] = 0;
	gBusiness[bizid][bizzProdOrderPrice] = 0;
    gBusiness[bizid][bizzStatus] = 1;

    gBusiness[bizid][bizzDay] = gettime() + (random(169200) + 3600);

    SaveBusiness(bizid);

	GiveMoney(player,floatround(gBusiness[bizid][bizzSellPrice]/100*80),"Продажа бизнеса");
	
	DestroyDynamicPickup(gBusinessPickup[bizid]);
	DestroyDynamic3DTextLabel(gBusinessText[bizid]);
	DestroyDynamicArea(b_area[bizid]);
	DestroyDynamicMapIcon(gBusinessIcon[bizid]);

	new icon = 0, bint = gBusiness[bizid][bizzBint];

	switch(gBusiness[bizid][bizzType])
	{
		case 15:
		{
			gBusinessPickup[bizid] = CreateDynamicPickup(19132,1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],
				gBusiness[bizid][bizzWorld],gBints[bint][bintInterior]);

			gBusinessText[bizid] = CreateDynamic3DTextLabel("_",-1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ]+1.0,20.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, gBusiness[bizid][bizzWorld], gBints[bint][bintInterior]);

			b_area[bizid] = CreateDynamicSphere(gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],1.5,gBusiness[bizid][bizzWorld],
				gBints[bint][bintInterior],-1);
		}
		case 18:
		{
			gBusinessPickup[bizid] = CreateDynamicPickup(19627,1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],0,0);

			gBusinessText[bizid] = CreateDynamic3DTextLabel("_",-1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ]+1.0,20.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

			b_area[bizid] = CreateDynamicSphere(gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],1.5);
		}
		default:
		{
			if(gBusiness[bizid][bizzType] != 7)
			{
				gBusinessPickup[bizid] = CreateDynamicPickup(19132,1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],
					gBusiness[bizid][bizzWorld],gBints[bint][bintInterior]);
			}
			gBusinessText[bizid] = CreateDynamic3DTextLabel("_",-1,gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ]+1.0,20.0,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

			b_area[bizid] = CreateDynamicSphere(gBusiness[bizid][bizzX],gBusiness[bizid][bizzY],gBusiness[bizid][bizzZ],1.5);
		}
	}
	switch(bint)
	{
		case 0:
		{
			if(gBusiness[bizid][bizzType] == 18) icon = 27;
			else icon = 47;
		}
		case 1..4,11,12: icon = 49;
		case 5..10: icon = 45;
		case 16: icon = 10;
		case 17: icon = 14;
		case 18: icon = 29;
		case 19..21: icon = 6;
		case 50: icon = 55;
		case 22: icon = 42;
		case 23: icon = 48;
		case 24: icon = 34;
		case 25: icon = 54;
		case 13..15: icon = 56;
	}
	if(icon)
	{
		if(gBusiness[bizid][bizzType] != 15) gBusinessIcon[bizid] = CreateDynamicMapIcon(gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ], icon, -1);
	}
	UpdateBusinessText(bizid);

	SendOk(playerid,"Бизнес продан.");

	DeletePVar(playerid, "PlayerSellerPlayerBizz");
	return 1;
}

CMD:asellhotel(playerid, params[])
{
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	new hotelid, str[30], query[1024];
	if(sscanf(params,"d",hotelid)) return	SendClientMessage(playerid, COLOR_GRAD1, " Введите: /asellhotel [hotelid]");
	if(!(1 <= hotelid <= gHotelCount))
	{
		format(str, sizeof(str), "От 1 до %d", gHotelCount-1);
		ErrorMessage(playerid, str);
		return 1;
	}
	new sum = floatround(gHotels[hotelid][hotelPrice]/100*80);

	FI[fWHITEHOUSE][fBank] += floatround(gHotels[hotelid][hotelPrice]/100*20);
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	if(UpdateHotelData(hotelid,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #29");
	gHotels[hotelid][hotelOwnerID] = 0;
	SetString(gHotels[hotelid][hotelOwner],"");

	format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '0', `owner` = '' ,`bank` = '0',`bankday` = '0' WHERE `id` = '%d'",hotelid);
	mysql_tquery(connects, query,"","");

	UpdateHotelText(hotelid);

	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `hotelid` = '%d' LIMIT 1", hotelid);
	mysql_tquery(connects, query, "check_owner_hotel", "i", playerid);

	new player = GetPVarInt(playerid, "PlayerSellerPlayerHotel");

	PI[player][pHotel] = 0;
	PI[player][pSellNeed][2] = 0;
	UpdatePlayerData(player,"hotelid",PI[player][pHotel]);
	UpdatePlayerData(player,"hotelsell",PI[player][pSellNeed][2]);

	GiveMoney(playerid,sum,"продажа отеля");
	SendOk(playerid,"Отель продан государству");

	DeletePVar(playerid, "PlayerSellerPlayerHotel");
	return 1;
}

CMD:asellair(playerid, params[])
{
    if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	new airid, str[30], query[1024];
	if(sscanf(params,"d",airid)) return	SendClientMessage(playerid, COLOR_GRAD1, " Введите: /asellair [airid]");
	if(!(1 <= airid <= gAirCount))
	{
		format(str, sizeof(str), "От 1 до %d", gAirCount-1);
		ErrorMessage(playerid, str);
		return 1;
	}
	new sum = floatround(gAirs[airid][airPrice]/100*80);

	FI[fWHITEHOUSE][fBank] += floatround(gAirs[airid][airPrice]/100*20);
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	if(UpdateAirportData(airid,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Ошибка #32");
	gAirs[airid][airOwnerID] = 0;
	SetString(gAirs[airid][airOwner],"None");

	format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '0', `owner` = '' ,`bank` = '0',`bankday` = '0' WHERE `id` = '%d'",airid);
	mysql_tquery(connects, query,"","");

	UpdateAirportsText(airid);

	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `airport` = '%d' LIMIT 1", airid);
	mysql_tquery(connects, query, "check_owner_air", "i", playerid);

	new player = GetPVarInt(playerid, "PlayerSellerPlayerAir");

	PI[player][pAirport] = 0;
	PI[player][pSellNeed][3] = 0;
	UpdatePlayerData(player,"airport",PI[player][pAirport]);
	UpdatePlayerData(player,"airsell",PI[player][pSellNeed][3]);

	GiveMoney(player,sum,"продажа аэропорта");
	SendOk(playerid,"Аэропорт продан государству");

	DeletePVar(playerid, "PlayerSellerPlayerAir");
	return 1;
}

cmd:sethlock(playerid, params[])
{
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;

	new houseid, query[256];
	if(sscanf(params, "d",houseid)) return SendEsp(playerid, "/sethlock [дом]");

	if(!gHouses[houseid][houseClose])
	{
		gHouses[houseid][houseClose] = 1;

		format(query,sizeof(query),"~r~closed house №%d",houseid);
		GameTextForPlayer(playerid,query,2000,3);
	}
	else
	{
		gHouses[houseid][houseClose] = 0;

		format(query,sizeof(query),"~g~opened house №%d",houseid);
		GameTextForPlayer(playerid,query,2000,3);
	}
	SaveHouse(houseid);
	return 1;
}

cmd:sethpos(playerid, params[])
{
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	
	new houseid, Float: lwx, Float:lwy, Float:lwz,Float:a, hintstring[100];
	if(sscanf(params, "d",houseid)) return SendEsp(playerid, "/sethpos [дом]");

	GetPlayerPos(playerid,lwx, lwy, lwz);
	GetPlayerFacingAngle(playerid,a);

	gHouses[houseid][houseX] = lwx;
	gHouses[houseid][houseY] = lwy;
	gHouses[houseid][houseZ] = lwz;
	gHouses[houseid][houseR] = a;

	SaveHouse(houseid);

	DestroyDynamicArea(gHouseArea[houseid]);
	DestroyDynamicPickup(gHousePickup[houseid]);
	DestroyDynamicMapIcon(gHouseIcon[houseid]);

    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

	if(!GetString(gHouses[houseid][houseOwner], "None"))
	{
		gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
	}
	else
	{
		gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
	}

	format(hintstring, sizeof(hintstring), "Позиция дома: (ID: %d) успешно установлена", houseid);
	SendOk(playerid, hintstring);
	return 1;
}
alias:poscar("sethposcar", "aposcar", "sethcarpos");
cmd:poscar(playerid, params[])
{
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d",params[0])) return SendEsp(playerid, "/poscar [дом]");
    if(GetPlayerState(playerid) == 2)
	{
		new carid = GetPlayerVehicleID(playerid), Float: lwx, Float:lwy,
			Float:lwz,Float:a;

		GetVehiclePos(carid,lwx, lwy, lwz);
		GetVehicleZAngle(carid,a);

		gHouses[params[0]][houseParkX] = lwx;
		gHouses[params[0]][houseParkY] = lwy;
		gHouses[params[0]][houseParkZ] = lwz;
		gHouses[params[0]][houseParkR] = a;

	    if(GetPlayerState(playerid) == 2)
		{
	 		SetVehicleToRespawn(carid);
	 	}

		new hintstring[100];
		format(hintstring, sizeof(hintstring), "Позиция спавна транспорта №%d у дома: (ID: %d) успешно изменена", carid, params[0]);
		SendOk(playerid, hintstring);

		SaveHouse(params[0]);
	}
	else
	{
	    new Float: lwx, Float:lwy, Float:lwz,Float:a;
		GetPlayerPos(playerid,lwx, lwy, lwz);
		GetPlayerFacingAngle(playerid,a);

		gHouses[params[0]][houseParkX] = lwx;
		gHouses[params[0]][houseParkY] = lwy;
		gHouses[params[0]][houseParkZ] = lwz;
		gHouses[params[0]][houseParkR] = a;

		new hintstring[100];
		format(hintstring, sizeof(hintstring), "Позиция спавна транспорта у дома: (ID: %d) успешно изменена", params[0]);
		SendOk(playerid, hintstring);

		SaveHouse(params[0]);
	}
	return 1;
}
cmd:sethint(playerid,params[])
{
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params,"dd",params[0], params[1])) return SendEsp(playerid, "/sethint [дом] [интерьер]");
	if(params[1] > 41 || params[1] < 0) return SendClientMessage(playerid, -1, ""#INFO"Значение не должно быть меньше 0 и больше 41!");

	new hintstring[100];
	SetPlayerPosAC(playerid, hinterior_info[params[1]][h_pos_exit][0], hinterior_info[params[1]][h_pos_exit][1],
		hinterior_info[params[1]][h_pos_exit][2], params[0], hinterior_info[params[1]][h_interior]);

	SetPlayerFacingAngle(playerid,hinterior_info[params[1]][h_pos_exit][3]);

	gHouses[params[0]][houseHint] = params[1];

	TI[playerid][tInHouse] = true;

	format(hintstring, sizeof(hintstring), "Изменение интерьера дома: (ID: %d) на %d", params[0], params[1]);
	SendOk(playerid, hintstring);

	SaveHouse(params[0]);
	
	new houseid = params[0];

	DestroyDynamicArea(gHouseArea[houseid]);
	DestroyDynamicPickup(gHousePickup[houseid]);
	DestroyDynamicMapIcon(gHouseIcon[houseid]);

    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

	if(!GetString(gHouses[houseid][houseOwner], "None"))
	{
		gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
	}
	else
	{
		gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
	}
	return 1;
}

cmd:sethprice(playerid,params[])
{
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params,"dd",params[0], params[1])) return SendEsp(playerid, "/sethprice [дом] [цена]");

	new hintstring[100];
	gHouses[params[0]][housePrice] =  params[1];

	format(hintstring, sizeof(hintstring), "Изменение цены дома: (ID: %d) на %d", params[0], params[1]);
	SendOk(playerid, hintstring);

	SaveHouse(params[0]);
	
	new houseid = params[0];

	DestroyDynamicArea(gHouseArea[houseid]);
	DestroyDynamicPickup(gHousePickup[houseid]);
	DestroyDynamicMapIcon(gHouseIcon[houseid]);

    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

	if(!GetString(gHouses[houseid][houseOwner], "None"))
	{
		gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
	}
	else
	{
		gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
	}
	return 1;
}
cmd:sethklass(playerid,params[])
{
	if(PI[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
	if(sscanf(params,"dd",params[0], params[1])) return SendEsp(playerid, "/sethklass [дом] [класс]");
	if(params[1] > 3 || params[1] < 0) return SendClientMessage(playerid, -1, "["#INFO"] 0 - Эконом, 1 - Cредний, 2 - Элитный, 3 - Особняк!");

	new hintstring[100];
	gHouses[params[0]][houseClass] =  params[1];

	format(hintstring, sizeof(hintstring), "Изменение класса дома: (ID: %d) на %d", params[0], params[1]);
	SendOk(playerid, hintstring);
	
	SaveHouse(params[0]);

	new houseid = params[0];

	DestroyDynamicArea(gHouseArea[houseid]);
	DestroyDynamicPickup(gHousePickup[houseid]);
	DestroyDynamicMapIcon(gHouseIcon[houseid]);

    gHouseArea[houseid] = CreateDynamicSphere(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],1.5,0,0,-1);

    if(!GetString(gHouses[houseid][houseOwner], "None"))
	{
		gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
	}
	else
	{
		gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
		gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
	}
	return 1;
}
CMD:mp(playerid, params[]) {
    if(!Teleport) return ErrorMessage(playerid,"Активных мероприятий нет");
    if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Нельзя использовать в машине");
    if(PI[playerid][pJailTime] >= 1) return ErrorMessage(playerid, "Вы в тюрьме");
    if(PI[playerid][pHospital]) return ErrorMessage(playerid, "Вы в больнице");
	if(Teleport_Players[1] >= Teleport_Players[0]) return ErrorMessage(playerid,"Недостаточно мест на мероприятии");
    D(playerid, D_MP_3, DSM, ""P"Телепортация", "\n\n"W"Вы уверены, что хотите попасть в место проведения мероприятия?\n\n", "Да", "Нет");
    return 1;
}
CMD:gomp(playerid, params[]) {
    if(PI[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    if(!Teleport) D(playerid, D_MP, DSL, ""P"МЕРОПРИЯТИЕ", ""P"1."W" Создать телепорт\n"P"2."W" Раздать оружие\n"P"3."W" Раздать жизнь\n"P"4."W" Раздать броню\n"P"5."W" Обезоружить всех\n"P"6."W" Забрать броню\n"P"7."W" Заморозить игроков (радиус 50м)\n"P"8."W" Разморозить игроков (радиус 50м)\n"P"9."W" Выдать временный скин\n"P"10."W" Ввести название\n"P"11."W" Указать кол-во участников на МП", "Выбрать", "Отмена");
	else D(playerid, D_MP, DSL, ""P"МЕРОПРИЯТИЕ", ""P"1."W" Удалить телепорт\n"P"2."W" Раздать оружие\n"P"3."W" Раздать жизнь\n"P"4."W" Раздать броню\n"P"5."W" Обезоружить всех\n"P"6."W" Забрать броню\n"P"7."W" Заморозить игроков (радиус 50м)\n"P"8."W" Разморозить игроков (радиус 50м)\n"P"9."W" Выдать временный скин\n"P"10."W" Ввести название\n"P"11."W" Указать кол-во участников на МП", "Выбрать", "Отмена");
    return 1;
}
CMD:bizwar(playerid) {
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	if(PI[playerid][pRank] < 9) return ErrorMessage(playerid, "Вам не доступна данная команда");
	if(BizWarTime[0] > 0 || BizWarTime[1] > 0) return ErrorMessage(playerid, "Война за бизнес уже идет");
	if(tmphour < 12 || tmphour > 22) return ErrorMessage(playerid, "Использовать команду можно только с 12:00 до 22:00");
	if(BizHourTime > 0) {
		new string[128];
		format(string,sizeof(string),"Таймер до следующего захвата {AFAFAF}[%d мин]", BizHourTime);
		ErrorMessage(playerid, string);
		return 1;
	}
	new gang1 = -1;
	switch(PI[playerid][pMember]) {
		case fLCN: gang1 = MOROZ_LCN;
		case fYAKUZA: gang1 = MOROZ_YAKUZA;
		case fRM: gang1 = MOROZ_RM;
	}
	if(gang1 != -1) {
		if(fracmoroz[gang1] > unix) return ErrorMessage(playerid, "Ваша мафия не может принимать участия в войнах. (заморожена администратором)");
	}
	for(new h = 1;h<gBusinessCount;h++) {
		if(!IsPlayerInRangeOfPoint(playerid,3,gBusiness[h][bizzX], gBusiness[h][bizzY], gBusiness[h][bizzZ])) continue;
		switch(GetPlayerVirtualWorld(playerid)) {
			case 46: h = 7;
			case 47: h = 8;
			case 48: h = 9;
		}
		new gang = -1;
		switch(gBusiness[h][bizzMafia]) {
			case fLCN: gang = MOROZ_LCN;
			case fYAKUZA: gang = MOROZ_YAKUZA;
			case fRM: gang = MOROZ_RM;
		}
		if(gang != -1) {
			if(fracmoroz[gang] > unix) return ErrorMessage(playerid, "Мафия, которой Вы хотите забить стрелу не может принимать участия в войнах. (заморожена администратором)");
		}
		if(gBusiness[h][bizzMafia] == PI[playerid][pMember]) return ErrorMessage(playerid, "Этот бизнес под крышей Вашей мафии");
		if(gBusiness[h][bizzMafia] <= 0) {
			gBusiness[h][bizzMafia] = PI[playerid][pMember];
			UpdateBusinessDataInt(h+1,"mafia",gBusiness[h][bizzMafia]);
			UpdateBusinessText(h);
			SendClientMessage(playerid, COLOR_BLUE, "Бизнес взят под крышу Вашей мафии");
			return 1;
		}
		else {
			new string[156];
			format(string, sizeof(string), ""W"Данный бизнес "GREEN"%s"W" принадлежит {%06x}%s\n\n"P"\tВы согласны начать захват бизнеса?",gBusiness[h][bizzName], gFractionSpawn[gBusiness[h][bizzMafia]][fracColor] >>> 8,GetMN(gBusiness[h][bizzMafia]));
			if(!IsPlayerInBandOnline(gBusiness[h][bizzMafia])) return ErrorMessage(playerid,"Мафия на которую вы собираетесь напасть нет в сети");
			D(playerid,D_BIZWAR,DSM, ""P"Атака бизнеса",string,"Да","Нет");
			SetPVarInt(playerid, "bizwar_id", h);
			return 1;
		}
	}
	return ErrorMessage(playerid, "Необходимо находиться рядом с бизнесом");
}
CMD:bizlist(playerid, params[]) {
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	new count_business = 1,string[3400];
	string = ""W"№. Название + Доход бизнеса за сегодня\n\n";
	new fracid = -1;
	switch(PI[playerid][pMember]) {
		case fLCN:fracid = 0;
		case fYAKUZA:fracid = 1;
		case fRM:fracid = 2;
	}
	for(new i = 1; i<gBusinessCount; i++) {
		if(gBusiness[i][bizzMafia] != PI[playerid][pMember]) continue;
		if(fracid != -1) {
			if(count_business > 50) break;
			format(string, sizeof(string), "%s"P"%i."W" %s + $%d\n",string, count_business, gBusiness[i][bizzName],gBankMafia[fracid][i]);
			count_business++;
		}
	}
	if(count_business < 50) D(playerid, DIALOG_NONE, DSM, ""P"Бизнесы мафии", string, "Закрыть", "");
	else D(playerid, dBizList, DSM, ""P"Бизнесы мафии", string, "Далее", "Закрыть");
	return 1;
}
CMD:tie(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/tie [id]");
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вам недоступна данная команда");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(TI[playerid][tTied])  return ErrorMessage(playerid, "Вы связаны");
	if(TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Игрок уже связан");
	if (!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Игрок далеко от Вас");
	if(giveplayerid == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != 2 && !IsPlayerInVehicle(giveplayerid, GetPlayerVehicleID(playerid))) return ErrorMessage(playerid, "Игрок не в машине");
	new string[128];
	format(string, sizeof(string), "достал(а) веревку и связал(а) %s", player_name[giveplayerid]);
	MeAction(playerid,string, 5.0);
	TogglePlayerControllable(giveplayerid, 0);
	TI[giveplayerid][tTied] = true;
	return 1;
}
CMD:untie(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, CWHITE, "Используйте: /untie [id]");
	else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	else if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Игрок далеко от Вас");
	else if(TI[playerid][tTied])  return ErrorMessage(playerid, "Вы связаны");
	else if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Игрок не связан");
	else if(giveplayerid == playerid)  return ErrorMessage(playerid,not_id);
	new string[128];
	format(string, sizeof(string), "%s развязал %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	TogglePlayerControllable(giveplayerid, 1);
	TI[giveplayerid][tTied] = false;
	return 1;
}
CMD:giveradio(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	else if(sscanf(params,"d",giveplayerid))return SendEsp(playerid, "/giveradio [id]");
	else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	else if (!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Игрок далеко от Вас");
	else if(giveplayerid == playerid) return 1;
	else if(!GetPVarInt(giveplayerid,"takeradio")) return ErrorMessage(playerid, "У игрока не отбирали рацию");
	new string[128];
	format(string, sizeof(string), "%s вернул(а) Вам рацию", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	DeletePVar(giveplayerid,"takeradio");
	format(string, sizeof(string), "%s вернул(а) рацию %s 'y", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:takeradio(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/takeradio [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(GetPVarInt(giveplayerid,"takeradio")) return ErrorMessage(playerid, "У него нет телефона");
	if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Игрок далеко от Вас");
	else if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Игрок не связан");
	if(giveplayerid == playerid) return ErrorMessage(playerid, not_id);
	new string[128];
	format(string, sizeof(string), "%s забрал(а) у Вас рацию", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	SetPVarInt(giveplayerid,"takeradio", true);
	format(string, sizeof(string), "%s забрал(а) рацию у %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:bag(playerid,params[]) {
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid,"/bag [playerid]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(playerid == params[0]) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Игрок слишком далеко");
	new str_mh[78];
	if(p_mh[params[0]]==PlayerText:-1) {
		p_mh[params[0]]=CreatePlayerTextDraw(params[0],0.000000,0.000000,"|");
		PlayerTextDrawBackgroundColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawFont(params[0],p_mh[params[0]], 1);
		PlayerTextDrawLetterSize(params[0],p_mh[params[0]], 0.500000, 49.799957);
		PlayerTextDrawColor(params[0],p_mh[params[0]], -1);
		PlayerTextDrawSetOutline(params[0],p_mh[params[0]], 0);
		PlayerTextDrawSetProportional(params[0],p_mh[params[0]], 1);
		PlayerTextDrawSetShadow(params[0],p_mh[params[0]], 1);
		PlayerTextDrawUseBox(params[0],p_mh[params[0]], 1);
		PlayerTextDrawBoxColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawTextSize(params[0],p_mh[params[0]],640.000000,0.000000);
		PlayerTextDrawShow(params[0],p_mh[params[0]]);
		format(str_mh,78,"надел(а) мешок на голову %s",player_name[params[0]]);
		MeAction(playerid,str_mh);
		SendOk(playerid,"Чтобы снять мешок нажмите "W"/bag"G" еще раз");
	}
	else {
		PlayerTextDrawHide(params[0],p_mh[params[0]]);
		PlayerTextDrawDestroy(params[0],p_mh[params[0]]);
		p_mh[params[0]]=PlayerText:-1;
		format(str_mh,78,"снял(а) мешок с головы %s",player_name[params[0]]);
		MeAction(playerid,str_mh);
	}
	return true;
}
CMD:givephone(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	else if(sscanf(params,"d",giveplayerid))return SendEsp(playerid, "/givephone [id]");
	else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	else if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Игрок слишком далеко");
	else if(giveplayerid == playerid) return ErrorMessage(playerid, "Нельзя вернуть телефон самому себе");
	else if(!GetPVarInt(giveplayerid,"takephone")) return ErrorMessage(playerid, "У игрока не отбирали телефон");
	new string[128];
	format(string, sizeof(string), "%s вернул(а) Вам телефон", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	DeletePVar(giveplayerid,"takephone");
	format(string, sizeof(string), "%s вернул(а) телефон %s 'y", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:takephone(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вы не мафиози");
	if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(sscanf(params,"d",giveplayerid))return SendEsp(playerid, "/takephone [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(GetPVarInt(giveplayerid,"takephone") || !PI[giveplayerid][pPhone]) return ErrorMessage(playerid, "У него нет телефона");
	else if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Игрок слишком далеко");
	else if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Игрок не связан");
	if(giveplayerid == playerid) return ErrorMessage(playerid, not_id);
	new string[128];
	format(string, sizeof(string), "%s забрал(а) у Вас мобильный", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	SetPVarInt(giveplayerid,"takephone", true);
	format(string, sizeof(string), "%s забрал(а) мобильный у %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:gag(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/gag [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid, not_id);
	if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Игрок не связан");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Вы связаны");
	if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Игрок слишком далеко");
	new string[128];
	if(TI[giveplayerid][tGag]) {
		TI[giveplayerid][tGag] = false;
		TI[giveplayerid][tGagTime] = 0;
		format(string, sizeof(string), "%s вытащил кляп у %s'a", player_name[playerid] ,player_name[giveplayerid]);
		SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	}
	else {
		if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вам недоступна данная команда");
		if(PI[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
		TI[giveplayerid][tGag] = true;
		TI[giveplayerid][tGagTime] = 600;
		format(string, sizeof(string), "%s вставил кляп в рот %s'у", player_name[playerid] ,player_name[giveplayerid]);
		SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	}
	return 1;
}
CMD:zone(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функция");
	new total = 0,string[128];
	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == PI[playerid][pMember]) total++;
	}
	format(string,sizeof(string),"Территорий под контролем: "P"%d",total);
	SendOk(playerid,string);
	return 1;
}
CMD:kd(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функция");
	new h, m, s; gettime(h,m,s);
	if(h < 14 || h >= 23) {
		D(playerid,DIALOG_NONE,DIALOG_STYLE_TABLIST, "Информация", ""P"1."W" The Ballas\t"NO"Воевать можно с 14:00\n\
								"P"2."W" The Vagos\t"NO"Воевать можно с 14:00\n\
								"P"3."W" The Grove\t"NO"Воевать можно с 14:00\n\
								"P"4."W" The Aztec\t"NO"Воевать можно с 14:00\n\
								"P"5."W" The Rifa\t"NO"Воевать можно с 14:00", "Закрыть", "");
		return 1;
	}
	new year[5], month[5], day[5], hour[5], minute[5], second[5],strs_0[35],strs_1[35],strs_2[35],strs_3[35],strs_4[35];
	if(capture_kd[fBALLAS] >= unix) {
		timestamp_to_date(capture_kd[fBALLAS]-unix, year[0], month[0], day[0], hour[0], minute[0], second[0]);
		format(strs_0,sizeof strs_0,""NO"%dч %dм %dс",hour[0], minute[0], second[0]);
	}
	else hour[0] = minute[0] = second[0] = 0,strs_0 = ""GREEN"Захват возможен";
	if(capture_kd[fVAGOS] >= unix) {
		timestamp_to_date(capture_kd[fVAGOS]-unix, year[1], month[1], day[1], hour[1], minute[1], second[1]);
		format(strs_1,sizeof(strs_1),""NO"%dч %dм %dс",hour[1], minute[1], second[1]);
	}
	else hour[1] = minute[1] = second[1] = 0,strs_1 = ""GREEN"Захват возможен";
	if(capture_kd[fGROVE] >= unix) {
		timestamp_to_date(capture_kd[fGROVE]-unix, year[2], month[2], day[2], hour[2], minute[2], second[2]);
		format(strs_2,sizeof(strs_2),""NO"%dч %dм %dс",hour[2], minute[2], second[2]);
	}
	else hour[2] = minute[2] = second[2] = 0,strs_2 = ""GREEN"Захват возможен";
	if(capture_kd[fAZTEC] >= unix) {
		timestamp_to_date(capture_kd[fAZTEC]-unix, year[3], month[3], day[3], hour[3], minute[3], second[3]);
		format(strs_3,sizeof(strs_3),""NO"%dч %dм %dс",hour[3], minute[3], second[3]);
	}
	else hour[3] = minute[3] = second[3] = 0,strs_3 = ""GREEN"Захват возможен";
	if(capture_kd[fRIFA] >= unix) {
		timestamp_to_date(capture_kd[fRIFA]-unix, year[4], month[4], day[4], hour[4], minute[4], second[4]);
		format(strs_4,sizeof(strs_4),""NO"%dч %dм %dс",hour[4], minute[4], second[4]);
	}
	else hour[4] = minute[4] = second[4] = 0,strs_4 = ""GREEN"Захват возможен";
	
	static const f_str[] = ""P"1."W" The Ballas\t%s\n\
							"P"2."W" The Vagos\t%s\n\
							"P"3."W" The Grove\t%s\n\
							"P"4."W" The Aztec\t%s\n\
							"P"5."W" The Rifa\t%s";
	new string[sizeof(f_str) + 140];
	format(string,sizeof(string),f_str,strs_0,strs_1,strs_2,strs_3,strs_4);
	D(playerid,DIALOG_NONE,DST, "Информация", string, "Закрыть", "");
	return 1;
}
CMD:gangtop(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функция");
	D(playerid,D_GANGTOP,DST, "Информация", ""P"1."W" Территории\n"P"2."W" Граффити\n"P"3."W" Текущий рейтинг\n"P"4."W" G-POINTS", "Выбрать", "Закрыть");
	return 1;
}
CMD:dipinfo(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функция");
	dialog_diplom(playerid,false);
	return 1;
}
CMD:givekey(playerid, params[]) {
	if(!PI[playerid][pMember]) return ErrorMessage(playerid, "Вам не доступна эта функция");
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/givekey [id]");
	if(IsAGang(playerid)) if(PI[playerid][pRank] < 5) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Игрок слишком далеко");
	if(TI[giveplayerid][tEnter][PI[playerid][pMember]]) {
		MeAction(playerid,"забрал(а) пропуск");
		TI[giveplayerid][tEnter][PI[playerid][pMember]] = false;
		SendOk(giveplayerid,"У Вас забрали пропуск");
		return 1;
	}
	if(!TI[giveplayerid][tEnter][PI[playerid][pMember]]) {
		MeAction(playerid,"выдал(а) пропуск");
		TI[giveplayerid][tEnter][PI[playerid][pMember]] = true;
		SendOk(giveplayerid,"Вам выдали пропуск");
		return 1;
	}
	return 1;
}

CMD:gpay(playerid, params[]) {
	if(!IsAGang(playerid) || !PI[playerid][pLeader]) return ErrorMessage(playerid, "Вам не доступна эта функция");
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/gpay [сумма]");
	if(params[0] < 1 || params[0] > 100000) return ErrorMessage(playerid, "От $1 и до $100.000");
	new num = 0 ;
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(PI[i][pMember] != PI[playerid][pMember] || playerid == i) continue;
		num++;
	}
	new string[128];
	format(string, sizeof(string), "\n\n"W"Вы действительно хотите выдать премию в размере "ORANGE"$%d"W" членам Вашей банды?\n\n", params[0]*num);
	D(playerid, D_GANG_PAY, DSM, ""P"Выдача премии", string, "Выдать", "Отмена");
	SetPVarInt(playerid, "prem_gang_money", params[0]);
	return 1 ;
}

CMD:capture(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функция");
	if(zahvat == true) return ErrorMessage(playerid, "В данный момент идёт захват территории");
	if(PI[playerid][pRank] < 9) return ErrorMessage(playerid, "Доступно с 9 ранга");
	new h, m, s; gettime(h,m,s);
	if(h < 14 || h >= 23) return ErrorMessage(playerid, "Использовать команду можно только с 14:00 до 23:00");
	new string[244];
	//if(RecoveryTime == PI[playerid][pMember]) return ErrorMessage(playerid, "Ваша банда может начать захват только через капт");
	if(capture_kd[PI[playerid][pMember]] > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(capture_kd[PI[playerid][pMember]] - unix, year, month, day, hour, minute, second);
		format(string,128,"Таймер до следующего захвата {AFAFAF}[%02d:%02d:%02d]", hour, minute, second);
		ErrorMessage(playerid, string);
		return 1;
	}
	new gang1 = -1;
	switch(PI[playerid][pMember]) {
		case fBALLAS: gang1 = MOROZ_BALLAS;
		case fVAGOS: gang1 = MOROZ_VAGOS;
		case fGROVE: gang1 = MOROZ_GROVE;
		case fAZTEC: gang1 = MOROZ_AZTECAS;
		case fRIFA: gang1 = MOROZ_RIFA;
	}
	if(gang1 != -1) {
		if(fracmoroz[gang1] > unix) {
			ErrorMessage(playerid,"Ваша банда заморожена");
			return 1;
		}
	}
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] != -1) {
		new i = IDGZ[playerid];
		if(capture_kd[GZInfo[i][gFrakVlad]] > unix) {
			new year, month, day, hour, minute, second;
			timestamp_to_date(capture_kd[GZInfo[i][gFrakVlad]] - unix, year, month, day, hour, minute, second);
			format(string,128,"Таймер до следующего захвата данной банды {AFAFAF}[%02d:%02d:%02d]", hour, minute, second);
			ErrorMessage(playerid, string);
			return 1;
		}
		if(PI[playerid][pMember] == GZInfo[i][gFrakVlad]) return ErrorMessage(playerid,"Вы не можете захватить собственную территорию");
		if(i == 90 && black_prods[9] > unix) return ErrorMessage(playerid,"В данный момент борьба за чёрный рынок недоступна");
		if(i == 97 || i == 93 || i == 41 || i == 0 || i == 24) return ErrorMessage(playerid,"Нельзя закаптить спавн банды");
		if(f_diplomacy[PI[playerid][pMember] - 15][GZInfo[i][gFrakVlad] - 15] == dip_status_alliance) return ErrorMessage(playerid,"С данной бандой заключен союз");
		if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return ErrorMessage(playerid, "Банда на которую вы собираетесь напасть нет в сети / Меньше трёх человек");
		new gang = -1;

		switch(GZInfo[i][gFrakVlad]) {
			case fBALLAS: gang = MOROZ_BALLAS;
			case fVAGOS: gang = MOROZ_VAGOS;
			case fGROVE: gang = MOROZ_GROVE;
			case fAZTEC: gang = MOROZ_AZTECAS;
			case fRIFA: gang = MOROZ_RIFA;
		}
		if(gang != -1) {
			if(fracmoroz[gang] > unix) {
				ErrorMessage(playerid,"Банду которую вы хотите захватить невозможно");
				ErrorMessage(playerid,"Она заморожена администратором, ожидайте сообщения в чате когда заморозка будет снята");
				return 1;
			}
		}
		new attemptslot= -1;
		switch(PI[playerid][pMember]) {
			case fVAGOS: attemptslot = 0;
			case fBALLAS: attemptslot = 1;
			case fGROVE: attemptslot = 2;
			case fRIFA: attemptslot = 3;
			case fAZTEC: attemptslot = 4;
		}
		if(attemptslot != -1) {
			if(CaptureAttempt[attemptslot] >= MAX_ATTEMPT_GANG) {
				format(string, 128, "Ваша банда уже воевала более %i раз", MAX_ATTEMPT_GANG);
				ErrorMessage(playerid, string);
				return 1;
			}
		}
		zahvat = true;
		//RecoveryTime = PI[playerid][pMember];
		GZInfo[i][gTime] = 60*15;
		GZInfo[i][gNapad] = PI[playerid][pMember];
		format(string, 112, "%s(%s) начал(a) захват территории банды %s",GFrac(PI[playerid][pMember]),player_name[playerid],GFrac(GZInfo[i][gFrakVlad]));
		SendBand(COLOR_LIGHTRED,string);
		format(string, 144, "[A] Начался капт между бандой %s и %s",GFrac(PI[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]));
		AdmMSG(COLOR_YELLOW, string, 1);
		GangZoneFlashForAll(GZInfo[i][gID],GetGangColor(GZInfo[i][gNapad]));
		
		GZInfo[i][ZoneOnBattle] = 1;
		new Float:x_pos,Float:y_pos,Float:z_pos;
		GetPlayerPos(playerid, x_pos,y_pos,z_pos);
		gz_area = CreateDynamicSphere(x_pos,y_pos,z_pos, 170, 0,0);
		GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i, PI[playerid][pMember], GZInfo[i][gFrakVlad]);
		if(attemptslot != -1) CaptureAttempt[attemptslot] ++;

		if(QuestProgress[playerid][9] < 1 && AcceptQuest[playerid][9] != 0) QuestProgress[playerid][9] ++;
		if(QuestProgress[playerid][9] == 1 && AcceptQuest[playerid][9] != 0) {
			D(playerid,DIALOG_NONE,DSM, ""P"Квест",""W"Вы успешно спровоцировали войну. Данное задание можно завершить и забрать за него награду","Закрыть","");
			NextStapQI(playerid,9);
		}
		return 1;
	}
	else ErrorMessage(playerid, "Необходимо находится на территории которую хотите завоевать");
	return 1;
}
CMD:sklad(playerid, params[]) {
	if((!IsAGang(playerid) && !IsAMafia(playerid)) || PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна данная команда");
	new str[9];
	if(FI[GetTeamID(playerid)][fSklad] == 0) FI[GetTeamID(playerid)][fSklad] = 1,str = "открыл";
	else FI[GetTeamID(playerid)][fSklad] = 0,str = "закрыл";
	static const f_str[] = "[F] %s[%d] %s(а) склад";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 9)];

	format(string,sizeof(string),f_str,player_name[playerid],playerid,str);
	SendFamilyMessage(PI[playerid][pMember],0x6ab1ffaaff,string);
	UpdateFraction(GetTeamID(playerid),"Sklad",FI[GetTeamID(playerid)][fSklad]);
	return 1;
}
CMD:sellgun(playerid,params[]) {
    new weapname[24];
    if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
	if(sscanf(params,"udd",params[0],params[1],params[2])) return SendEsp(playerid,"/sellgun [id игрока] [к-во патронов] [цена]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Вы далеко друг от друга");
	if(params[2] > 10000 || params[2] < 1) return ErrorMessage(playerid,"Цена должна быть от $1 до $10.000");
	if(params[1] > 100 || params[1] < 1) return ErrorMessage(playerid,"От 1 до 100 патрон");
	if(!GetPlayerWeapon(playerid)) return ErrorMessage(playerid,"Возьмите в руку то оружие, которое хотите продать");
	if(GetPlayerAmmo(playerid) < params[1]) return ErrorMessage(playerid,"У Вас недостаточно патронов");
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] == -1) return ErrorMessage(playerid,"Продавать оружие можно только на своей территории");
	new i = IDGZ[playerid];
	if(PI[playerid][pMember] != GZInfo[i][gFrakVlad]) return ErrorMessage(playerid,"Продавать оружие можно только на своей территории");

	SetPVarInt(playerid,"gunoffee",params[0]);
	SetPVarInt(params[0],"gunoffee",params[0]);
	SetPVarInt(params[0],"gunoffer",playerid);
	SetPVarInt(params[0],"gunprice",params[2]);
	SetPVarInt(params[0],"gunammo",params[1]);
	SetPVarInt(params[0],"gunid",GetPlayerWeapon(playerid));
	GetWeaponName(GetPlayerWeapon(playerid),weapname,24);

	new string[512];
	format(string, sizeof(string), "Вы предложили "P"%s"G" купить "W"%s [%d]"G" за "ORANGE"$%d",player_name[params[0]],weapname,params[1],params[2]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""P"%s"G" предложил Вам купить "W"%s [%d]"G" за "ORANGE"$%d",player_name[playerid],weapname,params[1],params[2]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");
	return true;
}
CMD:bmarket(playerid) {
	if(!IsAGang(playerid) || PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна данная команда");
	if(black_prods[0] != GetTeamID(playerid)) return ErrorMessage(playerid,"Чёрный рынок крышует другая банда");
	static const f_str[] = "Наименование\tЦена\tСклад\n\
							Наркотики\t%d\t%d\n\
							Боеприпасы\t%d\t%d\n\
							Бронежилет\t%d\t%d\n\
							Армейская форма\t%d\t%d\n";
	new string[sizeof(f_str) +2 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
	format(string,sizeof(string),f_str,black_prods[5],black_prods[1],black_prods[6],black_prods[2],black_prods[7],black_prods[3],black_prods[8],black_prods[4]);
	D(playerid,D_BLACK_MARKET,DSTH,"Чёрный рынок",string,"Выбрать","Отмена");
	return 1;
}
alias:bandchat("bc");
CMD:bandchat(playerid, params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid,"Вы не бандит");
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна данная команда");
	if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/bc [текст]");
	if(PI[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(GetPVarInt(playerid,"bc_timer") > unix) return ErrorMessage(playerid, "Можно писать в эту рацию 1 раз в 30 секунд");  
	SetPVarInt(playerid, "bc_timer", unix+30);
	new string[144];
	format(string, sizeof(string), "[BC] {%06x}%s "W"%s[%d]: %s", gFractionSpawn[PI[playerid][pMember]][fracColor] >>> 8,FI[PI[playerid][pMember]][fName],player_name[playerid],playerid, params);
	SendBand(COLOR_RED, string);
	foreach(new i:Player) {
		switch(GetPVarInt(i,"admin_tipster")) {
			case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: SendClientMessage(i, COLOR_LIGHTRED, string);
		}
	}
	return 1;
}
CMD:fmute(playerid, params[]) {
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна данная команда");
	new id, time, reason[100], string[150];
	if(sscanf(params,"dds[100]", id, time, reason)) return SendEsp(playerid, "/fmute [id] [время] [причина]");
	if(IsAIP(reason)) return 1;
	if(time < 1 || time > 60) return ErrorMessage(playerid, "Выдать заглушку нельзя менее 1 минуты и более 60 минут");
	if(GetTeamID(id) != GetTeamID(playerid)) return ErrorMessage(playerid, "Данный игрок не состоит в Вашей организации");
	if(PI[id][pLeader] > 0) return ErrorMessage(playerid,"Вы не можете выдать заглушку лидеру");
	if(PI[id][pFMute]) return ErrorMessage(playerid, "У данного игрока уже есть заглушка");
	format(string,sizeof(string),"%s заглушил(а) игрока %s на %d минут. Причина: %s",player_name[playerid],player_name[id],time,reason);
	SendFamilyMessage(GetTeamID(playerid),COLOR_LIGHTRED, string);
	PI[id][pFMute] = time*60;
	UpdatePlayerData(id,"pFMute",PI[id][pFMute]);
	return true;
}
CMD:funmute(playerid, params[]) {
	if(PI[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна данная команда");
	new id, string[150];
	if(sscanf(params,"d", id)) return SendEsp(playerid, "/funmute [id]");
	if(GetTeamID(id) != GetTeamID(playerid)) return ErrorMessage(playerid, "Данный игрок не состоит в Вашей организации");
	if(!PI[id][pFMute]) return ErrorMessage(playerid, "У данного игрока нет заглушки");
	format(string,sizeof(string),"%s разглушил(а) игрока %s",player_name[playerid],player_name[id]);
	SendFamilyMessage(GetTeamID(playerid),COLOR_LIGHTRED, string);
	PI[id][pFMute] = 0;
	UpdatePlayerData(id,"pFMute",PI[id][pFMute]);
	return true;
}
CMD:sellzone(playerid,params[]) {
	if(!PI[playerid][pLeader]) return 1;
	IDGZ[playerid] = GetIDGZ(playerid);
	new giveplayerid;
	if(IDGZ[playerid] != -1) {
		new i = IDGZ[playerid];
		if(PI[playerid][pLeader] != GZInfo[i][gFrakVlad]) return ErrorMessage(playerid, "Вы не на своей территории");
		else if(sscanf(params,"dd",giveplayerid,params[1])) return SendEsp(playerid, "/sellzone [id] [цена]");
		else if(params[1] < 10000 || params[1] > 100000) return ErrorMessage(playerid, "Цена должна быть: от 10000 до 100000");
		else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
		else if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Вы далеко от этого человека");
		else if(giveplayerid == playerid) return ErrorMessage(playerid, "Эта итак Ваша территория");
		if(i == 97 || i == 93 || i == 41 || i == 0 || i == 24) return ErrorMessage(playerid,"Нельзя продать спавн банды");
		if(!PI[giveplayerid][pLeader]) return ErrorMessage(playerid,"Продажа территорий доступна лидерам банд");

		new string[325];
		format(string, sizeof(string), "Вы предложили "P"%s"G" купить территорию за "ORANGE"$%d",player_name[giveplayerid],params[1]);
		SendUse(playerid, string);
		format(string, sizeof(string), ""P"%s"G" предложил Вам купить территорию за за "ORANGE"$%d",player_name[playerid],params[1]);
		SendUse(giveplayerid, string);
		SendClientMessage(giveplayerid,COLOR_BLUE,"Нажмите "YES"Y "BLUE"чтобы согласиться "NO"N "BLUE"для отказа");

		SetPVarInt(giveplayerid,"ZoneOffer", playerid + 1);
		SetPVarInt(giveplayerid,"ZonePrice", params[1]);
		SetPVarInt(giveplayerid,"sellzone", PI[playerid][pMember]);
	}
	return 1;
}
EndCapt(m) {
	for(new z = 0;z < 10;z++) {
		TextDrawHideForPlayer(m, Capture[z]);
	}
	//for(new i = 0; i < 5; i++) SendDeathMessageToPlayer(m, INVALID_PLAYER_ID, INVALID_PLAYER_ID, WEAPONSTATE_UNKNOWN);
	DeletePVar(m,"ppkz");
	TextDrawHideForPlayer(m, inFigh);
	infight[m] = false;
}
CB: MinigameReset() {
	if(g_game_status != 0) {
		new null;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(!TI[i][tBlockWars]) continue;
			null++;
			if(null > 0) {
				if(g_game_status != 1) {
					GameTextForPlayer(i, " ", 10, 3);
					TogglePlayerControllable(i, 0);
					SetTimerEx("UnFreeze" , 800, false, "i", i);
					SetPlayerPosAC(i,GetPVarFloat(i,"pos_comp_x"),GetPVarFloat(i,"pos_comp_y"),GetPVarFloat(i,"pos_comp_z"),GetPVarInt(i,"comp_vw"),GetPVarInt(i,"comp_int"));
				}
			}
		}
		g_game_status = 0;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(!TI[i][tBlockWars]) continue;
			TI[i][tBlockWars] = false;
		}
		if(g_arena_created) {
			for(new i; i < 64; i++) {
				DestroyDynamicObject(b_objectid[i]);
				DestroyDynamicObject(b_button[i]);
				DestroyDynamicPickup(b_pickupid[i]);
				if(i < sizeof b_gobjectid) DestroyDynamicObject(b_gobjectid[i]);
			}
			g_arena_created = false;
		}
	}
}
stock SetBlockColor(blockid, color) {
	if(g_arena_created) {
		b_has_color[blockid] = color;
		SetDynamicObjectMaterial(b_objectid[blockid], 0, 8398, "luxorland", "des_dirt1", color);
	}
}
stock GetBlockColor(blockid) {
	if(g_arena_created) return b_has_color[blockid];
	return -1;
}

stock GetBlockPos(blockid, &Float:pos_x, &Float:pos_y, &Float:pos_z) {
	if(g_arena_created) GetDynamicObjectPos(b_objectid[blockid], pos_x, pos_y, pos_z);
}

stock GetRandomBlock() {
	if(g_arena_created) return random(64);
	return -1;
}

stock SetBlockUniqueID(blockid, uniqueid) {
	if(g_arena_created) b_unique_id[blockid] = uniqueid;
}
CB: MinigamePrepare() {
	if(g_game_status == 1) {
  		new null;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(!TI[i][tBlockWars]) continue;
			null++;
		}
		if(null < 2) {
		    foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!TI[i][tBlockWars]) continue;
				SendClientMessage(i,COLOR_GREY, "Игра 'Capture Blocks' была отменена из-за недостатка участников");
				MinigameReset();
				return 0;
			}
		}
		if(!g_arena_created) {
			new Float:pos[3] = { 540.0, -2140.0, -1.0 };
			new Float:tmp_x = pos[0];

	/*		b_gobjectid[0] = CreateDynamicObject(18981, pos[0] -12.499999, pos[1] -12.499998, pos[2] +1.970000, 0.000000, 90.000000, 0.000000,101);
			SetDynamicObjectMaterial(b_gobjectid[0], 0, 19373, "all_walls", "desgreengrass", 0);
			b_gobjectid[1]= CreateDynamicObject(18981, pos[0] -12.499999, pos[1] +12.500001, pos[2] +1.970000, 0.000007, 89.999992, 270.000000,101);
			SetDynamicObjectMaterial(b_gobjectid[1], 0, 19373, "all_walls", "desgreengrass", 0);
			b_gobjectid[2] = CreateDynamicObject(18981, pos[0] +12.500000, pos[1] +12.500004, pos[2] +1.970000, 0.000006, 90.000000, 180.000030,101);
			SetDynamicObjectMaterial(b_gobjectid[2], 0, 19373, "all_walls", "desgreengrass", 0);
			b_gobjectid[3] = CreateDynamicObject(18981, pos[0] +12.500014, pos[1] -12.499995, pos[2] +1.970000, 0.000005, 90.000000, 90.000068,101);
			SetDynamicObjectMaterial(b_gobjectid[3], 0, 19373, "all_walls", "desgreengrass", 0);*/

			for(new i; i < 64; i++) {
				b_has_color[i] = 0xFFFFFFFF;
				b_unique_id[i] = -1;
				if(i % 8 == 0 && i != 0) {
					pos[0] = tmp_x;
					pos[1] += 5.7;
				}
			//	b_objectid[i] = CreateDynamicObject(18764, pos[0] -19.991994, pos[1] -19.991994, pos[2] +0.005, 0.00, 0.00, 0.00,101);
			//	b_button[i] = CreateDynamicObject(18762, pos[0] -19.991994, pos[1] -19.991994, pos[2] +0.009, 0.00, 0.00, 0.00,101);
			//	SetDynamicObjectMaterial(b_objectid[i], 0, 8398, "luxorland", "des_dirt1", 0xFFFFFFFF);
			//	b_pickupid[i] = CreateDynamicPickup(19300, 1, pos[0] -19.991994, pos[1] -19.991994, pos[2] +4.00);
				pos[0] += 5.7;
			}
			g_arena_created = true;
		}
		new Float:x, Float:y, Float:z, j;
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(!TI[i][tBlockWars]) continue;
			p_has_color[i] = g_default_colors[j];
			GetBlockPos(g_start_pos[j], x, y, z);
			SetPlayerPosAC(i,x, y, z + 3,101,0);
			TogglePlayerControllable(i, 0);
			SetCameraBehindPlayer(i);
			j++;
		}
		g_game_status = 2;
		SetTimerEx("MinigameCountdown", 1000, 0, "i", 3);
		return true;
	}
	return 0;
}
CB: MinigameCountdown(count) {
	if(g_game_status == 2) {
		if(count > 0) {
			new str[2];
			format(str, sizeof str, "%i", count);
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!TI[i][tBlockWars]) continue;
				if(IsPlayerInRangeOfPoint(i, 30.0, 540.0, -2140.0, -1.0)) {
					GameTextForPlayer(i, str, 2000, 3);
					PlayerPlaySound(i, 1056, 540.0, -2140.0, -1.0);
				}
			}
			count--;
			SetTimerEx("MinigameCountdown", 1000, 0, "i", count);
		}
		else {
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!TI[i][tBlockWars]) continue;
				if(IsPlayerInRangeOfPoint(i, 30.0, 540.0, -2140.0, -1.0)) {
					GameTextForPlayer(i, "~g~START!", 2000, 3);
					PlayerPlaySound(i, 1057, 540.0, -2140.0, -1.0);
					TogglePlayerControllable(i, 1);
				}
				else TI[i][tBlockWars] = false;
			}
			SetTimerEx("MinigameUpdate", 1000, 0, "i", 60);
		}
	}
}
CB: MinigameUpdate(seconds) {
	if(g_game_status == 2) {
	    new null;
		foreach(new i:Player) { 
			if(!TI[i][tLogin]) continue;
			if(!TI[i][tBlockWars]) continue;
			null++;
		}
		if(null < 2) {
		    foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!TI[i][tBlockWars]) continue;
				SendClientMessage(i,COLOR_GREY, "Игра 'Capture Blocks' была отменена из-за недостатка участников");
				MinigameReset();
				return 0;
			}
		}
		new str[128], red, blue, green, yellow;

		for(new i; i < 64; i++) {
			if(GetBlockColor(i) == 0xFFE61400) red++;
			if(GetBlockColor(i) == 0xFF0066CC) blue++;
			if(GetBlockColor(i) == 0xFF319A31) green++;
			if(GetBlockColor(i) == 0xFFFF7F00) yellow++;
		}
		if(seconds > 10) format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~n~~n~ ~y~Time left: ~w~%d ~n~~r~] ~w~%03d ~b~] ~w~%03d ~g~] ~w~%03d ~y~] ~w~%03d", seconds, red, blue, green, yellow);
		else format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~n~~n~ ~y~Time left: ~r~%d ~n~~r~] ~w~%03d ~b~] ~w~%03d ~g~] ~w~%03d ~y~] ~w~%03d", seconds, red, blue, green, yellow);
		foreach(new i:Player) { 
			if(!TI[i][tLogin]) continue;
			if(!TI[i][tBlockWars]) continue;
			GameTextForPlayer(i, str, 5000, 3);
		}
		seconds--;
		if(seconds >= 0) SetTimerEx("MinigameUpdate", 1000, 0, "i", seconds);
		else {
			new winner, min_value = 0, u_blocks[MAX_PLAYERS], bool:draw = false;
			for(new j; j < 64; j++) {
				if(GetBlockUniqueID(j) != -1) u_blocks[GetBlockUniqueID(j)]++;
			}

			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!TI[i][tBlockWars]) continue;
				if(u_blocks[i] > min_value) {
					winner = i;
					min_value = u_blocks[i];
				}
			}
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(!TI[i][tBlockWars]) continue;
				if(winner != i) {
					if(u_blocks[winner] == u_blocks[i]) draw = true;
				}
			}
			if(draw) {
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(!TI[i][tBlockWars]) continue;
					SendOk(i, "Игра 'Capture Blocks' закончилась в ничью");
				}
			}
			else {
				format(str, sizeof str, "Игра 'Capture Blocks' успешно завершена, победитель - "W"%s", player_name[winner]);
				foreach(new i:Player) {
					if(!TI[i][tLogin]) continue;
					if(!TI[i][tBlockWars]) continue;
					SendClientMessage(i,CGOLD, str);
				}
			}
			MinigameReset();
		}
	}
	return true;
}
OnPlayerCaptureBlock(playerid, blockid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!TI[i][tBlockWars]) continue;
		if(g_game_status == 2) {
			if(GetBlockUniqueID(blockid) != playerid) {
				SetBlockColor(blockid, p_has_color[playerid]);
				SetBlockUniqueID(blockid, playerid);
			}
		}
	}
	return true;
}
stock GetBlockUniqueID(blockid) {
	if(g_arena_created) return b_unique_id[blockid];
	return -1;
}
stock UpdateInfoTD(playerid) {
	new string[128];
    if(TI[playerid][tDMArea][0]) format(string,sizeof(string),"~r~Kills:~w~ %d~n~~r~Deaths:~w~ %d",TI[playerid][tDMArea][1],TI[playerid][tDMArea][2]);
    if(TI[playerid][tGunArea][0]) format(string,sizeof(string),"~r~Kills Gun:~w~ %d/3~n~~r~Guns:~w~ %d/6",TI[playerid][tGunArea][1],TI[playerid][tGunArea][3]);
	if(!strlen(string)) PlayerTextDrawHide(playerid,DmArenaTextDraw[playerid]);
	else {
	    switch(string[0]) {
			case '~': strdel(string,0,3);
		}
	    PlayerTextDrawSetString(playerid,DmArenaTextDraw[playerid], string);
		PlayerTextDrawShow(playerid,DmArenaTextDraw[playerid]);
	}
	return 1;
}
stock ResetGunsArena() {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!TI[i][tGunArea][0]) continue;
		TI[i][tGunArea][0] = 1;
		TI[i][tGunArea][1] = 0;
		TI[i][tGunArea][2] = 0;
		TI[i][tGunArea][3] = 1;
		SendOk(i,"Для выхода из Гонки Вооружений,используйте: "W"/power");
		DelGun(i);
		AC_GivePlayerWeapon(i, ArenaGun[5], 3000);
		new rand = random(sizeof(DMPositions));
		SetPlayerPosAC(i, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2],141,0);
		SetPlayerHealth(i, 100.0);
		SetPlayerColor(i,0x56FB4EFF);
		new string[128];
		format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[i][tGunArea][1],TI[i][tGunArea][3]);
		DestroyDynamic3DTextLabel(DMSTATUS[i]);
		DMSTATUS[i] = CreateDynamic3DTextLabel(string, 0xFF6347FF, 0,0,0.4,10.0,i,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
	}
}
stock get_disease(playerid, targetid) {
	new string[256],str[64], null;
	strcat(string,"Болезнь\tСтатус\tСтоимость\n");

	new price_1,price_2;
	if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
		new seller_1 = floatround(1500/100*vip_status[PI[playerid][pVips]][vip_disease]);
		new seller_2 = floatround(2500/100*vip_status[PI[playerid][pVips]][vip_disease]);
		price_1 = (1500-seller_1);
		price_2 = (2500-seller_2);
	}
	else {
		if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
			new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
			new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
			price_1 = (1500-seller_1);
			price_2 = (2500-seller_2);
		}
		else if(BonusInfo[act_select] == 2) {
			new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
			new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
			price_1 = (1500-seller_1);
			price_2 = (2500-seller_2);
		}
	    else {
	    	price_1 = 1500;
	    	price_1 = 2500;
	    }
	}

	if(PI[targetid][pDisease][0]) format(str,sizeof(str),"Грипп\tБолен\t"GREEN"%d\n",price_1),strcat(string,str), take_items[playerid][null] = 0, null++;
	if(PI[targetid][pDisease][1]) format(str,sizeof(str),"Анорексия\tБолен\t"GREEN"%d\n",price_2),strcat(string,str), take_items[playerid][null] = 1, null++;
    if(!null) return SendClientMessage(playerid,COLOR_GREY,"Болезней не обнаружено");
	SetPVarInt(playerid,"gheal",targetid), D(playerid,D_DISEASE,DSTH,"Состояние",string,"Лечить","Отмена");
	return 1;
}
stock TextFind(const text[],const findtext[]) return strfind(text, findtext) != -1;

stock ValidChar(mailchar) {
	if((mailchar >= 'A' && mailchar <= 'Z') || (mailchar >= 'a' && mailchar <= 'z')
	|| (mailchar >= '0' && mailchar <= '9') || (mailchar == '-') || (mailchar == '_')
	|| (mailchar == '@') || (mailchar == '.')) return 1;
	return 0;
}

stock IsValidEmail(const email[]) {
	new bool:Succes = true;
	new bool:Good;
	for(new i; i < strlen(email); i++) {
	    if(email[i] == '@') {
		    if(!Good) Good = true;
		    else {
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
  	return Succes;
}
CB: OnGuardFixUpdateInformation(targetid, const cheat_name[], cheat_code , value_one, value_two) {
	if(value_one < value_two) return true;
	CallRemoteFunction("OnGuardMessageServerForChat","isd", targetid, cheat_name, cheat_code);
	return true;
}
CB: OnPlayerDonateCheck(playerid, name[]) {
    new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Игрок не найден");
    new credits;
	cache_get_value_int(0, "donatemoney", credits);
	SetPVarInt(playerid, "check_credits", credits);
	SetPVarString(playerid, "check_name", name);
    new query[256];
	format(query, sizeof(query), "SELECT * FROM unitpay_payments WHERE account = '%s' AND status = 1 ORDER BY dateComplete DESC LIMIT 0,20;", name);
	mysql_tquery(connects, query, "unitpay_callback", "dd", playerid, 1);
	return 1;
}
CB: unitpay_callback(playerid, type) {
    switch(type) {
		case 0: {
		    new rows;
		    rows = cache_num_rows();
		    if(!rows) return ErrorMessage(playerid,"История пополнений отсутствует");
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++) {
		    	cache_get_value_index_int(i, 3, sum);
		    	cache_get_value_index(i, 6, datetime, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("рубль"):(sum<5)?("рубля"):("рублей"));
	    	}
		    new string[1024];
	        format(string, sizeof(string), "\
				"W"Состояние счёта:\t\t"GREEN"%i рублей\n\
				{3399FF}20 последних пополнений"W"\n\n\
				%s\n\
				"ORANGE"Пополнить счёт можно на "P""DonateSite"",
				PI[playerid][pRouble], str);
	        D(playerid, DIALOG_NONE, DSM, ""P"Информация о пополнениях", string, "Закрыть", "");
		}
		case 1: {
		    new rows;
		    rows = cache_num_rows();
		    new name[MAX_PLAYER_NAME];
			GetPVarString(playerid,"check_name",name,MAX_PLAYER_NAME);
			DeletePVar(playerid,"check_name");
			if(!rows) {
			    new string[512];
		        format(string, sizeof(string), "\
		        	"W"Ник:\t\t\t\t%s\n\
					"W"Состояние счёта:\t\t"GREEN"%i рублей\n\
					{AFAFAF}История пополнений отсутствует\n",
					name, GetPVarInt(playerid, "check_credits"));
		        D(playerid, DIALOG_NONE, DSM, ""P"Информация о пополнениях", string, "Закрыть", "");
		        DeletePVar(playerid, "check_credits");
			    return 1;
			}
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++) {
		    	cache_get_value_index_int(i, 3, sum);
		    	cache_get_value_index(i, 6, datetime, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("рубль"):(sum<5)?("рубля"):("рублей"));
	    	}
			new string[1024];
	        format(string, sizeof(string), "\
	        	"W"Ник:\t\t\t\t%s\n\
				"W"Состояние счёта:\t\t"GREEN"%i рублей\n\
				{3399FF}20 последних пополнений"W"\n\n\
				%s",
				name, GetPVarInt(playerid, "check_credits"), str);
	        D(playerid, DIALOG_NONE, DSM, ""P"Информация о пополнениях", string, "Закрыть", "");
	        DeletePVar(playerid, "check_credits");
		}
	}
	return 1;
}
CB: load_online_today(playerid) {
    new rows;
	rows = cache_num_rows();
	if(!rows) {
		gOnlinePlayer[playerid][0] = 0;
		gOnlinePlayerAFK[playerid][0] = 0;
	}
	else {
		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][0]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][0]);
	}
	return 1;
}
CB: load_online_yesterday(playerid) {
    new rows;
	rows = cache_num_rows();
	if(!rows) {
		gOnlinePlayer[playerid][1] = 0;
		gOnlinePlayerAFK[playerid][1] = 0;
	}
	else {
  		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][1]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][1]);
	}
    return 1;
}
CMD:quest(playerid)
{
	if(car_autoschool[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"Запрещено во время экзамена");
	else if(air_autoschool[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"Запрещено во время экзамена");
	else if(boat_autoschool[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"Запрещено во время экзамена");
	
	new string[1024],num;
	string = ""P"Задание\t"P"Прогресс\n";
	for(new i;i<MAX_QUESTS;i++) {
		if(AcceptQuest[playerid][i]!=0 && QuestProgress[playerid][i]!=100) {
		    if(QuestProgress[playerid][i]<QI[i][LastProgress]) format(string,sizeof(string),"%s\n"W"%s\t"ORANGE"%d/%d\n",string,QI[i][QuestName],QuestProgress[playerid][i],QI[i][LastProgress]);
		    else if(QuestProgress[playerid][i]==100) format(string,sizeof(string),"%s\n"W"%s\t"NO"Выполнено\n",string,QI[i][QuestName]);
		    else format(string,sizeof(string),"%s\n"W"%s\t"GREEN"Можно завершить\n",string,QI[i][QuestName]);
			QuestShow[playerid][num]=i;
			num++;
		}
	}
	if(num) D(playerid,D_QUEST_2,DSTH,"Квест",string,"Выбрать","Отмена");
	else ErrorMessage(playerid,"Активных квестовых линий не найдено");
	return 1;
}
stock NextStapQI(playerid,id) {
	switch(id) {
	    case 1: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 40) {
				SendOk(playerid,"Местоположение Яблочного сада успешно отмечено в вашем GPS");
				EnableGPSForPlayer(playerid,1654.6044,2226.4363,15.1801);
	        }
	        else if(QuestProgress[playerid][id] == 40) {
				new rand = random(3);
				if(rand == 1) EnableGPSForPlayer(playerid,1873.1093,2047.8470,15.9397);
				else if(rand == 3) EnableGPSForPlayer(playerid,193.9168,825.0530,12.0422);
				else EnableGPSForPlayer(playerid,2512.5093,-1806.9425,22.2100);
			}
	    }
		case 2: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 15) {
				SendOk(playerid,"Местоположение Оружейного завода успешно отмечено в вашем GPS");
				EnableGPSForPlayer(playerid,2675.6917,-2405.5618,13.4675);
	        }
	        else if(QuestProgress[playerid][id] == 15) {
				new rand = random(3);
				if(rand == 1) EnableGPSForPlayer(playerid,1873.1093,2047.8470,15.9397);
				else if(rand == 3) EnableGPSForPlayer(playerid,193.9168,825.0530,12.0422);
				else EnableGPSForPlayer(playerid,2512.5093,-1806.9425,22.2100);
			}
	    }
		case 3: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 10) {
				SendOk(playerid,"Местоположение Нефтезавода успешно отмечено в вашем GPS");
				EnableGPSForPlayer(playerid,302.3781,1411.4307,9.3229);
	        }
	        else if(QuestProgress[playerid][id] == 10) {
				new rand = random(3);
				if(rand == 1) EnableGPSForPlayer(playerid,1873.1093,2047.8470,15.9397);
				else if(rand == 3) EnableGPSForPlayer(playerid,193.9168,825.0530,12.0422);
				else EnableGPSForPlayer(playerid,2512.5093,-1806.9425,22.2100);
			}
	    }
		case 4: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 20) {
				SendOk(playerid,"Местоположение Лесопилки успешно отмечено в вашем GPS");
				EnableGPSForPlayer(playerid,-495.1036,-1568.1460,9.8474);
	        }
	        else if(QuestProgress[playerid][id] == 20) {
				new rand = random(3);
				if(rand == 1) EnableGPSForPlayer(playerid,1873.1093,2047.8470,15.9397);
				else if(rand == 3) EnableGPSForPlayer(playerid,193.9168,825.0530,12.0422);
				else EnableGPSForPlayer(playerid,2512.5093,-1806.9425,22.2100);
			}
		}
		case 5: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 500) {
				SendOk(playerid,"Местоположение Склада успешно отмечено в вашем GPS");
				EnableGPSForPlayer(playerid,768.8215,-397.6828,4.0000);
				/*
				new rand = random(2);
				if(rand == 0) EnableGPSForPlayer(playerid,252.0355,1834.5072,17.6709); 
				else if(rand == 1 ) EnableGPSForPlayer(playerid,-1366.5562,497.6943,11.1953);
				else EnableGPSForPlayer(playerid,2708.6196,-2444.9922,13.6398);
				*/
	        }
	        else if(QuestProgress[playerid][id] == 500) {
				quest_gung(playerid);
				AcceptQuest[playerid][id] = 2;
			}
		}
		case 6: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 15) {
				SendOk(playerid,"Грабить можно любой дом, находящийся на Вашей территории");
	        }
	        else if(QuestProgress[playerid][id] == 15) {
				quest_gung(playerid);
			}
		}
		case 7: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 10) {
				SendOk(playerid,"Продайте оружие любому игроку");
	        }
	        else if(QuestProgress[playerid][id] == 10) {
				quest_gung(playerid);
			}
		}
		case 8: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 20) {
				SendOk(playerid,"Убейте 20 игроков во время капта");
	        }
	        else if(QuestProgress[playerid][id] == 20) {
				quest_gung(playerid);
			}
		}
		case 9: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 1) {
				SendOk(playerid,"Спровоцируйте войну за территорию");
	        }
	        else if(QuestProgress[playerid][id] == 1) {
				quest_gung(playerid);
			}
		}
	}
	save_quest(playerid,id);
	return 1;
}
stock quest_gung(playerid) {
	switch(PI[playerid][pMember]) {
		case fBALLAS: EnableGPSForPlayer(playerid,-292.9807,1037.1306,12.1227);
		case fVAGOS: EnableGPSForPlayer(playerid,171.5725,1033.9640,13.7109);
		case fGROVE: EnableGPSForPlayer(playerid,-667.6210,876.9438,12.0000);
		case fAZTEC: EnableGPSForPlayer(playerid,319.9991,1870.6096,11.9936);
		case fRIFA: EnableGPSForPlayer(playerid,791.0714,2459.1028,12.0000);
	}
}
stock quest_register(playerid) {
	new Float:dist[3],total_spawn = 0;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1873.1093,2047.8470,15.9397);
	dist[1] = GetPlayerDistanceFromPoint(playerid, 2512.5093,-1806.9425,22.2100);
	dist[2] = GetPlayerDistanceFromPoint(playerid, 193.9168,825.0530,12.0422);
	
	if(dist[0] < dist[1]) total_spawn = 1;
	if(dist[2]) total_spawn = 2;

	if(total_spawn == 0) EnableGPSForPlayer(playerid,1873.1093,2047.8470,15.9397);
	else if(total_spawn == 2) EnableGPSForPlayer(playerid,193.9168,825.0530,12.0422);
	else EnableGPSForPlayer(playerid,2512.5093,-1806.9425,22.2100);
	SendClientMessage(playerid, COLOR_YELLOW, "Советуем пройти первоначальные квесты и заработать денег");
}
stock save_quest(playerid,id) {
	new query[300];
    format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d',`accept`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], AcceptQuest[playerid][id], id, player_name[playerid]);
    mysql_tquery(connects, query);
}
stock SendBotMessage(playerid,const mesage[]) {
	new id;
	if(!TI[playerid][tLogin]) return 0;
	new Float:x, Float:y, Float:z,Float:x1, Float:y1, Float:z1;
	new Float: minDist,minA=-1;
	GetPlayerPos(playerid, x1, y1, z1);
	for(new i;i<MAX_ACTORSS;i++) {
		if(!IsActorStreamedIn(i,playerid)) continue;
		if(GetActorVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		GetActorPos(i, x, y, z);
		new Float: Dist=PointToPoint(x,y,z,x1,y1,z1);
		if(Dist<30) {
			if (minDist>Dist || minDist==0) {
				minA = i;
				minDist = Dist;
			}
		}
	}
	if(minA!=-1) {
		ApplyActorAnimation(minA,"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
		Update3DTextLabelText(tActor[minA], -1, mesage);
		actortime[minA]=10;
		id =minA;
	}
	if(strfind(mesage, "\n")==-1) SendClientMessage(playerid,COLOR_GREY,mesage);
	return id;
}
CB: LoadQuestMysql(playerid) {
	new rows;
	rows = cache_num_rows();
	for(new i; i< rows; i++) {
		new idquest;
	    cache_get_value_index_int(i,0,idquest);
		cache_get_value_index_int(i,1,QuestProgress[playerid][idquest]);
		cache_get_value_index_int(i,2,AcceptQuest[playerid][idquest]);
	}
	return 1;
}
CB: SpecPl(playerid,bool:spec) {
	TI[playerid][tSpectate] = spec;
	TogglePlayerSpectating(playerid,spec);
}
stock RandomYareNforJOBS(playerid) {
	if(TI[playerid][tProcess][0] < 0) {
		ClearAnimations(playerid,1);
		ClearAnimationsEX(playerid);
		TogglePlayerControllable(playerid, 1);
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		if(JobTempProcess[playerid] == 4) TI[playerid][tClothesWork][1] = 1;
		if(JobTempProcess[playerid] == 5) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
			TI[playerid][tJobWood][2] = -1;
		}
		if(JobTempProcess[playerid] == 7) {
			RemovePlayerAttachedObject(playerid, 7);
			Fishing[playerid] = false;
		}
		if(JobTempProcess[playerid] == 9) {
			PI[playerid][pJemmy] --;
			UpdatePlayerData(playerid,"pJemmy",PI[playerid][pJemmy]);
		}
		if(JobTempProcess[playerid] == 15 || JobTempProcess[playerid] == 16) { //Угон
			DestroyDynamicArea(theftarea[playerid][0]);
			DisablePlayerCheckpoint(playerid);
			DestroyDynamicCP(theftCheck[playerid][0]);
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
				A_DestroyVehicle(theftveh[playerid][0]);
				theftveh[playerid][0] = INVALID_VEHICLE_ID;
			}
			theftplayer[playerid][0] = 1010;
			theftplayer[playerid][1] = 0;
			theftCheck[playerid][1] = 0;
			PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
			thefttime[playerid] = 0;
			if(PI[playerid][ptheftExp] == 0) {
				if(PI[playerid][ptheftSkill] != 0) PI[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PI[playerid][ptheftSkill]);
				PI[playerid][ptheftExp] = TheftSkillMax[PI[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
			} 
			else {
				if(PI[playerid][ptheftExp] != 0) PI[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PI[playerid][ptheftExp]);
			}
		}
		JobTempProcess[playerid] = 0;
		return true;
	}
	new yarentext[32],yarenbutton;
	format(yarentext,32,"~w~PRESS_");
	switch(random(3)) {
		case 0:strcat(yarentext,"~g~Y"),yarenbutton = 65536;
		case 1:strcat(yarentext,"~g~H"),yarenbutton = 2455;
		case 2:strcat(yarentext,"~g~N"),yarenbutton = 131072;
	}
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][0],yarentext);
	PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][0]);
	SetPVarInt(playerid,"Klavisha",yarenbutton);
	if(TI[playerid][tProcess][0] > 10) TI[playerid][tProcess][0] = 10;
	switch(TI[playerid][tProcess][0]) {
		case 0:PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],"~w~IIIIIIIIII");
		case 1..9: {
			new yarenstring[100];
			for(new g = 0;g < TI[playerid][tProcess][0];g++) {
				if(g == 0)strcat(yarenstring,"~g~I");
				else strcat(yarenstring,"I");
			}
			new svoboda = 10 - TI[playerid][tProcess][0];
			for(new go = 0;go < svoboda;go++) {
				if(go == 0)strcat(yarenstring,"~w~I");
				else strcat(yarenstring,"I");
			}
			PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],yarenstring);
		}
		case 10:PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],"~g~IIIIIIIIII");
	}
	PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][1]);
	return true;
}
stock MyButtonSystem(playerid) {
	new testprocees = 10/TI[playerid][tProcess][1];
	TI[playerid][tProcess][0] += testprocees;
	RandomYareNforJOBS(playerid);
	switch(JobTempProcess[playerid]) {
		case 1: ApplyAnimation(playerid, "FLAME","FLAME_FIRE", 4.1,1,1,1,1,0,0);
		case 2: ApplyAnimation(playerid, "PED","IDLE_taxi", 4.1,1,1,1,1,0,0);
		case 3: ApplyAnimation(playerid, "BUDDY","buddy_reload", 4.1,1,1,1,1,0,0);
		case 4: {
			if(!GetPVarInt(playerid,"id_object")) {
				if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);

				new objectid = (clothes_works[GetPVarInt(playerid,"clothes_id")][0],clothes_works[GetPVarInt(playerid,"clothes_id")][1],
					clothes_works[GetPVarInt(playerid,"clothes_id")][2],0.0,0.0,0.0,200,88);
					
				SetPVarInt(playerid,"id_object",objectid);
				TI[playerid][tClothesWork][1] = 4;
				Streamer_Update(playerid);
			}
			ApplyAnimation(playerid, "CAR_CHAT","CAR_Sc4_BL", 4.1,1,1,1,1,0,0);
		}
		case 5: ApplyAnimation(playerid, "CHAINSAW","WEAPON_csaw", 4.1,1,1,1,1,0,0);
		case 6: ApplyAnimation(playerid, "CHAINSAW","CSAW_G", 4.1,1,1,1,1,0,0);
		case 7: ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
		case 8: ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,1,0,0,1,1, 1);
		case 9: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,1,1, 1);
	}
	if(TI[playerid][tProcess][0] >= 10) {
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		switch(JobTempProcess[playerid]) {
			case 1: {
				sad_temp_1(TI[playerid][tJobSad][1]-1);
				PlayerDelayBailer(playerid);
				DeletePVar(playerid,"bailer");
				JobTempProcess[playerid] = 0;
			}
			case 2: {
				sad_temp_4(TI[playerid][tJobSad][1]-1,playerid);
				JobTempProcess[playerid] = 0;
			}
			case 3: {
				GunReady(playerid);
				TI[playerid][tJobGun][1] = 1;
				JobTempProcess[playerid] = 0;
			}
			case 4: {
				clothes_timer(playerid);
				JobTempProcess[playerid] = 0;
			}
			case 5: {
				WoodsPlayer(playerid,TI[playerid][tJobWood][2]);
				JobTempProcess[playerid] = 0;
			}
			case 7: {
				fish_player(playerid);
				JobTempProcess[playerid] = 0;
			}
			case 8: {
				if(GetPVarInt(playerid,"JOBOSMOTR") > 0) {
				    JobTempProcess[playerid] = 0;
				    new automobile = GetPVarInt(playerid,"JOBOSMOTR");
				    DeletePVar(playerid,"JOBOSMOTR");
					PI[playerid][pInstrument] -= 1;
					UpdatePlayerData(playerid,"pInstr",PI[playerid][pInstrument]);
					new vehydid = GetPVarInt(playerid,"MechOsmotrVEHID");
					ClearAnimationsEX(playerid);
					TogglePlayerControllable(playerid, true);
					new panels_job,doors_job,lights_job,tires_job;
					GetVehicleDamageStatus(vehydid, panels_job,doors_job,lights_job,tires_job);
					switch(automobile) {
						case 1: SendOk(playerid,"Двери транспорта успешно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,0,lights_job,tires_job),SetPlayerChatBubble(playerid, "починил двери транспорта", COLOR_PURPLE, 15, 5000);
						case 2: SendOk(playerid,"Корпус транспорта успешно починен"),UpdateVehicleDamageStatus(vehydid,0,doors_job,lights_job,tires_job),SetPlayerChatBubble(playerid, "починил корпус транспорта", COLOR_PURPLE, 15, 5000);
						case 3: SendOk(playerid,"Фары транспорта успешно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,doors_job,0,tires_job),SetPlayerChatBubble(playerid, "починил фары транспорта", COLOR_PURPLE, 15, 5000);
						case 4: SendOk(playerid,"Колеса транспорта успешно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,doors_job,lights_job,0),SetPlayerChatBubble(playerid, "заменил колеса транспорта", COLOR_PURPLE, 15, 5000);
						case 5: SendOk(playerid,"Двигатель транспорта успешно починен"),SetVehicleHealth(vehydid,1000),SetPlayerChatBubble(playerid, "починил двигатель транспорта", COLOR_PURPLE, 15, 5000),GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective),SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,false,boot,objective);
					}
				}
			}
			case 9: {
				new Float:angle,Float:distance,Float:vehx, Float:vehy, Float:vehz,Float:x_pos, Float:y_pos, Float:z_pos;
			    GetVehicleModelInfo(GetVehicleModel(rob_veh[playerid]), 1, vehx, distance, vehz);
			    distance = distance/2 + 0.1;
			    GetVehiclePos(rob_veh[playerid], vehx, vehy, vehz);
			    GetVehicleZAngle(rob_veh[playerid], angle);
			    vehx += (distance * floatsin(-angle+180, degrees));
			    vehy += (distance * floatcos(-angle+180, degrees));

			    new string[64];
				format(string,sizeof(string),"Техника: "O"%iед",VG[rob_veh[playerid]][vgAmount][0]);
				VG[rob_veh[playerid]][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,vehx, vehy, vehz+0.5,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
			    VG[rob_veh[playerid]][vgPickup] = CreateDynamicPickup(19133,1,vehx, vehy, vehz-0.5);
				VG[rob_veh[playerid]][vgArea] = CreateDynamicSphere(vehx, vehy, vehz,1.0);

				VG[rob_veh[playerid]][vgRobHouse] = true;

				GetPlayerPos(playerid,x_pos,y_pos,z_pos);
				RobPlayer[playerid][RobArea] = CreateDynamicSphere(x_pos,y_pos,z_pos, 1.5, 0,0);
				RobPlayer[playerid][RobPickup] = CreateDynamicPickup(19134, 23, x_pos,y_pos,z_pos, 0,0);

				RobPlayer[playerid][RobRand] = random(7)+2;

				format(string,sizeof(string),"Доступно техники: "O"%iед",RobPlayer[playerid][RobRand]);
				RobPlayer[playerid][RobText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, x_pos,y_pos,z_pos+0.5,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
				ClearAnimationsEX(playerid);
				TogglePlayerControllable(playerid, true);
			}
			case 15: { //угон
				SendOk(playerid,"Машина взломана, везите ее на склад");
			 	if(theftveh[playerid][0] != INVALID_VEHICLE_ID) { 
	 				A_DestroyVehicle(theftveh[playerid][0]);
	 				theftveh[playerid][0] = INVALID_VEHICLE_ID;
					theftveh[playerid][1] = 0;
					PlayerTextDrawHide(playerid, theft_PTD[playerid][1]);
				}
				ClearAnimationsEX(playerid);
				TogglePlayerControllable(playerid, true);
			  	JobTempProcess[playerid] = 0;
			  	GetVehicleParamsEx(theftIDveh[playerid][0],engine,lights,alarm,doors,bonnet,boot,objective);
			  	if(doors) doors_status(theftIDveh[playerid][0], playerid);
			  	theftCheck[playerid][1] = 2;
				theftarea[playerid][1] =  random(3);
				switch(theftarea[playerid][1]){
					case 0: {
						EnableGPSForPlayer(playerid,2415.5767,-2467.5305,13.6250);
						SendOk(playerid,"Местоположение cклада LS успешно отмечено в вашем GPS");
						theftarea[playerid][0] = CreateDynamicSphere(2415.5767,-2467.5305,13.6250, 15.0, 0, 0, playerid);
					}
					case 1: {
						EnableGPSForPlayer(playerid,951.9211,2070.2153,10.8203);
						SendOk(playerid,"Местоположение cклада LV успешно отмечено в вашем GPS");
						theftarea[playerid][0] = CreateDynamicSphere(951.9211,2070.2153,10.8203, 15.0, 0, 0, playerid);
					}
					case 2: {
						EnableGPSForPlayer(playerid,-2117.7361,-249.2475,35.3203);
						SendOk(playerid,"Местоположение cклада SF успешно отмечено в вашем GPS");
						theftarea[playerid][0] = CreateDynamicSphere(-2117.7361,-249.2475,35.3203, 15.0, 0, 0, playerid);
					}
				}
				PI[theftIDveh[playerid][1]][ptheftHome] = gettime()+1200;
				UpdatePlayerData(theftIDveh[playerid][1],"theftHome",PI[theftIDveh[playerid][1]][ptheftHome]);
				theftplayer[playerid][1] = 1200;
			}
			case 16: { //угон
				ClearAnimationsEX(playerid);
				TogglePlayerControllable(playerid, true);
			  	JobTempProcess[playerid] = 0;
				new i = PI[theftIDveh[playerid][1]][pHouse];
				new Veh = theftIDveh[playerid][0];
				SetVehiclePos(Veh, gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
				SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
				exit_garage(Veh,0);
				new Float:vehx, Float:vehy, Float:vehz;
				GetVehiclePos(Veh, vehx, vehy, vehz);
				SendOk(playerid,"Взлом гаража удался, машина возле дома");
				EnableGPSForPlayer(playerid,vehx, vehy, vehz);
				theftarea[playerid][0] = CreateDynamicSphere(vehx, vehy, vehz, 15.0, 0, 0, playerid);
				theftCheck[playerid][1] = 1;
				theftIDveh[playerid][2] = 0;
				thefttime[playerid] = GetTheftTimelimit(playerid);
				PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
				theftplayer[theftIDveh[playerid][1]][0] = playerid; 
			}
		}
	}
	return true;
}
stock NonSym(const str[], max = 0, min = 0)  {
	static BadNameChars[][2] = {"/","\n","`","~","%","^","&","[","]","{","}","|","'"};
	for(new i = 0; i < sizeof( BadNameChars ); i++) {
		if(strfind( str, BadNameChars[i], true ) != -1 || strlen( str ) > max || strlen( str ) < min) return 1;
	}
	return 0;
}
stock Hunger(playerid,type) {
	switch(type) {
	    case 0: {
			TextDrawShowForPlayer(playerid,HungerFon[0]);
			TextDrawShowForPlayer(playerid,HungerFon[1]);
			PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 549.5 + PI[playerid][pSatiety] / 100.0 * 54.5, 40.000000);
			PlayerTextDrawShow(playerid,HungerProgres[playerid]);
		}
		case 1: {
			PlayerTextDrawHide(playerid,HungerProgres[playerid]);
			TextDrawHideForPlayer(playerid,HungerFon[0]);
			TextDrawHideForPlayer(playerid,HungerFon[1]);
		}
	}
}
stock SetFullness(playerid, ammount) {
	if(ammount > 100) PI[playerid][pSatiety] = 100;
	else if(ammount < 0) PI[playerid][pSatiety] = 0;
	else PI[playerid][pSatiety] = ammount;
	if(PI[playerid][pSettings][6] > 0) Hunger(playerid,0);
	return true;
}
stock GiveFullness(playerid, ammount) {
	SetFullness(playerid,PI[playerid][pSatiety] + ammount);
	if(PI[playerid][pSatiety] + ammount > 100) PI[playerid][pSatiety] = 100;
	if(PI[playerid][pSettings][6] > 0) Hunger(playerid,0);
}
stock GetVehicleSpeed(vehicleid) {
	new Float:coord[3];
	GetVehicleVelocity(vehicleid,coord[0],coord[1],coord[2]);	
	new Float:speed = floatsqroot(floatpower(floatabs(coord[0]), 2.0) + floatpower(floatabs(coord[1]), 2.0) + floatpower(floatabs(coord[2]), 2.0)) * 100.3;
    return floatround(speed);
}
stock _GetVehicleSpeed(vehicleid) {
    new Float:X, Float:Y, Float:Z, Float:speed;
    GetVehicleVelocity(vehicleid, X, Y, Z) ;
    speed =((floatsqroot((X*X) + (Y*Y))*10) / 1.65) * 30;
    return floatround(speed, floatround_round);
}
CB: NoRoof(playerid) {
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID) {
        new Float:speed = GetVehicleSpeed(carid);
        new cm = GetVehicleModel(carid);
        switch(cm) {
            case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
            default:{}
        }
        if(speed > 30) {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            SetPlayerPosAC(playerid, slx, sly, slz+2.5,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
            ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        }
    }
    return 1;
}
CB: WoodsPlayer(playerid,wood) {
	new j = TI[playerid][tJobWood][2];
	WD::[j][woodUse] = false;
	SetPlayerAttachedObject(playerid,8,1463,5,0.073999,0.186000,0.105998,95.299972,-175.499984,-72.199935,0.540999,0.350999,0.610999);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	TI[playerid][tJobWood][3] = 2;
	TI[playerid][tJobWood][1] = 1;
	TogglePlayerControllable(playerid,true);
	TI[playerid][tJobWood][2] = -1;
	return 1;
}
CB: bl_callback(playerid) {
	new rows, line_string[128], dialog_strings[1380], bl_accuser[32], bl_accused[32], bl_reason_l[42];
	rows = cache_num_rows();
	new rows_page = GetPVarInt (playerid, "bl_page") - 1;
	SetPVarInt(playerid, "bl_rows", rows) ;
	if(rows) {
		strcat(dialog_string,""ORANGE"Далее >>>\n") ;
		strcat(dialog_string,""ORANGE"<<< Назад\n") ;
		for(new i = rows_page * 10 ; i <  rows_page * 10 + 10 ; i ++) {
			if(i >= rows) break;

			cache_get_value(i,"f_bl_accused", bl_accused, 32);
			cache_get_value(i,"f_bl_accuser", bl_accuser, 32);
			cache_get_value(i,"f_bl_reason", bl_reason_l, 42);

			format(line_string, sizeof(line_string), "%s | Причина: %s | Добавил: %s\n", bl_accused, bl_reason_l, bl_accuser);
			strcat(dialog_strings, line_string);
		}
	}
	else return ErrorMessage(playerid, "Чёрный список организации пуст" ), pc_cmd_bl(playerid);
	D(playerid,D_BL_ALL,DSL, ""P"Чёрный список", dialog_strings, "Выбрать", "Назад");
	return 1 ;
}
CB: bl_loading_callback(playerid) {
	new rows;
	rows = cache_num_rows();
	if(rows) {
		for(new i, fr_id; i < rows; i++) {
			cache_get_value_int(i,"f_bl_id", fr_id);

			bl_info[playerid][bl_fraction][fr_id] = true;

			cache_get_value(i, "f_bl_reason", bl_info[playerid][bl_reason][fr_id], 32);
		}
	}
	return 1 ;
}
stock IsValidPlayer(player, playerid) {
	return (player != INVALID_PLAYER_ID && player == playerid);
}
stock CheckPlayerRing(playerid) {
	new string[100];
	if(RingInfo[0][rgState] < 2) {
		new player1 = RingInfo[0][rgPlayer][0];
		new player2 = RingInfo[0][rgPlayer][1];
		new ring = -1;
		if(player1 == playerid) ring = 0;
		else if(player2 == playerid) ring = 1;
		if(ring != -1 && (IsValidPlayer(player1, playerid) || IsValidPlayer(player2, playerid))) {
			format(string, sizeof(string), ""W"[РЭФЕРИ]"G" Поединок между "ORANGE"%s"G" и "ORANGE"%s"G" закончился так и не начавшись", player_name[player1], player_name[player2]);
			RingCP[0] = CreateDynamicCP(2178.6475,-1592.4519,1130.7090, 1.0, 97);
			RingCP[1] = CreateDynamicCP(2183.7693,-1586.4208,1130.7090, 1.0, 97);
			SendOk(player1, string);
			SendOk(player2, string);
			dell_arena();
		}
	}
	else {
		new player1 = RingInfo[0][rgPlayer][0];
		new player2 = RingInfo[0][rgPlayer][1];
		RingCP[0] = CreateDynamicCP(2178.6475,-1592.4519,1130.7090, 1.0, 97);
		RingCP[1] = CreateDynamicCP(2183.7693,-1586.4208,1130.7090, 1.0, 97);
		if(player1 == playerid) format(string, sizeof(string), ""W"[РЭФЕРИ]"G" Победителем поединка стал - "ORANGE"%s", player_name[player2]);
		else format(string, sizeof(string), ""W"[РЭФЕРИ]"G" Победителем поединка стал - "ORANGE"%s", player_name[player1]);
		SendOk(player1, string);
		SendOk(player2, string);
		dell_arena();
	}
	return true;
}
stock dell_arena() {
	if(TOTALSTYLELIST) {
		for(new idx = 0; idx < TOTALSTYLELIST; idx++) {
			RingInfo[0][rgPlayer][0] = RingInfo[idx+1][rgPlayer][0];
			RingInfo[0][rgPlayer][1] = RingInfo[idx+1][rgPlayer][1];
			RingInfo[0][rgState] = RingInfo[idx+1][rgState];
			RingInfo[0][rgTime] = RingInfo[idx+1][rgTime];
			RingInfo[0][rgPrice] = RingInfo[idx+1][rgPrice];

			RingInfo[idx+1][rgPlayer][0] = -1;
			RingInfo[idx+1][rgPlayer][1] = -1;
			RingInfo[idx+1][rgState] = 0;
			RingInfo[idx+1][rgTime] = 0;
			RingInfo[idx+1][rgPrice] = 0;
		}
	}
	else {
		RingInfo[0][rgPlayer][0] = -1;
		RingInfo[0][rgPlayer][1] = -1;
		RingInfo[0][rgState] = 0;
		RingInfo[0][rgTime] = 0;
		RingInfo[0][rgPrice] = 0;
	}
}
stock GetEndWord(const text[], word) {
	new len = strlen(text);
    for(new i = word; i < len; i ++) {
	    if(i == (len-1) ) return i + 1;
	    else if(text[i] == ' ') return i;
	}
	return -1;
}
stock GetWord(const text[], word, wordstr[], sizword) {
	new w;
	for(new i; i < strlen(text); i ++) {
	    if(text[i] != ' ' && ( (i-1) < 0 || text[i - 1] == ' ') ) {
	        if(w == word) {
				strmid(wordstr, text, i, GetEndWord(text, i), sizword);
				return i;
			}
			w ++;
	    }
	}
	return 0;
}
CB: tk_load(playerid,quantity) {
	if(!TI[playerid][tLogin]) return 1;
	new string[40];
	if(!TI[playerid][tTrucker][0]) TI[playerid][tTrucker][0]+=100;
	else TI[playerid][tTrucker][0] += floatround(quantity/16.67);
	//else TI[playerid][tTrucker][0] += floatround(quantity/2);
	if(TI[playerid][tTrucker][0] >= quantity) {
		TI[playerid][tTrucker][0] = quantity;
		format(string,sizeof(string),"~y~LOADING:~w~%d/%d",TI[playerid][tTrucker][0],quantity);
		GameTextForPlayer(playerid,string,5000,1);

		new Veh = GetPlayerVehicleID(playerid);	
		switch(GetPVarInt(playerid,"tk_spawn")) {
			case 1: {
				new rand = random(sizeof(tk_gun));
				SetVehiclePos(Veh, tk_gun[rand][0],tk_gun[rand][1],tk_gun[rand][2]);
				SetVehiclePos(TK_Trailer[playerid], tk_gun[rand][0],tk_gun[rand][1]-1,tk_gun[rand][2]);
				SetVehicleZAngle(Veh, tk_gun[rand][3]);
				static const f_str[] = ""ORANGE"1."W" Порт г. СФ "GREEN"[$%d т.]";
				new str[sizeof(f_str) +1 + (-2 + 5)];
				format(str,sizeof(str),f_str,tk_unloading[0]);
				D(playerid,D_TRUCK_UNLOAD,DSL,""P"Доставка",str,"Выбрать","");
			}
			case 2: {
				new rand = random(sizeof(tk_wood));
				SetVehiclePos(Veh, tk_wood[rand][0],tk_wood[rand][1],tk_wood[rand][2]);
				SetVehicleZAngle(Veh, tk_wood[rand][3]);
				SetVehiclePos(TK_Trailer[playerid], tk_wood[rand][0],tk_wood[rand][1]-1,tk_wood[rand][2]);
				//SetVehicleZAngle(Veh, TK_Trailer[playerid]);

				static const f_str[] = ""ORANGE"1."W" Порт г. СФ "GREEN"[$%d т.]\n"ORANGE"2."W" Порт г. ЛС "GREEN"[$%d т.]";
				new str[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5)];
				format(str,sizeof(str),f_str,tk_unloading[1],tk_unloading[2],tk_unloading[3]);

				D(playerid,D_TRUCK_UNLOAD_2,DSL,""P"Доставка",str,"Выбрать","");
			}
		}
		DeletePVar(playerid,"tk_spawn");
		AttachTrailerToVehicle(TK_Trailer[playerid],Veh);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,0);
		SetVehicleVirtualWorld(Veh,0);
		SetVehicleVirtualWorld(TK_Trailer[playerid],0);
		SetTimerEx("AttachTrailerToVehicleEx",1000,false,"ii",TK_Trailer[playerid],Veh);
		DisableRemoteVehicleCollisions(playerid, true);
		SetTimerEx("UnCallisionForPlayer",30000,false,"i",playerid);
	}
	else SetTimerEx("tk_load",5000,false,"ii",playerid,quantity);
	format(string,sizeof(string),"~y~LOADING:~w~%d/%d",TI[playerid][tTrucker][0],quantity);
	GameTextForPlayer(playerid,string,5000,1);
	return 1;
}
stock GetPlayerFAngle(playerid, &Float:angle) {
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
	else GetPlayerFacingAngle(playerid, angle);
}
CheckPlayerGoCuff(playerid) {
    GotoInfo[playerid][gtX] = 0.0;
	GotoInfo[playerid][gtY] = 0.0;
	GotoInfo[playerid][gtZ] = 0.0;
	GotoInfo[playerid][gtTPX] = 0.0;
	GotoInfo[playerid][gtTPY] = 0.0;
	GotoInfo[playerid][gtTPZ] = 0.0;

	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) GotoInfo[GotoInfo[playerid][gtGoID]][gtID] = INVALID_PLAYER_ID;

	GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtState] = 0;
	GotoInfo[playerid][gtStayed] = 0;
    return true;
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid) {
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return true;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y) {
    new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
    return true;
}
stock ShiftCords(style, &Float:x, &Float:y, &Float:z, Float:a, Float:distance) {
	#pragma unused z
	switch(style) {
	    case 0: {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1: {
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}
stock ReportDell(i) {
	PlayerReport[i] = -1;
    TextReport[i][0] = EOS;
    TextReportAdmin[i][0] = EOS;
    ReportSlot[i] = -1;
    return 1;
}
stock ReportDellAsk(i) {
	PlayerReportAsk[i] = -1;
    TextAsk[i][0] = EOS;
    ReportSlotAsk[i] = -1;
    return 1;
}
stock DropGun(playerid,weaponid,ammo) {
	if(GPDIO[weaponid] == 0 ) return ErrorMessage(playerid, "Данное оружие нельяз выбросить");
	new string[556];
	for(new freeslot=0;freeslot<MAX_DROP_GUNS;freeslot++) {
		if(drop_gun[freeslot][dg_object] != -1) continue;
		new Float: pos[4];
		GetPlayerPos(playerid, pos[0], pos[1] , pos[2]);
		GetPlayerFacingAngle(playerid, pos [ 3 ] ) ;
	
		drop_gun[freeslot][dg_object] = CreateDynamicObject(GPDIO[weaponid],pos[0], pos[1], pos[2]-0.97, 96, 110,pos[3]);
		drop_gun[freeslot][dg_gun]  =  weaponid;
		drop_gun[freeslot][dg_ammo] = ammo;
		Streamer_Update(playerid);

		new weapons[13][2];
		for(new S = 0; S<13; S++) {
			GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
		}
		DelGun(playerid);
		for(new S = 0; S<13 ; S++) {
			if(weapons[S][0] != drop_gun[freeslot][dg_gun] && weapons[S][0] != 0) {
				AC_GivePlayerWeapon(playerid,weapons[S][0],weapons[S][1]);
			}
		}
		drop_gun[freeslot][dg_time] = 2;
		format(string,sizeof(string),""STANDART_GUN_TEXT"", WeaponNames[drop_gun[freeslot][dg_gun]]);
		if(drop_gun[freeslot][dg_text] == Text3D:-1)
		{
			drop_gun[freeslot][dg_text] = CreateDynamic3DTextLabel(string,0xFFFFFFFF, pos[0], pos[1], pos[2] + 0.2, 10.5,
				INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, GetPlayerVirtualWorld(playerid), -1);
		}
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0,0);
		MeAction(playerid,"выбросил(а) оружие");
		break;
	}
	return true;
}
CB: onPTMCheck(playerid, targetid, Float:x, Float:y, Float:z, checker) {
	SetPlayerHealth(targetid,GetPVarFloat(targetid,"aimtest"));
	DeletePVar(targetid,"aimtest");
	SetPlayerPosAC(targetid, x, y, z,TI[targetid][tVirtualWorld], TI[targetid][tInterior]);
	SendClientMessage(checker,-1,"Если игрок повернулся на {FF9900}180 градусов"W", то он использует AIM");
}
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance) {
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
stock GetMN(fraca) {
	new mafianame[28];
	switch(fraca) {
		case fYAKUZA: mafianame = "Japan Mafia";
		case fRM: mafianame = "Russian Mafia";
		case fLCN: mafianame = "Italian Mafia";
	}
	return mafianame;
}
stock MafiaTimeCapture(faction, MafiaNapadss) {
	SendFamilyMessage(faction, 0xFF0000FF, "Внимание, стрела началась!");
    SendFamilyMessage(MafiaNapadss, 0xFF0000FF, "Внимание, стрела началась!");
	BizWarTime[0] = 0;
	BizWarTime[1] = 60*10;
	return true;
}
BizWarTimer() {
	if(BizWarTime[1] > 0) {
		BizWarTime[1]--;
		foreach(new m:Player) {
			if(!TI[m][tLogin]) continue;
			new string[128];
			if(GetPVarInt(m,"ppkz2") && !IsAMafia(m)) EndBizwar(m);
			if(MZInfo[bFrakVlad]!=PI[m][pMember] && MZInfo[bNapad] != PI[m][pMember]) continue;
			if(!GetPVarInt(m,"ppkz2")) {
				GangZoneFlashForPlayer(m,biz_war_gangzone,gFractionSpawn[MZInfo[bNapad]][fracColor]);
				TextDrawShowForPlayer(m, Bizwar[0]);
				format(string,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime[1]));
				TextDrawSetString(Bizwar[0],string);
				format(string,50,"~w~%s Kills: ~g~0",GetMN(MZInfo[bFrakVlad]));
				TextDrawSetString(Bizwar[1],string);
				TextDrawShowForPlayer(m, Bizwar[1]);
				format(string,50,"~w~%s Kills: ~g~0",GetMN(MZInfo[bNapad]));
				TextDrawSetString(Bizwar[2],string);
				TextDrawShowForPlayer(m, Bizwar[2]);
				SetPVarInt(m,"ppkz2",true);
			}
			else {
				format(string,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime[1]));
				TextDrawSetString(Bizwar[0],string);
				format(string,50,"~w~%s Kills: ~g~%d",GetMN(MZInfo[bFrakVlad]),MZInfo[bCountDead][MZInfo[bFrakVlad]]);
				TextDrawSetString(Bizwar[1],string);
				format(string,50,"~w~%s Kills: ~g~%d",GetMN(MZInfo[bNapad]),MZInfo[bCountDead][MZInfo[bNapad]]);
				TextDrawSetString(Bizwar[2],string);
			}
		}
		if(BizWarTime[1] == 1) {
			new mafianame[24];
			switch(MZInfo[bNapad]) {
				case fYAKUZA: mafianame = "Japan Mafia";
				case fRM: mafianame = "Russian Mafia";
				case fLCN: mafianame = "Italian Mafia";
			}
			new mafianamev[24],string[240];
			switch(MZInfo[bFrakVlad]) {
				case fYAKUZA: mafianamev = "Japan Mafia";
				case fRM: mafianamev = "Russian Mafia";
				case fLCN: mafianamev = "Italian Mafia";
			}
			if(MZInfo[bCountDead][MZInfo[bFrakVlad]] > MZInfo[bCountDead][MZInfo[bNapad]]) {
				format(string,sizeof(string), "%s не удалось отобрать у вас контроль над бизнесом %s. Бизнес отбит",GetMN(MZInfo[bNapad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Вам не удалось отобрать у мафии %s котроль над бизнесом %s. Бизнес оставлен",GetMN(MZInfo[bFrakVlad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
			}
			else if(MZInfo[bCountDead][MZInfo[bFrakVlad]] == MZInfo[bCountDead][MZInfo[bNapad]]) {
				format(string,sizeof(string), "Стрела за бизнес %s закончилась ничьей. Бизнес потерян",gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Стрела за бизнес %s закончилась ничьей. Бизнес оставлен",gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
				UpdateBusinessText(MZInfo[bBiz]);
			}
			else {
				format(string,sizeof(string), "%s забрала у вас контроль над бизнесом %s. Бизнес потерян",GetMN(MZInfo[bNapad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Вы отобрали контроль над бизнесом %s у мафии %s. Бизнес захвачен",gBusiness[MZInfo[bBiz]][bizzName],GetMN(MZInfo[bFrakVlad]));
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
				gBusiness[MZInfo[bBiz]][bizzMafia] = MZInfo[bNapad];
				UpdateBusinessDataInt(MZInfo[bBiz]+1,"mafia",gBusiness[MZInfo[bBiz]][bizzMafia]);
				UpdateBusinessText(MZInfo[bBiz]);
			}
			new id_killed = -1;
			new max_killed = -1;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(GetPVarInt(i,"m_killed_shot")) {
					if(GetPVarInt(i,"m_killed_shot")>max_killed) {
						max_killed = GetPVarInt(i,"m_killed_shot");
						id_killed = i;
					}
					DeletePVar(i,"m_killed_shot");
				}
			}
			foreach(new m:Player) {
				if(!TI[m][tLogin]) continue;
				if(MZInfo[bFrakVlad]!=PI[m][pMember] && MZInfo[bNapad]!=PI[m][pMember]) continue;
				if(id_killed != -1 && max_killed != -1) {
					format(string,128,"Уничтожил больше всего противников "W"%s {E6251E}Убийств: "W"%i", player_name[id_killed],max_killed);
					SendClientMessage(m,0xE8FF1CFF,string);
					if(PI[id_killed][pFamily]) reputation_family(PI[id_killed][pFamily]-1,3);
				}
				EndBizwar(m);
			}
			MZInfo[bFrakVlad] = 0;
			MZInfo[bNapad] = 0;
			MZInfo[bBiz] = 255;

			GangZoneStopFlashForAll(biz_war_gangzone);
			GangZoneHideForAll(biz_war_gangzone);
			GangZoneDestroy(biz_war_gangzone);
			biz_war_gangzone = - 1;
			war_gangzone = - 1;

			BizWarTime[1] = 0;
			BizHourTime = 1;
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
		}
	}
}
EndBizwar(m) {
	TextDrawHideForPlayer(m,Bizwar[0]);
	TextDrawHideForPlayer(m,Bizwar[1]);
	TextDrawHideForPlayer(m,Bizwar[2]);
	DeletePVar(m,"ppkz2");
	//for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
}
stock IsASymbol(text[], first, end) {
	if(first < 0) first = 0;
	if(end >= strlen(text)) end = strlen(text) - 1;
	for(new i = first; i <= end; i ++) return true;
	return false;
}
CB: OnCheatDetected(playerid, const ip_address[], type, code) {
	if(playerid != INVALID_PLAYER_ID && AntiCheat[code][acValue] == 1) {
		switch(code) {
			case 2: {
				if(TI[playerid][tSelectSkin]) return 1;
			}
			case 5, 11, 14, 32, 39: return true;
			case 38: {
				ErrorMessage(playerid, "ВНИМАНИЕ!"W" У Вас слабое интернет соединение");
				ErrorMessage(playerid, "Для более комфортной игры необходимо оптимизировать работу сетевого экрана ПК");
				ErrorMessage(playerid, "А также, настоятельно рекомендуем Вам проверить ПК на присутствие вредоносного ПО");
				return true;
			}
			case 12: return SetPlayerHealth(playerid, GetPlayerHP(playerid));
			case 13: return SetPlayerArmour(playerid, GetPlayerARM(playerid));
			case 15..17: DelGun(playerid);
			case 43..47: {
				DelGun(playerid);
				Kick(playerid);
				return true;
			}
			case 30: {
				PlayerSpawn(playerid);
				return true;
			}
		}
		new acHour, acMin, acSec ,string[768];
		gettime(acHour, acMin, acSec);
		
		strcat(string, ""NO"Вы были отсоединены от сервера Анти-Чит системой.\n\n\
			"W"Не исключено, что это могло произойти по ошибке, в таком случае, приносим свои извинения.\n");
		strcat(string, "Вы можете помочь нам в улучшении Анти-Чит системы, для этого сделайте скриншот экрана {9ACD32}(F8)\n\
			"W"И отправьте его на наш форум в {9ACD32}Технический раздел > Ошибочные срабатывания анти-чита.\n\n\
			{CECECE}Ниже приведены данные, полученные от Анти-Чит системы:\n");
		format(string,sizeof(string),"%sНик-Нейм: {9ACD32}%s\n\
			{CECECE}Идентификатор: {9ACD32}#%03i | %s\n\
			{CECECE}Задержка: {9ACD32}%i мс.\n\
			{CECECE}Время на момент срабатывания: {9ACD32}%02d:%02d:%02d\n\n\
			\t{FF6347}Напоминаем, что использование чит-программ наказывается блокировкой аккаунта!",string,player_name[playerid],code,AntiCheat[code][acName],GetPlayerPing(playerid),acHour, acMin, acSec);
		D(playerid, DIALOG_NONE, DSM, ""P"Уведомление системы безопасности", string, "Закрыть", "");

		format(string, 144, "[ANTICHEAT] %s был кикнут %s (#%d)", player_name[playerid],AntiCheat[code][acName],code);
		AdmMSG(COLOR_GREY, string,2);
	}
	else if(playerid != INVALID_PLAYER_ID && AntiCheat[code][acValue] == 2) AddCheater(playerid);
	return true;
}
stock UpdateBuildText(b_id) {
	new font_face[12];
	switch(BildInfo[b_id][bFontFace]) {
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
 	new text[144+16];
	if(!BildInfo[b_id][bOwned]) {
		text = "{000000}Рекламное место свободно";
		BildInfo[b_id][bAligment] = 1, BildInfo[b_id][bFontSize]=25, BildInfo[b_id][bBackColor] = 1;
	}
	else format(text,144+16,"{000000}%s",BildInfo[b_id][bText]);
	return SetDynamicObjectMaterialText(BildInfo[b_id][bObjectID], 0,text, 130, font_face, BildInfo[b_id][bFontSize], 0, 0xFF000000,Colors_BIG[BildInfo[b_id][bBackColor]], BildInfo[b_id][bAligment]);
}
stock ShowPlayerEditMenu(playerid) {
	new string[400] = ""P"№ Параметр\t"P"Значение\n", str[64], p_var = GetPVarInt(playerid,"SelectBildID"), font_face[12], aligment_name[18];
	BildIntro(playerid, p_var, -13);
	switch(BildInfo[p_var][bFontFace]) {
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
	switch(BildInfo[p_var][bAligment]) {
	    case 0: aligment_name = "По левому краю";
	    case 1: aligment_name = "По центру";
	    case 2: aligment_name = "По правому краю";
	}
	strcat(string,"\n"P"1."W" Текст\t"G"Изменить");
	format(str,64,"\n"P"2."W" Цвет фона\t{%s}Фон",Colors_LOW[BildInfo[p_var][bBackColor]]), strcat(string,str);
	format(str,64,"\n"P"3."W" Шрифт текста\t%s",font_face), strcat(string,str);
	format(str,64,"\n"P"4."W" Размер текста\t%i",BildInfo[p_var][bFontSize]), strcat(string,str);
	format(str,64,"\n"P"5."W" Выравнивание текста\t%s",aligment_name), strcat(string,str);
	strcat(string,"\n"P"6."W" Разорвать договор аренды");
	return D(playerid,D_BILL_SETTING,DSTH,""P"Настройка рекламы",string,"Выбрать","Закрыть");
}
stock BildIntro(playerid, b_id, c_dist) {
	new Float: x = BildInfo[b_id][bPos][0], Float: y = BildInfo[b_id][bPos][1];
    GetXYInFront(x, y, BildInfo[b_id][bPos][3], c_dist);
    TogglePlayerControllable(playerid, false);
	SetPlayerPosAC(playerid, x, y, BildInfo[b_id][bPos][2],TI[playerid][tVirtualWorld], TI[playerid][tInterior],true);
    SetPlayerCameraPos(playerid, x, y, BildInfo[b_id][bPos][2]);
    SetPlayerCameraLookAt(playerid, BildInfo[b_id][bPos][0], BildInfo[b_id][bPos][1], BildInfo[b_id][bPos][2]);
    return SetPlayerInterior(playerid, 0), true;
}
stock BildExit(playerid) {
	SetPlayerInterior(playerid,1);
	SetPlayerPosAC(playerid, GetPVarFloat(playerid,"bild_x"),GetPVarFloat(playerid,"bild_y"),GetPVarFloat(playerid,"bild_z"),TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetCameraBehindPlayer(playerid), TogglePlayerControllable(playerid, 1);
    return true;
}
stock GetXYInFront(&Float:x, &Float:y, Float:angle, Float:distance) {
    x += (distance * floatsin(-angle, degrees));
    y += (distance * floatcos(-angle, degrees));
}
CB: OnCheckStatsAdmin(playerid, name[]) {
	new rows;
	rows = cache_num_rows();
	if(!rows) return ErrorMessage(playerid, "Администратор не найден");
    new string[150], string2[250],stringer[1512];
    new check_online_monday, check_online_tuesday, check_online_wednesday,
		check_online_thursday, check_online_friday, check_online_saturday,
		check_online_sunday, check_online_allday,
		check_kicked, check_warned, check_baned, check_muted,
		check_jail,check_rep,check_pm;

	cache_get_value_name_int(0, "online_monday",check_online_monday);
	cache_get_value_name_int(0, "online_tuesday",check_online_tuesday);
	cache_get_value_name_int(0, "online_wednesday",check_online_wednesday);
	cache_get_value_name_int(0, "online_thursday",check_online_thursday);
	cache_get_value_name_int(0, "online_friday",check_online_friday);
	cache_get_value_name_int(0, "online_saturday",check_online_saturday);
	cache_get_value_name_int(0, "online_sunday",check_online_sunday);

	cache_get_value_name_int(0, "kick",check_kicked);
	cache_get_value_name_int(0, "ban",check_baned);
	cache_get_value_name_int(0, "warn",check_warned);
	cache_get_value_name_int(0, "mute",check_muted);
	cache_get_value_name_int(0, "pm",check_pm);
	cache_get_value_name_int(0, "jail",check_jail);
	cache_get_value_name_int(0, "rep",check_rep);

    strcat(stringer, "{FFA200}Недельный онлайн\n\n");
    format(string, sizeof(string), ""W"Понедельник:\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_monday), (check_online_monday/3600>=3)?("{46CA00}Выполнена"):(check_online_monday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Вторник\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_tuesday),  (check_online_tuesday/3600>=3)?("{46CA00}Выполнена"):(check_online_tuesday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Среда\t\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_wednesday),  (check_online_wednesday/3600>=3)?("{46CA00}Выполнена"):(check_online_wednesday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Четверг\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_thursday),  (check_online_thursday/3600>=3)?("{46CA00}Выполнена"):(check_online_thursday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Пятница\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_friday),  (check_online_friday/3600>=3)?("{46CA00}Выполнена"):(check_online_friday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Суббота\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_saturday),  (check_online_saturday/3600>=3)?("{46CA00}Выполнена"):(check_online_saturday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Воскресенье\t\t"P"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_sunday),  (check_online_sunday/3600>=3)?("{46CA00}Выполнена"):(check_online_sunday/3600>=2)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);

    check_online_allday = check_online_monday + check_online_tuesday + check_online_wednesday + check_online_thursday + check_online_friday + check_online_saturday + check_online_sunday;

    format(string, sizeof(string), "\n{AFAFAF}Общий онлайн:\t"P"%s "W"| Норма онлайна - %s\n\n", ConvertsCmdTime(check_online_allday), (check_online_allday/3600>=21)?("{46CA00}Выполнена"):(check_online_allday/3600>=19)?("{FFCC00}Не выполнена"):("{F63D00}Не выполнена"));
    strcat(stringer, string);

    strcat(stringer, "{FFA200}Выдача наказаний\n\n");
    format(string2, sizeof(string2), ""W"Кикнул:\t\t\t\t"P"%i\n", check_kicked);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Заварнил:\t\t\t\t"P"%i\n", check_warned);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Забанил:\t\t\t\t"P"%i\n", check_baned);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Prison:\t\t\t\t\t"P"%i\n", check_jail);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Замутил:\t\t\t\t"P"%i\n", check_muted);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Репорты:\t\t\t\t"P"%i\n", check_pm);
    strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"РЕПУТАЦИЯ:\t\t\t\t"P"%i", check_rep);
    strcat(stringer, string2);

    D(playerid, DIALOG_NONE, DSM, name, stringer, "Закрыть", "");
	return 1;
}
stock getDayEx() {
    new hour, minuite, second, year, month, day, w = gettime(), saturday = 1310155200, day_week;
    gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	return day_week;
}
CB: SetCameraBehindPlayerDelay(playerid) SetCameraBehindPlayer(playerid);
CB: SaveQuests(playerid,id) {
	new query[356];
	format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
	mysql_tquery(connects, query);
	return 1;
}
stock dialog_anticheat(playerid) {
	new string[2512] = "Код\tНазвание\tСостояние\n";
	new str[3][50] = {""NO"Отключен"W"",""GREEN"Кик"W"",""BLUE"Предупреждение"W""};
	for(new i; i<53; i++) {
		format(string,sizeof(string),"%s%d\t%s\t%s\n",string,AntiCheat[i][acID],AntiCheat[i][acName],str[AntiCheat[i][acValue]]);
	}
	return D(playerid,D_ANTICHEAT,DSTH,""P"Античит",string,"Выбрать","Закрыть");
}
stock AtachPlayerAcces(playerid, setobject,skinid) {
    switch(setobject) {
    	case 19035,19034,19033,19032,19031,19030,19029,19028,19027,19026,19025,19024,19023,19022,19021,19020,19019,19018,19017,19016,19015,19014,19013,19012,19011,19010,19009,19008,19007,19006: {
    	    if(PI[playerid][pSlotItem_Use][1] == 1) {
	    		switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
					case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
					case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
					case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
					case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
					case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 27: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 39: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 41: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 42: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
					case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 49: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 50: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 54: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
					case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
					case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
					case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
					case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
					case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
					case 94: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
					case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
					case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
					case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
					case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
					case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
					case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
					case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
					case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
					case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
					case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
					case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
					case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
					case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
					case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
					case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 148: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 150: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
					case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
					case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
					case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 169: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
					case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
					case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
					case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
					case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
					case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
					case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 214: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 216: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 219: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 224: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 225: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 226: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
					case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
					case 233: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
					case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
					case 240: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
					case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
					case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
					case 250: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
					case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
					case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 261: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
					case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
					case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
					case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 286: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					default: ErrorMessage(playerid,"Аксессуар очки, не будет отображаться на этом скине");
				}
			}
		}
		case 19069,19067,19068: {
		    if(PI[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
	    			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.000000,1.000000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.033000,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,0.000998, 0.000000,90.000000,95.899993, 1.000000,1.000000,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.000999,0.000998, 0.000000,90.000000,95.899993, 1.175000,1.000000,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.006999,0.000998, 0.000000,90.000000,95.899993, 1.092000,1.000000,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,-0.006000,0.000998, 0.000000,90.000000,95.899993, 1.137000,1.050999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.013999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 0.987000,1.091999,0.866999);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.122000,1.091999,0.866999);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.021000,0.001998, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.017000,-0.003001, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
					case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.027000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.009000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.002999,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.024000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.035999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.014999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.002999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.012999,0.008999, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 63: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
					case 64: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.025999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.024999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.004000,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.019999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 75: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.003000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.034000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 85: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.010001, 0.000000,90.000000,95.400001, 1.151999,1.240999,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.027000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.001999,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.003999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.011999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.032000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.002000,0.002999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.012000,0.003999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.019000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.010000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.000000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.026000,-0.010001, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.019000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.035998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 144: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.007999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.004999,0.010999, 0.000000,90.000000,95.400001, 1.176999,1.087000,1.000000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.009000,0.000999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.002999,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.007999,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.011000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.008000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,-0.009999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.026000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.014000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,-0.006999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.001000,0.002998, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001000,-0.001001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.004000,-0.009001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.011000,-0.004000, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.015000,0.000999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.015000,0.000999, 0.000000,90.000000,96.400009, 1.231999,1.000000,1.000000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.005000,0.000999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.010000,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.010000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.022000,-0.003000, 0.000000,90.000000,96.400009, 0.964999,1.000000,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.009999,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
					case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.004000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.004000,-0.005000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.004000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.003000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.013000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005999,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					default: ErrorMessage(playerid,"Аксессуар шапка, не будет отображаться на этом скине");
				}
			}
		}
		case 18953,18954: {
		    if(PI[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
	    			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.002001, 0.000000,-0.799996,-8.600006, 1.000000,1.000000,1.050999);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,0.008999, 2.000010,-5.999990,5.400008, 1.000000,1.042000,1.079000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.032000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.007000,-0.002001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.032000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.008000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.020000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.016000,0.003998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.004000,0.000998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.014000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.023000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,0.015000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.909000,1.206000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.005000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.974000,1.206000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.040000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.017000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.004000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.020000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.025000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.014000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.006000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.006000,-0.004000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.025000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.030000,-0.000000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.010000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.029000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.018000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.005000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.005000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.013000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.025000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.024000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.017000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.018000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.005000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.011000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.020000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.012000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.004000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.010000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.015000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.012999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.017999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.014000,0.001999, 2.000010,2.000011,-26.199983, 1.000000,0.970000,1.166000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.003000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.029000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.023000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.132000,1.166000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.011000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.015000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 243: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,0.023000,0.001998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,-0.004001, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.005000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.010000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.027000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.015000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.013000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,0.002998, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.021000,-0.003001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.030000,-0.003001, 0.000000,0.899997,-23.200000, 1.000000,1.075999,1.131999);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.131999);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					default: ErrorMessage(playerid,"Аксессуар шапка, не будет отображаться на этом скине");
				}
			}
		}
		case 19554: {
		    if(PI[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
	    			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.009999,0.001998, 0.400000,-3.699999,12.699994, 1.114999,1.000000,1.238999);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.013000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.025000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.007999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.000000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.025000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.011999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.025000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.005000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165997,-0.014999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.010000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.004000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.011000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.005000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.018999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,-0.009000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,0.011999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.008000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.006999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.014000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.010000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.020000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.000999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.311000,1.367000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.017999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.010000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.007999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.016000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.001000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.015000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.023000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.001999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.005000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.012999,-0.002001, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.108000,1.314000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,0.987000,1.314000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.007999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.008999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.010000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.019000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.371001,1.374000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,-0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170997,-0.023000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.009999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.018000,1.294000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.008999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.005999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.014000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.000999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.005000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.006999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.001999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.002001, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.006000,0.000998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.007000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,0.019999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.012999,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.020000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.018999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.128001,1.429999);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.288001,1.429999);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.005000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.015000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,-0.007000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.002000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,0.004999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.004999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.000000,-0.004001, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,-0.001999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.004999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.011000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159997,0.010000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.278001,1.319999);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.137000);
					case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.216000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,0.008000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.216000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.295000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.006999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.012000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.001000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.000000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					default: ErrorMessage(playerid,"Аксессуар шапка, не будет отображаться на этом скине");
				}
			}
		}
		case 18947,18948,18949,18950,18951: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.014000,-0.008000, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.126000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,13.600016, 1.000000,1.000000,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.001000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.008000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.007000,0.003998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.027000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.001000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.005000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.015000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.006999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.024000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.037000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.008999,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.013000,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.028000,0.000998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.196998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.002999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.011000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.000000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.003999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.016000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.023000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.010999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.007999,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.022000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.007000,-0.005001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.008999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.004999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.009000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.001000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.005999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,0.017000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.003000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.188998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.800999,0.970000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					default: ErrorMessage(playerid,"Аксессуар шляпа, не будет отображаться на этом скине");
				}
			}
		}
		case 18933,18932,18928,18942,18943,18940,18929,18926: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.000000,1.072000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.020000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.015001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.019001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,-0.007000, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.014000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.016001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 24: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012999,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,1.120000,1.075000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.000999,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.011000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.024000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.004000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.010001, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,-0.010000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.031000,-0.022001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.003999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.014999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.033000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.033000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177997,0.000999,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.013000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,0.982000,1.019999);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.013000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.001000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,0.005999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,1.005999,1.019999);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.003999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.007999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.023000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.012999,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,-0.026000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.186997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.027000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.004000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.003999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.028000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.028000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.021000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.005000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.005000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,0.971000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.022000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.018000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.018000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.018000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.024000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,0.019999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 139: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 141: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 145: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.033000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,-0.028000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179997,-0.042000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.002999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.001000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,-0.001000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.000999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145997,-0.009000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.025000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.016000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.029000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.016000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.021000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.128000,1.059000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.006000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.068999,1.009000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.016000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.022000,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.001000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.016000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.028000,-0.016001, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.037000,-0.020000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.023000,-0.017000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.033000,-0.019000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.041000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.023000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.002000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.004000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.002999,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.033000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.025000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.019000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.045000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.039000,-0.006000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.041000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.010999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,-0.015000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.012999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.003000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.006000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.011000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.004000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.009000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.068999);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.011000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.101999,1.106000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187998,-0.023000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.183000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.010000,-0.020000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
					case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.013000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.029000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.019000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.030000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.004000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.016000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.021000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,1.033999,1.004000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.027000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.012000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.006000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.011000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.013000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.021000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.019000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,-0.031000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.015000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.028000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.032000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.072000,-0.016000, -175.400024,173.999984,139.900024, 1.074999,0.970999,1.044000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.020000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.001999,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 307: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.028000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					default:ErrorMessage(playerid,"Аксессуар кепка, не будет отображаться на этом скине!");
				}
			}
		}
		case 18955,18956,18957,18959: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105997,0.034000,0.000998, 6.799999,90.000000,97.500000, 0.925999,1.092999,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.034000,-0.005001, 8.500000,89.899986,76.199981, 1.024999,1.115999,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.045000,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.028999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.015999,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.037000,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,-0.001999,-0.005001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,-0.002001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085997,0.019000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.014000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.027000,-0.004001, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.027000,0.004998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.002001, 8.500000,89.899986,81.099990, 1.047000,1.030999,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.007001, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
					case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082997,0.023000,-0.004000, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.023000,-0.003001, 8.500000,89.899986,81.099990, 1.047000,1.156999,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.058998,0.026000,-0.009001, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.036000,0.002998, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.027000,-0.003001, 8.500000,89.899986,81.099990, 0.988000,1.017999,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.045999,-0.003001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.035000,-0.006001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.018000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.046000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.056999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.037999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.017999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026999,-0.004001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.026999,-0.005001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.037999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.033999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.025999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.040999,0.006998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.040999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.018999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.035999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.013999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.049999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
					case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.007999,-0.001001, 8.500000,89.899986,81.099990, 1.002000,1.065999,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.027999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.022999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.009999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.031999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.028999,0.001998, 8.500000,89.899986,81.099990, 1.042000,1.123999,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.044999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.033999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.028999,0.004999, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.019999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.023999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.037999,-0.004000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.031999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.030999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.029999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.029999,-0.005000, 8.500000,89.899986,81.099990, 1.042000,1.059999,1.000000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032999,-0.005000, 8.500000,89.899986,81.099990, 0.935000,1.012999,1.000000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.005000, 8.500000,89.899986,81.099990, 0.980000,1.012999,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.016000,0.004999, 0.000000,90.000000,115.000000, 1.000000,1.000000,1.000000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.024000,-0.005001, 0.000000,90.000000,115.000000, 1.057999,1.191999,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.030000,-0.001000, 0.000000,90.000000,93.100013, 1.057999,1.102999,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.034000,-0.001000, 0.000000,90.000000,93.100013, 0.913999,1.102999,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,-0.001000, 0.000000,90.000000,93.100013, 0.970999,1.102999,1.000000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.027000,0.000999, 0.000000,90.000000,93.100013, 1.066999,1.102999,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.046000,-0.008000, 0.000000,90.000000,93.100013, 1.099999,1.102999,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.028000,0.000999, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
					case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.078998,0.028000,-0.004000, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
					case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.013000,-0.000000, 0.000000,90.000000,93.100013, 0.913999,0.943999,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 152: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,0.001000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.021000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100997,0.027000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.022000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.002999,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.025000,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.016000,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.016000,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,0.016000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.021999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.021999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.013999,-0.009000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.025999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.024000,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.018999,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.012999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.018999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.044999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.033999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.043999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084997,0.027999,0.002999, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.019999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.031999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.015999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.000999, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.034000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.014000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.048000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.034000,-0.000000, 0.000000,90.000000,93.100013, 1.076999,1.121999,1.024999);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.019000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099997,0.005000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.020000,-0.001001, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.032999,0.000998, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.031999,-0.000001, 0.000000,90.000000,101.900001, 1.059000,1.115999,1.000000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.027999,-0.004001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.026999,0.007998, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031999,0.002998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.025999,0.003998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.041999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.002001, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,0.000998, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.020999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,0.025999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.024999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.034999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.024999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.032999,-0.001001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.028999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.028999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.023999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.005999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.035999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.024999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.027999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					default:ErrorMessage(playerid,"Аксессуар кепка, не будет отображаться на этом скине!");
				}
			}
		}
		case 19161, 19162: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					default:ErrorMessage(playerid,"Аксессуар кепка, не будет отображаться на этом скине!");
				}
			}
		}
		case 18924,18925,18921,18923,18922: {
		    if(PI[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.000999,-0.010001, 0.199998,-5.700015,-8.800018, 1.000000,1.000000,1.085000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.000000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.005000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.015000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.011999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.021999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.002000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.006000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.016999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.015000,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,0.947999,1.029000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.008000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.006000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.123000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.011999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.200000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.012000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.017000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.011999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,0.004000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.005999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.002000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.004999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.008000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.001000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.013000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.006999,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.005999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.014999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.015000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.003999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002000,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.002999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.000000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.014999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.010999,-0.000001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.008001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,-0.006001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.018000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.020999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.027999,1.079000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.013999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.208999,1.217000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.002000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.005999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.001000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.013999,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.012999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.012999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.004999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.005999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.010999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.002999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.003999,0.001999, 0.199998,-5.700015,-8.800018, 1.074000,0.936999,0.979000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.003000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.001999,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177998,-0.007999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.019999,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.012000,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.015999,-0.000000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.012000,-0.002000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.000000,-0.005000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.006999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.005999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.001999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.007000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.017999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,-0.007999,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					default: ErrorMessage(playerid,"Аксессуар берет, не будет отображаться на этом скине");
				}
		    }
		}
		case 18968,18967,18969: {
		    if(PI[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.005001, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007999,0.001998, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.015000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.004999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.018000,-0.000001, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.012000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.000000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.027000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.013000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.002998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009999,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.003000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.017999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.029000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.008999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.037999,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.023000,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004999,-0.005000, 0.000000,90.000000,93.699989, 1.078999,1.138000,1.000000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.043999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031999,-0.004000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.017999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.026999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.014999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.008999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.002999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.006999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.006999,0.006999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,0.025999,0.003999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.011999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.032999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.010999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 94: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.022999,0.001999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.001999,0.001999, 0.199999,91.999984,90.599967, 0.934999,0.991000,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.015999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.035999,-0.003000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,-0.005000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.006001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.001000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.020999,-0.002000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,0.003999, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.033999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.002000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.001000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.009999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 196: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 202: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.021999,-0.000000, 0.199999,91.999984,90.599967, 0.855999,1.005000,1.000000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.018999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 216: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.008999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,0.021999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 224: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 225: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.009000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.022999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.012999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.000999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 230: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.015999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.002999,1.090000,1.000000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.001998, 0.000000,90.000000,82.699989, 1.000000,1.057000,1.000000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.030000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 263: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.004999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.008999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.014999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.003000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					default: ErrorMessage(playerid,"Аксессуар панамка, не будет отображаться на этом скине");
				}
		    }
		}
		case 18911,18912,18913,18914,18915,18916,18917,18918,18919: {
			if(PI[playerid][pSlotItem_Use][3] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
					case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
					case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
					case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
					case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
					case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
					case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
					case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
					case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
					case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
					case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
					case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
					case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
					case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
					case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
					case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
					case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
					case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
					case 43: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
					case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
					case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
					case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
					case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
					case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
					case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
					case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
					case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
					case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
					case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
					case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
					case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
					case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
					case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
					case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
					case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
					case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
					case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
					case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
					case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
					case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
					case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
					case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
					case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
					case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
					case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
					case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
					case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
					case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
					case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
					case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
					case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
					case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
					case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
					case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
					case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
					case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
					case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
					case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
					case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
					case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
					case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
					case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
					case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
					case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 173: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 174: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 175: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 203: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 204: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
					case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
					case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
					case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
					case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
					case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
					case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
					case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
					case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
					case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
					case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
					case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
					case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
					case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
					case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
					case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 237: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
					case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
					case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 269: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
					case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
					case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 285: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
					case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
					case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
					case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
					case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
					case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
					case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
					case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
					case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
					default:ErrorMessage(playerid,"Аксессуар бандана, не будет отображаться на этом скине");
				}
			}
		}
		case 19101..19120: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.012999, 0.000000,173.499969,-154.900054, 1.151999,1.000000,1.145000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.026000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.013000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.026000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.002999,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.004999,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.019999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.007999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 50: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.007999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.010000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.012000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.001999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.009001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,0.002999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.196000,1.089999,1.130000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.007000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.024000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.007000,0.002998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.012000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.019999,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.013000,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.007999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.019999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.001000,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.008999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.197998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.332000,1.058999,1.191000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.00001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					default:ErrorMessage(playerid,"Аксессуар каска, не будет отображаться на этом скине");
				}
			}
		}
		case 19036,19037,19038: {
			if(PI[playerid][pSlotItem_Use][3] == 1) {
		    	switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
					case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
					case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
					case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
					case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
					case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 41: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 42: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
					case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 50: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 54: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
					case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
					case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
					case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
					case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 71: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
					case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
					case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
					case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
					case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
					case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
					case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
					case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
					case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
					case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
					case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
					case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
					case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
					case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
					case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
					case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
					case 136: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
					case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
					case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
					case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
					case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
					case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
					case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
					case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
					case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
					case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
					case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 219: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 224: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 225: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
					case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
					case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
					case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
					case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
					case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
					case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
					case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
					case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
					case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
					case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
					case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
					case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					default:ErrorMessage(playerid,"Аксессуар маска, не будет отображаться на этом скине");
				}
			}
		}
		case 18976: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					default:ErrorMessage(playerid,"Аксессуар спорт-шлем, не будет отображаться на этом скине");
				}
			}
		}
		case 18977, 18978, 18979, 18645: {
			if(PI[playerid][pSlotItem_Use][0] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					default:ErrorMessage(playerid,"Аксессуар спорт-шлем, не будет отображаться на этом скине");
				}
			}
		}
		case 19421, 19422, 19423, 19424: {
			if(PI[playerid][pSlotItem_Use][6] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.286000,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 2: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.303999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
					case 3: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.293999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
					case 4: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
					case 5: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355999,0.071000,0.005000, -81.499992,-113.599922,94.599967, 1.099000,1.044999,1.000000);
					case 6: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.347999,0.090000,0.000000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 7: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.323998,0.104999,-0.008999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 8: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.301999,0.112999,0.001999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 9: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.314998,0.089999,0.001999, -90.599975,-108.399971,91.199943, 1.000000,1.000000,1.000000);
					case 10: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.243998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 11: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 12: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.313999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 13: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 14: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338999,0.102000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 15: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.325999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 16: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.367999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 17: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.346999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 18: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.299998,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 19: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.354999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 20: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 21: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 22: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.357999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 23: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 24: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 25: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 26: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.349999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 27: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 28: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.343999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 30: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342999,0.102000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 33: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.294999,0.092000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 34: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 35: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 36: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 37: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 38: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 39: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 40: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.298999,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 43: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 44: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 45: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.299999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 46: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.323999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 47: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 48: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.343999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 57: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.354999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 58: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.278999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 59: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 60: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.344999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 61: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 66: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 67: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 68: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 69: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 70: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 71: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 72: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 73: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 76: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 78: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.380998,0.109999,0.003000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 79: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.364998,0.109999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 90: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 91: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 93: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 94: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 95: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.266998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 96: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.360998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 97: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.311998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 98: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318998,0.098999,0.000000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 100: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.341998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 102: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.102999,-0.008999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 105: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.366998,0.082000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 106: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 107: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 108: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 109: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 110: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 111: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.360998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 112: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.309998,0.084999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 113: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.332998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 114: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 115: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 116: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 117: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 118: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 119: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 120: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 121: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 122: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 123: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 124: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 125: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 126: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 127: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 128: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.316998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 134: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.247998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 136: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.247998,0.099999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 137: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 141: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 142: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.097999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 143: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.109000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 147: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.109000,0.007000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 148: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 150: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 153: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.110000,0.008000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 154: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.312998,0.110000,-0.004999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 155: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.110000,-0.010999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 156: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.110000,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 160: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.303998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 163: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 164: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355998,0.107000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 165: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 166: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 170: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 171: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 172: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 173: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 174: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 175: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 176: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 177: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 179: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 180: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 181: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 182: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 183: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 184: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.103999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 185: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.090999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 186: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 187: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.111999,0.013000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 188: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 189: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 190: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 191: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 193: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 194: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 195: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.358998,0.101999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 200: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 202: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 206: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 208: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 210: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.256998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 211: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 212: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.252998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 217: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 219: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 220: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 221: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 222: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 223: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.092999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 227: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361998,0.096999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 228: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 229: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.274998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 230: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.301998,0.101999,-0.003999, -90.599975,-104.999977,92.599967, 1.109000,1.000000,1.000000);
					case 233: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
					case 234: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
					case 235: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.268998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
					case 236: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.274998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 239: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.387998,0.111999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 240: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.325998,0.087999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 247: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 248: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 250: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.002999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 252: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 254: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 255: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.332998,0.103999,0.009000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 258: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 259: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 261: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.276998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 262: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.317998,0.083999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 265: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.317998,0.083999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 266: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.070999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 267: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.531998,0.082000,-0.039000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 269: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.368998,0.068000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 270: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355998,0.091000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 271: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.094000,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 272: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 273: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.315998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 274: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 275: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 276: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 280: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 281: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 282: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 283: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 284: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.104999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 285: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.090999,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 286: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.086999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 287: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 288: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.341998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 289: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,-0.000999, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 290: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 291: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 292: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328996,0.074000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 293: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 294: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 295: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 296: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260996,0.093999,0.007001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 297: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 298: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.312996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 300: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 301: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 302: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 303: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 304: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 305: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 306: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 307: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 308: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 309: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 310: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 311: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					default:ErrorMessage(playerid,"Аксессуар наушники, не будет отображаться на этом скине");
				}
			}
		}
		case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: {
			if(PI[playerid][pSlotItem_Use][7] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.003998,-0.001999, 51.200016,53.199977,142.800018, 0.963999,0.916999,1.000000);
					case 2: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.005999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.007999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.012999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.018998,-0.000999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
					case 8: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.003998,-0.011999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 13: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.002998,-0.015999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.010998,-0.012999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 23: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 24: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.009998,-0.011999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 28: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 31: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 32: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,0.008001, 51.200016,70.499969,142.800018, 0.964999,0.921999,1.000000);
					case 34: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 35: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 36: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 37: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 38: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.010998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 41: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,0.001001, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 42: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.012998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.015998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.008998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,0.001001,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 48: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,0.001001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 49: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 51: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 52: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 53: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 55: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 56: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 57: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.005001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 58: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.003998,-0.007998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 59: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.011998,-0.004998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 60: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.002998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 61: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011999,-0.014998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 66: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
					case 67: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
					case 69: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 73: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.010998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 78: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 79: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,0.001001,-0.028998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.007998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 93: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 94: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.009998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.040998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,0.001001, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,-0.002998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.007998,-0.006998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 102: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.003998,-0.004998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 104: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,0.001001,-0.001998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 105: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.363999,1.386999,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 107: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 108: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 109: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 110: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.022999,-0.008998,-0.012998, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 114: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 116: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.006000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.128999,1.127999,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 122: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.001998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.010998,-0.010998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.004998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.024999,-0.005998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
					case 132: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.011998,0.013001, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 133: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.005998,-0.008998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 134: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.012998,-0.005998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 142: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 0.984000,0.977999,1.000000);
					case 149: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.015998,-0.001998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.010998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
					case 154: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.013998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
					case 155: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.000998,-0.005998, 51.200016,70.499969,142.800018, 1.250000,1.087999,1.000000);
					case 156: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.000998,-0.009998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
					case 160: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.008998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
					case 163: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
					case 164: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
					case 165: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
					case 166: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
					case 167: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.010998,-0.013999, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
					case 169: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.004998, 51.200016,70.499969,142.800018, 1.016000,1.304999,1.000000);
					case 170: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,0.002001, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
					case 171: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.007998, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
					case 172: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,0.001001, 51.200016,70.499969,142.800018, 0.956000,1.095999,1.000000);
					case 173: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.006998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
					case 174: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
					case 175: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.450000,1.353999,1.000000);
					case 176: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 177: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 179: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 180: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 181: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 184: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.011998,-0.001998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 185: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,-0.010999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 188: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000000, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 189: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 191: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 192: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 193: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 194: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 195: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 196: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 198: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.014998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 200: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 201: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 202: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 206: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 207: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 209: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,0.008000, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 210: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 211: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 214: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 215: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 216: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 217: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 220: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.010998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 221: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 222: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 223: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 224: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 225: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 226: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 229: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 231: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 233: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 234: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 235: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 239: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 247: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 250: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.009998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 252: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 254: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.002998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 255: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.008998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 258: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 259: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 263: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 269: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 270: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,0.005001, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 271: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.008998,-0.006999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 273: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.020000,-0.013998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 274: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 275: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 276: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 280: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 281: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 282: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 283: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 285: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.002998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 287: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 288: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 289: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 291: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 292: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.050999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.028999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 307: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					default:ErrorMessage(playerid,"Аксессуар часы, не будет отображаться на этом скине");
				}
			}
		}
		case 18910, 18909, 18908, 18907, 18906: {
			if(PI[playerid][pSlotItem_Use][3] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,-0.001000,0.000000, -92.499984,-7.199993,-98.099990, 1.114999,1.000000,0.901000);
					case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.006999,0.007000, -92.499984,-7.199993,-98.099990, 1.188999,1.256000,1.157000);
					case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
					case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
					case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.123000,0.017000,0.001999, -84.299972,-5.799993,-98.099990, 1.216999,1.256000,1.011999);
					case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.091000,0.003000,0.001999, -84.299972,-5.799993,-98.099990, 1.237999,1.256000,1.057999);
					case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104000,0.013000,0.006000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,1.122999);
					case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071000,-0.015999,-0.000000, -91.399986,-5.799993,-92.200004, 1.181999,1.256000,0.974999);
					case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.100000,0.009000,-0.000000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,0.974999);
					case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.085999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 0.994999,1.256000,1.021000);
					case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.037999,1.256000,1.094000);
					case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.132999,1.256000,1.094000);
					case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.157999,1.056999,0.877000);
					case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.005999,1.056999,1.086000);
					case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.002000, -91.399986,-5.799993,-92.200004, 1.277999,1.056999,1.107000);
					case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.016000,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,0.863000);
					case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,-0.002999,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,1.034000);
					case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120999,0.020000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
					case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120999,0.011000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
					case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.130999,-0.004999,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
					case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.130999,0.024000,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
					case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.002000,-0.000000, -91.399986,-5.799993,-92.200004, 1.002999,1.056999,0.939000);
					case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.126999,0.006000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,1.119000);
					case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.001000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
					case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.001000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
					case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.027000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
					case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,-0.017999,0.003999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
					case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.012000,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
					case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,-0.019999,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,1.005000);
					case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,0.000999, -91.399986,-5.799993,-92.200004, 1.084999,1.358999,0.969000);
					case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,0.007000, -91.399986,-5.799993,-92.200004, 1.206999,1.358999,1.074000);
					case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,-0.000000, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
					case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.114000,0.004000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
					case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,-0.004999,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
					case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.099000,0.021000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,1.086000);
					case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
					case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,0.003000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
					case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,-0.001999,-0.004000, -91.399986,-5.799993,-92.200004, 1.318998,1.358999,1.158000);
					case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.118000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.197998,1.126999,0.946000);
					case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.055998,1.126999,0.946000);
					case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.126999,1.101000);
					case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
					case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
					case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,0.975000);
					case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,-0.005999,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
					case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
					case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.242998,1.126999,1.113000);
					case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.129000,-0.009999,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.129000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.119998,1.157999,1.061000);
					case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.181998,1.157999,1.135000);
					case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.449998,1.497999,1.211000);
					case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.001999, -91.399986,-5.799993,-92.200004, 1.075998,1.218000,1.063000);
					case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.002999,0.001999, -91.399986,-5.799993,-92.200004, 1.325998,1.434000,1.209000);
					case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.084000,0.015000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
					case 162: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
					case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.000998,1.086000,0.897000);
					case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
					case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
					case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.010000,0.005000, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
					case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.010000,-0.001999, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.215000);
					case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.142000);
					case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
					case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.112000,0.006000,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
					case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.139000,-0.006000,0.000000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
					case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
					case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
					case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.135000,-0.002999,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.124000,-0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,-0.010000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,-0.001000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.008000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
					case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
					case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.222998,1.306000,1.103000);
					case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.020999,0.001000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
					case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087000,0.006999,-0.000999, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
					case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
					case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.109000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
					case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.006000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
					case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.174000);
					case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.007999,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.204000);
					case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
					case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
					case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.004000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
					case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097000,-0.009999,0.002000, -91.399986,-5.799993,-92.200004, 1.200998,1.306000,1.009000);
					case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.020999,0.002000, -91.399986,-5.799993,-92.200004, 0.980998,1.115000,0.973000);
					case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064000,-0.004999,0.002000, -91.399986,-5.799993,-92.200004, 1.021999,1.115000,0.973000);
					case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.002000, -91.399986,-5.799993,-92.200004, 1.051999,1.115000,1.028000);
					case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.010000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
					case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
					case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
					case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.237999,1.115000,1.182000);
					case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104000,-0.002999,0.002000, -91.399986,-5.799993,-92.200004, 1.302999,1.267000,1.182000);
					case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
					case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
					case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.002000,-0.000999, -91.399986,-5.799993,-92.200004, 1.200999,1.267000,0.945000);
					case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.100000,-0.008999,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
					case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.122000,0.000000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
					case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081000,0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
					case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.016000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.004000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.011000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
					case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.005000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
					case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,-0.002999,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
					case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.002000,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
					case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,-0.017999,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
					case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					default:ErrorMessage(playerid,"Аксессуар бандана, не будет отображаться на этом скине");
				}
			}
		}
		case 3026: {
		    if(PI[playerid][pSlotItem_Use][5] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.204000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
					case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.237000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
					case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.228000,-0.062999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
					case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.056999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,0.918998,0.905000 );
					case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.117999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
					case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.079999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
					case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.219000,-0.057999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
					case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.061999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
					case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.058999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
					case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.262000,-0.071999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
					case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.189000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.158000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.129999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.243000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167000,-0.077000,-0.014999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 31: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.239000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.173000,-0.068999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.199000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.150000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.196000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.203000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.171999,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 50: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.218999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.232999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.074000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.202999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.141999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.155999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.162999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.118999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.888999 );
					case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
					case 89: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
					case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.999998,0.826000 );
					case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.122999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.022999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.071999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
					case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
					case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.112000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
					case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
					case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.123000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.035999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.051999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.098999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.112999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 129: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.186999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 130: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 131: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.069000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.175999,-0.069000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.064000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.094000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161999,-0.082000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.111999,-0.086000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.076999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 146: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.060000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.081000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.064000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.086000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.065000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.094999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.044999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.154999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.148999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.043999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.068999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.139999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.045999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.072999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.062999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 263: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,   0.121000,-0.078000,-0.030000 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.102999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.109999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.057999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.060999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.070999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.135999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					default:ErrorMessage(playerid,"Аксессуар рюкзак, не будет отображаться на этом скине");
				}
			}
		}
		case 371: {
		    if(PI[playerid][pSlotItem_Use][5] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.087999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.181999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.012000,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.122999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.107999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.077999,-0.127999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.105999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.021999,-0.126999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.098999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.097999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.037000,-0.125999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.038999,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.020999,-0.106999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.103999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.031000,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.017999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.051999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.121999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.111999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.094999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.045000,-0.120999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.101999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.140999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.131999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.159999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.044999,-0.156999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.012999,-0.170999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.096999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.050999,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.017000,-0.094999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.091999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.127999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.098999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.089999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.084999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.135999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.122999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.086999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.047999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.094999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.103999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.024999,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.099999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.031999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.004999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.068000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.016000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.231000,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.157999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.005999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002000,-0.136999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.127999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.055000,-0.119000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.041000,-0.130999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.106999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.123999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					default:ErrorMessage(playerid,"Аксессуар рюкзак, не будет отображаться на этом скине");
				}
			}
		}
		case 19559: {
		    if(PI[playerid][pSlotItem_Use][5] == 1) {
			    switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
					case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
					case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
					case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.046999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.067000,1.079998,1.029000 );
					case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.330000,1.319998,1.228000 );
					case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.095000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.978000,1.154998,1.164000 );
					case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049000,-0.039000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.084000,1.154998,1.164000 );
					case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
					case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.077000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
					case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.048999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
					case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.093000,-0.035999,-0.006000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
					case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
					case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
					case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
					case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
					case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.108000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
					case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
					case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.012000,1.071998,1.093000 );
					case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.078000,1.071998,1.093000 );
					case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.951000,1.071998,1.093000 );
					case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
					case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
					case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
					case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
					case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.058000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
					case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
					case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
					case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
					case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
					case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.965001,0.922999,0.975000 );
					case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
					case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.017000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
					case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
					case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
					case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
					case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.146999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.962001,0.902998,0.999000 );
					case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.851001,0.902998,0.999000 );
					case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
					case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.009000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
					case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.029000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
					case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
					case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
					case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.031000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
					case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.040000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
					case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.091000,-0.050999,0.000000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.035001 );
					case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.102999,-0.031999,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.138001 );
					case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.036998,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
					case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.072999,0.002999 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
					case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,0.002999 ,  0.000000,90.000000,0.000000 ,  0.933999,1.000999,1.138001 );
					case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  0.901998,1.000999,1.138001 );
					case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.065999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
					case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
					case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.031999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.034999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.177999,1.176999,1.394001 );
					case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
					case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
					case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.026999,1.176999,1.394001 );
					case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.026999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.018000,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.144999,1.436999,1.394001 );
					case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
					case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
					case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
					case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.948999,1.224999,1.394001 );
					case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.256999,1.394001 );
					case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
					case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
					case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
					case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  1.123998,1.363999,1.394001 );
					case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  0.980999,1.067999,1.082000 );
					case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.067999,1.432999,1.372001 );
					case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.939999,0.939999,1.126001 );
					case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.007000 ,  0.000000,90.000000,0.000000 ,  0.869999,0.939999,1.126001 );
					case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
					case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
					case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
					case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.154999,1.391999,1.199001 );
					case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.080999,1.245999,1.199001 );
					case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.870999,1.104999,1.199001 );
					case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.979999,1.306999,1.199001 );
					case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
					case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
					case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
					case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
					case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
					case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.088999,1.270001 );
					case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.068999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.044999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
					case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
					case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.043999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.039999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.006000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
					case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.016000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
					case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.077999,1.239999,1.270001 );
					case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.950999,1.239999,1.270001 );
					case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.021999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.239999,1.270001 );
					case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.017999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078999,-0.080999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.057999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.039998,1.337998,1.324001 );
					case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.982998,1.153998,1.324001 );
					case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
					case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
					case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
					case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.068999,0.003999 ,  0.000000,90.000000,0.000000 ,  1.009999,1.295998,1.324001 );
					case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.097998,1.295998,1.324001 );
					case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.045999,1.053998,1.249001 );
					case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052999,-0.005999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
					case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.042999,-0.012999,-0.014000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
					case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.029999,-0.038999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.867999,0.918998,1.073001 );
					case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.015999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.042998,1.238001 );
					case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.051999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.245999,-0.034999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.048999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.011999,-0.017000 ,  0.000000,90.000000,0.000000 ,  1.216999,1.113998,1.238001 );
					case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.009999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.026999,0.996998,1.238001 );
					case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.073999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
					case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
					case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
					case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.051999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
					case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
					case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
					case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
					case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.079999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
					case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.038999,1.172998,1.238001 );
					case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.074999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
					case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
					default:ErrorMessage(playerid,"Аксессуар рюкзак, не будет отображаться на этом скине");
				}
			}
		}
	}
	return 1;
}
stock texdraw_skill(playerid,weapon) {
	for(new i = 0;i < 4;i++) {
		TextDrawShowForPlayer(playerid,skill_td[i]);
		if(i < 2) PlayerTextDrawShow(playerid,skill_player_td[playerid][i]);
	}
	switch(weapon) {
		case 0: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"SD-PISTOL");
		case 1: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"Desert Eagle");
		case 2: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"SHOTGUN");
		case 3: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"MP5");
		case 4: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"AK-47");
		case 5: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"M4");
	}
	new str[13];
	format(str,sizeof str, "%d/100",PI[playerid][pGunSkill][weapon]);
	PlayerTextDrawSetString(playerid,skill_player_td[playerid][1],str);
	SetTimerEx("destroyTDskill",2500,false,"i",playerid);
}
CB: destroyTDskill(playerid) {
	for(new i = 0;i < 4;i++) {
		TextDrawHideForPlayer(playerid,skill_td[i]);
		if(i < 2) PlayerTextDrawHide(playerid,skill_player_td[playerid][i]);
	}
}
CB: OnVehicleRequestDeath(vehicleid, killerid) {
    if(VehicleInfo[vehicleid][vType] != VEHICLE_TYPE_TRAILER) {
        new Float:Healths;
        GetVehicleHealth(vehicleid, Healths);
        if(Healths >= 300.0) return false;
    }
    return true;
}
stock A_SetPlayerSkin(playerid,skin) {
	SetPlayerSkin(playerid,skin);
	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++) {
		if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	}
	for(new i = 0; i < 8; i++) {
		if(!PI[playerid][pSlotItem][i]) continue;
    	AtachPlayerAcces(playerid, PI[playerid][pSlotItem][i],GetPlayerSkin(playerid));
	}
	return 1;
}
stock game_dm() {
	if(open_game == 1 && time_registr_game > 1){
		time_registr_game --;
		if(time_registr_game == 300) SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" До конца регистрации на Сумасшедшие войны осталось 5 мин. (/gps > Общественные места > Центр развлечений)");
		if(time_registr_game == 120) {
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" До конца регистрации на Сумасшедшие войны осталось 2 мин. (/gps > Общественные места > Центр развлечений)");
			game_players[2] = 20;
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Свободных мест на сумасшедших войнах: "P"20"W". Используйте "P"/game 2"W" для телепорта");
		}
		if(time_registr_game == 20) game_players[2] = 0;
	} 
	else if(open_game == 1 && time_registr_game == 1) {
	    if(players_in_game >= 3) {
			time_registr_game = 0;
		    time_play_game = 300;
		    game_start = 1;
		    open_game = 0;
		    SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Cумасшедшие Войны начались!");
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin]) continue;
		    	if(player_to_game[i] == 1) {
		    	    kills_player_game[i] = 0;
		    	    new random_spawn = random(sizeof spawns_pos_game);
					SetPlayerPosAC(i, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,0);
					SetPlayerFacingAngle(i, spawns_pos_game[random_spawn][4]);
					SetPlayerHealth(i,100.0);
					new random_weapon = random(sizeof weapon_id_game);
					AC_GivePlayerWeapon(i, weapon_id_game[random_weapon], 999);
					for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
					new string[24];
					format(string,sizeof(string),"$%d",money_in_game);
					TextDrawSetString(td_game[5], string);
					if(TI[i][tCashDM]) TI[i][tCashDM] = 0;
					SetPlayerColor(i,0xBC2C2CFF);
				}
			}
		}
		else {
		    time_registr_game = 0;
	    	time_play_game = 0;
	    	game_start = 0;
	    	open_game = 0;
			money_in_game = 0;
			new query[100];
			format(query, sizeof(query), "DELETE FROM `dm_arena` WHERE 1");
			mysql_tquery(connects, query);
			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_game);
			UpdateDynamic3DTextLabelText(gamedm_text,-1,string);
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Cумасшедшие Войны были отменены. Недостаточное количество участников");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin]) continue;
				if(player_to_game[i] == 1) player_to_game[i] = 0;
				if(TI[i][tCashDM]) GiveMoney(i,TI[i][tCashDM],"возвращение взноса сумасшедших войн"),TI[i][tCashDM] = 0;
			}
		}
	}
	if(game_start == 1 && time_play_game > 1) {
	    time_play_game--;
	    foreach(new i:Player) {
	    	if(!TI[i][tLogin]) continue;
	        if(player_to_game[i] == 1) {
	    	    new string[24];
				format(string,sizeof(string),"%s",Convert(time_play_game));
		        TextDrawSetString(td_game[4], string);   
			}
		}
	}
	else if(game_start == 1 && time_play_game == 1) {
		time_registr_game = 0;
    	time_play_game = 0;
    	game_start = 0;
    	open_game = 0;
	 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Cумасшедшие Войны успешно завершены");
	 	End();
		UpdateDynamic3DTextLabelText(gamedm_text,-1,"Общий взнос: "O"$0");
	 	foreach(new i:Player) {
	 		if(!TI[i][tLogin]) continue;
			if(player_to_game[i] == 1) {
				for(new t; t != 6; t++) TextDrawHideForPlayer(i, td_game[t]);
				player_to_game[i] = 0;
				new random_spawn = random(sizeof spawns_pos_game_end);
				SetPlayerPosAC(i, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
				SetPlayerFacingAngle(i, spawns_pos_game_end[random_spawn][4]);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i, 0);
				if(PI[i][pMember] && start_work[i]) {
					A_SetPlayerSkin(i,PI[i][pFracSkin]);
					SetPlayerColor(i,gFractionSpawn[PI[i][pMember]][fracColor]);
				}
				else SetPlayerColor(i,0xFFFFFF11);
				DelGun(i);
			}
		}
	}
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if(((hour == 8 && minuite == 05 || hour == 10 && minuite == 05  || hour == 12 && minuite == 05  || hour == 14 && minuite == 05 || hour == 16 && minuite == 05 || hour == 18 && minuite == 05 || hour == 20 && minuite == 05 || hour == 22 && minuite == 05) && open_game == 0) || open_game == 999) {
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Открыта регистрация на Cумасшедшие Войны");
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" У Вас есть 10 минут для прохождения регистрации. (/gps > Общественные места > Центр развлечений)");
        time_registr_game = 600;
        money_in_game = 0;
        players_in_game = 0;
        open_game = 1;
        game_start = 0;
        game_players[2] = 0;
		new query[100];
		format(query, sizeof(query), "DELETE FROM `dm_arena` WHERE 1");
		mysql_tquery(connects, query);

		new string[70];
		format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_game);
		UpdateDynamic3DTextLabelText(gamedm_text,-1,string);
	}
	return 1;
}
stock End() {
	new Cache:result = mysql_query(connects, "SELECT `Name`,`kills_dm` FROM `dm_arena` ORDER BY `kills_dm` DESC LIMIT 3");
	new rows = cache_num_rows();
	if(rows) {
		new name[MAX_PLAYER_NAME];
		new kills[3];
		new str[156];
		for(new i; i < rows; i ++) {
            cache_get_value_name(i, "Name",name,MAX_PLAYER_NAME);
			if(i==0) {
			    new priz_player_1 = money_in_game/100*50;
				cache_get_value_int(i, "kills_dm", kills[0]);
				format(str,sizeof(str),"%s "G"занимает 1 место. Он убил "P"%d"G" игроков и выиграл "ORANGE"$%d",name,kills[0],priz_player_1);
				SendClientMessageToDM(-1,str);
				if(IsPlayerConnected(GetPlayerID(name))) {
					if(PI[GetPlayerID(name)][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(GetPlayerID(name),priz_player_1*BonusInfo[act_mp],"победа в сумасшедших войнах");
					else if(BonusInfo[act_select] == 2) GiveMoney(GetPlayerID(name),priz_player_1*BonusInfo[act_mp],"победа в сумасшедших войнах");
				    else GiveMoney(GetPlayerID(name),priz_player_1,"победа в сумасшедших войнах");
				}
			}
			if(i==1) {
			    new priz_player_2 = money_in_game/100*30;
				cache_get_value_int(i, "kills_dm", kills[1]);
				format(str,sizeof(str),"%s "G"занимает 2 место. Он убил "P"%d"G" игроков и выиграл "ORANGE"$%d",name,kills[1],priz_player_2);
				SendClientMessageToDM(-1,str);
				if(IsPlayerConnected(GetPlayerID(name))) {
					if(PI[GetPlayerID(name)][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(GetPlayerID(name),priz_player_2*BonusInfo[act_mp],"победа в сумасшедших войнах");
					else if(BonusInfo[act_select] == 2) GiveMoney(GetPlayerID(name),priz_player_2*BonusInfo[act_mp],"победа в сумасшедших войнах");
				    else GiveMoney(GetPlayerID(name),priz_player_2,"победа в сумасшедших войнах");
				}
			}
			if(i==2) {
			    new priz_player_3 = money_in_game/100*20;
				cache_get_value_int(i, "kills_dm", kills[2]);
				format(str,sizeof(str),"%s "G"занимает 3 место. Он убил "P"%d"G" игроков и выиграл "ORANGE"$%d",name,kills[2],priz_player_3);
				SendClientMessageToDM(-1,str);
				if(IsPlayerConnected(GetPlayerID(name))) {
					if(PI[GetPlayerID(name)][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(GetPlayerID(name),priz_player_3*BonusInfo[act_mp],"победа в сумасшедших войнах");
					else if(BonusInfo[act_select] == 2) GiveMoney(GetPlayerID(name),priz_player_3*BonusInfo[act_mp],"победа в сумасшедших войнах");
				    else GiveMoney(GetPlayerID(name),priz_player_3,"победа в сумасшедших войнах");
				}
			}
		}
	}
	cache_delete(result);
	return 1;
}
stock SendClientMessageToDM(color,const string[]) {
	foreach(Player,i) {
		if(!player_to_game[i]) continue;
		SendClientMessage(i,color,string);
	}
	return true;
}
CB: UnFreeze(playerid) TogglePlayerControllable(playerid, 1);
CB: GetMoney() {
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
 		if(PI[i][pCash] != GetPlayerMoney(i) && TI[i][tLogin]) ResetPlayerMoney(i), GivePlayerMoney(i, PI[i][pCash]);
	}
	return ;
}
stock Race_End(playerid) {
	new string[256];
	new priz_lv_1 = (money_in_race_lv/100)*50;
	new priz_lv_2 = (money_in_race_lv/100)*30;
	new priz_lv_3 = (money_in_race_lv/100)*20;
	switch(race_lead_lv) {
	    case 0: {
	    	race_lead_lv = 1;
			format(string,sizeof(string),"%s[%d]"G" завершил гонку "P"первым"G". Его время "W"%s"G", выигрыш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),priz_lv_1);
			SendClientMessageToRace(-1,string);
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(playerid,priz_lv_1*BonusInfo[act_mp],"победа в безумных гонках");
			else if(BonusInfo[act_select] == 2) GiveMoney(playerid,priz_lv_1*BonusInfo[act_mp],"победа в безумных гонках");
		    else GiveMoney(playerid,priz_lv_1,"победа в безумных гонках");
	    }
	    case 1: {
	    	race_lead_lv = 2;
			format(string,sizeof(string),"%s[%d]"G" завершил гонку "P"вторым"G". Его время "W"%s"G", выигрыш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),priz_lv_2);
			SendClientMessageToRace(-1,string);
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(playerid,priz_lv_2*BonusInfo[act_mp],"победа в безумных гонках");
			else if(BonusInfo[act_select] == 2) GiveMoney(playerid,priz_lv_2*BonusInfo[act_mp],"победа в безумных гонках");
		    else GiveMoney(playerid,priz_lv_2,"победа в безумных гонках");

	    }
	    case 2: {
	    	race_lead_lv = 3;
			format(string,sizeof(string),"%s[%d]"G" завершил гонку "P"третьим"G". Его время "W"%s"G", выигрыш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),priz_lv_3);
			SendClientMessageToRace(-1,string);
			if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(playerid,priz_lv_3*BonusInfo[act_mp],"победа в безумных гонках");
			else if(BonusInfo[act_select] == 2) GiveMoney(playerid,priz_lv_3*BonusInfo[act_mp],"победа в безумных гонках");
		    else GiveMoney(playerid,priz_lv_3,"победа в безумных гонках");

	    }
	   	default: {
	    	format(string,sizeof(string),"%s[%d]"G" завершил гонку. Его время "W"%s"G"",player_name[playerid],playerid,Convertss(time_race_lv));
			SendClientMessageToRace(-1,string);
	    }
	}
	A_DestroyVehicle(player_car_race_lv_id[playerid]);
	player_car_race_lv_id[playerid] = INVALID_VEHICLE_ID;
	player_to_race_lv[playerid] = 0;
	for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
	new random_spawn = random(sizeof spawns_pos_game_end);
	SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3,true);
	SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
	return true;
}

stock SendClientMessageToRace(color,const string[]) {
	foreach(Player,i)if(player_to_race_lv[i] == 1) SendClientMessage(i,color,string);
	return true;
}
race_game() {
    if(race_lv_start != 0) {
		time_race_lv++;
		new string[24];
		format(string,sizeof(string),"%s",Convert(time_race_lv));
        TextDrawSetString(td_game[4], string);
        if(time_race_lv == 1200) {
			UpdateDynamic3DTextLabelText(gamerace_text,-1,"Общий взнос: "O"$0");
            random_car_race_lv = INVALID_VEHICLE_ID;
		    time_registr_race_lv = 0;
	    	time_race_lv = 0;
      		race_lv_start = 0;
	    	open_race_lv = 0;
	    	race_lead_lv = 0;
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Безумные гонки успешно завершены");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin]) continue;
				if(player_to_race_lv[i] == 1) Race_End(i);
			}
		}
	}
    if(open_race_lv != 0 && time_registr_race_lv != 0) {
		time_registr_race_lv --;
		if(time_registr_race_lv == 300) SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" До конца регистрации на Безумные гонки осталось 5 мин. (/gps > Общественные места > Центр развлечений)");
		if(time_registr_race_lv == 120) {
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" До конца регистрации на Безумные гонки осталось 2 мин. (/gps > Общественные места > Центр развлечений)");
			game_players[0] = 25-players_in_race_lv;
			new string[144];
			format(string,sizeof(string),"{cec710}[Центр развлечений]"W" Свободных мест на безумных гонках: "P"%d"W". Используйте "P"/game 0"W" для телепорта",game_players[0]);
			SendClientMessageToAll(COLOR_GREY, string);
		}
		if(time_registr_race_lv == 20) game_players[0] = 0;
		if(time_registr_race_lv < 10) {
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin]) continue;
		    	if(player_to_race_lv[i] == 1) {
				    new str[24];
				    format(str, sizeof(str), "~r~%d",time_registr_race_lv);
				    GameTextForPlayer(i, str, 500, 3);
				}
			}
		}
	}
    if(open_race_lv == 1 && time_registr_race_lv == 9) {
	    if(players_in_race_lv < 3) {
		    random_car_race_lv = INVALID_VEHICLE_ID;
		    time_registr_race_lv = 0;
	    	time_race_lv = 0;
      		race_lv_start = 0;
	    	open_race_lv = 0;
	    	race_lead_lv = 0;
			money_in_race_lv = 0;
			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_race_lv);
			UpdateDynamic3DTextLabelText(gamerace_text,-1,string);
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Безумные Гонки были отменены. Недостаточное количество участников");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin]) continue;
				if(player_to_race_lv[i] == 1) player_to_race_lv[i] = 0;
				if(TI[i][tCashRace]) GiveMoney(i,TI[i][tCashRace],"возвращение взноса безумных гонок"),TI[i][tCashRace] = 0;
			}
		}
	    open_race_lv = 3;
	    new random_car = random(sizeof car_id_race_lv);
	    random_car_race_lv = car_id_race_lv[random_car];
	    foreach(new i:Player) {
	    	if(!TI[i][tLogin]) continue;
	    	if(player_to_race_lv[i] == 1) {
	    	    SendOk(i, "До старта гонки 10 секунд");
				switch(race_type) {
					case 0: {
						player_car_race_lv_id[i] = A_CreateVehicle(random_car_race_lv,
						spawns_car_race_sity[player_to_race_lv_id[i]-1][0],spawns_car_race_sity[player_to_race_lv_id[i]-1][1],
						spawns_car_race_sity[player_to_race_lv_id[i]-1][2], spawns_car_race_sity[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],0);
						SetPlayerInterior(i,0);
					}
					case 1: {
						player_car_race_lv_id[i] = A_CreateVehicle(568,
						spawns_car_race_desert[player_to_race_lv_id[i]-1][0],spawns_car_race_desert[player_to_race_lv_id[i]-1][1],
						spawns_car_race_desert[player_to_race_lv_id[i]-1][2], spawns_car_race_desert[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],0);
						SetPlayerInterior(i,0);
					}
					case 2: {
						player_car_race_lv_id[i] = A_CreateVehicle(571,
						spawns_car_race_kart[player_to_race_lv_id[i]-1][0],spawns_car_race_kart[player_to_race_lv_id[i]-1][1],
						spawns_car_race_kart[player_to_race_lv_id[i]-1][2], spawns_car_race_kart[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],7);
						SetPlayerInterior(i,7);
					}
				}
				SetPlayerVirtualWorld(i,300);
				SetVehicleVirtualWorld(player_car_race_lv_id[i], 300);
                PutPlayerInVehicle(i, player_car_race_lv_id[i], 0);
				SetVehicleParamsEx(player_car_race_lv_id[i],true,false,false,false,false,false,false);
				SetVehicleHealth(player_car_race_lv_id[i],3000.0);
				VehicleInfo[player_car_race_lv_id[i]][vFuel] = 100.0;
                SetPlayerHealth(i,100);
                TogglePlayerControllable(i, 0);
                for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
				new string[24];
				format(string,sizeof(string),"$%d",money_in_race_lv);
				TextDrawSetString(td_game[5], string);
			}
		}
	}
	if(open_race_lv == 3 && time_registr_race_lv == 1) {
	    time_registr_race_lv = 0;
	    open_race_lv = 0;
	    SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Безумные Гонки начались!");
	    foreach(new i:Player)  {
	    	if(!TI[i][tLogin]) continue;
	    	if(player_to_race_lv[i] == 1) {
	    	    GameTextForPlayer(i, "~g~GO-GO-GO", 1000, 3);
                TogglePlayerControllable(i, 1);
				if(TI[i][tCashRace]) TI[i][tCashRace] = 0;
                time_race_lv = 0;
                race_lv_start = 1;
                SetPVarInt(i,"RaceCP",1);
				SetNextRaceCP(i,race_type);
			}
		}
	}
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if(((hour == 7 && minuite == 05 || hour == 9 && minuite == 05  || hour == 11 && minuite == 05  || hour == 13 && minuite == 05 || hour == 15 && minuite == 05 || hour == 17 && minuite == 05 || hour == 19 && minuite == 05 || hour == 21 && minuite == 05|| hour == 23 && minuite == 05) && open_race_lv == 0) || open_race_lv == 999)  {
		new str[3][11] = {"Городская","Бездорожье","Картинг"};
		race_type = random(sizeof(str));
		new string[128];
		format(string,sizeof string,"{cec710}[Центр развлечений]"W" Внимание! Открыта регистрация на Безумные Гонки. Трасса: %s",str[race_type]);
        SendClientMessageToAll(COLOR_GREY, string);
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" У вас есть 10 минут для прохождения регистрации. (/gps > Общественные места > Центр развлечений)");
        time_registr_race_lv = 600;// время на регистрацию изменить после тестов на 600 (10 минут)
        money_in_race_lv = 0;
        players_in_race_lv = 0;
        open_race_lv = 1;
        time_race_lv = 0;
        race_lv_start = 0;
        race_lead_lv = 0;
        game_players[0] = 0;

		format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_race_lv);
		UpdateDynamic3DTextLabelText(gamerace_text,-1,string);
	}
	return 1;
}
stock Convertss(number) {
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}
stock GetCoordDoorVehicle(vehicleid, &Float:x, &Float:y, &Float:z) // угон
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);  
    distance = distance/2 + 0.1; 
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle); 
    x -= (distance * floatsin(-angle+89, degrees)); 
    y -= (distance * floatcos(-angle+89, degrees)); 
    return 1;
}  
stock GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x -= (distance * floatsin(-angle+180, degrees));
	y -= (distance * floatcos(-angle+180, degrees));
	return true;
}
stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180, degrees));
	y += (distance * floatcos(-angle+180, degrees));
	return true;
}
golod_game() {
    if(golod_start != 0) {
		time_golod++;
		new string[24];
		format(string,sizeof(string),"%s",Convert(900-time_golod));
        TextDrawSetString(td_game[4], string);
        if(time_golod >= 15) {
        	for(new i; i != 21; i++) {
        		if(objgolod[i] == -1 && pickups_game_golod_2[i] == -1) {
        			golod_object(i);
        		}
        	}
        }
        new ids = 0;
	 	foreach(new i:Player) {
	 		if(!TI[i][tLogin]) continue;
			if(player_to_golod[i] == 1) ids++;
			if(ids == 1 && players_in_golod == 1) {
				golod_end(i);
				SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Голодные игры успешно завершены");
				new strings[128];
				format(strings,sizeof(strings),"{cec710}[Центр развлечений]"W" Победителем голодных игр становится "W"%s{00FF00}.",player_name[i]);
				SendClientMessageToAll(COLOR_GREY, strings);
				format(strings,sizeof(strings),"{cec710}[Центр развлечений]"W" Его приз : "ORANGE"$%d",money_in_golod);
				SendClientMessageToAll(COLOR_GREY, strings);

				if(PI[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(i,money_in_golod*BonusInfo[act_mp],"победа в голодных играх");
				else if(BonusInfo[act_select] == 2) GiveMoney(i,money_in_golod*BonusInfo[act_mp],"победа в голодных играх");
			    else GiveMoney(i,money_in_golod,"победа в голодных играх");

				golod_gameover();
				return 1;
			}
		}
        if(time_golod == 900) {
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin]) continue;
				if(player_to_golod[i] == 1) {
					SendOk(i,"На острове выживших оказалось несколько, приз не достается никому");
					golod_end(i);
				    golod_gameover();
				    SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Голодные игры успешно завершены");
				}
			}
		}
	}
    if(time_gamegolod != 0) {
		time_gamegolod --;
		if(time_gamegolod == 300) SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" До конца регистрации на Голодные игры осталось 5 мин. (/gps > Общественные места > Центр развлечений)");
		if(time_gamegolod == 120) {
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" До конца регистрации на Голодные игры осталось 2 мин. (/gps > Общественные места > Центр развлечений)");
			game_players[1] =  21-players_in_golod;
			new string[144];
			format(string,sizeof(string),"{cec710}[Центр развлечений]"W" Свободных мест на голодных играх: "P"%d"W". Используйте "P"/game 1"W" для телепорта",game_players[1]);
			SendClientMessageToAll(COLOR_GREY, string);
		}
		if(time_gamegolod == 20) game_players[1] = 0;
		if(time_gamegolod < 10) {
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin]) continue;
		    	if(player_to_golod[i]) {
		    		TogglePlayerControllable(i, true);
				    new str[24];
				    format(str, sizeof(str), "~r~%d",time_gamegolod);
				    GameTextForPlayer(i, str, 500, 3);
				}
			}
		}
	}
    if((open_gamegolod == 1 && time_gamegolod == 10) || (open_gamegolod == 1 && players_in_golod == 21)) {
    	time_gamegolod = 10;
	    if(players_in_golod < 3) {
		    golod_gameover();
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Голодные игры были отменены. Недостаточное количество участников");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin]) continue;
				if(player_to_golod[i] == 1) player_to_golod[i] = 0;
				if(TI[i][tCashRace]) GiveMoney(i,TI[i][tCashRace],"возвращение взноса голодные игры"),TI[i][tCashRace] = 0;
			}
		}
	    open_gamegolod = 3;
	    if((open_gamegolod == 3 && time_gamegolod == 10)) {
	    	new picks = -1;
	    	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Голодные игры начались");
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin]) continue;
		    	if(player_to_golod[i] == 1) {
		    		if(TI[i][tAFK] >= 4) {
		    			PlayerSpawn(i);
		    			ErrorMessage(i,"Вы были исключены из игры по причине - АФК");
		    		}
				    open_gamegolod = 0;
					if(TI[i][tCashRace]) TI[i][tCashRace] = 0;
	                time_golod = 0;
	                golod_start = 1;
		    	    SendOk(i, "До старта игры 10 секунд, советуем не покидать место до начала игры");
					
					SetPlayerColor(i,0x56FB4EFF);
	                DelGun(i);
					SetPlayerPosAC(i,spawns_pos_golod[player_to_golod_id[i]-1][0],spawns_pos_golod[player_to_golod_id[i]-1][1],spawns_pos_golod[player_to_golod_id[i]-1][2],202,0);
					SetCameraBehindPlayer(i);
					SetPlayerHealth(i, 50);
					SetPlayerArmour(i, 0);
					TogglePlayerControllable(i, false);
					picks++;

					pickups_game_golod[picks] = CreateDynamicPickup(11745,23,pickup_game_golod[player_to_golod_id[i]-1][0],pickup_game_golod[player_to_golod_id[i]-1][1],pickup_game_golod[player_to_golod_id[i]-1][2],-1,-1);

	                for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
					new string[24];
					format(string,sizeof(string),"$%d",money_in_golod);
					TextDrawSetString(td_game[5], string);
				}
			}
		}
	}
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if(((hour == 12 && minuite == 30 || hour == 18 && minuite == 30  || hour == 21 && minuite == 30) && open_gamegolod == 0) || open_gamegolod == 999) {
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" Внимание! Открыта регистрация на Голодные Игры");
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр развлечений]"W" У вас есть 10 минут для прохождения регистрации. (/gps > Общественные места > Центр развлечений)");
        time_gamegolod = 600;// время на регистрацию изменить после тестов на 600 (10 минут)
        money_in_golod = 0;
        players_in_golod = 0;
        open_gamegolod = 1;
        time_golod = 0;
        golod_start = 0;
        game_players[1] = 0;
        new string[70];
		format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_golod);
		UpdateDynamic3DTextLabelText(golod_text,-1,string);
	}
	return 1;
}
stock golod_end(playerid) {
	if(player_to_golod[playerid] == 1) {
		player_to_golod[playerid] = 0;
		for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		SetPlayerArmour(playerid, 0);
		DelGun(playerid);

		if(PI[playerid][pMember] && start_work[playerid]) {
			SetPlayerColor(playerid,gFractionSpawn[PI[playerid][pMember]][fracColor]);
		}
		else SetPlayerColor(playerid,0xFFFFFF11);
	}
}
stock golod_gameover() {
	UpdateDynamic3DTextLabelText(golod_text,-1,"Общий взнос: "O"$0");
    time_gamegolod = 0;
    time_golod = 0;
    golod_start = 0;
    open_gamegolod = 0;
    players_in_golod = 0;
    money_in_golod = 0;
	for(new i; i != 21; i++) {
		if(pickups_game_golod[i] != -1) {
			DestroyDynamicPickup(pickups_game_golod[i]);
			pickups_game_golod[i] = -1;
		}
		if(pickups_game_golod_2[i] != -1) {
			DestroyDynamicPickup(pickups_game_golod_2[i]);
			pickups_game_golod_2[i] = -1;
		}
		if(objgolod[i] != -1) {
			DestroyDynamicObject(objgolod[i]);
			objgolod[i] = -1;
		}
	}
}
stock golod_deatch(playerid,ids) {
	player_to_golod[playerid] = 0;
	for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
	new string[144];
	format(string, sizeof(string), ""NO"[ВНИМАНИЕ]"W" Игрок - "ORANGE"%s"W" погибает. Осталось в живых: "ORANGE"%d",player_name[playerid],ids);
	foreach(new i:Player) {
		if(!TI[i][tLogin]) continue;
		if(!golod_start) continue;
		if(!player_to_golod[i]) continue;
		SendClientMessage(i,-1,string);
	}
}
stock golod_object(i) {
	objgolod[i] =  ( pickup_game_obj[i][0], pickup_game_obj[i][1], pickup_game_obj[i][2], pickup_game_obj[i][3], pickup_game_obj[i][4], pickup_game_obj[i][5], -1, -1, -1, 300, 300);
	MoveDynamicObject(objgolod[i], pickup_game_objmoved[i][0], pickup_game_objmoved[i][1], pickup_game_objmoved[i][2], pickup_game_objmoved[i][3],0.0000,0.0000,0.0000);
}
stock save_diplomation(playerid,frac) {
	new query[90];
	mysql_format(connects, query, sizeof(query), "UPDATE `diplomation` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` =  '%d' LIMIT 1",
	f_diplomacy[PI[playerid][pMember] - 15][0], f_diplomacy[PI[playerid][pMember] - 15][1],
	f_diplomacy[PI[playerid][pMember] - 15][2], f_diplomacy[PI[playerid][pMember] - 15][3],
	f_diplomacy[PI[playerid][pMember] - 15][4], f_diplomacy[PI[playerid][pMember] - 15][5],
	f_diplomacy[PI[playerid][pMember] - 15][6], f_diplomacy[PI[playerid][pMember] - 15][7],frac);
	mysql_tquery(connects, query, "", "");
}
stock dialog_diplom(playerid,bool:type) {
	static const f_str[][] = { 
		""G"Нейтралитет",
		""NO"Война",
		""GREEN"Союз",
		""P"Запрос на союз",
		""P"Запрос на союз"
	};
	new pvar_string[8], step;
	new string[310];
	for(new i = 0 ; i < 8; i ++) {
		if(i + 15 == PI[playerid][pMember]) continue;
		
		format(pvar_string, 8, "d_%d", step);
		SetPVarInt(playerid, pvar_string, i + 15);
		
		strcat(string, "{");
		strcat(string, GetColorFrac(i + 15));
		strcat(string, "}");
		strcat(string, FI[i + 15][fName]);
		strcat(string, "\t");
		strcat(string, f_str[f_diplomacy[PI[playerid][pMember] - 15][i]]);
		strcat(string, "\n");
		step++;
	}
	if(type == true) D(playerid, D_DIPLOMATION, DIALOG_STYLE_TABLIST, ""P"Дипломатия", string, "Выбрать", "Отмена");
	else D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""P"Дипломатия", string, "Закрыть", "");
	return 1;
}
CB: joblist_callback(playerid, targetid) {
	new rows = cache_num_rows(),fields = 0;
	if(rows) {
		new string[3000];
		if(rows > 15) fields = rows - 15;
		format(string, 82, "Дата приёма\tДата увольнения\tРанг\t\tОрганизация\tВыговоры\tПричина\n");
		for(new i = fields; i < rows; i++) {
			new ji_dateinvite[16],
				ji_dateuninvite[16],
				ji_reason[48],
				ji_fraction,
				ji_warnings,
				ji_rang;

			new str[16 + 16 + 48 + 32 + 24];
			cache_get_value_name_int(i, "ji_fraction", ji_fraction);
			cache_get_value_name_int(i, "ji_warnings", ji_warnings);
			cache_get_value_name_int(i, "ji_rang", ji_rang);

			cache_get_value_name(i, "ji_date_invite", ji_dateinvite, 16);
			cache_get_value_name(i, "ji_date_uninvite", ji_dateuninvite, 16);
			cache_get_value_name(i, "ji_reason", ji_reason, 48);
			
			format(str, sizeof(str), ""W"%s\t%s\t\t%s(%d)\t%s\t%d\t\t%s\n",
															ji_dateinvite,
															ji_dateuninvite,
															GetRankName(ji_fraction,ji_rang),
															ji_rang,
															FI[ji_fraction][fName],
															ji_warnings,
															ji_reason);
			strcat(string, str);
		}
		D(targetid, DIALOG_NONE, DSM, ""P"Трудовая книжка", string, "Закрыть", "");
	}
	else return ErrorMessage(playerid, "Записи в трудовой книжке отсутствуют");
	return 1 ;
}
stock add_jobinfo(playerid,const string[])
{
	new query[1024];
	format(query, sizeof(query), "\
		INSERT INTO `jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_warnings`,`ji_rang`) \
		SELECT `pID`, `fraction_date`, NOW(), '%s','%d','%d','%d' FROM `accounts` WHERE `Name` = '%s'",string, PI[playerid][pMember], PI[playerid][pfWarn],PI[playerid][pRank],
		GetName(playerid));
		
	mysql_tquery(connects, query, "", "" ) ;
}
stock off_add_jobinfo(const name[],const string[]) {
	new strings[200], query[1024];
	format(strings, sizeof(strings), "SELECT `pID`,`Name`,`pMember`,`pRank`,`fwarn` FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	new Nick[32],member,warn,rank;
	if(rows)
	{
		cache_get_value_name(0, "Name",Nick);
		cache_get_value_name_int(0, "pMember",member);
		cache_get_value_name_int(0, "pRank",rank);
		cache_get_value_name_int(0, "fwarn",warn);
	}
    cache_delete(result);

	format(query, sizeof(query), "\
		INSERT INTO `jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_warnings`,`ji_rang`) \
		SELECT `pID`, `fraction_date`, NOW(), '%s','%d','%d','%d' FROM `accounts` WHERE `Name` = '%s'",string, member, warn,rank, Nick);
		
	mysql_tquery(connects, query, "", "" ) ;
	return 1;
}
stock add_datefrac(playerid) {
	new query[100];
	format(query,sizeof(query),"UPDATE `accounts` SET `fraction_date` = NOW() WHERE `Name` = '%s' LIMIT 1",PI[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
}
stock IsValidVehicleModel(modelid) { // Проверка на существующую модель транспорта
	if(modelid >= 400 && modelid <= 20000) {
		return true;
	}
	return false;
}
SetVehicleSpeed(vehicleid, Float:speed) {
    if(speed <= 0) return true;
    new Float: speed_X, Float: speed_Y, Float: speed_Z;
    GetVehicleVelocity(vehicleid, speed_X, speed_Y, speed_Z);
  
    new Float:test = floatsqroot(floatadd(floatadd(floatpower(speed_X, 2), floatpower(speed_Y, 2)),  floatpower(speed_Z, 2))) * 100.3;
    new Float:dif =  speed / test;
        
    if(dif != 0 && test != 0) SetVehicleVelocity(vehicleid, speed_X*dif, speed_Y*dif, speed_Z);
    return true;
}
stock perfomans_engine(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	new string[750];
	new str[100];

	new price[5],seller[5];

	for(new i; i < 5; i++) {
		if(VehicleInfo[vehicleid][vPEngine][i]) format(str,sizeof(str), ""W"%s "P"[+ %.1f %s]\t"GREEN"Установлено\n", engine_name[i],engine_name_boost[i],"%");
		else {
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				seller[i] = floatround(engine_name_price[i]/100*vip_status[PI[playerid][pVips]][vip_perfonans]);
				price[i] = (engine_name_price[i]-seller[i]);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[i] = floatround(engine_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (engine_name_price[i]-seller[i]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[i] = floatround(engine_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (engine_name_price[i]-seller[i]);
				}
			    else price[i] = engine_name_price[i];
			}
		    format(str, sizeof(str), ""G"%s "P"[+ %.1f %s]\t"ORANGE"$%d\n", engine_name[i],engine_name_boost[i],"%", price[i]);
		}
		strcat(string, str);
	}
	D(playerid, D_PERF_ENGINE, DIALOG_STYLE_TABLIST, ""P"Улучшение двигателя", string, "Купить", "Назад");
}
stock perfomans_brake(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	new string[700];
	new str[100];

	new price[5],seller[5];

	for(new i; i < 5; i ++) {
		if(VehicleInfo[vehicleid][vPBrake][i]) format(str, sizeof(str), ""W"%s "P"[+ %.1f %s]\t"GREEN"Установлено\n", brake_name[i],brake_name_boost[i],"%");
		else {
			if(PI[playerid][pVips] == VIP_PLATINA || PI[playerid][pVips] == VIP_ECSCLUSIVE || PI[playerid][pVips] == VIP_FOREVER) {
				seller[i] = floatround(brake_name_price[i]/100*vip_status[PI[playerid][pVips]][vip_perfonans]);
				price[i] = (brake_name_price[i]-seller[i]);
			}
			else {
				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[i] = floatround(brake_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (brake_name_price[i]-seller[i]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[i] = floatround(brake_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (brake_name_price[i]-seller[i]);
				}
			    else price[i] = brake_name_price[i];
			}
		    format(str, sizeof(str), ""G"%s "P"[+ %.1f %s]\t"ORANGE"$%d\n", brake_name[i],brake_name_boost[i],"%", price[i]);
		}
		strcat(string, str);
	}		
	D(playerid, D_PERF_BRAKE, DIALOG_STYLE_TABLIST, ""P"Тормозная система", string, "Купить", "Назад");
}
stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz) {
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz);
	rx = asin(2*qy*qz-2*qx*qw ) ;
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy);
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz);
}
stock RemovePlayerFromVehicleAC(playerid) {
	RemovePlayerFromVehicle(playerid);
	//SetTimerEx("remove_kick", 1200, 0, "d",playerid);
	return true;
}
/*CB: remove_kick(playerid) {
	if(PI[playerid][pAdmin] == 0 && GetPlayerState(playerid) == 2) {
		new string[144];
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вы были кикнуты по подозрению в читерстве: #NOP VEHICLE");

		format(string, sizeof(string), "[ANTICHEAT] %s был кикнут #NOP VEHICLE", player_name[playerid]);
		AdmMSG(COLOR_GREY, string,2);
        Kick(playerid);
	}
}*/
DamageActive(playerid) {
	if(PI[playerid][pSettings][10]) return true;
	return false;
}
PlayerSpectate(playerid) {
	return TI[playerid][tSpectr];
}
public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart) {
	if(issuerid != INVALID_PLAYER_ID) {
		if(0 <= weapon <= 46 && playerid != INVALID_PLAYER_ID) {
			if(TI[issuerid][tAFK] >= 3 || PI[issuerid][pJailTime]) return false;
			else if(player_gm{playerid}) return false;
			else if(weapon == 3 || (TI[issuerid][tTazers][0] > 0 && weapon == TI[issuerid][tTazers][1])) {
				if(!TI[playerid][tTazer] ) {
					if(IsACop(issuerid)) {
						if(TI[issuerid][tTazers][0] > 0 && weapon != 3) {
							TI[issuerid][tTazers][0]--;
							if(TI[issuerid][tTazers][0] == 0) {
								ErrorMessage(issuerid, "Парализующие боеприпасы закончены. Следующая зарядка через 2 минуты");
								SetPVarInt(issuerid ,"tazershoottime", unix + 60*2);
								TI[issuerid][tTazers][0] = 0;
								TI[issuerid][tTazers][1] = 0;
							}
						}
						switch(GetPlayerAnimationIndex(issuerid)) {
							case 17: SetTimerEx("UnTazer",5 * 1000, 0, "i", playerid);
							case 18: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
							case 19: SetTimerEx("UnTazer",15 * 1000, 0, "i", playerid);
							default: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
						}
						SendClientMessage(issuerid, COLOR_GREY, "Нажмите "P"N"G" около игрока чтобы сковать его");
						TI[playerid][tTazers][2] = issuerid;
						TI[issuerid][tTazers][2] = playerid;
						TI[playerid][tTazer] = true;
						TogglePlayerControllable(playerid,false);
						ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 0, 1);
						new string[60];
						format(string,sizeof(string),"оглушил(а) %s",player_name[playerid]);
						MeAction(issuerid,string);
						return false;
					}
				}
			}
			if(weapon != 43 && weapon != 9 && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_DRINK_SPRUNK && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(issuerid)!=SPECIAL_ACTION_DRINK_BEER) {
				if(!IsACop(issuerid) && !IsAArm(issuerid) && PI[issuerid][pMember] != fWHITEHOUSE && IsAGreenZone(issuerid)) {
					anti_dm{issuerid} ++;
					D(issuerid, DIALOG_NONE, DSM, ""P"Предупреждение","\n\n"W"В данном месте запрещено драться\n"NO"*"G" В случае повторных нарушений Вы будете кикнуты", "Закрыть", "" );
					if(anti_dm{issuerid} >= 5) {
						ErrorMessage(issuerid,"Вы были кикнуты за попытки DM в зеленой зоне");
						Kick(issuerid);
					}
					return false;
				}
				if(anti_tk) {
					if(PI[issuerid][pMember] == PI[playerid][pMember] && FI[PI[playerid][pMember]][fAntiTK] && TI[playerid][tDuel] == -1 && TI[issuerid][tDuel] == -1 && player_to_game[issuerid] == 0 && player_to_golod[issuerid] == 0 && TI[issuerid][tGunArea][0] == 0 && TI[issuerid][tDMArea][0] == 0) {
						ErrorMessage(issuerid,"Запрещено наносить урон членам своей организации");
						return false;
					}
				}
			}
		}
	}
	return true;
}
stock dialog_bonuses(playerid) {
	static const f_str[] = "Наименование\tФактор\n\
		"W"Ускоренная прокачка опыта\t"P"%d x\n\
		"W"Ускоренная прокачка скилла оружия\t"P"%d x\n\
		"W"Ускоренная прокачка скилла удара по груше\t"P"%d x\n\
		"W"Приз в мероприятиях развл. центра\t"P"%d x\n\
		"W"Создание оружия\t"P"%d x\n\
		"W"Повышенный улов рыбы\t"P"%d x\n\
		"W"Скидка на аренду номера в отеле\t"P"%d %%\n\
		"W"Скидка на покупку скина\t"P"%d %%\n\
		"W"Скидка на покупку транспорта\t"P"%d %%\n\
		"W"Скидка на аренду транспорта\t"P"%d %%\n\
		"W"Скидка на покупку лицензий\t"P"%d %%\n\
		"W"Скидка на покупку улучшений в дома\t"P"%d %%\n\
		"W"Скидка на лечение болезней\t"P"%d %%\n\
		"W"Скидка на смену пола в больнице\t"P"%d %%\n\
		"W"Скидка на получение мед. карты\t"P"%d %%\n\
		"W"Скидка на покупку номеров ТС\t"P"%d %%\n\
		"W"Скидка на улучшения в Perfomance Tune\t"P"%d %%\n\
		"W"Скидка на тюнинг в Автомастерской\t"P"%d %%\n\
		"W"Время для получения бонусного кейса\t"P"%d мин\n\
		"W"Промокод\t"P"%d x\n\
		"W"Pay Day (ЗП)\t"P"%d x\n\
		"W"Донат\t"P"%d x\n\
		\
	";
	new string[sizeof(f_str) + 50];
	format(string,sizeof(string),f_str,
		BonusInfo[act_exp],
		BonusInfo[act_skill],
		BonusInfo[act_sport],
		BonusInfo[act_mp],
		BonusInfo[act_gun],
		BonusInfo[act_fish],
		BonusInfo[act_renthotel],
		BonusInfo[act_buyskin],
		BonusInfo[act_buycar],
		BonusInfo[act_rentcar],
		BonusInfo[act_buylic],
		BonusInfo[act_buyimprove],
		BonusInfo[act_disease],
		BonusInfo[act_changesex],
		BonusInfo[act_medcard],
		BonusInfo[act_buynubmbercar],
		BonusInfo[act_perfomance],
		BonusInfo[act_tune],
		BonusInfo[act_timerullet],
		BonusInfo[act_promocode],
		BonusInfo[act_payday],
		BonusInfo[act_donate]);
	D(playerid, D_BONUSES, DSTH, ""P"Управление бонусами",string, "Изменить", "Закрыть");
	return 1;
}
stock accs_select(playerid, id) {
	if(GetPVarInt(playerid,"buy_accses")) {
		new price;
		switch(type_acces[playerid]) {
			case 1: {
				new max_accs = sizeof(acces_id_glass)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_glass[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_glass[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_glass[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 2: {
				new max_accs = sizeof(acces_id_hat)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_hat[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_hat[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_hat[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 3: {
				new max_accs = sizeof(acces_id_bonnet)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_bonnet[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_bonnet[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_bonnet[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 4: {
				new max_accs = sizeof(acces_id_cap)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_cap[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_cap[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_cap[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 5: {
				new max_accs = sizeof(acces_id_beret)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_beret[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_beret[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_beret[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 6: {
				new max_accs = sizeof(acces_id_bandanas)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_bandanas[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_bandanas[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_bandanas[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 7: {
				new max_accs = sizeof(acces_id_panam)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_panam[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_panam[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_panam[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 8: {
				new max_accs = sizeof(acces_id_sporthat)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_sporthat[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_sporthat[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_sporthat[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 9: {
				new max_accs = sizeof(acces_id_kask)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_kask[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_kask[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_kask[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 10: {
				new max_accs = sizeof(acces_id_mask)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_mask[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_mask[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_mask[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 11: {
				new max_accs = sizeof(acces_id_headphones)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_headphones[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_headphones[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_headphones[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 12: {
				new max_accs = sizeof(acces_id_watch)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_watch[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_watch[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_watch[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 13: {
				new max_accs = sizeof(acces_id_backpack)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_backpack[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_backpack[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_backpack[GetPVarInt(playerid,"acs_select")][0]);
			}
		}
   		SetPVarInt(playerid, "price_acs", price);
		new string[12];
		format(string,sizeof(string),"$%d",price);
		PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
	}
 	return 1;
}
stock accs_close(playerid) {
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	InterpolateCameraPos(playerid,x,y,z,212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234,1200);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,212.5107,-41.5253,1002.0234,1200);
	buyacces(playerid);
	return 1;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle) {
	print ("[OnQueryError] SQL ERROR. QUERY:") ;
	return print ( query ) ;
}
stock reputation_family(family,point) {
	gFamily[family][famExp] += point;
	if(gFamily[family][famExp] < 0) gFamily[family][famExp] = 0;
	if(gFamily[family][famExp] >= fam_point_upgrade[gFamily[family][famLvl]-1]) {
		gFamily[family][famLvl]++;
		gFamily[family][famExp] = 0;
		UpdateFamily(family+1,"lvl",gFamily[family][famLvl]);
	}
	gFamily[family][famPoint] += point;
	if(gFamily[family][famPoint] < 0) gFamily[family][famPoint] = 0;
	UpdateFamily(family+1,"point",gFamily[family][famPoint]);
	UpdateFamily(family+1,"exp",gFamily[family][famExp]);
}
stock SetPlayerPosAC(playerid, Float:x, Float:y, Float:z, world, interior, setUP = false) {
    if(playerid != INVALID_PLAYER_ID) {
        if(!setUP) {
            if(TI[playerid][tVirtualWorld] != world) {
                TI[playerid][tVirtualWorld] = world;
                SetPlayerVirtualWorld(playerid, world);
            }
            if(TI[playerid][tInterior] != interior) {
                TI[playerid][tInterior] = interior;
                SetPlayerInterior(playerid, interior);
                //
                if(!interior) SetPlayerTime(playerid,tmphour, tmpminute);
                else SetPlayerTime(playerid,11, 00);
            }
        }
        else {
            SetPlayerVirtualWorld(playerid, world);
            SetPlayerInterior(playerid, interior);
            //
            if(!interior) SetPlayerTime(playerid,tmphour, tmpminute);
            else SetPlayerTime(playerid,11, 00);
        }
        //
        SetPlayerPos(playerid, x, y, z);
    }
}
stock auto_news(slot,playerid) {
	format(gAdvert[slot][adSender],24,"%s",player_name[playerid]);
	gAdvert[slot][adID] = playerid;
	gAdvert[slot][adPhone] = PI[playerid][pPhone];
	gAdvert[slot][adBusy] = true;
	gAdvert[slot][adTime] = gAdvertTime;
	gAdvertTime += 30;

	SetString(gAdvert[slot][adCheker],BotName);
	
	gAdvert[slot][adCheking] = false;
	gAdvert[slot][adCheked] = true;

	SendOk(playerid,"Объявление подано в редакцию. Ожидайте публикации");
}

stock Float:GetSpeed(Float:x = 0.0, Float:y = 0.0, Float:z = 0.0) {             // Скорость
	return floatsqroot((x * x) + (y * y) + (z * z)) * 100.0;
}
stock SearchIndex(index, ...) {                                                 // Поиск нужного значения
	for(new id = (numargs() - 1); id >= 1; --id) {
		if(index == getarg(id)) {
            return true;
		}
	}
    return false;
}
CB: StartDrawing(playerid) {
	SendOk(playerid,"Вы начали рисовать граффити");
	SetPVarInt(playerid, "SettingGraffiti", 1);
	graf_timer[playerid] = SetTimerEx("graffity", 5000, 0, "i", playerid);
	return 1;
}
GraffitiDone(playerid) {
	if(!GetPVarInt(playerid, "SettingGraffiti")) return 1;
	new obj;
	switch(PI[playerid][pMember]) {
	//	case 0: obj = 18666;
	//	case 20: obj = 18659;
	//	case 21: obj = 18661;
	//	case 22: obj = 18663;
	//	case 18: obj = 18664;
	//	case 19: obj = 18665;//вагос
	}
	DestroyDynamicObject(GrafInfo[GetPVarInt(playerid,"Grafity")][gObject]);
	GrafInfo[GetPVarInt(playerid,"Grafity")][gObject] = CreateDynamicObject(obj, GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][0], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][1], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][2], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][3], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][4], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][5]);
	GrafInfo[GetPVarInt(playerid,"Grafity")][gFrak] = PI[playerid][pMember];

	if(GetPVarInt(playerid, "SettingGraffiti") == 1) DeletePVar(playerid, "SettingGraffiti");
	GameTextForPlayer(playerid,"~g~GOOD", 1000, 5);
	Streamer_Update(playerid);
	new query[128];
	format(query,sizeof(query),"UPDATE `graffity` SET `gGang` = '%d' WHERE `gID` = '%d'",PI[playerid][pMember],GetPVarInt(playerid,"Grafity"));
	mysql_tquery(connects, query);
	if(PI[playerid][pMember]) add_gang_points(PI[playerid][pMember],1);
	return 1;
}

GraffitiFailed(playerid) {
	if(GetPVarInt(playerid, "SettingGraffiti") == 1) {
		DeletePVar(playerid, "SettingGraffiti");
	}
	GameTextForPlayer(playerid,"~r~FAILED", 1000, 5);
	return 1;
}
CB: graffity(playerid) {
	GraffitiDone(playerid);
	return 1;
}
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z) {
	if(IsValidDynamicObject(objectid)) {
		switch(Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_MODEL_ID)) {                                                     
			case 1551,1664: //1664 еще ид бутылки            
			{   
				new skills;
				new vipskills;

				if(PI[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) skills = BonusInfo[act_skill],vipskills = BonusInfo[act_skill] + 1;
				else if(BonusInfo[act_select] == 2) skills = BonusInfo[act_skill],vipskills = BonusInfo[act_skill] + 1;
			    else skills = 1,vipskills = 2;
				switch(weaponid) {
					case 23: {
						SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
						if(GetPVarInt(playerid, "SkillSD") >= Ammo_SDPISTOL && PI[playerid][pGunSkill][0] < 100) {
							if(PI[playerid][pVips]) PI[playerid][pGunSkill][0]+=vipskills; 
							else PI[playerid][pGunSkill][0] += skills; 
							SetPVarInt(playerid, "SkillSD",0);
							texdraw_skill(playerid,0);
						}
					}
					case 24: {
						SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
						if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PI[playerid][pGunSkill][1] < 100) {
							if(PI[playerid][pVips]) PI[playerid][pGunSkill][1]+=vipskills; 
							else PI[playerid][pGunSkill][1] += skills; 
							SetPVarInt(playerid, "SkillD",0);
							texdraw_skill(playerid,1);
						}
					}
					case 25: {
						SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
						if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PI[playerid][pGunSkill][2] < 100) {
							if(PI[playerid][pVips]) PI[playerid][pGunSkill][2]+=vipskills; 
							else PI[playerid][pGunSkill][2] += skills;
							SetPVarInt(playerid, "SkillShot",0);
							texdraw_skill(playerid,2);
						}
					}
					case 29: {
						SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
						if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PI[playerid][pGunSkill][3] < 100) {
							if(PI[playerid][pVips]) PI[playerid][pGunSkill][3]+=vipskills; 
							else PI[playerid][pGunSkill][3] += skills;
							SetPVarInt(playerid, "SkillMP5",0);
							texdraw_skill(playerid,3);
						}
					}
					case 30: {
						SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
						if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PI[playerid][pGunSkill][4] < 100) {
							if(PI[playerid][pVips]) PI[playerid][pGunSkill][4]+=vipskills; 
							else PI[playerid][pGunSkill][4] += skills;
							SetPVarInt(playerid, "SkillAk47",0);
							texdraw_skill(playerid,4);
						}
					}
					case 31: {
						SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
						if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PI[playerid][pGunSkill][5] < 100) {
							if(PI[playerid][pVips]) PI[playerid][pGunSkill][5]+=vipskills;
							else PI[playerid][pGunSkill][5] += skills;
							SetPVarInt(playerid, "SkillM4",0);
							texdraw_skill(playerid,5);
						}
					}
				}
				SetPlayerSkills(playerid);
				DestroyDynamicObject(objectid);//Удаляем объект	
				ShootingCount[playerid]--;
				new mapshooting, maxbox,boxobjid;
				switch(GetPVarInt(playerid,"shootingpl")) {
					case 67: mapshooting = 0, maxbox = 4,boxobjid = 0; 
					case 68: mapshooting = 1, maxbox = 8,boxobjid = 0;   //аммо лс
					case 69: mapshooting = 2, maxbox = 8,boxobjid = 1;   //аммо сф
					case 70: mapshooting = 3, maxbox = 8, boxobjid = 5;  //аммо лв
					case 71: mapshooting = 4, maxbox = 8, boxobjid = 4;  
					case 72: mapshooting = 5, maxbox = 8, boxobjid = 4;  
					case 73: mapshooting = 6, maxbox = 8, boxobjid = 4;  // грув
					case 74: mapshooting = 7, maxbox = 8, boxobjid = 4;  // вагос
					case 75: mapshooting = 8, maxbox = 8, boxobjid = 4;  // рифа
					case 76: mapshooting = 9, maxbox = 8, boxobjid = 2;  // lspd
					case 77: mapshooting = 10, maxbox = 8, boxobjid = 2;  // sfpd
					case 78: mapshooting = 11, maxbox = 8, boxobjid = 2;  // lva
				}
				if(ShootingCount[playerid] == 0) {
					ShootingCount[playerid] = 2;
					new Float:X,Float:Y,Float:Z;
					for(new i = 0; i < maxbox; i++){
						if(BoxPlayerID[mapshooting][i] == playerid) { 	
							GetDynamicObjectPos(BoxObject[boxobjid][i],X,Y,Z);
							break;	
						}
					}
				//	BottleObject[playerid][0] = CreateDynamicObject(1551, X+0.177886,Y+0.056518,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
				//	BottleObject[playerid][1] = CreateDynamicObject(1551, X+0.177856,Y+0.24109,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
					Streamer_Update(playerid);
				}     
			}                                                 
		}    
	}
    return true;    
}
stock IsPlayerShootingBox(playerid, fractionid, pickid)
{
	if(PI[playerid][pMember] != fractionid) //return ErrorMessage(playerid,"Данный тир Вам недоступен");
	{
	    new tirstr[1024];
	    format(tirstr, sizeof(tirstr), "Данный тир доступен только для фракции: %s[%d]", FI[fractionid][fName], fractionid);
	    ErrorMessage(playerid,tirstr);
	    return 1;
	}
	SetPVarInt(playerid, "shootingpl",pickid);
	
	if(!ShootingStart[playerid])
	{
		return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите начать тренировку?", "Да", "Нет");
	}
	else return D(playerid, D_AMMOSG, DSM, ""P"Тир",""W" Вы действительно хотите закончить тренировку?", "Да", "Нет");
} 
stock CreateShootingBox(playerid){
	new mapshooting, maxbox,boxobjid;
	switch(GetPVarInt(playerid,"shootingpl")) {
		case 67: {
			mapshooting = 0, maxbox = 4,boxobjid = 0; 
			ShootingArea[playerid] = CreateDynamicSphere(-1346.7603,355.8449,7.0743, 40.0, -1, -1, playerid);
		}
		case 68: mapshooting = 1, maxbox = 8,boxobjid = 1;   //аммо лс
		case 69: mapshooting = 2, maxbox = 8,boxobjid = 1;   //аммо сф
		case 70: mapshooting = 3, maxbox = 8, boxobjid = 5;  //аммо лв
		case 71: mapshooting = 4, maxbox = 8, boxobjid = 4;  
		case 72: mapshooting = 5, maxbox = 8, boxobjid = 4;  
		case 73: mapshooting = 6, maxbox = 8, boxobjid = 4;  // грув
		case 74: mapshooting = 7, maxbox = 8, boxobjid = 4;  // вагос
		case 75: mapshooting = 8, maxbox = 8, boxobjid = 4;  // рифа
		case 76: mapshooting = 9, maxbox = 8, boxobjid = 2;  // lspd
		case 77: mapshooting = 10, maxbox = 8, boxobjid = 2;  // sfpd
		case 78: mapshooting = 11, maxbox = 8, boxobjid = 2;  // lva
	}
	if(!ShootingStart[playerid]) {
		new boxid = -1;
		new string[30];

		for(new i = 0; i < maxbox; i++){
			if(!BoxStatus[mapshooting][i]) { 
				boxid = i;
				BoxStatus[mapshooting][i] = 1;
				BoxPlayerID[mapshooting][i] = playerid;
				break;
			}
		}
		if(boxid == -1) return ErrorMessage(playerid,"Увы, но все кабинки заняты");
		format(string, 30, "Займите кабинку №%i",boxid+1);
		SetPlayerAttachedObject(playerid, 7, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
		SendOk(playerid, string);
		new Float:X,Float:Y,Float:Z;
		GetDynamicObjectPos(BoxObject[boxobjid][boxid],X,Y,Z);	
		printf("%f %f %f", X,Y,Z);
	//	BottleObject[playerid][0] = CreateDynamicObject(1551, X+0.177886,Y+0.056518,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
	//	BottleObject[playerid][1] = CreateDynamicObject(1551, X+0.177856,Y+0.24109,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
		ShootingStart[playerid] = 1;
		ShootingCount[playerid] = 2;
		Streamer_Update(playerid);
	}
	else {
		RemovePlayerAttachedObject(playerid, 7);
		SendOk(playerid, "Вы закончили тренировку");
		for(new i = 0; i < 2; i++)  DestroyDynamicObject(BottleObject[playerid][i]);
		if(GetPVarInt(playerid,"shootingpl") == 67) DestroyDynamicArea(ShootingArea[playerid]);
		ShootingStart[playerid] = 0;
		ShootingCount[playerid] = 0;
		for(new i = 0; i < maxbox; i++){
			if(BoxPlayerID[mapshooting][i] == playerid) { 
				BoxStatus[mapshooting][i] = 0;
				BoxPlayerID[mapshooting][i] = -1;
				break;
			}
		}
	}
	return true;
}
stock ghetto_info(playerid) {
	new graff[5];
	for(new i; i<CountGraffity; i++) {
		if(GrafInfo[i][gFrak] == fBALLAS) graff[0]++;
		if(GrafInfo[i][gFrak] == fVAGOS) graff[1]++;
		if(GrafInfo[i][gFrak] == fGROVE) graff[2]++;
		if(GrafInfo[i][gFrak] == fAZTEC) graff[3]++;
		if(GrafInfo[i][gFrak] == fRIFA) graff[4]++;
	}
	/*static const f_str[] = "\t\t{8813E7}Ballas"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{DBD604}Vagos"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{009F00}Grove"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{01FCFF}Aztecas"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{83BFBF}Rifa"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							";
	new string[sizeof(f_str) + 40];
	format(string,sizeof(string),f_str,graff[0],FI[fBALLAS][fPoints],graff[1],FI[fVAGOS][fPoints],graff[2],FI[fGROVE][fPoints],graff[3],FI[fAZTEC][fPoints],graff[4],FI[fRIFA][fPoints]);
	D(playerid, DIALOG_NONE, DSM, ""P"Информация",string, "Закрыть", "");*/
	static const f_str[] = "\t\t{8813E7}Ballas"W"\n\
							Граффити: {8813E7}%d/120"W"\n\n\
							\t\t{DBD604}Vagos"W"\n\
							Граффити: {8813E7}%d/120"W"\n\n\
							\t\t{009F00}Grove"W"\n\
							Граффити: {8813E7}%d/120"W"\n\n\
							\t\t{01FCFF}Aztecas"W"\n\
							Граффити: {8813E7}%d/120"W"\n\n\
							\t\t{83BFBF}Rifa"W"\n\
							Граффити: {8813E7}%d/120"W"";
	new string[sizeof(f_str) + 40];
	format(string,sizeof(string),f_str,graff[0],graff[1],graff[2],graff[3],graff[4]);
	D(playerid, DIALOG_NONE, DSM, ""P"Информация",string, "Закрыть", "");
}
stock leave_robhouse(playerid) {
	if(rob_veh[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(rob_veh[playerid]);
		rob_veh[playerid] = INVALID_VEHICLE_ID;
	}
	if(IsValidDynamicPickup(RobPlayer[playerid][RobPickup])) {
		DestroyDynamicPickup(RobPlayer[playerid][RobPickup]);
		DestroyDynamicArea(RobPlayer[playerid][RobArea]);
		DestroyDynamic3DTextLabel(RobPlayer[playerid][RobText]);
	}
}
CB: OnPlayerUpdateLoadingMode(playerid) {
	if(TI[playerid][loadingMode]) return 1;
	if(!PI[playerid][pSettings][8]) {
		FreezePlayerForTime(playerid,3);
		return 1;
	}
	else {
		TI[playerid][loadingMode] = 1;
		TI[playerid][loadingModelPlayer] = 0;
		TogglePlayerControllable(playerid, 0);
		for(new i; i < 4; i ++) TextDrawShowForPlayer(playerid, LoadTextures[i]); // Показываем TextDraw'ы
		PlayerTextDrawShow(playerid, LoadTexturess[playerid]); // Показываем TextDraw'ы
	}
	return true;
}
stock duel_message(playerid,id) {
	if(DI[id][duel_create] == false) {
		static const f_str[] = ""P"№ Наименование\t"P"Значение\n\
							"P"1."W" Тип\t"GREEN"%s\n\
							"P"2."W" Раунды\t"GREEN"%d\n\
							"P"3."W" Взнос\t"ORANGE"$%d\n\
							"P"4."W" Оружие\t"GREEN"%s\n\
							"P"5."W" Доп. Оружие\t"GREEN"%s\n\
							"P"6."W" Карта\t"GREEN"%s\n\
							"P"8."W" Здоровье\t"GREEN"%d\n\
							"P"9."W" Броня\t"GREEN"%d\n\
							"P"10."W" Пароль лобби\t"GREEN"%s\n\
							"P"-"YELLOW" Создать лобби";
		new string[sizeof(f_str) + 100];
		new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
		new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
		new password_duel[12];
		if(!DI[id][duel_password]) password_duel = "Отсутствует";
		else format(password_duel,sizeof(password_duel),"%d",DI[id][duel_password]);
		format(string,sizeof(string),f_str,duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour],password_duel);
		D(playerid,D_DUEL_1,DSTH,""P"Дуэли | Создать лобби",string,"Выбрать","Отмена");
	}
	else {
		static const f_str[] = ""P"№ Наименование\t"P"Значение\n\
							"P"1."W" Тип\t"GREEN"%s\n\
							"P"2."W" Раунды\t"GREEN"%d\n\
							"P"3."W" Взнос\t"ORANGE"$%d\n\
							"P"4."W" Оружие\t"GREEN"%s\n\
							"P"5."W" Доп. Оружие\t"GREEN"%s\n\
							"P"6."W" Карта\t"GREEN"%s\n\
							"P"8."W" Здоровье\t"GREEN"%d\n\
							"P"9."W" Броня\t"GREEN"%d\n\
							"P"10."W" Пароль лобби\t"GREEN"%s\n\
							"P"-"NO" Удалить лобби";
		new string[sizeof(f_str) + 100];
		new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
		new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
		new password_duel[12];
		if(!DI[id][duel_password]) password_duel = "Отсутствует";
		else format(password_duel,sizeof(password_duel),"%d",DI[id][duel_password]);
		format(string,sizeof(string),f_str,duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour],password_duel);
		D(playerid,D_DUEL_1,DSTH,""P"Дуэли | Создать лобби",string,"Выбрать","Отмена");
	}
}
stock duel_delete(id,bool:end) {
	if(id != -1) {
		foreach(new i:Player) {
			if(!TI[i][tLogin]) continue;
			if(TI[i][tDuel] != id) continue;
			if(end == false) {
				SendOk(i,"Лобби удалено, все члены лобби распущены");
				GiveMoney(i,DI[id][duel_money],"возвращение взноса дуэль");
			}
			TI[i][tDuel] = -1;
			TI[i][tDuelLobby] = -1;
		}
		DI[id][duel_owner_id] = DI[id][duel_id][0] = DI[id][duel_id][1] = DI[id][duel_id][2] = DI[id][duel_id][3] = DI[id][duel_id][4] = DI[id][duel_id][5] = INVALID_PLAYER_ID;
		DI[id][duel_gun] = DI[id][duel_gun_2] = 0;
		DI[id][duel_money] = 1000;
		DI[id][duel_raund] = 1;
		DI[id][duel_type] = 0;
		DI[id][duel_map] = 0;
		DI[id][duel_health] = 100;
		DI[id][duel_armour] = 0;
		DI[id][duel_start] = false;
		DI[id][duel_create] = false;
		DI[id][duel_password] = 0;
		DI[id][duel_point_1] = DI[id][duel_point_2] = DI[id][duel_vw] = 0;
	}
}
stock duel_enter(playerid,id) {
	static const f_str[] = ""P"№ Наименование\t"P"Значение\n\
						"P"1."W" Создатель\t"GREEN"%s\n\
						"P"2."W" Тип\t"GREEN"%s\n\
						"P"3."W" Раунды\t"GREEN"%d\n\
						"P"4."W" Взнос\t"ORANGE"$%d\n\
						"P"5."W" Оружие\t"GREEN"%s\n\
						"P"6."W" Доп. Оружие\t"GREEN"%s\n\
						"P"7."W" Карта\t"GREEN"%s\n\
						"P"8."W" Здоровье\t"GREEN"%d\n\
						"P"9."W" Броня\t"GREEN"%d";
	new string[sizeof(f_str) + 100];
	new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
	new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
	new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
	new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};

	format(string,sizeof(string),f_str,player_name[DI[id][duel_owner_id]],duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour]);
	return D(playerid,D_DUEL_3,DSTH,""P"Дуэли | Информация",string,"Войти","Отмена");
}
stock duel_lobby_2(playerid,id) {
	new string[256],name[30],name_2[30],name_3[30],name_4[30];
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) format(name,sizeof(name),"1. %s\n",player_name[DI[id][duel_id][0]]);
	else format(name,sizeof(name),"1. ----\n");
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) format(name_2,sizeof(name_2),"2. %s\n",player_name[DI[id][duel_id][1]]);
	else format(name_2,sizeof(name_2),"2. ----\n");
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) format(name_3,sizeof(name_3),"1. %s\n",player_name[DI[id][duel_id][2]]);
	else format(name_3,sizeof(name_3),"1. ----\n");
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) format(name_4,sizeof(name_4),"2. %s\n",player_name[DI[id][duel_id][3]]);
	else format(name_4,sizeof(name_4),"2. ----\n");
	format(string,sizeof(string),"%s\n%s\n \n%s\n%s",name,name_2,name_3,name_4);
	D(playerid,D_DUEL_4,DSL,""P"Лобби",string,"Выбрать","Покинуть");
	return 1;
}
stock duel_lobby_3(playerid,id) {
	new string[256],name[30],name_2[30],name_3[30],name_4[30],name_5[30],name_6[30];
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) format(name,sizeof(name),"1. %s\n",player_name[DI[id][duel_id][0]]);
	else format(name,sizeof(name),"1. ----\n");
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) format(name_2,sizeof(name_2),"2. %s\n",player_name[DI[id][duel_id][1]]);
	else format(name_2,sizeof(name_2),"2. ----\n");
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) format(name_3,sizeof(name_3),"3. %s\n",player_name[DI[id][duel_id][2]]);
	else format(name_3,sizeof(name_3),"3. ----\n");
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) format(name_4,sizeof(name_4),"1. %s\n",player_name[DI[id][duel_id][3]]);
	else format(name_4,sizeof(name_4),"1. ----\n");
	if(DI[id][duel_id][4] != INVALID_PLAYER_ID) format(name_5,sizeof(name_5),"2. %s\n",player_name[DI[id][duel_id][4]]);
	else format(name_5,sizeof(name_5),"2. ----\n");
	if(DI[id][duel_id][5] != INVALID_PLAYER_ID) format(name_6,sizeof(name_6),"3. %s\n",player_name[DI[id][duel_id][5]]);
	else format(name_6,sizeof(name_6),"3. ----\n");
	format(string,sizeof(string),"%s\n%s\n%s\n \n%s\n%s\n%s",name,name_2,name_3,name_4,name_5,name_6);
	D(playerid,D_DUEL_5,DSL,""P"Лобби",string,"Выбрать","Покинуть");
	return 1;
}
stock duel_exit(playerid,id) {
	switch(TI[playerid][tDuelLobby]) {
		case 0: DI[id][duel_id][0]   = INVALID_PLAYER_ID;
		case 1: DI[id][duel_id][1] = INVALID_PLAYER_ID;
		case 2: DI[id][duel_id][2] = INVALID_PLAYER_ID;
		case 3: DI[id][duel_id][3] = INVALID_PLAYER_ID;
		case 4: DI[id][duel_id][4] = INVALID_PLAYER_ID;
		case 5: DI[id][duel_id][5] = INVALID_PLAYER_ID;
	}
}
stock start_duel_1(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][0],1666.8864,1344.3644,2515.3765,DI[id][duel_id][1]+1,0);
		SetPlayerFacingAngle(DI[id][duel_id][0], 268.5859);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		DelGun(DI[id][duel_id][0]);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][0], COLOR_RED);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][1],1690.8783,1344.3864,2515.3765,DI[id][duel_id][1]+1,0);
		SetPlayerFacingAngle(DI[id][duel_id][1],90.6343);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		DelGun(DI[id][duel_id][1]);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][1], COLOR_BLUE);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
}
stock start_duel_2(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][0],1690.6786,1333.3387,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][0], 60.2641);
		TogglePlayerControllable(DI[id][duel_id][0], 1);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][0], COLOR_RED);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][1],1690.0475,1352.0634,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][1],103.8178);
		TogglePlayerControllable(DI[id][duel_id][1], 1);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][1], COLOR_RED);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][2],1668.1543,1352.7336,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][2],239.4924);
		TogglePlayerControllable(DI[id][duel_id][2], 1);
		SetCameraBehindPlayer(DI[id][duel_id][2]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][2], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][2], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][2], COLOR_BLUE);
		DI[id][duel_leave][2] = 0;
	}
	else DI[id][duel_leave][2] = 1;
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][3],1667.2173,1334.7279,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][3],286.8062);
		TogglePlayerControllable(DI[id][duel_id][3], 1);
		SetCameraBehindPlayer(DI[id][duel_id][3]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][3], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][3], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][3], COLOR_BLUE);
		DI[id][duel_leave][3] = 0;
	}
	else DI[id][duel_leave][3] = 1;
}
stock start_duel_3(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][0],1690.6786,1333.3387,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][0], 60.2641);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		TogglePlayerControllable(DI[id][duel_id][0], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][0], COLOR_RED);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][1],1690.0475,1352.0634,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][1],103.8178);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		TogglePlayerControllable(DI[id][duel_id][1], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][1], COLOR_RED);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][2],1690.8053,1344.2802,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][2],90.0545);
		SetCameraBehindPlayer(DI[id][duel_id][2]);
		TogglePlayerControllable(DI[id][duel_id][2], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][2], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][2], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][2], COLOR_RED);
		DI[id][duel_leave][2] = 0;
	}
	else DI[id][duel_leave][2] = 1;
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][3],1668.1543,1352.7336,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][3],239.4924);
		SetCameraBehindPlayer(DI[id][duel_id][3]);
		TogglePlayerControllable(DI[id][duel_id][3], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][3], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][3], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][3], COLOR_BLUE);
		DI[id][duel_leave][3] = 0;
	}
	else DI[id][duel_leave][3] = 1;
	if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][4],1667.2173,1334.7279,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][4],286.8062);
		SetCameraBehindPlayer(DI[id][duel_id][4]);
		TogglePlayerControllable(DI[id][duel_id][4], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][4], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][4], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][4], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][4], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][4], COLOR_BLUE);
		DI[id][duel_leave][4] = 0;
	}
	else DI[id][duel_leave][4] = 1;
	if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][5],1666.4225,1344.4668,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][5],265.1860);
		SetCameraBehindPlayer(DI[id][duel_id][5]);
		TogglePlayerControllable(DI[id][duel_id][5], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][5], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][5], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][5], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][5], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][5], COLOR_BLUE);
		DI[id][duel_leave][5] = 0;
	}
	else DI[id][duel_leave][5] = 1;
}
stock end_duel(playerid,type) {
	new id = TI[playerid][tDuel];
	switch(DI[TI[playerid][tDuel]][duel_type]) {
		case 0: {
			switch(type) {
				case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_leave][0] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_1(id);
						else duel_end_1(playerid);
					}
					else if(DI[id][duel_leave][1] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_1(id);
						else duel_end_1(playerid);
					}
				}
				case 1: {
					if(DI[id][duel_id][0] == playerid) {
						DelGun(DI[id][duel_id][0]);
						if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PI[DI[id][duel_id][0]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_point_2]++;
						duel_end_1(playerid);
					}
					if(DI[id][duel_id][1] == playerid) {
						DelGun(DI[id][duel_id][1]);
						if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PI[DI[id][duel_id][1]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						DI[id][duel_point_2]++;
						duel_end_1(playerid);
					}
				}
			}
		}
		case 1: {
			switch(type) {
				case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_id][2] == playerid) DI[id][duel_leave][2] = 1;
					if(DI[id][duel_id][3] == playerid) DI[id][duel_leave][3] = 1;
					if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_2(id);
						else duel_end_2(playerid);
					}
					else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_2(id);
						else duel_end_2(playerid);
					}
					else {
						SetPlayerPosAC(playerid, 1708.4227,1342.3707,2525.3727,DI[id][duel_vw],true);
						TogglePlayerControllable(playerid,0);
						SetPlayerInterior(playerid, 0);
					    SetPlayerCameraPos(playerid, 1679.155151, 1341.519409, 2545.137939);
					    SetPlayerCameraLookAt(playerid, 1679.162963, 1341.955078, 2540.156982);
					    Streamer_Update(playerid);
					}
				}
				case 1: {
					if(DI[id][duel_id][0] == playerid) {
						DelGun(DI[id][duel_id][0]);
						if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PI[DI[id][duel_id][0]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_leave][0] = 1;
						DI[id][duel_id][0] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][1] == playerid) {
						DelGun(DI[id][duel_id][1]);
						if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PI[DI[id][duel_id][1]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][2] == playerid) {
						DelGun(DI[id][duel_id][2]);
						if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
							A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PI[DI[id][duel_id][2]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
						DI[id][duel_leave][2] = 1;
						DI[id][duel_id][2] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][3] == playerid) {
						DelGun(DI[id][duel_id][3]);

						if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
							A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PI[DI[id][duel_id][3]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
						DI[id][duel_leave][3] = 1;
						DI[id][duel_id][3] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
				}
			}
		}
		case 2: {
			switch(type) {
				case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_id][2] == playerid) DI[id][duel_leave][2] = 1;
					if(DI[id][duel_id][3] == playerid) DI[id][duel_leave][3] = 1;
					if(DI[id][duel_id][4] == playerid) DI[id][duel_leave][4] = 1;
					if(DI[id][duel_id][5] == playerid) DI[id][duel_leave][5] = 1;
					if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_3(id);
						else duel_end_3(playerid);
					}
					else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_3(id);
						else duel_end_3(playerid);
					}
					else {
						SetPlayerPosAC(playerid, 1708.4227,1342.3707,2525.3727,DI[id][duel_vw],true);
						TogglePlayerControllable(playerid,0);
						SetPlayerInterior(playerid, 0);
					    SetPlayerCameraPos(playerid, 1679.155151, 1341.519409, 2545.137939);
					    SetPlayerCameraLookAt(playerid, 1679.162963, 1341.955078, 2540.156982);
					    Streamer_Update(playerid);
					}
				}
				case 1: {
					if(DI[id][duel_id][0] == playerid) {
						DelGun(DI[id][duel_id][0]);
						if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PI[DI[id][duel_id][0]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_leave][0] = 1;
						DI[id][duel_id][0] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][1] == playerid) {
						DelGun(DI[id][duel_id][1]);
						if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PI[DI[id][duel_id][1]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][0] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][2] == playerid) {
						DelGun(DI[id][duel_id][2]);
						if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
							A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PI[DI[id][duel_id][2]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
						DI[id][duel_leave][2] = 1;
						DI[id][duel_id][2] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][3] == playerid) {
						DelGun(DI[id][duel_id][3]);

						if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
							A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PI[DI[id][duel_id][3]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
						DI[id][duel_leave][3] = 1;
						DI[id][duel_id][3] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][4] == INVALID_PLAYER_ID && DI[id][duel_id][5] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][4] == playerid) {
						DelGun(DI[id][duel_id][4]);

						if(PI[DI[id][duel_id][4]][pMember] && start_work[DI[id][duel_id][4]]) {
							A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][4],gFractionSpawn[PI[DI[id][duel_id][4]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
						DI[id][duel_leave][4] = 1;
						DI[id][duel_id][4] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID && DI[id][duel_id][5] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][5] == playerid) {
						DelGun(DI[id][duel_id][5]);

						if(PI[DI[id][duel_id][5]][pMember] && start_work[DI[id][duel_id][5]]) {
							A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][5],gFractionSpawn[PI[DI[id][duel_id][5]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
						DI[id][duel_leave][5] = 1;
						DI[id][duel_id][5] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID && DI[id][duel_id][4] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
				}
			}
		}
	}
	return 1;
}
stock duel_end_1(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][0],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PI[DI[id][duel_id][0]][pMember],1);

			if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PI[DI[id][duel_id][0]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][1],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][1],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PI[DI[id][duel_id][1]][pMember],1);

			if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PI[DI[id][duel_id][1]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][0],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
}
stock duel_end_2(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][0],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PI[DI[id][duel_id][0]][pMember],1);

			if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PI[DI[id][duel_id][0]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][1],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PI[DI[id][duel_id][1]][pMember],1);

			if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PI[DI[id][duel_id][1]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][2],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][3],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][2],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][2],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][2]);

			if(DI[id][duel_id][2]) add_gang_points(PI[DI[id][duel_id][2]][pMember],1);

			if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
				A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PI[DI[id][duel_id][2]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][3],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][3],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][3]);

			if(DI[id][duel_id][3]) add_gang_points(PI[DI[id][duel_id][3]][pMember],1);

			if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
				A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PI[DI[id][duel_id][3]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][0],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][1],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
}
stock duel_end_3(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][0],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PI[DI[id][duel_id][0]][pMember],1);

			if(PI[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PI[DI[id][duel_id][0]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PI[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][1],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PI[DI[id][duel_id][1]][pMember],1);

			if(PI[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PI[DI[id][duel_id][1]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PI[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][2],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][2],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][2]);

			if(DI[id][duel_id][2]) add_gang_points(PI[DI[id][duel_id][2]][pMember],1);

			if(PI[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
				A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PI[DI[id][duel_id][2]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][2],PI[DI[id][duel_id][2]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][3],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][4],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][5],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][3],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][3],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][3]);

			if(DI[id][duel_id][3]) add_gang_points(PI[DI[id][duel_id][3]][pMember],1);

			if(PI[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
				A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][2]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PI[DI[id][duel_id][3]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][3],PI[DI[id][duel_id][3]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][4],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][4],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][4]);

			if(DI[id][duel_id][4]) add_gang_points(PI[DI[id][duel_id][4]][pMember],1);

			if(PI[DI[id][duel_id][4]][pMember] && start_work[DI[id][duel_id][4]]) {
				A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][4],gFractionSpawn[PI[DI[id][duel_id][4]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][4],PI[DI[id][duel_id][4]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][5],DI[id][duel_money]*2,"выигрыш дуэль");
			SendOk(DI[id][duel_id][5],"Вы победили в дуэли");
			DelGun(DI[id][duel_id][5]);

			if(DI[id][duel_id][5]) add_gang_points(PI[DI[id][duel_id][5]][pMember],1);

			if(PI[DI[id][duel_id][5]][pMember] && start_work[DI[id][duel_id][5]]) {
				A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][5],gFractionSpawn[PI[DI[id][duel_id][5]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][5],PI[DI[id][duel_id][5]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][0],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][1],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][2],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
}
stock GetTheftTimelimit(playerid){ //угон
	switch(PI[playerid][ptheftSkill]){
		case 0: return 1200;
		case 1: return 1170;
		case 2: return 1140;
		case 3: return 1110;
		case 4: return 1080;
		case 5: return 1050;
		case 6: return 1020;
		case 7: return  990;
		case 8: return 960;
		case 9: return 930;
		case 10: return 900;
		case 11: return 870;
		case 12: return 840;
		case 13: return 810;
		case 14: return 780;
		case 15: return 750;
		case 16: return 720;
		case 17: return 690;
		case 18: return 660;
		case 19: return 630;
		case 20: return 600;
		case 21: return 570;
		case 22: return 540;
		case 23: return 510;
		case 24: return 480;
		case 25: return 450;
	}
	return 0;
}
stock GetSalaryTheeft(playerid){ //угон
	switch(PI[playerid][ptheftSkill]){
		case 0: return 500;
		case 1: return 700;
		case 2: return 1000;
		case 3: return 1500;
		case 4: return 2000;
		case 5: return 2500;
		case 6: return 3000;
		case 7: return  3500;
		case 8: return 4000;
		case 9: return 4500;
		case 10: return 5000;
		case 11: return 5500;
		case 12: return 6000;
		case 13: return 6500;
		case 14: return 7000;
		case 15: return 8000;
		case 16: return 9000;
		case 17: return 10000;
		case 18: return 11000;
		case 19: return 12000;
		case 20: return 13000;
		case 21: return 14500;
		case 22: return 16000;
		case 23: return 17500;
		case 24: return 19000;
		case 25: return 21000;
	}
	return 0;
}

stock GetLimitTheeft(playerid){ //угон
	switch(PI[playerid][ptheftSkill]){
		case 0: return 210;
		case 1: return 240;
		case 2: return 270;
		case 3: return 300;
		case 4: return 330;
		case 5: return 360;
		case 6: return 390;
		case 7: return  420;
		case 8: return 450;
		case 9: return 480;
		case 10: return 510;
		case 11: return 540;
		case 12: return 570;
		case 13: return 600;
		case 14: return 630;
		case 15: return 660;
		case 16: return 690;
		case 17: return 720;
		case 18: return 750;
		case 19: return 780;
		case 20: return 810;
		case 21: return 840;
		case 22: return 870;
		case 23: return 900;
		case 24: return 930;
		case 25: return 960;
	}
	return 0;
}
CB: TimeReportBot() {
	new repscount = 0, queryrep[70];
	for(new repID;repID<MAX_REPORTS;repID++) {
		if(PlayerReport[repID] != -1) repscount++;
	}
	format(queryrep, sizeof(queryrep), "UPDATE `reports` SET `count` = '%d' WHERE `id` = 1",repscount);
	mysql_tquery(connects,queryrep,"","");
	return true;
}
stock srace_end(playerid,type) {
	DestroyDynamicCP(TI[playerid][tRaceCP]);
	DestroyDynamicCP(TI[TI[playerid][tRaceID]][tRaceCP]);
	DisablePlayerCheckpoint(playerid);
	DisablePlayerCheckpoint(TI[playerid][tRaceID]);
	switch(type) {
		case 0: {
			new string[128];
			format(string,sizeof(string),"Вы одержали победу в уличных гонках над "W"%s"G". Вознаграждение: "ORANGE"$%d",player_name[TI[playerid][tRaceID]],TI[playerid][tRaceMoney]*2);
			SendOk(playerid,string);

			format(string,sizeof(string),"Вы проиграли в уличных гонках "W"%s",player_name[playerid],TI[playerid][tRaceMoney]*2);
			ErrorMessage(TI[playerid][tRaceID],string);

			GiveMoney(playerid,TI[playerid][tRaceMoney]*2,"победа в уличных гонках");
			if(PI[playerid][pMember]) add_gang_points(PI[playerid][pMember],1);
		}
		case 1,2: {
			new string[128];
			if(type == 1) {
				format(string,sizeof(string),"Игрок покинул сервер. Вы одержали победу в уличных гонках над "W"%s"G". Вознаграждение: "ORANGE"$%d",player_name[playerid],TI[playerid][tRaceMoney]*2);
				SendOk(TI[playerid][tRaceID],string);
			}
			if(type == 2) {
				format(string,sizeof(string),"Игрок покинул Т/С. Вы одержали победу в уличных гонках над "W"%s"G". Вознаграждение: "ORANGE"$%d",player_name[playerid],TI[playerid][tRaceMoney]*2);
				SendOk(TI[playerid][tRaceID],string);

				format(string,sizeof(string),"Вы покинули Т/С во время гонки. Победитель гонки: "W"%s",player_name[TI[playerid][tRaceID]]);
				ErrorMessage(playerid,string);
			}
			GiveMoney(TI[playerid][tRaceID],TI[playerid][tRaceMoney]*2,"победа в уличных гонках");
			if(PI[TI[playerid][tRaceID]][pMember]) add_gang_points(PI[TI[playerid][tRaceID]][pMember],1);
		}
	}
	TI[playerid][tRaceMoney] = TI[TI[playerid][tRaceID]][tRaceMoney] = 0;
	TI[playerid][tRaceID] = TI[TI[playerid][tRaceID]][tRaceID] = INVALID_PLAYER_ID;
}
stock save_fracveh(slot) {
	A_DestroyVehicle(FracVehicle[slot][fvehCar]);
	FracVehicle[slot][fvehCar] = INVALID_VEHICLE_ID;
	if(FracVehicle[slot][fvehTime] > unix) {
		UpdateFractionVehicle(slot,"fvehModelNew",FracVehicle[slot][fvehModelNew]);
		FracVehicle[slot][fvehCar] = CreateOrgsVehicle(FracVehicle[slot][fvehFrac],1,FracVehicle[slot][fvehModelNew], FracVehicle[slot][fvehcCoords][0], FracVehicle[slot][fvehcCoords][1], FracVehicle[slot][fvehcCoords][2], FracVehicle[slot][fvehcCoords][3],FracVehicle[slot][fvehColor][0],FracVehicle[slot][fvehColor][1], RES_CAR_TIME);
	}
	else FracVehicle[slot][fvehCar] = CreateOrgsVehicle(FracVehicle[slot][fvehFrac],1,FracVehicle[slot][fvehModel], FracVehicle[slot][fvehcCoords][0], FracVehicle[slot][fvehcCoords][1], FracVehicle[slot][fvehcCoords][2], FracVehicle[slot][fvehcCoords][3],FracVehicle[slot][fvehColor][0],FracVehicle[slot][fvehColor][1], RES_CAR_TIME);	
	UpdateFractionVehicle(slot,"fvehTime",FracVehicle[slot][fvehTime]);
}
stock add_gang_points(member,points) {
	FI[member][fPoints] += points;
	UpdateFraction(member,"fPoints",FI[member][fPoints]);
	FI[member][fRating] += points;
	UpdateFraction(member,"fRating",FI[member][fRating]);
}
stock gangtops() {
	new Cache:result = mysql_query(connects, "SELECT `ID`, `fRating` FROM `fractions` ORDER BY `fRating` DESC LIMIT 3");
	new rows = cache_num_rows();
	new string[128],id;
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name_int(i, "ID",id);
			if(i == 0) {
				format(string,sizeof(string),"%s занимает 1 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] = 1000000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				FI[id][fBank] += 500000;
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
			if(i == 1) {
				format(string,sizeof(string),"%s занимает 2 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] = 700000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				FI[id][fBank] += 250000;
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
			if(i == 2) {
				format(string,sizeof(string),"%s занимает 3 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] = 500000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				FI[id][fBank] += 100000;
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
		}
	}
	cache_delete(result);

	FI[fBALLAS][fRating] = FI[fVAGOS][fRating] = FI[fGROVE][fRating] = FI[fAZTEC][fRating] = FI[fRIFA][fRating] = 0;
	UpdateFraction(fBALLAS,"fPoints",FI[fBALLAS][fPoints]);
	UpdateFraction(fVAGOS,"fPoints",FI[fVAGOS][fPoints]);
	UpdateFraction(fGROVE,"fPoints",FI[fGROVE][fPoints]);
	UpdateFraction(fAZTEC,"fPoints",FI[fAZTEC][fPoints]);
	UpdateFraction(fRIFA,"fPoints",FI[fRIFA][fPoints]);
}
stock dialog_lmenu(playerid,listitem) {
	switch(listitem) {
		case 0..3: {
			new string[1256];
			for(new i=1; i<=FI[GetTeamID(playerid)][fMaxRang]; i++) {
				new frac_rank_check = -1;
				if(listitem == 0) frac_rank_check = FI[PI[playerid][pMember]][fInviteRang];
				else if(listitem == 1) frac_rank_check = FI[PI[playerid][pMember]][fUninviteRang];
				else if(listitem == 2) frac_rank_check = FI[PI[playerid][pMember]][fGiveRang];
				else if(listitem == 3) frac_rank_check = FI[PI[playerid][pMember]][fUseStock];
				if(frac_rank_check == -1) return true;
				format(string,sizeof(string),"%s%i. %s%s\n", string,i,(i==frac_rank_check)?(""P""):(""W""),GetRankName(PI[playerid][pMember],i));
			}
			SetPVarInt(playerid,"leader_rank", listitem);
			D(playerid,D_LMENU_RANK,DSL,""P"Выберите ранг",string,"Выбрать", "Закрыть");
		}
		case 4: D(playerid, D_LMENU_TEXT, DSI, ""P"Сообщение фракции", "\n\n"W"Введите сообщение, которое будет показано членам Вашей организации при входе:\nДля удаления сообщения введите: "ORANGE"None\n\n", "Ввод", "Отмена");
		case 5: {
			static const f_str[] = ""W"Состояние счета: "ORANGE"$%d\n"P"1."W" Снять деньги";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,FI[PI[playerid][pMember]][fBank]);
			D(playerid,D_LMENU_BANK,DSL,""P"Управление банком фракции",string,"Далее","Назад");
		}
		case 6: {
			for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(!IsValidVehicle(i)) continue;
				if(VehicleInfo[i][vTeam] != PI[playerid][pMember]) continue;
				if(IsVehicleOccupied(i)) continue;
				SetVehicleToRespawn(i);
			}
			new string[128];
			format(string,sizeof(string),"[F] %s %s заспавнил незанятые машины", GetRankName(PI[playerid][pMember],PI[playerid][pRank]),player_name[playerid],playerid);
			SendFamilyMessage(PI[playerid][pMember],COLOR_LIGHTRED, string);
		}
		case 7: {
			if(FI[GetTeamID(playerid)][fAntiTK]) {
				FI[GetTeamID(playerid)][fAntiTK] = 0;
				SendOk(playerid,"Функция Анти Team Kill успешно отключена");
			}
			else {
				FI[GetTeamID(playerid)][fAntiTK] = 1;
				SendOk(playerid,"Функция Анти Team Kill успешно включена");
			}
			UpdateFraction(GetTeamID(playerid),"AntiTk",FI[GetTeamID(playerid)][fAntiTK]);
		}
		case 8: {
			new string[1256];
			strcat(string, ""W"");
			for(new i = 1; i <= FI[GetTeamID(playerid)][fMaxRang]; i++) {
				format(string,sizeof(string),"%s%s\n",string,GetRankName(PI[playerid][pMember],i));
			}
			D(playerid,D_EDIT_RANK_1,DSL,""P"Выберите ранг",string,"Выбрать","Назад");
			return 1;
		}
		case 9: {
			if(!IsAGang(playerid) && !IsAMafia(playerid)) return 1;
			dialog_diplom(playerid,true);
		}
		case 10: D(playerid,D_GANG_POINT,DSL,""P"Выберите ранг",""P"1."W" Управление автомобилями","Выбрать","Назад");
	}
	return 1;
}
stock show_vip(playerid,vip) {
	static const f_str[] = "Наименование\tФактор\n\
	"W"Каждый PayDay\t"P"%d EXP\n\
	"W"Возможность нахождение в AFK до -ти сек\t"P"%d\n\
	"W"Получение вод. удостоверения без прохождения практической части. (только теория)\t"P"%d\n\
	"W"При достижении нового уровня бонус $\t"P"%d\n\
	"W"Лечение в больницах в раза быстрее\t"P"%d x\n\
	"W"Время в КПЗ и ДеМоргане в  раза истекает быстрее\t"P"%d x\n\
	"W"Время бан чата в  раза истекает быстрее\t"P"%d x\n\
	"W"Просмотр администрации в online /admins\t"P"%d\n\
	"W"Маски действуют минут\t"P"%d\n\
	"W"Патроны на складе армий в разы быстрее\t"P"%d x\n\
	"W"Уровень розыска спадает в разы быстрее\t"P"%d x\n\
	"W"Рюкзак игрока вмещает аптечек\t"P"%d\n\
	"W"Рюкзак игрока вмещает масок\t"P"%d\n\
	"W"Рюкзак игрока вмещает канистр с бензином\t"P"%d\n\
	"W"Рюкзак игрока вмещает отмычек\t"P"%d\n\
	"W"Рюкзак игрока вмещает боеприпасов\t"P"%d\n\
	"W"Рюкзак игрока вмещает наркотиков\t"P"%d\n\
	"W"Испытывать голод персонаж будет реже\t"P"%f\n\
	"W"В семью каждый PayDay выдается поинтов\t"P"%d\n\
	"W"Перевод в банках разрешен до $N за раз\t"P"%d\n\
	"W"Процентов к зарплате каждый Pay Day от организации\t"P"%d %%\n\
	"W"Процентов к зарплате от Лесопилка, Нефтезавод, Оружейный Завод, Яблочный Сад\t"P"%d %%\n\
	"W"Получение лицензии на воздух без без прохождения практической части. (только теория)\t"P"%d\n\
	"W"Бесплатная доставка машины домой\t"P"%d\n\
	"W"Скидка на аренду номера в отеле\t"P"%d %%\n\
	"W"Скидка на одежду\t"P"%d %%\n\
	"W"Скидка на покупку транспорта\t"P"%d %%\n\
	"W"Скидка на аренду транспорта\t"P"%d %%\n\
	"W"Скидка на улучшение дома \t"P"%d %%\n\
	"W"Скидка на стоимость смены пола\t"P"%d %%\n\
	"W"Скидка на получение номеров ТС\t"P"%d %%\n\
	"W"Скидка на улучшения в Perfomance Tune\t"P"%d %%\n\
	"W"Скидка на тюнинг в Автомастерской\t"P"%d %%\n\
	"W"Сокращение времени бонусного кейса до минут\t"P"%d\n\
	"W"Максимальное количество HP\t"P"%d\n\
	"W"Одна аптечка пополняет HP\t"P"%d\n\
	"W"Бесплатная смена Nick Name раз в дня\t"P"%d\n\
	"W"Получение лицензии на оружие без мед. печати\t"P"%d\n\
	"W"При подаче объявления в /ad Ваше объявление будет выделятся тэгом [VIP]\t"P"%d\n\
	"W"Вход в бизнес дешевле в\t"P"%d\n\
	"W"Больше не надо ездить к "BotName" /vad (/vad)\t"P"%d\n\
	"W"SMS другим игрокам бесплатные, больше не нужно пополнять телефон\t"P"%d\n\
	"W"Лечение болезней в  раза дешевле\t"P"%d\n\
	"W"Ограничение /pay поднимается до\t"P"%d\n\
	"W"VIP-чат [/v]\t"P"%d\n\
	"W"Звонки другим игрокам бесплатные, больше не нужно пополнять телефон\t"P"%d\n\
	"W"Цвет ника в репорте будет другой\t"P"%d";
	new string[sizeof(f_str) + 80];
	format(string,sizeof(string),f_str,
		vip_status[vip][vip_payday],
		vip_status[vip][vip_afk],
		vip_status[vip][vip_carlic],
		vip_status[vip][vip_lvl],
		vip_status[vip][vip_healtime],
		vip_status[vip][vip_arrest],
		vip_status[vip][vip_mute],
		vip_status[vip][vip_admins],
		vip_status[vip][vip_mask_time],
		vip_status[vip][vip_armmats],
		vip_status[vip][vip_search],
		vip_status[vip][vip_heal],
		vip_status[vip][vip_mask],
		vip_status[vip][vip_fuel],
		vip_status[vip][vip_jimmy],
		vip_status[vip][vip_mats],
		vip_status[vip][vip_drugs],
		vip_status[vip][vip_satiety],
		vip_status[vip][vip_fam_point],
		vip_status[vip][vip_transfer_bank],
		vip_status[vip][vip_percent_job],
		vip_status[vip][vip_percent_startjob],
		vip_status[vip][vip_flylic],
		vip_status[vip][vip_fixcar],
		vip_status[vip][vip_hotel],
		vip_status[vip][vip_chose],
		vip_status[vip][vip_buycar],
		vip_status[vip][vip_rentcar],
		vip_status[vip][vip_houseupdate],
		vip_status[vip][vip_changesex],
		vip_status[vip][vip_number],
		vip_status[vip][vip_perfonans],
		vip_status[vip][vip_tune],
		vip_status[vip][vip_rulet],
		vip_status[vip][vip_hp],
		vip_status[vip][vip_useheal],
		vip_status[vip][vip_changename],
		vip_status[vip][vip_gunlic],
		vip_status[vip][vip_ad],
		vip_status[vip][vip_enterbizz],
		vip_status[vip][vip_vad],
		vip_status[vip][vip_sms],
		vip_status[vip][vip_disease],
		vip_status[vip][vip_pay],
		vip_status[vip][vip_chat],
		vip_status[vip][vip_call],
		vip_status[vip][vip_report_color]);
	D(playerid, DIALOG_NONE, DSTH, ""P"Информация",string, "Закрыть", "");
	//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
}
//=-=-=-=-=-=-=-==-=-=-=-by author sliv & devel vk.com/marixyanai & vk.com/huracan_delovers=--==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
